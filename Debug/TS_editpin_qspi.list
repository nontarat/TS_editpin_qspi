
TS_editpin_qspi.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026c30  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002468  08026ed0  08026ed0  00036ed0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000028cc  08029338  08029338  00039338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000008  0802bc04  0802bc04  0003bc04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000018  0802bc0c  0802bc0c  0003bc0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000018  0802bc24  0802bc24  0003bc24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000000c  0802bc3c  0802bc3c  0003bc3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000fc  24000000  0802bc48  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00005584  240000fc  0802bd44  000400fc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  24005680  0802bd44  00045680  2**0
                  ALLOC
 11 ExtFlashSection 000f4de0  90020000  90020000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .ARM.attributes 0000002e  00000000  00000000  00144de0  2**0
                  CONTENTS, READONLY
 13 .comment      000000c2  00000000  00000000  00144e0e  2**0
                  CONTENTS, READONLY
 14 .debug_info   0007ad45  00000000  00000000  00144ed0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000e7cc  00000000  00000000  001bfc15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00002d30  00000000  00000000  001ce3e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00002115  00000000  00000000  001d1118  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00045c83  00000000  00000000  001d322d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0003a724  00000000  00000000  00218eb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0019b2af  00000000  00000000  002535d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000c3cc  00000000  00000000  003ee884  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000047  00000000  00000000  003fac50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	240000fc 	.word	0x240000fc
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08026eb8 	.word	0x08026eb8

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000100 	.word	0x24000100
 80002dc:	08026eb8 	.word	0x08026eb8

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <MX_ADC3_Init>:

ADC_HandleTypeDef hadc3;

/* ADC3 init function */
void MX_ADC3_Init(void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b088      	sub	sp, #32
 8000384:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000386:	1d3b      	adds	r3, r7, #4
 8000388:	2200      	movs	r2, #0
 800038a:	601a      	str	r2, [r3, #0]
 800038c:	605a      	str	r2, [r3, #4]
 800038e:	609a      	str	r2, [r3, #8]
 8000390:	60da      	str	r2, [r3, #12]
 8000392:	611a      	str	r2, [r3, #16]
 8000394:	615a      	str	r2, [r3, #20]
 8000396:	619a      	str	r2, [r3, #24]

  /* USER CODE END ADC3_Init 1 */

  /** Common config
  */
  hadc3.Instance = ADC3;
 8000398:	4b3e      	ldr	r3, [pc, #248]	; (8000494 <MX_ADC3_Init+0x114>)
 800039a:	4a3f      	ldr	r2, [pc, #252]	; (8000498 <MX_ADC3_Init+0x118>)
 800039c:	601a      	str	r2, [r3, #0]
  hadc3.Init.Resolution = ADC_RESOLUTION_16B;
 800039e:	4b3d      	ldr	r3, [pc, #244]	; (8000494 <MX_ADC3_Init+0x114>)
 80003a0:	2200      	movs	r2, #0
 80003a2:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 80003a4:	4b3b      	ldr	r3, [pc, #236]	; (8000494 <MX_ADC3_Init+0x114>)
 80003a6:	2201      	movs	r2, #1
 80003a8:	60da      	str	r2, [r3, #12]
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80003aa:	4b3a      	ldr	r3, [pc, #232]	; (8000494 <MX_ADC3_Init+0x114>)
 80003ac:	2204      	movs	r2, #4
 80003ae:	611a      	str	r2, [r3, #16]
  hadc3.Init.LowPowerAutoWait = DISABLE;
 80003b0:	4b38      	ldr	r3, [pc, #224]	; (8000494 <MX_ADC3_Init+0x114>)
 80003b2:	2200      	movs	r2, #0
 80003b4:	751a      	strb	r2, [r3, #20]
  hadc3.Init.ContinuousConvMode = DISABLE;
 80003b6:	4b37      	ldr	r3, [pc, #220]	; (8000494 <MX_ADC3_Init+0x114>)
 80003b8:	2200      	movs	r2, #0
 80003ba:	755a      	strb	r2, [r3, #21]
  hadc3.Init.NbrOfConversion = 4;
 80003bc:	4b35      	ldr	r3, [pc, #212]	; (8000494 <MX_ADC3_Init+0x114>)
 80003be:	2204      	movs	r2, #4
 80003c0:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = ENABLE;
 80003c2:	4b34      	ldr	r3, [pc, #208]	; (8000494 <MX_ADC3_Init+0x114>)
 80003c4:	2201      	movs	r2, #1
 80003c6:	771a      	strb	r2, [r3, #28]
  hadc3.Init.NbrOfDiscConversion = 1;
 80003c8:	4b32      	ldr	r3, [pc, #200]	; (8000494 <MX_ADC3_Init+0x114>)
 80003ca:	2201      	movs	r2, #1
 80003cc:	621a      	str	r2, [r3, #32]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80003ce:	4b31      	ldr	r3, [pc, #196]	; (8000494 <MX_ADC3_Init+0x114>)
 80003d0:	2200      	movs	r2, #0
 80003d2:	625a      	str	r2, [r3, #36]	; 0x24
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80003d4:	4b2f      	ldr	r3, [pc, #188]	; (8000494 <MX_ADC3_Init+0x114>)
 80003d6:	2200      	movs	r2, #0
 80003d8:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 80003da:	4b2e      	ldr	r3, [pc, #184]	; (8000494 <MX_ADC3_Init+0x114>)
 80003dc:	2200      	movs	r2, #0
 80003de:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80003e0:	4b2c      	ldr	r3, [pc, #176]	; (8000494 <MX_ADC3_Init+0x114>)
 80003e2:	2200      	movs	r2, #0
 80003e4:	631a      	str	r2, [r3, #48]	; 0x30
  hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 80003e6:	4b2b      	ldr	r3, [pc, #172]	; (8000494 <MX_ADC3_Init+0x114>)
 80003e8:	2200      	movs	r2, #0
 80003ea:	635a      	str	r2, [r3, #52]	; 0x34
  hadc3.Init.OversamplingMode = DISABLE;
 80003ec:	4b29      	ldr	r3, [pc, #164]	; (8000494 <MX_ADC3_Init+0x114>)
 80003ee:	2200      	movs	r2, #0
 80003f0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 80003f4:	4827      	ldr	r0, [pc, #156]	; (8000494 <MX_ADC3_Init+0x114>)
 80003f6:	f002 fb2d 	bl	8002a54 <HAL_ADC_Init>
 80003fa:	4603      	mov	r3, r0
 80003fc:	2b00      	cmp	r3, #0
 80003fe:	d001      	beq.n	8000404 <MX_ADC3_Init+0x84>
  {
    Error_Handler();
 8000400:	f000 fb62 	bl	8000ac8 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000404:	2301      	movs	r3, #1
 8000406:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000408:	2306      	movs	r3, #6
 800040a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_387CYCLES_5;
 800040c:	2306      	movs	r3, #6
 800040e:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000410:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8000414:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000416:	2304      	movs	r3, #4
 8000418:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 800041a:	2300      	movs	r3, #0
 800041c:	61bb      	str	r3, [r7, #24]
  sConfig.OffsetSignedSaturation = DISABLE;
 800041e:	2300      	movs	r3, #0
 8000420:	777b      	strb	r3, [r7, #29]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000422:	1d3b      	adds	r3, r7, #4
 8000424:	4619      	mov	r1, r3
 8000426:	481b      	ldr	r0, [pc, #108]	; (8000494 <MX_ADC3_Init+0x114>)
 8000428:	f002 fcb6 	bl	8002d98 <HAL_ADC_ConfigChannel>
 800042c:	4603      	mov	r3, r0
 800042e:	2b00      	cmp	r3, #0
 8000430:	d001      	beq.n	8000436 <MX_ADC3_Init+0xb6>
  {
    Error_Handler();
 8000432:	f000 fb49 	bl	8000ac8 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 8000436:	4b19      	ldr	r3, [pc, #100]	; (800049c <MX_ADC3_Init+0x11c>)
 8000438:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800043a:	230c      	movs	r3, #12
 800043c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800043e:	1d3b      	adds	r3, r7, #4
 8000440:	4619      	mov	r1, r3
 8000442:	4814      	ldr	r0, [pc, #80]	; (8000494 <MX_ADC3_Init+0x114>)
 8000444:	f002 fca8 	bl	8002d98 <HAL_ADC_ConfigChannel>
 8000448:	4603      	mov	r3, r0
 800044a:	2b00      	cmp	r3, #0
 800044c:	d001      	beq.n	8000452 <MX_ADC3_Init+0xd2>
  {
    Error_Handler();
 800044e:	f000 fb3b 	bl	8000ac8 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VBAT;
 8000452:	4b13      	ldr	r3, [pc, #76]	; (80004a0 <MX_ADC3_Init+0x120>)
 8000454:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8000456:	2312      	movs	r3, #18
 8000458:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800045a:	1d3b      	adds	r3, r7, #4
 800045c:	4619      	mov	r1, r3
 800045e:	480d      	ldr	r0, [pc, #52]	; (8000494 <MX_ADC3_Init+0x114>)
 8000460:	f002 fc9a 	bl	8002d98 <HAL_ADC_ConfigChannel>
 8000464:	4603      	mov	r3, r0
 8000466:	2b00      	cmp	r3, #0
 8000468:	d001      	beq.n	800046e <MX_ADC3_Init+0xee>
  {
    Error_Handler();
 800046a:	f000 fb2d 	bl	8000ac8 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 800046e:	4b0d      	ldr	r3, [pc, #52]	; (80004a4 <MX_ADC3_Init+0x124>)
 8000470:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8000472:	2318      	movs	r3, #24
 8000474:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000476:	1d3b      	adds	r3, r7, #4
 8000478:	4619      	mov	r1, r3
 800047a:	4806      	ldr	r0, [pc, #24]	; (8000494 <MX_ADC3_Init+0x114>)
 800047c:	f002 fc8c 	bl	8002d98 <HAL_ADC_ConfigChannel>
 8000480:	4603      	mov	r3, r0
 8000482:	2b00      	cmp	r3, #0
 8000484:	d001      	beq.n	800048a <MX_ADC3_Init+0x10a>
  {
    Error_Handler();
 8000486:	f000 fb1f 	bl	8000ac8 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 800048a:	bf00      	nop
 800048c:	3720      	adds	r7, #32
 800048e:	46bd      	mov	sp, r7
 8000490:	bd80      	pop	{r7, pc}
 8000492:	bf00      	nop
 8000494:	24000118 	.word	0x24000118
 8000498:	58026000 	.word	0x58026000
 800049c:	cfb80000 	.word	0xcfb80000
 80004a0:	c7520000 	.word	0xc7520000
 80004a4:	cb840000 	.word	0xcb840000

080004a8 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 80004a8:	b580      	push	{r7, lr}
 80004aa:	b0b4      	sub	sp, #208	; 0xd0
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	6078      	str	r0, [r7, #4]

  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80004b0:	f107 0310 	add.w	r3, r7, #16
 80004b4:	22c0      	movs	r2, #192	; 0xc0
 80004b6:	2100      	movs	r1, #0
 80004b8:	4618      	mov	r0, r3
 80004ba:	f025 fed8 	bl	802626e <memset>
  if(adcHandle->Instance==ADC3)
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4a28      	ldr	r2, [pc, #160]	; (8000564 <HAL_ADC_MspInit+0xbc>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d149      	bne.n	800055c <HAL_ADC_MspInit+0xb4>

  /* USER CODE END ADC3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80004c8:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 80004cc:	f04f 0300 	mov.w	r3, #0
 80004d0:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.PLL3.PLL3M = 10;
 80004d4:	230a      	movs	r3, #10
 80004d6:	63bb      	str	r3, [r7, #56]	; 0x38
    PeriphClkInitStruct.PLL3.PLL3N = 60;
 80004d8:	233c      	movs	r3, #60	; 0x3c
 80004da:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 80004dc:	2302      	movs	r3, #2
 80004de:	643b      	str	r3, [r7, #64]	; 0x40
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80004e0:	2302      	movs	r3, #2
 80004e2:	647b      	str	r3, [r7, #68]	; 0x44
    PeriphClkInitStruct.PLL3.PLL3R = 6;
 80004e4:	2306      	movs	r3, #6
 80004e6:	64bb      	str	r3, [r7, #72]	; 0x48
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_1;
 80004e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80004ec:	64fb      	str	r3, [r7, #76]	; 0x4c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
 80004ee:	f44f 7300 	mov.w	r3, #512	; 0x200
 80004f2:	653b      	str	r3, [r7, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 80004f4:	2300      	movs	r3, #0
 80004f6:	657b      	str	r3, [r7, #84]	; 0x54
    PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL3;
 80004f8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80004fc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000500:	f107 0310 	add.w	r3, r7, #16
 8000504:	4618      	mov	r0, r3
 8000506:	f007 fd55 	bl	8007fb4 <HAL_RCCEx_PeriphCLKConfig>
 800050a:	4603      	mov	r3, r0
 800050c:	2b00      	cmp	r3, #0
 800050e:	d001      	beq.n	8000514 <HAL_ADC_MspInit+0x6c>
    {
      Error_Handler();
 8000510:	f000 fada 	bl	8000ac8 <Error_Handler>
    }

    /* ADC3 clock enable */
    __HAL_RCC_ADC3_CLK_ENABLE();
 8000514:	4b14      	ldr	r3, [pc, #80]	; (8000568 <HAL_ADC_MspInit+0xc0>)
 8000516:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800051a:	4a13      	ldr	r2, [pc, #76]	; (8000568 <HAL_ADC_MspInit+0xc0>)
 800051c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000520:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000524:	4b10      	ldr	r3, [pc, #64]	; (8000568 <HAL_ADC_MspInit+0xc0>)
 8000526:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800052a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800052e:	60fb      	str	r3, [r7, #12]
 8000530:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000532:	4b0d      	ldr	r3, [pc, #52]	; (8000568 <HAL_ADC_MspInit+0xc0>)
 8000534:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000538:	4a0b      	ldr	r2, [pc, #44]	; (8000568 <HAL_ADC_MspInit+0xc0>)
 800053a:	f043 0304 	orr.w	r3, r3, #4
 800053e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000542:	4b09      	ldr	r3, [pc, #36]	; (8000568 <HAL_ADC_MspInit+0xc0>)
 8000544:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000548:	f003 0304 	and.w	r3, r3, #4
 800054c:	60bb      	str	r3, [r7, #8]
 800054e:	68bb      	ldr	r3, [r7, #8]
    /**ADC3 GPIO Configuration
    PC2_C     ------> ADC3_INP0
    */
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PC2, SYSCFG_SWITCH_PC2_OPEN);
 8000550:	f04f 6180 	mov.w	r1, #67108864	; 0x4000000
 8000554:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 8000558:	f002 f8da 	bl	8002710 <HAL_SYSCFG_AnalogSwitchConfig>

  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }
}
 800055c:	bf00      	nop
 800055e:	37d0      	adds	r7, #208	; 0xd0
 8000560:	46bd      	mov	sp, r7
 8000562:	bd80      	pop	{r7, pc}
 8000564:	58026000 	.word	0x58026000
 8000568:	58024400 	.word	0x58024400

0800056c <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 800056c:	b580      	push	{r7, lr}
 800056e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000570:	4b0d      	ldr	r3, [pc, #52]	; (80005a8 <MX_CRC_Init+0x3c>)
 8000572:	4a0e      	ldr	r2, [pc, #56]	; (80005ac <MX_CRC_Init+0x40>)
 8000574:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000576:	4b0c      	ldr	r3, [pc, #48]	; (80005a8 <MX_CRC_Init+0x3c>)
 8000578:	2200      	movs	r2, #0
 800057a:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 800057c:	4b0a      	ldr	r3, [pc, #40]	; (80005a8 <MX_CRC_Init+0x3c>)
 800057e:	2200      	movs	r2, #0
 8000580:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000582:	4b09      	ldr	r3, [pc, #36]	; (80005a8 <MX_CRC_Init+0x3c>)
 8000584:	2200      	movs	r2, #0
 8000586:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_ENABLE;
 8000588:	4b07      	ldr	r3, [pc, #28]	; (80005a8 <MX_CRC_Init+0x3c>)
 800058a:	2280      	movs	r2, #128	; 0x80
 800058c:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 800058e:	4b06      	ldr	r3, [pc, #24]	; (80005a8 <MX_CRC_Init+0x3c>)
 8000590:	2201      	movs	r2, #1
 8000592:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000594:	4804      	ldr	r0, [pc, #16]	; (80005a8 <MX_CRC_Init+0x3c>)
 8000596:	f003 fa45 	bl	8003a24 <HAL_CRC_Init>
 800059a:	4603      	mov	r3, r0
 800059c:	2b00      	cmp	r3, #0
 800059e:	d001      	beq.n	80005a4 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80005a0:	f000 fa92 	bl	8000ac8 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80005a4:	bf00      	nop
 80005a6:	bd80      	pop	{r7, pc}
 80005a8:	2400017c 	.word	0x2400017c
 80005ac:	58024c00 	.word	0x58024c00

080005b0 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80005b0:	b480      	push	{r7}
 80005b2:	b085      	sub	sp, #20
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <HAL_CRC_MspInit+0x3c>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d10e      	bne.n	80005e0 <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80005c2:	4b0b      	ldr	r3, [pc, #44]	; (80005f0 <HAL_CRC_MspInit+0x40>)
 80005c4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80005c8:	4a09      	ldr	r2, [pc, #36]	; (80005f0 <HAL_CRC_MspInit+0x40>)
 80005ca:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80005ce:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80005d2:	4b07      	ldr	r3, [pc, #28]	; (80005f0 <HAL_CRC_MspInit+0x40>)
 80005d4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80005d8:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80005dc:	60fb      	str	r3, [r7, #12]
 80005de:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 80005e0:	bf00      	nop
 80005e2:	3714      	adds	r7, #20
 80005e4:	46bd      	mov	sp, r7
 80005e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ea:	4770      	bx	lr
 80005ec:	58024c00 	.word	0x58024c00
 80005f0:	58024400 	.word	0x58024400

080005f4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b082      	sub	sp, #8
 80005f8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80005fa:	4b0d      	ldr	r3, [pc, #52]	; (8000630 <MX_DMA_Init+0x3c>)
 80005fc:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000600:	4a0b      	ldr	r2, [pc, #44]	; (8000630 <MX_DMA_Init+0x3c>)
 8000602:	f043 0301 	orr.w	r3, r3, #1
 8000606:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 800060a:	4b09      	ldr	r3, [pc, #36]	; (8000630 <MX_DMA_Init+0x3c>)
 800060c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000610:	f003 0301 	and.w	r3, r3, #1
 8000614:	607b      	str	r3, [r7, #4]
 8000616:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8000618:	2200      	movs	r2, #0
 800061a:	2100      	movs	r1, #0
 800061c:	200b      	movs	r0, #11
 800061e:	f003 f934 	bl	800388a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8000622:	200b      	movs	r0, #11
 8000624:	f003 f94b 	bl	80038be <HAL_NVIC_EnableIRQ>

}
 8000628:	bf00      	nop
 800062a:	3708      	adds	r7, #8
 800062c:	46bd      	mov	sp, r7
 800062e:	bd80      	pop	{r7, pc}
 8000630:	58024400 	.word	0x58024400

08000634 <MX_GPIO_Init>:
     PH1-OSC_OUT (PH1)   ------> RCC_OSC_OUT
     PA13 (JTMS/SWDIO)   ------> DEBUG_JTMS-SWDIO
     PA14 (JTCK/SWCLK)   ------> DEBUG_JTCK-SWCLK
*/
void MX_GPIO_Init(void)
{
 8000634:	b580      	push	{r7, lr}
 8000636:	b08c      	sub	sp, #48	; 0x30
 8000638:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800063a:	f107 031c 	add.w	r3, r7, #28
 800063e:	2200      	movs	r2, #0
 8000640:	601a      	str	r2, [r3, #0]
 8000642:	605a      	str	r2, [r3, #4]
 8000644:	609a      	str	r2, [r3, #8]
 8000646:	60da      	str	r2, [r3, #12]
 8000648:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800064a:	4b67      	ldr	r3, [pc, #412]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 800064c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000650:	4a65      	ldr	r2, [pc, #404]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 8000652:	f043 0310 	orr.w	r3, r3, #16
 8000656:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800065a:	4b63      	ldr	r3, [pc, #396]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 800065c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000660:	f003 0310 	and.w	r3, r3, #16
 8000664:	61bb      	str	r3, [r7, #24]
 8000666:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000668:	4b5f      	ldr	r3, [pc, #380]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 800066a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800066e:	4a5e      	ldr	r2, [pc, #376]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 8000670:	f043 0304 	orr.w	r3, r3, #4
 8000674:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000678:	4b5b      	ldr	r3, [pc, #364]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 800067a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800067e:	f003 0304 	and.w	r3, r3, #4
 8000682:	617b      	str	r3, [r7, #20]
 8000684:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000686:	4b58      	ldr	r3, [pc, #352]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 8000688:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800068c:	4a56      	ldr	r2, [pc, #344]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 800068e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000692:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000696:	4b54      	ldr	r3, [pc, #336]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 8000698:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800069c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80006a0:	613b      	str	r3, [r7, #16]
 80006a2:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80006a4:	4b50      	ldr	r3, [pc, #320]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006a6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006aa:	4a4f      	ldr	r2, [pc, #316]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006ac:	f043 0302 	orr.w	r3, r3, #2
 80006b0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80006b4:	4b4c      	ldr	r3, [pc, #304]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006b6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006ba:	f003 0302 	and.w	r3, r3, #2
 80006be:	60fb      	str	r3, [r7, #12]
 80006c0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80006c2:	4b49      	ldr	r3, [pc, #292]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006c4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006c8:	4a47      	ldr	r2, [pc, #284]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006ca:	f043 0308 	orr.w	r3, r3, #8
 80006ce:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80006d2:	4b45      	ldr	r3, [pc, #276]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006d4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006d8:	f003 0308 	and.w	r3, r3, #8
 80006dc:	60bb      	str	r3, [r7, #8]
 80006de:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80006e0:	4b41      	ldr	r3, [pc, #260]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006e2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006e6:	4a40      	ldr	r2, [pc, #256]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006e8:	f043 0301 	orr.w	r3, r3, #1
 80006ec:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80006f0:	4b3d      	ldr	r3, [pc, #244]	; (80007e8 <MX_GPIO_Init+0x1b4>)
 80006f2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80006f6:	f003 0301 	and.w	r3, r3, #1
 80006fa:	607b      	str	r3, [r7, #4]
 80006fc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, E3_Pin|DISPL_DC_Pin|DISPL_CS_Pin, GPIO_PIN_RESET);
 80006fe:	2200      	movs	r2, #0
 8000700:	f640 4108 	movw	r1, #3080	; 0xc08
 8000704:	4839      	ldr	r0, [pc, #228]	; (80007ec <MX_GPIO_Init+0x1b8>)
 8000706:	f005 ff71 	bl	80065ec <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 800070a:	2200      	movs	r2, #0
 800070c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000710:	4837      	ldr	r0, [pc, #220]	; (80007f0 <MX_GPIO_Init+0x1bc>)
 8000712:	f005 ff6b 	bl	80065ec <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8000716:	2201      	movs	r2, #1
 8000718:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800071c:	4834      	ldr	r0, [pc, #208]	; (80007f0 <MX_GPIO_Init+0x1bc>)
 800071e:	f005 ff65 	bl	80065ec <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = E3_Pin;
 8000722:	2308      	movs	r3, #8
 8000724:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000726:	2301      	movs	r3, #1
 8000728:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800072a:	2300      	movs	r3, #0
 800072c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800072e:	2300      	movs	r3, #0
 8000730:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(E3_GPIO_Port, &GPIO_InitStruct);
 8000732:	f107 031c 	add.w	r3, r7, #28
 8000736:	4619      	mov	r1, r3
 8000738:	482c      	ldr	r0, [pc, #176]	; (80007ec <MX_GPIO_Init+0x1b8>)
 800073a:	f005 fd8f 	bl	800625c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = K1_Pin;
 800073e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000742:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000744:	2300      	movs	r3, #0
 8000746:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000748:	2302      	movs	r3, #2
 800074a:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(K1_GPIO_Port, &GPIO_InitStruct);
 800074c:	f107 031c 	add.w	r3, r7, #28
 8000750:	4619      	mov	r1, r3
 8000752:	4828      	ldr	r0, [pc, #160]	; (80007f4 <MX_GPIO_Init+0x1c0>)
 8000754:	f005 fd82 	bl	800625c <HAL_GPIO_Init>

  /*Configure GPIO pins : PEPin PEPin */
  GPIO_InitStruct.Pin = DISPL_DC_Pin|DISPL_CS_Pin;
 8000758:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800075c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800075e:	2301      	movs	r3, #1
 8000760:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000762:	2300      	movs	r3, #0
 8000764:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000766:	2302      	movs	r3, #2
 8000768:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800076a:	f107 031c 	add.w	r3, r7, #28
 800076e:	4619      	mov	r1, r3
 8000770:	481e      	ldr	r0, [pc, #120]	; (80007ec <MX_GPIO_Init+0x1b8>)
 8000772:	f005 fd73 	bl	800625c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8000776:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800077a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800077c:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000780:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000782:	2301      	movs	r3, #1
 8000784:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8000786:	f107 031c 	add.w	r3, r7, #28
 800078a:	4619      	mov	r1, r3
 800078c:	4817      	ldr	r0, [pc, #92]	; (80007ec <MX_GPIO_Init+0x1b8>)
 800078e:	f005 fd65 	bl	800625c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = TOUCH_CS_Pin;
 8000792:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000796:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000798:	2301      	movs	r3, #1
 800079a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800079c:	2300      	movs	r3, #0
 800079e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80007a0:	2302      	movs	r3, #2
 80007a2:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(TOUCH_CS_GPIO_Port, &GPIO_InitStruct);
 80007a4:	f107 031c 	add.w	r3, r7, #28
 80007a8:	4619      	mov	r1, r3
 80007aa:	4811      	ldr	r0, [pc, #68]	; (80007f0 <MX_GPIO_Init+0x1bc>)
 80007ac:	f005 fd56 	bl	800625c <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 80007b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80007b4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80007b6:	2301      	movs	r3, #1
 80007b8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007ba:	2300      	movs	r3, #0
 80007bc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80007be:	2300      	movs	r3, #0
 80007c0:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 80007c2:	f107 031c 	add.w	r3, r7, #28
 80007c6:	4619      	mov	r1, r3
 80007c8:	4809      	ldr	r0, [pc, #36]	; (80007f0 <MX_GPIO_Init+0x1bc>)
 80007ca:	f005 fd47 	bl	800625c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80007ce:	2200      	movs	r2, #0
 80007d0:	2100      	movs	r1, #0
 80007d2:	2028      	movs	r0, #40	; 0x28
 80007d4:	f003 f859 	bl	800388a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80007d8:	2028      	movs	r0, #40	; 0x28
 80007da:	f003 f870 	bl	80038be <HAL_NVIC_EnableIRQ>

}
 80007de:	bf00      	nop
 80007e0:	3730      	adds	r7, #48	; 0x30
 80007e2:	46bd      	mov	sp, r7
 80007e4:	bd80      	pop	{r7, pc}
 80007e6:	bf00      	nop
 80007e8:	58024400 	.word	0x58024400
 80007ec:	58021000 	.word	0x58021000
 80007f0:	58020400 	.word	0x58020400
 80007f4:	58020800 	.word	0x58020800

080007f8 <MPU_Config>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void MPU_Config(void)
{
 80007f8:	b580      	push	{r7, lr}
 80007fa:	b084      	sub	sp, #16
 80007fc:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80007fe:	463b      	mov	r3, r7
 8000800:	2200      	movs	r2, #0
 8000802:	601a      	str	r2, [r3, #0]
 8000804:	605a      	str	r2, [r3, #4]
 8000806:	609a      	str	r2, [r3, #8]
 8000808:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 800080a:	f003 f881 	bl	8003910 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 800080e:	2301      	movs	r3, #1
 8000810:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 8000812:	2300      	movs	r3, #0
 8000814:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x24000000;
 8000816:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
 800081a:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_128KB;
 800081c:	2310      	movs	r3, #16
 800081e:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x0;
 8000820:	2300      	movs	r3, #0
 8000822:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 8000824:	2300      	movs	r3, #0
 8000826:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000828:	2303      	movs	r3, #3
 800082a:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 800082c:	2301      	movs	r3, #1
 800082e:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 8000830:	2300      	movs	r3, #0
 8000832:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000834:	2301      	movs	r3, #1
 8000836:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 8000838:	2301      	movs	r3, #1
 800083a:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800083c:	463b      	mov	r3, r7
 800083e:	4618      	mov	r0, r3
 8000840:	f003 f89e 	bl	8003980 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8000844:	2301      	movs	r3, #1
 8000846:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x90000000;
 8000848:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
 800084c:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
 800084e:	2316      	movs	r3, #22
 8000850:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000852:	2303      	movs	r3, #3
 8000854:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000856:	2301      	movs	r3, #1
 8000858:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 800085a:	2301      	movs	r3, #1
 800085c:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800085e:	463b      	mov	r3, r7
 8000860:	4618      	mov	r0, r3
 8000862:	f003 f88d 	bl	8003980 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8000866:	2302      	movs	r3, #2
 8000868:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x90020000;
 800086a:	4b0d      	ldr	r3, [pc, #52]	; (80008a0 <MPU_Config+0xa8>)
 800086c:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_8MB;
 800086e:	2316      	movs	r3, #22
 8000870:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000872:	2303      	movs	r3, #3
 8000874:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 8000876:	2300      	movs	r3, #0
 8000878:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 800087a:	2301      	movs	r3, #1
 800087c:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 800087e:	2301      	movs	r3, #1
 8000880:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000882:	463b      	mov	r3, r7
 8000884:	4618      	mov	r0, r3
 8000886:	f003 f87b 	bl	8003980 <HAL_MPU_ConfigRegion>




  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800088a:	463b      	mov	r3, r7
 800088c:	4618      	mov	r0, r3
 800088e:	f003 f877 	bl	8003980 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000892:	2004      	movs	r0, #4
 8000894:	f003 f854 	bl	8003940 <HAL_MPU_Enable>

}
 8000898:	bf00      	nop
 800089a:	3710      	adds	r7, #16
 800089c:	46bd      	mov	sp, r7
 800089e:	bd80      	pop	{r7, pc}
 80008a0:	90020000 	.word	0x90020000

080008a4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008a4:	b580      	push	{r7, lr}
 80008a6:	b084      	sub	sp, #16
 80008a8:	af00      	add	r7, sp, #0
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80008aa:	4b47      	ldr	r3, [pc, #284]	; (80009c8 <main+0x124>)
 80008ac:	695b      	ldr	r3, [r3, #20]
 80008ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80008b2:	2b00      	cmp	r3, #0
 80008b4:	d11b      	bne.n	80008ee <main+0x4a>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80008b6:	f3bf 8f4f 	dsb	sy
}
 80008ba:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80008bc:	f3bf 8f6f 	isb	sy
}
 80008c0:	bf00      	nop

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80008c2:	4b41      	ldr	r3, [pc, #260]	; (80009c8 <main+0x124>)
 80008c4:	2200      	movs	r2, #0
 80008c6:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80008ca:	f3bf 8f4f 	dsb	sy
}
 80008ce:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80008d0:	f3bf 8f6f 	isb	sy
}
 80008d4:	bf00      	nop
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80008d6:	4b3c      	ldr	r3, [pc, #240]	; (80009c8 <main+0x124>)
 80008d8:	695b      	ldr	r3, [r3, #20]
 80008da:	4a3b      	ldr	r2, [pc, #236]	; (80009c8 <main+0x124>)
 80008dc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80008e0:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80008e2:	f3bf 8f4f 	dsb	sy
}
 80008e6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80008e8:	f3bf 8f6f 	isb	sy
}
 80008ec:	e000      	b.n	80008f0 <main+0x4c>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80008ee:	bf00      	nop
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 80008f0:	4b35      	ldr	r3, [pc, #212]	; (80009c8 <main+0x124>)
 80008f2:	695b      	ldr	r3, [r3, #20]
 80008f4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80008f8:	2b00      	cmp	r3, #0
 80008fa:	d138      	bne.n	800096e <main+0xca>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80008fc:	4b32      	ldr	r3, [pc, #200]	; (80009c8 <main+0x124>)
 80008fe:	2200      	movs	r2, #0
 8000900:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000904:	f3bf 8f4f 	dsb	sy
}
 8000908:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
 800090a:	4b2f      	ldr	r3, [pc, #188]	; (80009c8 <main+0x124>)
 800090c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8000910:	60fb      	str	r3, [r7, #12]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000912:	68fb      	ldr	r3, [r7, #12]
 8000914:	0b5b      	lsrs	r3, r3, #13
 8000916:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800091a:	60bb      	str	r3, [r7, #8]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800091c:	68fb      	ldr	r3, [r7, #12]
 800091e:	08db      	lsrs	r3, r3, #3
 8000920:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8000924:	607b      	str	r3, [r7, #4]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000926:	68bb      	ldr	r3, [r7, #8]
 8000928:	015a      	lsls	r2, r3, #5
 800092a:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800092e:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 8000930:	687a      	ldr	r2, [r7, #4]
 8000932:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000934:	4924      	ldr	r1, [pc, #144]	; (80009c8 <main+0x124>)
 8000936:	4313      	orrs	r3, r2
 8000938:	f8c1 3260 	str.w	r3, [r1, #608]	; 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	1e5a      	subs	r2, r3, #1
 8000940:	607a      	str	r2, [r7, #4]
 8000942:	2b00      	cmp	r3, #0
 8000944:	d1ef      	bne.n	8000926 <main+0x82>
    } while(sets-- != 0U);
 8000946:	68bb      	ldr	r3, [r7, #8]
 8000948:	1e5a      	subs	r2, r3, #1
 800094a:	60ba      	str	r2, [r7, #8]
 800094c:	2b00      	cmp	r3, #0
 800094e:	d1e5      	bne.n	800091c <main+0x78>
  __ASM volatile ("dsb 0xF":::"memory");
 8000950:	f3bf 8f4f 	dsb	sy
}
 8000954:	bf00      	nop
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8000956:	4b1c      	ldr	r3, [pc, #112]	; (80009c8 <main+0x124>)
 8000958:	695b      	ldr	r3, [r3, #20]
 800095a:	4a1b      	ldr	r2, [pc, #108]	; (80009c8 <main+0x124>)
 800095c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000960:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000962:	f3bf 8f4f 	dsb	sy
}
 8000966:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000968:	f3bf 8f6f 	isb	sy
}
 800096c:	e000      	b.n	8000970 <main+0xcc>
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 800096e:	bf00      	nop
	 SCB_EnableICache();

		  /* Enable D-Cache */
		  SCB_EnableDCache();

		  MPU_Config();
 8000970:	f7ff ff42 	bl	80007f8 <MPU_Config>
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000974:	f001 fe0a 	bl	800258c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000978:	f000 f828 	bl	80009cc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800097c:	f7ff fe5a 	bl	8000634 <MX_GPIO_Init>
  MX_DMA_Init();
 8000980:	f7ff fe38 	bl	80005f4 <MX_DMA_Init>
  MX_SPI4_Init();
 8000984:	f000 fa2a 	bl	8000ddc <MX_SPI4_Init>
  MX_CRC_Init();
 8000988:	f7ff fdf0 	bl	800056c <MX_CRC_Init>
  MX_ADC3_Init();
 800098c:	f7ff fcf8 	bl	8000380 <MX_ADC3_Init>
  MX_QUADSPI_Init();
 8000990:	f000 f8a0 	bl	8000ad4 <MX_QUADSPI_Init>
  MX_RTC_Init();
 8000994:	f000 f994 	bl	8000cc0 <MX_RTC_Init>
  MX_TIM12_Init();
 8000998:	f000 fcc6 	bl	8001328 <MX_TIM12_Init>
  MX_TouchGFX_Init();
 800099c:	f00c fa54 	bl	800ce48 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  w25qxx_Init();
 80009a0:	f000 fd7a 	bl	8001498 <w25qxx_Init>
    w25qxx_EnterQPI();
 80009a4:	f000 fec0 	bl	8001728 <w25qxx_EnterQPI>
    w25qxx_Startup(w25qxx_DTRMode);
 80009a8:	2006      	movs	r0, #6
 80009aa:	f000 fed1 	bl	8001750 <w25qxx_Startup>

    Displ_Init(Displ_Orientat_0);			// (mandatory) initialize display controller - set orientation parameter as per TouchGFX setup
 80009ae:	2000      	movs	r0, #0
 80009b0:	f001 fa22 	bl	8001df8 <Displ_Init>
    touchgfxSignalVSync();					// ask display syncronization
 80009b4:	f010 fbed 	bl	8011192 <touchgfxSignalVSync>
    Displ_BackLight('I');  					// (mandatory) initialize backlight
 80009b8:	2049      	movs	r0, #73	; 0x49
 80009ba:	f001 fac5 	bl	8001f48 <Displ_BackLight>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80009be:	f00c fa4b 	bl	800ce58 <MX_TouchGFX_Process>
    /* USER CODE BEGIN 3 */
  touchgfxSignalVSync();
 80009c2:	f010 fbe6 	bl	8011192 <touchgfxSignalVSync>
  MX_TouchGFX_Process();
 80009c6:	e7fa      	b.n	80009be <main+0x11a>
 80009c8:	e000ed00 	.word	0xe000ed00

080009cc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80009cc:	b580      	push	{r7, lr}
 80009ce:	b09c      	sub	sp, #112	; 0x70
 80009d0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80009d2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009d6:	224c      	movs	r2, #76	; 0x4c
 80009d8:	2100      	movs	r1, #0
 80009da:	4618      	mov	r0, r3
 80009dc:	f025 fc47 	bl	802626e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80009e0:	1d3b      	adds	r3, r7, #4
 80009e2:	2220      	movs	r2, #32
 80009e4:	2100      	movs	r1, #0
 80009e6:	4618      	mov	r0, r3
 80009e8:	f025 fc41 	bl	802626e <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 80009ec:	2002      	movs	r0, #2
 80009ee:	f005 fe31 	bl	8006654 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 80009f2:	2300      	movs	r3, #0
 80009f4:	603b      	str	r3, [r7, #0]
 80009f6:	4b32      	ldr	r3, [pc, #200]	; (8000ac0 <SystemClock_Config+0xf4>)
 80009f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80009fa:	4a31      	ldr	r2, [pc, #196]	; (8000ac0 <SystemClock_Config+0xf4>)
 80009fc:	f023 0301 	bic.w	r3, r3, #1
 8000a00:	62d3      	str	r3, [r2, #44]	; 0x2c
 8000a02:	4b2f      	ldr	r3, [pc, #188]	; (8000ac0 <SystemClock_Config+0xf4>)
 8000a04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000a06:	f003 0301 	and.w	r3, r3, #1
 8000a0a:	603b      	str	r3, [r7, #0]
 8000a0c:	4b2d      	ldr	r3, [pc, #180]	; (8000ac4 <SystemClock_Config+0xf8>)
 8000a0e:	699b      	ldr	r3, [r3, #24]
 8000a10:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000a14:	4a2b      	ldr	r2, [pc, #172]	; (8000ac4 <SystemClock_Config+0xf8>)
 8000a16:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a1a:	6193      	str	r3, [r2, #24]
 8000a1c:	4b29      	ldr	r3, [pc, #164]	; (8000ac4 <SystemClock_Config+0xf8>)
 8000a1e:	699b      	ldr	r3, [r3, #24]
 8000a20:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000a24:	603b      	str	r3, [r7, #0]
 8000a26:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000a28:	bf00      	nop
 8000a2a:	4b26      	ldr	r3, [pc, #152]	; (8000ac4 <SystemClock_Config+0xf8>)
 8000a2c:	699b      	ldr	r3, [r3, #24]
 8000a2e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000a32:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000a36:	d1f8      	bne.n	8000a2a <SystemClock_Config+0x5e>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 8000a38:	2309      	movs	r3, #9
 8000a3a:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000a3c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000a40:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8000a42:	2301      	movs	r3, #1
 8000a44:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000a46:	2302      	movs	r3, #2
 8000a48:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000a4a:	2302      	movs	r3, #2
 8000a4c:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 5;
 8000a4e:	2305      	movs	r3, #5
 8000a50:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 96;
 8000a52:	2360      	movs	r3, #96	; 0x60
 8000a54:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000a56:	2302      	movs	r3, #2
 8000a58:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000a5a:	2302      	movs	r3, #2
 8000a5c:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000a5e:	2302      	movs	r3, #2
 8000a60:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 8000a62:	2308      	movs	r3, #8
 8000a64:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000a66:	2300      	movs	r3, #0
 8000a68:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000a6a:	2300      	movs	r3, #0
 8000a6c:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a6e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a72:	4618      	mov	r0, r3
 8000a74:	f006 face 	bl	8007014 <HAL_RCC_OscConfig>
 8000a78:	4603      	mov	r3, r0
 8000a7a:	2b00      	cmp	r3, #0
 8000a7c:	d001      	beq.n	8000a82 <SystemClock_Config+0xb6>
  {
    Error_Handler();
 8000a7e:	f000 f823 	bl	8000ac8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a82:	233f      	movs	r3, #63	; 0x3f
 8000a84:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a86:	2303      	movs	r3, #3
 8000a88:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000a8e:	2308      	movs	r3, #8
 8000a90:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 8000a92:	2300      	movs	r3, #0
 8000a94:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 8000a96:	2300      	movs	r3, #0
 8000a98:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000aa2:	1d3b      	adds	r3, r7, #4
 8000aa4:	2102      	movs	r1, #2
 8000aa6:	4618      	mov	r0, r3
 8000aa8:	f006 ff0e 	bl	80078c8 <HAL_RCC_ClockConfig>
 8000aac:	4603      	mov	r3, r0
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	d001      	beq.n	8000ab6 <SystemClock_Config+0xea>
  {
    Error_Handler();
 8000ab2:	f000 f809 	bl	8000ac8 <Error_Handler>
  }
}
 8000ab6:	bf00      	nop
 8000ab8:	3770      	adds	r7, #112	; 0x70
 8000aba:	46bd      	mov	sp, r7
 8000abc:	bd80      	pop	{r7, pc}
 8000abe:	bf00      	nop
 8000ac0:	58000400 	.word	0x58000400
 8000ac4:	58024800 	.word	0x58024800

08000ac8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000ac8:	b480      	push	{r7}
 8000aca:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8000acc:	b672      	cpsid	i
}
 8000ace:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000ad0:	e7fe      	b.n	8000ad0 <Error_Handler+0x8>
	...

08000ad4 <MX_QUADSPI_Init>:

QSPI_HandleTypeDef hqspi;

/* QUADSPI init function */
void MX_QUADSPI_Init(void)
{
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	af00      	add	r7, sp, #0
  /* USER CODE END QUADSPI_Init 0 */

  /* USER CODE BEGIN QUADSPI_Init 1 */

  /* USER CODE END QUADSPI_Init 1 */
  hqspi.Instance = QUADSPI;
 8000ad8:	4b12      	ldr	r3, [pc, #72]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000ada:	4a13      	ldr	r2, [pc, #76]	; (8000b28 <MX_QUADSPI_Init+0x54>)
 8000adc:	601a      	str	r2, [r3, #0]
  hqspi.Init.ClockPrescaler = 2-1;
 8000ade:	4b11      	ldr	r3, [pc, #68]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000ae0:	2201      	movs	r2, #1
 8000ae2:	605a      	str	r2, [r3, #4]
  hqspi.Init.FifoThreshold = 32;
 8000ae4:	4b0f      	ldr	r3, [pc, #60]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000ae6:	2220      	movs	r2, #32
 8000ae8:	609a      	str	r2, [r3, #8]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8000aea:	4b0e      	ldr	r3, [pc, #56]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000aec:	2210      	movs	r2, #16
 8000aee:	60da      	str	r2, [r3, #12]
  hqspi.Init.FlashSize = 23-1;
 8000af0:	4b0c      	ldr	r3, [pc, #48]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000af2:	2216      	movs	r2, #22
 8000af4:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_8_CYCLE;
 8000af6:	4b0b      	ldr	r3, [pc, #44]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000af8:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8000afc:	615a      	str	r2, [r3, #20]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_3;
 8000afe:	4b09      	ldr	r3, [pc, #36]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000b00:	2201      	movs	r2, #1
 8000b02:	619a      	str	r2, [r3, #24]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8000b04:	4b07      	ldr	r3, [pc, #28]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000b06:	2200      	movs	r2, #0
 8000b08:	61da      	str	r2, [r3, #28]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8000b0a:	4b06      	ldr	r3, [pc, #24]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	621a      	str	r2, [r3, #32]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000b10:	4804      	ldr	r0, [pc, #16]	; (8000b24 <MX_QUADSPI_Init+0x50>)
 8000b12:	f005 fdd9 	bl	80066c8 <HAL_QSPI_Init>
 8000b16:	4603      	mov	r3, r0
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	d001      	beq.n	8000b20 <MX_QUADSPI_Init+0x4c>
  {
    Error_Handler();
 8000b1c:	f7ff ffd4 	bl	8000ac8 <Error_Handler>
  }
  /* USER CODE BEGIN QUADSPI_Init 2 */

  /* USER CODE END QUADSPI_Init 2 */

}
 8000b20:	bf00      	nop
 8000b22:	bd80      	pop	{r7, pc}
 8000b24:	240001a0 	.word	0x240001a0
 8000b28:	52005000 	.word	0x52005000

08000b2c <HAL_QSPI_MspInit>:

void HAL_QSPI_MspInit(QSPI_HandleTypeDef* qspiHandle)
{
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	b0bc      	sub	sp, #240	; 0xf0
 8000b30:	af00      	add	r7, sp, #0
 8000b32:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b34:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000b38:	2200      	movs	r2, #0
 8000b3a:	601a      	str	r2, [r3, #0]
 8000b3c:	605a      	str	r2, [r3, #4]
 8000b3e:	609a      	str	r2, [r3, #8]
 8000b40:	60da      	str	r2, [r3, #12]
 8000b42:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000b44:	f107 0318 	add.w	r3, r7, #24
 8000b48:	22c0      	movs	r2, #192	; 0xc0
 8000b4a:	2100      	movs	r1, #0
 8000b4c:	4618      	mov	r0, r3
 8000b4e:	f025 fb8e 	bl	802626e <memset>
  if(qspiHandle->Instance==QUADSPI)
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	681b      	ldr	r3, [r3, #0]
 8000b56:	4a55      	ldr	r2, [pc, #340]	; (8000cac <HAL_QSPI_MspInit+0x180>)
 8000b58:	4293      	cmp	r3, r2
 8000b5a:	f040 80a3 	bne.w	8000ca4 <HAL_QSPI_MspInit+0x178>

  /* USER CODE END QUADSPI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 8000b5e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8000b62:	f04f 0300 	mov.w	r3, #0
 8000b66:	e9c7 2306 	strd	r2, r3, [r7, #24]
    PeriphClkInitStruct.QspiClockSelection = RCC_QSPICLKSOURCE_D1HCLK;
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	667b      	str	r3, [r7, #100]	; 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000b6e:	f107 0318 	add.w	r3, r7, #24
 8000b72:	4618      	mov	r0, r3
 8000b74:	f007 fa1e 	bl	8007fb4 <HAL_RCCEx_PeriphCLKConfig>
 8000b78:	4603      	mov	r3, r0
 8000b7a:	2b00      	cmp	r3, #0
 8000b7c:	d001      	beq.n	8000b82 <HAL_QSPI_MspInit+0x56>
    {
      Error_Handler();
 8000b7e:	f7ff ffa3 	bl	8000ac8 <Error_Handler>
    }

    /* QUADSPI clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8000b82:	4b4b      	ldr	r3, [pc, #300]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000b84:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000b88:	4a49      	ldr	r2, [pc, #292]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000b8a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000b8e:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 8000b92:	4b47      	ldr	r3, [pc, #284]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000b94:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000b98:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000b9c:	617b      	str	r3, [r7, #20]
 8000b9e:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000ba0:	4b43      	ldr	r3, [pc, #268]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000ba2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ba6:	4a42      	ldr	r2, [pc, #264]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000ba8:	f043 0310 	orr.w	r3, r3, #16
 8000bac:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000bb0:	4b3f      	ldr	r3, [pc, #252]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000bb2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000bb6:	f003 0310 	and.w	r3, r3, #16
 8000bba:	613b      	str	r3, [r7, #16]
 8000bbc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bbe:	4b3c      	ldr	r3, [pc, #240]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000bc0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000bc4:	4a3a      	ldr	r2, [pc, #232]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000bc6:	f043 0302 	orr.w	r3, r3, #2
 8000bca:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000bce:	4b38      	ldr	r3, [pc, #224]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000bd0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000bd4:	f003 0302 	and.w	r3, r3, #2
 8000bd8:	60fb      	str	r3, [r7, #12]
 8000bda:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bdc:	4b34      	ldr	r3, [pc, #208]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000bde:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000be2:	4a33      	ldr	r2, [pc, #204]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000be4:	f043 0308 	orr.w	r3, r3, #8
 8000be8:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000bec:	4b30      	ldr	r3, [pc, #192]	; (8000cb0 <HAL_QSPI_MspInit+0x184>)
 8000bee:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000bf2:	f003 0308 	and.w	r3, r3, #8
 8000bf6:	60bb      	str	r3, [r7, #8]
 8000bf8:	68bb      	ldr	r3, [r7, #8]
    PD11     ------> QUADSPI_BK1_IO0
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PB6     ------> QUADSPI_BK1_NCS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000bfa:	2304      	movs	r3, #4
 8000bfc:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c00:	2302      	movs	r3, #2
 8000c02:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c06:	2300      	movs	r3, #0
 8000c08:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c0c:	2303      	movs	r3, #3
 8000c0e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000c12:	2309      	movs	r3, #9
 8000c14:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c18:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000c1c:	4619      	mov	r1, r3
 8000c1e:	4825      	ldr	r0, [pc, #148]	; (8000cb4 <HAL_QSPI_MspInit+0x188>)
 8000c20:	f005 fb1c 	bl	800625c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c24:	2304      	movs	r3, #4
 8000c26:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c2a:	2302      	movs	r3, #2
 8000c2c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c30:	2300      	movs	r3, #0
 8000c32:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c36:	2303      	movs	r3, #3
 8000c38:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000c3c:	2309      	movs	r3, #9
 8000c3e:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c42:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000c46:	4619      	mov	r1, r3
 8000c48:	481b      	ldr	r0, [pc, #108]	; (8000cb8 <HAL_QSPI_MspInit+0x18c>)
 8000c4a:	f005 fb07 	bl	800625c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13;
 8000c4e:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8000c52:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c56:	2302      	movs	r3, #2
 8000c58:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c62:	2303      	movs	r3, #3
 8000c64:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000c68:	2309      	movs	r3, #9
 8000c6a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000c6e:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000c72:	4619      	mov	r1, r3
 8000c74:	4811      	ldr	r0, [pc, #68]	; (8000cbc <HAL_QSPI_MspInit+0x190>)
 8000c76:	f005 faf1 	bl	800625c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000c7a:	2340      	movs	r3, #64	; 0x40
 8000c7c:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c80:	2302      	movs	r3, #2
 8000c82:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c86:	2300      	movs	r3, #0
 8000c88:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c8c:	2303      	movs	r3, #3
 8000c8e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8000c92:	230a      	movs	r3, #10
 8000c94:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c98:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000c9c:	4619      	mov	r1, r3
 8000c9e:	4806      	ldr	r0, [pc, #24]	; (8000cb8 <HAL_QSPI_MspInit+0x18c>)
 8000ca0:	f005 fadc 	bl	800625c <HAL_GPIO_Init>

  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }
}
 8000ca4:	bf00      	nop
 8000ca6:	37f0      	adds	r7, #240	; 0xf0
 8000ca8:	46bd      	mov	sp, r7
 8000caa:	bd80      	pop	{r7, pc}
 8000cac:	52005000 	.word	0x52005000
 8000cb0:	58024400 	.word	0x58024400
 8000cb4:	58021000 	.word	0x58021000
 8000cb8:	58020400 	.word	0x58020400
 8000cbc:	58020c00 	.word	0x58020c00

08000cc0 <MX_RTC_Init>:

RTC_HandleTypeDef hrtc;

/* RTC init function */
void MX_RTC_Init(void)
{
 8000cc0:	b580      	push	{r7, lr}
 8000cc2:	b086      	sub	sp, #24
 8000cc4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 8000cc6:	1d3b      	adds	r3, r7, #4
 8000cc8:	2200      	movs	r2, #0
 8000cca:	601a      	str	r2, [r3, #0]
 8000ccc:	605a      	str	r2, [r3, #4]
 8000cce:	609a      	str	r2, [r3, #8]
 8000cd0:	60da      	str	r2, [r3, #12]
 8000cd2:	611a      	str	r2, [r3, #16]
  RTC_DateTypeDef sDate = {0};
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	603b      	str	r3, [r7, #0]

  /* USER CODE END RTC_Init 1 */

  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8000cd8:	4b25      	ldr	r3, [pc, #148]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000cda:	4a26      	ldr	r2, [pc, #152]	; (8000d74 <MX_RTC_Init+0xb4>)
 8000cdc:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8000cde:	4b24      	ldr	r3, [pc, #144]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 8000ce4:	4b22      	ldr	r3, [pc, #136]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000ce6:	227f      	movs	r2, #127	; 0x7f
 8000ce8:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8000cea:	4b21      	ldr	r3, [pc, #132]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000cec:	22ff      	movs	r2, #255	; 0xff
 8000cee:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8000cf0:	4b1f      	ldr	r3, [pc, #124]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000cf2:	2200      	movs	r2, #0
 8000cf4:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8000cf6:	4b1e      	ldr	r3, [pc, #120]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	619a      	str	r2, [r3, #24]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8000cfc:	4b1c      	ldr	r3, [pc, #112]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000cfe:	2200      	movs	r2, #0
 8000d00:	61da      	str	r2, [r3, #28]
  hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 8000d02:	4b1b      	ldr	r3, [pc, #108]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000d04:	2200      	movs	r2, #0
 8000d06:	615a      	str	r2, [r3, #20]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8000d08:	4819      	ldr	r0, [pc, #100]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000d0a:	f009 fe51 	bl	800a9b0 <HAL_RTC_Init>
 8000d0e:	4603      	mov	r3, r0
 8000d10:	2b00      	cmp	r3, #0
 8000d12:	d001      	beq.n	8000d18 <MX_RTC_Init+0x58>
  {
    Error_Handler();
 8000d14:	f7ff fed8 	bl	8000ac8 <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 8000d18:	2300      	movs	r3, #0
 8000d1a:	713b      	strb	r3, [r7, #4]
  sTime.Minutes = 0x0;
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	717b      	strb	r3, [r7, #5]
  sTime.Seconds = 0x0;
 8000d20:	2300      	movs	r3, #0
 8000d22:	71bb      	strb	r3, [r7, #6]
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8000d24:	2300      	movs	r3, #0
 8000d26:	613b      	str	r3, [r7, #16]
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8000d28:	2300      	movs	r3, #0
 8000d2a:	617b      	str	r3, [r7, #20]
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8000d2c:	1d3b      	adds	r3, r7, #4
 8000d2e:	2201      	movs	r2, #1
 8000d30:	4619      	mov	r1, r3
 8000d32:	480f      	ldr	r0, [pc, #60]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000d34:	f009 febe 	bl	800aab4 <HAL_RTC_SetTime>
 8000d38:	4603      	mov	r3, r0
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d001      	beq.n	8000d42 <MX_RTC_Init+0x82>
  {
    Error_Handler();
 8000d3e:	f7ff fec3 	bl	8000ac8 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8000d42:	2301      	movs	r3, #1
 8000d44:	703b      	strb	r3, [r7, #0]
  sDate.Month = RTC_MONTH_JANUARY;
 8000d46:	2301      	movs	r3, #1
 8000d48:	707b      	strb	r3, [r7, #1]
  sDate.Date = 0x1;
 8000d4a:	2301      	movs	r3, #1
 8000d4c:	70bb      	strb	r3, [r7, #2]
  sDate.Year = 0x0;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	70fb      	strb	r3, [r7, #3]

  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8000d52:	463b      	mov	r3, r7
 8000d54:	2201      	movs	r2, #1
 8000d56:	4619      	mov	r1, r3
 8000d58:	4805      	ldr	r0, [pc, #20]	; (8000d70 <MX_RTC_Init+0xb0>)
 8000d5a:	f009 ff49 	bl	800abf0 <HAL_RTC_SetDate>
 8000d5e:	4603      	mov	r3, r0
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d001      	beq.n	8000d68 <MX_RTC_Init+0xa8>
  {
    Error_Handler();
 8000d64:	f7ff feb0 	bl	8000ac8 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8000d68:	bf00      	nop
 8000d6a:	3718      	adds	r7, #24
 8000d6c:	46bd      	mov	sp, r7
 8000d6e:	bd80      	pop	{r7, pc}
 8000d70:	240001ec 	.word	0x240001ec
 8000d74:	58004000 	.word	0x58004000

08000d78 <HAL_RTC_MspInit>:

void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
{
 8000d78:	b580      	push	{r7, lr}
 8000d7a:	b0b2      	sub	sp, #200	; 0xc8
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]

  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000d80:	f107 0308 	add.w	r3, r7, #8
 8000d84:	22c0      	movs	r2, #192	; 0xc0
 8000d86:	2100      	movs	r1, #0
 8000d88:	4618      	mov	r0, r3
 8000d8a:	f025 fa70 	bl	802626e <memset>
  if(rtcHandle->Instance==RTC)
 8000d8e:	687b      	ldr	r3, [r7, #4]
 8000d90:	681b      	ldr	r3, [r3, #0]
 8000d92:	4a10      	ldr	r2, [pc, #64]	; (8000dd4 <HAL_RTC_MspInit+0x5c>)
 8000d94:	4293      	cmp	r3, r2
 8000d96:	d119      	bne.n	8000dcc <HAL_RTC_MspInit+0x54>

  /* USER CODE END RTC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 8000d98:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000d9c:	f04f 0300 	mov.w	r3, #0
 8000da0:	e9c7 2302 	strd	r2, r3, [r7, #8]
    PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 8000da4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000da8:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000dac:	f107 0308 	add.w	r3, r7, #8
 8000db0:	4618      	mov	r0, r3
 8000db2:	f007 f8ff 	bl	8007fb4 <HAL_RCCEx_PeriphCLKConfig>
 8000db6:	4603      	mov	r3, r0
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d001      	beq.n	8000dc0 <HAL_RTC_MspInit+0x48>
    {
      Error_Handler();
 8000dbc:	f7ff fe84 	bl	8000ac8 <Error_Handler>
    }

    /* RTC clock enable */
    __HAL_RCC_RTC_ENABLE();
 8000dc0:	4b05      	ldr	r3, [pc, #20]	; (8000dd8 <HAL_RTC_MspInit+0x60>)
 8000dc2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000dc4:	4a04      	ldr	r2, [pc, #16]	; (8000dd8 <HAL_RTC_MspInit+0x60>)
 8000dc6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000dca:	6713      	str	r3, [r2, #112]	; 0x70
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }
}
 8000dcc:	bf00      	nop
 8000dce:	37c8      	adds	r7, #200	; 0xc8
 8000dd0:	46bd      	mov	sp, r7
 8000dd2:	bd80      	pop	{r7, pc}
 8000dd4:	58004000 	.word	0x58004000
 8000dd8:	58024400 	.word	0x58024400

08000ddc <MX_SPI4_Init>:
SPI_HandleTypeDef hspi4;
DMA_HandleTypeDef hdma_spi4_tx;

/* SPI4 init function */
void MX_SPI4_Init(void)
{
 8000ddc:	b580      	push	{r7, lr}
 8000dde:	af00      	add	r7, sp, #0
  /* USER CODE END SPI4_Init 0 */

  /* USER CODE BEGIN SPI4_Init 1 */

  /* USER CODE END SPI4_Init 1 */
  hspi4.Instance = SPI4;
 8000de0:	4b27      	ldr	r3, [pc, #156]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000de2:	4a28      	ldr	r2, [pc, #160]	; (8000e84 <MX_SPI4_Init+0xa8>)
 8000de4:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 8000de6:	4b26      	ldr	r3, [pc, #152]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000de8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000dec:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 8000dee:	4b24      	ldr	r3, [pc, #144]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_8BIT;
 8000df4:	4b22      	ldr	r3, [pc, #136]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000df6:	2207      	movs	r2, #7
 8000df8:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000dfa:	4b21      	ldr	r3, [pc, #132]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000dfc:	2200      	movs	r2, #0
 8000dfe:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000e00:	4b1f      	ldr	r3, [pc, #124]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e02:	2200      	movs	r2, #0
 8000e04:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 8000e06:	4b1e      	ldr	r3, [pc, #120]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e08:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000e0c:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000e0e:	4b1c      	ldr	r3, [pc, #112]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e10:	2200      	movs	r2, #0
 8000e12:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000e14:	4b1a      	ldr	r3, [pc, #104]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e16:	2200      	movs	r2, #0
 8000e18:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 8000e1a:	4b19      	ldr	r3, [pc, #100]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	625a      	str	r2, [r3, #36]	; 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000e20:	4b17      	ldr	r3, [pc, #92]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e22:	2200      	movs	r2, #0
 8000e24:	629a      	str	r2, [r3, #40]	; 0x28
  hspi4.Init.CRCPolynomial = 0x0;
 8000e26:	4b16      	ldr	r3, [pc, #88]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e28:	2200      	movs	r2, #0
 8000e2a:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000e2c:	4b14      	ldr	r3, [pc, #80]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e2e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e32:	635a      	str	r2, [r3, #52]	; 0x34
  hspi4.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000e34:	4b12      	ldr	r3, [pc, #72]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e36:	2200      	movs	r2, #0
 8000e38:	639a      	str	r2, [r3, #56]	; 0x38
  hspi4.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000e3a:	4b11      	ldr	r3, [pc, #68]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e3c:	2200      	movs	r2, #0
 8000e3e:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi4.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000e40:	4b0f      	ldr	r3, [pc, #60]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e42:	2200      	movs	r2, #0
 8000e44:	641a      	str	r2, [r3, #64]	; 0x40
  hspi4.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000e46:	4b0e      	ldr	r3, [pc, #56]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e48:	2200      	movs	r2, #0
 8000e4a:	645a      	str	r2, [r3, #68]	; 0x44
  hspi4.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000e4c:	4b0c      	ldr	r3, [pc, #48]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e4e:	2200      	movs	r2, #0
 8000e50:	649a      	str	r2, [r3, #72]	; 0x48
  hspi4.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000e52:	4b0b      	ldr	r3, [pc, #44]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e54:	2200      	movs	r2, #0
 8000e56:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi4.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000e58:	4b09      	ldr	r3, [pc, #36]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e5a:	2200      	movs	r2, #0
 8000e5c:	651a      	str	r2, [r3, #80]	; 0x50
  hspi4.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000e5e:	4b08      	ldr	r3, [pc, #32]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e60:	2200      	movs	r2, #0
 8000e62:	655a      	str	r2, [r3, #84]	; 0x54
  hspi4.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000e64:	4b06      	ldr	r3, [pc, #24]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e66:	2200      	movs	r2, #0
 8000e68:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 8000e6a:	4805      	ldr	r0, [pc, #20]	; (8000e80 <MX_SPI4_Init+0xa4>)
 8000e6c:	f009 fffe 	bl	800ae6c <HAL_SPI_Init>
 8000e70:	4603      	mov	r3, r0
 8000e72:	2b00      	cmp	r3, #0
 8000e74:	d001      	beq.n	8000e7a <MX_SPI4_Init+0x9e>
  {
    Error_Handler();
 8000e76:	f7ff fe27 	bl	8000ac8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI4_Init 2 */

  /* USER CODE END SPI4_Init 2 */

}
 8000e7a:	bf00      	nop
 8000e7c:	bd80      	pop	{r7, pc}
 8000e7e:	bf00      	nop
 8000e80:	24000210 	.word	0x24000210
 8000e84:	40013400 	.word	0x40013400

08000e88 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	b0ba      	sub	sp, #232	; 0xe8
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e90:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8000e94:	2200      	movs	r2, #0
 8000e96:	601a      	str	r2, [r3, #0]
 8000e98:	605a      	str	r2, [r3, #4]
 8000e9a:	609a      	str	r2, [r3, #8]
 8000e9c:	60da      	str	r2, [r3, #12]
 8000e9e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ea0:	f107 0310 	add.w	r3, r7, #16
 8000ea4:	22c0      	movs	r2, #192	; 0xc0
 8000ea6:	2100      	movs	r1, #0
 8000ea8:	4618      	mov	r0, r3
 8000eaa:	f025 f9e0 	bl	802626e <memset>
  if(spiHandle->Instance==SPI4)
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	681b      	ldr	r3, [r3, #0]
 8000eb2:	4a41      	ldr	r2, [pc, #260]	; (8000fb8 <HAL_SPI_MspInit+0x130>)
 8000eb4:	4293      	cmp	r3, r2
 8000eb6:	d17b      	bne.n	8000fb0 <HAL_SPI_MspInit+0x128>

  /* USER CODE END SPI4_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI4;
 8000eb8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000ebc:	f04f 0300 	mov.w	r3, #0
 8000ec0:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_HSE;
 8000ec4:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8000ec8:	677b      	str	r3, [r7, #116]	; 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000eca:	f107 0310 	add.w	r3, r7, #16
 8000ece:	4618      	mov	r0, r3
 8000ed0:	f007 f870 	bl	8007fb4 <HAL_RCCEx_PeriphCLKConfig>
 8000ed4:	4603      	mov	r3, r0
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d001      	beq.n	8000ede <HAL_SPI_MspInit+0x56>
    {
      Error_Handler();
 8000eda:	f7ff fdf5 	bl	8000ac8 <Error_Handler>
    }

    /* SPI4 clock enable */
    __HAL_RCC_SPI4_CLK_ENABLE();
 8000ede:	4b37      	ldr	r3, [pc, #220]	; (8000fbc <HAL_SPI_MspInit+0x134>)
 8000ee0:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8000ee4:	4a35      	ldr	r2, [pc, #212]	; (8000fbc <HAL_SPI_MspInit+0x134>)
 8000ee6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000eea:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8000eee:	4b33      	ldr	r3, [pc, #204]	; (8000fbc <HAL_SPI_MspInit+0x134>)
 8000ef0:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8000ef4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000ef8:	60fb      	str	r3, [r7, #12]
 8000efa:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000efc:	4b2f      	ldr	r3, [pc, #188]	; (8000fbc <HAL_SPI_MspInit+0x134>)
 8000efe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000f02:	4a2e      	ldr	r2, [pc, #184]	; (8000fbc <HAL_SPI_MspInit+0x134>)
 8000f04:	f043 0310 	orr.w	r3, r3, #16
 8000f08:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000f0c:	4b2b      	ldr	r3, [pc, #172]	; (8000fbc <HAL_SPI_MspInit+0x134>)
 8000f0e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000f12:	f003 0310 	and.w	r3, r3, #16
 8000f16:	60bb      	str	r3, [r7, #8]
 8000f18:	68bb      	ldr	r3, [r7, #8]
    /**SPI4 GPIO Configuration
    PE12     ------> SPI4_SCK
    PE13     ------> SPI4_MISO
    PE14     ------> SPI4_MOSI
    */
    GPIO_InitStruct.Pin = DISPL_SCK_Pin|TOUCH_MISO_Pin|DISPL_MOSI_Pin;
 8000f1a:	f44f 43e0 	mov.w	r3, #28672	; 0x7000
 8000f1e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f22:	2302      	movs	r3, #2
 8000f24:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f28:	2300      	movs	r3, #0
 8000f2a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f2e:	2303      	movs	r3, #3
 8000f30:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
 8000f34:	2305      	movs	r3, #5
 8000f36:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f3a:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8000f3e:	4619      	mov	r1, r3
 8000f40:	481f      	ldr	r0, [pc, #124]	; (8000fc0 <HAL_SPI_MspInit+0x138>)
 8000f42:	f005 f98b 	bl	800625c <HAL_GPIO_Init>

    /* SPI4 DMA Init */
    /* SPI4_TX Init */
    hdma_spi4_tx.Instance = DMA1_Stream0;
 8000f46:	4b1f      	ldr	r3, [pc, #124]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f48:	4a1f      	ldr	r2, [pc, #124]	; (8000fc8 <HAL_SPI_MspInit+0x140>)
 8000f4a:	601a      	str	r2, [r3, #0]
    hdma_spi4_tx.Init.Request = DMA_REQUEST_SPI4_TX;
 8000f4c:	4b1d      	ldr	r3, [pc, #116]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f4e:	2254      	movs	r2, #84	; 0x54
 8000f50:	605a      	str	r2, [r3, #4]
    hdma_spi4_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000f52:	4b1c      	ldr	r3, [pc, #112]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f54:	2240      	movs	r2, #64	; 0x40
 8000f56:	609a      	str	r2, [r3, #8]
    hdma_spi4_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8000f58:	4b1a      	ldr	r3, [pc, #104]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	60da      	str	r2, [r3, #12]
    hdma_spi4_tx.Init.MemInc = DMA_MINC_ENABLE;
 8000f5e:	4b19      	ldr	r3, [pc, #100]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f60:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000f64:	611a      	str	r2, [r3, #16]
    hdma_spi4_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8000f66:	4b17      	ldr	r3, [pc, #92]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f68:	2200      	movs	r2, #0
 8000f6a:	615a      	str	r2, [r3, #20]
    hdma_spi4_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8000f6c:	4b15      	ldr	r3, [pc, #84]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f6e:	2200      	movs	r2, #0
 8000f70:	619a      	str	r2, [r3, #24]
    hdma_spi4_tx.Init.Mode = DMA_NORMAL;
 8000f72:	4b14      	ldr	r3, [pc, #80]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f74:	2200      	movs	r2, #0
 8000f76:	61da      	str	r2, [r3, #28]
    hdma_spi4_tx.Init.Priority = DMA_PRIORITY_LOW;
 8000f78:	4b12      	ldr	r3, [pc, #72]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	621a      	str	r2, [r3, #32]
    hdma_spi4_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000f7e:	4b11      	ldr	r3, [pc, #68]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f80:	2200      	movs	r2, #0
 8000f82:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi4_tx) != HAL_OK)
 8000f84:	480f      	ldr	r0, [pc, #60]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f86:	f002 fe3f 	bl	8003c08 <HAL_DMA_Init>
 8000f8a:	4603      	mov	r3, r0
 8000f8c:	2b00      	cmp	r3, #0
 8000f8e:	d001      	beq.n	8000f94 <HAL_SPI_MspInit+0x10c>
    {
      Error_Handler();
 8000f90:	f7ff fd9a 	bl	8000ac8 <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi4_tx);
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	4a0b      	ldr	r2, [pc, #44]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f98:	679a      	str	r2, [r3, #120]	; 0x78
 8000f9a:	4a0a      	ldr	r2, [pc, #40]	; (8000fc4 <HAL_SPI_MspInit+0x13c>)
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	6393      	str	r3, [r2, #56]	; 0x38

    /* SPI4 interrupt Init */
    HAL_NVIC_SetPriority(SPI4_IRQn, 0, 0);
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	2100      	movs	r1, #0
 8000fa4:	2054      	movs	r0, #84	; 0x54
 8000fa6:	f002 fc70 	bl	800388a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI4_IRQn);
 8000faa:	2054      	movs	r0, #84	; 0x54
 8000fac:	f002 fc87 	bl	80038be <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI4_MspInit 1 */

  /* USER CODE END SPI4_MspInit 1 */
  }
}
 8000fb0:	bf00      	nop
 8000fb2:	37e8      	adds	r7, #232	; 0xe8
 8000fb4:	46bd      	mov	sp, r7
 8000fb6:	bd80      	pop	{r7, pc}
 8000fb8:	40013400 	.word	0x40013400
 8000fbc:	58024400 	.word	0x58024400
 8000fc0:	58021000 	.word	0x58021000
 8000fc4:	24000298 	.word	0x24000298
 8000fc8:	40020010 	.word	0x40020010

08000fcc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000fcc:	b480      	push	{r7}
 8000fce:	b083      	sub	sp, #12
 8000fd0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000fd2:	4b0a      	ldr	r3, [pc, #40]	; (8000ffc <HAL_MspInit+0x30>)
 8000fd4:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000fd8:	4a08      	ldr	r2, [pc, #32]	; (8000ffc <HAL_MspInit+0x30>)
 8000fda:	f043 0302 	orr.w	r3, r3, #2
 8000fde:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000fe2:	4b06      	ldr	r3, [pc, #24]	; (8000ffc <HAL_MspInit+0x30>)
 8000fe4:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000fe8:	f003 0302 	and.w	r3, r3, #2
 8000fec:	607b      	str	r3, [r7, #4]
 8000fee:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000ff0:	bf00      	nop
 8000ff2:	370c      	adds	r7, #12
 8000ff4:	46bd      	mov	sp, r7
 8000ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ffa:	4770      	bx	lr
 8000ffc:	58024400 	.word	0x58024400

08001000 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001000:	b480      	push	{r7}
 8001002:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001004:	e7fe      	b.n	8001004 <NMI_Handler+0x4>

08001006 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001006:	b480      	push	{r7}
 8001008:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800100a:	e7fe      	b.n	800100a <HardFault_Handler+0x4>

0800100c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800100c:	b480      	push	{r7}
 800100e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001010:	e7fe      	b.n	8001010 <MemManage_Handler+0x4>

08001012 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001012:	b480      	push	{r7}
 8001014:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001016:	e7fe      	b.n	8001016 <BusFault_Handler+0x4>

08001018 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001018:	b480      	push	{r7}
 800101a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800101c:	e7fe      	b.n	800101c <UsageFault_Handler+0x4>

0800101e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800101e:	b480      	push	{r7}
 8001020:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001022:	bf00      	nop
 8001024:	46bd      	mov	sp, r7
 8001026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800102a:	4770      	bx	lr

0800102c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800102c:	b480      	push	{r7}
 800102e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001030:	bf00      	nop
 8001032:	46bd      	mov	sp, r7
 8001034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001038:	4770      	bx	lr

0800103a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800103a:	b480      	push	{r7}
 800103c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800103e:	bf00      	nop
 8001040:	46bd      	mov	sp, r7
 8001042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001046:	4770      	bx	lr

08001048 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001048:	b580      	push	{r7, lr}
 800104a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800104c:	f001 fb10 	bl	8002670 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001050:	bf00      	nop
 8001052:	bd80      	pop	{r7, pc}

08001054 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 8001054:	b580      	push	{r7, lr}
 8001056:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi4_tx);
 8001058:	4802      	ldr	r0, [pc, #8]	; (8001064 <DMA1_Stream0_IRQHandler+0x10>)
 800105a:	f003 fde1 	bl	8004c20 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 800105e:	bf00      	nop
 8001060:	bd80      	pop	{r7, pc}
 8001062:	bf00      	nop
 8001064:	24000298 	.word	0x24000298

08001068 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8001068:	b580      	push	{r7, lr}
 800106a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 800106c:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8001070:	f005 fad5 	bl	800661e <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8001074:	bf00      	nop
 8001076:	bd80      	pop	{r7, pc}

08001078 <SPI4_IRQHandler>:

/**
  * @brief This function handles SPI4 global interrupt.
  */
void SPI4_IRQHandler(void)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI4_IRQn 0 */

  /* USER CODE END SPI4_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi4);
 800107c:	4802      	ldr	r0, [pc, #8]	; (8001088 <SPI4_IRQHandler+0x10>)
 800107e:	f00a fcf9 	bl	800ba74 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI4_IRQn 1 */

  /* USER CODE END SPI4_IRQn 1 */
}
 8001082:	bf00      	nop
 8001084:	bd80      	pop	{r7, pc}
 8001086:	bf00      	nop
 8001088:	24000210 	.word	0x24000210

0800108c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800108c:	b480      	push	{r7}
 800108e:	af00      	add	r7, sp, #0
  return 1;
 8001090:	2301      	movs	r3, #1
}
 8001092:	4618      	mov	r0, r3
 8001094:	46bd      	mov	sp, r7
 8001096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109a:	4770      	bx	lr

0800109c <_kill>:

int _kill(int pid, int sig)
{
 800109c:	b580      	push	{r7, lr}
 800109e:	b082      	sub	sp, #8
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
 80010a4:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80010a6:	f025 f985 	bl	80263b4 <__errno>
 80010aa:	4603      	mov	r3, r0
 80010ac:	2216      	movs	r2, #22
 80010ae:	601a      	str	r2, [r3, #0]
  return -1;
 80010b0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80010b4:	4618      	mov	r0, r3
 80010b6:	3708      	adds	r7, #8
 80010b8:	46bd      	mov	sp, r7
 80010ba:	bd80      	pop	{r7, pc}

080010bc <_exit>:

void _exit (int status)
{
 80010bc:	b580      	push	{r7, lr}
 80010be:	b082      	sub	sp, #8
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80010c4:	f04f 31ff 	mov.w	r1, #4294967295
 80010c8:	6878      	ldr	r0, [r7, #4]
 80010ca:	f7ff ffe7 	bl	800109c <_kill>
  while (1) {}    /* Make sure we hang here */
 80010ce:	e7fe      	b.n	80010ce <_exit+0x12>

080010d0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80010d0:	b580      	push	{r7, lr}
 80010d2:	b086      	sub	sp, #24
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	60f8      	str	r0, [r7, #12]
 80010d8:	60b9      	str	r1, [r7, #8]
 80010da:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010dc:	2300      	movs	r3, #0
 80010de:	617b      	str	r3, [r7, #20]
 80010e0:	e00a      	b.n	80010f8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80010e2:	f3af 8000 	nop.w
 80010e6:	4601      	mov	r1, r0
 80010e8:	68bb      	ldr	r3, [r7, #8]
 80010ea:	1c5a      	adds	r2, r3, #1
 80010ec:	60ba      	str	r2, [r7, #8]
 80010ee:	b2ca      	uxtb	r2, r1
 80010f0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010f2:	697b      	ldr	r3, [r7, #20]
 80010f4:	3301      	adds	r3, #1
 80010f6:	617b      	str	r3, [r7, #20]
 80010f8:	697a      	ldr	r2, [r7, #20]
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	429a      	cmp	r2, r3
 80010fe:	dbf0      	blt.n	80010e2 <_read+0x12>
  }

  return len;
 8001100:	687b      	ldr	r3, [r7, #4]
}
 8001102:	4618      	mov	r0, r3
 8001104:	3718      	adds	r7, #24
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}

0800110a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800110a:	b580      	push	{r7, lr}
 800110c:	b086      	sub	sp, #24
 800110e:	af00      	add	r7, sp, #0
 8001110:	60f8      	str	r0, [r7, #12]
 8001112:	60b9      	str	r1, [r7, #8]
 8001114:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001116:	2300      	movs	r3, #0
 8001118:	617b      	str	r3, [r7, #20]
 800111a:	e009      	b.n	8001130 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800111c:	68bb      	ldr	r3, [r7, #8]
 800111e:	1c5a      	adds	r2, r3, #1
 8001120:	60ba      	str	r2, [r7, #8]
 8001122:	781b      	ldrb	r3, [r3, #0]
 8001124:	4618      	mov	r0, r3
 8001126:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800112a:	697b      	ldr	r3, [r7, #20]
 800112c:	3301      	adds	r3, #1
 800112e:	617b      	str	r3, [r7, #20]
 8001130:	697a      	ldr	r2, [r7, #20]
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	429a      	cmp	r2, r3
 8001136:	dbf1      	blt.n	800111c <_write+0x12>
  }
  return len;
 8001138:	687b      	ldr	r3, [r7, #4]
}
 800113a:	4618      	mov	r0, r3
 800113c:	3718      	adds	r7, #24
 800113e:	46bd      	mov	sp, r7
 8001140:	bd80      	pop	{r7, pc}

08001142 <_close>:

int _close(int file)
{
 8001142:	b480      	push	{r7}
 8001144:	b083      	sub	sp, #12
 8001146:	af00      	add	r7, sp, #0
 8001148:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800114a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800114e:	4618      	mov	r0, r3
 8001150:	370c      	adds	r7, #12
 8001152:	46bd      	mov	sp, r7
 8001154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001158:	4770      	bx	lr

0800115a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800115a:	b480      	push	{r7}
 800115c:	b083      	sub	sp, #12
 800115e:	af00      	add	r7, sp, #0
 8001160:	6078      	str	r0, [r7, #4]
 8001162:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001164:	683b      	ldr	r3, [r7, #0]
 8001166:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800116a:	605a      	str	r2, [r3, #4]
  return 0;
 800116c:	2300      	movs	r3, #0
}
 800116e:	4618      	mov	r0, r3
 8001170:	370c      	adds	r7, #12
 8001172:	46bd      	mov	sp, r7
 8001174:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001178:	4770      	bx	lr

0800117a <_isatty>:

int _isatty(int file)
{
 800117a:	b480      	push	{r7}
 800117c:	b083      	sub	sp, #12
 800117e:	af00      	add	r7, sp, #0
 8001180:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001182:	2301      	movs	r3, #1
}
 8001184:	4618      	mov	r0, r3
 8001186:	370c      	adds	r7, #12
 8001188:	46bd      	mov	sp, r7
 800118a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800118e:	4770      	bx	lr

08001190 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001190:	b480      	push	{r7}
 8001192:	b085      	sub	sp, #20
 8001194:	af00      	add	r7, sp, #0
 8001196:	60f8      	str	r0, [r7, #12]
 8001198:	60b9      	str	r1, [r7, #8]
 800119a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800119c:	2300      	movs	r3, #0
}
 800119e:	4618      	mov	r0, r3
 80011a0:	3714      	adds	r7, #20
 80011a2:	46bd      	mov	sp, r7
 80011a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011a8:	4770      	bx	lr
	...

080011ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b086      	sub	sp, #24
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80011b4:	4a14      	ldr	r2, [pc, #80]	; (8001208 <_sbrk+0x5c>)
 80011b6:	4b15      	ldr	r3, [pc, #84]	; (800120c <_sbrk+0x60>)
 80011b8:	1ad3      	subs	r3, r2, r3
 80011ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80011bc:	697b      	ldr	r3, [r7, #20]
 80011be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80011c0:	4b13      	ldr	r3, [pc, #76]	; (8001210 <_sbrk+0x64>)
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d102      	bne.n	80011ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80011c8:	4b11      	ldr	r3, [pc, #68]	; (8001210 <_sbrk+0x64>)
 80011ca:	4a12      	ldr	r2, [pc, #72]	; (8001214 <_sbrk+0x68>)
 80011cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80011ce:	4b10      	ldr	r3, [pc, #64]	; (8001210 <_sbrk+0x64>)
 80011d0:	681a      	ldr	r2, [r3, #0]
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	4413      	add	r3, r2
 80011d6:	693a      	ldr	r2, [r7, #16]
 80011d8:	429a      	cmp	r2, r3
 80011da:	d207      	bcs.n	80011ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80011dc:	f025 f8ea 	bl	80263b4 <__errno>
 80011e0:	4603      	mov	r3, r0
 80011e2:	220c      	movs	r2, #12
 80011e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80011e6:	f04f 33ff 	mov.w	r3, #4294967295
 80011ea:	e009      	b.n	8001200 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80011ec:	4b08      	ldr	r3, [pc, #32]	; (8001210 <_sbrk+0x64>)
 80011ee:	681b      	ldr	r3, [r3, #0]
 80011f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80011f2:	4b07      	ldr	r3, [pc, #28]	; (8001210 <_sbrk+0x64>)
 80011f4:	681a      	ldr	r2, [r3, #0]
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	4413      	add	r3, r2
 80011fa:	4a05      	ldr	r2, [pc, #20]	; (8001210 <_sbrk+0x64>)
 80011fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80011fe:	68fb      	ldr	r3, [r7, #12]
}
 8001200:	4618      	mov	r0, r3
 8001202:	3718      	adds	r7, #24
 8001204:	46bd      	mov	sp, r7
 8001206:	bd80      	pop	{r7, pc}
 8001208:	24080000 	.word	0x24080000
 800120c:	00000400 	.word	0x00000400
 8001210:	24000310 	.word	0x24000310
 8001214:	24005680 	.word	0x24005680

08001218 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001218:	b480      	push	{r7}
 800121a:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 800121c:	4b37      	ldr	r3, [pc, #220]	; (80012fc <SystemInit+0xe4>)
 800121e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001222:	4a36      	ldr	r2, [pc, #216]	; (80012fc <SystemInit+0xe4>)
 8001224:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001228:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800122c:	4b34      	ldr	r3, [pc, #208]	; (8001300 <SystemInit+0xe8>)
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	f003 030f 	and.w	r3, r3, #15
 8001234:	2b06      	cmp	r3, #6
 8001236:	d807      	bhi.n	8001248 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001238:	4b31      	ldr	r3, [pc, #196]	; (8001300 <SystemInit+0xe8>)
 800123a:	681b      	ldr	r3, [r3, #0]
 800123c:	f023 030f 	bic.w	r3, r3, #15
 8001240:	4a2f      	ldr	r2, [pc, #188]	; (8001300 <SystemInit+0xe8>)
 8001242:	f043 0307 	orr.w	r3, r3, #7
 8001246:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8001248:	4b2e      	ldr	r3, [pc, #184]	; (8001304 <SystemInit+0xec>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	4a2d      	ldr	r2, [pc, #180]	; (8001304 <SystemInit+0xec>)
 800124e:	f043 0301 	orr.w	r3, r3, #1
 8001252:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001254:	4b2b      	ldr	r3, [pc, #172]	; (8001304 <SystemInit+0xec>)
 8001256:	2200      	movs	r2, #0
 8001258:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 800125a:	4b2a      	ldr	r3, [pc, #168]	; (8001304 <SystemInit+0xec>)
 800125c:	681a      	ldr	r2, [r3, #0]
 800125e:	4929      	ldr	r1, [pc, #164]	; (8001304 <SystemInit+0xec>)
 8001260:	4b29      	ldr	r3, [pc, #164]	; (8001308 <SystemInit+0xf0>)
 8001262:	4013      	ands	r3, r2
 8001264:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8001266:	4b26      	ldr	r3, [pc, #152]	; (8001300 <SystemInit+0xe8>)
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	f003 0308 	and.w	r3, r3, #8
 800126e:	2b00      	cmp	r3, #0
 8001270:	d007      	beq.n	8001282 <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001272:	4b23      	ldr	r3, [pc, #140]	; (8001300 <SystemInit+0xe8>)
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	f023 030f 	bic.w	r3, r3, #15
 800127a:	4a21      	ldr	r2, [pc, #132]	; (8001300 <SystemInit+0xe8>)
 800127c:	f043 0307 	orr.w	r3, r3, #7
 8001280:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8001282:	4b20      	ldr	r3, [pc, #128]	; (8001304 <SystemInit+0xec>)
 8001284:	2200      	movs	r2, #0
 8001286:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8001288:	4b1e      	ldr	r3, [pc, #120]	; (8001304 <SystemInit+0xec>)
 800128a:	2200      	movs	r2, #0
 800128c:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 800128e:	4b1d      	ldr	r3, [pc, #116]	; (8001304 <SystemInit+0xec>)
 8001290:	2200      	movs	r2, #0
 8001292:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8001294:	4b1b      	ldr	r3, [pc, #108]	; (8001304 <SystemInit+0xec>)
 8001296:	4a1d      	ldr	r2, [pc, #116]	; (800130c <SystemInit+0xf4>)
 8001298:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 800129a:	4b1a      	ldr	r3, [pc, #104]	; (8001304 <SystemInit+0xec>)
 800129c:	4a1c      	ldr	r2, [pc, #112]	; (8001310 <SystemInit+0xf8>)
 800129e:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80012a0:	4b18      	ldr	r3, [pc, #96]	; (8001304 <SystemInit+0xec>)
 80012a2:	4a1c      	ldr	r2, [pc, #112]	; (8001314 <SystemInit+0xfc>)
 80012a4:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80012a6:	4b17      	ldr	r3, [pc, #92]	; (8001304 <SystemInit+0xec>)
 80012a8:	2200      	movs	r2, #0
 80012aa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80012ac:	4b15      	ldr	r3, [pc, #84]	; (8001304 <SystemInit+0xec>)
 80012ae:	4a19      	ldr	r2, [pc, #100]	; (8001314 <SystemInit+0xfc>)
 80012b0:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80012b2:	4b14      	ldr	r3, [pc, #80]	; (8001304 <SystemInit+0xec>)
 80012b4:	2200      	movs	r2, #0
 80012b6:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80012b8:	4b12      	ldr	r3, [pc, #72]	; (8001304 <SystemInit+0xec>)
 80012ba:	4a16      	ldr	r2, [pc, #88]	; (8001314 <SystemInit+0xfc>)
 80012bc:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80012be:	4b11      	ldr	r3, [pc, #68]	; (8001304 <SystemInit+0xec>)
 80012c0:	2200      	movs	r2, #0
 80012c2:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80012c4:	4b0f      	ldr	r3, [pc, #60]	; (8001304 <SystemInit+0xec>)
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	4a0e      	ldr	r2, [pc, #56]	; (8001304 <SystemInit+0xec>)
 80012ca:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80012ce:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80012d0:	4b0c      	ldr	r3, [pc, #48]	; (8001304 <SystemInit+0xec>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	661a      	str	r2, [r3, #96]	; 0x60

#if (STM32H7_DEV_ID == 0x450UL)
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 80012d6:	4b10      	ldr	r3, [pc, #64]	; (8001318 <SystemInit+0x100>)
 80012d8:	681a      	ldr	r2, [r3, #0]
 80012da:	4b10      	ldr	r3, [pc, #64]	; (800131c <SystemInit+0x104>)
 80012dc:	4013      	ands	r3, r2
 80012de:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80012e2:	d202      	bcs.n	80012ea <SystemInit+0xd2>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 80012e4:	4b0e      	ldr	r3, [pc, #56]	; (8001320 <SystemInit+0x108>)
 80012e6:	2201      	movs	r2, #1
 80012e8:	601a      	str	r2, [r3, #0]
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80012ea:	4b0e      	ldr	r3, [pc, #56]	; (8001324 <SystemInit+0x10c>)
 80012ec:	f243 02d2 	movw	r2, #12498	; 0x30d2
 80012f0:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 80012f2:	bf00      	nop
 80012f4:	46bd      	mov	sp, r7
 80012f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012fa:	4770      	bx	lr
 80012fc:	e000ed00 	.word	0xe000ed00
 8001300:	52002000 	.word	0x52002000
 8001304:	58024400 	.word	0x58024400
 8001308:	eaf6ed7f 	.word	0xeaf6ed7f
 800130c:	02020200 	.word	0x02020200
 8001310:	01ff0000 	.word	0x01ff0000
 8001314:	01010280 	.word	0x01010280
 8001318:	5c001000 	.word	0x5c001000
 800131c:	ffff0000 	.word	0xffff0000
 8001320:	51008108 	.word	0x51008108
 8001324:	52004000 	.word	0x52004000

08001328 <MX_TIM12_Init>:

TIM_HandleTypeDef htim12;

/* TIM12 init function */
void MX_TIM12_Init(void)
{
 8001328:	b580      	push	{r7, lr}
 800132a:	b08a      	sub	sp, #40	; 0x28
 800132c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM12_Init 0 */

  /* USER CODE END TIM12_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800132e:	f107 031c 	add.w	r3, r7, #28
 8001332:	2200      	movs	r2, #0
 8001334:	601a      	str	r2, [r3, #0]
 8001336:	605a      	str	r2, [r3, #4]
 8001338:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800133a:	463b      	mov	r3, r7
 800133c:	2200      	movs	r2, #0
 800133e:	601a      	str	r2, [r3, #0]
 8001340:	605a      	str	r2, [r3, #4]
 8001342:	609a      	str	r2, [r3, #8]
 8001344:	60da      	str	r2, [r3, #12]
 8001346:	611a      	str	r2, [r3, #16]
 8001348:	615a      	str	r2, [r3, #20]
 800134a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM12_Init 1 */

  /* USER CODE END TIM12_Init 1 */
  htim12.Instance = TIM12;
 800134c:	4b21      	ldr	r3, [pc, #132]	; (80013d4 <MX_TIM12_Init+0xac>)
 800134e:	4a22      	ldr	r2, [pc, #136]	; (80013d8 <MX_TIM12_Init+0xb0>)
 8001350:	601a      	str	r2, [r3, #0]
  htim12.Init.Prescaler = 12000;
 8001352:	4b20      	ldr	r3, [pc, #128]	; (80013d4 <MX_TIM12_Init+0xac>)
 8001354:	f642 62e0 	movw	r2, #12000	; 0x2ee0
 8001358:	605a      	str	r2, [r3, #4]
  htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 800135a:	4b1e      	ldr	r3, [pc, #120]	; (80013d4 <MX_TIM12_Init+0xac>)
 800135c:	2200      	movs	r2, #0
 800135e:	609a      	str	r2, [r3, #8]
  htim12.Init.Period = 100;
 8001360:	4b1c      	ldr	r3, [pc, #112]	; (80013d4 <MX_TIM12_Init+0xac>)
 8001362:	2264      	movs	r2, #100	; 0x64
 8001364:	60da      	str	r2, [r3, #12]
  htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001366:	4b1b      	ldr	r3, [pc, #108]	; (80013d4 <MX_TIM12_Init+0xac>)
 8001368:	2200      	movs	r2, #0
 800136a:	611a      	str	r2, [r3, #16]
  htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800136c:	4b19      	ldr	r3, [pc, #100]	; (80013d4 <MX_TIM12_Init+0xac>)
 800136e:	2200      	movs	r2, #0
 8001370:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 8001372:	4818      	ldr	r0, [pc, #96]	; (80013d4 <MX_TIM12_Init+0xac>)
 8001374:	f00a fecb 	bl	800c10e <HAL_TIM_PWM_Init>
 8001378:	4603      	mov	r3, r0
 800137a:	2b00      	cmp	r3, #0
 800137c:	d001      	beq.n	8001382 <MX_TIM12_Init+0x5a>
  {
    Error_Handler();
 800137e:	f7ff fba3 	bl	8000ac8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001382:	2300      	movs	r3, #0
 8001384:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001386:	2300      	movs	r3, #0
 8001388:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim12, &sMasterConfig) != HAL_OK)
 800138a:	f107 031c 	add.w	r3, r7, #28
 800138e:	4619      	mov	r1, r3
 8001390:	4810      	ldr	r0, [pc, #64]	; (80013d4 <MX_TIM12_Init+0xac>)
 8001392:	f00b fccb 	bl	800cd2c <HAL_TIMEx_MasterConfigSynchronization>
 8001396:	4603      	mov	r3, r0
 8001398:	2b00      	cmp	r3, #0
 800139a:	d001      	beq.n	80013a0 <MX_TIM12_Init+0x78>
  {
    Error_Handler();
 800139c:	f7ff fb94 	bl	8000ac8 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013a0:	2360      	movs	r3, #96	; 0x60
 80013a2:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80013a4:	2300      	movs	r3, #0
 80013a6:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013a8:	2300      	movs	r3, #0
 80013aa:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80013ac:	2300      	movs	r3, #0
 80013ae:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80013b0:	463b      	mov	r3, r7
 80013b2:	2204      	movs	r2, #4
 80013b4:	4619      	mov	r1, r3
 80013b6:	4807      	ldr	r0, [pc, #28]	; (80013d4 <MX_TIM12_Init+0xac>)
 80013b8:	f00b f80e 	bl	800c3d8 <HAL_TIM_PWM_ConfigChannel>
 80013bc:	4603      	mov	r3, r0
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d001      	beq.n	80013c6 <MX_TIM12_Init+0x9e>
  {
    Error_Handler();
 80013c2:	f7ff fb81 	bl	8000ac8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM12_Init 2 */

  /* USER CODE END TIM12_Init 2 */
  HAL_TIM_MspPostInit(&htim12);
 80013c6:	4803      	ldr	r0, [pc, #12]	; (80013d4 <MX_TIM12_Init+0xac>)
 80013c8:	f000 f82a 	bl	8001420 <HAL_TIM_MspPostInit>

}
 80013cc:	bf00      	nop
 80013ce:	3728      	adds	r7, #40	; 0x28
 80013d0:	46bd      	mov	sp, r7
 80013d2:	bd80      	pop	{r7, pc}
 80013d4:	24000314 	.word	0x24000314
 80013d8:	40001800 	.word	0x40001800

080013dc <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 80013dc:	b480      	push	{r7}
 80013de:	b085      	sub	sp, #20
 80013e0:	af00      	add	r7, sp, #0
 80013e2:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM12)
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	4a0b      	ldr	r2, [pc, #44]	; (8001418 <HAL_TIM_PWM_MspInit+0x3c>)
 80013ea:	4293      	cmp	r3, r2
 80013ec:	d10e      	bne.n	800140c <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM12_MspInit 0 */

  /* USER CODE END TIM12_MspInit 0 */
    /* TIM12 clock enable */
    __HAL_RCC_TIM12_CLK_ENABLE();
 80013ee:	4b0b      	ldr	r3, [pc, #44]	; (800141c <HAL_TIM_PWM_MspInit+0x40>)
 80013f0:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80013f4:	4a09      	ldr	r2, [pc, #36]	; (800141c <HAL_TIM_PWM_MspInit+0x40>)
 80013f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013fa:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80013fe:	4b07      	ldr	r3, [pc, #28]	; (800141c <HAL_TIM_PWM_MspInit+0x40>)
 8001400:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8001404:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001408:	60fb      	str	r3, [r7, #12]
 800140a:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM12_MspInit 1 */

  /* USER CODE END TIM12_MspInit 1 */
  }
}
 800140c:	bf00      	nop
 800140e:	3714      	adds	r7, #20
 8001410:	46bd      	mov	sp, r7
 8001412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001416:	4770      	bx	lr
 8001418:	40001800 	.word	0x40001800
 800141c:	58024400 	.word	0x58024400

08001420 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b088      	sub	sp, #32
 8001424:	af00      	add	r7, sp, #0
 8001426:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001428:	f107 030c 	add.w	r3, r7, #12
 800142c:	2200      	movs	r2, #0
 800142e:	601a      	str	r2, [r3, #0]
 8001430:	605a      	str	r2, [r3, #4]
 8001432:	609a      	str	r2, [r3, #8]
 8001434:	60da      	str	r2, [r3, #12]
 8001436:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM12)
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	681b      	ldr	r3, [r3, #0]
 800143c:	4a13      	ldr	r2, [pc, #76]	; (800148c <HAL_TIM_MspPostInit+0x6c>)
 800143e:	4293      	cmp	r3, r2
 8001440:	d11f      	bne.n	8001482 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM12_MspPostInit 0 */

  /* USER CODE END TIM12_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001442:	4b13      	ldr	r3, [pc, #76]	; (8001490 <HAL_TIM_MspPostInit+0x70>)
 8001444:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001448:	4a11      	ldr	r2, [pc, #68]	; (8001490 <HAL_TIM_MspPostInit+0x70>)
 800144a:	f043 0302 	orr.w	r3, r3, #2
 800144e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001452:	4b0f      	ldr	r3, [pc, #60]	; (8001490 <HAL_TIM_MspPostInit+0x70>)
 8001454:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001458:	f003 0302 	and.w	r3, r3, #2
 800145c:	60bb      	str	r3, [r7, #8]
 800145e:	68bb      	ldr	r3, [r7, #8]
    /**TIM12 GPIO Configuration
    PB15     ------> TIM12_CH2
    */
    GPIO_InitStruct.Pin = DISPL_LED_Pin;
 8001460:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001464:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001466:	2302      	movs	r3, #2
 8001468:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800146a:	2300      	movs	r3, #0
 800146c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800146e:	2300      	movs	r3, #0
 8001470:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM12;
 8001472:	2302      	movs	r3, #2
 8001474:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DISPL_LED_GPIO_Port, &GPIO_InitStruct);
 8001476:	f107 030c 	add.w	r3, r7, #12
 800147a:	4619      	mov	r1, r3
 800147c:	4805      	ldr	r0, [pc, #20]	; (8001494 <HAL_TIM_MspPostInit+0x74>)
 800147e:	f004 feed 	bl	800625c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM12_MspPostInit 1 */

  /* USER CODE END TIM12_MspPostInit 1 */
  }

}
 8001482:	bf00      	nop
 8001484:	3720      	adds	r7, #32
 8001486:	46bd      	mov	sp, r7
 8001488:	bd80      	pop	{r7, pc}
 800148a:	bf00      	nop
 800148c:	40001800 	.word	0x40001800
 8001490:	58024400 	.word	0x58024400
 8001494:	58020400 	.word	0x58020400

08001498 <w25qxx_Init>:
w25qxx_StatusTypeDef w25qxx_Mode = w25qxx_SPIMode;
uint8_t w25qxx_StatusReg[3];
uint16_t w25qxx_ID;

void w25qxx_Init(void)
{
 8001498:	b580      	push	{r7, lr}
 800149a:	af00      	add	r7, sp, #0
	HAL_Delay(5);
 800149c:	2005      	movs	r0, #5
 800149e:	f001 f907 	bl	80026b0 <HAL_Delay>
	MX_QUADSPI_Init();
 80014a2:	f7ff fb17 	bl	8000ad4 <MX_QUADSPI_Init>
	QSPI_ResetDevice(&hqspi);
 80014a6:	4808      	ldr	r0, [pc, #32]	; (80014c8 <w25qxx_Init+0x30>)
 80014a8:	f000 f9cc 	bl	8001844 <QSPI_ResetDevice>
	HAL_Delay(0); // 1ms wait device stable
 80014ac:	2000      	movs	r0, #0
 80014ae:	f001 f8ff 	bl	80026b0 <HAL_Delay>
	w25qxx_ID = w25qxx_GetID();
 80014b2:	f000 f80d 	bl	80014d0 <w25qxx_GetID>
 80014b6:	4603      	mov	r3, r0
 80014b8:	461a      	mov	r2, r3
 80014ba:	4b04      	ldr	r3, [pc, #16]	; (80014cc <w25qxx_Init+0x34>)
 80014bc:	801a      	strh	r2, [r3, #0]
	w25qxx_ReadAllStatusReg();
 80014be:	f000 f8d9 	bl	8001674 <w25qxx_ReadAllStatusReg>
}
 80014c2:	bf00      	nop
 80014c4:	bd80      	pop	{r7, pc}
 80014c6:	bf00      	nop
 80014c8:	240001a0 	.word	0x240001a0
 80014cc:	24000364 	.word	0x24000364

080014d0 <w25qxx_GetID>:

uint16_t w25qxx_GetID(void)
{
 80014d0:	b580      	push	{r7, lr}
 80014d2:	b088      	sub	sp, #32
 80014d4:	af06      	add	r7, sp, #24
	uint8_t ID[6];
	uint16_t deviceID;
	
	if(w25qxx_Mode == w25qxx_SPIMode)
 80014d6:	4b23      	ldr	r3, [pc, #140]	; (8001564 <w25qxx_GetID+0x94>)
 80014d8:	781b      	ldrb	r3, [r3, #0]
 80014da:	2b05      	cmp	r3, #5
 80014dc:	d114      	bne.n	8001508 <w25qxx_GetID+0x38>
		QSPI_Send_CMD(&hqspi,W25X_QUAD_ManufactDeviceID,0x00,QSPI_ADDRESS_24_BITS,6,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_4_LINES, QSPI_DATA_4_LINES, sizeof(ID));
 80014de:	2306      	movs	r3, #6
 80014e0:	9304      	str	r3, [sp, #16]
 80014e2:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80014e6:	9303      	str	r3, [sp, #12]
 80014e8:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80014ec:	9302      	str	r3, [sp, #8]
 80014ee:	f44f 7380 	mov.w	r3, #256	; 0x100
 80014f2:	9301      	str	r3, [sp, #4]
 80014f4:	2306      	movs	r3, #6
 80014f6:	9300      	str	r3, [sp, #0]
 80014f8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80014fc:	2200      	movs	r2, #0
 80014fe:	2194      	movs	r1, #148	; 0x94
 8001500:	4819      	ldr	r0, [pc, #100]	; (8001568 <w25qxx_GetID+0x98>)
 8001502:	f000 f9f8 	bl	80018f6 <QSPI_Send_CMD>
 8001506:	e013      	b.n	8001530 <w25qxx_GetID+0x60>
	else
		QSPI_Send_CMD(&hqspi,W25X_ManufactDeviceID,0x00,QSPI_ADDRESS_24_BITS,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_4_LINES, QSPI_DATA_4_LINES, sizeof(ID));
 8001508:	2306      	movs	r3, #6
 800150a:	9304      	str	r3, [sp, #16]
 800150c:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8001510:	9303      	str	r3, [sp, #12]
 8001512:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8001516:	9302      	str	r3, [sp, #8]
 8001518:	f44f 7340 	mov.w	r3, #768	; 0x300
 800151c:	9301      	str	r3, [sp, #4]
 800151e:	2300      	movs	r3, #0
 8001520:	9300      	str	r3, [sp, #0]
 8001522:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001526:	2200      	movs	r2, #0
 8001528:	2190      	movs	r1, #144	; 0x90
 800152a:	480f      	ldr	r0, [pc, #60]	; (8001568 <w25qxx_GetID+0x98>)
 800152c:	f000 f9e3 	bl	80018f6 <QSPI_Send_CMD>

	/* Reception of the data */
  if (HAL_QSPI_Receive(&hqspi, ID, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001530:	463b      	mov	r3, r7
 8001532:	f241 3288 	movw	r2, #5000	; 0x1388
 8001536:	4619      	mov	r1, r3
 8001538:	480b      	ldr	r0, [pc, #44]	; (8001568 <w25qxx_GetID+0x98>)
 800153a:	f005 fa29 	bl	8006990 <HAL_QSPI_Receive>
 800153e:	4603      	mov	r3, r0
 8001540:	2b00      	cmp	r3, #0
 8001542:	d001      	beq.n	8001548 <w25qxx_GetID+0x78>
  {
    return w25qxx_ERROR;
 8001544:	2301      	movs	r3, #1
 8001546:	e008      	b.n	800155a <w25qxx_GetID+0x8a>
  }
	deviceID = (ID[0] << 8) | ID[1];
 8001548:	783b      	ldrb	r3, [r7, #0]
 800154a:	021b      	lsls	r3, r3, #8
 800154c:	b21a      	sxth	r2, r3
 800154e:	787b      	ldrb	r3, [r7, #1]
 8001550:	b21b      	sxth	r3, r3
 8001552:	4313      	orrs	r3, r2
 8001554:	b21b      	sxth	r3, r3
 8001556:	80fb      	strh	r3, [r7, #6]

	return deviceID;
 8001558:	88fb      	ldrh	r3, [r7, #6]
}
 800155a:	4618      	mov	r0, r3
 800155c:	3708      	adds	r7, #8
 800155e:	46bd      	mov	sp, r7
 8001560:	bd80      	pop	{r7, pc}
 8001562:	bf00      	nop
 8001564:	2400000c 	.word	0x2400000c
 8001568:	240001a0 	.word	0x240001a0

0800156c <w25qxx_ReadSR>:

uint8_t w25qxx_ReadSR(uint8_t SR)
{
 800156c:	b580      	push	{r7, lr}
 800156e:	b08a      	sub	sp, #40	; 0x28
 8001570:	af06      	add	r7, sp, #24
 8001572:	4603      	mov	r3, r0
 8001574:	71fb      	strb	r3, [r7, #7]
	uint8_t byte=0;
 8001576:	2300      	movs	r3, #0
 8001578:	73fb      	strb	r3, [r7, #15]
	if(w25qxx_Mode == w25qxx_SPIMode)
 800157a:	4b1b      	ldr	r3, [pc, #108]	; (80015e8 <w25qxx_ReadSR+0x7c>)
 800157c:	781b      	ldrb	r3, [r3, #0]
 800157e:	2b05      	cmp	r3, #5
 8001580:	d112      	bne.n	80015a8 <w25qxx_ReadSR+0x3c>
		QSPI_Send_CMD(&hqspi,SR,0x00,QSPI_ADDRESS_8_BITS,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE, QSPI_DATA_1_LINE, 1);
 8001582:	79f9      	ldrb	r1, [r7, #7]
 8001584:	2301      	movs	r3, #1
 8001586:	9304      	str	r3, [sp, #16]
 8001588:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800158c:	9303      	str	r3, [sp, #12]
 800158e:	2300      	movs	r3, #0
 8001590:	9302      	str	r3, [sp, #8]
 8001592:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001596:	9301      	str	r3, [sp, #4]
 8001598:	2300      	movs	r3, #0
 800159a:	9300      	str	r3, [sp, #0]
 800159c:	2300      	movs	r3, #0
 800159e:	2200      	movs	r2, #0
 80015a0:	4812      	ldr	r0, [pc, #72]	; (80015ec <w25qxx_ReadSR+0x80>)
 80015a2:	f000 f9a8 	bl	80018f6 <QSPI_Send_CMD>
 80015a6:	e011      	b.n	80015cc <w25qxx_ReadSR+0x60>
	else
		QSPI_Send_CMD(&hqspi,SR,0x00,QSPI_ADDRESS_8_BITS,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE, QSPI_DATA_4_LINES, 1);
 80015a8:	79f9      	ldrb	r1, [r7, #7]
 80015aa:	2301      	movs	r3, #1
 80015ac:	9304      	str	r3, [sp, #16]
 80015ae:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80015b2:	9303      	str	r3, [sp, #12]
 80015b4:	2300      	movs	r3, #0
 80015b6:	9302      	str	r3, [sp, #8]
 80015b8:	f44f 7340 	mov.w	r3, #768	; 0x300
 80015bc:	9301      	str	r3, [sp, #4]
 80015be:	2300      	movs	r3, #0
 80015c0:	9300      	str	r3, [sp, #0]
 80015c2:	2300      	movs	r3, #0
 80015c4:	2200      	movs	r2, #0
 80015c6:	4809      	ldr	r0, [pc, #36]	; (80015ec <w25qxx_ReadSR+0x80>)
 80015c8:	f000 f995 	bl	80018f6 <QSPI_Send_CMD>
	
	if (HAL_QSPI_Receive(&hqspi,&byte,HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80015cc:	f107 030f 	add.w	r3, r7, #15
 80015d0:	f241 3288 	movw	r2, #5000	; 0x1388
 80015d4:	4619      	mov	r1, r3
 80015d6:	4805      	ldr	r0, [pc, #20]	; (80015ec <w25qxx_ReadSR+0x80>)
 80015d8:	f005 f9da 	bl	8006990 <HAL_QSPI_Receive>
	{
		
	}
  return byte;
 80015dc:	7bfb      	ldrb	r3, [r7, #15]
}
 80015de:	4618      	mov	r0, r3
 80015e0:	3710      	adds	r7, #16
 80015e2:	46bd      	mov	sp, r7
 80015e4:	bd80      	pop	{r7, pc}
 80015e6:	bf00      	nop
 80015e8:	2400000c 	.word	0x2400000c
 80015ec:	240001a0 	.word	0x240001a0

080015f0 <w25qxx_WriteSR>:

uint8_t w25qxx_WriteSR(uint8_t SR,uint8_t data)
{
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b088      	sub	sp, #32
 80015f4:	af06      	add	r7, sp, #24
 80015f6:	4603      	mov	r3, r0
 80015f8:	460a      	mov	r2, r1
 80015fa:	71fb      	strb	r3, [r7, #7]
 80015fc:	4613      	mov	r3, r2
 80015fe:	71bb      	strb	r3, [r7, #6]
	if(w25qxx_Mode == w25qxx_SPIMode)
 8001600:	4b1a      	ldr	r3, [pc, #104]	; (800166c <w25qxx_WriteSR+0x7c>)
 8001602:	781b      	ldrb	r3, [r3, #0]
 8001604:	2b05      	cmp	r3, #5
 8001606:	d112      	bne.n	800162e <w25qxx_WriteSR+0x3e>
		QSPI_Send_CMD(&hqspi,SR,0x00,QSPI_ADDRESS_8_BITS,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE, QSPI_DATA_1_LINE, 1);
 8001608:	79f9      	ldrb	r1, [r7, #7]
 800160a:	2301      	movs	r3, #1
 800160c:	9304      	str	r3, [sp, #16]
 800160e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001612:	9303      	str	r3, [sp, #12]
 8001614:	2300      	movs	r3, #0
 8001616:	9302      	str	r3, [sp, #8]
 8001618:	f44f 7380 	mov.w	r3, #256	; 0x100
 800161c:	9301      	str	r3, [sp, #4]
 800161e:	2300      	movs	r3, #0
 8001620:	9300      	str	r3, [sp, #0]
 8001622:	2300      	movs	r3, #0
 8001624:	2200      	movs	r2, #0
 8001626:	4812      	ldr	r0, [pc, #72]	; (8001670 <w25qxx_WriteSR+0x80>)
 8001628:	f000 f965 	bl	80018f6 <QSPI_Send_CMD>
 800162c:	e011      	b.n	8001652 <w25qxx_WriteSR+0x62>
	else
		QSPI_Send_CMD(&hqspi,SR,0x00,QSPI_ADDRESS_8_BITS,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE, QSPI_DATA_4_LINES, 1);
 800162e:	79f9      	ldrb	r1, [r7, #7]
 8001630:	2301      	movs	r3, #1
 8001632:	9304      	str	r3, [sp, #16]
 8001634:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8001638:	9303      	str	r3, [sp, #12]
 800163a:	2300      	movs	r3, #0
 800163c:	9302      	str	r3, [sp, #8]
 800163e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001642:	9301      	str	r3, [sp, #4]
 8001644:	2300      	movs	r3, #0
 8001646:	9300      	str	r3, [sp, #0]
 8001648:	2300      	movs	r3, #0
 800164a:	2200      	movs	r2, #0
 800164c:	4808      	ldr	r0, [pc, #32]	; (8001670 <w25qxx_WriteSR+0x80>)
 800164e:	f000 f952 	bl	80018f6 <QSPI_Send_CMD>

  return HAL_QSPI_Transmit(&hqspi,&data,HAL_QPSI_TIMEOUT_DEFAULT_VALUE);
 8001652:	1dbb      	adds	r3, r7, #6
 8001654:	f241 3288 	movw	r2, #5000	; 0x1388
 8001658:	4619      	mov	r1, r3
 800165a:	4805      	ldr	r0, [pc, #20]	; (8001670 <w25qxx_WriteSR+0x80>)
 800165c:	f005 f906 	bl	800686c <HAL_QSPI_Transmit>
 8001660:	4603      	mov	r3, r0
}
 8001662:	4618      	mov	r0, r3
 8001664:	3708      	adds	r7, #8
 8001666:	46bd      	mov	sp, r7
 8001668:	bd80      	pop	{r7, pc}
 800166a:	bf00      	nop
 800166c:	2400000c 	.word	0x2400000c
 8001670:	240001a0 	.word	0x240001a0

08001674 <w25qxx_ReadAllStatusReg>:

uint8_t w25qxx_ReadAllStatusReg(void)
{
 8001674:	b580      	push	{r7, lr}
 8001676:	af00      	add	r7, sp, #0
	
	w25qxx_StatusReg[0] = w25qxx_ReadSR(W25X_ReadStatusReg1);
 8001678:	2005      	movs	r0, #5
 800167a:	f7ff ff77 	bl	800156c <w25qxx_ReadSR>
 800167e:	4603      	mov	r3, r0
 8001680:	461a      	mov	r2, r3
 8001682:	4b09      	ldr	r3, [pc, #36]	; (80016a8 <w25qxx_ReadAllStatusReg+0x34>)
 8001684:	701a      	strb	r2, [r3, #0]
	w25qxx_StatusReg[1] = w25qxx_ReadSR(W25X_ReadStatusReg2);
 8001686:	2035      	movs	r0, #53	; 0x35
 8001688:	f7ff ff70 	bl	800156c <w25qxx_ReadSR>
 800168c:	4603      	mov	r3, r0
 800168e:	461a      	mov	r2, r3
 8001690:	4b05      	ldr	r3, [pc, #20]	; (80016a8 <w25qxx_ReadAllStatusReg+0x34>)
 8001692:	705a      	strb	r2, [r3, #1]
	w25qxx_StatusReg[2] = w25qxx_ReadSR(W25X_ReadStatusReg3);
 8001694:	2015      	movs	r0, #21
 8001696:	f7ff ff69 	bl	800156c <w25qxx_ReadSR>
 800169a:	4603      	mov	r3, r0
 800169c:	461a      	mov	r2, r3
 800169e:	4b02      	ldr	r3, [pc, #8]	; (80016a8 <w25qxx_ReadAllStatusReg+0x34>)
 80016a0:	709a      	strb	r2, [r3, #2]
	return w25qxx_OK;
 80016a2:	2300      	movs	r3, #0
}
 80016a4:	4618      	mov	r0, r3
 80016a6:	bd80      	pop	{r7, pc}
 80016a8:	24000360 	.word	0x24000360

080016ac <w25qxx_SetReadParameters>:
	while((w25qxx_ReadSR(W25X_ReadStatusReg1) & 0x01) == 0x01);
}

// Only use in QPI mode
uint8_t w25qxx_SetReadParameters(uint8_t DummyClock,uint8_t WrapLenth)
{
 80016ac:	b580      	push	{r7, lr}
 80016ae:	b08a      	sub	sp, #40	; 0x28
 80016b0:	af06      	add	r7, sp, #24
 80016b2:	4603      	mov	r3, r0
 80016b4:	460a      	mov	r2, r1
 80016b6:	71fb      	strb	r3, [r7, #7]
 80016b8:	4613      	mov	r3, r2
 80016ba:	71bb      	strb	r3, [r7, #6]
	uint8_t send;
	send = (DummyClock/2 -1)<<4 | ((WrapLenth/8 - 1)&0x03);
 80016bc:	79fb      	ldrb	r3, [r7, #7]
 80016be:	085b      	lsrs	r3, r3, #1
 80016c0:	b2db      	uxtb	r3, r3
 80016c2:	3b01      	subs	r3, #1
 80016c4:	011b      	lsls	r3, r3, #4
 80016c6:	b25a      	sxtb	r2, r3
 80016c8:	79bb      	ldrb	r3, [r7, #6]
 80016ca:	08db      	lsrs	r3, r3, #3
 80016cc:	b2db      	uxtb	r3, r3
 80016ce:	3b01      	subs	r3, #1
 80016d0:	b2db      	uxtb	r3, r3
 80016d2:	b25b      	sxtb	r3, r3
 80016d4:	f003 0303 	and.w	r3, r3, #3
 80016d8:	b25b      	sxtb	r3, r3
 80016da:	4313      	orrs	r3, r2
 80016dc:	b25b      	sxtb	r3, r3
 80016de:	b2db      	uxtb	r3, r3
 80016e0:	73fb      	strb	r3, [r7, #15]
	
	W25qxx_WriteEnable();
 80016e2:	f000 f84b 	bl	800177c <W25qxx_WriteEnable>
	
	QSPI_Send_CMD(&hqspi,W25X_SetReadParam,0x00,QSPI_ADDRESS_8_BITS,0,QSPI_INSTRUCTION_4_LINES,QSPI_ADDRESS_NONE, QSPI_DATA_4_LINES, 1);
 80016e6:	2301      	movs	r3, #1
 80016e8:	9304      	str	r3, [sp, #16]
 80016ea:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80016ee:	9303      	str	r3, [sp, #12]
 80016f0:	2300      	movs	r3, #0
 80016f2:	9302      	str	r3, [sp, #8]
 80016f4:	f44f 7340 	mov.w	r3, #768	; 0x300
 80016f8:	9301      	str	r3, [sp, #4]
 80016fa:	2300      	movs	r3, #0
 80016fc:	9300      	str	r3, [sp, #0]
 80016fe:	2300      	movs	r3, #0
 8001700:	2200      	movs	r2, #0
 8001702:	21c0      	movs	r1, #192	; 0xc0
 8001704:	4807      	ldr	r0, [pc, #28]	; (8001724 <w25qxx_SetReadParameters+0x78>)
 8001706:	f000 f8f6 	bl	80018f6 <QSPI_Send_CMD>
	
	return HAL_QSPI_Transmit(&hqspi,&send,HAL_QPSI_TIMEOUT_DEFAULT_VALUE);
 800170a:	f107 030f 	add.w	r3, r7, #15
 800170e:	f241 3288 	movw	r2, #5000	; 0x1388
 8001712:	4619      	mov	r1, r3
 8001714:	4803      	ldr	r0, [pc, #12]	; (8001724 <w25qxx_SetReadParameters+0x78>)
 8001716:	f005 f8a9 	bl	800686c <HAL_QSPI_Transmit>
 800171a:	4603      	mov	r3, r0
}
 800171c:	4618      	mov	r0, r3
 800171e:	3710      	adds	r7, #16
 8001720:	46bd      	mov	sp, r7
 8001722:	bd80      	pop	{r7, pc}
 8001724:	240001a0 	.word	0x240001a0

08001728 <w25qxx_EnterQPI>:

uint8_t w25qxx_EnterQPI(void)
{
 8001728:	b580      	push	{r7, lr}
 800172a:	af00      	add	r7, sp, #0
	/* Enter QSPI memory in QSPI mode */
  if(QSPI_EnterQPI(&hqspi) != w25qxx_OK)
 800172c:	4807      	ldr	r0, [pc, #28]	; (800174c <w25qxx_EnterQPI+0x24>)
 800172e:	f000 f9bd 	bl	8001aac <QSPI_EnterQPI>
 8001732:	4603      	mov	r3, r0
 8001734:	2b00      	cmp	r3, #0
 8001736:	d001      	beq.n	800173c <w25qxx_EnterQPI+0x14>
  {
    return w25qxx_ERROR;
 8001738:	2301      	movs	r3, #1
 800173a:	e004      	b.n	8001746 <w25qxx_EnterQPI+0x1e>
  }
	
	return w25qxx_SetReadParameters(8,8);
 800173c:	2108      	movs	r1, #8
 800173e:	2008      	movs	r0, #8
 8001740:	f7ff ffb4 	bl	80016ac <w25qxx_SetReadParameters>
 8001744:	4603      	mov	r3, r0
}
 8001746:	4618      	mov	r0, r3
 8001748:	bd80      	pop	{r7, pc}
 800174a:	bf00      	nop
 800174c:	240001a0 	.word	0x240001a0

08001750 <w25qxx_Startup>:
/**
  * @brief  Initializes and configure the QSPI interface.
  * @retval QSPI memory status
  */
uint8_t w25qxx_Startup(uint8_t DTRMode)
{
 8001750:	b580      	push	{r7, lr}
 8001752:	b082      	sub	sp, #8
 8001754:	af00      	add	r7, sp, #0
 8001756:	4603      	mov	r3, r0
 8001758:	71fb      	strb	r3, [r7, #7]
  /* Enable MemoryMapped mode */
  if( QSPI_EnableMemoryMappedMode(&hqspi,DTRMode) != w25qxx_OK )
 800175a:	79fb      	ldrb	r3, [r7, #7]
 800175c:	4619      	mov	r1, r3
 800175e:	4806      	ldr	r0, [pc, #24]	; (8001778 <w25qxx_Startup+0x28>)
 8001760:	f000 f818 	bl	8001794 <QSPI_EnableMemoryMappedMode>
 8001764:	4603      	mov	r3, r0
 8001766:	2b00      	cmp	r3, #0
 8001768:	d001      	beq.n	800176e <w25qxx_Startup+0x1e>
  {
    return w25qxx_ERROR;
 800176a:	2301      	movs	r3, #1
 800176c:	e000      	b.n	8001770 <w25qxx_Startup+0x20>
  }
  return w25qxx_OK;
 800176e:	2300      	movs	r3, #0
}
 8001770:	4618      	mov	r0, r3
 8001772:	3708      	adds	r7, #8
 8001774:	46bd      	mov	sp, r7
 8001776:	bd80      	pop	{r7, pc}
 8001778:	240001a0 	.word	0x240001a0

0800177c <W25qxx_WriteEnable>:

uint8_t W25qxx_WriteEnable(void)
{
 800177c:	b580      	push	{r7, lr}
 800177e:	af00      	add	r7, sp, #0
	return QSPI_WriteEnable(&hqspi);
 8001780:	4803      	ldr	r0, [pc, #12]	; (8001790 <W25qxx_WriteEnable+0x14>)
 8001782:	f000 f8ed 	bl	8001960 <QSPI_WriteEnable>
 8001786:	4603      	mov	r3, r0
 8001788:	b2db      	uxtb	r3, r3
}
 800178a:	4618      	mov	r0, r3
 800178c:	bd80      	pop	{r7, pc}
 800178e:	bf00      	nop
 8001790:	240001a0 	.word	0x240001a0

08001794 <QSPI_EnableMemoryMappedMode>:
	* @param  hqspi: QSPI handle
  * @param  DTRMode: w25qxx_DTRMode DTR mode ,w25qxx_NormalMode Normal mode
  * @retval QSPI memory status
  */
static uint32_t QSPI_EnableMemoryMappedMode(QSPI_HandleTypeDef *hqspi,uint8_t DTRMode)
{
 8001794:	b580      	push	{r7, lr}
 8001796:	b092      	sub	sp, #72	; 0x48
 8001798:	af00      	add	r7, sp, #0
 800179a:	6078      	str	r0, [r7, #4]
 800179c:	460b      	mov	r3, r1
 800179e:	70fb      	strb	r3, [r7, #3]
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;

  /* Configure the command for the read instruction */
	if(w25qxx_Mode == w25qxx_QPIMode)
 80017a0:	4b27      	ldr	r3, [pc, #156]	; (8001840 <QSPI_EnableMemoryMappedMode+0xac>)
 80017a2:	781b      	ldrb	r3, [r3, #0]
 80017a4:	2b04      	cmp	r3, #4
 80017a6:	d103      	bne.n	80017b0 <QSPI_EnableMemoryMappedMode+0x1c>
		s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80017a8:	f44f 7340 	mov.w	r3, #768	; 0x300
 80017ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80017ae:	e002      	b.n	80017b6 <QSPI_EnableMemoryMappedMode+0x22>
	else 
		s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80017b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80017b4:	62bb      	str	r3, [r7, #40]	; 0x28
	
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80017b6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80017ba:	62fb      	str	r3, [r7, #44]	; 0x2c
	s_command.Address           = 0;
 80017bc:	2300      	movs	r3, #0
 80017be:	617b      	str	r3, [r7, #20]
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80017c0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80017c4:	61fb      	str	r3, [r7, #28]
	
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_4_LINES;
 80017c6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 80017ca:	633b      	str	r3, [r7, #48]	; 0x30
	s_command.AlternateBytes    = 0xEF;
 80017cc:	23ef      	movs	r3, #239	; 0xef
 80017ce:	61bb      	str	r3, [r7, #24]
	s_command.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 80017d0:	2300      	movs	r3, #0
 80017d2:	623b      	str	r3, [r7, #32]

  s_command.DataMode          = QSPI_DATA_4_LINES;	
 80017d4:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80017d8:	637b      	str	r3, [r7, #52]	; 0x34
	
	if(DTRMode == w25qxx_DTRMode)
 80017da:	78fb      	ldrb	r3, [r7, #3]
 80017dc:	2b06      	cmp	r3, #6
 80017de:	d107      	bne.n	80017f0 <QSPI_EnableMemoryMappedMode+0x5c>
	{
		s_command.Instruction     = W25X_QUAD_INOUT_FAST_READ_DTR_CMD; 
 80017e0:	23ed      	movs	r3, #237	; 0xed
 80017e2:	613b      	str	r3, [r7, #16]
		s_command.DummyCycles     = W25X_DUMMY_CYCLES_READ_QUAD_DTR;
 80017e4:	2304      	movs	r3, #4
 80017e6:	627b      	str	r3, [r7, #36]	; 0x24
		s_command.DdrMode         = QSPI_DDR_MODE_ENABLE;
 80017e8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80017ec:	63fb      	str	r3, [r7, #60]	; 0x3c
 80017ee:	e00c      	b.n	800180a <QSPI_EnableMemoryMappedMode+0x76>
	}
	else
	{
		s_command.Instruction     = W25X_QUAD_INOUT_FAST_READ_CMD;
 80017f0:	23eb      	movs	r3, #235	; 0xeb
 80017f2:	613b      	str	r3, [r7, #16]
		
		if(w25qxx_Mode == w25qxx_QPIMode)
 80017f4:	4b12      	ldr	r3, [pc, #72]	; (8001840 <QSPI_EnableMemoryMappedMode+0xac>)
 80017f6:	781b      	ldrb	r3, [r3, #0]
 80017f8:	2b04      	cmp	r3, #4
 80017fa:	d102      	bne.n	8001802 <QSPI_EnableMemoryMappedMode+0x6e>
			s_command.DummyCycles   = W25X_DUMMY_CYCLES_READ_QUAD;
 80017fc:	2306      	movs	r3, #6
 80017fe:	627b      	str	r3, [r7, #36]	; 0x24
 8001800:	e001      	b.n	8001806 <QSPI_EnableMemoryMappedMode+0x72>
		else
			s_command.DummyCycles   = W25X_DUMMY_CYCLES_READ_QUAD-2;
 8001802:	2304      	movs	r3, #4
 8001804:	627b      	str	r3, [r7, #36]	; 0x24
		
		s_command.DdrMode         = QSPI_DDR_MODE_DISABLE;
 8001806:	2300      	movs	r3, #0
 8001808:	63fb      	str	r3, [r7, #60]	; 0x3c
	}
	
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800180a:	2300      	movs	r3, #0
 800180c:	643b      	str	r3, [r7, #64]	; 0x40
  s_command.SIOOMode          = QSPI_SIOO_INST_ONLY_FIRST_CMD;
 800180e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8001812:	647b      	str	r3, [r7, #68]	; 0x44

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8001814:	2300      	movs	r3, #0
 8001816:	60fb      	str	r3, [r7, #12]
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8001818:	2300      	movs	r3, #0
 800181a:	60bb      	str	r3, [r7, #8]

  if (HAL_QSPI_MemoryMapped(hqspi, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800181c:	f107 0208 	add.w	r2, r7, #8
 8001820:	f107 0310 	add.w	r3, r7, #16
 8001824:	4619      	mov	r1, r3
 8001826:	6878      	ldr	r0, [r7, #4]
 8001828:	f005 f9c6 	bl	8006bb8 <HAL_QSPI_MemoryMapped>
 800182c:	4603      	mov	r3, r0
 800182e:	2b00      	cmp	r3, #0
 8001830:	d001      	beq.n	8001836 <QSPI_EnableMemoryMappedMode+0xa2>
  {
    return w25qxx_ERROR;
 8001832:	2301      	movs	r3, #1
 8001834:	e000      	b.n	8001838 <QSPI_EnableMemoryMappedMode+0xa4>
  }

  return w25qxx_OK;
 8001836:	2300      	movs	r3, #0
}
 8001838:	4618      	mov	r0, r3
 800183a:	3748      	adds	r7, #72	; 0x48
 800183c:	46bd      	mov	sp, r7
 800183e:	bd80      	pop	{r7, pc}
 8001840:	2400000c 	.word	0x2400000c

08001844 <QSPI_ResetDevice>:
  * @brief  This function reset the QSPI memory.
  * @param  hqspi: QSPI handle
  * @retval None
  */
static uint32_t QSPI_ResetDevice(QSPI_HandleTypeDef *hqspi)
{
 8001844:	b580      	push	{r7, lr}
 8001846:	b090      	sub	sp, #64	; 0x40
 8001848:	af00      	add	r7, sp, #0
 800184a:	6078      	str	r0, [r7, #4]
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800184c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001850:	623b      	str	r3, [r7, #32]
  s_command.Instruction       = W25X_EnableReset;
 8001852:	2366      	movs	r3, #102	; 0x66
 8001854:	60bb      	str	r3, [r7, #8]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8001856:	2300      	movs	r3, #0
 8001858:	627b      	str	r3, [r7, #36]	; 0x24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800185a:	2300      	movs	r3, #0
 800185c:	62bb      	str	r3, [r7, #40]	; 0x28
  s_command.DataMode          = QSPI_DATA_NONE;
 800185e:	2300      	movs	r3, #0
 8001860:	62fb      	str	r3, [r7, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8001862:	2300      	movs	r3, #0
 8001864:	61fb      	str	r3, [r7, #28]
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8001866:	2300      	movs	r3, #0
 8001868:	637b      	str	r3, [r7, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800186a:	2300      	movs	r3, #0
 800186c:	63bb      	str	r3, [r7, #56]	; 0x38
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800186e:	2300      	movs	r3, #0
 8001870:	63fb      	str	r3, [r7, #60]	; 0x3c

  /* Send the command */
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001872:	f107 0308 	add.w	r3, r7, #8
 8001876:	f241 3288 	movw	r2, #5000	; 0x1388
 800187a:	4619      	mov	r1, r3
 800187c:	6878      	ldr	r0, [r7, #4]
 800187e:	f004 ff97 	bl	80067b0 <HAL_QSPI_Command>
 8001882:	4603      	mov	r3, r0
 8001884:	2b00      	cmp	r3, #0
 8001886:	d001      	beq.n	800188c <QSPI_ResetDevice+0x48>
  {
    return w25qxx_ERROR;
 8001888:	2301      	movs	r3, #1
 800188a:	e030      	b.n	80018ee <QSPI_ResetDevice+0xaa>
  }

  /* Send the reset device command */
  s_command.Instruction = W25X_ResetDevice;
 800188c:	2399      	movs	r3, #153	; 0x99
 800188e:	60bb      	str	r3, [r7, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8001890:	f107 0308 	add.w	r3, r7, #8
 8001894:	f241 3288 	movw	r2, #5000	; 0x1388
 8001898:	4619      	mov	r1, r3
 800189a:	6878      	ldr	r0, [r7, #4]
 800189c:	f004 ff88 	bl	80067b0 <HAL_QSPI_Command>
 80018a0:	4603      	mov	r3, r0
 80018a2:	2b00      	cmp	r3, #0
 80018a4:	d001      	beq.n	80018aa <QSPI_ResetDevice+0x66>
  {
    return w25qxx_ERROR;
 80018a6:	2301      	movs	r3, #1
 80018a8:	e021      	b.n	80018ee <QSPI_ResetDevice+0xaa>
  }

  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80018aa:	f44f 7340 	mov.w	r3, #768	; 0x300
 80018ae:	623b      	str	r3, [r7, #32]
  s_command.Instruction       = W25X_EnableReset;
 80018b0:	2366      	movs	r3, #102	; 0x66
 80018b2:	60bb      	str	r3, [r7, #8]
  /* Send the command */
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80018b4:	f107 0308 	add.w	r3, r7, #8
 80018b8:	f241 3288 	movw	r2, #5000	; 0x1388
 80018bc:	4619      	mov	r1, r3
 80018be:	6878      	ldr	r0, [r7, #4]
 80018c0:	f004 ff76 	bl	80067b0 <HAL_QSPI_Command>
 80018c4:	4603      	mov	r3, r0
 80018c6:	2b00      	cmp	r3, #0
 80018c8:	d001      	beq.n	80018ce <QSPI_ResetDevice+0x8a>
  {
    return w25qxx_ERROR;
 80018ca:	2301      	movs	r3, #1
 80018cc:	e00f      	b.n	80018ee <QSPI_ResetDevice+0xaa>
  }

  /* Send the reset memory command */
  s_command.Instruction = W25X_ResetDevice;
 80018ce:	2399      	movs	r3, #153	; 0x99
 80018d0:	60bb      	str	r3, [r7, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80018d2:	f107 0308 	add.w	r3, r7, #8
 80018d6:	f241 3288 	movw	r2, #5000	; 0x1388
 80018da:	4619      	mov	r1, r3
 80018dc:	6878      	ldr	r0, [r7, #4]
 80018de:	f004 ff67 	bl	80067b0 <HAL_QSPI_Command>
 80018e2:	4603      	mov	r3, r0
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d001      	beq.n	80018ec <QSPI_ResetDevice+0xa8>
  {
    return w25qxx_ERROR;
 80018e8:	2301      	movs	r3, #1
 80018ea:	e000      	b.n	80018ee <QSPI_ResetDevice+0xaa>
  }
	
  return w25qxx_OK;
 80018ec:	2300      	movs	r3, #0
}
 80018ee:	4618      	mov	r0, r3
 80018f0:	3740      	adds	r7, #64	; 0x40
 80018f2:	46bd      	mov	sp, r7
 80018f4:	bd80      	pop	{r7, pc}

080018f6 <QSPI_Send_CMD>:
 * @return  uint8_t			w25qxx_OK:����
 *                      w25qxx_ERROR:����
 */
static uint8_t QSPI_Send_CMD(QSPI_HandleTypeDef *hqspi,uint32_t instruction, uint32_t address,uint32_t addressSize,uint32_t dummyCycles, 
                    uint32_t instructionMode,uint32_t addressMode, uint32_t dataMode, uint32_t dataSize)
{
 80018f6:	b580      	push	{r7, lr}
 80018f8:	b092      	sub	sp, #72	; 0x48
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	60f8      	str	r0, [r7, #12]
 80018fe:	60b9      	str	r1, [r7, #8]
 8001900:	607a      	str	r2, [r7, #4]
 8001902:	603b      	str	r3, [r7, #0]
    QSPI_CommandTypeDef Cmdhandler;

    Cmdhandler.Instruction        = instruction;   
 8001904:	68bb      	ldr	r3, [r7, #8]
 8001906:	613b      	str	r3, [r7, #16]
	  Cmdhandler.InstructionMode    = instructionMode;  
 8001908:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800190a:	62bb      	str	r3, [r7, #40]	; 0x28
	
    Cmdhandler.Address            = address;
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	617b      	str	r3, [r7, #20]
    Cmdhandler.AddressSize        = addressSize;
 8001910:	683b      	ldr	r3, [r7, #0]
 8001912:	61fb      	str	r3, [r7, #28]
	  Cmdhandler.AddressMode        = addressMode;
 8001914:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8001916:	62fb      	str	r3, [r7, #44]	; 0x2c
	  
	  Cmdhandler.AlternateBytes     = 0x00;
 8001918:	2300      	movs	r3, #0
 800191a:	61bb      	str	r3, [r7, #24]
    Cmdhandler.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;
 800191c:	2300      	movs	r3, #0
 800191e:	623b      	str	r3, [r7, #32]
	  Cmdhandler.AlternateByteMode  = QSPI_ALTERNATE_BYTES_NONE;                              
 8001920:	2300      	movs	r3, #0
 8001922:	633b      	str	r3, [r7, #48]	; 0x30
    Cmdhandler.DummyCycles        = dummyCycles;                   
 8001924:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001926:	627b      	str	r3, [r7, #36]	; 0x24
       					      				
    Cmdhandler.DataMode           = dataMode;
 8001928:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800192a:	637b      	str	r3, [r7, #52]	; 0x34
    Cmdhandler.NbData             = dataSize; 
 800192c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800192e:	63bb      	str	r3, [r7, #56]	; 0x38
	
    Cmdhandler.DdrMode            = QSPI_DDR_MODE_DISABLE;           	
 8001930:	2300      	movs	r3, #0
 8001932:	63fb      	str	r3, [r7, #60]	; 0x3c
    Cmdhandler.DdrHoldHalfCycle   = QSPI_DDR_HHC_ANALOG_DELAY;
 8001934:	2300      	movs	r3, #0
 8001936:	643b      	str	r3, [r7, #64]	; 0x40
    Cmdhandler.SIOOMode           = QSPI_SIOO_INST_EVERY_CMD;
 8001938:	2300      	movs	r3, #0
 800193a:	647b      	str	r3, [r7, #68]	; 0x44

    if(HAL_QSPI_Command(hqspi, &Cmdhandler, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800193c:	f107 0310 	add.w	r3, r7, #16
 8001940:	f241 3288 	movw	r2, #5000	; 0x1388
 8001944:	4619      	mov	r1, r3
 8001946:	68f8      	ldr	r0, [r7, #12]
 8001948:	f004 ff32 	bl	80067b0 <HAL_QSPI_Command>
 800194c:	4603      	mov	r3, r0
 800194e:	2b00      	cmp	r3, #0
 8001950:	d001      	beq.n	8001956 <QSPI_Send_CMD+0x60>
      return w25qxx_ERROR;
 8001952:	2301      	movs	r3, #1
 8001954:	e000      	b.n	8001958 <QSPI_Send_CMD+0x62>

    return w25qxx_OK;
 8001956:	2300      	movs	r3, #0
}
 8001958:	4618      	mov	r0, r3
 800195a:	3748      	adds	r7, #72	; 0x48
 800195c:	46bd      	mov	sp, r7
 800195e:	bd80      	pop	{r7, pc}

08001960 <QSPI_WriteEnable>:
  * @brief  This function send a Write Enable and wait it is effective.
  * @param  hqspi: QSPI handle
  * @retval None
  */
static uint32_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
{
 8001960:	b580      	push	{r7, lr}
 8001962:	b096      	sub	sp, #88	; 0x58
 8001964:	af00      	add	r7, sp, #0
 8001966:	6078      	str	r0, [r7, #4]
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Enable write operations */
	if(w25qxx_Mode == w25qxx_QPIMode)
 8001968:	4b2a      	ldr	r3, [pc, #168]	; (8001a14 <QSPI_WriteEnable+0xb4>)
 800196a:	781b      	ldrb	r3, [r3, #0]
 800196c:	2b04      	cmp	r3, #4
 800196e:	d103      	bne.n	8001978 <QSPI_WriteEnable+0x18>
		s_command.InstructionMode = QSPI_INSTRUCTION_4_LINES;
 8001970:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001974:	63bb      	str	r3, [r7, #56]	; 0x38
 8001976:	e002      	b.n	800197e <QSPI_WriteEnable+0x1e>
	else 
		s_command.InstructionMode = QSPI_INSTRUCTION_1_LINE;
 8001978:	f44f 7380 	mov.w	r3, #256	; 0x100
 800197c:	63bb      	str	r3, [r7, #56]	; 0x38

  s_command.Instruction       = W25X_WriteEnable;
 800197e:	2306      	movs	r3, #6
 8001980:	623b      	str	r3, [r7, #32]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8001982:	2300      	movs	r3, #0
 8001984:	63fb      	str	r3, [r7, #60]	; 0x3c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001986:	2300      	movs	r3, #0
 8001988:	643b      	str	r3, [r7, #64]	; 0x40
  s_command.DataMode          = QSPI_DATA_NONE;
 800198a:	2300      	movs	r3, #0
 800198c:	647b      	str	r3, [r7, #68]	; 0x44
  s_command.DummyCycles       = 0;
 800198e:	2300      	movs	r3, #0
 8001990:	637b      	str	r3, [r7, #52]	; 0x34
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8001992:	2300      	movs	r3, #0
 8001994:	64fb      	str	r3, [r7, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001996:	2300      	movs	r3, #0
 8001998:	653b      	str	r3, [r7, #80]	; 0x50
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800199a:	2300      	movs	r3, #0
 800199c:	657b      	str	r3, [r7, #84]	; 0x54

  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800199e:	f107 0320 	add.w	r3, r7, #32
 80019a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80019a6:	4619      	mov	r1, r3
 80019a8:	6878      	ldr	r0, [r7, #4]
 80019aa:	f004 ff01 	bl	80067b0 <HAL_QSPI_Command>
 80019ae:	4603      	mov	r3, r0
 80019b0:	2b00      	cmp	r3, #0
 80019b2:	d001      	beq.n	80019b8 <QSPI_WriteEnable+0x58>
  {
    return w25qxx_ERROR;
 80019b4:	2301      	movs	r3, #1
 80019b6:	e028      	b.n	8001a0a <QSPI_WriteEnable+0xaa>
  }

  /* Configure automatic polling mode to wait for write enabling */
  s_config.Match           = W25X_SR_WREN;
 80019b8:	2302      	movs	r3, #2
 80019ba:	60bb      	str	r3, [r7, #8]
  s_config.Mask            = W25X_SR_WREN;
 80019bc:	2302      	movs	r3, #2
 80019be:	60fb      	str	r3, [r7, #12]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80019c0:	2300      	movs	r3, #0
 80019c2:	61bb      	str	r3, [r7, #24]
  s_config.StatusBytesSize = 1;
 80019c4:	2301      	movs	r3, #1
 80019c6:	617b      	str	r3, [r7, #20]
  s_config.Interval        = 0x10;
 80019c8:	2310      	movs	r3, #16
 80019ca:	613b      	str	r3, [r7, #16]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80019cc:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80019d0:	61fb      	str	r3, [r7, #28]

  s_command.Instruction    = W25X_ReadStatusReg1;
 80019d2:	2305      	movs	r3, #5
 80019d4:	623b      	str	r3, [r7, #32]
	
	if(w25qxx_Mode == w25qxx_QPIMode)
 80019d6:	4b0f      	ldr	r3, [pc, #60]	; (8001a14 <QSPI_WriteEnable+0xb4>)
 80019d8:	781b      	ldrb	r3, [r3, #0]
 80019da:	2b04      	cmp	r3, #4
 80019dc:	d103      	bne.n	80019e6 <QSPI_WriteEnable+0x86>
		s_command.DataMode     = QSPI_DATA_4_LINES;
 80019de:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80019e2:	647b      	str	r3, [r7, #68]	; 0x44
 80019e4:	e002      	b.n	80019ec <QSPI_WriteEnable+0x8c>
  else 
		s_command.DataMode     = QSPI_DATA_1_LINE;
 80019e6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80019ea:	647b      	str	r3, [r7, #68]	; 0x44
	
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80019ec:	f107 0208 	add.w	r2, r7, #8
 80019f0:	f107 0120 	add.w	r1, r7, #32
 80019f4:	f241 3388 	movw	r3, #5000	; 0x1388
 80019f8:	6878      	ldr	r0, [r7, #4]
 80019fa:	f005 f866 	bl	8006aca <HAL_QSPI_AutoPolling>
 80019fe:	4603      	mov	r3, r0
 8001a00:	2b00      	cmp	r3, #0
 8001a02:	d001      	beq.n	8001a08 <QSPI_WriteEnable+0xa8>
  {
    return w25qxx_ERROR;
 8001a04:	2301      	movs	r3, #1
 8001a06:	e000      	b.n	8001a0a <QSPI_WriteEnable+0xaa>
  }

  return w25qxx_OK;
 8001a08:	2300      	movs	r3, #0
}
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	3758      	adds	r7, #88	; 0x58
 8001a0e:	46bd      	mov	sp, r7
 8001a10:	bd80      	pop	{r7, pc}
 8001a12:	bf00      	nop
 8001a14:	2400000c 	.word	0x2400000c

08001a18 <QSPI_AutoPollingMemReady>:
  * @param  hqspi: QSPI handle
  * @param  Timeout
  * @retval None
  */
static uint32_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
{
 8001a18:	b580      	push	{r7, lr}
 8001a1a:	b096      	sub	sp, #88	; 0x58
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	6078      	str	r0, [r7, #4]
 8001a20:	6039      	str	r1, [r7, #0]
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */
	
	if(w25qxx_Mode == w25qxx_SPIMode)
 8001a22:	4b21      	ldr	r3, [pc, #132]	; (8001aa8 <QSPI_AutoPollingMemReady+0x90>)
 8001a24:	781b      	ldrb	r3, [r3, #0]
 8001a26:	2b05      	cmp	r3, #5
 8001a28:	d103      	bne.n	8001a32 <QSPI_AutoPollingMemReady+0x1a>
		s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8001a2a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001a2e:	63bb      	str	r3, [r7, #56]	; 0x38
 8001a30:	e002      	b.n	8001a38 <QSPI_AutoPollingMemReady+0x20>
	else
		s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8001a32:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001a36:	63bb      	str	r3, [r7, #56]	; 0x38
	
  s_command.Instruction       = W25X_ReadStatusReg1;
 8001a38:	2305      	movs	r3, #5
 8001a3a:	623b      	str	r3, [r7, #32]
	
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	63fb      	str	r3, [r7, #60]	; 0x3c
	s_command.Address           = 0x00;
 8001a40:	2300      	movs	r3, #0
 8001a42:	627b      	str	r3, [r7, #36]	; 0x24
	s_command.AddressSize       = QSPI_ADDRESS_8_BITS;
 8001a44:	2300      	movs	r3, #0
 8001a46:	62fb      	str	r3, [r7, #44]	; 0x2c
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8001a48:	2300      	movs	r3, #0
 8001a4a:	643b      	str	r3, [r7, #64]	; 0x40
	
	if(w25qxx_Mode == w25qxx_SPIMode)
 8001a4c:	4b16      	ldr	r3, [pc, #88]	; (8001aa8 <QSPI_AutoPollingMemReady+0x90>)
 8001a4e:	781b      	ldrb	r3, [r3, #0]
 8001a50:	2b05      	cmp	r3, #5
 8001a52:	d103      	bne.n	8001a5c <QSPI_AutoPollingMemReady+0x44>
		s_command.DataMode        = QSPI_DATA_1_LINE;
 8001a54:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001a58:	647b      	str	r3, [r7, #68]	; 0x44
 8001a5a:	e002      	b.n	8001a62 <QSPI_AutoPollingMemReady+0x4a>
  else
		s_command.DataMode        = QSPI_DATA_4_LINES;
 8001a5c:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8001a60:	647b      	str	r3, [r7, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8001a62:	2300      	movs	r3, #0
 8001a64:	637b      	str	r3, [r7, #52]	; 0x34
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8001a66:	2300      	movs	r3, #0
 8001a68:	64fb      	str	r3, [r7, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8001a6a:	2300      	movs	r3, #0
 8001a6c:	653b      	str	r3, [r7, #80]	; 0x50
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8001a6e:	2300      	movs	r3, #0
 8001a70:	657b      	str	r3, [r7, #84]	; 0x54

  s_config.Match           = 0;
 8001a72:	2300      	movs	r3, #0
 8001a74:	60bb      	str	r3, [r7, #8]
	s_config.Mask            = W25X_SR_WIP;
 8001a76:	2301      	movs	r3, #1
 8001a78:	60fb      	str	r3, [r7, #12]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8001a7a:	2300      	movs	r3, #0
 8001a7c:	61bb      	str	r3, [r7, #24]
  s_config.Interval        = 0x10;
 8001a7e:	2310      	movs	r3, #16
 8001a80:	613b      	str	r3, [r7, #16]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8001a82:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001a86:	61fb      	str	r3, [r7, #28]
  s_config.StatusBytesSize = 1;
 8001a88:	2301      	movs	r3, #1
 8001a8a:	617b      	str	r3, [r7, #20]
  
  return HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout);
 8001a8c:	f107 0208 	add.w	r2, r7, #8
 8001a90:	f107 0120 	add.w	r1, r7, #32
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	6878      	ldr	r0, [r7, #4]
 8001a98:	f005 f817 	bl	8006aca <HAL_QSPI_AutoPolling>
 8001a9c:	4603      	mov	r3, r0

}
 8001a9e:	4618      	mov	r0, r3
 8001aa0:	3758      	adds	r7, #88	; 0x58
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	bd80      	pop	{r7, pc}
 8001aa6:	bf00      	nop
 8001aa8:	2400000c 	.word	0x2400000c

08001aac <QSPI_EnterQPI>:
  * @brief  This function enter the QSPI memory in QPI mode
  * @param  hqspi QSPI handle 
  * @retval QSPI status
  */
static uint8_t QSPI_EnterQPI(QSPI_HandleTypeDef *hqspi)
{
 8001aac:	b580      	push	{r7, lr}
 8001aae:	b08a      	sub	sp, #40	; 0x28
 8001ab0:	af06      	add	r7, sp, #24
 8001ab2:	6078      	str	r0, [r7, #4]
	uint8_t stareg2;
	stareg2 = w25qxx_ReadSR(W25X_ReadStatusReg2);
 8001ab4:	2035      	movs	r0, #53	; 0x35
 8001ab6:	f7ff fd59 	bl	800156c <w25qxx_ReadSR>
 8001aba:	4603      	mov	r3, r0
 8001abc:	73fb      	strb	r3, [r7, #15]
	if((stareg2 & 0X02) == 0) //QEλδʹ��
 8001abe:	7bfb      	ldrb	r3, [r7, #15]
 8001ac0:	f003 0302 	and.w	r3, r3, #2
 8001ac4:	2b00      	cmp	r3, #0
 8001ac6:	d10a      	bne.n	8001ade <QSPI_EnterQPI+0x32>
	{
		W25qxx_WriteEnable();
 8001ac8:	f7ff fe58 	bl	800177c <W25qxx_WriteEnable>
		stareg2 |= 1<<1; //ʹ��QEλ
 8001acc:	7bfb      	ldrb	r3, [r7, #15]
 8001ace:	f043 0302 	orr.w	r3, r3, #2
 8001ad2:	73fb      	strb	r3, [r7, #15]
		w25qxx_WriteSR(W25X_WriteStatusReg2,stareg2);
 8001ad4:	7bfb      	ldrb	r3, [r7, #15]
 8001ad6:	4619      	mov	r1, r3
 8001ad8:	2031      	movs	r0, #49	; 0x31
 8001ada:	f7ff fd89 	bl	80015f0 <w25qxx_WriteSR>
	}
	QSPI_Send_CMD(hqspi,W25X_EnterQSPIMode,0x00,QSPI_ADDRESS_8_BITS,0,QSPI_INSTRUCTION_1_LINE,QSPI_ADDRESS_NONE,QSPI_DATA_NONE,0);
 8001ade:	2300      	movs	r3, #0
 8001ae0:	9304      	str	r3, [sp, #16]
 8001ae2:	2300      	movs	r3, #0
 8001ae4:	9303      	str	r3, [sp, #12]
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	9302      	str	r3, [sp, #8]
 8001aea:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001aee:	9301      	str	r3, [sp, #4]
 8001af0:	2300      	movs	r3, #0
 8001af2:	9300      	str	r3, [sp, #0]
 8001af4:	2300      	movs	r3, #0
 8001af6:	2200      	movs	r2, #0
 8001af8:	2138      	movs	r1, #56	; 0x38
 8001afa:	6878      	ldr	r0, [r7, #4]
 8001afc:	f7ff fefb 	bl	80018f6 <QSPI_Send_CMD>
  
	/* Configure automatic polling mode to wait the memory is ready */
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != w25qxx_OK)
 8001b00:	f241 3188 	movw	r1, #5000	; 0x1388
 8001b04:	6878      	ldr	r0, [r7, #4]
 8001b06:	f7ff ff87 	bl	8001a18 <QSPI_AutoPollingMemReady>
 8001b0a:	4603      	mov	r3, r0
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	d001      	beq.n	8001b14 <QSPI_EnterQPI+0x68>
  {
    return w25qxx_ERROR;
 8001b10:	2301      	movs	r3, #1
 8001b12:	e003      	b.n	8001b1c <QSPI_EnterQPI+0x70>
  }
	
  w25qxx_Mode = w25qxx_QPIMode;
 8001b14:	4b03      	ldr	r3, [pc, #12]	; (8001b24 <QSPI_EnterQPI+0x78>)
 8001b16:	2204      	movs	r2, #4
 8001b18:	701a      	strb	r2, [r3, #0]
	
  return w25qxx_OK;
 8001b1a:	2300      	movs	r3, #0
}
 8001b1c:	4618      	mov	r0, r3
 8001b1e:	3710      	adds	r7, #16
 8001b20:	46bd      	mov	sp, r7
 8001b22:	bd80      	pop	{r7, pc}
 8001b24:	2400000c 	.word	0x2400000c

08001b28 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8001b28:	b580      	push	{r7, lr}
 8001b2a:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8001b2c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001b30:	480e      	ldr	r0, [pc, #56]	; (8001b6c <Displ_Select+0x44>)
 8001b32:	f004 fd43 	bl	80065bc <HAL_GPIO_ReadPin>
 8001b36:	4603      	mov	r3, r0
 8001b38:	2b00      	cmp	r3, #0
 8001b3a:	d014      	beq.n	8001b66 <Displ_Select+0x3e>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8001b3c:	2201      	movs	r2, #1
 8001b3e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001b42:	480b      	ldr	r0, [pc, #44]	; (8001b70 <Displ_Select+0x48>)
 8001b44:	f004 fd52 	bl	80065ec <HAL_GPIO_WritePin>
			SET_SPI_BAUDRATE(DISPL_PRESCALER);   									//change SPI port speed as per display needs
 8001b48:	4b0a      	ldr	r3, [pc, #40]	; (8001b74 <Displ_Select+0x4c>)
 8001b4a:	689b      	ldr	r3, [r3, #8]
 8001b4c:	4a09      	ldr	r2, [pc, #36]	; (8001b74 <Displ_Select+0x4c>)
 8001b4e:	b29b      	uxth	r3, r3
 8001b50:	6093      	str	r3, [r2, #8]
 8001b52:	4b08      	ldr	r3, [pc, #32]	; (8001b74 <Displ_Select+0x4c>)
 8001b54:	4a07      	ldr	r2, [pc, #28]	; (8001b74 <Displ_Select+0x4c>)
 8001b56:	689b      	ldr	r3, [r3, #8]
 8001b58:	6093      	str	r3, [r2, #8]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001b60:	4802      	ldr	r0, [pc, #8]	; (8001b6c <Displ_Select+0x44>)
 8001b62:	f004 fd43 	bl	80065ec <HAL_GPIO_WritePin>
		}
	}
}
 8001b66:	bf00      	nop
 8001b68:	bd80      	pop	{r7, pc}
 8001b6a:	bf00      	nop
 8001b6c:	58021000 	.word	0x58021000
 8001b70:	58020400 	.word	0x58020400
 8001b74:	40013400 	.word	0x40013400

08001b78 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8001b78:	b580      	push	{r7, lr}
 8001b7a:	b086      	sub	sp, #24
 8001b7c:	af00      	add	r7, sp, #0
 8001b7e:	6039      	str	r1, [r7, #0]
 8001b80:	4611      	mov	r1, r2
 8001b82:	461a      	mov	r2, r3
 8001b84:	4603      	mov	r3, r0
 8001b86:	71fb      	strb	r3, [r7, #7]
 8001b88:	460b      	mov	r3, r1
 8001b8a:	80bb      	strh	r3, [r7, #4]
 8001b8c:	4613      	mov	r3, r2
 8001b8e:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8001b90:	bf00      	nop
 8001b92:	4b3c      	ldr	r3, [pc, #240]	; (8001c84 <Displ_Transmit+0x10c>)
 8001b94:	781b      	ldrb	r3, [r3, #0]
 8001b96:	b2db      	uxtb	r3, r3
 8001b98:	2b00      	cmp	r3, #0
 8001b9a:	d0fa      	beq.n	8001b92 <Displ_Transmit+0x1a>

	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8001b9c:	79fb      	ldrb	r3, [r7, #7]
 8001b9e:	461a      	mov	r2, r3
 8001ba0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001ba4:	4838      	ldr	r0, [pc, #224]	; (8001c88 <Displ_Transmit+0x110>)
 8001ba6:	f004 fd21 	bl	80065ec <HAL_GPIO_WritePin>
	Displ_Select();
 8001baa:	f7ff ffbd 	bl	8001b28 <Displ_Select>

	if (isTouchGFXBuffer){
 8001bae:	79bb      	ldrb	r3, [r7, #6]
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d044      	beq.n	8001c3e <Displ_Transmit+0xc6>
			*data32=__REV16(*data32);
		}
#else
//if display color format is RGB666: convert RGB565 received by TouchGFX and swap bytes

		uint8_t *buf8Pos=dispBuffer1; 							//using a local pointer
 8001bb4:	4b35      	ldr	r3, [pc, #212]	; (8001c8c <Displ_Transmit+0x114>)
 8001bb6:	617b      	str	r3, [r7, #20]

		uint16_t *limit=(uint16_t*)(data+dataSize);
 8001bb8:	88bb      	ldrh	r3, [r7, #4]
 8001bba:	683a      	ldr	r2, [r7, #0]
 8001bbc:	4413      	add	r3, r2
 8001bbe:	60fb      	str	r3, [r7, #12]
		for (uint16_t *data16=(uint16_t*)data; (data16<limit) & ((buf8Pos-dispBuffer1)<(SIZEBUF-3)); data16++) {
 8001bc0:	683b      	ldr	r3, [r7, #0]
 8001bc2:	613b      	str	r3, [r7, #16]
 8001bc4:	e020      	b.n	8001c08 <Displ_Transmit+0x90>

			*(buf8Pos++)=((*data16 & 0xF800)>>8);  // R color
 8001bc6:	693b      	ldr	r3, [r7, #16]
 8001bc8:	881b      	ldrh	r3, [r3, #0]
 8001bca:	121b      	asrs	r3, r3, #8
 8001bcc:	b2da      	uxtb	r2, r3
 8001bce:	697b      	ldr	r3, [r7, #20]
 8001bd0:	1c59      	adds	r1, r3, #1
 8001bd2:	6179      	str	r1, [r7, #20]
 8001bd4:	f022 0207 	bic.w	r2, r2, #7
 8001bd8:	b2d2      	uxtb	r2, r2
 8001bda:	701a      	strb	r2, [r3, #0]
			*(buf8Pos++)=((*data16 & 0x07E0)>>3);  // G color
 8001bdc:	693b      	ldr	r3, [r7, #16]
 8001bde:	881b      	ldrh	r3, [r3, #0]
 8001be0:	10db      	asrs	r3, r3, #3
 8001be2:	b2da      	uxtb	r2, r3
 8001be4:	697b      	ldr	r3, [r7, #20]
 8001be6:	1c59      	adds	r1, r3, #1
 8001be8:	6179      	str	r1, [r7, #20]
 8001bea:	f022 0203 	bic.w	r2, r2, #3
 8001bee:	b2d2      	uxtb	r2, r2
 8001bf0:	701a      	strb	r2, [r3, #0]
			*(buf8Pos++)=((*data16 & 0x001F)<<3);  // B color
 8001bf2:	693b      	ldr	r3, [r7, #16]
 8001bf4:	881b      	ldrh	r3, [r3, #0]
 8001bf6:	00d9      	lsls	r1, r3, #3
 8001bf8:	697b      	ldr	r3, [r7, #20]
 8001bfa:	1c5a      	adds	r2, r3, #1
 8001bfc:	617a      	str	r2, [r7, #20]
 8001bfe:	b2ca      	uxtb	r2, r1
 8001c00:	701a      	strb	r2, [r3, #0]
		for (uint16_t *data16=(uint16_t*)data; (data16<limit) & ((buf8Pos-dispBuffer1)<(SIZEBUF-3)); data16++) {
 8001c02:	693b      	ldr	r3, [r7, #16]
 8001c04:	3302      	adds	r3, #2
 8001c06:	613b      	str	r3, [r7, #16]
 8001c08:	693a      	ldr	r2, [r7, #16]
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	429a      	cmp	r2, r3
 8001c0e:	bf34      	ite	cc
 8001c10:	2301      	movcc	r3, #1
 8001c12:	2300      	movcs	r3, #0
 8001c14:	b2da      	uxtb	r2, r3
 8001c16:	697b      	ldr	r3, [r7, #20]
 8001c18:	491c      	ldr	r1, [pc, #112]	; (8001c8c <Displ_Transmit+0x114>)
 8001c1a:	1a5b      	subs	r3, r3, r1
 8001c1c:	f641 71fc 	movw	r1, #8188	; 0x1ffc
 8001c20:	428b      	cmp	r3, r1
 8001c22:	bfd4      	ite	le
 8001c24:	2301      	movle	r3, #1
 8001c26:	2300      	movgt	r3, #0
 8001c28:	b2db      	uxtb	r3, r3
 8001c2a:	4013      	ands	r3, r2
 8001c2c:	b2db      	uxtb	r3, r3
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d1c9      	bne.n	8001bc6 <Displ_Transmit+0x4e>
		}

		data=dispBuffer1; 				//data (pointer to data to transfer via SPI) has point to converted buffer
 8001c32:	4b16      	ldr	r3, [pc, #88]	; (8001c8c <Displ_Transmit+0x114>)
 8001c34:	603b      	str	r3, [r7, #0]
		dataSize=(buf8Pos-dispBuffer1);	//and dataSize has contain the size of the converted buffer
 8001c36:	697b      	ldr	r3, [r7, #20]
 8001c38:	4a14      	ldr	r2, [pc, #80]	; (8001c8c <Displ_Transmit+0x114>)
 8001c3a:	1a9b      	subs	r3, r3, r2
 8001c3c:	80bb      	strh	r3, [r7, #4]
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8001c3e:	88bb      	ldrh	r3, [r7, #4]
 8001c40:	2b13      	cmp	r3, #19
 8001c42:	d812      	bhi.n	8001c6a <Displ_Transmit+0xf2>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 8001c44:	4b0f      	ldr	r3, [pc, #60]	; (8001c84 <Displ_Transmit+0x10c>)
 8001c46:	2200      	movs	r2, #0
 8001c48:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8001c4a:	88ba      	ldrh	r2, [r7, #4]
 8001c4c:	f04f 33ff 	mov.w	r3, #4294967295
 8001c50:	6839      	ldr	r1, [r7, #0]
 8001c52:	480f      	ldr	r0, [pc, #60]	; (8001c90 <Displ_Transmit+0x118>)
 8001c54:	f009 fa2e 	bl	800b0b4 <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8001c58:	4b0a      	ldr	r3, [pc, #40]	; (8001c84 <Displ_Transmit+0x10c>)
 8001c5a:	2201      	movs	r2, #1
 8001c5c:	701a      	strb	r2, [r3, #0]

#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8001c5e:	79bb      	ldrb	r3, [r7, #6]
 8001c60:	2b00      	cmp	r3, #0
 8001c62:	d00b      	beq.n	8001c7c <Displ_Transmit+0x104>
				DisplayDriver_TransferCompleteCallback();
 8001c64:	f00f fa8f 	bl	8011186 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8001c68:	e008      	b.n	8001c7c <Displ_Transmit+0x104>
			Displ_SpiAvailable=0;
 8001c6a:	4b06      	ldr	r3, [pc, #24]	; (8001c84 <Displ_Transmit+0x10c>)
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 8001c70:	88bb      	ldrh	r3, [r7, #4]
 8001c72:	461a      	mov	r2, r3
 8001c74:	6839      	ldr	r1, [r7, #0]
 8001c76:	4806      	ldr	r0, [pc, #24]	; (8001c90 <Displ_Transmit+0x118>)
 8001c78:	f009 fda8 	bl	800b7cc <HAL_SPI_Transmit_DMA>
	}
 8001c7c:	bf00      	nop
 8001c7e:	3718      	adds	r7, #24
 8001c80:	46bd      	mov	sp, r7
 8001c82:	bd80      	pop	{r7, pc}
 8001c84:	2400000d 	.word	0x2400000d
 8001c88:	58021000 	.word	0x58021000
 8001c8c:	2400036c 	.word	0x2400036c
 8001c90:	24000210 	.word	0x24000210

08001c94 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b082      	sub	sp, #8
 8001c98:	af00      	add	r7, sp, #0
 8001c9a:	4603      	mov	r3, r0
 8001c9c:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 8001c9e:	1df9      	adds	r1, r7, #7
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	2201      	movs	r2, #1
 8001ca4:	2000      	movs	r0, #0
 8001ca6:	f7ff ff67 	bl	8001b78 <Displ_Transmit>
}
 8001caa:	bf00      	nop
 8001cac:	3708      	adds	r7, #8
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	bd80      	pop	{r7, pc}

08001cb2 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 8001cb2:	b580      	push	{r7, lr}
 8001cb4:	b084      	sub	sp, #16
 8001cb6:	af00      	add	r7, sp, #0
 8001cb8:	60f8      	str	r0, [r7, #12]
 8001cba:	60b9      	str	r1, [r7, #8]
 8001cbc:	4613      	mov	r3, r2
 8001cbe:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 8001cc0:	68bb      	ldr	r3, [r7, #8]
 8001cc2:	2b00      	cmp	r3, #0
 8001cc4:	d007      	beq.n	8001cd6 <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 8001cc6:	68bb      	ldr	r3, [r7, #8]
 8001cc8:	b29a      	uxth	r2, r3
 8001cca:	79fb      	ldrb	r3, [r7, #7]
 8001ccc:	68f9      	ldr	r1, [r7, #12]
 8001cce:	2001      	movs	r0, #1
 8001cd0:	f7ff ff52 	bl	8001b78 <Displ_Transmit>
 8001cd4:	e000      	b.n	8001cd8 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 8001cd6:	bf00      	nop
}
 8001cd8:	3710      	adds	r7, #16
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	bd80      	pop	{r7, pc}
	...

08001ce0 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	af00      	add	r7, sp, #0
	Displ_Select();
 8001ce4:	f7ff ff20 	bl	8001b28 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8001ce8:	2200      	movs	r2, #0
 8001cea:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001cee:	481a      	ldr	r0, [pc, #104]	; (8001d58 <ILI9XXX_Init+0x78>)
 8001cf0:	f004 fc7c 	bl	80065ec <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001cf4:	2001      	movs	r0, #1
 8001cf6:	f000 fcdb 	bl	80026b0 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8001cfa:	2201      	movs	r2, #1
 8001cfc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001d00:	4815      	ldr	r0, [pc, #84]	; (8001d58 <ILI9XXX_Init+0x78>)
 8001d02:	f004 fc73 	bl	80065ec <HAL_GPIO_WritePin>
	HAL_Delay(150);
 8001d06:	2096      	movs	r0, #150	; 0x96
 8001d08:	f000 fcd2 	bl	80026b0 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8001d0c:	203a      	movs	r0, #58	; 0x3a
 8001d0e:	f7ff ffc1 	bl	8001c94 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
 8001d12:	2200      	movs	r2, #0
 8001d14:	2101      	movs	r1, #1
 8001d16:	4811      	ldr	r0, [pc, #68]	; (8001d5c <ILI9XXX_Init+0x7c>)
 8001d18:	f7ff ffcb 	bl	8001cb2 <Displ_WriteData>
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8001d1c:	20b0      	movs	r0, #176	; 0xb0
 8001d1e:	f7ff ffb9 	bl	8001c94 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8001d22:	2200      	movs	r2, #0
 8001d24:	2101      	movs	r1, #1
 8001d26:	480e      	ldr	r0, [pc, #56]	; (8001d60 <ILI9XXX_Init+0x80>)
 8001d28:	f7ff ffc3 	bl	8001cb2 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8001d2c:	20b0      	movs	r0, #176	; 0xb0
 8001d2e:	f7ff ffb1 	bl	8001c94 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8001d32:	2200      	movs	r2, #0
 8001d34:	2101      	movs	r1, #1
 8001d36:	480a      	ldr	r0, [pc, #40]	; (8001d60 <ILI9XXX_Init+0x80>)
 8001d38:	f7ff ffbb 	bl	8001cb2 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 8001d3c:	2011      	movs	r0, #17
 8001d3e:	f7ff ffa9 	bl	8001c94 <Displ_WriteCommand>
	HAL_Delay(120);
 8001d42:	2078      	movs	r0, #120	; 0x78
 8001d44:	f000 fcb4 	bl	80026b0 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 8001d48:	2029      	movs	r0, #41	; 0x29
 8001d4a:	f7ff ffa3 	bl	8001c94 <Displ_WriteCommand>
	HAL_Delay(5);
 8001d4e:	2005      	movs	r0, #5
 8001d50:	f000 fcae 	bl	80026b0 <HAL_Delay>

}
 8001d54:	bf00      	nop
 8001d56:	bd80      	pop	{r7, pc}
 8001d58:	58020400 	.word	0x58020400
 8001d5c:	08026ed0 	.word	0x08026ed0
 8001d60:	08026ed4 	.word	0x08026ed4

08001d64 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8001d64:	b590      	push	{r4, r7, lr}
 8001d66:	b083      	sub	sp, #12
 8001d68:	af00      	add	r7, sp, #0
 8001d6a:	4604      	mov	r4, r0
 8001d6c:	4608      	mov	r0, r1
 8001d6e:	4611      	mov	r1, r2
 8001d70:	461a      	mov	r2, r3
 8001d72:	4623      	mov	r3, r4
 8001d74:	80fb      	strh	r3, [r7, #6]
 8001d76:	4603      	mov	r3, r0
 8001d78:	80bb      	strh	r3, [r7, #4]
 8001d7a:	460b      	mov	r3, r1
 8001d7c:	807b      	strh	r3, [r7, #2]
 8001d7e:	4613      	mov	r3, r2
 8001d80:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 8001d82:	887b      	ldrh	r3, [r7, #2]
 8001d84:	061a      	lsls	r2, r3, #24
 8001d86:	887b      	ldrh	r3, [r7, #2]
 8001d88:	021b      	lsls	r3, r3, #8
 8001d8a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8001d8e:	431a      	orrs	r2, r3
 8001d90:	88fb      	ldrh	r3, [r7, #6]
 8001d92:	021b      	lsls	r3, r3, #8
 8001d94:	b29b      	uxth	r3, r3
 8001d96:	4313      	orrs	r3, r2
 8001d98:	88fa      	ldrh	r2, [r7, #6]
 8001d9a:	0a12      	lsrs	r2, r2, #8
 8001d9c:	b292      	uxth	r2, r2
 8001d9e:	431a      	orrs	r2, r3
 8001da0:	4b14      	ldr	r3, [pc, #80]	; (8001df4 <Displ_SetAddressWindow+0x90>)
 8001da2:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 8001da4:	202a      	movs	r0, #42	; 0x2a
 8001da6:	f7ff ff75 	bl	8001c94 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8001daa:	2200      	movs	r2, #0
 8001dac:	2104      	movs	r1, #4
 8001dae:	4811      	ldr	r0, [pc, #68]	; (8001df4 <Displ_SetAddressWindow+0x90>)
 8001db0:	f7ff ff7f 	bl	8001cb2 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 8001db4:	883b      	ldrh	r3, [r7, #0]
 8001db6:	061a      	lsls	r2, r3, #24
 8001db8:	883b      	ldrh	r3, [r7, #0]
 8001dba:	021b      	lsls	r3, r3, #8
 8001dbc:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8001dc0:	431a      	orrs	r2, r3
 8001dc2:	88bb      	ldrh	r3, [r7, #4]
 8001dc4:	021b      	lsls	r3, r3, #8
 8001dc6:	b29b      	uxth	r3, r3
 8001dc8:	4313      	orrs	r3, r2
 8001dca:	88ba      	ldrh	r2, [r7, #4]
 8001dcc:	0a12      	lsrs	r2, r2, #8
 8001dce:	b292      	uxth	r2, r2
 8001dd0:	431a      	orrs	r2, r3
 8001dd2:	4b08      	ldr	r3, [pc, #32]	; (8001df4 <Displ_SetAddressWindow+0x90>)
 8001dd4:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 8001dd6:	202b      	movs	r0, #43	; 0x2b
 8001dd8:	f7ff ff5c 	bl	8001c94 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8001ddc:	2200      	movs	r2, #0
 8001dde:	2104      	movs	r1, #4
 8001de0:	4804      	ldr	r0, [pc, #16]	; (8001df4 <Displ_SetAddressWindow+0x90>)
 8001de2:	f7ff ff66 	bl	8001cb2 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 8001de6:	202c      	movs	r0, #44	; 0x2c
 8001de8:	f7ff ff54 	bl	8001c94 <Displ_WriteCommand>
}
 8001dec:	bf00      	nop
 8001dee:	370c      	adds	r7, #12
 8001df0:	46bd      	mov	sp, r7
 8001df2:	bd90      	pop	{r4, r7, pc}
 8001df4:	2400236c 	.word	0x2400236c

08001df8 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 8001df8:	b580      	push	{r7, lr}
 8001dfa:	b082      	sub	sp, #8
 8001dfc:	af00      	add	r7, sp, #0
 8001dfe:	4603      	mov	r3, r0
 8001e00:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 8001e02:	2201      	movs	r2, #1
 8001e04:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001e08:	4809      	ldr	r0, [pc, #36]	; (8001e30 <Displ_Init+0x38>)
 8001e0a:	f004 fbef 	bl	80065ec <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8001e0e:	2201      	movs	r2, #1
 8001e10:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e14:	4807      	ldr	r0, [pc, #28]	; (8001e34 <Displ_Init+0x3c>)
 8001e16:	f004 fbe9 	bl	80065ec <HAL_GPIO_WritePin>
	} else {																	// otherwise leave both port permanently selected
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
	}
	ILI9XXX_Init();
 8001e1a:	f7ff ff61 	bl	8001ce0 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 8001e1e:	79fb      	ldrb	r3, [r7, #7]
 8001e20:	4618      	mov	r0, r3
 8001e22:	f000 f809 	bl	8001e38 <Displ_Orientation>
}
 8001e26:	bf00      	nop
 8001e28:	3708      	adds	r7, #8
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	bd80      	pop	{r7, pc}
 8001e2e:	bf00      	nop
 8001e30:	58021000 	.word	0x58021000
 8001e34:	58020400 	.word	0x58020400

08001e38 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 8001e38:	b580      	push	{r7, lr}
 8001e3a:	b082      	sub	sp, #8
 8001e3c:	af00      	add	r7, sp, #0
 8001e3e:	4603      	mov	r3, r0
 8001e40:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 8001e42:	79fb      	ldrb	r3, [r7, #7]
 8001e44:	2b03      	cmp	r3, #3
 8001e46:	d83b      	bhi.n	8001ec0 <Displ_Orientation+0x88>
 8001e48:	a201      	add	r2, pc, #4	; (adr r2, 8001e50 <Displ_Orientation+0x18>)
 8001e4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001e4e:	bf00      	nop
 8001e50:	08001e61 	.word	0x08001e61
 8001e54:	08001e79 	.word	0x08001e79
 8001e58:	08001e91 	.word	0x08001e91
 8001e5c:	08001ea9 	.word	0x08001ea9
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8001e60:	4b1f      	ldr	r3, [pc, #124]	; (8001ee0 <Displ_Orientation+0xa8>)
 8001e62:	2288      	movs	r2, #136	; 0x88
 8001e64:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8001e66:	4b1f      	ldr	r3, [pc, #124]	; (8001ee4 <Displ_Orientation+0xac>)
 8001e68:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001e6c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8001e6e:	4b1e      	ldr	r3, [pc, #120]	; (8001ee8 <Displ_Orientation+0xb0>)
 8001e70:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e74:	801a      	strh	r2, [r3, #0]
			break;
 8001e76:	e023      	b.n	8001ec0 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 8001e78:	4b19      	ldr	r3, [pc, #100]	; (8001ee0 <Displ_Orientation+0xa8>)
 8001e7a:	22e8      	movs	r2, #232	; 0xe8
 8001e7c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8001e7e:	4b19      	ldr	r3, [pc, #100]	; (8001ee4 <Displ_Orientation+0xac>)
 8001e80:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e84:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8001e86:	4b18      	ldr	r3, [pc, #96]	; (8001ee8 <Displ_Orientation+0xb0>)
 8001e88:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001e8c:	801a      	strh	r2, [r3, #0]
			break;
 8001e8e:	e017      	b.n	8001ec0 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8001e90:	4b13      	ldr	r3, [pc, #76]	; (8001ee0 <Displ_Orientation+0xa8>)
 8001e92:	2248      	movs	r2, #72	; 0x48
 8001e94:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8001e96:	4b13      	ldr	r3, [pc, #76]	; (8001ee4 <Displ_Orientation+0xac>)
 8001e98:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001e9c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8001e9e:	4b12      	ldr	r3, [pc, #72]	; (8001ee8 <Displ_Orientation+0xb0>)
 8001ea0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001ea4:	801a      	strh	r2, [r3, #0]
			break;
 8001ea6:	e00b      	b.n	8001ec0 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 8001ea8:	4b0d      	ldr	r3, [pc, #52]	; (8001ee0 <Displ_Orientation+0xa8>)
 8001eaa:	2228      	movs	r2, #40	; 0x28
 8001eac:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8001eae:	4b0d      	ldr	r3, [pc, #52]	; (8001ee4 <Displ_Orientation+0xac>)
 8001eb0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001eb4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8001eb6:	4b0c      	ldr	r3, [pc, #48]	; (8001ee8 <Displ_Orientation+0xb0>)
 8001eb8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001ebc:	801a      	strh	r2, [r3, #0]
			break;
 8001ebe:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 8001ec0:	2036      	movs	r0, #54	; 0x36
 8001ec2:	f7ff fee7 	bl	8001c94 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 8001ec6:	2200      	movs	r2, #0
 8001ec8:	2101      	movs	r1, #1
 8001eca:	4805      	ldr	r0, [pc, #20]	; (8001ee0 <Displ_Orientation+0xa8>)
 8001ecc:	f7ff fef1 	bl	8001cb2 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 8001ed0:	4a06      	ldr	r2, [pc, #24]	; (8001eec <Displ_Orientation+0xb4>)
 8001ed2:	79fb      	ldrb	r3, [r7, #7]
 8001ed4:	7013      	strb	r3, [r2, #0]
}
 8001ed6:	bf00      	nop
 8001ed8:	3708      	adds	r7, #8
 8001eda:	46bd      	mov	sp, r7
 8001edc:	bd80      	pop	{r7, pc}
 8001ede:	bf00      	nop
 8001ee0:	24002370 	.word	0x24002370
 8001ee4:	2400036a 	.word	0x2400036a
 8001ee8:	24000368 	.word	0x24000368
 8001eec:	24000366 	.word	0x24000366

08001ef0 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8001ef0:	b480      	push	{r7}
 8001ef2:	b083      	sub	sp, #12
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	681b      	ldr	r3, [r3, #0]
 8001efc:	4a05      	ldr	r2, [pc, #20]	; (8001f14 <HAL_SPI_ErrorCallback+0x24>)
 8001efe:	4293      	cmp	r3, r2
 8001f00:	d102      	bne.n	8001f08 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 8001f02:	4b05      	ldr	r3, [pc, #20]	; (8001f18 <HAL_SPI_ErrorCallback+0x28>)
 8001f04:	2201      	movs	r2, #1
 8001f06:	701a      	strb	r2, [r3, #0]
	}
}
 8001f08:	bf00      	nop
 8001f0a:	370c      	adds	r7, #12
 8001f0c:	46bd      	mov	sp, r7
 8001f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f12:	4770      	bx	lr
 8001f14:	40013400 	.word	0x40013400
 8001f18:	2400000d 	.word	0x2400000d

08001f1c <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 8001f1c:	b580      	push	{r7, lr}
 8001f1e:	b082      	sub	sp, #8
 8001f20:	af00      	add	r7, sp, #0
 8001f22:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	4a05      	ldr	r2, [pc, #20]	; (8001f40 <HAL_SPI_TxCpltCallback+0x24>)
 8001f2a:	4293      	cmp	r3, r2
 8001f2c:	d104      	bne.n	8001f38 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 8001f2e:	4b05      	ldr	r3, [pc, #20]	; (8001f44 <HAL_SPI_TxCpltCallback+0x28>)
 8001f30:	2201      	movs	r2, #1
 8001f32:	701a      	strb	r2, [r3, #0]
//		Touch_PenDown=0;    //reset touch interrupt flag: writing onto display will trigger the display interrupt pin

#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 8001f34:	f00f f927 	bl	8011186 <DisplayDriver_TransferCompleteCallback>
#endif
	}
}
 8001f38:	bf00      	nop
 8001f3a:	3708      	adds	r7, #8
 8001f3c:	46bd      	mov	sp, r7
 8001f3e:	bd80      	pop	{r7, pc}
 8001f40:	40013400 	.word	0x40013400
 8001f44:	2400000d 	.word	0x2400000d

08001f48 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8001f48:	b580      	push	{r7, lr}
 8001f4a:	b082      	sub	sp, #8
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	4603      	mov	r3, r0
 8001f50:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 8001f52:	79fb      	ldrb	r3, [r7, #7]
 8001f54:	3b2b      	subs	r3, #43	; 0x2b
 8001f56:	2b2c      	cmp	r3, #44	; 0x2c
 8001f58:	f200 809e 	bhi.w	8002098 <Displ_BackLight+0x150>
 8001f5c:	a201      	add	r2, pc, #4	; (adr r2, 8001f64 <Displ_BackLight+0x1c>)
 8001f5e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f62:	bf00      	nop
 8001f64:	0800204f 	.word	0x0800204f
 8001f68:	08002099 	.word	0x08002099
 8001f6c:	0800206f 	.word	0x0800206f
 8001f70:	08002099 	.word	0x08002099
 8001f74:	08002099 	.word	0x08002099
 8001f78:	08002023 	.word	0x08002023
 8001f7c:	08002019 	.word	0x08002019
 8001f80:	08002099 	.word	0x08002099
 8001f84:	08002099 	.word	0x08002099
 8001f88:	08002099 	.word	0x08002099
 8001f8c:	08002099 	.word	0x08002099
 8001f90:	08002099 	.word	0x08002099
 8001f94:	08002099 	.word	0x08002099
 8001f98:	08002099 	.word	0x08002099
 8001f9c:	08002099 	.word	0x08002099
 8001fa0:	08002099 	.word	0x08002099
 8001fa4:	08002099 	.word	0x08002099
 8001fa8:	08002099 	.word	0x08002099
 8001fac:	08002099 	.word	0x08002099
 8001fb0:	08002099 	.word	0x08002099
 8001fb4:	08002099 	.word	0x08002099
 8001fb8:	08002099 	.word	0x08002099
 8001fbc:	08002099 	.word	0x08002099
 8001fc0:	08002099 	.word	0x08002099
 8001fc4:	08002099 	.word	0x08002099
 8001fc8:	08002099 	.word	0x08002099
 8001fcc:	08002099 	.word	0x08002099
 8001fd0:	08002019 	.word	0x08002019
 8001fd4:	08002099 	.word	0x08002099
 8001fd8:	08002099 	.word	0x08002099
 8001fdc:	08002089 	.word	0x08002089
 8001fe0:	08002099 	.word	0x08002099
 8001fe4:	08002099 	.word	0x08002099
 8001fe8:	08002099 	.word	0x08002099
 8001fec:	08002099 	.word	0x08002099
 8001ff0:	08002099 	.word	0x08002099
 8001ff4:	08002099 	.word	0x08002099
 8001ff8:	08002099 	.word	0x08002099
 8001ffc:	08002099 	.word	0x08002099
 8002000:	08002099 	.word	0x08002099
 8002004:	08002035 	.word	0x08002035
 8002008:	08002099 	.word	0x08002099
 800200c:	08002099 	.word	0x08002099
 8002010:	08002099 	.word	0x08002099
 8002014:	0800202b 	.word	0x0800202b
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
		break;
#else
	case 'F':
	case '1':
		BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 8002018:	4b24      	ldr	r3, [pc, #144]	; (80020ac <Displ_BackLight+0x164>)
 800201a:	4a24      	ldr	r2, [pc, #144]	; (80020ac <Displ_BackLight+0x164>)
 800201c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800201e:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 8002020:	e03d      	b.n	800209e <Displ_BackLight+0x156>
	case '0':
		BKLIT_TIMER->BKLIT_CCR=0;
 8002022:	4b22      	ldr	r3, [pc, #136]	; (80020ac <Displ_BackLight+0x164>)
 8002024:	2200      	movs	r2, #0
 8002026:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8002028:	e039      	b.n	800209e <Displ_BackLight+0x156>
	case 'W':
		BKLIT_TIMER->BKLIT_CCR=memCCR1;					//restore previous level
 800202a:	4b21      	ldr	r3, [pc, #132]	; (80020b0 <Displ_BackLight+0x168>)
 800202c:	881a      	ldrh	r2, [r3, #0]
 800202e:	4b1f      	ldr	r3, [pc, #124]	; (80020ac <Displ_BackLight+0x164>)
 8002030:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8002032:	e034      	b.n	800209e <Displ_BackLight+0x156>
	case 'S':
		memCCR1=BKLIT_TIMER->BKLIT_CCR;
 8002034:	4b1d      	ldr	r3, [pc, #116]	; (80020ac <Displ_BackLight+0x164>)
 8002036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002038:	b29a      	uxth	r2, r3
 800203a:	4b1d      	ldr	r3, [pc, #116]	; (80020b0 <Displ_BackLight+0x168>)
 800203c:	801a      	strh	r2, [r3, #0]
		if (BKLIT_TIMER->BKLIT_CCR>=(BKLIT_STBY_LEVEL))	//set stby level only if current level is higher
 800203e:	4b1b      	ldr	r3, [pc, #108]	; (80020ac <Displ_BackLight+0x164>)
 8002040:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002042:	2b00      	cmp	r3, #0
 8002044:	d02a      	beq.n	800209c <Displ_BackLight+0x154>
			BKLIT_TIMER->BKLIT_CCR=(BKLIT_STBY_LEVEL);
 8002046:	4b19      	ldr	r3, [pc, #100]	; (80020ac <Displ_BackLight+0x164>)
 8002048:	2201      	movs	r2, #1
 800204a:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 800204c:	e026      	b.n	800209c <Displ_BackLight+0x154>
	case '+':
		if (BKLIT_TIMER->ARR>BKLIT_TIMER->BKLIT_CCR)		// if CCR1 has not yet the highest value (ARR)
 800204e:	4b17      	ldr	r3, [pc, #92]	; (80020ac <Displ_BackLight+0x164>)
 8002050:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002052:	4b16      	ldr	r3, [pc, #88]	; (80020ac <Displ_BackLight+0x164>)
 8002054:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002056:	429a      	cmp	r2, r3
 8002058:	d904      	bls.n	8002064 <Displ_BackLight+0x11c>
			++BKLIT_TIMER->BKLIT_CCR;
 800205a:	4b14      	ldr	r3, [pc, #80]	; (80020ac <Displ_BackLight+0x164>)
 800205c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800205e:	3201      	adds	r2, #1
 8002060:	639a      	str	r2, [r3, #56]	; 0x38
		else
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
		break;
 8002062:	e01c      	b.n	800209e <Displ_BackLight+0x156>
			BKLIT_TIMER->BKLIT_CCR=BKLIT_TIMER->ARR;
 8002064:	4b11      	ldr	r3, [pc, #68]	; (80020ac <Displ_BackLight+0x164>)
 8002066:	4a11      	ldr	r2, [pc, #68]	; (80020ac <Displ_BackLight+0x164>)
 8002068:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800206a:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 800206c:	e017      	b.n	800209e <Displ_BackLight+0x156>
	case '-':
		if (BKLIT_TIMER->BKLIT_CCR>0)					// if CCR1 has not yet the lowest value (0)
 800206e:	4b0f      	ldr	r3, [pc, #60]	; (80020ac <Displ_BackLight+0x164>)
 8002070:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002072:	2b00      	cmp	r3, #0
 8002074:	d004      	beq.n	8002080 <Displ_BackLight+0x138>
			--BKLIT_TIMER->BKLIT_CCR;
 8002076:	4b0d      	ldr	r3, [pc, #52]	; (80020ac <Displ_BackLight+0x164>)
 8002078:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800207a:	3a01      	subs	r2, #1
 800207c:	639a      	str	r2, [r3, #56]	; 0x38
		else
			BKLIT_TIMER->BKLIT_CCR=0;
		break;
 800207e:	e00e      	b.n	800209e <Displ_BackLight+0x156>
			BKLIT_TIMER->BKLIT_CCR=0;
 8002080:	4b0a      	ldr	r3, [pc, #40]	; (80020ac <Displ_BackLight+0x164>)
 8002082:	2200      	movs	r2, #0
 8002084:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8002086:	e00a      	b.n	800209e <Displ_BackLight+0x156>
	case 'I':
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
 8002088:	2104      	movs	r1, #4
 800208a:	480a      	ldr	r0, [pc, #40]	; (80020b4 <Displ_BackLight+0x16c>)
 800208c:	f00a f896 	bl	800c1bc <HAL_TIM_PWM_Start>
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
 8002090:	4b06      	ldr	r3, [pc, #24]	; (80020ac <Displ_BackLight+0x164>)
 8002092:	2264      	movs	r2, #100	; 0x64
 8002094:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8002096:	e002      	b.n	800209e <Displ_BackLight+0x156>
#endif
	case 'Q':
		break;
	default:
		break;
 8002098:	bf00      	nop
 800209a:	e000      	b.n	800209e <Displ_BackLight+0x156>
		break;
 800209c:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
#else
	return (BKLIT_TIMER->BKLIT_CCR);
 800209e:	4b03      	ldr	r3, [pc, #12]	; (80020ac <Displ_BackLight+0x164>)
 80020a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
#endif
}
 80020a2:	4618      	mov	r0, r3
 80020a4:	3708      	adds	r7, #8
 80020a6:	46bd      	mov	sp, r7
 80020a8:	bd80      	pop	{r7, pc}
 80020aa:	bf00      	nop
 80020ac:	40001800 	.word	0x40001800
 80020b0:	24002372 	.word	0x24002372
 80020b4:	24000314 	.word	0x24000314

080020b8 <touchgfxDisplayDriverTransmitActive>:
/************************
 * @brief	TouchGFX integration: returns status of communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 ************************/
int touchgfxDisplayDriverTransmitActive(){
 80020b8:	b480      	push	{r7}
 80020ba:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 80020bc:	4b06      	ldr	r3, [pc, #24]	; (80020d8 <touchgfxDisplayDriverTransmitActive+0x20>)
 80020be:	781b      	ldrb	r3, [r3, #0]
 80020c0:	b2db      	uxtb	r3, r3
 80020c2:	2b00      	cmp	r3, #0
 80020c4:	bf0c      	ite	eq
 80020c6:	2301      	moveq	r3, #1
 80020c8:	2300      	movne	r3, #0
 80020ca:	b2db      	uxtb	r3, r3
}
 80020cc:	4618      	mov	r0, r3
 80020ce:	46bd      	mov	sp, r7
 80020d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d4:	4770      	bx	lr
 80020d6:	bf00      	nop
 80020d8:	2400000d 	.word	0x2400000d

080020dc <touchgfxDisplayDriverTransmitBlock>:

/************************
 * @brief	TouchGFX integration: write to display the block indicated by parameters
 *
 ************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 80020dc:	b590      	push	{r4, r7, lr}
 80020de:	b085      	sub	sp, #20
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	60f8      	str	r0, [r7, #12]
 80020e4:	4608      	mov	r0, r1
 80020e6:	4611      	mov	r1, r2
 80020e8:	461a      	mov	r2, r3
 80020ea:	4603      	mov	r3, r0
 80020ec:	817b      	strh	r3, [r7, #10]
 80020ee:	460b      	mov	r3, r1
 80020f0:	813b      	strh	r3, [r7, #8]
 80020f2:	4613      	mov	r3, r2
 80020f4:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 80020f6:	897a      	ldrh	r2, [r7, #10]
 80020f8:	88fb      	ldrh	r3, [r7, #6]
 80020fa:	4413      	add	r3, r2
 80020fc:	b29b      	uxth	r3, r3
 80020fe:	3b01      	subs	r3, #1
 8002100:	b29c      	uxth	r4, r3
 8002102:	893a      	ldrh	r2, [r7, #8]
 8002104:	8c3b      	ldrh	r3, [r7, #32]
 8002106:	4413      	add	r3, r2
 8002108:	b29b      	uxth	r3, r3
 800210a:	3b01      	subs	r3, #1
 800210c:	b29b      	uxth	r3, r3
 800210e:	8939      	ldrh	r1, [r7, #8]
 8002110:	8978      	ldrh	r0, [r7, #10]
 8002112:	4622      	mov	r2, r4
 8002114:	f7ff fe26 	bl	8001d64 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8002118:	88fb      	ldrh	r3, [r7, #6]
 800211a:	8c3a      	ldrh	r2, [r7, #32]
 800211c:	fb02 f303 	mul.w	r3, r2, r3
 8002120:	005b      	lsls	r3, r3, #1
 8002122:	2201      	movs	r2, #1
 8002124:	4619      	mov	r1, r3
 8002126:	68f8      	ldr	r0, [r7, #12]
 8002128:	f7ff fdc3 	bl	8001cb2 <Displ_WriteData>
}
 800212c:	bf00      	nop
 800212e:	3714      	adds	r7, #20
 8002130:	46bd      	mov	sp, r7
 8002132:	bd90      	pop	{r4, r7, pc}

08002134 <Touch_HandlePenDownInterrupt>:

volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw



void Touch_HandlePenDownInterrupt (){
 8002134:	b580      	push	{r7, lr}
 8002136:	af00      	add	r7, sp, #0
		Touch_PenDown=1;
 8002138:	4b03      	ldr	r3, [pc, #12]	; (8002148 <Touch_HandlePenDownInterrupt+0x14>)
 800213a:	2201      	movs	r2, #1
 800213c:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
		touchgfxSignalVSync();
 800213e:	f00f f828 	bl	8011192 <touchgfxSignalVSync>
#endif
}
 8002142:	bf00      	nop
 8002144:	bd80      	pop	{r7, pc}
 8002146:	bf00      	nop
 8002148:	24002374 	.word	0x24002374

0800214c <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 800214c:	b580      	push	{r7, lr}
 800214e:	b082      	sub	sp, #8
 8002150:	af00      	add	r7, sp, #0
 8002152:	4603      	mov	r3, r0
 8002154:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 8002156:	88fb      	ldrh	r3, [r7, #6]
 8002158:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800215c:	d101      	bne.n	8002162 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 800215e:	f7ff ffe9 	bl	8002134 <Touch_HandlePenDownInterrupt>
	}
}
 8002162:	bf00      	nop
 8002164:	3708      	adds	r7, #8
 8002166:	46bd      	mov	sp, r7
 8002168:	bd80      	pop	{r7, pc}
	...

0800216c <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 800216c:	b580      	push	{r7, lr}
 800216e:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin))					// if display selected
 8002170:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002174:	480f      	ldr	r0, [pc, #60]	; (80021b4 <Touch_Select+0x48>)
 8002176:	f004 fa21 	bl	80065bc <HAL_GPIO_ReadPin>
 800217a:	4603      	mov	r3, r0
 800217c:	2b00      	cmp	r3, #0
 800217e:	d105      	bne.n	800218c <Touch_Select+0x20>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8002180:	2201      	movs	r2, #1
 8002182:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002186:	480b      	ldr	r0, [pc, #44]	; (80021b4 <Touch_Select+0x48>)
 8002188:	f004 fa30 	bl	80065ec <HAL_GPIO_WritePin>
		SET_SPI_BAUDRATE(TOUCH_PRESCALER);											//change SPI port speed as per touch needs
 800218c:	4b0a      	ldr	r3, [pc, #40]	; (80021b8 <Touch_Select+0x4c>)
 800218e:	689b      	ldr	r3, [r3, #8]
 8002190:	4a09      	ldr	r2, [pc, #36]	; (80021b8 <Touch_Select+0x4c>)
 8002192:	b29b      	uxth	r3, r3
 8002194:	6093      	str	r3, [r2, #8]
 8002196:	4b08      	ldr	r3, [pc, #32]	; (80021b8 <Touch_Select+0x4c>)
 8002198:	689b      	ldr	r3, [r3, #8]
 800219a:	4a07      	ldr	r2, [pc, #28]	; (80021b8 <Touch_Select+0x4c>)
 800219c:	f043 43e0 	orr.w	r3, r3, #1879048192	; 0x70000000
 80021a0:	6093      	str	r3, [r2, #8]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 80021a2:	2200      	movs	r2, #0
 80021a4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80021a8:	4804      	ldr	r0, [pc, #16]	; (80021bc <Touch_Select+0x50>)
 80021aa:	f004 fa1f 	bl	80065ec <HAL_GPIO_WritePin>
	}
}
 80021ae:	bf00      	nop
 80021b0:	bd80      	pop	{r7, pc}
 80021b2:	bf00      	nop
 80021b4:	58021000 	.word	0x58021000
 80021b8:	40013400 	.word	0x40013400
 80021bc:	58020400 	.word	0x58020400

080021c0 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 80021c0:	b580      	push	{r7, lr}
 80021c2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);				// unselect touch
 80021c4:	2201      	movs	r2, #1
 80021c6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80021ca:	4802      	ldr	r0, [pc, #8]	; (80021d4 <Touch_UnSelect+0x14>)
 80021cc:	f004 fa0e 	bl	80065ec <HAL_GPIO_WritePin>
}
 80021d0:	bf00      	nop
 80021d2:	bd80      	pop	{r7, pc}
 80021d4:	58020400 	.word	0x58020400

080021d8 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 80021d8:	b580      	push	{r7, lr}
 80021da:	b084      	sub	sp, #16
 80021dc:	af00      	add	r7, sp, #0
 80021de:	4603      	mov	r3, r0
 80021e0:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 80021e2:	2300      	movs	r3, #0
 80021e4:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	uint8_t PenDownStatus=Touch_PenDown;
 80021e6:	4b1e      	ldr	r3, [pc, #120]	; (8002260 <Touch_PollAxis+0x88>)
 80021e8:	781b      	ldrb	r3, [r3, #0]
 80021ea:	72fb      	strb	r3, [r7, #11]
	
	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 80021ec:	bf00      	nop
 80021ee:	4b1d      	ldr	r3, [pc, #116]	; (8002264 <Touch_PollAxis+0x8c>)
 80021f0:	781b      	ldrb	r3, [r3, #0]
 80021f2:	b2db      	uxtb	r3, r3
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d0fa      	beq.n	80021ee <Touch_PollAxis+0x16>

// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 80021f8:	2028      	movs	r0, #40	; 0x28
 80021fa:	f001 fb6e 	bl	80038da <HAL_NVIC_DisableIRQ>
	Touch_Select();
 80021fe:	f7ff ffb5 	bl	800216c <Touch_Select>

	Displ_SpiAvailable=0;
 8002202:	4b18      	ldr	r3, [pc, #96]	; (8002264 <Touch_PollAxis+0x8c>)
 8002204:	2200      	movs	r2, #0
 8002206:	701a      	strb	r2, [r3, #0]
	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8002208:	1df9      	adds	r1, r7, #7
 800220a:	230a      	movs	r3, #10
 800220c:	2201      	movs	r2, #1
 800220e:	4816      	ldr	r0, [pc, #88]	; (8002268 <Touch_PollAxis+0x90>)
 8002210:	f008 ff50 	bl	800b0b4 <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 8002214:	f107 0108 	add.w	r1, r7, #8
 8002218:	230a      	movs	r3, #10
 800221a:	2202      	movs	r2, #2
 800221c:	4812      	ldr	r0, [pc, #72]	; (8002268 <Touch_PollAxis+0x90>)
 800221e:	f009 f945 	bl	800b4ac <HAL_SPI_Receive>
 8002222:	4603      	mov	r3, r0
 8002224:	2b00      	cmp	r3, #0
 8002226:	d105      	bne.n	8002234 <Touch_PollAxis+0x5c>
		poll16 = (poll[0]<<8) + poll[1];
 8002228:	7a3b      	ldrb	r3, [r7, #8]
 800222a:	021b      	lsls	r3, r3, #8
 800222c:	7a7a      	ldrb	r2, [r7, #9]
 800222e:	4413      	add	r3, r2
 8002230:	60fb      	str	r3, [r7, #12]
 8002232:	e001      	b.n	8002238 <Touch_PollAxis+0x60>
	}
	else {
		poll16 = 0;
 8002234:	2300      	movs	r3, #0
 8002236:	60fb      	str	r3, [r7, #12]
	}
	Touch_UnSelect();
 8002238:	f7ff ffc2 	bl	80021c0 <Touch_UnSelect>
	Displ_SpiAvailable=1;
 800223c:	4b09      	ldr	r3, [pc, #36]	; (8002264 <Touch_PollAxis+0x8c>)
 800223e:	2201      	movs	r2, #1
 8002240:	701a      	strb	r2, [r3, #0]

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002242:	2028      	movs	r0, #40	; 0x28
 8002244:	f001 fbe0 	bl	8003a08 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8002248:	2028      	movs	r0, #40	; 0x28
 800224a:	f001 fb38 	bl	80038be <HAL_NVIC_EnableIRQ>
	Touch_PenDown=PenDownStatus;	// restore Touch_PendDown value entering this routine
 800224e:	4a04      	ldr	r2, [pc, #16]	; (8002260 <Touch_PollAxis+0x88>)
 8002250:	7afb      	ldrb	r3, [r7, #11]
 8002252:	7013      	strb	r3, [r2, #0]

	return poll16;
 8002254:	68fb      	ldr	r3, [r7, #12]
 8002256:	b29b      	uxth	r3, r3
}
 8002258:	4618      	mov	r0, r3
 800225a:	3710      	adds	r7, #16
 800225c:	46bd      	mov	sp, r7
 800225e:	bd80      	pop	{r7, pc}
 8002260:	24002374 	.word	0x24002374
 8002264:	2400000d 	.word	0x2400000d
 8002268:	24000210 	.word	0x24000210

0800226c <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 800226c:	b580      	push	{r7, lr}
 800226e:	b08a      	sub	sp, #40	; 0x28
 8002270:	af00      	add	r7, sp, #0
 8002272:	60f8      	str	r0, [r7, #12]
 8002274:	60b9      	str	r1, [r7, #8]
 8002276:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8002278:	2304      	movs	r3, #4
 800227a:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 800227c:	2300      	movs	r3, #0
 800227e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002280:	2300      	movs	r3, #0
 8002282:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002286:	e00c      	b.n	80022a2 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8002288:	20b0      	movs	r0, #176	; 0xb0
 800228a:	f7ff ffa5 	bl	80021d8 <Touch_PollAxis>
 800228e:	4603      	mov	r3, r0
 8002290:	461a      	mov	r2, r3
 8002292:	6a3b      	ldr	r3, [r7, #32]
 8002294:	4413      	add	r3, r2
 8002296:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002298:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800229c:	3301      	adds	r3, #1
 800229e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80022a2:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 80022a6:	7ffb      	ldrb	r3, [r7, #31]
 80022a8:	2101      	movs	r1, #1
 80022aa:	fa01 f303 	lsl.w	r3, r1, r3
 80022ae:	429a      	cmp	r2, r3
 80022b0:	dbea      	blt.n	8002288 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //takes the average
 80022b2:	7ffb      	ldrb	r3, [r7, #31]
 80022b4:	6a3a      	ldr	r2, [r7, #32]
 80022b6:	fa22 f303 	lsr.w	r3, r2, r3
 80022ba:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 80022bc:	6a3b      	ldr	r3, [r7, #32]
 80022be:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 80022c2:	d803      	bhi.n	80022cc <Touch_GetXYtouch+0x60>
		*isTouch=0;
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2200      	movs	r2, #0
 80022c8:	701a      	strb	r2, [r3, #0]
		return;	// no touch: return 0
 80022ca:	e0af      	b.n	800242c <Touch_GetXYtouch+0x1c0>
	}

	// reading X
	touch=0;
 80022cc:	2300      	movs	r3, #0
 80022ce:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80022d0:	2300      	movs	r3, #0
 80022d2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80022d6:	e00c      	b.n	80022f2 <Touch_GetXYtouch+0x86>
		touch += Touch_PollAxis(X_AXIS);
 80022d8:	20d0      	movs	r0, #208	; 0xd0
 80022da:	f7ff ff7d 	bl	80021d8 <Touch_PollAxis>
 80022de:	4603      	mov	r3, r0
 80022e0:	461a      	mov	r2, r3
 80022e2:	6a3b      	ldr	r3, [r7, #32]
 80022e4:	4413      	add	r3, r2
 80022e6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80022e8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80022ec:	3301      	adds	r3, #1
 80022ee:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80022f2:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 80022f6:	7ffb      	ldrb	r3, [r7, #31]
 80022f8:	2101      	movs	r1, #1
 80022fa:	fa01 f303 	lsl.w	r3, r1, r3
 80022fe:	429a      	cmp	r2, r3
 8002300:	dbea      	blt.n	80022d8 <Touch_GetXYtouch+0x6c>
	touch >>= pollingLevel;  //takes the average
 8002302:	7ffb      	ldrb	r3, [r7, #31]
 8002304:	6a3a      	ldr	r2, [r7, #32]
 8002306:	fa22 f303 	lsr.w	r3, r2, r3
 800230a:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 800230c:	6a3b      	ldr	r3, [r7, #32]
 800230e:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8002312:	d803      	bhi.n	800231c <Touch_GetXYtouch+0xb0>
		*isTouch=0;
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	2200      	movs	r2, #0
 8002318:	701a      	strb	r2, [r3, #0]
		return;	// no touch: return 0
 800231a:	e087      	b.n	800242c <Touch_GetXYtouch+0x1c0>
	}
	touchx=(AX*touch+BX);
 800231c:	6a3b      	ldr	r3, [r7, #32]
 800231e:	ee07 3a90 	vmov	s15, r3
 8002322:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002326:	ed9f 7a43 	vldr	s14, [pc, #268]	; 8002434 <Touch_GetXYtouch+0x1c8>
 800232a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800232e:	ed9f 7a42 	vldr	s14, [pc, #264]	; 8002438 <Touch_GetXYtouch+0x1cc>
 8002332:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002336:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800233a:	ee17 3a90 	vmov	r3, s15
 800233e:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 8002340:	2300      	movs	r3, #0
 8002342:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002344:	2300      	movs	r3, #0
 8002346:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800234a:	e00c      	b.n	8002366 <Touch_GetXYtouch+0xfa>
		touch += Touch_PollAxis(Y_AXIS);
 800234c:	2090      	movs	r0, #144	; 0x90
 800234e:	f7ff ff43 	bl	80021d8 <Touch_PollAxis>
 8002352:	4603      	mov	r3, r0
 8002354:	461a      	mov	r2, r3
 8002356:	6a3b      	ldr	r3, [r7, #32]
 8002358:	4413      	add	r3, r2
 800235a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800235c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002360:	3301      	adds	r3, #1
 8002362:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002366:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 800236a:	7ffb      	ldrb	r3, [r7, #31]
 800236c:	2101      	movs	r1, #1
 800236e:	fa01 f303 	lsl.w	r3, r1, r3
 8002372:	429a      	cmp	r2, r3
 8002374:	dbea      	blt.n	800234c <Touch_GetXYtouch+0xe0>
	touch >>= pollingLevel; //takes the average
 8002376:	7ffb      	ldrb	r3, [r7, #31]
 8002378:	6a3a      	ldr	r2, [r7, #32]
 800237a:	fa22 f303 	lsr.w	r3, r2, r3
 800237e:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8002380:	6a3b      	ldr	r3, [r7, #32]
 8002382:	ee07 3a90 	vmov	s15, r3
 8002386:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800238a:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 800243c <Touch_GetXYtouch+0x1d0>
 800238e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002392:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8002440 <Touch_GetXYtouch+0x1d4>
 8002396:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800239a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800239e:	ee17 3a90 	vmov	r3, s15
 80023a2:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 80023a4:	4b27      	ldr	r3, [pc, #156]	; (8002444 <Touch_GetXYtouch+0x1d8>)
 80023a6:	781b      	ldrb	r3, [r3, #0]
 80023a8:	2b03      	cmp	r3, #3
 80023aa:	d83b      	bhi.n	8002424 <Touch_GetXYtouch+0x1b8>
 80023ac:	a201      	add	r2, pc, #4	; (adr r2, 80023b4 <Touch_GetXYtouch+0x148>)
 80023ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80023b2:	bf00      	nop
 80023b4:	080023c5 	.word	0x080023c5
 80023b8:	080023d7 	.word	0x080023d7
 80023bc:	080023ef 	.word	0x080023ef
 80023c0:	0800240d 	.word	0x0800240d
	{
	case TOUCH0:
		*x=touchx;
 80023c4:	69bb      	ldr	r3, [r7, #24]
 80023c6:	b29a      	uxth	r2, r3
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 80023cc:	697b      	ldr	r3, [r7, #20]
 80023ce:	b29a      	uxth	r2, r3
 80023d0:	68bb      	ldr	r3, [r7, #8]
 80023d2:	801a      	strh	r2, [r3, #0]
		break;
 80023d4:	e026      	b.n	8002424 <Touch_GetXYtouch+0x1b8>
	case TOUCH90:
		*x=touchy;
 80023d6:	697b      	ldr	r3, [r7, #20]
 80023d8:	b29a      	uxth	r2, r3
 80023da:	68fb      	ldr	r3, [r7, #12]
 80023dc:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 80023de:	69bb      	ldr	r3, [r7, #24]
 80023e0:	b29b      	uxth	r3, r3
 80023e2:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 80023e6:	b29a      	uxth	r2, r3
 80023e8:	68bb      	ldr	r3, [r7, #8]
 80023ea:	801a      	strh	r2, [r3, #0]
		break;
 80023ec:	e01a      	b.n	8002424 <Touch_GetXYtouch+0x1b8>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 80023ee:	69bb      	ldr	r3, [r7, #24]
 80023f0:	b29b      	uxth	r3, r3
 80023f2:	f5c3 73a0 	rsb	r3, r3, #320	; 0x140
 80023f6:	b29a      	uxth	r2, r3
 80023f8:	68fb      	ldr	r3, [r7, #12]
 80023fa:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 80023fc:	697b      	ldr	r3, [r7, #20]
 80023fe:	b29b      	uxth	r3, r3
 8002400:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
 8002404:	b29a      	uxth	r2, r3
 8002406:	68bb      	ldr	r3, [r7, #8]
 8002408:	801a      	strh	r2, [r3, #0]
		break;
 800240a:	e00b      	b.n	8002424 <Touch_GetXYtouch+0x1b8>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 800240c:	697b      	ldr	r3, [r7, #20]
 800240e:	b29b      	uxth	r3, r3
 8002410:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
 8002414:	b29a      	uxth	r2, r3
 8002416:	68fb      	ldr	r3, [r7, #12]
 8002418:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 800241a:	69bb      	ldr	r3, [r7, #24]
 800241c:	b29a      	uxth	r2, r3
 800241e:	68bb      	ldr	r3, [r7, #8]
 8002420:	801a      	strh	r2, [r3, #0]
		break;
 8002422:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	2201      	movs	r2, #1
 8002428:	701a      	strb	r2, [r3, #0]
	return;
 800242a:	bf00      	nop
}
 800242c:	3728      	adds	r7, #40	; 0x28
 800242e:	46bd      	mov	sp, r7
 8002430:	bd80      	pop	{r7, pc}
 8002432:	bf00      	nop
 8002434:	bc30574b 	.word	0xbc30574b
 8002438:	43a66268 	.word	0x43a66268
 800243c:	3c817fc7 	.word	0x3c817fc7
 8002440:	41b2b51e 	.word	0x41b2b51e
 8002444:	24000366 	.word	0x24000366

08002448 <Touch_GotATouch>:
 * 						reset flag only when you get "no-touch" reading sensor
 * @params	reset	reset touch flag if non 0
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/
uint8_t Touch_GotATouch(uint8_t reset) {
 8002448:	b480      	push	{r7}
 800244a:	b085      	sub	sp, #20
 800244c:	af00      	add	r7, sp, #0
 800244e:	4603      	mov	r3, r0
 8002450:	71fb      	strb	r3, [r7, #7]
uint8_t result = Touch_PenDown;
 8002452:	4b08      	ldr	r3, [pc, #32]	; (8002474 <Touch_GotATouch+0x2c>)
 8002454:	781b      	ldrb	r3, [r3, #0]
 8002456:	73fb      	strb	r3, [r7, #15]
	if (reset)
 8002458:	79fb      	ldrb	r3, [r7, #7]
 800245a:	2b00      	cmp	r3, #0
 800245c:	d002      	beq.n	8002464 <Touch_GotATouch+0x1c>
		Touch_PenDown=0;
 800245e:	4b05      	ldr	r3, [pc, #20]	; (8002474 <Touch_GotATouch+0x2c>)
 8002460:	2200      	movs	r2, #0
 8002462:	701a      	strb	r2, [r3, #0]
	return result;
 8002464:	7bfb      	ldrb	r3, [r7, #15]
}
 8002466:	4618      	mov	r0, r3
 8002468:	3714      	adds	r7, #20
 800246a:	46bd      	mov	sp, r7
 800246c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002470:	4770      	bx	lr
 8002472:	bf00      	nop
 8002474:	24002374 	.word	0x24002374

08002478 <Touch_TouchGFXSampleTouch>:
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 *
 * 			that's enough for touch integration
 ***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8002478:	b580      	push	{r7, lr}
 800247a:	b084      	sub	sp, #16
 800247c:	af00      	add	r7, sp, #0
 800247e:	6078      	str	r0, [r7, #4]
 8002480:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8002482:	2300      	movs	r3, #0
 8002484:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
 8002486:	2300      	movs	r3, #0
 8002488:	81bb      	strh	r3, [r7, #12]
 800248a:	2300      	movs	r3, #0
 800248c:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=0; 	// tick value get on the first touch. 0 means display untouched.

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 800248e:	2000      	movs	r0, #0
 8002490:	f7ff ffda 	bl	8002448 <Touch_GotATouch>
 8002494:	4603      	mov	r3, r0
 8002496:	2b00      	cmp	r3, #0
 8002498:	d045      	beq.n	8002526 <Touch_TouchGFXSampleTouch+0xae>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 800249a:	f107 020f 	add.w	r2, r7, #15
 800249e:	f107 010a 	add.w	r1, r7, #10
 80024a2:	f107 030c 	add.w	r3, r7, #12
 80024a6:	4618      	mov	r0, r3
 80024a8:	f7ff fee0 	bl	800226c <Touch_GetXYtouch>
		if (!isTouch){				// received a "no touch"
 80024ac:	7bfb      	ldrb	r3, [r7, #15]
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d106      	bne.n	80024c0 <Touch_TouchGFXSampleTouch+0x48>
			touchTime=0;				// set display as untouched
 80024b2:	4b1f      	ldr	r3, [pc, #124]	; (8002530 <Touch_TouchGFXSampleTouch+0xb8>)
 80024b4:	2200      	movs	r2, #0
 80024b6:	601a      	str	r2, [r3, #0]
			Touch_GotATouch(1);			// reset interrupt touch flag
 80024b8:	2001      	movs	r0, #1
 80024ba:	f7ff ffc5 	bl	8002448 <Touch_GotATouch>
 80024be:	e032      	b.n	8002526 <Touch_TouchGFXSampleTouch+0xae>
		} else {					// display touched
			if (touchTime==0){				// if previously untouched
 80024c0:	4b1b      	ldr	r3, [pc, #108]	; (8002530 <Touch_TouchGFXSampleTouch+0xb8>)
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d108      	bne.n	80024da <Touch_TouchGFXSampleTouch+0x62>
				touchTime=HAL_GetTick();	// store tick value at touch time
 80024c8:	f000 f8e6 	bl	8002698 <HAL_GetTick>
 80024cc:	4603      	mov	r3, r0
 80024ce:	4a18      	ldr	r2, [pc, #96]	; (8002530 <Touch_TouchGFXSampleTouch+0xb8>)
 80024d0:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 80024d2:	4b18      	ldr	r3, [pc, #96]	; (8002534 <Touch_TouchGFXSampleTouch+0xbc>)
 80024d4:	2201      	movs	r2, #1
 80024d6:	701a      	strb	r2, [r3, #0]
 80024d8:	e016      	b.n	8002508 <Touch_TouchGFXSampleTouch+0x90>
			} else {						// not a new touch
				if ((DELAY_TO_KEY_REPEAT > 0) && ((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT)) {	// if timeout to key repeat is over (0 means no key repeat)
 80024da:	f000 f8dd 	bl	8002698 <HAL_GetTick>
 80024de:	4602      	mov	r2, r0
 80024e0:	4b13      	ldr	r3, [pc, #76]	; (8002530 <Touch_TouchGFXSampleTouch+0xb8>)
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	1ad3      	subs	r3, r2, r3
 80024e6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80024ea:	d90a      	bls.n	8002502 <Touch_TouchGFXSampleTouch+0x8a>
					flipTouch=!flipTouch;	// alternate every time function is called
 80024ec:	4b11      	ldr	r3, [pc, #68]	; (8002534 <Touch_TouchGFXSampleTouch+0xbc>)
 80024ee:	781b      	ldrb	r3, [r3, #0]
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	bf0c      	ite	eq
 80024f4:	2301      	moveq	r3, #1
 80024f6:	2300      	movne	r3, #0
 80024f8:	b2db      	uxtb	r3, r3
 80024fa:	461a      	mov	r2, r3
 80024fc:	4b0d      	ldr	r3, [pc, #52]	; (8002534 <Touch_TouchGFXSampleTouch+0xbc>)
 80024fe:	701a      	strb	r2, [r3, #0]
 8002500:	e002      	b.n	8002508 <Touch_TouchGFXSampleTouch+0x90>
				} else
					flipTouch=0;			// return a "no touch"
 8002502:	4b0c      	ldr	r3, [pc, #48]	; (8002534 <Touch_TouchGFXSampleTouch+0xbc>)
 8002504:	2200      	movs	r2, #0
 8002506:	701a      	strb	r2, [r3, #0]
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 8002508:	4b0a      	ldr	r3, [pc, #40]	; (8002534 <Touch_TouchGFXSampleTouch+0xbc>)
 800250a:	781b      	ldrb	r3, [r3, #0]
 800250c:	2b00      	cmp	r3, #0
 800250e:	d008      	beq.n	8002522 <Touch_TouchGFXSampleTouch+0xaa>
				*x=xx;
 8002510:	89bb      	ldrh	r3, [r7, #12]
 8002512:	461a      	mov	r2, r3
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	601a      	str	r2, [r3, #0]
				*y=yy;
 8002518:	897b      	ldrh	r3, [r7, #10]
 800251a:	461a      	mov	r2, r3
 800251c:	683b      	ldr	r3, [r7, #0]
 800251e:	601a      	str	r2, [r3, #0]
 8002520:	e001      	b.n	8002526 <Touch_TouchGFXSampleTouch+0xae>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8002522:	2300      	movs	r3, #0
 8002524:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8002526:	7bfb      	ldrb	r3, [r7, #15]
}
 8002528:	4618      	mov	r0, r3
 800252a:	3710      	adds	r7, #16
 800252c:	46bd      	mov	sp, r7
 800252e:	bd80      	pop	{r7, pc}
 8002530:	24002378 	.word	0x24002378
 8002534:	2400237c 	.word	0x2400237c

08002538 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8002538:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002570 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 800253c:	f7fe fe6c 	bl	8001218 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002540:	480c      	ldr	r0, [pc, #48]	; (8002574 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8002542:	490d      	ldr	r1, [pc, #52]	; (8002578 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8002544:	4a0d      	ldr	r2, [pc, #52]	; (800257c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8002546:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002548:	e002      	b.n	8002550 <LoopCopyDataInit>

0800254a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800254a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800254c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800254e:	3304      	adds	r3, #4

08002550 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002550:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002552:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002554:	d3f9      	bcc.n	800254a <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002556:	4a0a      	ldr	r2, [pc, #40]	; (8002580 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8002558:	4c0a      	ldr	r4, [pc, #40]	; (8002584 <LoopFillZerobss+0x22>)
  movs r3, #0
 800255a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800255c:	e001      	b.n	8002562 <LoopFillZerobss>

0800255e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800255e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002560:	3204      	adds	r2, #4

08002562 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002562:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002564:	d3fb      	bcc.n	800255e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8002566:	f023 ff2b 	bl	80263c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800256a:	f7fe f99b 	bl	80008a4 <main>
  bx  lr
 800256e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8002570:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8002574:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8002578:	240000fc 	.word	0x240000fc
  ldr r2, =_sidata
 800257c:	0802bc48 	.word	0x0802bc48
  ldr r2, =_sbss
 8002580:	240000fc 	.word	0x240000fc
  ldr r4, =_ebss
 8002584:	24005680 	.word	0x24005680

08002588 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002588:	e7fe      	b.n	8002588 <ADC3_IRQHandler>
	...

0800258c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800258c:	b580      	push	{r7, lr}
 800258e:	b082      	sub	sp, #8
 8002590:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002592:	2003      	movs	r0, #3
 8002594:	f001 f96e 	bl	8003874 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8002598:	f005 fb4c 	bl	8007c34 <HAL_RCC_GetSysClockFreq>
 800259c:	4602      	mov	r2, r0
 800259e:	4b15      	ldr	r3, [pc, #84]	; (80025f4 <HAL_Init+0x68>)
 80025a0:	699b      	ldr	r3, [r3, #24]
 80025a2:	0a1b      	lsrs	r3, r3, #8
 80025a4:	f003 030f 	and.w	r3, r3, #15
 80025a8:	4913      	ldr	r1, [pc, #76]	; (80025f8 <HAL_Init+0x6c>)
 80025aa:	5ccb      	ldrb	r3, [r1, r3]
 80025ac:	f003 031f 	and.w	r3, r3, #31
 80025b0:	fa22 f303 	lsr.w	r3, r2, r3
 80025b4:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80025b6:	4b0f      	ldr	r3, [pc, #60]	; (80025f4 <HAL_Init+0x68>)
 80025b8:	699b      	ldr	r3, [r3, #24]
 80025ba:	f003 030f 	and.w	r3, r3, #15
 80025be:	4a0e      	ldr	r2, [pc, #56]	; (80025f8 <HAL_Init+0x6c>)
 80025c0:	5cd3      	ldrb	r3, [r2, r3]
 80025c2:	f003 031f 	and.w	r3, r3, #31
 80025c6:	687a      	ldr	r2, [r7, #4]
 80025c8:	fa22 f303 	lsr.w	r3, r2, r3
 80025cc:	4a0b      	ldr	r2, [pc, #44]	; (80025fc <HAL_Init+0x70>)
 80025ce:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80025d0:	4a0b      	ldr	r2, [pc, #44]	; (8002600 <HAL_Init+0x74>)
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80025d6:	200f      	movs	r0, #15
 80025d8:	f000 f814 	bl	8002604 <HAL_InitTick>
 80025dc:	4603      	mov	r3, r0
 80025de:	2b00      	cmp	r3, #0
 80025e0:	d001      	beq.n	80025e6 <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 80025e2:	2301      	movs	r3, #1
 80025e4:	e002      	b.n	80025ec <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80025e6:	f7fe fcf1 	bl	8000fcc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80025ea:	2300      	movs	r3, #0
}
 80025ec:	4618      	mov	r0, r3
 80025ee:	3708      	adds	r7, #8
 80025f0:	46bd      	mov	sp, r7
 80025f2:	bd80      	pop	{r7, pc}
 80025f4:	58024400 	.word	0x58024400
 80025f8:	08027f88 	.word	0x08027f88
 80025fc:	24000008 	.word	0x24000008
 8002600:	24000004 	.word	0x24000004

08002604 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002604:	b580      	push	{r7, lr}
 8002606:	b082      	sub	sp, #8
 8002608:	af00      	add	r7, sp, #0
 800260a:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 800260c:	4b15      	ldr	r3, [pc, #84]	; (8002664 <HAL_InitTick+0x60>)
 800260e:	781b      	ldrb	r3, [r3, #0]
 8002610:	2b00      	cmp	r3, #0
 8002612:	d101      	bne.n	8002618 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8002614:	2301      	movs	r3, #1
 8002616:	e021      	b.n	800265c <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8002618:	4b13      	ldr	r3, [pc, #76]	; (8002668 <HAL_InitTick+0x64>)
 800261a:	681a      	ldr	r2, [r3, #0]
 800261c:	4b11      	ldr	r3, [pc, #68]	; (8002664 <HAL_InitTick+0x60>)
 800261e:	781b      	ldrb	r3, [r3, #0]
 8002620:	4619      	mov	r1, r3
 8002622:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002626:	fbb3 f3f1 	udiv	r3, r3, r1
 800262a:	fbb2 f3f3 	udiv	r3, r2, r3
 800262e:	4618      	mov	r0, r3
 8002630:	f001 f961 	bl	80038f6 <HAL_SYSTICK_Config>
 8002634:	4603      	mov	r3, r0
 8002636:	2b00      	cmp	r3, #0
 8002638:	d001      	beq.n	800263e <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 800263a:	2301      	movs	r3, #1
 800263c:	e00e      	b.n	800265c <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	2b0f      	cmp	r3, #15
 8002642:	d80a      	bhi.n	800265a <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002644:	2200      	movs	r2, #0
 8002646:	6879      	ldr	r1, [r7, #4]
 8002648:	f04f 30ff 	mov.w	r0, #4294967295
 800264c:	f001 f91d 	bl	800388a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002650:	4a06      	ldr	r2, [pc, #24]	; (800266c <HAL_InitTick+0x68>)
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002656:	2300      	movs	r3, #0
 8002658:	e000      	b.n	800265c <HAL_InitTick+0x58>
    return HAL_ERROR;
 800265a:	2301      	movs	r3, #1
}
 800265c:	4618      	mov	r0, r3
 800265e:	3708      	adds	r7, #8
 8002660:	46bd      	mov	sp, r7
 8002662:	bd80      	pop	{r7, pc}
 8002664:	24000014 	.word	0x24000014
 8002668:	24000004 	.word	0x24000004
 800266c:	24000010 	.word	0x24000010

08002670 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002670:	b480      	push	{r7}
 8002672:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8002674:	4b06      	ldr	r3, [pc, #24]	; (8002690 <HAL_IncTick+0x20>)
 8002676:	781b      	ldrb	r3, [r3, #0]
 8002678:	461a      	mov	r2, r3
 800267a:	4b06      	ldr	r3, [pc, #24]	; (8002694 <HAL_IncTick+0x24>)
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	4413      	add	r3, r2
 8002680:	4a04      	ldr	r2, [pc, #16]	; (8002694 <HAL_IncTick+0x24>)
 8002682:	6013      	str	r3, [r2, #0]
}
 8002684:	bf00      	nop
 8002686:	46bd      	mov	sp, r7
 8002688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800268c:	4770      	bx	lr
 800268e:	bf00      	nop
 8002690:	24000014 	.word	0x24000014
 8002694:	24002380 	.word	0x24002380

08002698 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002698:	b480      	push	{r7}
 800269a:	af00      	add	r7, sp, #0
  return uwTick;
 800269c:	4b03      	ldr	r3, [pc, #12]	; (80026ac <HAL_GetTick+0x14>)
 800269e:	681b      	ldr	r3, [r3, #0]
}
 80026a0:	4618      	mov	r0, r3
 80026a2:	46bd      	mov	sp, r7
 80026a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026a8:	4770      	bx	lr
 80026aa:	bf00      	nop
 80026ac:	24002380 	.word	0x24002380

080026b0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	b084      	sub	sp, #16
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80026b8:	f7ff ffee 	bl	8002698 <HAL_GetTick>
 80026bc:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80026c8:	d005      	beq.n	80026d6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80026ca:	4b0a      	ldr	r3, [pc, #40]	; (80026f4 <HAL_Delay+0x44>)
 80026cc:	781b      	ldrb	r3, [r3, #0]
 80026ce:	461a      	mov	r2, r3
 80026d0:	68fb      	ldr	r3, [r7, #12]
 80026d2:	4413      	add	r3, r2
 80026d4:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80026d6:	bf00      	nop
 80026d8:	f7ff ffde 	bl	8002698 <HAL_GetTick>
 80026dc:	4602      	mov	r2, r0
 80026de:	68bb      	ldr	r3, [r7, #8]
 80026e0:	1ad3      	subs	r3, r2, r3
 80026e2:	68fa      	ldr	r2, [r7, #12]
 80026e4:	429a      	cmp	r2, r3
 80026e6:	d8f7      	bhi.n	80026d8 <HAL_Delay+0x28>
  {
  }
}
 80026e8:	bf00      	nop
 80026ea:	bf00      	nop
 80026ec:	3710      	adds	r7, #16
 80026ee:	46bd      	mov	sp, r7
 80026f0:	bd80      	pop	{r7, pc}
 80026f2:	bf00      	nop
 80026f4:	24000014 	.word	0x24000014

080026f8 <HAL_GetREVID>:
/**
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
 80026f8:	b480      	push	{r7}
 80026fa:	af00      	add	r7, sp, #0
   return((DBGMCU->IDCODE) >> 16);
 80026fc:	4b03      	ldr	r3, [pc, #12]	; (800270c <HAL_GetREVID+0x14>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	0c1b      	lsrs	r3, r3, #16
}
 8002702:	4618      	mov	r0, r3
 8002704:	46bd      	mov	sp, r7
 8002706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800270a:	4770      	bx	lr
 800270c:	5c001000 	.word	0x5c001000

08002710 <HAL_SYSCFG_AnalogSwitchConfig>:
  *   @arg SYSCFG_SWITCH_PC3_CLOSE
  * @retval None
  */

void HAL_SYSCFG_AnalogSwitchConfig(uint32_t SYSCFG_AnalogSwitch , uint32_t SYSCFG_SwitchState )
{
 8002710:	b480      	push	{r7}
 8002712:	b083      	sub	sp, #12
 8002714:	af00      	add	r7, sp, #0
 8002716:	6078      	str	r0, [r7, #4]
 8002718:	6039      	str	r1, [r7, #0]
  /* Check the parameter */
  assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
  assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));

  MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
 800271a:	4b07      	ldr	r3, [pc, #28]	; (8002738 <HAL_SYSCFG_AnalogSwitchConfig+0x28>)
 800271c:	685a      	ldr	r2, [r3, #4]
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	43db      	mvns	r3, r3
 8002722:	401a      	ands	r2, r3
 8002724:	4904      	ldr	r1, [pc, #16]	; (8002738 <HAL_SYSCFG_AnalogSwitchConfig+0x28>)
 8002726:	683b      	ldr	r3, [r7, #0]
 8002728:	4313      	orrs	r3, r2
 800272a:	604b      	str	r3, [r1, #4]
}
 800272c:	bf00      	nop
 800272e:	370c      	adds	r7, #12
 8002730:	46bd      	mov	sp, r7
 8002732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002736:	4770      	bx	lr
 8002738:	58000400 	.word	0x58000400

0800273c <LL_ADC_SetCommonClock>:
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
{
 800273c:	b480      	push	{r7}
 800273e:	b083      	sub	sp, #12
 8002740:	af00      	add	r7, sp, #0
 8002742:	6078      	str	r0, [r7, #4]
 8002744:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	689b      	ldr	r3, [r3, #8]
 800274a:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 800274e:	683b      	ldr	r3, [r7, #0]
 8002750:	431a      	orrs	r2, r3
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	609a      	str	r2, [r3, #8]
}
 8002756:	bf00      	nop
 8002758:	370c      	adds	r7, #12
 800275a:	46bd      	mov	sp, r7
 800275c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002760:	4770      	bx	lr

08002762 <LL_ADC_SetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t PathInternal)
{
 8002762:	b480      	push	{r7}
 8002764:	b083      	sub	sp, #12
 8002766:	af00      	add	r7, sp, #0
 8002768:	6078      	str	r0, [r7, #4]
 800276a:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	689b      	ldr	r3, [r3, #8]
 8002770:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8002774:	683b      	ldr	r3, [r7, #0]
 8002776:	431a      	orrs	r2, r3
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	609a      	str	r2, [r3, #8]
}
 800277c:	bf00      	nop
 800277e:	370c      	adds	r7, #12
 8002780:	46bd      	mov	sp, r7
 8002782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002786:	4770      	bx	lr

08002788 <LL_ADC_GetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  */
__STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
{
 8002788:	b480      	push	{r7}
 800278a:	b083      	sub	sp, #12
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	689b      	ldr	r3, [r3, #8]
 8002794:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
}
 8002798:	4618      	mov	r0, r3
 800279a:	370c      	adds	r7, #12
 800279c:	46bd      	mov	sp, r7
 800279e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a2:	4770      	bx	lr

080027a4 <LL_ADC_SetOffset>:
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32_t OffsetLevel)
{
 80027a4:	b480      	push	{r7}
 80027a6:	b087      	sub	sp, #28
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	60f8      	str	r0, [r7, #12]
 80027ac:	60b9      	str	r1, [r7, #8]
 80027ae:	607a      	str	r2, [r7, #4]
 80027b0:	603b      	str	r3, [r7, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 80027b2:	68fb      	ldr	r3, [r7, #12]
 80027b4:	3360      	adds	r3, #96	; 0x60
 80027b6:	461a      	mov	r2, r3
 80027b8:	68bb      	ldr	r3, [r7, #8]
 80027ba:	009b      	lsls	r3, r3, #2
 80027bc:	4413      	add	r3, r2
 80027be:	617b      	str	r3, [r7, #20]
               ADC3_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
  }
  else
#endif /* ADC_VER_V5_V90 */
  {
    MODIFY_REG(*preg,
 80027c0:	697b      	ldr	r3, [r7, #20]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	f003 41f8 	and.w	r1, r3, #2080374784	; 0x7c000000
 80027ce:	683b      	ldr	r3, [r7, #0]
 80027d0:	430b      	orrs	r3, r1
 80027d2:	431a      	orrs	r2, r3
 80027d4:	697b      	ldr	r3, [r7, #20]
 80027d6:	601a      	str	r2, [r3, #0]
               ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
               (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
  }
}
 80027d8:	bf00      	nop
 80027da:	371c      	adds	r7, #28
 80027dc:	46bd      	mov	sp, r7
 80027de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e2:	4770      	bx	lr

080027e4 <LL_ADC_SetDataRightShift>:
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthShift)
{
 80027e4:	b480      	push	{r7}
 80027e6:	b085      	sub	sp, #20
 80027e8:	af00      	add	r7, sp, #0
 80027ea:	60f8      	str	r0, [r7, #12]
 80027ec:	60b9      	str	r1, [r7, #8]
 80027ee:	607a      	str	r2, [r7, #4]
  MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RSHIFT4), RigthShift << (Offsety & 0x1FUL));
 80027f0:	68fb      	ldr	r3, [r7, #12]
 80027f2:	691b      	ldr	r3, [r3, #16]
 80027f4:	f423 42f0 	bic.w	r2, r3, #30720	; 0x7800
 80027f8:	68bb      	ldr	r3, [r7, #8]
 80027fa:	f003 031f 	and.w	r3, r3, #31
 80027fe:	6879      	ldr	r1, [r7, #4]
 8002800:	fa01 f303 	lsl.w	r3, r1, r3
 8002804:	431a      	orrs	r2, r3
 8002806:	68fb      	ldr	r3, [r7, #12]
 8002808:	611a      	str	r2, [r3, #16]
}
 800280a:	bf00      	nop
 800280c:	3714      	adds	r7, #20
 800280e:	46bd      	mov	sp, r7
 8002810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002814:	4770      	bx	lr

08002816 <LL_ADC_SetOffsetSignedSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSignedSaturation)
{
 8002816:	b480      	push	{r7}
 8002818:	b087      	sub	sp, #28
 800281a:	af00      	add	r7, sp, #0
 800281c:	60f8      	str	r0, [r7, #12]
 800281e:	60b9      	str	r1, [r7, #8]
 8002820:	607a      	str	r2, [r7, #4]
    /* Function not available on this instance */
  }
  else
#endif  /* ADC_VER_V5_V90 */
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8002822:	68fb      	ldr	r3, [r7, #12]
 8002824:	3360      	adds	r3, #96	; 0x60
 8002826:	461a      	mov	r2, r3
 8002828:	68bb      	ldr	r3, [r7, #8]
 800282a:	009b      	lsls	r3, r3, #2
 800282c:	4413      	add	r3, r2
 800282e:	617b      	str	r3, [r7, #20]
    MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 8002830:	697b      	ldr	r3, [r7, #20]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	431a      	orrs	r2, r3
 800283c:	697b      	ldr	r3, [r7, #20]
 800283e:	601a      	str	r2, [r3, #0]
  }
}
 8002840:	bf00      	nop
 8002842:	371c      	adds	r7, #28
 8002844:	46bd      	mov	sp, r7
 8002846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800284a:	4770      	bx	lr

0800284c <LL_ADC_REG_SetSequencerRanks>:
  *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to 8 Ms/s)).
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 800284c:	b480      	push	{r7}
 800284e:	b087      	sub	sp, #28
 8002850:	af00      	add	r7, sp, #0
 8002852:	60f8      	str	r0, [r7, #12]
 8002854:	60b9      	str	r1, [r7, #8]
 8002856:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	3330      	adds	r3, #48	; 0x30
 800285c:	461a      	mov	r2, r3
 800285e:	68bb      	ldr	r3, [r7, #8]
 8002860:	0a1b      	lsrs	r3, r3, #8
 8002862:	009b      	lsls	r3, r3, #2
 8002864:	f003 030c 	and.w	r3, r3, #12
 8002868:	4413      	add	r3, r2
 800286a:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 800286c:	697b      	ldr	r3, [r7, #20]
 800286e:	681a      	ldr	r2, [r3, #0]
 8002870:	68bb      	ldr	r3, [r7, #8]
 8002872:	f003 031f 	and.w	r3, r3, #31
 8002876:	211f      	movs	r1, #31
 8002878:	fa01 f303 	lsl.w	r3, r1, r3
 800287c:	43db      	mvns	r3, r3
 800287e:	401a      	ands	r2, r3
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	0e9b      	lsrs	r3, r3, #26
 8002884:	f003 011f 	and.w	r1, r3, #31
 8002888:	68bb      	ldr	r3, [r7, #8]
 800288a:	f003 031f 	and.w	r3, r3, #31
 800288e:	fa01 f303 	lsl.w	r3, r1, r3
 8002892:	431a      	orrs	r2, r3
 8002894:	697b      	ldr	r3, [r7, #20]
 8002896:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8002898:	bf00      	nop
 800289a:	371c      	adds	r7, #28
 800289c:	46bd      	mov	sp, r7
 800289e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028a2:	4770      	bx	lr

080028a4 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
  *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 80028a4:	b480      	push	{r7}
 80028a6:	b087      	sub	sp, #28
 80028a8:	af00      	add	r7, sp, #0
 80028aa:	60f8      	str	r0, [r7, #12]
 80028ac:	60b9      	str	r1, [r7, #8]
 80028ae:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
 80028b0:	68fb      	ldr	r3, [r7, #12]
 80028b2:	3314      	adds	r3, #20
 80028b4:	461a      	mov	r2, r3
 80028b6:	68bb      	ldr	r3, [r7, #8]
 80028b8:	0e5b      	lsrs	r3, r3, #25
 80028ba:	009b      	lsls	r3, r3, #2
 80028bc:	f003 0304 	and.w	r3, r3, #4
 80028c0:	4413      	add	r3, r2
 80028c2:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 80028c4:	697b      	ldr	r3, [r7, #20]
 80028c6:	681a      	ldr	r2, [r3, #0]
 80028c8:	68bb      	ldr	r3, [r7, #8]
 80028ca:	0d1b      	lsrs	r3, r3, #20
 80028cc:	f003 031f 	and.w	r3, r3, #31
 80028d0:	2107      	movs	r1, #7
 80028d2:	fa01 f303 	lsl.w	r3, r1, r3
 80028d6:	43db      	mvns	r3, r3
 80028d8:	401a      	ands	r2, r3
 80028da:	68bb      	ldr	r3, [r7, #8]
 80028dc:	0d1b      	lsrs	r3, r3, #20
 80028de:	f003 031f 	and.w	r3, r3, #31
 80028e2:	6879      	ldr	r1, [r7, #4]
 80028e4:	fa01 f303 	lsl.w	r3, r1, r3
 80028e8:	431a      	orrs	r2, r3
 80028ea:	697b      	ldr	r3, [r7, #20]
 80028ec:	601a      	str	r2, [r3, #0]
             ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS),
             SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS));
}
 80028ee:	bf00      	nop
 80028f0:	371c      	adds	r7, #28
 80028f2:	46bd      	mov	sp, r7
 80028f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f8:	4770      	bx	lr
	...

080028fc <LL_ADC_SetChannelSingleDiff>:
  *         @arg @ref LL_ADC_SINGLE_ENDED
  *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SingleDiff)
{
 80028fc:	b480      	push	{r7}
 80028fe:	b085      	sub	sp, #20
 8002900:	af00      	add	r7, sp, #0
 8002902:	60f8      	str	r0, [r7, #12]
 8002904:	60b9      	str	r1, [r7, #8]
 8002906:	607a      	str	r2, [r7, #4]
  }
#else  /* ADC_VER_V5_V90 */
  /* Bits of channels in single or differential mode are set only for         */
  /* differential mode (for single mode, mask of bits allowed to be set is    */
  /* shifted out of range of bits of channels in single or differential mode. */
  MODIFY_REG(ADCx->DIFSEL,
 8002908:	68fb      	ldr	r3, [r7, #12]
 800290a:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800290e:	68bb      	ldr	r3, [r7, #8]
 8002910:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002914:	43db      	mvns	r3, r3
 8002916:	401a      	ands	r2, r3
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	f003 0318 	and.w	r3, r3, #24
 800291e:	4908      	ldr	r1, [pc, #32]	; (8002940 <LL_ADC_SetChannelSingleDiff+0x44>)
 8002920:	40d9      	lsrs	r1, r3
 8002922:	68bb      	ldr	r3, [r7, #8]
 8002924:	400b      	ands	r3, r1
 8002926:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800292a:	431a      	orrs	r2, r3
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
             Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
             (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
#endif /* ADC_VER_V5_V90 */
}
 8002932:	bf00      	nop
 8002934:	3714      	adds	r7, #20
 8002936:	46bd      	mov	sp, r7
 8002938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800293c:	4770      	bx	lr
 800293e:	bf00      	nop
 8002940:	000fffff 	.word	0x000fffff

08002944 <LL_ADC_DisableDeepPowerDown>:
  * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
{
 8002944:	b480      	push	{r7}
 8002946:	b083      	sub	sp, #12
 8002948:	af00      	add	r7, sp, #0
 800294a:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	689a      	ldr	r2, [r3, #8]
 8002950:	4b04      	ldr	r3, [pc, #16]	; (8002964 <LL_ADC_DisableDeepPowerDown+0x20>)
 8002952:	4013      	ands	r3, r2
 8002954:	687a      	ldr	r2, [r7, #4]
 8002956:	6093      	str	r3, [r2, #8]
}
 8002958:	bf00      	nop
 800295a:	370c      	adds	r7, #12
 800295c:	46bd      	mov	sp, r7
 800295e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002962:	4770      	bx	lr
 8002964:	5fffffc0 	.word	0x5fffffc0

08002968 <LL_ADC_IsDeepPowerDownEnabled>:
  * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
  * @param  ADCx ADC instance
  * @retval 0: deep power down is disabled, 1: deep power down is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
{
 8002968:	b480      	push	{r7}
 800296a:	b083      	sub	sp, #12
 800296c:	af00      	add	r7, sp, #0
 800296e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	689b      	ldr	r3, [r3, #8]
 8002974:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002978:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800297c:	d101      	bne.n	8002982 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 800297e:	2301      	movs	r3, #1
 8002980:	e000      	b.n	8002984 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002982:	2300      	movs	r3, #0
}
 8002984:	4618      	mov	r0, r3
 8002986:	370c      	adds	r7, #12
 8002988:	46bd      	mov	sp, r7
 800298a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800298e:	4770      	bx	lr

08002990 <LL_ADC_EnableInternalRegulator>:
  * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
{
 8002990:	b480      	push	{r7}
 8002992:	b083      	sub	sp, #12
 8002994:	af00      	add	r7, sp, #0
 8002996:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	689a      	ldr	r2, [r3, #8]
 800299c:	4b05      	ldr	r3, [pc, #20]	; (80029b4 <LL_ADC_EnableInternalRegulator+0x24>)
 800299e:	4013      	ands	r3, r2
 80029a0:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADVREGEN);
}
 80029a8:	bf00      	nop
 80029aa:	370c      	adds	r7, #12
 80029ac:	46bd      	mov	sp, r7
 80029ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029b2:	4770      	bx	lr
 80029b4:	6fffffc0 	.word	0x6fffffc0

080029b8 <LL_ADC_IsInternalRegulatorEnabled>:
  * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
  * @param  ADCx ADC instance
  * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
{
 80029b8:	b480      	push	{r7}
 80029ba:	b083      	sub	sp, #12
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	689b      	ldr	r3, [r3, #8]
 80029c4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029c8:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80029cc:	d101      	bne.n	80029d2 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 80029ce:	2301      	movs	r3, #1
 80029d0:	e000      	b.n	80029d4 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 80029d2:	2300      	movs	r3, #0
}
 80029d4:	4618      	mov	r0, r3
 80029d6:	370c      	adds	r7, #12
 80029d8:	46bd      	mov	sp, r7
 80029da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029de:	4770      	bx	lr

080029e0 <LL_ADC_IsEnabled>:
  * @rmtoll CR       ADEN           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 80029e0:	b480      	push	{r7}
 80029e2:	b083      	sub	sp, #12
 80029e4:	af00      	add	r7, sp, #0
 80029e6:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	689b      	ldr	r3, [r3, #8]
 80029ec:	f003 0301 	and.w	r3, r3, #1
 80029f0:	2b01      	cmp	r3, #1
 80029f2:	d101      	bne.n	80029f8 <LL_ADC_IsEnabled+0x18>
 80029f4:	2301      	movs	r3, #1
 80029f6:	e000      	b.n	80029fa <LL_ADC_IsEnabled+0x1a>
 80029f8:	2300      	movs	r3, #0
}
 80029fa:	4618      	mov	r0, r3
 80029fc:	370c      	adds	r7, #12
 80029fe:	46bd      	mov	sp, r7
 8002a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a04:	4770      	bx	lr

08002a06 <LL_ADC_REG_IsConversionOngoing>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8002a06:	b480      	push	{r7}
 8002a08:	b083      	sub	sp, #12
 8002a0a:	af00      	add	r7, sp, #0
 8002a0c:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	689b      	ldr	r3, [r3, #8]
 8002a12:	f003 0304 	and.w	r3, r3, #4
 8002a16:	2b04      	cmp	r3, #4
 8002a18:	d101      	bne.n	8002a1e <LL_ADC_REG_IsConversionOngoing+0x18>
 8002a1a:	2301      	movs	r3, #1
 8002a1c:	e000      	b.n	8002a20 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002a1e:	2300      	movs	r3, #0
}
 8002a20:	4618      	mov	r0, r3
 8002a22:	370c      	adds	r7, #12
 8002a24:	46bd      	mov	sp, r7
 8002a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a2a:	4770      	bx	lr

08002a2c <LL_ADC_INJ_IsConversionOngoing>:
  * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8002a2c:	b480      	push	{r7}
 8002a2e:	b083      	sub	sp, #12
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	689b      	ldr	r3, [r3, #8]
 8002a38:	f003 0308 	and.w	r3, r3, #8
 8002a3c:	2b08      	cmp	r3, #8
 8002a3e:	d101      	bne.n	8002a44 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002a40:	2301      	movs	r3, #1
 8002a42:	e000      	b.n	8002a46 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002a44:	2300      	movs	r3, #0
}
 8002a46:	4618      	mov	r0, r3
 8002a48:	370c      	adds	r7, #12
 8002a4a:	46bd      	mov	sp, r7
 8002a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a50:	4770      	bx	lr
	...

08002a54 <HAL_ADC_Init>:
  *         without  disabling the other ADCs.
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002a54:	b590      	push	{r4, r7, lr}
 8002a56:	b089      	sub	sp, #36	; 0x24
 8002a58:	af00      	add	r7, sp, #0
 8002a5a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	77fb      	strb	r3, [r7, #31]
  uint32_t tmpCFGR;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  __IO uint32_t wait_loop_index = 0UL;
 8002a60:	2300      	movs	r3, #0
 8002a62:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_adc_is_conversion_on_going_regular;
  uint32_t tmp_adc_is_conversion_on_going_injected;

  /* Check ADC handle */
  if (hadc == NULL)
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d101      	bne.n	8002a6e <HAL_ADC_Init+0x1a>
  {
    return HAL_ERROR;
 8002a6a:	2301      	movs	r3, #1
 8002a6c:	e18f      	b.n	8002d8e <HAL_ADC_Init+0x33a>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	68db      	ldr	r3, [r3, #12]
 8002a72:	2b00      	cmp	r3, #0
  /* DISCEN and CONT bits cannot be set at the same time */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002a78:	2b00      	cmp	r3, #0
 8002a7a:	d109      	bne.n	8002a90 <HAL_ADC_Init+0x3c>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002a7c:	6878      	ldr	r0, [r7, #4]
 8002a7e:	f7fd fd13 	bl	80004a8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	2200      	movs	r2, #0
 8002a86:	659a      	str	r2, [r3, #88]	; 0x58

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  }

  /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	4618      	mov	r0, r3
 8002a96:	f7ff ff67 	bl	8002968 <LL_ADC_IsDeepPowerDownEnabled>
 8002a9a:	4603      	mov	r3, r0
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d004      	beq.n	8002aaa <HAL_ADC_Init+0x56>
  {
    /* Disable ADC deep power down mode */
    LL_ADC_DisableDeepPowerDown(hadc->Instance);
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	681b      	ldr	r3, [r3, #0]
 8002aa4:	4618      	mov	r0, r3
 8002aa6:	f7ff ff4d 	bl	8002944 <LL_ADC_DisableDeepPowerDown>
    /* System was in deep power down mode, calibration must
     be relaunched or a previously saved calibration factor
     re-applied once the ADC voltage regulator is enabled */
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	4618      	mov	r0, r3
 8002ab0:	f7ff ff82 	bl	80029b8 <LL_ADC_IsInternalRegulatorEnabled>
 8002ab4:	4603      	mov	r3, r0
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d114      	bne.n	8002ae4 <HAL_ADC_Init+0x90>
  {
    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	4618      	mov	r0, r3
 8002ac0:	f7ff ff66 	bl	8002990 <LL_ADC_EnableInternalRegulator>

    /* Note: Variable divided by 2 to compensate partially              */
    /*       CPU processing cycles, scaling in us split to not          */
    /*       exceed 32 bits register capacity and handle low frequency. */
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8002ac4:	4b87      	ldr	r3, [pc, #540]	; (8002ce4 <HAL_ADC_Init+0x290>)
 8002ac6:	681b      	ldr	r3, [r3, #0]
 8002ac8:	099b      	lsrs	r3, r3, #6
 8002aca:	4a87      	ldr	r2, [pc, #540]	; (8002ce8 <HAL_ADC_Init+0x294>)
 8002acc:	fba2 2303 	umull	r2, r3, r2, r3
 8002ad0:	099b      	lsrs	r3, r3, #6
 8002ad2:	3301      	adds	r3, #1
 8002ad4:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8002ad6:	e002      	b.n	8002ade <HAL_ADC_Init+0x8a>
    {
      wait_loop_index--;
 8002ad8:	68bb      	ldr	r3, [r7, #8]
 8002ada:	3b01      	subs	r3, #1
 8002adc:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8002ade:	68bb      	ldr	r3, [r7, #8]
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	d1f9      	bne.n	8002ad8 <HAL_ADC_Init+0x84>
  }

  /* Verification that ADC voltage regulator is correctly enabled, whether    */
  /* or not ADC is coming from state reset (if any potential problem of       */
  /* clocking, voltage regulator would not be enabled).                       */
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	4618      	mov	r0, r3
 8002aea:	f7ff ff65 	bl	80029b8 <LL_ADC_IsInternalRegulatorEnabled>
 8002aee:	4603      	mov	r3, r0
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d10d      	bne.n	8002b10 <HAL_ADC_Init+0xbc>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002af8:	f043 0210 	orr.w	r2, r3, #16
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	655a      	str	r2, [r3, #84]	; 0x54

    /* Set ADC error code to ADC peripheral internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002b04:	f043 0201 	orr.w	r2, r3, #1
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	659a      	str	r2, [r3, #88]	; 0x58

    tmp_hal_status = HAL_ERROR;
 8002b0c:	2301      	movs	r3, #1
 8002b0e:	77fb      	strb	r3, [r7, #31]

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed and if there is no conversion on going on regular    */
  /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
  /* called to update a parameter on the fly).                                */
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	4618      	mov	r0, r3
 8002b16:	f7ff ff76 	bl	8002a06 <LL_ADC_REG_IsConversionOngoing>
 8002b1a:	6178      	str	r0, [r7, #20]

  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b20:	f003 0310 	and.w	r3, r3, #16
 8002b24:	2b00      	cmp	r3, #0
 8002b26:	f040 8129 	bne.w	8002d7c <HAL_ADC_Init+0x328>
      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 8002b2a:	697b      	ldr	r3, [r7, #20]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	f040 8125 	bne.w	8002d7c <HAL_ADC_Init+0x328>
     )
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b36:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8002b3a:	f043 0202 	orr.w	r2, r3, #2
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	655a      	str	r2, [r3, #84]	; 0x54
    /* Configuration of common ADC parameters                                 */

    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - clock configuration                                                 */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	4618      	mov	r0, r3
 8002b48:	f7ff ff4a 	bl	80029e0 <LL_ADC_IsEnabled>
 8002b4c:	4603      	mov	r3, r0
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d136      	bne.n	8002bc0 <HAL_ADC_Init+0x16c>
    {
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	4a65      	ldr	r2, [pc, #404]	; (8002cec <HAL_ADC_Init+0x298>)
 8002b58:	4293      	cmp	r3, r2
 8002b5a:	d004      	beq.n	8002b66 <HAL_ADC_Init+0x112>
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	4a63      	ldr	r2, [pc, #396]	; (8002cf0 <HAL_ADC_Init+0x29c>)
 8002b62:	4293      	cmp	r3, r2
 8002b64:	d10e      	bne.n	8002b84 <HAL_ADC_Init+0x130>
 8002b66:	4861      	ldr	r0, [pc, #388]	; (8002cec <HAL_ADC_Init+0x298>)
 8002b68:	f7ff ff3a 	bl	80029e0 <LL_ADC_IsEnabled>
 8002b6c:	4604      	mov	r4, r0
 8002b6e:	4860      	ldr	r0, [pc, #384]	; (8002cf0 <HAL_ADC_Init+0x29c>)
 8002b70:	f7ff ff36 	bl	80029e0 <LL_ADC_IsEnabled>
 8002b74:	4603      	mov	r3, r0
 8002b76:	4323      	orrs	r3, r4
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	bf0c      	ite	eq
 8002b7c:	2301      	moveq	r3, #1
 8002b7e:	2300      	movne	r3, #0
 8002b80:	b2db      	uxtb	r3, r3
 8002b82:	e008      	b.n	8002b96 <HAL_ADC_Init+0x142>
 8002b84:	485b      	ldr	r0, [pc, #364]	; (8002cf4 <HAL_ADC_Init+0x2a0>)
 8002b86:	f7ff ff2b 	bl	80029e0 <LL_ADC_IsEnabled>
 8002b8a:	4603      	mov	r3, r0
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	bf0c      	ite	eq
 8002b90:	2301      	moveq	r3, #1
 8002b92:	2300      	movne	r3, #0
 8002b94:	b2db      	uxtb	r3, r3
 8002b96:	2b00      	cmp	r3, #0
 8002b98:	d012      	beq.n	8002bc0 <HAL_ADC_Init+0x16c>
        /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
        /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
        /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
        /*     (set into HAL_ADC_ConfigChannel() or                             */
        /*     HAL_ADCEx_InjectedConfigChannel() )                              */
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	4a53      	ldr	r2, [pc, #332]	; (8002cec <HAL_ADC_Init+0x298>)
 8002ba0:	4293      	cmp	r3, r2
 8002ba2:	d004      	beq.n	8002bae <HAL_ADC_Init+0x15a>
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	4a51      	ldr	r2, [pc, #324]	; (8002cf0 <HAL_ADC_Init+0x29c>)
 8002baa:	4293      	cmp	r3, r2
 8002bac:	d101      	bne.n	8002bb2 <HAL_ADC_Init+0x15e>
 8002bae:	4a52      	ldr	r2, [pc, #328]	; (8002cf8 <HAL_ADC_Init+0x2a4>)
 8002bb0:	e000      	b.n	8002bb4 <HAL_ADC_Init+0x160>
 8002bb2:	4a52      	ldr	r2, [pc, #328]	; (8002cfc <HAL_ADC_Init+0x2a8>)
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	685b      	ldr	r3, [r3, #4]
 8002bb8:	4619      	mov	r1, r3
 8002bba:	4610      	mov	r0, r2
 8002bbc:	f7ff fdbe 	bl	800273c <LL_ADC_SetCommonClock>
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
    }

#else

    if ((HAL_GetREVID() > REV_ID_Y) && (ADC_RESOLUTION_8B == hadc->Init.Resolution))
 8002bc0:	f7ff fd9a 	bl	80026f8 <HAL_GetREVID>
 8002bc4:	4603      	mov	r3, r0
 8002bc6:	f241 0203 	movw	r2, #4099	; 0x1003
 8002bca:	4293      	cmp	r3, r2
 8002bcc:	d914      	bls.n	8002bf8 <HAL_ADC_Init+0x1a4>
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	689b      	ldr	r3, [r3, #8]
 8002bd2:	2b10      	cmp	r3, #16
 8002bd4:	d110      	bne.n	8002bf8 <HAL_ADC_Init+0x1a4>
    {
      /* for STM32H7 silicon rev.B and above , ADC_CFGR_RES value for 8bits resolution is : b111 */
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	7d5b      	ldrb	r3, [r3, #21]
 8002bda:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                    |
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002be0:	431a      	orrs	r2, r3
                  hadc->Init.Resolution | (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)                |
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	689b      	ldr	r3, [r3, #8]
                  hadc->Init.Overrun                                                    |
 8002be6:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	7f1b      	ldrb	r3, [r3, #28]
 8002bec:	041b      	lsls	r3, r3, #16
                  hadc->Init.Resolution | (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)                |
 8002bee:	4313      	orrs	r3, r2
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002bf0:	f043 030c 	orr.w	r3, r3, #12
 8002bf4:	61bb      	str	r3, [r7, #24]
 8002bf6:	e00d      	b.n	8002c14 <HAL_ADC_Init+0x1c0>
    }
    else
    {

      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	7d5b      	ldrb	r3, [r3, #21]
 8002bfc:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                    |
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002c02:	431a      	orrs	r2, r3
                  hadc->Init.Resolution                                                 |
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	689b      	ldr	r3, [r3, #8]
                  hadc->Init.Overrun                                                    |
 8002c08:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	7f1b      	ldrb	r3, [r3, #28]
 8002c0e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002c10:	4313      	orrs	r3, r2
 8002c12:	61bb      	str	r3, [r7, #24]
    }

#endif /* ADC_VER_V5_3 */

    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	7f1b      	ldrb	r3, [r3, #28]
 8002c18:	2b01      	cmp	r3, #1
 8002c1a:	d106      	bne.n	8002c2a <HAL_ADC_Init+0x1d6>
    {
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	6a1b      	ldr	r3, [r3, #32]
 8002c20:	3b01      	subs	r3, #1
 8002c22:	045b      	lsls	r3, r3, #17
 8002c24:	69ba      	ldr	r2, [r7, #24]
 8002c26:	4313      	orrs	r3, r2
 8002c28:	61bb      	str	r3, [r7, #24]
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d009      	beq.n	8002c46 <HAL_ADC_Init+0x1f2>
    {
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c36:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002c3e:	4313      	orrs	r3, r2
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002c40:	69ba      	ldr	r2, [r7, #24]
 8002c42:	4313      	orrs	r3, r2
 8002c44:	61bb      	str	r3, [r7, #24]
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
    }
#else
    /* Update Configuration Register CFGR */
    MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	68da      	ldr	r2, [r3, #12]
 8002c4c:	4b2c      	ldr	r3, [pc, #176]	; (8002d00 <HAL_ADC_Init+0x2ac>)
 8002c4e:	4013      	ands	r3, r2
 8002c50:	687a      	ldr	r2, [r7, #4]
 8002c52:	6812      	ldr	r2, [r2, #0]
 8002c54:	69b9      	ldr	r1, [r7, #24]
 8002c56:	430b      	orrs	r3, r1
 8002c58:	60d3      	str	r3, [r2, #12]
    /* Parameters that can be updated when ADC is disabled or enabled without */
    /* conversion on going on regular and injected groups:                    */
    /*  - Conversion data management      Init.ConversionDataManagement       */
    /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
    /*  - Oversampling parameters         Init.Oversampling                   */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	4618      	mov	r0, r3
 8002c60:	f7ff fed1 	bl	8002a06 <LL_ADC_REG_IsConversionOngoing>
 8002c64:	6138      	str	r0, [r7, #16]
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	4618      	mov	r0, r3
 8002c6c:	f7ff fede 	bl	8002a2c <LL_ADC_INJ_IsConversionOngoing>
 8002c70:	60f8      	str	r0, [r7, #12]
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002c72:	693b      	ldr	r3, [r7, #16]
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	d15f      	bne.n	8002d38 <HAL_ADC_Init+0x2e4>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	2b00      	cmp	r3, #0
 8002c7c:	d15c      	bne.n	8002d38 <HAL_ADC_Init+0x2e4>
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
      }
#else
      tmpCFGR = (
                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	7d1b      	ldrb	r3, [r3, #20]
 8002c82:	039a      	lsls	r2, r3, #14
                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      tmpCFGR = (
 8002c88:	4313      	orrs	r3, r2
 8002c8a:	61bb      	str	r3, [r7, #24]
#endif

      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	68da      	ldr	r2, [r3, #12]
 8002c92:	4b1c      	ldr	r3, [pc, #112]	; (8002d04 <HAL_ADC_Init+0x2b0>)
 8002c94:	4013      	ands	r3, r2
 8002c96:	687a      	ldr	r2, [r7, #4]
 8002c98:	6812      	ldr	r2, [r2, #0]
 8002c9a:	69b9      	ldr	r1, [r7, #24]
 8002c9c:	430b      	orrs	r3, r1
 8002c9e:	60d3      	str	r3, [r2, #12]

      if (hadc->Init.OversamplingMode == ENABLE)
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002ca6:	2b01      	cmp	r3, #1
 8002ca8:	d130      	bne.n	8002d0c <HAL_ADC_Init+0x2b8>
#endif
        assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
        assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
        assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));

        if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cae:	2b00      	cmp	r3, #0
        /*  - Oversampling Ratio                                               */
        /*  - Right bit shift                                                  */
        /*  - Left bit shift                                                   */
        /*  - Triggered mode                                                   */
        /*  - Oversampling mode (continued/resumed)                            */
        MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	691a      	ldr	r2, [r3, #16]
 8002cb6:	4b14      	ldr	r3, [pc, #80]	; (8002d08 <HAL_ADC_Init+0x2b4>)
 8002cb8:	4013      	ands	r3, r2
 8002cba:	687a      	ldr	r2, [r7, #4]
 8002cbc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8002cbe:	3a01      	subs	r2, #1
 8002cc0:	0411      	lsls	r1, r2, #16
 8002cc2:	687a      	ldr	r2, [r7, #4]
 8002cc4:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002cc6:	4311      	orrs	r1, r2
 8002cc8:	687a      	ldr	r2, [r7, #4]
 8002cca:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8002ccc:	4311      	orrs	r1, r2
 8002cce:	687a      	ldr	r2, [r7, #4]
 8002cd0:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8002cd2:	430a      	orrs	r2, r1
 8002cd4:	431a      	orrs	r2, r3
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	f042 0201 	orr.w	r2, r2, #1
 8002cde:	611a      	str	r2, [r3, #16]
 8002ce0:	e01c      	b.n	8002d1c <HAL_ADC_Init+0x2c8>
 8002ce2:	bf00      	nop
 8002ce4:	24000004 	.word	0x24000004
 8002ce8:	053e2d63 	.word	0x053e2d63
 8002cec:	40022000 	.word	0x40022000
 8002cf0:	40022100 	.word	0x40022100
 8002cf4:	58026000 	.word	0x58026000
 8002cf8:	40022300 	.word	0x40022300
 8002cfc:	58026300 	.word	0x58026300
 8002d00:	fff0c003 	.word	0xfff0c003
 8002d04:	ffffbffc 	.word	0xffffbffc
 8002d08:	fc00f81e 	.word	0xfc00f81e

      }
      else
      {
        /* Disable ADC oversampling scope on ADC group regular */
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	691a      	ldr	r2, [r3, #16]
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	f022 0201 	bic.w	r2, r2, #1
 8002d1a:	611a      	str	r2, [r3, #16]
      }

      /* Set the LeftShift parameter: it is applied to the final result with or without oversampling */
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	691b      	ldr	r3, [r3, #16]
 8002d22:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	430a      	orrs	r2, r1
 8002d30:	611a      	str	r2, [r3, #16]
        /* Configure the BOOST Mode */
        ADC_ConfigureBoostMode(hadc);
      }
#else
      /* Configure the BOOST Mode */
      ADC_ConfigureBoostMode(hadc);
 8002d32:	6878      	ldr	r0, [r7, #4]
 8002d34:	f000 fb80 	bl	8003438 <ADC_ConfigureBoostMode>
    /*   Note: Scan mode is not present by hardware on this device, but       */
    /*   emulated by software for alignment over all STM32 devices.           */
    /* - if scan mode is enabled, regular channels sequence length is set to  */
    /*   parameter "NbrOfConversion".                                         */

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	68db      	ldr	r3, [r3, #12]
 8002d3c:	2b01      	cmp	r3, #1
 8002d3e:	d10c      	bne.n	8002d5a <HAL_ADC_Init+0x306>
    {
      /* Set number of ranks in regular group sequencer */
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d46:	f023 010f 	bic.w	r1, r3, #15
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	699b      	ldr	r3, [r3, #24]
 8002d4e:	1e5a      	subs	r2, r3, #1
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	430a      	orrs	r2, r1
 8002d56:	631a      	str	r2, [r3, #48]	; 0x30
 8002d58:	e007      	b.n	8002d6a <HAL_ADC_Init+0x316>
    }
    else
    {
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	f022 020f 	bic.w	r2, r2, #15
 8002d68:	631a      	str	r2, [r3, #48]	; 0x30
    }

    /* Initialize the ADC state */
    /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002d6e:	f023 0303 	bic.w	r3, r3, #3
 8002d72:	f043 0201 	orr.w	r2, r3, #1
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	655a      	str	r2, [r3, #84]	; 0x54
 8002d7a:	e007      	b.n	8002d8c <HAL_ADC_Init+0x338>
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002d80:	f043 0210 	orr.w	r2, r3, #16
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	655a      	str	r2, [r3, #84]	; 0x54

    tmp_hal_status = HAL_ERROR;
 8002d88:	2301      	movs	r3, #1
 8002d8a:	77fb      	strb	r3, [r7, #31]
  }

  /* Return function status */
  return tmp_hal_status;
 8002d8c:	7ffb      	ldrb	r3, [r7, #31]
}
 8002d8e:	4618      	mov	r0, r3
 8002d90:	3724      	adds	r7, #36	; 0x24
 8002d92:	46bd      	mov	sp, r7
 8002d94:	bd90      	pop	{r4, r7, pc}
 8002d96:	bf00      	nop

08002d98 <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002d98:	b590      	push	{r4, r7, lr}
 8002d9a:	b0a1      	sub	sp, #132	; 0x84
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
 8002da0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002da2:	2300      	movs	r3, #0
 8002da4:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0;
 8002da8:	2300      	movs	r3, #0
 8002daa:	60bb      	str	r3, [r7, #8]
  /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
     ignored (considered as reset) */
  assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENABLE)));

  /* Verification of channel number */
  if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
 8002dac:	683b      	ldr	r3, [r7, #0]
 8002dae:	68db      	ldr	r3, [r3, #12]
 8002db0:	4a9d      	ldr	r2, [pc, #628]	; (8003028 <HAL_ADC_ConfigChannel+0x290>)
 8002db2:	4293      	cmp	r3, r2
    }
#endif
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002dba:	2b01      	cmp	r3, #1
 8002dbc:	d101      	bne.n	8002dc2 <HAL_ADC_ConfigChannel+0x2a>
 8002dbe:	2302      	movs	r3, #2
 8002dc0:	e321      	b.n	8003406 <HAL_ADC_ConfigChannel+0x66e>
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	2201      	movs	r2, #1
 8002dc6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	4618      	mov	r0, r3
 8002dd0:	f7ff fe19 	bl	8002a06 <LL_ADC_REG_IsConversionOngoing>
 8002dd4:	4603      	mov	r3, r0
 8002dd6:	2b00      	cmp	r3, #0
 8002dd8:	f040 8306 	bne.w	80033e8 <HAL_ADC_ConfigChannel+0x650>
      /* ADC channels preselection */
      hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
    }
#else
    /* ADC channels preselection */
    hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d108      	bne.n	8002dfa <HAL_ADC_ConfigChannel+0x62>
 8002de8:	683b      	ldr	r3, [r7, #0]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	0e9b      	lsrs	r3, r3, #26
 8002dee:	f003 031f 	and.w	r3, r3, #31
 8002df2:	2201      	movs	r2, #1
 8002df4:	fa02 f303 	lsl.w	r3, r2, r3
 8002df8:	e016      	b.n	8002e28 <HAL_ADC_ConfigChannel+0x90>
 8002dfa:	683b      	ldr	r3, [r7, #0]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	667b      	str	r3, [r7, #100]	; 0x64
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002e00:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002e02:	fa93 f3a3 	rbit	r3, r3
 8002e06:	663b      	str	r3, [r7, #96]	; 0x60
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8002e08:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002e0a:	66bb      	str	r3, [r7, #104]	; 0x68
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8002e0c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002e0e:	2b00      	cmp	r3, #0
 8002e10:	d101      	bne.n	8002e16 <HAL_ADC_ConfigChannel+0x7e>
  {
    return 32U;
 8002e12:	2320      	movs	r3, #32
 8002e14:	e003      	b.n	8002e1e <HAL_ADC_ConfigChannel+0x86>
  }
  return __builtin_clz(value);
 8002e16:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002e18:	fab3 f383 	clz	r3, r3
 8002e1c:	b2db      	uxtb	r3, r3
 8002e1e:	f003 031f 	and.w	r3, r3, #31
 8002e22:	2201      	movs	r2, #1
 8002e24:	fa02 f303 	lsl.w	r3, r2, r3
 8002e28:	687a      	ldr	r2, [r7, #4]
 8002e2a:	6812      	ldr	r2, [r2, #0]
 8002e2c:	69d1      	ldr	r1, [r2, #28]
 8002e2e:	687a      	ldr	r2, [r7, #4]
 8002e30:	6812      	ldr	r2, [r2, #0]
 8002e32:	430b      	orrs	r3, r1
 8002e34:	61d3      	str	r3, [r2, #28]
#endif /* ADC_VER_V5_V90 */

    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	6818      	ldr	r0, [r3, #0]
 8002e3a:	683b      	ldr	r3, [r7, #0]
 8002e3c:	6859      	ldr	r1, [r3, #4]
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	461a      	mov	r2, r3
 8002e44:	f7ff fd02 	bl	800284c <LL_ADC_REG_SetSequencerRanks>
    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated when ADC is disabled or enabled without   */
    /* conversion on going on regular group:                                    */
    /*  - Channel sampling time                                                 */
    /*  - Channel offset                                                        */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	f7ff fdda 	bl	8002a06 <LL_ADC_REG_IsConversionOngoing>
 8002e52:	67b8      	str	r0, [r7, #120]	; 0x78
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	4618      	mov	r0, r3
 8002e5a:	f7ff fde7 	bl	8002a2c <LL_ADC_INJ_IsConversionOngoing>
 8002e5e:	6778      	str	r0, [r7, #116]	; 0x74
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002e60:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002e62:	2b00      	cmp	r3, #0
 8002e64:	f040 80b3 	bne.w	8002fce <HAL_ADC_ConfigChannel+0x236>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 8002e68:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	f040 80af 	bne.w	8002fce <HAL_ADC_ConfigChannel+0x236>
       )
    {
      /* Set sampling time of the selected ADC channel */
      LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	6818      	ldr	r0, [r3, #0]
 8002e74:	683b      	ldr	r3, [r7, #0]
 8002e76:	6819      	ldr	r1, [r3, #0]
 8002e78:	683b      	ldr	r3, [r7, #0]
 8002e7a:	689b      	ldr	r3, [r3, #8]
 8002e7c:	461a      	mov	r2, r3
 8002e7e:	f7ff fd11 	bl	80028a4 <LL_ADC_SetChannelSamplingTime>
        tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
      }
      else
#endif /* ADC_VER_V5_V90 */
      {
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 8002e82:	4b6a      	ldr	r3, [pc, #424]	; (800302c <HAL_ADC_ConfigChannel+0x294>)
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8002e8a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8002e8e:	d10b      	bne.n	8002ea8 <HAL_ADC_ConfigChannel+0x110>
 8002e90:	683b      	ldr	r3, [r7, #0]
 8002e92:	695a      	ldr	r2, [r3, #20]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	68db      	ldr	r3, [r3, #12]
 8002e9a:	089b      	lsrs	r3, r3, #2
 8002e9c:	f003 0307 	and.w	r3, r3, #7
 8002ea0:	005b      	lsls	r3, r3, #1
 8002ea2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ea6:	e01d      	b.n	8002ee4 <HAL_ADC_ConfigChannel+0x14c>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	68db      	ldr	r3, [r3, #12]
 8002eae:	f003 0310 	and.w	r3, r3, #16
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d10b      	bne.n	8002ece <HAL_ADC_ConfigChannel+0x136>
 8002eb6:	683b      	ldr	r3, [r7, #0]
 8002eb8:	695a      	ldr	r2, [r3, #20]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	68db      	ldr	r3, [r3, #12]
 8002ec0:	089b      	lsrs	r3, r3, #2
 8002ec2:	f003 0307 	and.w	r3, r3, #7
 8002ec6:	005b      	lsls	r3, r3, #1
 8002ec8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ecc:	e00a      	b.n	8002ee4 <HAL_ADC_ConfigChannel+0x14c>
 8002ece:	683b      	ldr	r3, [r7, #0]
 8002ed0:	695a      	ldr	r2, [r3, #20]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	68db      	ldr	r3, [r3, #12]
 8002ed8:	089b      	lsrs	r3, r3, #2
 8002eda:	f003 0304 	and.w	r3, r3, #4
 8002ede:	005b      	lsls	r3, r3, #1
 8002ee0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ee4:	673b      	str	r3, [r7, #112]	; 0x70
      }
      
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 8002ee6:	683b      	ldr	r3, [r7, #0]
 8002ee8:	691b      	ldr	r3, [r3, #16]
 8002eea:	2b04      	cmp	r3, #4
 8002eec:	d027      	beq.n	8002f3e <HAL_ADC_ConfigChannel+0x1a6>
      {
        /* Set ADC selected offset number */
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	6818      	ldr	r0, [r3, #0]
 8002ef2:	683b      	ldr	r3, [r7, #0]
 8002ef4:	6919      	ldr	r1, [r3, #16]
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	681a      	ldr	r2, [r3, #0]
 8002efa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002efc:	f7ff fc52 	bl	80027a4 <LL_ADC_SetOffset>
        else
#endif /* ADC_VER_V5_V90 */
        {
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
          /* Set ADC selected offset signed saturation */
          LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSignedSaturation == ENABLE) ? LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE : LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE);
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	6818      	ldr	r0, [r3, #0]
 8002f04:	683b      	ldr	r3, [r7, #0]
 8002f06:	6919      	ldr	r1, [r3, #16]
 8002f08:	683b      	ldr	r3, [r7, #0]
 8002f0a:	7e5b      	ldrb	r3, [r3, #25]
 8002f0c:	2b01      	cmp	r3, #1
 8002f0e:	d102      	bne.n	8002f16 <HAL_ADC_ConfigChannel+0x17e>
 8002f10:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8002f14:	e000      	b.n	8002f18 <HAL_ADC_ConfigChannel+0x180>
 8002f16:	2300      	movs	r3, #0
 8002f18:	461a      	mov	r2, r3
 8002f1a:	f7ff fc7c 	bl	8002816 <LL_ADC_SetOffsetSignedSaturation>

          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
          /* Set ADC selected offset right shift */
          LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShift == ENABLE) ? LL_ADC_OFFSET_RSHIFT_ENABLE : LL_ADC_OFFSET_RSHIFT_DISABLE);
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	6818      	ldr	r0, [r3, #0]
 8002f22:	683b      	ldr	r3, [r7, #0]
 8002f24:	6919      	ldr	r1, [r3, #16]
 8002f26:	683b      	ldr	r3, [r7, #0]
 8002f28:	7e1b      	ldrb	r3, [r3, #24]
 8002f2a:	2b01      	cmp	r3, #1
 8002f2c:	d102      	bne.n	8002f34 <HAL_ADC_ConfigChannel+0x19c>
 8002f2e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002f32:	e000      	b.n	8002f36 <HAL_ADC_ConfigChannel+0x19e>
 8002f34:	2300      	movs	r3, #0
 8002f36:	461a      	mov	r2, r3
 8002f38:	f7ff fc54 	bl	80027e4 <LL_ADC_SetDataRightShift>
 8002f3c:	e047      	b.n	8002fce <HAL_ADC_ConfigChannel+0x236>
          }
        }
        else
#endif /* ADC_VER_V5_V90 */
        {
          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002f44:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002f48:	683b      	ldr	r3, [r7, #0]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	069b      	lsls	r3, r3, #26
 8002f4e:	429a      	cmp	r2, r3
 8002f50:	d107      	bne.n	8002f62 <HAL_ADC_ConfigChannel+0x1ca>
          {
            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002f60:	661a      	str	r2, [r3, #96]	; 0x60
          }
          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002f68:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002f6c:	683b      	ldr	r3, [r7, #0]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	069b      	lsls	r3, r3, #26
 8002f72:	429a      	cmp	r2, r3
 8002f74:	d107      	bne.n	8002f86 <HAL_ADC_ConfigChannel+0x1ee>
          {
            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002f84:	665a      	str	r2, [r3, #100]	; 0x64
          }
          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8002f8c:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002f90:	683b      	ldr	r3, [r7, #0]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	069b      	lsls	r3, r3, #26
 8002f96:	429a      	cmp	r2, r3
 8002f98:	d107      	bne.n	8002faa <HAL_ADC_ConfigChannel+0x212>
          {
            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002fa8:	669a      	str	r2, [r3, #104]	; 0x68
          }
          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8002fb0:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002fb4:	683b      	ldr	r3, [r7, #0]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	069b      	lsls	r3, r3, #26
 8002fba:	429a      	cmp	r2, r3
 8002fbc:	d107      	bne.n	8002fce <HAL_ADC_ConfigChannel+0x236>
          {
            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002fcc:	66da      	str	r2, [r3, #108]	; 0x6c

    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated only when ADC is disabled:                */
    /*  - Single or differential mode                                           */
    /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	4618      	mov	r0, r3
 8002fd4:	f7ff fd04 	bl	80029e0 <LL_ADC_IsEnabled>
 8002fd8:	4603      	mov	r3, r0
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	f040 820d 	bne.w	80033fa <HAL_ADC_ConfigChannel+0x662>
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	6818      	ldr	r0, [r3, #0]
 8002fe4:	683b      	ldr	r3, [r7, #0]
 8002fe6:	6819      	ldr	r1, [r3, #0]
 8002fe8:	683b      	ldr	r3, [r7, #0]
 8002fea:	68db      	ldr	r3, [r3, #12]
 8002fec:	461a      	mov	r2, r3
 8002fee:	f7ff fc85 	bl	80028fc <LL_ADC_SetChannelSingleDiff>

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	68db      	ldr	r3, [r3, #12]
 8002ff6:	4a0c      	ldr	r2, [pc, #48]	; (8003028 <HAL_ADC_ConfigChannel+0x290>)
 8002ff8:	4293      	cmp	r3, r2
 8002ffa:	f040 8133 	bne.w	8003264 <HAL_ADC_ConfigChannel+0x4cc>
      {
        /* Set sampling time of the selected ADC channel */
        /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range */
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6818      	ldr	r0, [r3, #0]
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8003002:	683b      	ldr	r3, [r7, #0]
 8003004:	681b      	ldr	r3, [r3, #0]
 8003006:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800300a:	2b00      	cmp	r3, #0
 800300c:	d110      	bne.n	8003030 <HAL_ADC_ConfigChannel+0x298>
 800300e:	683b      	ldr	r3, [r7, #0]
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	0e9b      	lsrs	r3, r3, #26
 8003014:	3301      	adds	r3, #1
 8003016:	f003 031f 	and.w	r3, r3, #31
 800301a:	2b09      	cmp	r3, #9
 800301c:	bf94      	ite	ls
 800301e:	2301      	movls	r3, #1
 8003020:	2300      	movhi	r3, #0
 8003022:	b2db      	uxtb	r3, r3
 8003024:	e01e      	b.n	8003064 <HAL_ADC_ConfigChannel+0x2cc>
 8003026:	bf00      	nop
 8003028:	47ff0000 	.word	0x47ff0000
 800302c:	5c001000 	.word	0x5c001000
 8003030:	683b      	ldr	r3, [r7, #0]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	65bb      	str	r3, [r7, #88]	; 0x58
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003036:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003038:	fa93 f3a3 	rbit	r3, r3
 800303c:	657b      	str	r3, [r7, #84]	; 0x54
  return result;
 800303e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003040:	65fb      	str	r3, [r7, #92]	; 0x5c
  if (value == 0U)
 8003042:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003044:	2b00      	cmp	r3, #0
 8003046:	d101      	bne.n	800304c <HAL_ADC_ConfigChannel+0x2b4>
    return 32U;
 8003048:	2320      	movs	r3, #32
 800304a:	e003      	b.n	8003054 <HAL_ADC_ConfigChannel+0x2bc>
  return __builtin_clz(value);
 800304c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800304e:	fab3 f383 	clz	r3, r3
 8003052:	b2db      	uxtb	r3, r3
 8003054:	3301      	adds	r3, #1
 8003056:	f003 031f 	and.w	r3, r3, #31
 800305a:	2b09      	cmp	r3, #9
 800305c:	bf94      	ite	ls
 800305e:	2301      	movls	r3, #1
 8003060:	2300      	movhi	r3, #0
 8003062:	b2db      	uxtb	r3, r3
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8003064:	2b00      	cmp	r3, #0
 8003066:	d079      	beq.n	800315c <HAL_ADC_ConfigChannel+0x3c4>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003070:	2b00      	cmp	r3, #0
 8003072:	d107      	bne.n	8003084 <HAL_ADC_ConfigChannel+0x2ec>
 8003074:	683b      	ldr	r3, [r7, #0]
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	0e9b      	lsrs	r3, r3, #26
 800307a:	3301      	adds	r3, #1
 800307c:	069b      	lsls	r3, r3, #26
 800307e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003082:	e015      	b.n	80030b0 <HAL_ADC_ConfigChannel+0x318>
 8003084:	683b      	ldr	r3, [r7, #0]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800308a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800308c:	fa93 f3a3 	rbit	r3, r3
 8003090:	64bb      	str	r3, [r7, #72]	; 0x48
  return result;
 8003092:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003094:	653b      	str	r3, [r7, #80]	; 0x50
  if (value == 0U)
 8003096:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003098:	2b00      	cmp	r3, #0
 800309a:	d101      	bne.n	80030a0 <HAL_ADC_ConfigChannel+0x308>
    return 32U;
 800309c:	2320      	movs	r3, #32
 800309e:	e003      	b.n	80030a8 <HAL_ADC_ConfigChannel+0x310>
  return __builtin_clz(value);
 80030a0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80030a2:	fab3 f383 	clz	r3, r3
 80030a6:	b2db      	uxtb	r3, r3
 80030a8:	3301      	adds	r3, #1
 80030aa:	069b      	lsls	r3, r3, #26
 80030ac:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 80030b0:	683b      	ldr	r3, [r7, #0]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d109      	bne.n	80030d0 <HAL_ADC_ConfigChannel+0x338>
 80030bc:	683b      	ldr	r3, [r7, #0]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	0e9b      	lsrs	r3, r3, #26
 80030c2:	3301      	adds	r3, #1
 80030c4:	f003 031f 	and.w	r3, r3, #31
 80030c8:	2101      	movs	r1, #1
 80030ca:	fa01 f303 	lsl.w	r3, r1, r3
 80030ce:	e017      	b.n	8003100 <HAL_ADC_ConfigChannel+0x368>
 80030d0:	683b      	ldr	r3, [r7, #0]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80030d6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80030d8:	fa93 f3a3 	rbit	r3, r3
 80030dc:	63fb      	str	r3, [r7, #60]	; 0x3c
  return result;
 80030de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80030e0:	647b      	str	r3, [r7, #68]	; 0x44
  if (value == 0U)
 80030e2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80030e4:	2b00      	cmp	r3, #0
 80030e6:	d101      	bne.n	80030ec <HAL_ADC_ConfigChannel+0x354>
    return 32U;
 80030e8:	2320      	movs	r3, #32
 80030ea:	e003      	b.n	80030f4 <HAL_ADC_ConfigChannel+0x35c>
  return __builtin_clz(value);
 80030ec:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80030ee:	fab3 f383 	clz	r3, r3
 80030f2:	b2db      	uxtb	r3, r3
 80030f4:	3301      	adds	r3, #1
 80030f6:	f003 031f 	and.w	r3, r3, #31
 80030fa:	2101      	movs	r1, #1
 80030fc:	fa01 f303 	lsl.w	r3, r1, r3
 8003100:	ea42 0103 	orr.w	r1, r2, r3
 8003104:	683b      	ldr	r3, [r7, #0]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800310c:	2b00      	cmp	r3, #0
 800310e:	d10a      	bne.n	8003126 <HAL_ADC_ConfigChannel+0x38e>
 8003110:	683b      	ldr	r3, [r7, #0]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	0e9b      	lsrs	r3, r3, #26
 8003116:	3301      	adds	r3, #1
 8003118:	f003 021f 	and.w	r2, r3, #31
 800311c:	4613      	mov	r3, r2
 800311e:	005b      	lsls	r3, r3, #1
 8003120:	4413      	add	r3, r2
 8003122:	051b      	lsls	r3, r3, #20
 8003124:	e018      	b.n	8003158 <HAL_ADC_ConfigChannel+0x3c0>
 8003126:	683b      	ldr	r3, [r7, #0]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800312c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800312e:	fa93 f3a3 	rbit	r3, r3
 8003132:	633b      	str	r3, [r7, #48]	; 0x30
  return result;
 8003134:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003136:	63bb      	str	r3, [r7, #56]	; 0x38
  if (value == 0U)
 8003138:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800313a:	2b00      	cmp	r3, #0
 800313c:	d101      	bne.n	8003142 <HAL_ADC_ConfigChannel+0x3aa>
    return 32U;
 800313e:	2320      	movs	r3, #32
 8003140:	e003      	b.n	800314a <HAL_ADC_ConfigChannel+0x3b2>
  return __builtin_clz(value);
 8003142:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003144:	fab3 f383 	clz	r3, r3
 8003148:	b2db      	uxtb	r3, r3
 800314a:	3301      	adds	r3, #1
 800314c:	f003 021f 	and.w	r2, r3, #31
 8003150:	4613      	mov	r3, r2
 8003152:	005b      	lsls	r3, r3, #1
 8003154:	4413      	add	r3, r2
 8003156:	051b      	lsls	r3, r3, #20
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8003158:	430b      	orrs	r3, r1
 800315a:	e07e      	b.n	800325a <HAL_ADC_ConfigChannel+0x4c2>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 800315c:	683b      	ldr	r3, [r7, #0]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003164:	2b00      	cmp	r3, #0
 8003166:	d107      	bne.n	8003178 <HAL_ADC_ConfigChannel+0x3e0>
 8003168:	683b      	ldr	r3, [r7, #0]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	0e9b      	lsrs	r3, r3, #26
 800316e:	3301      	adds	r3, #1
 8003170:	069b      	lsls	r3, r3, #26
 8003172:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003176:	e015      	b.n	80031a4 <HAL_ADC_ConfigChannel+0x40c>
 8003178:	683b      	ldr	r3, [r7, #0]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800317e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003180:	fa93 f3a3 	rbit	r3, r3
 8003184:	627b      	str	r3, [r7, #36]	; 0x24
  return result;
 8003186:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003188:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (value == 0U)
 800318a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800318c:	2b00      	cmp	r3, #0
 800318e:	d101      	bne.n	8003194 <HAL_ADC_ConfigChannel+0x3fc>
    return 32U;
 8003190:	2320      	movs	r3, #32
 8003192:	e003      	b.n	800319c <HAL_ADC_ConfigChannel+0x404>
  return __builtin_clz(value);
 8003194:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003196:	fab3 f383 	clz	r3, r3
 800319a:	b2db      	uxtb	r3, r3
 800319c:	3301      	adds	r3, #1
 800319e:	069b      	lsls	r3, r3, #26
 80031a0:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 80031a4:	683b      	ldr	r3, [r7, #0]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80031ac:	2b00      	cmp	r3, #0
 80031ae:	d109      	bne.n	80031c4 <HAL_ADC_ConfigChannel+0x42c>
 80031b0:	683b      	ldr	r3, [r7, #0]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	0e9b      	lsrs	r3, r3, #26
 80031b6:	3301      	adds	r3, #1
 80031b8:	f003 031f 	and.w	r3, r3, #31
 80031bc:	2101      	movs	r1, #1
 80031be:	fa01 f303 	lsl.w	r3, r1, r3
 80031c2:	e017      	b.n	80031f4 <HAL_ADC_ConfigChannel+0x45c>
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80031ca:	69fb      	ldr	r3, [r7, #28]
 80031cc:	fa93 f3a3 	rbit	r3, r3
 80031d0:	61bb      	str	r3, [r7, #24]
  return result;
 80031d2:	69bb      	ldr	r3, [r7, #24]
 80031d4:	623b      	str	r3, [r7, #32]
  if (value == 0U)
 80031d6:	6a3b      	ldr	r3, [r7, #32]
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d101      	bne.n	80031e0 <HAL_ADC_ConfigChannel+0x448>
    return 32U;
 80031dc:	2320      	movs	r3, #32
 80031de:	e003      	b.n	80031e8 <HAL_ADC_ConfigChannel+0x450>
  return __builtin_clz(value);
 80031e0:	6a3b      	ldr	r3, [r7, #32]
 80031e2:	fab3 f383 	clz	r3, r3
 80031e6:	b2db      	uxtb	r3, r3
 80031e8:	3301      	adds	r3, #1
 80031ea:	f003 031f 	and.w	r3, r3, #31
 80031ee:	2101      	movs	r1, #1
 80031f0:	fa01 f303 	lsl.w	r3, r1, r3
 80031f4:	ea42 0103 	orr.w	r1, r2, r3
 80031f8:	683b      	ldr	r3, [r7, #0]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003200:	2b00      	cmp	r3, #0
 8003202:	d10d      	bne.n	8003220 <HAL_ADC_ConfigChannel+0x488>
 8003204:	683b      	ldr	r3, [r7, #0]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	0e9b      	lsrs	r3, r3, #26
 800320a:	3301      	adds	r3, #1
 800320c:	f003 021f 	and.w	r2, r3, #31
 8003210:	4613      	mov	r3, r2
 8003212:	005b      	lsls	r3, r3, #1
 8003214:	4413      	add	r3, r2
 8003216:	3b1e      	subs	r3, #30
 8003218:	051b      	lsls	r3, r3, #20
 800321a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800321e:	e01b      	b.n	8003258 <HAL_ADC_ConfigChannel+0x4c0>
 8003220:	683b      	ldr	r3, [r7, #0]
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	613b      	str	r3, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003226:	693b      	ldr	r3, [r7, #16]
 8003228:	fa93 f3a3 	rbit	r3, r3
 800322c:	60fb      	str	r3, [r7, #12]
  return result;
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	617b      	str	r3, [r7, #20]
  if (value == 0U)
 8003232:	697b      	ldr	r3, [r7, #20]
 8003234:	2b00      	cmp	r3, #0
 8003236:	d101      	bne.n	800323c <HAL_ADC_ConfigChannel+0x4a4>
    return 32U;
 8003238:	2320      	movs	r3, #32
 800323a:	e003      	b.n	8003244 <HAL_ADC_ConfigChannel+0x4ac>
  return __builtin_clz(value);
 800323c:	697b      	ldr	r3, [r7, #20]
 800323e:	fab3 f383 	clz	r3, r3
 8003242:	b2db      	uxtb	r3, r3
 8003244:	3301      	adds	r3, #1
 8003246:	f003 021f 	and.w	r2, r3, #31
 800324a:	4613      	mov	r3, r2
 800324c:	005b      	lsls	r3, r3, #1
 800324e:	4413      	add	r3, r2
 8003250:	3b1e      	subs	r3, #30
 8003252:	051b      	lsls	r3, r3, #20
 8003254:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8003258:	430b      	orrs	r3, r1
 800325a:	683a      	ldr	r2, [r7, #0]
 800325c:	6892      	ldr	r2, [r2, #8]
 800325e:	4619      	mov	r1, r3
 8003260:	f7ff fb20 	bl	80028a4 <LL_ADC_SetChannelSamplingTime>
      /* If internal channel selected, enable dedicated internal buffers and    */
      /* paths.                                                                 */
      /* Note: these internal measurement paths can be disabled using           */
      /* HAL_ADC_DeInit().                                                      */

      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8003264:	683b      	ldr	r3, [r7, #0]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	2b00      	cmp	r3, #0
 800326a:	f280 80c6 	bge.w	80033fa <HAL_ADC_ConfigChannel+0x662>
      {
        /* Configuration of common ADC parameters                                 */

        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	4a67      	ldr	r2, [pc, #412]	; (8003410 <HAL_ADC_ConfigChannel+0x678>)
 8003274:	4293      	cmp	r3, r2
 8003276:	d004      	beq.n	8003282 <HAL_ADC_ConfigChannel+0x4ea>
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	4a65      	ldr	r2, [pc, #404]	; (8003414 <HAL_ADC_ConfigChannel+0x67c>)
 800327e:	4293      	cmp	r3, r2
 8003280:	d101      	bne.n	8003286 <HAL_ADC_ConfigChannel+0x4ee>
 8003282:	4b65      	ldr	r3, [pc, #404]	; (8003418 <HAL_ADC_ConfigChannel+0x680>)
 8003284:	e000      	b.n	8003288 <HAL_ADC_ConfigChannel+0x4f0>
 8003286:	4b65      	ldr	r3, [pc, #404]	; (800341c <HAL_ADC_ConfigChannel+0x684>)
 8003288:	4618      	mov	r0, r3
 800328a:	f7ff fa7d 	bl	8002788 <LL_ADC_GetCommonPathInternalCh>
 800328e:	66f8      	str	r0, [r7, #108]	; 0x6c

        /* Software is allowed to change common parameters only when all ADCs   */
        /* of the common group are disabled.                                    */
        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	4a5e      	ldr	r2, [pc, #376]	; (8003410 <HAL_ADC_ConfigChannel+0x678>)
 8003296:	4293      	cmp	r3, r2
 8003298:	d004      	beq.n	80032a4 <HAL_ADC_ConfigChannel+0x50c>
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	4a5d      	ldr	r2, [pc, #372]	; (8003414 <HAL_ADC_ConfigChannel+0x67c>)
 80032a0:	4293      	cmp	r3, r2
 80032a2:	d10e      	bne.n	80032c2 <HAL_ADC_ConfigChannel+0x52a>
 80032a4:	485a      	ldr	r0, [pc, #360]	; (8003410 <HAL_ADC_ConfigChannel+0x678>)
 80032a6:	f7ff fb9b 	bl	80029e0 <LL_ADC_IsEnabled>
 80032aa:	4604      	mov	r4, r0
 80032ac:	4859      	ldr	r0, [pc, #356]	; (8003414 <HAL_ADC_ConfigChannel+0x67c>)
 80032ae:	f7ff fb97 	bl	80029e0 <LL_ADC_IsEnabled>
 80032b2:	4603      	mov	r3, r0
 80032b4:	4323      	orrs	r3, r4
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	bf0c      	ite	eq
 80032ba:	2301      	moveq	r3, #1
 80032bc:	2300      	movne	r3, #0
 80032be:	b2db      	uxtb	r3, r3
 80032c0:	e008      	b.n	80032d4 <HAL_ADC_ConfigChannel+0x53c>
 80032c2:	4857      	ldr	r0, [pc, #348]	; (8003420 <HAL_ADC_ConfigChannel+0x688>)
 80032c4:	f7ff fb8c 	bl	80029e0 <LL_ADC_IsEnabled>
 80032c8:	4603      	mov	r3, r0
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	bf0c      	ite	eq
 80032ce:	2301      	moveq	r3, #1
 80032d0:	2300      	movne	r3, #0
 80032d2:	b2db      	uxtb	r3, r3
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	d07d      	beq.n	80033d4 <HAL_ADC_ConfigChannel+0x63c>
        {
          /* If the requested internal measurement path has already been enabled, */
          /* bypass the configuration processing.                                 */
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	4a51      	ldr	r2, [pc, #324]	; (8003424 <HAL_ADC_ConfigChannel+0x68c>)
 80032de:	4293      	cmp	r3, r2
 80032e0:	d130      	bne.n	8003344 <HAL_ADC_ConfigChannel+0x5ac>
 80032e2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80032e4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	d12b      	bne.n	8003344 <HAL_ADC_ConfigChannel+0x5ac>
          {
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	4a4b      	ldr	r2, [pc, #300]	; (8003420 <HAL_ADC_ConfigChannel+0x688>)
 80032f2:	4293      	cmp	r3, r2
 80032f4:	f040 8081 	bne.w	80033fa <HAL_ADC_ConfigChannel+0x662>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channel);
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	4a44      	ldr	r2, [pc, #272]	; (8003410 <HAL_ADC_ConfigChannel+0x678>)
 80032fe:	4293      	cmp	r3, r2
 8003300:	d004      	beq.n	800330c <HAL_ADC_ConfigChannel+0x574>
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	4a43      	ldr	r2, [pc, #268]	; (8003414 <HAL_ADC_ConfigChannel+0x67c>)
 8003308:	4293      	cmp	r3, r2
 800330a:	d101      	bne.n	8003310 <HAL_ADC_ConfigChannel+0x578>
 800330c:	4a42      	ldr	r2, [pc, #264]	; (8003418 <HAL_ADC_ConfigChannel+0x680>)
 800330e:	e000      	b.n	8003312 <HAL_ADC_ConfigChannel+0x57a>
 8003310:	4a42      	ldr	r2, [pc, #264]	; (800341c <HAL_ADC_ConfigChannel+0x684>)
 8003312:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003314:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003318:	4619      	mov	r1, r3
 800331a:	4610      	mov	r0, r2
 800331c:	f7ff fa21 	bl	8002762 <LL_ADC_SetCommonPathInternalCh>
              /* Delay for temperature sensor stabilization time */
              /* Wait loop initialization and execution */
              /* Note: Variable divided by 2 to compensate partially              */
              /*       CPU processing cycles, scaling in us split to not          */
              /*       exceed 32 bits register capacity and handle low frequency. */
              wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8003320:	4b41      	ldr	r3, [pc, #260]	; (8003428 <HAL_ADC_ConfigChannel+0x690>)
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	099b      	lsrs	r3, r3, #6
 8003326:	4a41      	ldr	r2, [pc, #260]	; (800342c <HAL_ADC_ConfigChannel+0x694>)
 8003328:	fba2 2303 	umull	r2, r3, r2, r3
 800332c:	099b      	lsrs	r3, r3, #6
 800332e:	3301      	adds	r3, #1
 8003330:	005b      	lsls	r3, r3, #1
 8003332:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 8003334:	e002      	b.n	800333c <HAL_ADC_ConfigChannel+0x5a4>
              {
                wait_loop_index--;
 8003336:	68bb      	ldr	r3, [r7, #8]
 8003338:	3b01      	subs	r3, #1
 800333a:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 800333c:	68bb      	ldr	r3, [r7, #8]
 800333e:	2b00      	cmp	r3, #0
 8003340:	d1f9      	bne.n	8003336 <HAL_ADC_ConfigChannel+0x59e>
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8003342:	e05a      	b.n	80033fa <HAL_ADC_ConfigChannel+0x662>
              }
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 8003344:	683b      	ldr	r3, [r7, #0]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	4a39      	ldr	r2, [pc, #228]	; (8003430 <HAL_ADC_ConfigChannel+0x698>)
 800334a:	4293      	cmp	r3, r2
 800334c:	d11e      	bne.n	800338c <HAL_ADC_ConfigChannel+0x5f4>
 800334e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003350:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003354:	2b00      	cmp	r3, #0
 8003356:	d119      	bne.n	800338c <HAL_ADC_ConfigChannel+0x5f4>
          {
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	4a30      	ldr	r2, [pc, #192]	; (8003420 <HAL_ADC_ConfigChannel+0x688>)
 800335e:	4293      	cmp	r3, r2
 8003360:	d14b      	bne.n	80033fa <HAL_ADC_ConfigChannel+0x662>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	4a2a      	ldr	r2, [pc, #168]	; (8003410 <HAL_ADC_ConfigChannel+0x678>)
 8003368:	4293      	cmp	r3, r2
 800336a:	d004      	beq.n	8003376 <HAL_ADC_ConfigChannel+0x5de>
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	681b      	ldr	r3, [r3, #0]
 8003370:	4a28      	ldr	r2, [pc, #160]	; (8003414 <HAL_ADC_ConfigChannel+0x67c>)
 8003372:	4293      	cmp	r3, r2
 8003374:	d101      	bne.n	800337a <HAL_ADC_ConfigChannel+0x5e2>
 8003376:	4a28      	ldr	r2, [pc, #160]	; (8003418 <HAL_ADC_ConfigChannel+0x680>)
 8003378:	e000      	b.n	800337c <HAL_ADC_ConfigChannel+0x5e4>
 800337a:	4a28      	ldr	r2, [pc, #160]	; (800341c <HAL_ADC_ConfigChannel+0x684>)
 800337c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800337e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003382:	4619      	mov	r1, r3
 8003384:	4610      	mov	r0, r2
 8003386:	f7ff f9ec 	bl	8002762 <LL_ADC_SetCommonPathInternalCh>
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 800338a:	e036      	b.n	80033fa <HAL_ADC_ConfigChannel+0x662>
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 800338c:	683b      	ldr	r3, [r7, #0]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	4a28      	ldr	r2, [pc, #160]	; (8003434 <HAL_ADC_ConfigChannel+0x69c>)
 8003392:	4293      	cmp	r3, r2
 8003394:	d131      	bne.n	80033fa <HAL_ADC_ConfigChannel+0x662>
 8003396:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003398:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800339c:	2b00      	cmp	r3, #0
 800339e:	d12c      	bne.n	80033fa <HAL_ADC_ConfigChannel+0x662>
          {
            if (ADC_VREFINT_INSTANCE(hadc))
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	4a1e      	ldr	r2, [pc, #120]	; (8003420 <HAL_ADC_ConfigChannel+0x688>)
 80033a6:	4293      	cmp	r3, r2
 80033a8:	d127      	bne.n	80033fa <HAL_ADC_ConfigChannel+0x662>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	4a18      	ldr	r2, [pc, #96]	; (8003410 <HAL_ADC_ConfigChannel+0x678>)
 80033b0:	4293      	cmp	r3, r2
 80033b2:	d004      	beq.n	80033be <HAL_ADC_ConfigChannel+0x626>
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	4a16      	ldr	r2, [pc, #88]	; (8003414 <HAL_ADC_ConfigChannel+0x67c>)
 80033ba:	4293      	cmp	r3, r2
 80033bc:	d101      	bne.n	80033c2 <HAL_ADC_ConfigChannel+0x62a>
 80033be:	4a16      	ldr	r2, [pc, #88]	; (8003418 <HAL_ADC_ConfigChannel+0x680>)
 80033c0:	e000      	b.n	80033c4 <HAL_ADC_ConfigChannel+0x62c>
 80033c2:	4a16      	ldr	r2, [pc, #88]	; (800341c <HAL_ADC_ConfigChannel+0x684>)
 80033c4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80033c6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80033ca:	4619      	mov	r1, r3
 80033cc:	4610      	mov	r0, r2
 80033ce:	f7ff f9c8 	bl	8002762 <LL_ADC_SetCommonPathInternalCh>
 80033d2:	e012      	b.n	80033fa <HAL_ADC_ConfigChannel+0x662>
        /* enabled and other ADC of the common group are enabled, internal      */
        /* measurement paths cannot be enabled.                                 */
        else
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80033d8:	f043 0220 	orr.w	r2, r3, #32
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	655a      	str	r2, [r3, #84]	; 0x54

          tmp_hal_status = HAL_ERROR;
 80033e0:	2301      	movs	r3, #1
 80033e2:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 80033e6:	e008      	b.n	80033fa <HAL_ADC_ConfigChannel+0x662>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80033ec:	f043 0220 	orr.w	r2, r3, #32
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	655a      	str	r2, [r3, #84]	; 0x54

    tmp_hal_status = HAL_ERROR;
 80033f4:	2301      	movs	r3, #1
 80033f6:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	2200      	movs	r2, #0
 80033fe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Return function status */
  return tmp_hal_status;
 8003402:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
}
 8003406:	4618      	mov	r0, r3
 8003408:	3784      	adds	r7, #132	; 0x84
 800340a:	46bd      	mov	sp, r7
 800340c:	bd90      	pop	{r4, r7, pc}
 800340e:	bf00      	nop
 8003410:	40022000 	.word	0x40022000
 8003414:	40022100 	.word	0x40022100
 8003418:	40022300 	.word	0x40022300
 800341c:	58026300 	.word	0x58026300
 8003420:	58026000 	.word	0x58026000
 8003424:	cb840000 	.word	0xcb840000
 8003428:	24000004 	.word	0x24000004
 800342c:	053e2d63 	.word	0x053e2d63
 8003430:	c7520000 	.word	0xc7520000
 8003434:	cfb80000 	.word	0xcfb80000

08003438 <ADC_ConfigureBoostMode>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval None.
  */
void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
{
 8003438:	b580      	push	{r7, lr}
 800343a:	b084      	sub	sp, #16
 800343c:	af00      	add	r7, sp, #0
 800343e:	6078      	str	r0, [r7, #4]
  uint32_t freq;
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	4a7a      	ldr	r2, [pc, #488]	; (8003630 <ADC_ConfigureBoostMode+0x1f8>)
 8003446:	4293      	cmp	r3, r2
 8003448:	d004      	beq.n	8003454 <ADC_ConfigureBoostMode+0x1c>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	4a79      	ldr	r2, [pc, #484]	; (8003634 <ADC_ConfigureBoostMode+0x1fc>)
 8003450:	4293      	cmp	r3, r2
 8003452:	d109      	bne.n	8003468 <ADC_ConfigureBoostMode+0x30>
 8003454:	4b78      	ldr	r3, [pc, #480]	; (8003638 <ADC_ConfigureBoostMode+0x200>)
 8003456:	689b      	ldr	r3, [r3, #8]
 8003458:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800345c:	2b00      	cmp	r3, #0
 800345e:	bf14      	ite	ne
 8003460:	2301      	movne	r3, #1
 8003462:	2300      	moveq	r3, #0
 8003464:	b2db      	uxtb	r3, r3
 8003466:	e008      	b.n	800347a <ADC_ConfigureBoostMode+0x42>
 8003468:	4b74      	ldr	r3, [pc, #464]	; (800363c <ADC_ConfigureBoostMode+0x204>)
 800346a:	689b      	ldr	r3, [r3, #8]
 800346c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003470:	2b00      	cmp	r3, #0
 8003472:	bf14      	ite	ne
 8003474:	2301      	movne	r3, #1
 8003476:	2300      	moveq	r3, #0
 8003478:	b2db      	uxtb	r3, r3
 800347a:	2b00      	cmp	r3, #0
 800347c:	d01c      	beq.n	80034b8 <ADC_ConfigureBoostMode+0x80>
  {
    freq = HAL_RCC_GetHCLKFreq();
 800347e:	f004 fd53 	bl	8007f28 <HAL_RCC_GetHCLKFreq>
 8003482:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	685b      	ldr	r3, [r3, #4]
 8003488:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800348c:	d010      	beq.n	80034b0 <ADC_ConfigureBoostMode+0x78>
 800348e:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003492:	d873      	bhi.n	800357c <ADC_ConfigureBoostMode+0x144>
 8003494:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003498:	d002      	beq.n	80034a0 <ADC_ConfigureBoostMode+0x68>
 800349a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800349e:	d16d      	bne.n	800357c <ADC_ConfigureBoostMode+0x144>
    {
      case ADC_CLOCK_SYNC_PCLK_DIV1:
      case ADC_CLOCK_SYNC_PCLK_DIV2:
        freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	685b      	ldr	r3, [r3, #4]
 80034a4:	0c1b      	lsrs	r3, r3, #16
 80034a6:	68fa      	ldr	r2, [r7, #12]
 80034a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80034ac:	60fb      	str	r3, [r7, #12]
        break;
 80034ae:	e068      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_SYNC_PCLK_DIV4:
        freq /= 4UL;
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	089b      	lsrs	r3, r3, #2
 80034b4:	60fb      	str	r3, [r7, #12]
        break;
 80034b6:	e064      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
        break;
    }
  }
  else
  {
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
 80034b8:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80034bc:	f04f 0100 	mov.w	r1, #0
 80034c0:	f005 ff82 	bl	80093c8 <HAL_RCCEx_GetPeriphCLKFreq>
 80034c4:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	685b      	ldr	r3, [r3, #4]
 80034ca:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 80034ce:	d051      	beq.n	8003574 <ADC_ConfigureBoostMode+0x13c>
 80034d0:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 80034d4:	d854      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 80034d6:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 80034da:	d047      	beq.n	800356c <ADC_ConfigureBoostMode+0x134>
 80034dc:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 80034e0:	d84e      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 80034e2:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 80034e6:	d03d      	beq.n	8003564 <ADC_ConfigureBoostMode+0x12c>
 80034e8:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 80034ec:	d848      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 80034ee:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80034f2:	d033      	beq.n	800355c <ADC_ConfigureBoostMode+0x124>
 80034f4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80034f8:	d842      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 80034fa:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 80034fe:	d029      	beq.n	8003554 <ADC_ConfigureBoostMode+0x11c>
 8003500:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8003504:	d83c      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 8003506:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 800350a:	d01a      	beq.n	8003542 <ADC_ConfigureBoostMode+0x10a>
 800350c:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8003510:	d836      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 8003512:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8003516:	d014      	beq.n	8003542 <ADC_ConfigureBoostMode+0x10a>
 8003518:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 800351c:	d830      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 800351e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003522:	d00e      	beq.n	8003542 <ADC_ConfigureBoostMode+0x10a>
 8003524:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003528:	d82a      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 800352a:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 800352e:	d008      	beq.n	8003542 <ADC_ConfigureBoostMode+0x10a>
 8003530:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8003534:	d824      	bhi.n	8003580 <ADC_ConfigureBoostMode+0x148>
 8003536:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800353a:	d002      	beq.n	8003542 <ADC_ConfigureBoostMode+0x10a>
 800353c:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 8003540:	d11e      	bne.n	8003580 <ADC_ConfigureBoostMode+0x148>
      case ADC_CLOCK_ASYNC_DIV4:
      case ADC_CLOCK_ASYNC_DIV6:
      case ADC_CLOCK_ASYNC_DIV8:
      case ADC_CLOCK_ASYNC_DIV10:
      case ADC_CLOCK_ASYNC_DIV12:
        freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	685b      	ldr	r3, [r3, #4]
 8003546:	0c9b      	lsrs	r3, r3, #18
 8003548:	005b      	lsls	r3, r3, #1
 800354a:	68fa      	ldr	r2, [r7, #12]
 800354c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003550:	60fb      	str	r3, [r7, #12]
        break;
 8003552:	e016      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV16:
        freq /= 16UL;
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	091b      	lsrs	r3, r3, #4
 8003558:	60fb      	str	r3, [r7, #12]
        break;
 800355a:	e012      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV32:
        freq /= 32UL;
 800355c:	68fb      	ldr	r3, [r7, #12]
 800355e:	095b      	lsrs	r3, r3, #5
 8003560:	60fb      	str	r3, [r7, #12]
        break;
 8003562:	e00e      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV64:
        freq /= 64UL;
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	099b      	lsrs	r3, r3, #6
 8003568:	60fb      	str	r3, [r7, #12]
        break;
 800356a:	e00a      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV128:
        freq /= 128UL;
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	09db      	lsrs	r3, r3, #7
 8003570:	60fb      	str	r3, [r7, #12]
        break;
 8003572:	e006      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV256:
        freq /= 256UL;
 8003574:	68fb      	ldr	r3, [r7, #12]
 8003576:	0a1b      	lsrs	r3, r3, #8
 8003578:	60fb      	str	r3, [r7, #12]
        break;
 800357a:	e002      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
        break;
 800357c:	bf00      	nop
 800357e:	e000      	b.n	8003582 <ADC_ConfigureBoostMode+0x14a>
      default:
        break;
 8003580:	bf00      	nop
  else /* if(freq > 25000000UL) */
  {
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
  }
#else
  if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
 8003582:	f7ff f8b9 	bl	80026f8 <HAL_GetREVID>
 8003586:	4603      	mov	r3, r0
 8003588:	f241 0203 	movw	r2, #4099	; 0x1003
 800358c:	4293      	cmp	r3, r2
 800358e:	d815      	bhi.n	80035bc <ADC_ConfigureBoostMode+0x184>
  {
    if (freq > 20000000UL)
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	4a2b      	ldr	r2, [pc, #172]	; (8003640 <ADC_ConfigureBoostMode+0x208>)
 8003594:	4293      	cmp	r3, r2
 8003596:	d908      	bls.n	80035aa <ADC_ConfigureBoostMode+0x172>
    {
      SET_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	689a      	ldr	r2, [r3, #8]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80035a6:	609a      	str	r2, [r3, #8]
    {
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
    }
  }
#endif /* ADC_VER_V5_3 */
}
 80035a8:	e03e      	b.n	8003628 <ADC_ConfigureBoostMode+0x1f0>
      CLEAR_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	689a      	ldr	r2, [r3, #8]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80035b8:	609a      	str	r2, [r3, #8]
}
 80035ba:	e035      	b.n	8003628 <ADC_ConfigureBoostMode+0x1f0>
    freq /= 2U; /* divider by 2 for Rev.V */
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	085b      	lsrs	r3, r3, #1
 80035c0:	60fb      	str	r3, [r7, #12]
    if (freq <= 6250000UL)
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	4a1f      	ldr	r2, [pc, #124]	; (8003644 <ADC_ConfigureBoostMode+0x20c>)
 80035c6:	4293      	cmp	r3, r2
 80035c8:	d808      	bhi.n	80035dc <ADC_ConfigureBoostMode+0x1a4>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	689a      	ldr	r2, [r3, #8]
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80035d8:	609a      	str	r2, [r3, #8]
}
 80035da:	e025      	b.n	8003628 <ADC_ConfigureBoostMode+0x1f0>
    else if (freq <= 12500000UL)
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	4a1a      	ldr	r2, [pc, #104]	; (8003648 <ADC_ConfigureBoostMode+0x210>)
 80035e0:	4293      	cmp	r3, r2
 80035e2:	d80a      	bhi.n	80035fa <ADC_ConfigureBoostMode+0x1c2>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	689b      	ldr	r3, [r3, #8]
 80035ea:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	681b      	ldr	r3, [r3, #0]
 80035f2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80035f6:	609a      	str	r2, [r3, #8]
}
 80035f8:	e016      	b.n	8003628 <ADC_ConfigureBoostMode+0x1f0>
    else if (freq <= 25000000UL)
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	4a13      	ldr	r2, [pc, #76]	; (800364c <ADC_ConfigureBoostMode+0x214>)
 80035fe:	4293      	cmp	r3, r2
 8003600:	d80a      	bhi.n	8003618 <ADC_ConfigureBoostMode+0x1e0>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	689b      	ldr	r3, [r3, #8]
 8003608:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003614:	609a      	str	r2, [r3, #8]
}
 8003616:	e007      	b.n	8003628 <ADC_ConfigureBoostMode+0x1f0>
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	689a      	ldr	r2, [r3, #8]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8003626:	609a      	str	r2, [r3, #8]
}
 8003628:	bf00      	nop
 800362a:	3710      	adds	r7, #16
 800362c:	46bd      	mov	sp, r7
 800362e:	bd80      	pop	{r7, pc}
 8003630:	40022000 	.word	0x40022000
 8003634:	40022100 	.word	0x40022100
 8003638:	40022300 	.word	0x40022300
 800363c:	58026300 	.word	0x58026300
 8003640:	01312d00 	.word	0x01312d00
 8003644:	005f5e10 	.word	0x005f5e10
 8003648:	00bebc20 	.word	0x00bebc20
 800364c:	017d7840 	.word	0x017d7840

08003650 <__NVIC_SetPriorityGrouping>:
{
 8003650:	b480      	push	{r7}
 8003652:	b085      	sub	sp, #20
 8003654:	af00      	add	r7, sp, #0
 8003656:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	f003 0307 	and.w	r3, r3, #7
 800365e:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003660:	4b0b      	ldr	r3, [pc, #44]	; (8003690 <__NVIC_SetPriorityGrouping+0x40>)
 8003662:	68db      	ldr	r3, [r3, #12]
 8003664:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003666:	68ba      	ldr	r2, [r7, #8]
 8003668:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800366c:	4013      	ands	r3, r2
 800366e:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003674:	68bb      	ldr	r3, [r7, #8]
 8003676:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8003678:	4b06      	ldr	r3, [pc, #24]	; (8003694 <__NVIC_SetPriorityGrouping+0x44>)
 800367a:	4313      	orrs	r3, r2
 800367c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800367e:	4a04      	ldr	r2, [pc, #16]	; (8003690 <__NVIC_SetPriorityGrouping+0x40>)
 8003680:	68bb      	ldr	r3, [r7, #8]
 8003682:	60d3      	str	r3, [r2, #12]
}
 8003684:	bf00      	nop
 8003686:	3714      	adds	r7, #20
 8003688:	46bd      	mov	sp, r7
 800368a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800368e:	4770      	bx	lr
 8003690:	e000ed00 	.word	0xe000ed00
 8003694:	05fa0000 	.word	0x05fa0000

08003698 <__NVIC_GetPriorityGrouping>:
{
 8003698:	b480      	push	{r7}
 800369a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800369c:	4b04      	ldr	r3, [pc, #16]	; (80036b0 <__NVIC_GetPriorityGrouping+0x18>)
 800369e:	68db      	ldr	r3, [r3, #12]
 80036a0:	0a1b      	lsrs	r3, r3, #8
 80036a2:	f003 0307 	and.w	r3, r3, #7
}
 80036a6:	4618      	mov	r0, r3
 80036a8:	46bd      	mov	sp, r7
 80036aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ae:	4770      	bx	lr
 80036b0:	e000ed00 	.word	0xe000ed00

080036b4 <__NVIC_EnableIRQ>:
{
 80036b4:	b480      	push	{r7}
 80036b6:	b083      	sub	sp, #12
 80036b8:	af00      	add	r7, sp, #0
 80036ba:	4603      	mov	r3, r0
 80036bc:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 80036be:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	db0b      	blt.n	80036de <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80036c6:	88fb      	ldrh	r3, [r7, #6]
 80036c8:	f003 021f 	and.w	r2, r3, #31
 80036cc:	4907      	ldr	r1, [pc, #28]	; (80036ec <__NVIC_EnableIRQ+0x38>)
 80036ce:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80036d2:	095b      	lsrs	r3, r3, #5
 80036d4:	2001      	movs	r0, #1
 80036d6:	fa00 f202 	lsl.w	r2, r0, r2
 80036da:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80036de:	bf00      	nop
 80036e0:	370c      	adds	r7, #12
 80036e2:	46bd      	mov	sp, r7
 80036e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e8:	4770      	bx	lr
 80036ea:	bf00      	nop
 80036ec:	e000e100 	.word	0xe000e100

080036f0 <__NVIC_DisableIRQ>:
{
 80036f0:	b480      	push	{r7}
 80036f2:	b083      	sub	sp, #12
 80036f4:	af00      	add	r7, sp, #0
 80036f6:	4603      	mov	r3, r0
 80036f8:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 80036fa:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80036fe:	2b00      	cmp	r3, #0
 8003700:	db12      	blt.n	8003728 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003702:	88fb      	ldrh	r3, [r7, #6]
 8003704:	f003 021f 	and.w	r2, r3, #31
 8003708:	490a      	ldr	r1, [pc, #40]	; (8003734 <__NVIC_DisableIRQ+0x44>)
 800370a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800370e:	095b      	lsrs	r3, r3, #5
 8003710:	2001      	movs	r0, #1
 8003712:	fa00 f202 	lsl.w	r2, r0, r2
 8003716:	3320      	adds	r3, #32
 8003718:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800371c:	f3bf 8f4f 	dsb	sy
}
 8003720:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003722:	f3bf 8f6f 	isb	sy
}
 8003726:	bf00      	nop
}
 8003728:	bf00      	nop
 800372a:	370c      	adds	r7, #12
 800372c:	46bd      	mov	sp, r7
 800372e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003732:	4770      	bx	lr
 8003734:	e000e100 	.word	0xe000e100

08003738 <__NVIC_ClearPendingIRQ>:
{
 8003738:	b480      	push	{r7}
 800373a:	b083      	sub	sp, #12
 800373c:	af00      	add	r7, sp, #0
 800373e:	4603      	mov	r3, r0
 8003740:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003742:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003746:	2b00      	cmp	r3, #0
 8003748:	db0c      	blt.n	8003764 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800374a:	88fb      	ldrh	r3, [r7, #6]
 800374c:	f003 021f 	and.w	r2, r3, #31
 8003750:	4907      	ldr	r1, [pc, #28]	; (8003770 <__NVIC_ClearPendingIRQ+0x38>)
 8003752:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003756:	095b      	lsrs	r3, r3, #5
 8003758:	2001      	movs	r0, #1
 800375a:	fa00 f202 	lsl.w	r2, r0, r2
 800375e:	3360      	adds	r3, #96	; 0x60
 8003760:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003764:	bf00      	nop
 8003766:	370c      	adds	r7, #12
 8003768:	46bd      	mov	sp, r7
 800376a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800376e:	4770      	bx	lr
 8003770:	e000e100 	.word	0xe000e100

08003774 <__NVIC_SetPriority>:
{
 8003774:	b480      	push	{r7}
 8003776:	b083      	sub	sp, #12
 8003778:	af00      	add	r7, sp, #0
 800377a:	4603      	mov	r3, r0
 800377c:	6039      	str	r1, [r7, #0]
 800377e:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003780:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003784:	2b00      	cmp	r3, #0
 8003786:	db0a      	blt.n	800379e <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003788:	683b      	ldr	r3, [r7, #0]
 800378a:	b2da      	uxtb	r2, r3
 800378c:	490c      	ldr	r1, [pc, #48]	; (80037c0 <__NVIC_SetPriority+0x4c>)
 800378e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003792:	0112      	lsls	r2, r2, #4
 8003794:	b2d2      	uxtb	r2, r2
 8003796:	440b      	add	r3, r1
 8003798:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800379c:	e00a      	b.n	80037b4 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800379e:	683b      	ldr	r3, [r7, #0]
 80037a0:	b2da      	uxtb	r2, r3
 80037a2:	4908      	ldr	r1, [pc, #32]	; (80037c4 <__NVIC_SetPriority+0x50>)
 80037a4:	88fb      	ldrh	r3, [r7, #6]
 80037a6:	f003 030f 	and.w	r3, r3, #15
 80037aa:	3b04      	subs	r3, #4
 80037ac:	0112      	lsls	r2, r2, #4
 80037ae:	b2d2      	uxtb	r2, r2
 80037b0:	440b      	add	r3, r1
 80037b2:	761a      	strb	r2, [r3, #24]
}
 80037b4:	bf00      	nop
 80037b6:	370c      	adds	r7, #12
 80037b8:	46bd      	mov	sp, r7
 80037ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037be:	4770      	bx	lr
 80037c0:	e000e100 	.word	0xe000e100
 80037c4:	e000ed00 	.word	0xe000ed00

080037c8 <NVIC_EncodePriority>:
{
 80037c8:	b480      	push	{r7}
 80037ca:	b089      	sub	sp, #36	; 0x24
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	60f8      	str	r0, [r7, #12]
 80037d0:	60b9      	str	r1, [r7, #8]
 80037d2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	f003 0307 	and.w	r3, r3, #7
 80037da:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80037dc:	69fb      	ldr	r3, [r7, #28]
 80037de:	f1c3 0307 	rsb	r3, r3, #7
 80037e2:	2b04      	cmp	r3, #4
 80037e4:	bf28      	it	cs
 80037e6:	2304      	movcs	r3, #4
 80037e8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80037ea:	69fb      	ldr	r3, [r7, #28]
 80037ec:	3304      	adds	r3, #4
 80037ee:	2b06      	cmp	r3, #6
 80037f0:	d902      	bls.n	80037f8 <NVIC_EncodePriority+0x30>
 80037f2:	69fb      	ldr	r3, [r7, #28]
 80037f4:	3b03      	subs	r3, #3
 80037f6:	e000      	b.n	80037fa <NVIC_EncodePriority+0x32>
 80037f8:	2300      	movs	r3, #0
 80037fa:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80037fc:	f04f 32ff 	mov.w	r2, #4294967295
 8003800:	69bb      	ldr	r3, [r7, #24]
 8003802:	fa02 f303 	lsl.w	r3, r2, r3
 8003806:	43da      	mvns	r2, r3
 8003808:	68bb      	ldr	r3, [r7, #8]
 800380a:	401a      	ands	r2, r3
 800380c:	697b      	ldr	r3, [r7, #20]
 800380e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003810:	f04f 31ff 	mov.w	r1, #4294967295
 8003814:	697b      	ldr	r3, [r7, #20]
 8003816:	fa01 f303 	lsl.w	r3, r1, r3
 800381a:	43d9      	mvns	r1, r3
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003820:	4313      	orrs	r3, r2
}
 8003822:	4618      	mov	r0, r3
 8003824:	3724      	adds	r7, #36	; 0x24
 8003826:	46bd      	mov	sp, r7
 8003828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800382c:	4770      	bx	lr
	...

08003830 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003830:	b580      	push	{r7, lr}
 8003832:	b082      	sub	sp, #8
 8003834:	af00      	add	r7, sp, #0
 8003836:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	3b01      	subs	r3, #1
 800383c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003840:	d301      	bcc.n	8003846 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003842:	2301      	movs	r3, #1
 8003844:	e00f      	b.n	8003866 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003846:	4a0a      	ldr	r2, [pc, #40]	; (8003870 <SysTick_Config+0x40>)
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	3b01      	subs	r3, #1
 800384c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800384e:	210f      	movs	r1, #15
 8003850:	f04f 30ff 	mov.w	r0, #4294967295
 8003854:	f7ff ff8e 	bl	8003774 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003858:	4b05      	ldr	r3, [pc, #20]	; (8003870 <SysTick_Config+0x40>)
 800385a:	2200      	movs	r2, #0
 800385c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800385e:	4b04      	ldr	r3, [pc, #16]	; (8003870 <SysTick_Config+0x40>)
 8003860:	2207      	movs	r2, #7
 8003862:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003864:	2300      	movs	r3, #0
}
 8003866:	4618      	mov	r0, r3
 8003868:	3708      	adds	r7, #8
 800386a:	46bd      	mov	sp, r7
 800386c:	bd80      	pop	{r7, pc}
 800386e:	bf00      	nop
 8003870:	e000e010 	.word	0xe000e010

08003874 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003874:	b580      	push	{r7, lr}
 8003876:	b082      	sub	sp, #8
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800387c:	6878      	ldr	r0, [r7, #4]
 800387e:	f7ff fee7 	bl	8003650 <__NVIC_SetPriorityGrouping>
}
 8003882:	bf00      	nop
 8003884:	3708      	adds	r7, #8
 8003886:	46bd      	mov	sp, r7
 8003888:	bd80      	pop	{r7, pc}

0800388a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800388a:	b580      	push	{r7, lr}
 800388c:	b086      	sub	sp, #24
 800388e:	af00      	add	r7, sp, #0
 8003890:	4603      	mov	r3, r0
 8003892:	60b9      	str	r1, [r7, #8]
 8003894:	607a      	str	r2, [r7, #4]
 8003896:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8003898:	f7ff fefe 	bl	8003698 <__NVIC_GetPriorityGrouping>
 800389c:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800389e:	687a      	ldr	r2, [r7, #4]
 80038a0:	68b9      	ldr	r1, [r7, #8]
 80038a2:	6978      	ldr	r0, [r7, #20]
 80038a4:	f7ff ff90 	bl	80037c8 <NVIC_EncodePriority>
 80038a8:	4602      	mov	r2, r0
 80038aa:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80038ae:	4611      	mov	r1, r2
 80038b0:	4618      	mov	r0, r3
 80038b2:	f7ff ff5f 	bl	8003774 <__NVIC_SetPriority>
}
 80038b6:	bf00      	nop
 80038b8:	3718      	adds	r7, #24
 80038ba:	46bd      	mov	sp, r7
 80038bc:	bd80      	pop	{r7, pc}

080038be <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80038be:	b580      	push	{r7, lr}
 80038c0:	b082      	sub	sp, #8
 80038c2:	af00      	add	r7, sp, #0
 80038c4:	4603      	mov	r3, r0
 80038c6:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80038c8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80038cc:	4618      	mov	r0, r3
 80038ce:	f7ff fef1 	bl	80036b4 <__NVIC_EnableIRQ>
}
 80038d2:	bf00      	nop
 80038d4:	3708      	adds	r7, #8
 80038d6:	46bd      	mov	sp, r7
 80038d8:	bd80      	pop	{r7, pc}

080038da <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80038da:	b580      	push	{r7, lr}
 80038dc:	b082      	sub	sp, #8
 80038de:	af00      	add	r7, sp, #0
 80038e0:	4603      	mov	r3, r0
 80038e2:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80038e4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80038e8:	4618      	mov	r0, r3
 80038ea:	f7ff ff01 	bl	80036f0 <__NVIC_DisableIRQ>
}
 80038ee:	bf00      	nop
 80038f0:	3708      	adds	r7, #8
 80038f2:	46bd      	mov	sp, r7
 80038f4:	bd80      	pop	{r7, pc}

080038f6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80038f6:	b580      	push	{r7, lr}
 80038f8:	b082      	sub	sp, #8
 80038fa:	af00      	add	r7, sp, #0
 80038fc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80038fe:	6878      	ldr	r0, [r7, #4]
 8003900:	f7ff ff96 	bl	8003830 <SysTick_Config>
 8003904:	4603      	mov	r3, r0
}
 8003906:	4618      	mov	r0, r3
 8003908:	3708      	adds	r7, #8
 800390a:	46bd      	mov	sp, r7
 800390c:	bd80      	pop	{r7, pc}
	...

08003910 <HAL_MPU_Disable>:
/**
  * @brief  Disables the MPU
  * @retval None
  */
void HAL_MPU_Disable(void)
{
 8003910:	b480      	push	{r7}
 8003912:	af00      	add	r7, sp, #0
  __ASM volatile ("dmb 0xF":::"memory");
 8003914:	f3bf 8f5f 	dmb	sy
}
 8003918:	bf00      	nop
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 800391a:	4b07      	ldr	r3, [pc, #28]	; (8003938 <HAL_MPU_Disable+0x28>)
 800391c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800391e:	4a06      	ldr	r2, [pc, #24]	; (8003938 <HAL_MPU_Disable+0x28>)
 8003920:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003924:	6253      	str	r3, [r2, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8003926:	4b05      	ldr	r3, [pc, #20]	; (800393c <HAL_MPU_Disable+0x2c>)
 8003928:	2200      	movs	r2, #0
 800392a:	605a      	str	r2, [r3, #4]
}
 800392c:	bf00      	nop
 800392e:	46bd      	mov	sp, r7
 8003930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003934:	4770      	bx	lr
 8003936:	bf00      	nop
 8003938:	e000ed00 	.word	0xe000ed00
 800393c:	e000ed90 	.word	0xe000ed90

08003940 <HAL_MPU_Enable>:
  *            @arg MPU_PRIVILEGED_DEFAULT
  *            @arg MPU_HFNMI_PRIVDEF
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
 8003940:	b480      	push	{r7}
 8003942:	b083      	sub	sp, #12
 8003944:	af00      	add	r7, sp, #0
 8003946:	6078      	str	r0, [r7, #4]
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8003948:	4a0b      	ldr	r2, [pc, #44]	; (8003978 <HAL_MPU_Enable+0x38>)
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	f043 0301 	orr.w	r3, r3, #1
 8003950:	6053      	str	r3, [r2, #4]

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8003952:	4b0a      	ldr	r3, [pc, #40]	; (800397c <HAL_MPU_Enable+0x3c>)
 8003954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003956:	4a09      	ldr	r2, [pc, #36]	; (800397c <HAL_MPU_Enable+0x3c>)
 8003958:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800395c:	6253      	str	r3, [r2, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 800395e:	f3bf 8f4f 	dsb	sy
}
 8003962:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003964:	f3bf 8f6f 	isb	sy
}
 8003968:	bf00      	nop

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 800396a:	bf00      	nop
 800396c:	370c      	adds	r7, #12
 800396e:	46bd      	mov	sp, r7
 8003970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003974:	4770      	bx	lr
 8003976:	bf00      	nop
 8003978:	e000ed90 	.word	0xe000ed90
 800397c:	e000ed00 	.word	0xe000ed00

08003980 <HAL_MPU_ConfigRegion>:
  * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
  *                  the initialization and configuration information.
  * @retval None
  */
void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
{
 8003980:	b480      	push	{r7}
 8003982:	b083      	sub	sp, #12
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	785a      	ldrb	r2, [r3, #1]
 800398c:	4b1d      	ldr	r3, [pc, #116]	; (8003a04 <HAL_MPU_ConfigRegion+0x84>)
 800398e:	609a      	str	r2, [r3, #8]

  if ((MPU_Init->Enable) != 0UL)
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	781b      	ldrb	r3, [r3, #0]
 8003994:	2b00      	cmp	r3, #0
 8003996:	d029      	beq.n	80039ec <HAL_MPU_ConfigRegion+0x6c>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8003998:	4a1a      	ldr	r2, [pc, #104]	; (8003a04 <HAL_MPU_ConfigRegion+0x84>)
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	685b      	ldr	r3, [r3, #4]
 800399e:	60d3      	str	r3, [r2, #12]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	7b1b      	ldrb	r3, [r3, #12]
 80039a4:	071a      	lsls	r2, r3, #28
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	7adb      	ldrb	r3, [r3, #11]
 80039aa:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80039ac:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	7a9b      	ldrb	r3, [r3, #10]
 80039b2:	04db      	lsls	r3, r3, #19
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80039b4:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	7b5b      	ldrb	r3, [r3, #13]
 80039ba:	049b      	lsls	r3, r3, #18
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 80039bc:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	7b9b      	ldrb	r3, [r3, #14]
 80039c2:	045b      	lsls	r3, r3, #17
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 80039c4:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	7bdb      	ldrb	r3, [r3, #15]
 80039ca:	041b      	lsls	r3, r3, #16
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 80039cc:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	7a5b      	ldrb	r3, [r3, #9]
 80039d2:	021b      	lsls	r3, r3, #8
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 80039d4:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	7a1b      	ldrb	r3, [r3, #8]
 80039da:	005b      	lsls	r3, r3, #1
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 80039dc:	4313      	orrs	r3, r2
                ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 80039de:	687a      	ldr	r2, [r7, #4]
 80039e0:	7812      	ldrb	r2, [r2, #0]
 80039e2:	4611      	mov	r1, r2
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80039e4:	4a07      	ldr	r2, [pc, #28]	; (8003a04 <HAL_MPU_ConfigRegion+0x84>)
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80039e6:	430b      	orrs	r3, r1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80039e8:	6113      	str	r3, [r2, #16]
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 80039ea:	e005      	b.n	80039f8 <HAL_MPU_ConfigRegion+0x78>
    MPU->RBAR = 0x00;
 80039ec:	4b05      	ldr	r3, [pc, #20]	; (8003a04 <HAL_MPU_ConfigRegion+0x84>)
 80039ee:	2200      	movs	r2, #0
 80039f0:	60da      	str	r2, [r3, #12]
    MPU->RASR = 0x00;
 80039f2:	4b04      	ldr	r3, [pc, #16]	; (8003a04 <HAL_MPU_ConfigRegion+0x84>)
 80039f4:	2200      	movs	r2, #0
 80039f6:	611a      	str	r2, [r3, #16]
}
 80039f8:	bf00      	nop
 80039fa:	370c      	adds	r7, #12
 80039fc:	46bd      	mov	sp, r7
 80039fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a02:	4770      	bx	lr
 8003a04:	e000ed90 	.word	0xe000ed90

08003a08 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003a08:	b580      	push	{r7, lr}
 8003a0a:	b082      	sub	sp, #8
 8003a0c:	af00      	add	r7, sp, #0
 8003a0e:	4603      	mov	r3, r0
 8003a10:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8003a12:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003a16:	4618      	mov	r0, r3
 8003a18:	f7ff fe8e 	bl	8003738 <__NVIC_ClearPendingIRQ>
}
 8003a1c:	bf00      	nop
 8003a1e:	3708      	adds	r7, #8
 8003a20:	46bd      	mov	sp, r7
 8003a22:	bd80      	pop	{r7, pc}

08003a24 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003a24:	b580      	push	{r7, lr}
 8003a26:	b082      	sub	sp, #8
 8003a28:	af00      	add	r7, sp, #0
 8003a2a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d101      	bne.n	8003a36 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003a32:	2301      	movs	r3, #1
 8003a34:	e054      	b.n	8003ae0 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	7f5b      	ldrb	r3, [r3, #29]
 8003a3a:	b2db      	uxtb	r3, r3
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d105      	bne.n	8003a4c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	2200      	movs	r2, #0
 8003a44:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003a46:	6878      	ldr	r0, [r7, #4]
 8003a48:	f7fc fdb2 	bl	80005b0 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	2202      	movs	r2, #2
 8003a50:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	791b      	ldrb	r3, [r3, #4]
 8003a56:	2b00      	cmp	r3, #0
 8003a58:	d10c      	bne.n	8003a74 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	4a22      	ldr	r2, [pc, #136]	; (8003ae8 <HAL_CRC_Init+0xc4>)
 8003a60:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	689a      	ldr	r2, [r3, #8]
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	f022 0218 	bic.w	r2, r2, #24
 8003a70:	609a      	str	r2, [r3, #8]
 8003a72:	e00c      	b.n	8003a8e <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	6899      	ldr	r1, [r3, #8]
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	68db      	ldr	r3, [r3, #12]
 8003a7c:	461a      	mov	r2, r3
 8003a7e:	6878      	ldr	r0, [r7, #4]
 8003a80:	f000 f834 	bl	8003aec <HAL_CRCEx_Polynomial_Set>
 8003a84:	4603      	mov	r3, r0
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	d001      	beq.n	8003a8e <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 8003a8a:	2301      	movs	r3, #1
 8003a8c:	e028      	b.n	8003ae0 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	795b      	ldrb	r3, [r3, #5]
 8003a92:	2b00      	cmp	r3, #0
 8003a94:	d105      	bne.n	8003aa2 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	f04f 32ff 	mov.w	r2, #4294967295
 8003a9e:	611a      	str	r2, [r3, #16]
 8003aa0:	e004      	b.n	8003aac <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	687a      	ldr	r2, [r7, #4]
 8003aa8:	6912      	ldr	r2, [r2, #16]
 8003aaa:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	689b      	ldr	r3, [r3, #8]
 8003ab2:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	695a      	ldr	r2, [r3, #20]
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	430a      	orrs	r2, r1
 8003ac0:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	689b      	ldr	r3, [r3, #8]
 8003ac8:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	699a      	ldr	r2, [r3, #24]
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	430a      	orrs	r2, r1
 8003ad6:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	2201      	movs	r2, #1
 8003adc:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8003ade:	2300      	movs	r3, #0
}
 8003ae0:	4618      	mov	r0, r3
 8003ae2:	3708      	adds	r7, #8
 8003ae4:	46bd      	mov	sp, r7
 8003ae6:	bd80      	pop	{r7, pc}
 8003ae8:	04c11db7 	.word	0x04c11db7

08003aec <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8003aec:	b480      	push	{r7}
 8003aee:	b087      	sub	sp, #28
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	60f8      	str	r0, [r7, #12]
 8003af4:	60b9      	str	r1, [r7, #8]
 8003af6:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003af8:	2300      	movs	r3, #0
 8003afa:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003afc:	231f      	movs	r3, #31
 8003afe:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003b00:	68bb      	ldr	r3, [r7, #8]
 8003b02:	f003 0301 	and.w	r3, r3, #1
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d102      	bne.n	8003b10 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 8003b0a:	2301      	movs	r3, #1
 8003b0c:	75fb      	strb	r3, [r7, #23]
 8003b0e:	e063      	b.n	8003bd8 <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003b10:	bf00      	nop
 8003b12:	693b      	ldr	r3, [r7, #16]
 8003b14:	1e5a      	subs	r2, r3, #1
 8003b16:	613a      	str	r2, [r7, #16]
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	d009      	beq.n	8003b30 <HAL_CRCEx_Polynomial_Set+0x44>
 8003b1c:	693b      	ldr	r3, [r7, #16]
 8003b1e:	f003 031f 	and.w	r3, r3, #31
 8003b22:	68ba      	ldr	r2, [r7, #8]
 8003b24:	fa22 f303 	lsr.w	r3, r2, r3
 8003b28:	f003 0301 	and.w	r3, r3, #1
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d0f0      	beq.n	8003b12 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	2b18      	cmp	r3, #24
 8003b34:	d846      	bhi.n	8003bc4 <HAL_CRCEx_Polynomial_Set+0xd8>
 8003b36:	a201      	add	r2, pc, #4	; (adr r2, 8003b3c <HAL_CRCEx_Polynomial_Set+0x50>)
 8003b38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b3c:	08003bcb 	.word	0x08003bcb
 8003b40:	08003bc5 	.word	0x08003bc5
 8003b44:	08003bc5 	.word	0x08003bc5
 8003b48:	08003bc5 	.word	0x08003bc5
 8003b4c:	08003bc5 	.word	0x08003bc5
 8003b50:	08003bc5 	.word	0x08003bc5
 8003b54:	08003bc5 	.word	0x08003bc5
 8003b58:	08003bc5 	.word	0x08003bc5
 8003b5c:	08003bb9 	.word	0x08003bb9
 8003b60:	08003bc5 	.word	0x08003bc5
 8003b64:	08003bc5 	.word	0x08003bc5
 8003b68:	08003bc5 	.word	0x08003bc5
 8003b6c:	08003bc5 	.word	0x08003bc5
 8003b70:	08003bc5 	.word	0x08003bc5
 8003b74:	08003bc5 	.word	0x08003bc5
 8003b78:	08003bc5 	.word	0x08003bc5
 8003b7c:	08003bad 	.word	0x08003bad
 8003b80:	08003bc5 	.word	0x08003bc5
 8003b84:	08003bc5 	.word	0x08003bc5
 8003b88:	08003bc5 	.word	0x08003bc5
 8003b8c:	08003bc5 	.word	0x08003bc5
 8003b90:	08003bc5 	.word	0x08003bc5
 8003b94:	08003bc5 	.word	0x08003bc5
 8003b98:	08003bc5 	.word	0x08003bc5
 8003b9c:	08003ba1 	.word	0x08003ba1
    {
          
      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8003ba0:	693b      	ldr	r3, [r7, #16]
 8003ba2:	2b06      	cmp	r3, #6
 8003ba4:	d913      	bls.n	8003bce <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 8003ba6:	2301      	movs	r3, #1
 8003ba8:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003baa:	e010      	b.n	8003bce <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8003bac:	693b      	ldr	r3, [r7, #16]
 8003bae:	2b07      	cmp	r3, #7
 8003bb0:	d90f      	bls.n	8003bd2 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8003bb2:	2301      	movs	r3, #1
 8003bb4:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003bb6:	e00c      	b.n	8003bd2 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 8003bb8:	693b      	ldr	r3, [r7, #16]
 8003bba:	2b0f      	cmp	r3, #15
 8003bbc:	d90b      	bls.n	8003bd6 <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8003bbe:	2301      	movs	r3, #1
 8003bc0:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003bc2:	e008      	b.n	8003bd6 <HAL_CRCEx_Polynomial_Set+0xea>
 
      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8003bc4:	2301      	movs	r3, #1
 8003bc6:	75fb      	strb	r3, [r7, #23]
        break;
 8003bc8:	e006      	b.n	8003bd8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8003bca:	bf00      	nop
 8003bcc:	e004      	b.n	8003bd8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8003bce:	bf00      	nop
 8003bd0:	e002      	b.n	8003bd8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8003bd2:	bf00      	nop
 8003bd4:	e000      	b.n	8003bd8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8003bd6:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 8003bd8:	7dfb      	ldrb	r3, [r7, #23]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d10d      	bne.n	8003bfa <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	68ba      	ldr	r2, [r7, #8]
 8003be4:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	689b      	ldr	r3, [r3, #8]
 8003bec:	f023 0118 	bic.w	r1, r3, #24
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	687a      	ldr	r2, [r7, #4]
 8003bf6:	430a      	orrs	r2, r1
 8003bf8:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 8003bfa:	7dfb      	ldrb	r3, [r7, #23]
}
 8003bfc:	4618      	mov	r0, r3
 8003bfe:	371c      	adds	r7, #28
 8003c00:	46bd      	mov	sp, r7
 8003c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c06:	4770      	bx	lr

08003c08 <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	b086      	sub	sp, #24
 8003c0c:	af00      	add	r7, sp, #0
 8003c0e:	6078      	str	r0, [r7, #4]
  uint32_t registerValue;
  uint32_t tickstart = HAL_GetTick();
 8003c10:	f7fe fd42 	bl	8002698 <HAL_GetTick>
 8003c14:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d101      	bne.n	8003c20 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 8003c1c:	2301      	movs	r3, #1
 8003c1e:	e316      	b.n	800424e <HAL_DMA_Init+0x646>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	4a66      	ldr	r2, [pc, #408]	; (8003dc0 <HAL_DMA_Init+0x1b8>)
 8003c26:	4293      	cmp	r3, r2
 8003c28:	d04a      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	4a65      	ldr	r2, [pc, #404]	; (8003dc4 <HAL_DMA_Init+0x1bc>)
 8003c30:	4293      	cmp	r3, r2
 8003c32:	d045      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	4a63      	ldr	r2, [pc, #396]	; (8003dc8 <HAL_DMA_Init+0x1c0>)
 8003c3a:	4293      	cmp	r3, r2
 8003c3c:	d040      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	4a62      	ldr	r2, [pc, #392]	; (8003dcc <HAL_DMA_Init+0x1c4>)
 8003c44:	4293      	cmp	r3, r2
 8003c46:	d03b      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	4a60      	ldr	r2, [pc, #384]	; (8003dd0 <HAL_DMA_Init+0x1c8>)
 8003c4e:	4293      	cmp	r3, r2
 8003c50:	d036      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	4a5f      	ldr	r2, [pc, #380]	; (8003dd4 <HAL_DMA_Init+0x1cc>)
 8003c58:	4293      	cmp	r3, r2
 8003c5a:	d031      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	4a5d      	ldr	r2, [pc, #372]	; (8003dd8 <HAL_DMA_Init+0x1d0>)
 8003c62:	4293      	cmp	r3, r2
 8003c64:	d02c      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	4a5c      	ldr	r2, [pc, #368]	; (8003ddc <HAL_DMA_Init+0x1d4>)
 8003c6c:	4293      	cmp	r3, r2
 8003c6e:	d027      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	4a5a      	ldr	r2, [pc, #360]	; (8003de0 <HAL_DMA_Init+0x1d8>)
 8003c76:	4293      	cmp	r3, r2
 8003c78:	d022      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	4a59      	ldr	r2, [pc, #356]	; (8003de4 <HAL_DMA_Init+0x1dc>)
 8003c80:	4293      	cmp	r3, r2
 8003c82:	d01d      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	4a57      	ldr	r2, [pc, #348]	; (8003de8 <HAL_DMA_Init+0x1e0>)
 8003c8a:	4293      	cmp	r3, r2
 8003c8c:	d018      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	4a56      	ldr	r2, [pc, #344]	; (8003dec <HAL_DMA_Init+0x1e4>)
 8003c94:	4293      	cmp	r3, r2
 8003c96:	d013      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	4a54      	ldr	r2, [pc, #336]	; (8003df0 <HAL_DMA_Init+0x1e8>)
 8003c9e:	4293      	cmp	r3, r2
 8003ca0:	d00e      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	4a53      	ldr	r2, [pc, #332]	; (8003df4 <HAL_DMA_Init+0x1ec>)
 8003ca8:	4293      	cmp	r3, r2
 8003caa:	d009      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	4a51      	ldr	r2, [pc, #324]	; (8003df8 <HAL_DMA_Init+0x1f0>)
 8003cb2:	4293      	cmp	r3, r2
 8003cb4:	d004      	beq.n	8003cc0 <HAL_DMA_Init+0xb8>
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	4a50      	ldr	r2, [pc, #320]	; (8003dfc <HAL_DMA_Init+0x1f4>)
 8003cbc:	4293      	cmp	r3, r2
 8003cbe:	d101      	bne.n	8003cc4 <HAL_DMA_Init+0xbc>
 8003cc0:	2301      	movs	r3, #1
 8003cc2:	e000      	b.n	8003cc6 <HAL_DMA_Init+0xbe>
 8003cc4:	2300      	movs	r3, #0
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	f000 813b 	beq.w	8003f42 <HAL_DMA_Init+0x33a>
      assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
      assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	2202      	movs	r2, #2
 8003cd0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	4a37      	ldr	r2, [pc, #220]	; (8003dc0 <HAL_DMA_Init+0x1b8>)
 8003ce2:	4293      	cmp	r3, r2
 8003ce4:	d04a      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	4a36      	ldr	r2, [pc, #216]	; (8003dc4 <HAL_DMA_Init+0x1bc>)
 8003cec:	4293      	cmp	r3, r2
 8003cee:	d045      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	4a34      	ldr	r2, [pc, #208]	; (8003dc8 <HAL_DMA_Init+0x1c0>)
 8003cf6:	4293      	cmp	r3, r2
 8003cf8:	d040      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	4a33      	ldr	r2, [pc, #204]	; (8003dcc <HAL_DMA_Init+0x1c4>)
 8003d00:	4293      	cmp	r3, r2
 8003d02:	d03b      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	4a31      	ldr	r2, [pc, #196]	; (8003dd0 <HAL_DMA_Init+0x1c8>)
 8003d0a:	4293      	cmp	r3, r2
 8003d0c:	d036      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	4a30      	ldr	r2, [pc, #192]	; (8003dd4 <HAL_DMA_Init+0x1cc>)
 8003d14:	4293      	cmp	r3, r2
 8003d16:	d031      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	4a2e      	ldr	r2, [pc, #184]	; (8003dd8 <HAL_DMA_Init+0x1d0>)
 8003d1e:	4293      	cmp	r3, r2
 8003d20:	d02c      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	4a2d      	ldr	r2, [pc, #180]	; (8003ddc <HAL_DMA_Init+0x1d4>)
 8003d28:	4293      	cmp	r3, r2
 8003d2a:	d027      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	4a2b      	ldr	r2, [pc, #172]	; (8003de0 <HAL_DMA_Init+0x1d8>)
 8003d32:	4293      	cmp	r3, r2
 8003d34:	d022      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	4a2a      	ldr	r2, [pc, #168]	; (8003de4 <HAL_DMA_Init+0x1dc>)
 8003d3c:	4293      	cmp	r3, r2
 8003d3e:	d01d      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	4a28      	ldr	r2, [pc, #160]	; (8003de8 <HAL_DMA_Init+0x1e0>)
 8003d46:	4293      	cmp	r3, r2
 8003d48:	d018      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	681b      	ldr	r3, [r3, #0]
 8003d4e:	4a27      	ldr	r2, [pc, #156]	; (8003dec <HAL_DMA_Init+0x1e4>)
 8003d50:	4293      	cmp	r3, r2
 8003d52:	d013      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	4a25      	ldr	r2, [pc, #148]	; (8003df0 <HAL_DMA_Init+0x1e8>)
 8003d5a:	4293      	cmp	r3, r2
 8003d5c:	d00e      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	4a24      	ldr	r2, [pc, #144]	; (8003df4 <HAL_DMA_Init+0x1ec>)
 8003d64:	4293      	cmp	r3, r2
 8003d66:	d009      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	4a22      	ldr	r2, [pc, #136]	; (8003df8 <HAL_DMA_Init+0x1f0>)
 8003d6e:	4293      	cmp	r3, r2
 8003d70:	d004      	beq.n	8003d7c <HAL_DMA_Init+0x174>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	4a21      	ldr	r2, [pc, #132]	; (8003dfc <HAL_DMA_Init+0x1f4>)
 8003d78:	4293      	cmp	r3, r2
 8003d7a:	d108      	bne.n	8003d8e <HAL_DMA_Init+0x186>
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	681a      	ldr	r2, [r3, #0]
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	f022 0201 	bic.w	r2, r2, #1
 8003d8a:	601a      	str	r2, [r3, #0]
 8003d8c:	e007      	b.n	8003d9e <HAL_DMA_Init+0x196>
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	681b      	ldr	r3, [r3, #0]
 8003d92:	681a      	ldr	r2, [r3, #0]
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	f022 0201 	bic.w	r2, r2, #1
 8003d9c:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003d9e:	e02f      	b.n	8003e00 <HAL_DMA_Init+0x1f8>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003da0:	f7fe fc7a 	bl	8002698 <HAL_GetTick>
 8003da4:	4602      	mov	r2, r0
 8003da6:	693b      	ldr	r3, [r7, #16]
 8003da8:	1ad3      	subs	r3, r2, r3
 8003daa:	2b05      	cmp	r3, #5
 8003dac:	d928      	bls.n	8003e00 <HAL_DMA_Init+0x1f8>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	2220      	movs	r2, #32
 8003db2:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	2203      	movs	r2, #3
 8003db8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        return HAL_ERROR;
 8003dbc:	2301      	movs	r3, #1
 8003dbe:	e246      	b.n	800424e <HAL_DMA_Init+0x646>
 8003dc0:	40020010 	.word	0x40020010
 8003dc4:	40020028 	.word	0x40020028
 8003dc8:	40020040 	.word	0x40020040
 8003dcc:	40020058 	.word	0x40020058
 8003dd0:	40020070 	.word	0x40020070
 8003dd4:	40020088 	.word	0x40020088
 8003dd8:	400200a0 	.word	0x400200a0
 8003ddc:	400200b8 	.word	0x400200b8
 8003de0:	40020410 	.word	0x40020410
 8003de4:	40020428 	.word	0x40020428
 8003de8:	40020440 	.word	0x40020440
 8003dec:	40020458 	.word	0x40020458
 8003df0:	40020470 	.word	0x40020470
 8003df4:	40020488 	.word	0x40020488
 8003df8:	400204a0 	.word	0x400204a0
 8003dfc:	400204b8 	.word	0x400204b8
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	f003 0301 	and.w	r3, r3, #1
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d1c8      	bne.n	8003da0 <HAL_DMA_Init+0x198>
      }
    }

    /* Get the CR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->CR;
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	617b      	str	r3, [r7, #20]

    /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    registerValue &= ((uint32_t)~(DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003e16:	697a      	ldr	r2, [r7, #20]
 8003e18:	4b83      	ldr	r3, [pc, #524]	; (8004028 <HAL_DMA_Init+0x420>)
 8003e1a:	4013      	ands	r3, r2
 8003e1c:	617b      	str	r3, [r7, #20]
                        DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                        DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                        DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

    /* Prepare the DMA Stream configuration */
    registerValue |=  hdma->Init.Direction           |
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	689a      	ldr	r2, [r3, #8]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	68db      	ldr	r3, [r3, #12]
    registerValue |=  hdma->Init.Direction           |
 8003e26:	431a      	orrs	r2, r3
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	691b      	ldr	r3, [r3, #16]
 8003e2c:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	695b      	ldr	r3, [r3, #20]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003e32:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	699b      	ldr	r3, [r3, #24]
 8003e38:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	69db      	ldr	r3, [r3, #28]
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003e3e:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	6a1b      	ldr	r3, [r3, #32]
 8003e44:	4313      	orrs	r3, r2
    registerValue |=  hdma->Init.Direction           |
 8003e46:	697a      	ldr	r2, [r7, #20]
 8003e48:	4313      	orrs	r3, r2
 8003e4a:	617b      	str	r3, [r7, #20]

    /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e50:	2b04      	cmp	r3, #4
 8003e52:	d107      	bne.n	8003e64 <HAL_DMA_Init+0x25c>
    {
      /* Get memory burst and peripheral burst */
      registerValue |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e5c:	4313      	orrs	r3, r2
 8003e5e:	697a      	ldr	r2, [r7, #20]
 8003e60:	4313      	orrs	r3, r2
 8003e62:	617b      	str	r3, [r7, #20]
    }

    /* Work around for Errata 2.22: UART/USART- DMA transfer lock: DMA stream could be
                                    lock when transferring data to/from USART/UART */
#if (STM32H7_DEV_ID == 0x450UL)
    if((DBGMCU->IDCODE & 0xFFFF0000U) >= 0x20000000U)
 8003e64:	4b71      	ldr	r3, [pc, #452]	; (800402c <HAL_DMA_Init+0x424>)
 8003e66:	681a      	ldr	r2, [r3, #0]
 8003e68:	4b71      	ldr	r3, [pc, #452]	; (8004030 <HAL_DMA_Init+0x428>)
 8003e6a:	4013      	ands	r3, r2
 8003e6c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8003e70:	d328      	bcc.n	8003ec4 <HAL_DMA_Init+0x2bc>
    {
#endif /* STM32H7_DEV_ID == 0x450UL */
      if(IS_DMA_UART_USART_REQUEST(hdma->Init.Request) != 0U)
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	685b      	ldr	r3, [r3, #4]
 8003e76:	2b28      	cmp	r3, #40	; 0x28
 8003e78:	d903      	bls.n	8003e82 <HAL_DMA_Init+0x27a>
 8003e7a:	687b      	ldr	r3, [r7, #4]
 8003e7c:	685b      	ldr	r3, [r3, #4]
 8003e7e:	2b2e      	cmp	r3, #46	; 0x2e
 8003e80:	d917      	bls.n	8003eb2 <HAL_DMA_Init+0x2aa>
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	685b      	ldr	r3, [r3, #4]
 8003e86:	2b3e      	cmp	r3, #62	; 0x3e
 8003e88:	d903      	bls.n	8003e92 <HAL_DMA_Init+0x28a>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	685b      	ldr	r3, [r3, #4]
 8003e8e:	2b42      	cmp	r3, #66	; 0x42
 8003e90:	d90f      	bls.n	8003eb2 <HAL_DMA_Init+0x2aa>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	685b      	ldr	r3, [r3, #4]
 8003e96:	2b46      	cmp	r3, #70	; 0x46
 8003e98:	d903      	bls.n	8003ea2 <HAL_DMA_Init+0x29a>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	685b      	ldr	r3, [r3, #4]
 8003e9e:	2b48      	cmp	r3, #72	; 0x48
 8003ea0:	d907      	bls.n	8003eb2 <HAL_DMA_Init+0x2aa>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	685b      	ldr	r3, [r3, #4]
 8003ea6:	2b4e      	cmp	r3, #78	; 0x4e
 8003ea8:	d905      	bls.n	8003eb6 <HAL_DMA_Init+0x2ae>
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	685b      	ldr	r3, [r3, #4]
 8003eae:	2b52      	cmp	r3, #82	; 0x52
 8003eb0:	d801      	bhi.n	8003eb6 <HAL_DMA_Init+0x2ae>
 8003eb2:	2301      	movs	r3, #1
 8003eb4:	e000      	b.n	8003eb8 <HAL_DMA_Init+0x2b0>
 8003eb6:	2300      	movs	r3, #0
 8003eb8:	2b00      	cmp	r3, #0
 8003eba:	d003      	beq.n	8003ec4 <HAL_DMA_Init+0x2bc>
      {
        registerValue |= DMA_SxCR_TRBUFF;
 8003ebc:	697b      	ldr	r3, [r7, #20]
 8003ebe:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003ec2:	617b      	str	r3, [r7, #20]
#if (STM32H7_DEV_ID == 0x450UL)
    }
#endif /* STM32H7_DEV_ID == 0x450UL */

    /* Write to DMA Stream CR register */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR = registerValue;
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	697a      	ldr	r2, [r7, #20]
 8003eca:	601a      	str	r2, [r3, #0]

    /* Get the FCR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR;
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	695b      	ldr	r3, [r3, #20]
 8003ed2:	617b      	str	r3, [r7, #20]

    /* Clear Direct mode and FIFO threshold bits */
    registerValue &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003ed4:	697b      	ldr	r3, [r7, #20]
 8003ed6:	f023 0307 	bic.w	r3, r3, #7
 8003eda:	617b      	str	r3, [r7, #20]

    /* Prepare the DMA Stream FIFO configuration */
    registerValue |= hdma->Init.FIFOMode;
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ee0:	697a      	ldr	r2, [r7, #20]
 8003ee2:	4313      	orrs	r3, r2
 8003ee4:	617b      	str	r3, [r7, #20]

    /* the FIFO threshold is not used when the FIFO mode is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eea:	2b04      	cmp	r3, #4
 8003eec:	d117      	bne.n	8003f1e <HAL_DMA_Init+0x316>
    {
      /* Get the FIFO threshold */
      registerValue |= hdma->Init.FIFOThreshold;
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ef2:	697a      	ldr	r2, [r7, #20]
 8003ef4:	4313      	orrs	r3, r2
 8003ef6:	617b      	str	r3, [r7, #20]

      /* Check compatibility between FIFO threshold level and size of the memory burst */
      /* for INCR4, INCR8, INCR16 */
      if(hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	d00e      	beq.n	8003f1e <HAL_DMA_Init+0x316>
      {
        if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003f00:	6878      	ldr	r0, [r7, #4]
 8003f02:	f002 f821 	bl	8005f48 <DMA_CheckFifoParam>
 8003f06:	4603      	mov	r3, r0
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d008      	beq.n	8003f1e <HAL_DMA_Init+0x316>
        {
          /* Update error code */
          hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	2240      	movs	r2, #64	; 0x40
 8003f10:	655a      	str	r2, [r3, #84]	; 0x54

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	2201      	movs	r2, #1
 8003f16:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          return HAL_ERROR;
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	e197      	b.n	800424e <HAL_DMA_Init+0x646>
        }
      }
    }

    /* Write to DMA Stream FCR */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR = registerValue;
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	697a      	ldr	r2, [r7, #20]
 8003f24:	615a      	str	r2, [r3, #20]

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
       DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003f26:	6878      	ldr	r0, [r7, #4]
 8003f28:	f001 ff5c 	bl	8005de4 <DMA_CalcBaseAndBitshift>
 8003f2c:	4603      	mov	r3, r0
 8003f2e:	60bb      	str	r3, [r7, #8]

    /* Clear all interrupt flags */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003f34:	f003 031f 	and.w	r3, r3, #31
 8003f38:	223f      	movs	r2, #63	; 0x3f
 8003f3a:	409a      	lsls	r2, r3
 8003f3c:	68bb      	ldr	r3, [r7, #8]
 8003f3e:	609a      	str	r2, [r3, #8]
 8003f40:	e0cd      	b.n	80040de <HAL_DMA_Init+0x4d6>
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	681b      	ldr	r3, [r3, #0]
 8003f46:	4a3b      	ldr	r2, [pc, #236]	; (8004034 <HAL_DMA_Init+0x42c>)
 8003f48:	4293      	cmp	r3, r2
 8003f4a:	d022      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	4a39      	ldr	r2, [pc, #228]	; (8004038 <HAL_DMA_Init+0x430>)
 8003f52:	4293      	cmp	r3, r2
 8003f54:	d01d      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	681b      	ldr	r3, [r3, #0]
 8003f5a:	4a38      	ldr	r2, [pc, #224]	; (800403c <HAL_DMA_Init+0x434>)
 8003f5c:	4293      	cmp	r3, r2
 8003f5e:	d018      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	4a36      	ldr	r2, [pc, #216]	; (8004040 <HAL_DMA_Init+0x438>)
 8003f66:	4293      	cmp	r3, r2
 8003f68:	d013      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	681b      	ldr	r3, [r3, #0]
 8003f6e:	4a35      	ldr	r2, [pc, #212]	; (8004044 <HAL_DMA_Init+0x43c>)
 8003f70:	4293      	cmp	r3, r2
 8003f72:	d00e      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	4a33      	ldr	r2, [pc, #204]	; (8004048 <HAL_DMA_Init+0x440>)
 8003f7a:	4293      	cmp	r3, r2
 8003f7c:	d009      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	681b      	ldr	r3, [r3, #0]
 8003f82:	4a32      	ldr	r2, [pc, #200]	; (800404c <HAL_DMA_Init+0x444>)
 8003f84:	4293      	cmp	r3, r2
 8003f86:	d004      	beq.n	8003f92 <HAL_DMA_Init+0x38a>
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	4a30      	ldr	r2, [pc, #192]	; (8004050 <HAL_DMA_Init+0x448>)
 8003f8e:	4293      	cmp	r3, r2
 8003f90:	d101      	bne.n	8003f96 <HAL_DMA_Init+0x38e>
 8003f92:	2301      	movs	r3, #1
 8003f94:	e000      	b.n	8003f98 <HAL_DMA_Init+0x390>
 8003f96:	2300      	movs	r3, #0
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	f000 8097 	beq.w	80040cc <HAL_DMA_Init+0x4c4>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	4a24      	ldr	r2, [pc, #144]	; (8004034 <HAL_DMA_Init+0x42c>)
 8003fa4:	4293      	cmp	r3, r2
 8003fa6:	d021      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	4a22      	ldr	r2, [pc, #136]	; (8004038 <HAL_DMA_Init+0x430>)
 8003fae:	4293      	cmp	r3, r2
 8003fb0:	d01c      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	4a21      	ldr	r2, [pc, #132]	; (800403c <HAL_DMA_Init+0x434>)
 8003fb8:	4293      	cmp	r3, r2
 8003fba:	d017      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	4a1f      	ldr	r2, [pc, #124]	; (8004040 <HAL_DMA_Init+0x438>)
 8003fc2:	4293      	cmp	r3, r2
 8003fc4:	d012      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	4a1e      	ldr	r2, [pc, #120]	; (8004044 <HAL_DMA_Init+0x43c>)
 8003fcc:	4293      	cmp	r3, r2
 8003fce:	d00d      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	4a1c      	ldr	r2, [pc, #112]	; (8004048 <HAL_DMA_Init+0x440>)
 8003fd6:	4293      	cmp	r3, r2
 8003fd8:	d008      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	4a1b      	ldr	r2, [pc, #108]	; (800404c <HAL_DMA_Init+0x444>)
 8003fe0:	4293      	cmp	r3, r2
 8003fe2:	d003      	beq.n	8003fec <HAL_DMA_Init+0x3e4>
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	4a19      	ldr	r2, [pc, #100]	; (8004050 <HAL_DMA_Init+0x448>)
 8003fea:	4293      	cmp	r3, r2
      /* Check the request parameter */
      assert_param(IS_BDMA_REQUEST(hdma->Init.Request));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	2202      	movs	r2, #2
 8003ff0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	2200      	movs	r2, #0
 8003ff8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Get the CR register value */
    registerValue = ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR;
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	617b      	str	r3, [r7, #20]

    /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, MEM2MEM, DBM and CT bits */
    registerValue &= ((uint32_t)~(BDMA_CCR_PL    | BDMA_CCR_MSIZE   | BDMA_CCR_PSIZE  | \
 8004004:	697a      	ldr	r2, [r7, #20]
 8004006:	4b13      	ldr	r3, [pc, #76]	; (8004054 <HAL_DMA_Init+0x44c>)
 8004008:	4013      	ands	r3, r2
 800400a:	617b      	str	r3, [r7, #20]
                                  BDMA_CCR_MINC  | BDMA_CCR_PINC    | BDMA_CCR_CIRC   | \
                                  BDMA_CCR_DIR   | BDMA_CCR_MEM2MEM | BDMA_CCR_DBM    | \
                                  BDMA_CCR_CT));

    /* Prepare the DMA Channel configuration */
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	689b      	ldr	r3, [r3, #8]
 8004010:	2b40      	cmp	r3, #64	; 0x40
 8004012:	d021      	beq.n	8004058 <HAL_DMA_Init+0x450>
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	689b      	ldr	r3, [r3, #8]
 8004018:	2b80      	cmp	r3, #128	; 0x80
 800401a:	d102      	bne.n	8004022 <HAL_DMA_Init+0x41a>
 800401c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004020:	e01b      	b.n	800405a <HAL_DMA_Init+0x452>
 8004022:	2300      	movs	r3, #0
 8004024:	e019      	b.n	800405a <HAL_DMA_Init+0x452>
 8004026:	bf00      	nop
 8004028:	fe10803f 	.word	0xfe10803f
 800402c:	5c001000 	.word	0x5c001000
 8004030:	ffff0000 	.word	0xffff0000
 8004034:	58025408 	.word	0x58025408
 8004038:	5802541c 	.word	0x5802541c
 800403c:	58025430 	.word	0x58025430
 8004040:	58025444 	.word	0x58025444
 8004044:	58025458 	.word	0x58025458
 8004048:	5802546c 	.word	0x5802546c
 800404c:	58025480 	.word	0x58025480
 8004050:	58025494 	.word	0x58025494
 8004054:	fffe000f 	.word	0xfffe000f
 8004058:	2310      	movs	r3, #16
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 800405a:	687a      	ldr	r2, [r7, #4]
 800405c:	68d2      	ldr	r2, [r2, #12]
 800405e:	08d2      	lsrs	r2, r2, #3
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8004060:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	691b      	ldr	r3, [r3, #16]
 8004066:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8004068:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	695b      	ldr	r3, [r3, #20]
 800406e:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8004070:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	699b      	ldr	r3, [r3, #24]
 8004076:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8004078:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	69db      	ldr	r3, [r3, #28]
 800407e:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8004080:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PRIORITY(hdma->Init.Priority);
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	6a1b      	ldr	r3, [r3, #32]
 8004086:	091b      	lsrs	r3, r3, #4
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8004088:	4313      	orrs	r3, r2
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 800408a:	697a      	ldr	r2, [r7, #20]
 800408c:	4313      	orrs	r3, r2
 800408e:	617b      	str	r3, [r7, #20]

    /* Write to DMA Channel CR register */
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR = registerValue;
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	697a      	ldr	r2, [r7, #20]
 8004096:	601a      	str	r2, [r3, #0]

    /* calculation of the channel index */
    hdma->StreamIndex = (((uint32_t)((uint32_t*)hdma->Instance) - (uint32_t)BDMA_Channel0) / ((uint32_t)BDMA_Channel1 - (uint32_t)BDMA_Channel0)) << 2U;
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	461a      	mov	r2, r3
 800409e:	4b6e      	ldr	r3, [pc, #440]	; (8004258 <HAL_DMA_Init+0x650>)
 80040a0:	4413      	add	r3, r2
 80040a2:	4a6e      	ldr	r2, [pc, #440]	; (800425c <HAL_DMA_Init+0x654>)
 80040a4:	fba2 2303 	umull	r2, r3, r2, r3
 80040a8:	091b      	lsrs	r3, r3, #4
 80040aa:	009a      	lsls	r2, r3, #2
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
    DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80040b0:	6878      	ldr	r0, [r7, #4]
 80040b2:	f001 fe97 	bl	8005de4 <DMA_CalcBaseAndBitshift>
 80040b6:	4603      	mov	r3, r0
 80040b8:	60fb      	str	r3, [r7, #12]

    /* Clear all interrupt flags */
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80040be:	f003 031f 	and.w	r3, r3, #31
 80040c2:	2201      	movs	r2, #1
 80040c4:	409a      	lsls	r2, r3
 80040c6:	68fb      	ldr	r3, [r7, #12]
 80040c8:	605a      	str	r2, [r3, #4]
 80040ca:	e008      	b.n	80040de <HAL_DMA_Init+0x4d6>
  }
  else
  {
    hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	2240      	movs	r2, #64	; 0x40
 80040d0:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->State     = HAL_DMA_STATE_ERROR;
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	2203      	movs	r2, #3
 80040d6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    return HAL_ERROR;
 80040da:	2301      	movs	r3, #1
 80040dc:	e0b7      	b.n	800424e <HAL_DMA_Init+0x646>
  }

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	4a5f      	ldr	r2, [pc, #380]	; (8004260 <HAL_DMA_Init+0x658>)
 80040e4:	4293      	cmp	r3, r2
 80040e6:	d072      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	681b      	ldr	r3, [r3, #0]
 80040ec:	4a5d      	ldr	r2, [pc, #372]	; (8004264 <HAL_DMA_Init+0x65c>)
 80040ee:	4293      	cmp	r3, r2
 80040f0:	d06d      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	4a5c      	ldr	r2, [pc, #368]	; (8004268 <HAL_DMA_Init+0x660>)
 80040f8:	4293      	cmp	r3, r2
 80040fa:	d068      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4a5a      	ldr	r2, [pc, #360]	; (800426c <HAL_DMA_Init+0x664>)
 8004102:	4293      	cmp	r3, r2
 8004104:	d063      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	4a59      	ldr	r2, [pc, #356]	; (8004270 <HAL_DMA_Init+0x668>)
 800410c:	4293      	cmp	r3, r2
 800410e:	d05e      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	4a57      	ldr	r2, [pc, #348]	; (8004274 <HAL_DMA_Init+0x66c>)
 8004116:	4293      	cmp	r3, r2
 8004118:	d059      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	4a56      	ldr	r2, [pc, #344]	; (8004278 <HAL_DMA_Init+0x670>)
 8004120:	4293      	cmp	r3, r2
 8004122:	d054      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	4a54      	ldr	r2, [pc, #336]	; (800427c <HAL_DMA_Init+0x674>)
 800412a:	4293      	cmp	r3, r2
 800412c:	d04f      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	4a53      	ldr	r2, [pc, #332]	; (8004280 <HAL_DMA_Init+0x678>)
 8004134:	4293      	cmp	r3, r2
 8004136:	d04a      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	4a51      	ldr	r2, [pc, #324]	; (8004284 <HAL_DMA_Init+0x67c>)
 800413e:	4293      	cmp	r3, r2
 8004140:	d045      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	4a50      	ldr	r2, [pc, #320]	; (8004288 <HAL_DMA_Init+0x680>)
 8004148:	4293      	cmp	r3, r2
 800414a:	d040      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	4a4e      	ldr	r2, [pc, #312]	; (800428c <HAL_DMA_Init+0x684>)
 8004152:	4293      	cmp	r3, r2
 8004154:	d03b      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	4a4d      	ldr	r2, [pc, #308]	; (8004290 <HAL_DMA_Init+0x688>)
 800415c:	4293      	cmp	r3, r2
 800415e:	d036      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	4a4b      	ldr	r2, [pc, #300]	; (8004294 <HAL_DMA_Init+0x68c>)
 8004166:	4293      	cmp	r3, r2
 8004168:	d031      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	681b      	ldr	r3, [r3, #0]
 800416e:	4a4a      	ldr	r2, [pc, #296]	; (8004298 <HAL_DMA_Init+0x690>)
 8004170:	4293      	cmp	r3, r2
 8004172:	d02c      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	681b      	ldr	r3, [r3, #0]
 8004178:	4a48      	ldr	r2, [pc, #288]	; (800429c <HAL_DMA_Init+0x694>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d027      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	4a47      	ldr	r2, [pc, #284]	; (80042a0 <HAL_DMA_Init+0x698>)
 8004184:	4293      	cmp	r3, r2
 8004186:	d022      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	4a45      	ldr	r2, [pc, #276]	; (80042a4 <HAL_DMA_Init+0x69c>)
 800418e:	4293      	cmp	r3, r2
 8004190:	d01d      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	4a44      	ldr	r2, [pc, #272]	; (80042a8 <HAL_DMA_Init+0x6a0>)
 8004198:	4293      	cmp	r3, r2
 800419a:	d018      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	4a42      	ldr	r2, [pc, #264]	; (80042ac <HAL_DMA_Init+0x6a4>)
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d013      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	4a41      	ldr	r2, [pc, #260]	; (80042b0 <HAL_DMA_Init+0x6a8>)
 80041ac:	4293      	cmp	r3, r2
 80041ae:	d00e      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	4a3f      	ldr	r2, [pc, #252]	; (80042b4 <HAL_DMA_Init+0x6ac>)
 80041b6:	4293      	cmp	r3, r2
 80041b8:	d009      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	4a3e      	ldr	r2, [pc, #248]	; (80042b8 <HAL_DMA_Init+0x6b0>)
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d004      	beq.n	80041ce <HAL_DMA_Init+0x5c6>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	4a3c      	ldr	r2, [pc, #240]	; (80042bc <HAL_DMA_Init+0x6b4>)
 80041ca:	4293      	cmp	r3, r2
 80041cc:	d101      	bne.n	80041d2 <HAL_DMA_Init+0x5ca>
 80041ce:	2301      	movs	r3, #1
 80041d0:	e000      	b.n	80041d4 <HAL_DMA_Init+0x5cc>
 80041d2:	2300      	movs	r3, #0
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	d032      	beq.n	800423e <HAL_DMA_Init+0x636>
  {
    /* Initialize parameters for DMAMUX channel :
    DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
    */
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 80041d8:	6878      	ldr	r0, [r7, #4]
 80041da:	f001 ff31 	bl	8006040 <DMA_CalcDMAMUXChannelBaseAndMask>

    if(hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	689b      	ldr	r3, [r3, #8]
 80041e2:	2b80      	cmp	r3, #128	; 0x80
 80041e4:	d102      	bne.n	80041ec <HAL_DMA_Init+0x5e4>
    {
      /* if memory to memory force the request to 0*/
      hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	2200      	movs	r2, #0
 80041ea:	605a      	str	r2, [r3, #4]
    }

    /* Set peripheral request  to DMAMUX channel */
    hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	685a      	ldr	r2, [r3, #4]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80041f4:	b2d2      	uxtb	r2, r2
 80041f6:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041fc:	687a      	ldr	r2, [r7, #4]
 80041fe:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8004200:	605a      	str	r2, [r3, #4]

    /* Initialize parameters for DMAMUX request generator :
    if the DMA request is DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR7
    */
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	685b      	ldr	r3, [r3, #4]
 8004206:	2b00      	cmp	r3, #0
 8004208:	d010      	beq.n	800422c <HAL_DMA_Init+0x624>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	685b      	ldr	r3, [r3, #4]
 800420e:	2b08      	cmp	r3, #8
 8004210:	d80c      	bhi.n	800422c <HAL_DMA_Init+0x624>
    {
      /* Initialize parameters for DMAMUX request generator :
      DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask */
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 8004212:	6878      	ldr	r0, [r7, #4]
 8004214:	f001 ffae 	bl	8006174 <DMA_CalcDMAMUXRequestGenBaseAndMask>

      /* Reset the DMAMUX request generator register */
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800421c:	2200      	movs	r2, #0
 800421e:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004224:	687a      	ldr	r2, [r7, #4]
 8004226:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8004228:	605a      	str	r2, [r3, #4]
 800422a:	e008      	b.n	800423e <HAL_DMA_Init+0x636>
    }
    else
    {
      hdma->DMAmuxRequestGen = 0U;
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	2200      	movs	r2, #0
 8004230:	66da      	str	r2, [r3, #108]	; 0x6c
      hdma->DMAmuxRequestGenStatus = 0U;
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	2200      	movs	r2, #0
 8004236:	671a      	str	r2, [r3, #112]	; 0x70
      hdma->DMAmuxRequestGenStatusMask = 0U;
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	2200      	movs	r2, #0
 800423c:	675a      	str	r2, [r3, #116]	; 0x74
    }
  }

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	2200      	movs	r2, #0
 8004242:	655a      	str	r2, [r3, #84]	; 0x54

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	2201      	movs	r2, #1
 8004248:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 800424c:	2300      	movs	r3, #0
}
 800424e:	4618      	mov	r0, r3
 8004250:	3718      	adds	r7, #24
 8004252:	46bd      	mov	sp, r7
 8004254:	bd80      	pop	{r7, pc}
 8004256:	bf00      	nop
 8004258:	a7fdabf8 	.word	0xa7fdabf8
 800425c:	cccccccd 	.word	0xcccccccd
 8004260:	40020010 	.word	0x40020010
 8004264:	40020028 	.word	0x40020028
 8004268:	40020040 	.word	0x40020040
 800426c:	40020058 	.word	0x40020058
 8004270:	40020070 	.word	0x40020070
 8004274:	40020088 	.word	0x40020088
 8004278:	400200a0 	.word	0x400200a0
 800427c:	400200b8 	.word	0x400200b8
 8004280:	40020410 	.word	0x40020410
 8004284:	40020428 	.word	0x40020428
 8004288:	40020440 	.word	0x40020440
 800428c:	40020458 	.word	0x40020458
 8004290:	40020470 	.word	0x40020470
 8004294:	40020488 	.word	0x40020488
 8004298:	400204a0 	.word	0x400204a0
 800429c:	400204b8 	.word	0x400204b8
 80042a0:	58025408 	.word	0x58025408
 80042a4:	5802541c 	.word	0x5802541c
 80042a8:	58025430 	.word	0x58025430
 80042ac:	58025444 	.word	0x58025444
 80042b0:	58025458 	.word	0x58025458
 80042b4:	5802546c 	.word	0x5802546c
 80042b8:	58025480 	.word	0x58025480
 80042bc:	58025494 	.word	0x58025494

080042c0 <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80042c0:	b580      	push	{r7, lr}
 80042c2:	b086      	sub	sp, #24
 80042c4:	af00      	add	r7, sp, #0
 80042c6:	60f8      	str	r0, [r7, #12]
 80042c8:	60b9      	str	r1, [r7, #8]
 80042ca:	607a      	str	r2, [r7, #4]
 80042cc:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80042ce:	2300      	movs	r3, #0
 80042d0:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 80042d2:	68fb      	ldr	r3, [r7, #12]
 80042d4:	2b00      	cmp	r3, #0
 80042d6:	d101      	bne.n	80042dc <HAL_DMA_Start_IT+0x1c>
  {
    return HAL_ERROR;
 80042d8:	2301      	movs	r3, #1
 80042da:	e226      	b.n	800472a <HAL_DMA_Start_IT+0x46a>
  }

  /* Process locked */
  __HAL_LOCK(hdma);
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80042e2:	2b01      	cmp	r3, #1
 80042e4:	d101      	bne.n	80042ea <HAL_DMA_Start_IT+0x2a>
 80042e6:	2302      	movs	r3, #2
 80042e8:	e21f      	b.n	800472a <HAL_DMA_Start_IT+0x46a>
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	2201      	movs	r2, #1
 80042ee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  if(HAL_DMA_STATE_READY == hdma->State)
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80042f8:	b2db      	uxtb	r3, r3
 80042fa:	2b01      	cmp	r3, #1
 80042fc:	f040 820a 	bne.w	8004714 <HAL_DMA_Start_IT+0x454>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	2202      	movs	r2, #2
 8004304:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	2200      	movs	r2, #0
 800430c:	655a      	str	r2, [r3, #84]	; 0x54

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	4a68      	ldr	r2, [pc, #416]	; (80044b4 <HAL_DMA_Start_IT+0x1f4>)
 8004314:	4293      	cmp	r3, r2
 8004316:	d04a      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	4a66      	ldr	r2, [pc, #408]	; (80044b8 <HAL_DMA_Start_IT+0x1f8>)
 800431e:	4293      	cmp	r3, r2
 8004320:	d045      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	4a65      	ldr	r2, [pc, #404]	; (80044bc <HAL_DMA_Start_IT+0x1fc>)
 8004328:	4293      	cmp	r3, r2
 800432a:	d040      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 800432c:	68fb      	ldr	r3, [r7, #12]
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	4a63      	ldr	r2, [pc, #396]	; (80044c0 <HAL_DMA_Start_IT+0x200>)
 8004332:	4293      	cmp	r3, r2
 8004334:	d03b      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	4a62      	ldr	r2, [pc, #392]	; (80044c4 <HAL_DMA_Start_IT+0x204>)
 800433c:	4293      	cmp	r3, r2
 800433e:	d036      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004340:	68fb      	ldr	r3, [r7, #12]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	4a60      	ldr	r2, [pc, #384]	; (80044c8 <HAL_DMA_Start_IT+0x208>)
 8004346:	4293      	cmp	r3, r2
 8004348:	d031      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	4a5f      	ldr	r2, [pc, #380]	; (80044cc <HAL_DMA_Start_IT+0x20c>)
 8004350:	4293      	cmp	r3, r2
 8004352:	d02c      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	4a5d      	ldr	r2, [pc, #372]	; (80044d0 <HAL_DMA_Start_IT+0x210>)
 800435a:	4293      	cmp	r3, r2
 800435c:	d027      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	4a5c      	ldr	r2, [pc, #368]	; (80044d4 <HAL_DMA_Start_IT+0x214>)
 8004364:	4293      	cmp	r3, r2
 8004366:	d022      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004368:	68fb      	ldr	r3, [r7, #12]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	4a5a      	ldr	r2, [pc, #360]	; (80044d8 <HAL_DMA_Start_IT+0x218>)
 800436e:	4293      	cmp	r3, r2
 8004370:	d01d      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004372:	68fb      	ldr	r3, [r7, #12]
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	4a59      	ldr	r2, [pc, #356]	; (80044dc <HAL_DMA_Start_IT+0x21c>)
 8004378:	4293      	cmp	r3, r2
 800437a:	d018      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	4a57      	ldr	r2, [pc, #348]	; (80044e0 <HAL_DMA_Start_IT+0x220>)
 8004382:	4293      	cmp	r3, r2
 8004384:	d013      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004386:	68fb      	ldr	r3, [r7, #12]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	4a56      	ldr	r2, [pc, #344]	; (80044e4 <HAL_DMA_Start_IT+0x224>)
 800438c:	4293      	cmp	r3, r2
 800438e:	d00e      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 8004390:	68fb      	ldr	r3, [r7, #12]
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	4a54      	ldr	r2, [pc, #336]	; (80044e8 <HAL_DMA_Start_IT+0x228>)
 8004396:	4293      	cmp	r3, r2
 8004398:	d009      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	4a53      	ldr	r2, [pc, #332]	; (80044ec <HAL_DMA_Start_IT+0x22c>)
 80043a0:	4293      	cmp	r3, r2
 80043a2:	d004      	beq.n	80043ae <HAL_DMA_Start_IT+0xee>
 80043a4:	68fb      	ldr	r3, [r7, #12]
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	4a51      	ldr	r2, [pc, #324]	; (80044f0 <HAL_DMA_Start_IT+0x230>)
 80043aa:	4293      	cmp	r3, r2
 80043ac:	d108      	bne.n	80043c0 <HAL_DMA_Start_IT+0x100>
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	681a      	ldr	r2, [r3, #0]
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	f022 0201 	bic.w	r2, r2, #1
 80043bc:	601a      	str	r2, [r3, #0]
 80043be:	e007      	b.n	80043d0 <HAL_DMA_Start_IT+0x110>
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	681a      	ldr	r2, [r3, #0]
 80043c6:	68fb      	ldr	r3, [r7, #12]
 80043c8:	681b      	ldr	r3, [r3, #0]
 80043ca:	f022 0201 	bic.w	r2, r2, #1
 80043ce:	601a      	str	r2, [r3, #0]

    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 80043d0:	683b      	ldr	r3, [r7, #0]
 80043d2:	687a      	ldr	r2, [r7, #4]
 80043d4:	68b9      	ldr	r1, [r7, #8]
 80043d6:	68f8      	ldr	r0, [r7, #12]
 80043d8:	f001 fb58 	bl	8005a8c <DMA_SetConfig>

    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	4a34      	ldr	r2, [pc, #208]	; (80044b4 <HAL_DMA_Start_IT+0x1f4>)
 80043e2:	4293      	cmp	r3, r2
 80043e4:	d04a      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	4a33      	ldr	r2, [pc, #204]	; (80044b8 <HAL_DMA_Start_IT+0x1f8>)
 80043ec:	4293      	cmp	r3, r2
 80043ee:	d045      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	4a31      	ldr	r2, [pc, #196]	; (80044bc <HAL_DMA_Start_IT+0x1fc>)
 80043f6:	4293      	cmp	r3, r2
 80043f8:	d040      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	4a30      	ldr	r2, [pc, #192]	; (80044c0 <HAL_DMA_Start_IT+0x200>)
 8004400:	4293      	cmp	r3, r2
 8004402:	d03b      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004404:	68fb      	ldr	r3, [r7, #12]
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	4a2e      	ldr	r2, [pc, #184]	; (80044c4 <HAL_DMA_Start_IT+0x204>)
 800440a:	4293      	cmp	r3, r2
 800440c:	d036      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	4a2d      	ldr	r2, [pc, #180]	; (80044c8 <HAL_DMA_Start_IT+0x208>)
 8004414:	4293      	cmp	r3, r2
 8004416:	d031      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004418:	68fb      	ldr	r3, [r7, #12]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	4a2b      	ldr	r2, [pc, #172]	; (80044cc <HAL_DMA_Start_IT+0x20c>)
 800441e:	4293      	cmp	r3, r2
 8004420:	d02c      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	4a2a      	ldr	r2, [pc, #168]	; (80044d0 <HAL_DMA_Start_IT+0x210>)
 8004428:	4293      	cmp	r3, r2
 800442a:	d027      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	4a28      	ldr	r2, [pc, #160]	; (80044d4 <HAL_DMA_Start_IT+0x214>)
 8004432:	4293      	cmp	r3, r2
 8004434:	d022      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	4a27      	ldr	r2, [pc, #156]	; (80044d8 <HAL_DMA_Start_IT+0x218>)
 800443c:	4293      	cmp	r3, r2
 800443e:	d01d      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	4a25      	ldr	r2, [pc, #148]	; (80044dc <HAL_DMA_Start_IT+0x21c>)
 8004446:	4293      	cmp	r3, r2
 8004448:	d018      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	4a24      	ldr	r2, [pc, #144]	; (80044e0 <HAL_DMA_Start_IT+0x220>)
 8004450:	4293      	cmp	r3, r2
 8004452:	d013      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	4a22      	ldr	r2, [pc, #136]	; (80044e4 <HAL_DMA_Start_IT+0x224>)
 800445a:	4293      	cmp	r3, r2
 800445c:	d00e      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 800445e:	68fb      	ldr	r3, [r7, #12]
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	4a21      	ldr	r2, [pc, #132]	; (80044e8 <HAL_DMA_Start_IT+0x228>)
 8004464:	4293      	cmp	r3, r2
 8004466:	d009      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	4a1f      	ldr	r2, [pc, #124]	; (80044ec <HAL_DMA_Start_IT+0x22c>)
 800446e:	4293      	cmp	r3, r2
 8004470:	d004      	beq.n	800447c <HAL_DMA_Start_IT+0x1bc>
 8004472:	68fb      	ldr	r3, [r7, #12]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	4a1e      	ldr	r2, [pc, #120]	; (80044f0 <HAL_DMA_Start_IT+0x230>)
 8004478:	4293      	cmp	r3, r2
 800447a:	d101      	bne.n	8004480 <HAL_DMA_Start_IT+0x1c0>
 800447c:	2301      	movs	r3, #1
 800447e:	e000      	b.n	8004482 <HAL_DMA_Start_IT+0x1c2>
 8004480:	2300      	movs	r3, #0
 8004482:	2b00      	cmp	r3, #0
 8004484:	d036      	beq.n	80044f4 <HAL_DMA_Start_IT+0x234>
    {
      /* Enable Common interrupts*/
      MODIFY_REG(((DMA_Stream_TypeDef   *)hdma->Instance)->CR, (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT), (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME));
 8004486:	68fb      	ldr	r3, [r7, #12]
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	f023 021e 	bic.w	r2, r3, #30
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	f042 0216 	orr.w	r2, r2, #22
 8004498:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d03e      	beq.n	8004520 <HAL_DMA_Start_IT+0x260>
      {
        /* Enable Half Transfer IT if corresponding Callback is set */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  |= DMA_IT_HT;
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	681a      	ldr	r2, [r3, #0]
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	f042 0208 	orr.w	r2, r2, #8
 80044b0:	601a      	str	r2, [r3, #0]
 80044b2:	e035      	b.n	8004520 <HAL_DMA_Start_IT+0x260>
 80044b4:	40020010 	.word	0x40020010
 80044b8:	40020028 	.word	0x40020028
 80044bc:	40020040 	.word	0x40020040
 80044c0:	40020058 	.word	0x40020058
 80044c4:	40020070 	.word	0x40020070
 80044c8:	40020088 	.word	0x40020088
 80044cc:	400200a0 	.word	0x400200a0
 80044d0:	400200b8 	.word	0x400200b8
 80044d4:	40020410 	.word	0x40020410
 80044d8:	40020428 	.word	0x40020428
 80044dc:	40020440 	.word	0x40020440
 80044e0:	40020458 	.word	0x40020458
 80044e4:	40020470 	.word	0x40020470
 80044e8:	40020488 	.word	0x40020488
 80044ec:	400204a0 	.word	0x400204a0
 80044f0:	400204b8 	.word	0x400204b8
      }
    }
    else /* BDMA channel */
    {
      /* Enable Common interrupts */
      MODIFY_REG(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR, (BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE), (BDMA_CCR_TCIE | BDMA_CCR_TEIE));
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	f023 020e 	bic.w	r2, r3, #14
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	f042 020a 	orr.w	r2, r2, #10
 8004506:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800450c:	2b00      	cmp	r3, #0
 800450e:	d007      	beq.n	8004520 <HAL_DMA_Start_IT+0x260>
      {
        /*Enable Half Transfer IT if corresponding Callback is set */
        ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  |= BDMA_CCR_HTIE;
 8004510:	68fb      	ldr	r3, [r7, #12]
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	681a      	ldr	r2, [r3, #0]
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	f042 0204 	orr.w	r2, r2, #4
 800451e:	601a      	str	r2, [r3, #0]
      }
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004520:	68fb      	ldr	r3, [r7, #12]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	4a83      	ldr	r2, [pc, #524]	; (8004734 <HAL_DMA_Start_IT+0x474>)
 8004526:	4293      	cmp	r3, r2
 8004528:	d072      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 800452a:	68fb      	ldr	r3, [r7, #12]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	4a82      	ldr	r2, [pc, #520]	; (8004738 <HAL_DMA_Start_IT+0x478>)
 8004530:	4293      	cmp	r3, r2
 8004532:	d06d      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004534:	68fb      	ldr	r3, [r7, #12]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	4a80      	ldr	r2, [pc, #512]	; (800473c <HAL_DMA_Start_IT+0x47c>)
 800453a:	4293      	cmp	r3, r2
 800453c:	d068      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	4a7f      	ldr	r2, [pc, #508]	; (8004740 <HAL_DMA_Start_IT+0x480>)
 8004544:	4293      	cmp	r3, r2
 8004546:	d063      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	4a7d      	ldr	r2, [pc, #500]	; (8004744 <HAL_DMA_Start_IT+0x484>)
 800454e:	4293      	cmp	r3, r2
 8004550:	d05e      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004552:	68fb      	ldr	r3, [r7, #12]
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	4a7c      	ldr	r2, [pc, #496]	; (8004748 <HAL_DMA_Start_IT+0x488>)
 8004558:	4293      	cmp	r3, r2
 800455a:	d059      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 800455c:	68fb      	ldr	r3, [r7, #12]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	4a7a      	ldr	r2, [pc, #488]	; (800474c <HAL_DMA_Start_IT+0x48c>)
 8004562:	4293      	cmp	r3, r2
 8004564:	d054      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	4a79      	ldr	r2, [pc, #484]	; (8004750 <HAL_DMA_Start_IT+0x490>)
 800456c:	4293      	cmp	r3, r2
 800456e:	d04f      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	4a77      	ldr	r2, [pc, #476]	; (8004754 <HAL_DMA_Start_IT+0x494>)
 8004576:	4293      	cmp	r3, r2
 8004578:	d04a      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	4a76      	ldr	r2, [pc, #472]	; (8004758 <HAL_DMA_Start_IT+0x498>)
 8004580:	4293      	cmp	r3, r2
 8004582:	d045      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	4a74      	ldr	r2, [pc, #464]	; (800475c <HAL_DMA_Start_IT+0x49c>)
 800458a:	4293      	cmp	r3, r2
 800458c:	d040      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 800458e:	68fb      	ldr	r3, [r7, #12]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	4a73      	ldr	r2, [pc, #460]	; (8004760 <HAL_DMA_Start_IT+0x4a0>)
 8004594:	4293      	cmp	r3, r2
 8004596:	d03b      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004598:	68fb      	ldr	r3, [r7, #12]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4a71      	ldr	r2, [pc, #452]	; (8004764 <HAL_DMA_Start_IT+0x4a4>)
 800459e:	4293      	cmp	r3, r2
 80045a0:	d036      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	4a70      	ldr	r2, [pc, #448]	; (8004768 <HAL_DMA_Start_IT+0x4a8>)
 80045a8:	4293      	cmp	r3, r2
 80045aa:	d031      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	4a6e      	ldr	r2, [pc, #440]	; (800476c <HAL_DMA_Start_IT+0x4ac>)
 80045b2:	4293      	cmp	r3, r2
 80045b4:	d02c      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	4a6d      	ldr	r2, [pc, #436]	; (8004770 <HAL_DMA_Start_IT+0x4b0>)
 80045bc:	4293      	cmp	r3, r2
 80045be:	d027      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	4a6b      	ldr	r2, [pc, #428]	; (8004774 <HAL_DMA_Start_IT+0x4b4>)
 80045c6:	4293      	cmp	r3, r2
 80045c8:	d022      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	4a6a      	ldr	r2, [pc, #424]	; (8004778 <HAL_DMA_Start_IT+0x4b8>)
 80045d0:	4293      	cmp	r3, r2
 80045d2:	d01d      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	4a68      	ldr	r2, [pc, #416]	; (800477c <HAL_DMA_Start_IT+0x4bc>)
 80045da:	4293      	cmp	r3, r2
 80045dc:	d018      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	4a67      	ldr	r2, [pc, #412]	; (8004780 <HAL_DMA_Start_IT+0x4c0>)
 80045e4:	4293      	cmp	r3, r2
 80045e6:	d013      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045e8:	68fb      	ldr	r3, [r7, #12]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	4a65      	ldr	r2, [pc, #404]	; (8004784 <HAL_DMA_Start_IT+0x4c4>)
 80045ee:	4293      	cmp	r3, r2
 80045f0:	d00e      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045f2:	68fb      	ldr	r3, [r7, #12]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	4a64      	ldr	r2, [pc, #400]	; (8004788 <HAL_DMA_Start_IT+0x4c8>)
 80045f8:	4293      	cmp	r3, r2
 80045fa:	d009      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	4a62      	ldr	r2, [pc, #392]	; (800478c <HAL_DMA_Start_IT+0x4cc>)
 8004602:	4293      	cmp	r3, r2
 8004604:	d004      	beq.n	8004610 <HAL_DMA_Start_IT+0x350>
 8004606:	68fb      	ldr	r3, [r7, #12]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	4a61      	ldr	r2, [pc, #388]	; (8004790 <HAL_DMA_Start_IT+0x4d0>)
 800460c:	4293      	cmp	r3, r2
 800460e:	d101      	bne.n	8004614 <HAL_DMA_Start_IT+0x354>
 8004610:	2301      	movs	r3, #1
 8004612:	e000      	b.n	8004616 <HAL_DMA_Start_IT+0x356>
 8004614:	2300      	movs	r3, #0
 8004616:	2b00      	cmp	r3, #0
 8004618:	d01a      	beq.n	8004650 <HAL_DMA_Start_IT+0x390>
    {
      /* Check if DMAMUX Synchronization is enabled */
      if((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 800461a:	68fb      	ldr	r3, [r7, #12]
 800461c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004624:	2b00      	cmp	r3, #0
 8004626:	d007      	beq.n	8004638 <HAL_DMA_Start_IT+0x378>
      {
        /* Enable DMAMUX sync overrun IT*/
        hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800462c:	681a      	ldr	r2, [r3, #0]
 800462e:	68fb      	ldr	r3, [r7, #12]
 8004630:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004632:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004636:	601a      	str	r2, [r3, #0]
      }

      if(hdma->DMAmuxRequestGen != 0U)
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800463c:	2b00      	cmp	r3, #0
 800463e:	d007      	beq.n	8004650 <HAL_DMA_Start_IT+0x390>
      {
        /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
        /* enable the request gen overrun IT */
        hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800464a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800464e:	601a      	str	r2, [r3, #0]
      }
    }

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a37      	ldr	r2, [pc, #220]	; (8004734 <HAL_DMA_Start_IT+0x474>)
 8004656:	4293      	cmp	r3, r2
 8004658:	d04a      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 800465a:	68fb      	ldr	r3, [r7, #12]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	4a36      	ldr	r2, [pc, #216]	; (8004738 <HAL_DMA_Start_IT+0x478>)
 8004660:	4293      	cmp	r3, r2
 8004662:	d045      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	4a34      	ldr	r2, [pc, #208]	; (800473c <HAL_DMA_Start_IT+0x47c>)
 800466a:	4293      	cmp	r3, r2
 800466c:	d040      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	4a33      	ldr	r2, [pc, #204]	; (8004740 <HAL_DMA_Start_IT+0x480>)
 8004674:	4293      	cmp	r3, r2
 8004676:	d03b      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 8004678:	68fb      	ldr	r3, [r7, #12]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	4a31      	ldr	r2, [pc, #196]	; (8004744 <HAL_DMA_Start_IT+0x484>)
 800467e:	4293      	cmp	r3, r2
 8004680:	d036      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 8004682:	68fb      	ldr	r3, [r7, #12]
 8004684:	681b      	ldr	r3, [r3, #0]
 8004686:	4a30      	ldr	r2, [pc, #192]	; (8004748 <HAL_DMA_Start_IT+0x488>)
 8004688:	4293      	cmp	r3, r2
 800468a:	d031      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	4a2e      	ldr	r2, [pc, #184]	; (800474c <HAL_DMA_Start_IT+0x48c>)
 8004692:	4293      	cmp	r3, r2
 8004694:	d02c      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	4a2d      	ldr	r2, [pc, #180]	; (8004750 <HAL_DMA_Start_IT+0x490>)
 800469c:	4293      	cmp	r3, r2
 800469e:	d027      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4a2b      	ldr	r2, [pc, #172]	; (8004754 <HAL_DMA_Start_IT+0x494>)
 80046a6:	4293      	cmp	r3, r2
 80046a8:	d022      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	4a2a      	ldr	r2, [pc, #168]	; (8004758 <HAL_DMA_Start_IT+0x498>)
 80046b0:	4293      	cmp	r3, r2
 80046b2:	d01d      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	4a28      	ldr	r2, [pc, #160]	; (800475c <HAL_DMA_Start_IT+0x49c>)
 80046ba:	4293      	cmp	r3, r2
 80046bc:	d018      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046be:	68fb      	ldr	r3, [r7, #12]
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	4a27      	ldr	r2, [pc, #156]	; (8004760 <HAL_DMA_Start_IT+0x4a0>)
 80046c4:	4293      	cmp	r3, r2
 80046c6:	d013      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	4a25      	ldr	r2, [pc, #148]	; (8004764 <HAL_DMA_Start_IT+0x4a4>)
 80046ce:	4293      	cmp	r3, r2
 80046d0:	d00e      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	4a24      	ldr	r2, [pc, #144]	; (8004768 <HAL_DMA_Start_IT+0x4a8>)
 80046d8:	4293      	cmp	r3, r2
 80046da:	d009      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	4a22      	ldr	r2, [pc, #136]	; (800476c <HAL_DMA_Start_IT+0x4ac>)
 80046e2:	4293      	cmp	r3, r2
 80046e4:	d004      	beq.n	80046f0 <HAL_DMA_Start_IT+0x430>
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	4a21      	ldr	r2, [pc, #132]	; (8004770 <HAL_DMA_Start_IT+0x4b0>)
 80046ec:	4293      	cmp	r3, r2
 80046ee:	d108      	bne.n	8004702 <HAL_DMA_Start_IT+0x442>
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	681a      	ldr	r2, [r3, #0]
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	f042 0201 	orr.w	r2, r2, #1
 80046fe:	601a      	str	r2, [r3, #0]
 8004700:	e012      	b.n	8004728 <HAL_DMA_Start_IT+0x468>
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	681a      	ldr	r2, [r3, #0]
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	f042 0201 	orr.w	r2, r2, #1
 8004710:	601a      	str	r2, [r3, #0]
 8004712:	e009      	b.n	8004728 <HAL_DMA_Start_IT+0x468>
  }
  else
  {
    /* Set the error code to busy */
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800471a:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hdma);
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	2200      	movs	r2, #0
 8004720:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Return error status */
    status = HAL_ERROR;
 8004724:	2301      	movs	r3, #1
 8004726:	75fb      	strb	r3, [r7, #23]
  }

  return status;
 8004728:	7dfb      	ldrb	r3, [r7, #23]
}
 800472a:	4618      	mov	r0, r3
 800472c:	3718      	adds	r7, #24
 800472e:	46bd      	mov	sp, r7
 8004730:	bd80      	pop	{r7, pc}
 8004732:	bf00      	nop
 8004734:	40020010 	.word	0x40020010
 8004738:	40020028 	.word	0x40020028
 800473c:	40020040 	.word	0x40020040
 8004740:	40020058 	.word	0x40020058
 8004744:	40020070 	.word	0x40020070
 8004748:	40020088 	.word	0x40020088
 800474c:	400200a0 	.word	0x400200a0
 8004750:	400200b8 	.word	0x400200b8
 8004754:	40020410 	.word	0x40020410
 8004758:	40020428 	.word	0x40020428
 800475c:	40020440 	.word	0x40020440
 8004760:	40020458 	.word	0x40020458
 8004764:	40020470 	.word	0x40020470
 8004768:	40020488 	.word	0x40020488
 800476c:	400204a0 	.word	0x400204a0
 8004770:	400204b8 	.word	0x400204b8
 8004774:	58025408 	.word	0x58025408
 8004778:	5802541c 	.word	0x5802541c
 800477c:	58025430 	.word	0x58025430
 8004780:	58025444 	.word	0x58025444
 8004784:	58025458 	.word	0x58025458
 8004788:	5802546c 	.word	0x5802546c
 800478c:	58025480 	.word	0x58025480
 8004790:	58025494 	.word	0x58025494

08004794 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8004794:	b580      	push	{r7, lr}
 8004796:	b084      	sub	sp, #16
 8004798:	af00      	add	r7, sp, #0
 800479a:	6078      	str	r0, [r7, #4]
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	2b00      	cmp	r3, #0
 80047a0:	d101      	bne.n	80047a6 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 80047a2:	2301      	movs	r3, #1
 80047a4:	e237      	b.n	8004c16 <HAL_DMA_Abort_IT+0x482>
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80047ac:	b2db      	uxtb	r3, r3
 80047ae:	2b02      	cmp	r3, #2
 80047b0:	d004      	beq.n	80047bc <HAL_DMA_Abort_IT+0x28>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	2280      	movs	r2, #128	; 0x80
 80047b6:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 80047b8:	2301      	movs	r3, #1
 80047ba:	e22c      	b.n	8004c16 <HAL_DMA_Abort_IT+0x482>
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	4a5c      	ldr	r2, [pc, #368]	; (8004934 <HAL_DMA_Abort_IT+0x1a0>)
 80047c2:	4293      	cmp	r3, r2
 80047c4:	d04a      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	4a5b      	ldr	r2, [pc, #364]	; (8004938 <HAL_DMA_Abort_IT+0x1a4>)
 80047cc:	4293      	cmp	r3, r2
 80047ce:	d045      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	4a59      	ldr	r2, [pc, #356]	; (800493c <HAL_DMA_Abort_IT+0x1a8>)
 80047d6:	4293      	cmp	r3, r2
 80047d8:	d040      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a58      	ldr	r2, [pc, #352]	; (8004940 <HAL_DMA_Abort_IT+0x1ac>)
 80047e0:	4293      	cmp	r3, r2
 80047e2:	d03b      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	4a56      	ldr	r2, [pc, #344]	; (8004944 <HAL_DMA_Abort_IT+0x1b0>)
 80047ea:	4293      	cmp	r3, r2
 80047ec:	d036      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	4a55      	ldr	r2, [pc, #340]	; (8004948 <HAL_DMA_Abort_IT+0x1b4>)
 80047f4:	4293      	cmp	r3, r2
 80047f6:	d031      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	4a53      	ldr	r2, [pc, #332]	; (800494c <HAL_DMA_Abort_IT+0x1b8>)
 80047fe:	4293      	cmp	r3, r2
 8004800:	d02c      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	4a52      	ldr	r2, [pc, #328]	; (8004950 <HAL_DMA_Abort_IT+0x1bc>)
 8004808:	4293      	cmp	r3, r2
 800480a:	d027      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	4a50      	ldr	r2, [pc, #320]	; (8004954 <HAL_DMA_Abort_IT+0x1c0>)
 8004812:	4293      	cmp	r3, r2
 8004814:	d022      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	4a4f      	ldr	r2, [pc, #316]	; (8004958 <HAL_DMA_Abort_IT+0x1c4>)
 800481c:	4293      	cmp	r3, r2
 800481e:	d01d      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	4a4d      	ldr	r2, [pc, #308]	; (800495c <HAL_DMA_Abort_IT+0x1c8>)
 8004826:	4293      	cmp	r3, r2
 8004828:	d018      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	681b      	ldr	r3, [r3, #0]
 800482e:	4a4c      	ldr	r2, [pc, #304]	; (8004960 <HAL_DMA_Abort_IT+0x1cc>)
 8004830:	4293      	cmp	r3, r2
 8004832:	d013      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 8004834:	687b      	ldr	r3, [r7, #4]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	4a4a      	ldr	r2, [pc, #296]	; (8004964 <HAL_DMA_Abort_IT+0x1d0>)
 800483a:	4293      	cmp	r3, r2
 800483c:	d00e      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	4a49      	ldr	r2, [pc, #292]	; (8004968 <HAL_DMA_Abort_IT+0x1d4>)
 8004844:	4293      	cmp	r3, r2
 8004846:	d009      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	4a47      	ldr	r2, [pc, #284]	; (800496c <HAL_DMA_Abort_IT+0x1d8>)
 800484e:	4293      	cmp	r3, r2
 8004850:	d004      	beq.n	800485c <HAL_DMA_Abort_IT+0xc8>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	4a46      	ldr	r2, [pc, #280]	; (8004970 <HAL_DMA_Abort_IT+0x1dc>)
 8004858:	4293      	cmp	r3, r2
 800485a:	d101      	bne.n	8004860 <HAL_DMA_Abort_IT+0xcc>
 800485c:	2301      	movs	r3, #1
 800485e:	e000      	b.n	8004862 <HAL_DMA_Abort_IT+0xce>
 8004860:	2300      	movs	r3, #0
 8004862:	2b00      	cmp	r3, #0
 8004864:	f000 8086 	beq.w	8004974 <HAL_DMA_Abort_IT+0x1e0>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	2204      	movs	r2, #4
 800486c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	4a2f      	ldr	r2, [pc, #188]	; (8004934 <HAL_DMA_Abort_IT+0x1a0>)
 8004876:	4293      	cmp	r3, r2
 8004878:	d04a      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	4a2e      	ldr	r2, [pc, #184]	; (8004938 <HAL_DMA_Abort_IT+0x1a4>)
 8004880:	4293      	cmp	r3, r2
 8004882:	d045      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	4a2c      	ldr	r2, [pc, #176]	; (800493c <HAL_DMA_Abort_IT+0x1a8>)
 800488a:	4293      	cmp	r3, r2
 800488c:	d040      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	4a2b      	ldr	r2, [pc, #172]	; (8004940 <HAL_DMA_Abort_IT+0x1ac>)
 8004894:	4293      	cmp	r3, r2
 8004896:	d03b      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	4a29      	ldr	r2, [pc, #164]	; (8004944 <HAL_DMA_Abort_IT+0x1b0>)
 800489e:	4293      	cmp	r3, r2
 80048a0:	d036      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	4a28      	ldr	r2, [pc, #160]	; (8004948 <HAL_DMA_Abort_IT+0x1b4>)
 80048a8:	4293      	cmp	r3, r2
 80048aa:	d031      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	4a26      	ldr	r2, [pc, #152]	; (800494c <HAL_DMA_Abort_IT+0x1b8>)
 80048b2:	4293      	cmp	r3, r2
 80048b4:	d02c      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	4a25      	ldr	r2, [pc, #148]	; (8004950 <HAL_DMA_Abort_IT+0x1bc>)
 80048bc:	4293      	cmp	r3, r2
 80048be:	d027      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	4a23      	ldr	r2, [pc, #140]	; (8004954 <HAL_DMA_Abort_IT+0x1c0>)
 80048c6:	4293      	cmp	r3, r2
 80048c8:	d022      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	4a22      	ldr	r2, [pc, #136]	; (8004958 <HAL_DMA_Abort_IT+0x1c4>)
 80048d0:	4293      	cmp	r3, r2
 80048d2:	d01d      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	4a20      	ldr	r2, [pc, #128]	; (800495c <HAL_DMA_Abort_IT+0x1c8>)
 80048da:	4293      	cmp	r3, r2
 80048dc:	d018      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	4a1f      	ldr	r2, [pc, #124]	; (8004960 <HAL_DMA_Abort_IT+0x1cc>)
 80048e4:	4293      	cmp	r3, r2
 80048e6:	d013      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	4a1d      	ldr	r2, [pc, #116]	; (8004964 <HAL_DMA_Abort_IT+0x1d0>)
 80048ee:	4293      	cmp	r3, r2
 80048f0:	d00e      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	4a1c      	ldr	r2, [pc, #112]	; (8004968 <HAL_DMA_Abort_IT+0x1d4>)
 80048f8:	4293      	cmp	r3, r2
 80048fa:	d009      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	4a1a      	ldr	r2, [pc, #104]	; (800496c <HAL_DMA_Abort_IT+0x1d8>)
 8004902:	4293      	cmp	r3, r2
 8004904:	d004      	beq.n	8004910 <HAL_DMA_Abort_IT+0x17c>
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	4a19      	ldr	r2, [pc, #100]	; (8004970 <HAL_DMA_Abort_IT+0x1dc>)
 800490c:	4293      	cmp	r3, r2
 800490e:	d108      	bne.n	8004922 <HAL_DMA_Abort_IT+0x18e>
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	681a      	ldr	r2, [r3, #0]
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	f022 0201 	bic.w	r2, r2, #1
 800491e:	601a      	str	r2, [r3, #0]
 8004920:	e178      	b.n	8004c14 <HAL_DMA_Abort_IT+0x480>
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	681a      	ldr	r2, [r3, #0]
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	f022 0201 	bic.w	r2, r2, #1
 8004930:	601a      	str	r2, [r3, #0]
 8004932:	e16f      	b.n	8004c14 <HAL_DMA_Abort_IT+0x480>
 8004934:	40020010 	.word	0x40020010
 8004938:	40020028 	.word	0x40020028
 800493c:	40020040 	.word	0x40020040
 8004940:	40020058 	.word	0x40020058
 8004944:	40020070 	.word	0x40020070
 8004948:	40020088 	.word	0x40020088
 800494c:	400200a0 	.word	0x400200a0
 8004950:	400200b8 	.word	0x400200b8
 8004954:	40020410 	.word	0x40020410
 8004958:	40020428 	.word	0x40020428
 800495c:	40020440 	.word	0x40020440
 8004960:	40020458 	.word	0x40020458
 8004964:	40020470 	.word	0x40020470
 8004968:	40020488 	.word	0x40020488
 800496c:	400204a0 	.word	0x400204a0
 8004970:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	681a      	ldr	r2, [r3, #0]
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	f022 020e 	bic.w	r2, r2, #14
 8004982:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	4a6c      	ldr	r2, [pc, #432]	; (8004b3c <HAL_DMA_Abort_IT+0x3a8>)
 800498a:	4293      	cmp	r3, r2
 800498c:	d04a      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	4a6b      	ldr	r2, [pc, #428]	; (8004b40 <HAL_DMA_Abort_IT+0x3ac>)
 8004994:	4293      	cmp	r3, r2
 8004996:	d045      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	4a69      	ldr	r2, [pc, #420]	; (8004b44 <HAL_DMA_Abort_IT+0x3b0>)
 800499e:	4293      	cmp	r3, r2
 80049a0:	d040      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	4a68      	ldr	r2, [pc, #416]	; (8004b48 <HAL_DMA_Abort_IT+0x3b4>)
 80049a8:	4293      	cmp	r3, r2
 80049aa:	d03b      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	4a66      	ldr	r2, [pc, #408]	; (8004b4c <HAL_DMA_Abort_IT+0x3b8>)
 80049b2:	4293      	cmp	r3, r2
 80049b4:	d036      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	4a65      	ldr	r2, [pc, #404]	; (8004b50 <HAL_DMA_Abort_IT+0x3bc>)
 80049bc:	4293      	cmp	r3, r2
 80049be:	d031      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	4a63      	ldr	r2, [pc, #396]	; (8004b54 <HAL_DMA_Abort_IT+0x3c0>)
 80049c6:	4293      	cmp	r3, r2
 80049c8:	d02c      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	4a62      	ldr	r2, [pc, #392]	; (8004b58 <HAL_DMA_Abort_IT+0x3c4>)
 80049d0:	4293      	cmp	r3, r2
 80049d2:	d027      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	4a60      	ldr	r2, [pc, #384]	; (8004b5c <HAL_DMA_Abort_IT+0x3c8>)
 80049da:	4293      	cmp	r3, r2
 80049dc:	d022      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	4a5f      	ldr	r2, [pc, #380]	; (8004b60 <HAL_DMA_Abort_IT+0x3cc>)
 80049e4:	4293      	cmp	r3, r2
 80049e6:	d01d      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	4a5d      	ldr	r2, [pc, #372]	; (8004b64 <HAL_DMA_Abort_IT+0x3d0>)
 80049ee:	4293      	cmp	r3, r2
 80049f0:	d018      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	4a5c      	ldr	r2, [pc, #368]	; (8004b68 <HAL_DMA_Abort_IT+0x3d4>)
 80049f8:	4293      	cmp	r3, r2
 80049fa:	d013      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	4a5a      	ldr	r2, [pc, #360]	; (8004b6c <HAL_DMA_Abort_IT+0x3d8>)
 8004a02:	4293      	cmp	r3, r2
 8004a04:	d00e      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	4a59      	ldr	r2, [pc, #356]	; (8004b70 <HAL_DMA_Abort_IT+0x3dc>)
 8004a0c:	4293      	cmp	r3, r2
 8004a0e:	d009      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	4a57      	ldr	r2, [pc, #348]	; (8004b74 <HAL_DMA_Abort_IT+0x3e0>)
 8004a16:	4293      	cmp	r3, r2
 8004a18:	d004      	beq.n	8004a24 <HAL_DMA_Abort_IT+0x290>
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	4a56      	ldr	r2, [pc, #344]	; (8004b78 <HAL_DMA_Abort_IT+0x3e4>)
 8004a20:	4293      	cmp	r3, r2
 8004a22:	d108      	bne.n	8004a36 <HAL_DMA_Abort_IT+0x2a2>
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	681a      	ldr	r2, [r3, #0]
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	f022 0201 	bic.w	r2, r2, #1
 8004a32:	601a      	str	r2, [r3, #0]
 8004a34:	e007      	b.n	8004a46 <HAL_DMA_Abort_IT+0x2b2>
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	681a      	ldr	r2, [r3, #0]
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	f022 0201 	bic.w	r2, r2, #1
 8004a44:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	4a3c      	ldr	r2, [pc, #240]	; (8004b3c <HAL_DMA_Abort_IT+0x3a8>)
 8004a4c:	4293      	cmp	r3, r2
 8004a4e:	d072      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	4a3a      	ldr	r2, [pc, #232]	; (8004b40 <HAL_DMA_Abort_IT+0x3ac>)
 8004a56:	4293      	cmp	r3, r2
 8004a58:	d06d      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	681b      	ldr	r3, [r3, #0]
 8004a5e:	4a39      	ldr	r2, [pc, #228]	; (8004b44 <HAL_DMA_Abort_IT+0x3b0>)
 8004a60:	4293      	cmp	r3, r2
 8004a62:	d068      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	4a37      	ldr	r2, [pc, #220]	; (8004b48 <HAL_DMA_Abort_IT+0x3b4>)
 8004a6a:	4293      	cmp	r3, r2
 8004a6c:	d063      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	4a36      	ldr	r2, [pc, #216]	; (8004b4c <HAL_DMA_Abort_IT+0x3b8>)
 8004a74:	4293      	cmp	r3, r2
 8004a76:	d05e      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	4a34      	ldr	r2, [pc, #208]	; (8004b50 <HAL_DMA_Abort_IT+0x3bc>)
 8004a7e:	4293      	cmp	r3, r2
 8004a80:	d059      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	4a33      	ldr	r2, [pc, #204]	; (8004b54 <HAL_DMA_Abort_IT+0x3c0>)
 8004a88:	4293      	cmp	r3, r2
 8004a8a:	d054      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	4a31      	ldr	r2, [pc, #196]	; (8004b58 <HAL_DMA_Abort_IT+0x3c4>)
 8004a92:	4293      	cmp	r3, r2
 8004a94:	d04f      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	4a30      	ldr	r2, [pc, #192]	; (8004b5c <HAL_DMA_Abort_IT+0x3c8>)
 8004a9c:	4293      	cmp	r3, r2
 8004a9e:	d04a      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	4a2e      	ldr	r2, [pc, #184]	; (8004b60 <HAL_DMA_Abort_IT+0x3cc>)
 8004aa6:	4293      	cmp	r3, r2
 8004aa8:	d045      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	4a2d      	ldr	r2, [pc, #180]	; (8004b64 <HAL_DMA_Abort_IT+0x3d0>)
 8004ab0:	4293      	cmp	r3, r2
 8004ab2:	d040      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	4a2b      	ldr	r2, [pc, #172]	; (8004b68 <HAL_DMA_Abort_IT+0x3d4>)
 8004aba:	4293      	cmp	r3, r2
 8004abc:	d03b      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	4a2a      	ldr	r2, [pc, #168]	; (8004b6c <HAL_DMA_Abort_IT+0x3d8>)
 8004ac4:	4293      	cmp	r3, r2
 8004ac6:	d036      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	4a28      	ldr	r2, [pc, #160]	; (8004b70 <HAL_DMA_Abort_IT+0x3dc>)
 8004ace:	4293      	cmp	r3, r2
 8004ad0:	d031      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	4a27      	ldr	r2, [pc, #156]	; (8004b74 <HAL_DMA_Abort_IT+0x3e0>)
 8004ad8:	4293      	cmp	r3, r2
 8004ada:	d02c      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	4a25      	ldr	r2, [pc, #148]	; (8004b78 <HAL_DMA_Abort_IT+0x3e4>)
 8004ae2:	4293      	cmp	r3, r2
 8004ae4:	d027      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	4a24      	ldr	r2, [pc, #144]	; (8004b7c <HAL_DMA_Abort_IT+0x3e8>)
 8004aec:	4293      	cmp	r3, r2
 8004aee:	d022      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	4a22      	ldr	r2, [pc, #136]	; (8004b80 <HAL_DMA_Abort_IT+0x3ec>)
 8004af6:	4293      	cmp	r3, r2
 8004af8:	d01d      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	4a21      	ldr	r2, [pc, #132]	; (8004b84 <HAL_DMA_Abort_IT+0x3f0>)
 8004b00:	4293      	cmp	r3, r2
 8004b02:	d018      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	4a1f      	ldr	r2, [pc, #124]	; (8004b88 <HAL_DMA_Abort_IT+0x3f4>)
 8004b0a:	4293      	cmp	r3, r2
 8004b0c:	d013      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	4a1e      	ldr	r2, [pc, #120]	; (8004b8c <HAL_DMA_Abort_IT+0x3f8>)
 8004b14:	4293      	cmp	r3, r2
 8004b16:	d00e      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	4a1c      	ldr	r2, [pc, #112]	; (8004b90 <HAL_DMA_Abort_IT+0x3fc>)
 8004b1e:	4293      	cmp	r3, r2
 8004b20:	d009      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	4a1b      	ldr	r2, [pc, #108]	; (8004b94 <HAL_DMA_Abort_IT+0x400>)
 8004b28:	4293      	cmp	r3, r2
 8004b2a:	d004      	beq.n	8004b36 <HAL_DMA_Abort_IT+0x3a2>
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	4a19      	ldr	r2, [pc, #100]	; (8004b98 <HAL_DMA_Abort_IT+0x404>)
 8004b32:	4293      	cmp	r3, r2
 8004b34:	d132      	bne.n	8004b9c <HAL_DMA_Abort_IT+0x408>
 8004b36:	2301      	movs	r3, #1
 8004b38:	e031      	b.n	8004b9e <HAL_DMA_Abort_IT+0x40a>
 8004b3a:	bf00      	nop
 8004b3c:	40020010 	.word	0x40020010
 8004b40:	40020028 	.word	0x40020028
 8004b44:	40020040 	.word	0x40020040
 8004b48:	40020058 	.word	0x40020058
 8004b4c:	40020070 	.word	0x40020070
 8004b50:	40020088 	.word	0x40020088
 8004b54:	400200a0 	.word	0x400200a0
 8004b58:	400200b8 	.word	0x400200b8
 8004b5c:	40020410 	.word	0x40020410
 8004b60:	40020428 	.word	0x40020428
 8004b64:	40020440 	.word	0x40020440
 8004b68:	40020458 	.word	0x40020458
 8004b6c:	40020470 	.word	0x40020470
 8004b70:	40020488 	.word	0x40020488
 8004b74:	400204a0 	.word	0x400204a0
 8004b78:	400204b8 	.word	0x400204b8
 8004b7c:	58025408 	.word	0x58025408
 8004b80:	5802541c 	.word	0x5802541c
 8004b84:	58025430 	.word	0x58025430
 8004b88:	58025444 	.word	0x58025444
 8004b8c:	58025458 	.word	0x58025458
 8004b90:	5802546c 	.word	0x5802546c
 8004b94:	58025480 	.word	0x58025480
 8004b98:	58025494 	.word	0x58025494
 8004b9c:	2300      	movs	r3, #0
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	d028      	beq.n	8004bf4 <HAL_DMA_Abort_IT+0x460>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004ba6:	681a      	ldr	r2, [r3, #0]
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004bac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004bb0:	601a      	str	r2, [r3, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004bb6:	60fb      	str	r3, [r7, #12]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004bbc:	f003 031f 	and.w	r3, r3, #31
 8004bc0:	2201      	movs	r2, #1
 8004bc2:	409a      	lsls	r2, r3
 8004bc4:	68fb      	ldr	r3, [r7, #12]
 8004bc6:	605a      	str	r2, [r3, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004bcc:	687a      	ldr	r2, [r7, #4]
 8004bce:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8004bd0:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	d00c      	beq.n	8004bf4 <HAL_DMA_Abort_IT+0x460>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004bde:	681a      	ldr	r2, [r3, #0]
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004be4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004be8:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8004bea:	687b      	ldr	r3, [r7, #4]
 8004bec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bee:	687a      	ldr	r2, [r7, #4]
 8004bf0:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8004bf2:	605a      	str	r2, [r3, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	2201      	movs	r2, #1
 8004bf8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	2200      	movs	r2, #0
 8004c00:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004c08:	2b00      	cmp	r3, #0
 8004c0a:	d003      	beq.n	8004c14 <HAL_DMA_Abort_IT+0x480>
      {
        hdma->XferAbortCallback(hdma);
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004c10:	6878      	ldr	r0, [r7, #4]
 8004c12:	4798      	blx	r3
      }
    }
  }

  return HAL_OK;
 8004c14:	2300      	movs	r3, #0
}
 8004c16:	4618      	mov	r0, r3
 8004c18:	3710      	adds	r7, #16
 8004c1a:	46bd      	mov	sp, r7
 8004c1c:	bd80      	pop	{r7, pc}
 8004c1e:	bf00      	nop

08004c20 <HAL_DMA_IRQHandler>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8004c20:	b580      	push	{r7, lr}
 8004c22:	b08a      	sub	sp, #40	; 0x28
 8004c24:	af00      	add	r7, sp, #0
 8004c26:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr_dma, tmpisr_bdma;
  uint32_t ccr_reg;
  __IO uint32_t count = 0U;
 8004c28:	2300      	movs	r3, #0
 8004c2a:	60fb      	str	r3, [r7, #12]
  uint32_t timeout = SystemCoreClock / 9600U;
 8004c2c:	4b67      	ldr	r3, [pc, #412]	; (8004dcc <HAL_DMA_IRQHandler+0x1ac>)
 8004c2e:	681b      	ldr	r3, [r3, #0]
 8004c30:	4a67      	ldr	r2, [pc, #412]	; (8004dd0 <HAL_DMA_IRQHandler+0x1b0>)
 8004c32:	fba2 2303 	umull	r2, r3, r2, r3
 8004c36:	0a9b      	lsrs	r3, r3, #10
 8004c38:	627b      	str	r3, [r7, #36]	; 0x24

  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c3e:	623b      	str	r3, [r7, #32]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c44:	61fb      	str	r3, [r7, #28]

  tmpisr_dma  = regs_dma->ISR;
 8004c46:	6a3b      	ldr	r3, [r7, #32]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	61bb      	str	r3, [r7, #24]
  tmpisr_bdma = regs_bdma->ISR;
 8004c4c:	69fb      	ldr	r3, [r7, #28]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	617b      	str	r3, [r7, #20]

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U)  /* DMA1 or DMA2 instance */
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	4a5f      	ldr	r2, [pc, #380]	; (8004dd4 <HAL_DMA_IRQHandler+0x1b4>)
 8004c58:	4293      	cmp	r3, r2
 8004c5a:	d04a      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	4a5d      	ldr	r2, [pc, #372]	; (8004dd8 <HAL_DMA_IRQHandler+0x1b8>)
 8004c62:	4293      	cmp	r3, r2
 8004c64:	d045      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	4a5c      	ldr	r2, [pc, #368]	; (8004ddc <HAL_DMA_IRQHandler+0x1bc>)
 8004c6c:	4293      	cmp	r3, r2
 8004c6e:	d040      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	4a5a      	ldr	r2, [pc, #360]	; (8004de0 <HAL_DMA_IRQHandler+0x1c0>)
 8004c76:	4293      	cmp	r3, r2
 8004c78:	d03b      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	4a59      	ldr	r2, [pc, #356]	; (8004de4 <HAL_DMA_IRQHandler+0x1c4>)
 8004c80:	4293      	cmp	r3, r2
 8004c82:	d036      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	681b      	ldr	r3, [r3, #0]
 8004c88:	4a57      	ldr	r2, [pc, #348]	; (8004de8 <HAL_DMA_IRQHandler+0x1c8>)
 8004c8a:	4293      	cmp	r3, r2
 8004c8c:	d031      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	4a56      	ldr	r2, [pc, #344]	; (8004dec <HAL_DMA_IRQHandler+0x1cc>)
 8004c94:	4293      	cmp	r3, r2
 8004c96:	d02c      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	681b      	ldr	r3, [r3, #0]
 8004c9c:	4a54      	ldr	r2, [pc, #336]	; (8004df0 <HAL_DMA_IRQHandler+0x1d0>)
 8004c9e:	4293      	cmp	r3, r2
 8004ca0:	d027      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	4a53      	ldr	r2, [pc, #332]	; (8004df4 <HAL_DMA_IRQHandler+0x1d4>)
 8004ca8:	4293      	cmp	r3, r2
 8004caa:	d022      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	681b      	ldr	r3, [r3, #0]
 8004cb0:	4a51      	ldr	r2, [pc, #324]	; (8004df8 <HAL_DMA_IRQHandler+0x1d8>)
 8004cb2:	4293      	cmp	r3, r2
 8004cb4:	d01d      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004cb6:	687b      	ldr	r3, [r7, #4]
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	4a50      	ldr	r2, [pc, #320]	; (8004dfc <HAL_DMA_IRQHandler+0x1dc>)
 8004cbc:	4293      	cmp	r3, r2
 8004cbe:	d018      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	4a4e      	ldr	r2, [pc, #312]	; (8004e00 <HAL_DMA_IRQHandler+0x1e0>)
 8004cc6:	4293      	cmp	r3, r2
 8004cc8:	d013      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	4a4d      	ldr	r2, [pc, #308]	; (8004e04 <HAL_DMA_IRQHandler+0x1e4>)
 8004cd0:	4293      	cmp	r3, r2
 8004cd2:	d00e      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	4a4b      	ldr	r2, [pc, #300]	; (8004e08 <HAL_DMA_IRQHandler+0x1e8>)
 8004cda:	4293      	cmp	r3, r2
 8004cdc:	d009      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	681b      	ldr	r3, [r3, #0]
 8004ce2:	4a4a      	ldr	r2, [pc, #296]	; (8004e0c <HAL_DMA_IRQHandler+0x1ec>)
 8004ce4:	4293      	cmp	r3, r2
 8004ce6:	d004      	beq.n	8004cf2 <HAL_DMA_IRQHandler+0xd2>
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	4a48      	ldr	r2, [pc, #288]	; (8004e10 <HAL_DMA_IRQHandler+0x1f0>)
 8004cee:	4293      	cmp	r3, r2
 8004cf0:	d101      	bne.n	8004cf6 <HAL_DMA_IRQHandler+0xd6>
 8004cf2:	2301      	movs	r3, #1
 8004cf4:	e000      	b.n	8004cf8 <HAL_DMA_IRQHandler+0xd8>
 8004cf6:	2300      	movs	r3, #0
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	f000 842b 	beq.w	8005554 <HAL_DMA_IRQHandler+0x934>
  {
    /* Transfer Error Interrupt management ***************************************/
    if ((tmpisr_dma & (DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004d02:	f003 031f 	and.w	r3, r3, #31
 8004d06:	2208      	movs	r2, #8
 8004d08:	409a      	lsls	r2, r3
 8004d0a:	69bb      	ldr	r3, [r7, #24]
 8004d0c:	4013      	ands	r3, r2
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	f000 80a2 	beq.w	8004e58 <HAL_DMA_IRQHandler+0x238>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != 0U)
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	4a2e      	ldr	r2, [pc, #184]	; (8004dd4 <HAL_DMA_IRQHandler+0x1b4>)
 8004d1a:	4293      	cmp	r3, r2
 8004d1c:	d04a      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	4a2d      	ldr	r2, [pc, #180]	; (8004dd8 <HAL_DMA_IRQHandler+0x1b8>)
 8004d24:	4293      	cmp	r3, r2
 8004d26:	d045      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	4a2b      	ldr	r2, [pc, #172]	; (8004ddc <HAL_DMA_IRQHandler+0x1bc>)
 8004d2e:	4293      	cmp	r3, r2
 8004d30:	d040      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	4a2a      	ldr	r2, [pc, #168]	; (8004de0 <HAL_DMA_IRQHandler+0x1c0>)
 8004d38:	4293      	cmp	r3, r2
 8004d3a:	d03b      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	681b      	ldr	r3, [r3, #0]
 8004d40:	4a28      	ldr	r2, [pc, #160]	; (8004de4 <HAL_DMA_IRQHandler+0x1c4>)
 8004d42:	4293      	cmp	r3, r2
 8004d44:	d036      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	4a27      	ldr	r2, [pc, #156]	; (8004de8 <HAL_DMA_IRQHandler+0x1c8>)
 8004d4c:	4293      	cmp	r3, r2
 8004d4e:	d031      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	4a25      	ldr	r2, [pc, #148]	; (8004dec <HAL_DMA_IRQHandler+0x1cc>)
 8004d56:	4293      	cmp	r3, r2
 8004d58:	d02c      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d5a:	687b      	ldr	r3, [r7, #4]
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	4a24      	ldr	r2, [pc, #144]	; (8004df0 <HAL_DMA_IRQHandler+0x1d0>)
 8004d60:	4293      	cmp	r3, r2
 8004d62:	d027      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	4a22      	ldr	r2, [pc, #136]	; (8004df4 <HAL_DMA_IRQHandler+0x1d4>)
 8004d6a:	4293      	cmp	r3, r2
 8004d6c:	d022      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	4a21      	ldr	r2, [pc, #132]	; (8004df8 <HAL_DMA_IRQHandler+0x1d8>)
 8004d74:	4293      	cmp	r3, r2
 8004d76:	d01d      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	4a1f      	ldr	r2, [pc, #124]	; (8004dfc <HAL_DMA_IRQHandler+0x1dc>)
 8004d7e:	4293      	cmp	r3, r2
 8004d80:	d018      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	4a1e      	ldr	r2, [pc, #120]	; (8004e00 <HAL_DMA_IRQHandler+0x1e0>)
 8004d88:	4293      	cmp	r3, r2
 8004d8a:	d013      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	4a1c      	ldr	r2, [pc, #112]	; (8004e04 <HAL_DMA_IRQHandler+0x1e4>)
 8004d92:	4293      	cmp	r3, r2
 8004d94:	d00e      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	4a1b      	ldr	r2, [pc, #108]	; (8004e08 <HAL_DMA_IRQHandler+0x1e8>)
 8004d9c:	4293      	cmp	r3, r2
 8004d9e:	d009      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	4a19      	ldr	r2, [pc, #100]	; (8004e0c <HAL_DMA_IRQHandler+0x1ec>)
 8004da6:	4293      	cmp	r3, r2
 8004da8:	d004      	beq.n	8004db4 <HAL_DMA_IRQHandler+0x194>
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	4a18      	ldr	r2, [pc, #96]	; (8004e10 <HAL_DMA_IRQHandler+0x1f0>)
 8004db0:	4293      	cmp	r3, r2
 8004db2:	d12f      	bne.n	8004e14 <HAL_DMA_IRQHandler+0x1f4>
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	f003 0304 	and.w	r3, r3, #4
 8004dbe:	2b00      	cmp	r3, #0
 8004dc0:	bf14      	ite	ne
 8004dc2:	2301      	movne	r3, #1
 8004dc4:	2300      	moveq	r3, #0
 8004dc6:	b2db      	uxtb	r3, r3
 8004dc8:	e02e      	b.n	8004e28 <HAL_DMA_IRQHandler+0x208>
 8004dca:	bf00      	nop
 8004dcc:	24000004 	.word	0x24000004
 8004dd0:	1b4e81b5 	.word	0x1b4e81b5
 8004dd4:	40020010 	.word	0x40020010
 8004dd8:	40020028 	.word	0x40020028
 8004ddc:	40020040 	.word	0x40020040
 8004de0:	40020058 	.word	0x40020058
 8004de4:	40020070 	.word	0x40020070
 8004de8:	40020088 	.word	0x40020088
 8004dec:	400200a0 	.word	0x400200a0
 8004df0:	400200b8 	.word	0x400200b8
 8004df4:	40020410 	.word	0x40020410
 8004df8:	40020428 	.word	0x40020428
 8004dfc:	40020440 	.word	0x40020440
 8004e00:	40020458 	.word	0x40020458
 8004e04:	40020470 	.word	0x40020470
 8004e08:	40020488 	.word	0x40020488
 8004e0c:	400204a0 	.word	0x400204a0
 8004e10:	400204b8 	.word	0x400204b8
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	f003 0308 	and.w	r3, r3, #8
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	bf14      	ite	ne
 8004e22:	2301      	movne	r3, #1
 8004e24:	2300      	moveq	r3, #0
 8004e26:	b2db      	uxtb	r3, r3
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d015      	beq.n	8004e58 <HAL_DMA_IRQHandler+0x238>
      {
        /* Disable the transfer error interrupt */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TE);
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	681a      	ldr	r2, [r3, #0]
 8004e32:	687b      	ldr	r3, [r7, #4]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	f022 0204 	bic.w	r2, r2, #4
 8004e3a:	601a      	str	r2, [r3, #0]

        /* Clear the transfer error flag */
        regs_dma->IFCR = DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e40:	f003 031f 	and.w	r3, r3, #31
 8004e44:	2208      	movs	r2, #8
 8004e46:	409a      	lsls	r2, r3
 8004e48:	6a3b      	ldr	r3, [r7, #32]
 8004e4a:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004e50:	f043 0201 	orr.w	r2, r3, #1
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* FIFO Error Interrupt management ******************************************/
    if ((tmpisr_dma & (DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e5c:	f003 031f 	and.w	r3, r3, #31
 8004e60:	69ba      	ldr	r2, [r7, #24]
 8004e62:	fa22 f303 	lsr.w	r3, r2, r3
 8004e66:	f003 0301 	and.w	r3, r3, #1
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d06e      	beq.n	8004f4c <HAL_DMA_IRQHandler+0x32c>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != 0U)
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	4a69      	ldr	r2, [pc, #420]	; (8005018 <HAL_DMA_IRQHandler+0x3f8>)
 8004e74:	4293      	cmp	r3, r2
 8004e76:	d04a      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	4a67      	ldr	r2, [pc, #412]	; (800501c <HAL_DMA_IRQHandler+0x3fc>)
 8004e7e:	4293      	cmp	r3, r2
 8004e80:	d045      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	4a66      	ldr	r2, [pc, #408]	; (8005020 <HAL_DMA_IRQHandler+0x400>)
 8004e88:	4293      	cmp	r3, r2
 8004e8a:	d040      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	4a64      	ldr	r2, [pc, #400]	; (8005024 <HAL_DMA_IRQHandler+0x404>)
 8004e92:	4293      	cmp	r3, r2
 8004e94:	d03b      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	681b      	ldr	r3, [r3, #0]
 8004e9a:	4a63      	ldr	r2, [pc, #396]	; (8005028 <HAL_DMA_IRQHandler+0x408>)
 8004e9c:	4293      	cmp	r3, r2
 8004e9e:	d036      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	4a61      	ldr	r2, [pc, #388]	; (800502c <HAL_DMA_IRQHandler+0x40c>)
 8004ea6:	4293      	cmp	r3, r2
 8004ea8:	d031      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	4a60      	ldr	r2, [pc, #384]	; (8005030 <HAL_DMA_IRQHandler+0x410>)
 8004eb0:	4293      	cmp	r3, r2
 8004eb2:	d02c      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	681b      	ldr	r3, [r3, #0]
 8004eb8:	4a5e      	ldr	r2, [pc, #376]	; (8005034 <HAL_DMA_IRQHandler+0x414>)
 8004eba:	4293      	cmp	r3, r2
 8004ebc:	d027      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	4a5d      	ldr	r2, [pc, #372]	; (8005038 <HAL_DMA_IRQHandler+0x418>)
 8004ec4:	4293      	cmp	r3, r2
 8004ec6:	d022      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	4a5b      	ldr	r2, [pc, #364]	; (800503c <HAL_DMA_IRQHandler+0x41c>)
 8004ece:	4293      	cmp	r3, r2
 8004ed0:	d01d      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	4a5a      	ldr	r2, [pc, #360]	; (8005040 <HAL_DMA_IRQHandler+0x420>)
 8004ed8:	4293      	cmp	r3, r2
 8004eda:	d018      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	4a58      	ldr	r2, [pc, #352]	; (8005044 <HAL_DMA_IRQHandler+0x424>)
 8004ee2:	4293      	cmp	r3, r2
 8004ee4:	d013      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	4a57      	ldr	r2, [pc, #348]	; (8005048 <HAL_DMA_IRQHandler+0x428>)
 8004eec:	4293      	cmp	r3, r2
 8004eee:	d00e      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	4a55      	ldr	r2, [pc, #340]	; (800504c <HAL_DMA_IRQHandler+0x42c>)
 8004ef6:	4293      	cmp	r3, r2
 8004ef8:	d009      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	4a54      	ldr	r2, [pc, #336]	; (8005050 <HAL_DMA_IRQHandler+0x430>)
 8004f00:	4293      	cmp	r3, r2
 8004f02:	d004      	beq.n	8004f0e <HAL_DMA_IRQHandler+0x2ee>
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	4a52      	ldr	r2, [pc, #328]	; (8005054 <HAL_DMA_IRQHandler+0x434>)
 8004f0a:	4293      	cmp	r3, r2
 8004f0c:	d10a      	bne.n	8004f24 <HAL_DMA_IRQHandler+0x304>
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	695b      	ldr	r3, [r3, #20]
 8004f14:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f18:	2b00      	cmp	r3, #0
 8004f1a:	bf14      	ite	ne
 8004f1c:	2301      	movne	r3, #1
 8004f1e:	2300      	moveq	r3, #0
 8004f20:	b2db      	uxtb	r3, r3
 8004f22:	e003      	b.n	8004f2c <HAL_DMA_IRQHandler+0x30c>
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	2300      	movs	r3, #0
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d00d      	beq.n	8004f4c <HAL_DMA_IRQHandler+0x32c>
      {
        /* Clear the FIFO error flag */
        regs_dma->IFCR = DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f34:	f003 031f 	and.w	r3, r3, #31
 8004f38:	2201      	movs	r2, #1
 8004f3a:	409a      	lsls	r2, r3
 8004f3c:	6a3b      	ldr	r3, [r7, #32]
 8004f3e:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004f44:	f043 0202 	orr.w	r2, r3, #2
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Direct Mode Error Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f50:	f003 031f 	and.w	r3, r3, #31
 8004f54:	2204      	movs	r2, #4
 8004f56:	409a      	lsls	r2, r3
 8004f58:	69bb      	ldr	r3, [r7, #24]
 8004f5a:	4013      	ands	r3, r2
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	f000 808f 	beq.w	8005080 <HAL_DMA_IRQHandler+0x460>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != 0U)
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	681b      	ldr	r3, [r3, #0]
 8004f66:	4a2c      	ldr	r2, [pc, #176]	; (8005018 <HAL_DMA_IRQHandler+0x3f8>)
 8004f68:	4293      	cmp	r3, r2
 8004f6a:	d04a      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	4a2a      	ldr	r2, [pc, #168]	; (800501c <HAL_DMA_IRQHandler+0x3fc>)
 8004f72:	4293      	cmp	r3, r2
 8004f74:	d045      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	4a29      	ldr	r2, [pc, #164]	; (8005020 <HAL_DMA_IRQHandler+0x400>)
 8004f7c:	4293      	cmp	r3, r2
 8004f7e:	d040      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	4a27      	ldr	r2, [pc, #156]	; (8005024 <HAL_DMA_IRQHandler+0x404>)
 8004f86:	4293      	cmp	r3, r2
 8004f88:	d03b      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	4a26      	ldr	r2, [pc, #152]	; (8005028 <HAL_DMA_IRQHandler+0x408>)
 8004f90:	4293      	cmp	r3, r2
 8004f92:	d036      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	4a24      	ldr	r2, [pc, #144]	; (800502c <HAL_DMA_IRQHandler+0x40c>)
 8004f9a:	4293      	cmp	r3, r2
 8004f9c:	d031      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	681b      	ldr	r3, [r3, #0]
 8004fa2:	4a23      	ldr	r2, [pc, #140]	; (8005030 <HAL_DMA_IRQHandler+0x410>)
 8004fa4:	4293      	cmp	r3, r2
 8004fa6:	d02c      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	4a21      	ldr	r2, [pc, #132]	; (8005034 <HAL_DMA_IRQHandler+0x414>)
 8004fae:	4293      	cmp	r3, r2
 8004fb0:	d027      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	4a20      	ldr	r2, [pc, #128]	; (8005038 <HAL_DMA_IRQHandler+0x418>)
 8004fb8:	4293      	cmp	r3, r2
 8004fba:	d022      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	681b      	ldr	r3, [r3, #0]
 8004fc0:	4a1e      	ldr	r2, [pc, #120]	; (800503c <HAL_DMA_IRQHandler+0x41c>)
 8004fc2:	4293      	cmp	r3, r2
 8004fc4:	d01d      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	4a1d      	ldr	r2, [pc, #116]	; (8005040 <HAL_DMA_IRQHandler+0x420>)
 8004fcc:	4293      	cmp	r3, r2
 8004fce:	d018      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	4a1b      	ldr	r2, [pc, #108]	; (8005044 <HAL_DMA_IRQHandler+0x424>)
 8004fd6:	4293      	cmp	r3, r2
 8004fd8:	d013      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	4a1a      	ldr	r2, [pc, #104]	; (8005048 <HAL_DMA_IRQHandler+0x428>)
 8004fe0:	4293      	cmp	r3, r2
 8004fe2:	d00e      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	4a18      	ldr	r2, [pc, #96]	; (800504c <HAL_DMA_IRQHandler+0x42c>)
 8004fea:	4293      	cmp	r3, r2
 8004fec:	d009      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	4a17      	ldr	r2, [pc, #92]	; (8005050 <HAL_DMA_IRQHandler+0x430>)
 8004ff4:	4293      	cmp	r3, r2
 8004ff6:	d004      	beq.n	8005002 <HAL_DMA_IRQHandler+0x3e2>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	4a15      	ldr	r2, [pc, #84]	; (8005054 <HAL_DMA_IRQHandler+0x434>)
 8004ffe:	4293      	cmp	r3, r2
 8005000:	d12a      	bne.n	8005058 <HAL_DMA_IRQHandler+0x438>
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	f003 0302 	and.w	r3, r3, #2
 800500c:	2b00      	cmp	r3, #0
 800500e:	bf14      	ite	ne
 8005010:	2301      	movne	r3, #1
 8005012:	2300      	moveq	r3, #0
 8005014:	b2db      	uxtb	r3, r3
 8005016:	e023      	b.n	8005060 <HAL_DMA_IRQHandler+0x440>
 8005018:	40020010 	.word	0x40020010
 800501c:	40020028 	.word	0x40020028
 8005020:	40020040 	.word	0x40020040
 8005024:	40020058 	.word	0x40020058
 8005028:	40020070 	.word	0x40020070
 800502c:	40020088 	.word	0x40020088
 8005030:	400200a0 	.word	0x400200a0
 8005034:	400200b8 	.word	0x400200b8
 8005038:	40020410 	.word	0x40020410
 800503c:	40020428 	.word	0x40020428
 8005040:	40020440 	.word	0x40020440
 8005044:	40020458 	.word	0x40020458
 8005048:	40020470 	.word	0x40020470
 800504c:	40020488 	.word	0x40020488
 8005050:	400204a0 	.word	0x400204a0
 8005054:	400204b8 	.word	0x400204b8
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	2300      	movs	r3, #0
 8005060:	2b00      	cmp	r3, #0
 8005062:	d00d      	beq.n	8005080 <HAL_DMA_IRQHandler+0x460>
      {
        /* Clear the direct mode error flag */
        regs_dma->IFCR = DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005068:	f003 031f 	and.w	r3, r3, #31
 800506c:	2204      	movs	r2, #4
 800506e:	409a      	lsls	r2, r3
 8005070:	6a3b      	ldr	r3, [r7, #32]
 8005072:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005078:	f043 0204 	orr.w	r2, r3, #4
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Half Transfer Complete Interrupt management ******************************/
    if ((tmpisr_dma & (DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005084:	f003 031f 	and.w	r3, r3, #31
 8005088:	2210      	movs	r2, #16
 800508a:	409a      	lsls	r2, r3
 800508c:	69bb      	ldr	r3, [r7, #24]
 800508e:	4013      	ands	r3, r2
 8005090:	2b00      	cmp	r3, #0
 8005092:	f000 80a6 	beq.w	80051e2 <HAL_DMA_IRQHandler+0x5c2>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	4a85      	ldr	r2, [pc, #532]	; (80052b0 <HAL_DMA_IRQHandler+0x690>)
 800509c:	4293      	cmp	r3, r2
 800509e:	d04a      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	4a83      	ldr	r2, [pc, #524]	; (80052b4 <HAL_DMA_IRQHandler+0x694>)
 80050a6:	4293      	cmp	r3, r2
 80050a8:	d045      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	4a82      	ldr	r2, [pc, #520]	; (80052b8 <HAL_DMA_IRQHandler+0x698>)
 80050b0:	4293      	cmp	r3, r2
 80050b2:	d040      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	4a80      	ldr	r2, [pc, #512]	; (80052bc <HAL_DMA_IRQHandler+0x69c>)
 80050ba:	4293      	cmp	r3, r2
 80050bc:	d03b      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	4a7f      	ldr	r2, [pc, #508]	; (80052c0 <HAL_DMA_IRQHandler+0x6a0>)
 80050c4:	4293      	cmp	r3, r2
 80050c6:	d036      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	4a7d      	ldr	r2, [pc, #500]	; (80052c4 <HAL_DMA_IRQHandler+0x6a4>)
 80050ce:	4293      	cmp	r3, r2
 80050d0:	d031      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	4a7c      	ldr	r2, [pc, #496]	; (80052c8 <HAL_DMA_IRQHandler+0x6a8>)
 80050d8:	4293      	cmp	r3, r2
 80050da:	d02c      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	4a7a      	ldr	r2, [pc, #488]	; (80052cc <HAL_DMA_IRQHandler+0x6ac>)
 80050e2:	4293      	cmp	r3, r2
 80050e4:	d027      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	681b      	ldr	r3, [r3, #0]
 80050ea:	4a79      	ldr	r2, [pc, #484]	; (80052d0 <HAL_DMA_IRQHandler+0x6b0>)
 80050ec:	4293      	cmp	r3, r2
 80050ee:	d022      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	4a77      	ldr	r2, [pc, #476]	; (80052d4 <HAL_DMA_IRQHandler+0x6b4>)
 80050f6:	4293      	cmp	r3, r2
 80050f8:	d01d      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	4a76      	ldr	r2, [pc, #472]	; (80052d8 <HAL_DMA_IRQHandler+0x6b8>)
 8005100:	4293      	cmp	r3, r2
 8005102:	d018      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	4a74      	ldr	r2, [pc, #464]	; (80052dc <HAL_DMA_IRQHandler+0x6bc>)
 800510a:	4293      	cmp	r3, r2
 800510c:	d013      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	4a73      	ldr	r2, [pc, #460]	; (80052e0 <HAL_DMA_IRQHandler+0x6c0>)
 8005114:	4293      	cmp	r3, r2
 8005116:	d00e      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	681b      	ldr	r3, [r3, #0]
 800511c:	4a71      	ldr	r2, [pc, #452]	; (80052e4 <HAL_DMA_IRQHandler+0x6c4>)
 800511e:	4293      	cmp	r3, r2
 8005120:	d009      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	4a70      	ldr	r2, [pc, #448]	; (80052e8 <HAL_DMA_IRQHandler+0x6c8>)
 8005128:	4293      	cmp	r3, r2
 800512a:	d004      	beq.n	8005136 <HAL_DMA_IRQHandler+0x516>
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	4a6e      	ldr	r2, [pc, #440]	; (80052ec <HAL_DMA_IRQHandler+0x6cc>)
 8005132:	4293      	cmp	r3, r2
 8005134:	d10a      	bne.n	800514c <HAL_DMA_IRQHandler+0x52c>
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	f003 0308 	and.w	r3, r3, #8
 8005140:	2b00      	cmp	r3, #0
 8005142:	bf14      	ite	ne
 8005144:	2301      	movne	r3, #1
 8005146:	2300      	moveq	r3, #0
 8005148:	b2db      	uxtb	r3, r3
 800514a:	e009      	b.n	8005160 <HAL_DMA_IRQHandler+0x540>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f003 0304 	and.w	r3, r3, #4
 8005156:	2b00      	cmp	r3, #0
 8005158:	bf14      	ite	ne
 800515a:	2301      	movne	r3, #1
 800515c:	2300      	moveq	r3, #0
 800515e:	b2db      	uxtb	r3, r3
 8005160:	2b00      	cmp	r3, #0
 8005162:	d03e      	beq.n	80051e2 <HAL_DMA_IRQHandler+0x5c2>
      {
        /* Clear the half transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU);
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005168:	f003 031f 	and.w	r3, r3, #31
 800516c:	2210      	movs	r2, #16
 800516e:	409a      	lsls	r2, r3
 8005170:	6a3b      	ldr	r3, [r7, #32]
 8005172:	609a      	str	r2, [r3, #8]

        /* Multi_Buffering mode enabled */
        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800517e:	2b00      	cmp	r3, #0
 8005180:	d018      	beq.n	80051b4 <HAL_DMA_IRQHandler+0x594>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	681b      	ldr	r3, [r3, #0]
 8005186:	681b      	ldr	r3, [r3, #0]
 8005188:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800518c:	2b00      	cmp	r3, #0
 800518e:	d108      	bne.n	80051a2 <HAL_DMA_IRQHandler+0x582>
          {
            if(hdma->XferHalfCpltCallback != NULL)
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005194:	2b00      	cmp	r3, #0
 8005196:	d024      	beq.n	80051e2 <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferHalfCpltCallback(hdma);
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800519c:	6878      	ldr	r0, [r7, #4]
 800519e:	4798      	blx	r3
 80051a0:	e01f      	b.n	80051e2 <HAL_DMA_IRQHandler+0x5c2>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferM1HalfCpltCallback != NULL)
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80051a6:	2b00      	cmp	r3, #0
 80051a8:	d01b      	beq.n	80051e2 <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferM1HalfCpltCallback(hdma);
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80051ae:	6878      	ldr	r0, [r7, #4]
 80051b0:	4798      	blx	r3
 80051b2:	e016      	b.n	80051e2 <HAL_DMA_IRQHandler+0x5c2>
          }
        }
        else
        {
          /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d107      	bne.n	80051d2 <HAL_DMA_IRQHandler+0x5b2>
          {
            /* Disable the half transfer interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	681a      	ldr	r2, [r3, #0]
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	681b      	ldr	r3, [r3, #0]
 80051cc:	f022 0208 	bic.w	r2, r2, #8
 80051d0:	601a      	str	r2, [r3, #0]
          }

          if(hdma->XferHalfCpltCallback != NULL)
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	d003      	beq.n	80051e2 <HAL_DMA_IRQHandler+0x5c2>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051de:	6878      	ldr	r0, [r7, #4]
 80051e0:	4798      	blx	r3
          }
        }
      }
    }
    /* Transfer Complete Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051e6:	f003 031f 	and.w	r3, r3, #31
 80051ea:	2220      	movs	r2, #32
 80051ec:	409a      	lsls	r2, r3
 80051ee:	69bb      	ldr	r3, [r7, #24]
 80051f0:	4013      	ands	r3, r2
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	f000 8110 	beq.w	8005418 <HAL_DMA_IRQHandler+0x7f8>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	4a2c      	ldr	r2, [pc, #176]	; (80052b0 <HAL_DMA_IRQHandler+0x690>)
 80051fe:	4293      	cmp	r3, r2
 8005200:	d04a      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	4a2b      	ldr	r2, [pc, #172]	; (80052b4 <HAL_DMA_IRQHandler+0x694>)
 8005208:	4293      	cmp	r3, r2
 800520a:	d045      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	4a29      	ldr	r2, [pc, #164]	; (80052b8 <HAL_DMA_IRQHandler+0x698>)
 8005212:	4293      	cmp	r3, r2
 8005214:	d040      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	4a28      	ldr	r2, [pc, #160]	; (80052bc <HAL_DMA_IRQHandler+0x69c>)
 800521c:	4293      	cmp	r3, r2
 800521e:	d03b      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	4a26      	ldr	r2, [pc, #152]	; (80052c0 <HAL_DMA_IRQHandler+0x6a0>)
 8005226:	4293      	cmp	r3, r2
 8005228:	d036      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	4a25      	ldr	r2, [pc, #148]	; (80052c4 <HAL_DMA_IRQHandler+0x6a4>)
 8005230:	4293      	cmp	r3, r2
 8005232:	d031      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	4a23      	ldr	r2, [pc, #140]	; (80052c8 <HAL_DMA_IRQHandler+0x6a8>)
 800523a:	4293      	cmp	r3, r2
 800523c:	d02c      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	681b      	ldr	r3, [r3, #0]
 8005242:	4a22      	ldr	r2, [pc, #136]	; (80052cc <HAL_DMA_IRQHandler+0x6ac>)
 8005244:	4293      	cmp	r3, r2
 8005246:	d027      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	4a20      	ldr	r2, [pc, #128]	; (80052d0 <HAL_DMA_IRQHandler+0x6b0>)
 800524e:	4293      	cmp	r3, r2
 8005250:	d022      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	4a1f      	ldr	r2, [pc, #124]	; (80052d4 <HAL_DMA_IRQHandler+0x6b4>)
 8005258:	4293      	cmp	r3, r2
 800525a:	d01d      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	4a1d      	ldr	r2, [pc, #116]	; (80052d8 <HAL_DMA_IRQHandler+0x6b8>)
 8005262:	4293      	cmp	r3, r2
 8005264:	d018      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	4a1c      	ldr	r2, [pc, #112]	; (80052dc <HAL_DMA_IRQHandler+0x6bc>)
 800526c:	4293      	cmp	r3, r2
 800526e:	d013      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	4a1a      	ldr	r2, [pc, #104]	; (80052e0 <HAL_DMA_IRQHandler+0x6c0>)
 8005276:	4293      	cmp	r3, r2
 8005278:	d00e      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	4a19      	ldr	r2, [pc, #100]	; (80052e4 <HAL_DMA_IRQHandler+0x6c4>)
 8005280:	4293      	cmp	r3, r2
 8005282:	d009      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	4a17      	ldr	r2, [pc, #92]	; (80052e8 <HAL_DMA_IRQHandler+0x6c8>)
 800528a:	4293      	cmp	r3, r2
 800528c:	d004      	beq.n	8005298 <HAL_DMA_IRQHandler+0x678>
 800528e:	687b      	ldr	r3, [r7, #4]
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	4a16      	ldr	r2, [pc, #88]	; (80052ec <HAL_DMA_IRQHandler+0x6cc>)
 8005294:	4293      	cmp	r3, r2
 8005296:	d12b      	bne.n	80052f0 <HAL_DMA_IRQHandler+0x6d0>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	f003 0310 	and.w	r3, r3, #16
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	bf14      	ite	ne
 80052a6:	2301      	movne	r3, #1
 80052a8:	2300      	moveq	r3, #0
 80052aa:	b2db      	uxtb	r3, r3
 80052ac:	e02a      	b.n	8005304 <HAL_DMA_IRQHandler+0x6e4>
 80052ae:	bf00      	nop
 80052b0:	40020010 	.word	0x40020010
 80052b4:	40020028 	.word	0x40020028
 80052b8:	40020040 	.word	0x40020040
 80052bc:	40020058 	.word	0x40020058
 80052c0:	40020070 	.word	0x40020070
 80052c4:	40020088 	.word	0x40020088
 80052c8:	400200a0 	.word	0x400200a0
 80052cc:	400200b8 	.word	0x400200b8
 80052d0:	40020410 	.word	0x40020410
 80052d4:	40020428 	.word	0x40020428
 80052d8:	40020440 	.word	0x40020440
 80052dc:	40020458 	.word	0x40020458
 80052e0:	40020470 	.word	0x40020470
 80052e4:	40020488 	.word	0x40020488
 80052e8:	400204a0 	.word	0x400204a0
 80052ec:	400204b8 	.word	0x400204b8
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	f003 0302 	and.w	r3, r3, #2
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	bf14      	ite	ne
 80052fe:	2301      	movne	r3, #1
 8005300:	2300      	moveq	r3, #0
 8005302:	b2db      	uxtb	r3, r3
 8005304:	2b00      	cmp	r3, #0
 8005306:	f000 8087 	beq.w	8005418 <HAL_DMA_IRQHandler+0x7f8>
      {
        /* Clear the transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU);
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800530e:	f003 031f 	and.w	r3, r3, #31
 8005312:	2220      	movs	r2, #32
 8005314:	409a      	lsls	r2, r3
 8005316:	6a3b      	ldr	r3, [r7, #32]
 8005318:	609a      	str	r2, [r3, #8]

        if(HAL_DMA_STATE_ABORT == hdma->State)
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005320:	b2db      	uxtb	r3, r3
 8005322:	2b04      	cmp	r3, #4
 8005324:	d139      	bne.n	800539a <HAL_DMA_IRQHandler+0x77a>
        {
          /* Disable all the transfer interrupts */
          ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	681a      	ldr	r2, [r3, #0]
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	f022 0216 	bic.w	r2, r2, #22
 8005334:	601a      	str	r2, [r3, #0]
          ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	695a      	ldr	r2, [r3, #20]
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005344:	615a      	str	r2, [r3, #20]

          if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800534a:	2b00      	cmp	r3, #0
 800534c:	d103      	bne.n	8005356 <HAL_DMA_IRQHandler+0x736>
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005352:	2b00      	cmp	r3, #0
 8005354:	d007      	beq.n	8005366 <HAL_DMA_IRQHandler+0x746>
          {
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	681b      	ldr	r3, [r3, #0]
 800535a:	681a      	ldr	r2, [r3, #0]
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	f022 0208 	bic.w	r2, r2, #8
 8005364:	601a      	str	r2, [r3, #0]
          }

          /* Clear all interrupt flags at correct offset within the register */
          regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800536a:	f003 031f 	and.w	r3, r3, #31
 800536e:	223f      	movs	r2, #63	; 0x3f
 8005370:	409a      	lsls	r2, r3
 8005372:	6a3b      	ldr	r3, [r7, #32]
 8005374:	609a      	str	r2, [r3, #8]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	2201      	movs	r2, #1
 800537a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	2200      	movs	r2, #0
 8005382:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

          if(hdma->XferAbortCallback != NULL)
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800538a:	2b00      	cmp	r3, #0
 800538c:	f000 834a 	beq.w	8005a24 <HAL_DMA_IRQHandler+0xe04>
          {
            hdma->XferAbortCallback(hdma);
 8005390:	687b      	ldr	r3, [r7, #4]
 8005392:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005394:	6878      	ldr	r0, [r7, #4]
 8005396:	4798      	blx	r3
          }
          return;
 8005398:	e344      	b.n	8005a24 <HAL_DMA_IRQHandler+0xe04>
        }

        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80053a4:	2b00      	cmp	r3, #0
 80053a6:	d018      	beq.n	80053da <HAL_DMA_IRQHandler+0x7ba>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d108      	bne.n	80053c8 <HAL_DMA_IRQHandler+0x7a8>
          {
            if(hdma->XferM1CpltCallback != NULL)
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	d02c      	beq.n	8005418 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory1 */
              hdma->XferM1CpltCallback(hdma);
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80053c2:	6878      	ldr	r0, [r7, #4]
 80053c4:	4798      	blx	r3
 80053c6:	e027      	b.n	8005418 <HAL_DMA_IRQHandler+0x7f8>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferCpltCallback != NULL)
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80053cc:	2b00      	cmp	r3, #0
 80053ce:	d023      	beq.n	8005418 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory0 */
              hdma->XferCpltCallback(hdma);
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80053d4:	6878      	ldr	r0, [r7, #4]
 80053d6:	4798      	blx	r3
 80053d8:	e01e      	b.n	8005418 <HAL_DMA_IRQHandler+0x7f8>
          }
        }
        /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
        else
        {
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d10f      	bne.n	8005408 <HAL_DMA_IRQHandler+0x7e8>
          {
            /* Disable the transfer complete interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC);
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	681a      	ldr	r2, [r3, #0]
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	f022 0210 	bic.w	r2, r2, #16
 80053f6:	601a      	str	r2, [r3, #0]

            /* Change the DMA state */
            hdma->State = HAL_DMA_STATE_READY;
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	2201      	movs	r2, #1
 80053fc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

            /* Process Unlocked */
            __HAL_UNLOCK(hdma);
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	2200      	movs	r2, #0
 8005404:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          }

          if(hdma->XferCpltCallback != NULL)
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800540c:	2b00      	cmp	r3, #0
 800540e:	d003      	beq.n	8005418 <HAL_DMA_IRQHandler+0x7f8>
          {
            /* Transfer complete callback */
            hdma->XferCpltCallback(hdma);
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005414:	6878      	ldr	r0, [r7, #4]
 8005416:	4798      	blx	r3
        }
      }
    }

    /* manage error case */
    if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800541c:	2b00      	cmp	r3, #0
 800541e:	f000 8306 	beq.w	8005a2e <HAL_DMA_IRQHandler+0xe0e>
    {
      if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != 0U)
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005426:	f003 0301 	and.w	r3, r3, #1
 800542a:	2b00      	cmp	r3, #0
 800542c:	f000 8088 	beq.w	8005540 <HAL_DMA_IRQHandler+0x920>
      {
        hdma->State = HAL_DMA_STATE_ABORT;
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	2204      	movs	r2, #4
 8005434:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Disable the stream */
        __HAL_DMA_DISABLE(hdma);
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	681b      	ldr	r3, [r3, #0]
 800543c:	4a7a      	ldr	r2, [pc, #488]	; (8005628 <HAL_DMA_IRQHandler+0xa08>)
 800543e:	4293      	cmp	r3, r2
 8005440:	d04a      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	4a79      	ldr	r2, [pc, #484]	; (800562c <HAL_DMA_IRQHandler+0xa0c>)
 8005448:	4293      	cmp	r3, r2
 800544a:	d045      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	4a77      	ldr	r2, [pc, #476]	; (8005630 <HAL_DMA_IRQHandler+0xa10>)
 8005452:	4293      	cmp	r3, r2
 8005454:	d040      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	4a76      	ldr	r2, [pc, #472]	; (8005634 <HAL_DMA_IRQHandler+0xa14>)
 800545c:	4293      	cmp	r3, r2
 800545e:	d03b      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	4a74      	ldr	r2, [pc, #464]	; (8005638 <HAL_DMA_IRQHandler+0xa18>)
 8005466:	4293      	cmp	r3, r2
 8005468:	d036      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	681b      	ldr	r3, [r3, #0]
 800546e:	4a73      	ldr	r2, [pc, #460]	; (800563c <HAL_DMA_IRQHandler+0xa1c>)
 8005470:	4293      	cmp	r3, r2
 8005472:	d031      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	4a71      	ldr	r2, [pc, #452]	; (8005640 <HAL_DMA_IRQHandler+0xa20>)
 800547a:	4293      	cmp	r3, r2
 800547c:	d02c      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	681b      	ldr	r3, [r3, #0]
 8005482:	4a70      	ldr	r2, [pc, #448]	; (8005644 <HAL_DMA_IRQHandler+0xa24>)
 8005484:	4293      	cmp	r3, r2
 8005486:	d027      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	4a6e      	ldr	r2, [pc, #440]	; (8005648 <HAL_DMA_IRQHandler+0xa28>)
 800548e:	4293      	cmp	r3, r2
 8005490:	d022      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	681b      	ldr	r3, [r3, #0]
 8005496:	4a6d      	ldr	r2, [pc, #436]	; (800564c <HAL_DMA_IRQHandler+0xa2c>)
 8005498:	4293      	cmp	r3, r2
 800549a:	d01d      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 800549c:	687b      	ldr	r3, [r7, #4]
 800549e:	681b      	ldr	r3, [r3, #0]
 80054a0:	4a6b      	ldr	r2, [pc, #428]	; (8005650 <HAL_DMA_IRQHandler+0xa30>)
 80054a2:	4293      	cmp	r3, r2
 80054a4:	d018      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	681b      	ldr	r3, [r3, #0]
 80054aa:	4a6a      	ldr	r2, [pc, #424]	; (8005654 <HAL_DMA_IRQHandler+0xa34>)
 80054ac:	4293      	cmp	r3, r2
 80054ae:	d013      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	4a68      	ldr	r2, [pc, #416]	; (8005658 <HAL_DMA_IRQHandler+0xa38>)
 80054b6:	4293      	cmp	r3, r2
 80054b8:	d00e      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	4a67      	ldr	r2, [pc, #412]	; (800565c <HAL_DMA_IRQHandler+0xa3c>)
 80054c0:	4293      	cmp	r3, r2
 80054c2:	d009      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	681b      	ldr	r3, [r3, #0]
 80054c8:	4a65      	ldr	r2, [pc, #404]	; (8005660 <HAL_DMA_IRQHandler+0xa40>)
 80054ca:	4293      	cmp	r3, r2
 80054cc:	d004      	beq.n	80054d8 <HAL_DMA_IRQHandler+0x8b8>
 80054ce:	687b      	ldr	r3, [r7, #4]
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	4a64      	ldr	r2, [pc, #400]	; (8005664 <HAL_DMA_IRQHandler+0xa44>)
 80054d4:	4293      	cmp	r3, r2
 80054d6:	d108      	bne.n	80054ea <HAL_DMA_IRQHandler+0x8ca>
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	681a      	ldr	r2, [r3, #0]
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	f022 0201 	bic.w	r2, r2, #1
 80054e6:	601a      	str	r2, [r3, #0]
 80054e8:	e007      	b.n	80054fa <HAL_DMA_IRQHandler+0x8da>
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	681a      	ldr	r2, [r3, #0]
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	f022 0201 	bic.w	r2, r2, #1
 80054f8:	601a      	str	r2, [r3, #0]

        do
        {
          if (++count > timeout)
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	3301      	adds	r3, #1
 80054fe:	60fb      	str	r3, [r7, #12]
 8005500:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005502:	429a      	cmp	r2, r3
 8005504:	d307      	bcc.n	8005516 <HAL_DMA_IRQHandler+0x8f6>
          {
            break;
          }
        }
        while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U);
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	681b      	ldr	r3, [r3, #0]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	f003 0301 	and.w	r3, r3, #1
 8005510:	2b00      	cmp	r3, #0
 8005512:	d1f2      	bne.n	80054fa <HAL_DMA_IRQHandler+0x8da>
 8005514:	e000      	b.n	8005518 <HAL_DMA_IRQHandler+0x8f8>
            break;
 8005516:	bf00      	nop

        if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	681b      	ldr	r3, [r3, #0]
 800551e:	f003 0301 	and.w	r3, r3, #1
 8005522:	2b00      	cmp	r3, #0
 8005524:	d004      	beq.n	8005530 <HAL_DMA_IRQHandler+0x910>
        {
          /* Change the DMA state to error if DMA disable fails */
          hdma->State = HAL_DMA_STATE_ERROR;
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	2203      	movs	r2, #3
 800552a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800552e:	e003      	b.n	8005538 <HAL_DMA_IRQHandler+0x918>
        }
        else
        {
          /* Change the DMA state to Ready if DMA disable success */
          hdma->State = HAL_DMA_STATE_READY;
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	2201      	movs	r2, #1
 8005534:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	2200      	movs	r2, #0
 800553c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      }

      if(hdma->XferErrorCallback != NULL)
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005544:	2b00      	cmp	r3, #0
 8005546:	f000 8272 	beq.w	8005a2e <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800554e:	6878      	ldr	r0, [r7, #4]
 8005550:	4798      	blx	r3
 8005552:	e26c      	b.n	8005a2e <HAL_DMA_IRQHandler+0xe0e>
      }
    }
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U)  /* BDMA instance(s) */
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	4a43      	ldr	r2, [pc, #268]	; (8005668 <HAL_DMA_IRQHandler+0xa48>)
 800555a:	4293      	cmp	r3, r2
 800555c:	d022      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	4a42      	ldr	r2, [pc, #264]	; (800566c <HAL_DMA_IRQHandler+0xa4c>)
 8005564:	4293      	cmp	r3, r2
 8005566:	d01d      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	4a40      	ldr	r2, [pc, #256]	; (8005670 <HAL_DMA_IRQHandler+0xa50>)
 800556e:	4293      	cmp	r3, r2
 8005570:	d018      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	4a3f      	ldr	r2, [pc, #252]	; (8005674 <HAL_DMA_IRQHandler+0xa54>)
 8005578:	4293      	cmp	r3, r2
 800557a:	d013      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	4a3d      	ldr	r2, [pc, #244]	; (8005678 <HAL_DMA_IRQHandler+0xa58>)
 8005582:	4293      	cmp	r3, r2
 8005584:	d00e      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	681b      	ldr	r3, [r3, #0]
 800558a:	4a3c      	ldr	r2, [pc, #240]	; (800567c <HAL_DMA_IRQHandler+0xa5c>)
 800558c:	4293      	cmp	r3, r2
 800558e:	d009      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	4a3a      	ldr	r2, [pc, #232]	; (8005680 <HAL_DMA_IRQHandler+0xa60>)
 8005596:	4293      	cmp	r3, r2
 8005598:	d004      	beq.n	80055a4 <HAL_DMA_IRQHandler+0x984>
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	4a39      	ldr	r2, [pc, #228]	; (8005684 <HAL_DMA_IRQHandler+0xa64>)
 80055a0:	4293      	cmp	r3, r2
 80055a2:	d101      	bne.n	80055a8 <HAL_DMA_IRQHandler+0x988>
 80055a4:	2301      	movs	r3, #1
 80055a6:	e000      	b.n	80055aa <HAL_DMA_IRQHandler+0x98a>
 80055a8:	2300      	movs	r3, #0
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	f000 823f 	beq.w	8005a2e <HAL_DMA_IRQHandler+0xe0e>
  {
    ccr_reg = (((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR);
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	681b      	ldr	r3, [r3, #0]
 80055b6:	613b      	str	r3, [r7, #16]

    /* Half Transfer Complete Interrupt management ******************************/
    if (((tmpisr_bdma & (BDMA_FLAG_HT0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_HTIE) != 0U))
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80055bc:	f003 031f 	and.w	r3, r3, #31
 80055c0:	2204      	movs	r2, #4
 80055c2:	409a      	lsls	r2, r3
 80055c4:	697b      	ldr	r3, [r7, #20]
 80055c6:	4013      	ands	r3, r2
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	f000 80cd 	beq.w	8005768 <HAL_DMA_IRQHandler+0xb48>
 80055ce:	693b      	ldr	r3, [r7, #16]
 80055d0:	f003 0304 	and.w	r3, r3, #4
 80055d4:	2b00      	cmp	r3, #0
 80055d6:	f000 80c7 	beq.w	8005768 <HAL_DMA_IRQHandler+0xb48>
    {
      /* Clear the half transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_HTIF0 << (hdma->StreamIndex & 0x1FU));
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80055de:	f003 031f 	and.w	r3, r3, #31
 80055e2:	2204      	movs	r2, #4
 80055e4:	409a      	lsls	r2, r3
 80055e6:	69fb      	ldr	r3, [r7, #28]
 80055e8:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80055ea:	693b      	ldr	r3, [r7, #16]
 80055ec:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	d049      	beq.n	8005688 <HAL_DMA_IRQHandler+0xa68>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 80055f4:	693b      	ldr	r3, [r7, #16]
 80055f6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d109      	bne.n	8005612 <HAL_DMA_IRQHandler+0x9f2>
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005602:	2b00      	cmp	r3, #0
 8005604:	f000 8210 	beq.w	8005a28 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 1 */
            hdma->XferM1HalfCpltCallback(hdma);
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800560c:	6878      	ldr	r0, [r7, #4]
 800560e:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005610:	e20a      	b.n	8005a28 <HAL_DMA_IRQHandler+0xe08>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005616:	2b00      	cmp	r3, #0
 8005618:	f000 8206 	beq.w	8005a28 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 0 */
            hdma->XferHalfCpltCallback(hdma);
 800561c:	687b      	ldr	r3, [r7, #4]
 800561e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005620:	6878      	ldr	r0, [r7, #4]
 8005622:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005624:	e200      	b.n	8005a28 <HAL_DMA_IRQHandler+0xe08>
 8005626:	bf00      	nop
 8005628:	40020010 	.word	0x40020010
 800562c:	40020028 	.word	0x40020028
 8005630:	40020040 	.word	0x40020040
 8005634:	40020058 	.word	0x40020058
 8005638:	40020070 	.word	0x40020070
 800563c:	40020088 	.word	0x40020088
 8005640:	400200a0 	.word	0x400200a0
 8005644:	400200b8 	.word	0x400200b8
 8005648:	40020410 	.word	0x40020410
 800564c:	40020428 	.word	0x40020428
 8005650:	40020440 	.word	0x40020440
 8005654:	40020458 	.word	0x40020458
 8005658:	40020470 	.word	0x40020470
 800565c:	40020488 	.word	0x40020488
 8005660:	400204a0 	.word	0x400204a0
 8005664:	400204b8 	.word	0x400204b8
 8005668:	58025408 	.word	0x58025408
 800566c:	5802541c 	.word	0x5802541c
 8005670:	58025430 	.word	0x58025430
 8005674:	58025444 	.word	0x58025444
 8005678:	58025458 	.word	0x58025458
 800567c:	5802546c 	.word	0x5802546c
 8005680:	58025480 	.word	0x58025480
 8005684:	58025494 	.word	0x58025494
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8005688:	693b      	ldr	r3, [r7, #16]
 800568a:	f003 0320 	and.w	r3, r3, #32
 800568e:	2b00      	cmp	r3, #0
 8005690:	d160      	bne.n	8005754 <HAL_DMA_IRQHandler+0xb34>
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	4a7f      	ldr	r2, [pc, #508]	; (8005894 <HAL_DMA_IRQHandler+0xc74>)
 8005698:	4293      	cmp	r3, r2
 800569a:	d04a      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	4a7d      	ldr	r2, [pc, #500]	; (8005898 <HAL_DMA_IRQHandler+0xc78>)
 80056a2:	4293      	cmp	r3, r2
 80056a4:	d045      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	4a7c      	ldr	r2, [pc, #496]	; (800589c <HAL_DMA_IRQHandler+0xc7c>)
 80056ac:	4293      	cmp	r3, r2
 80056ae:	d040      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	4a7a      	ldr	r2, [pc, #488]	; (80058a0 <HAL_DMA_IRQHandler+0xc80>)
 80056b6:	4293      	cmp	r3, r2
 80056b8:	d03b      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	4a79      	ldr	r2, [pc, #484]	; (80058a4 <HAL_DMA_IRQHandler+0xc84>)
 80056c0:	4293      	cmp	r3, r2
 80056c2:	d036      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056c4:	687b      	ldr	r3, [r7, #4]
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	4a77      	ldr	r2, [pc, #476]	; (80058a8 <HAL_DMA_IRQHandler+0xc88>)
 80056ca:	4293      	cmp	r3, r2
 80056cc:	d031      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	4a76      	ldr	r2, [pc, #472]	; (80058ac <HAL_DMA_IRQHandler+0xc8c>)
 80056d4:	4293      	cmp	r3, r2
 80056d6:	d02c      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	681b      	ldr	r3, [r3, #0]
 80056dc:	4a74      	ldr	r2, [pc, #464]	; (80058b0 <HAL_DMA_IRQHandler+0xc90>)
 80056de:	4293      	cmp	r3, r2
 80056e0:	d027      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	4a73      	ldr	r2, [pc, #460]	; (80058b4 <HAL_DMA_IRQHandler+0xc94>)
 80056e8:	4293      	cmp	r3, r2
 80056ea:	d022      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	4a71      	ldr	r2, [pc, #452]	; (80058b8 <HAL_DMA_IRQHandler+0xc98>)
 80056f2:	4293      	cmp	r3, r2
 80056f4:	d01d      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	4a70      	ldr	r2, [pc, #448]	; (80058bc <HAL_DMA_IRQHandler+0xc9c>)
 80056fc:	4293      	cmp	r3, r2
 80056fe:	d018      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	681b      	ldr	r3, [r3, #0]
 8005704:	4a6e      	ldr	r2, [pc, #440]	; (80058c0 <HAL_DMA_IRQHandler+0xca0>)
 8005706:	4293      	cmp	r3, r2
 8005708:	d013      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	681b      	ldr	r3, [r3, #0]
 800570e:	4a6d      	ldr	r2, [pc, #436]	; (80058c4 <HAL_DMA_IRQHandler+0xca4>)
 8005710:	4293      	cmp	r3, r2
 8005712:	d00e      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 8005714:	687b      	ldr	r3, [r7, #4]
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	4a6b      	ldr	r2, [pc, #428]	; (80058c8 <HAL_DMA_IRQHandler+0xca8>)
 800571a:	4293      	cmp	r3, r2
 800571c:	d009      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 800571e:	687b      	ldr	r3, [r7, #4]
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	4a6a      	ldr	r2, [pc, #424]	; (80058cc <HAL_DMA_IRQHandler+0xcac>)
 8005724:	4293      	cmp	r3, r2
 8005726:	d004      	beq.n	8005732 <HAL_DMA_IRQHandler+0xb12>
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	681b      	ldr	r3, [r3, #0]
 800572c:	4a68      	ldr	r2, [pc, #416]	; (80058d0 <HAL_DMA_IRQHandler+0xcb0>)
 800572e:	4293      	cmp	r3, r2
 8005730:	d108      	bne.n	8005744 <HAL_DMA_IRQHandler+0xb24>
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	681a      	ldr	r2, [r3, #0]
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	681b      	ldr	r3, [r3, #0]
 800573c:	f022 0208 	bic.w	r2, r2, #8
 8005740:	601a      	str	r2, [r3, #0]
 8005742:	e007      	b.n	8005754 <HAL_DMA_IRQHandler+0xb34>
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	681b      	ldr	r3, [r3, #0]
 8005748:	681a      	ldr	r2, [r3, #0]
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	681b      	ldr	r3, [r3, #0]
 800574e:	f022 0204 	bic.w	r2, r2, #4
 8005752:	601a      	str	r2, [r3, #0]
        }

        /* DMA peripheral state is not updated in Half Transfer */
        /* but in Transfer Complete case */

       if(hdma->XferHalfCpltCallback != NULL)
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005758:	2b00      	cmp	r3, #0
 800575a:	f000 8165 	beq.w	8005a28 <HAL_DMA_IRQHandler+0xe08>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005762:	6878      	ldr	r0, [r7, #4]
 8005764:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005766:	e15f      	b.n	8005a28 <HAL_DMA_IRQHandler+0xe08>
        }
      }
    }

    /* Transfer Complete Interrupt management ***********************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TC0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TCIE) != 0U))
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800576c:	f003 031f 	and.w	r3, r3, #31
 8005770:	2202      	movs	r2, #2
 8005772:	409a      	lsls	r2, r3
 8005774:	697b      	ldr	r3, [r7, #20]
 8005776:	4013      	ands	r3, r2
 8005778:	2b00      	cmp	r3, #0
 800577a:	f000 80c5 	beq.w	8005908 <HAL_DMA_IRQHandler+0xce8>
 800577e:	693b      	ldr	r3, [r7, #16]
 8005780:	f003 0302 	and.w	r3, r3, #2
 8005784:	2b00      	cmp	r3, #0
 8005786:	f000 80bf 	beq.w	8005908 <HAL_DMA_IRQHandler+0xce8>
    {
      /* Clear the transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_TCIF0) << (hdma->StreamIndex & 0x1FU);
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800578e:	f003 031f 	and.w	r3, r3, #31
 8005792:	2202      	movs	r2, #2
 8005794:	409a      	lsls	r2, r3
 8005796:	69fb      	ldr	r3, [r7, #28]
 8005798:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 800579a:	693b      	ldr	r3, [r7, #16]
 800579c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80057a0:	2b00      	cmp	r3, #0
 80057a2:	d018      	beq.n	80057d6 <HAL_DMA_IRQHandler+0xbb6>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 80057a4:	693b      	ldr	r3, [r7, #16]
 80057a6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	d109      	bne.n	80057c2 <HAL_DMA_IRQHandler+0xba2>
        {
          if(hdma->XferM1CpltCallback != NULL)
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	f000 813a 	beq.w	8005a2c <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 1 */
            hdma->XferM1CpltCallback(hdma);
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80057bc:	6878      	ldr	r0, [r7, #4]
 80057be:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80057c0:	e134      	b.n	8005a2c <HAL_DMA_IRQHandler+0xe0c>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	f000 8130 	beq.w	8005a2c <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 0 */
            hdma->XferCpltCallback(hdma);
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80057d0:	6878      	ldr	r0, [r7, #4]
 80057d2:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80057d4:	e12a      	b.n	8005a2c <HAL_DMA_IRQHandler+0xe0c>
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 80057d6:	693b      	ldr	r3, [r7, #16]
 80057d8:	f003 0320 	and.w	r3, r3, #32
 80057dc:	2b00      	cmp	r3, #0
 80057de:	f040 8089 	bne.w	80058f4 <HAL_DMA_IRQHandler+0xcd4>
        {
          /* Disable the transfer complete and error interrupt, if the DMA mode is not CIRCULAR */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 80057e2:	687b      	ldr	r3, [r7, #4]
 80057e4:	681b      	ldr	r3, [r3, #0]
 80057e6:	4a2b      	ldr	r2, [pc, #172]	; (8005894 <HAL_DMA_IRQHandler+0xc74>)
 80057e8:	4293      	cmp	r3, r2
 80057ea:	d04a      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	4a29      	ldr	r2, [pc, #164]	; (8005898 <HAL_DMA_IRQHandler+0xc78>)
 80057f2:	4293      	cmp	r3, r2
 80057f4:	d045      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	4a28      	ldr	r2, [pc, #160]	; (800589c <HAL_DMA_IRQHandler+0xc7c>)
 80057fc:	4293      	cmp	r3, r2
 80057fe:	d040      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	4a26      	ldr	r2, [pc, #152]	; (80058a0 <HAL_DMA_IRQHandler+0xc80>)
 8005806:	4293      	cmp	r3, r2
 8005808:	d03b      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	4a25      	ldr	r2, [pc, #148]	; (80058a4 <HAL_DMA_IRQHandler+0xc84>)
 8005810:	4293      	cmp	r3, r2
 8005812:	d036      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	681b      	ldr	r3, [r3, #0]
 8005818:	4a23      	ldr	r2, [pc, #140]	; (80058a8 <HAL_DMA_IRQHandler+0xc88>)
 800581a:	4293      	cmp	r3, r2
 800581c:	d031      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	4a22      	ldr	r2, [pc, #136]	; (80058ac <HAL_DMA_IRQHandler+0xc8c>)
 8005824:	4293      	cmp	r3, r2
 8005826:	d02c      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	4a20      	ldr	r2, [pc, #128]	; (80058b0 <HAL_DMA_IRQHandler+0xc90>)
 800582e:	4293      	cmp	r3, r2
 8005830:	d027      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	4a1f      	ldr	r2, [pc, #124]	; (80058b4 <HAL_DMA_IRQHandler+0xc94>)
 8005838:	4293      	cmp	r3, r2
 800583a:	d022      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	4a1d      	ldr	r2, [pc, #116]	; (80058b8 <HAL_DMA_IRQHandler+0xc98>)
 8005842:	4293      	cmp	r3, r2
 8005844:	d01d      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	4a1c      	ldr	r2, [pc, #112]	; (80058bc <HAL_DMA_IRQHandler+0xc9c>)
 800584c:	4293      	cmp	r3, r2
 800584e:	d018      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	681b      	ldr	r3, [r3, #0]
 8005854:	4a1a      	ldr	r2, [pc, #104]	; (80058c0 <HAL_DMA_IRQHandler+0xca0>)
 8005856:	4293      	cmp	r3, r2
 8005858:	d013      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	681b      	ldr	r3, [r3, #0]
 800585e:	4a19      	ldr	r2, [pc, #100]	; (80058c4 <HAL_DMA_IRQHandler+0xca4>)
 8005860:	4293      	cmp	r3, r2
 8005862:	d00e      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	4a17      	ldr	r2, [pc, #92]	; (80058c8 <HAL_DMA_IRQHandler+0xca8>)
 800586a:	4293      	cmp	r3, r2
 800586c:	d009      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	4a16      	ldr	r2, [pc, #88]	; (80058cc <HAL_DMA_IRQHandler+0xcac>)
 8005874:	4293      	cmp	r3, r2
 8005876:	d004      	beq.n	8005882 <HAL_DMA_IRQHandler+0xc62>
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	4a14      	ldr	r2, [pc, #80]	; (80058d0 <HAL_DMA_IRQHandler+0xcb0>)
 800587e:	4293      	cmp	r3, r2
 8005880:	d128      	bne.n	80058d4 <HAL_DMA_IRQHandler+0xcb4>
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	681a      	ldr	r2, [r3, #0]
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	f022 0214 	bic.w	r2, r2, #20
 8005890:	601a      	str	r2, [r3, #0]
 8005892:	e027      	b.n	80058e4 <HAL_DMA_IRQHandler+0xcc4>
 8005894:	40020010 	.word	0x40020010
 8005898:	40020028 	.word	0x40020028
 800589c:	40020040 	.word	0x40020040
 80058a0:	40020058 	.word	0x40020058
 80058a4:	40020070 	.word	0x40020070
 80058a8:	40020088 	.word	0x40020088
 80058ac:	400200a0 	.word	0x400200a0
 80058b0:	400200b8 	.word	0x400200b8
 80058b4:	40020410 	.word	0x40020410
 80058b8:	40020428 	.word	0x40020428
 80058bc:	40020440 	.word	0x40020440
 80058c0:	40020458 	.word	0x40020458
 80058c4:	40020470 	.word	0x40020470
 80058c8:	40020488 	.word	0x40020488
 80058cc:	400204a0 	.word	0x400204a0
 80058d0:	400204b8 	.word	0x400204b8
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	681a      	ldr	r2, [r3, #0]
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	f022 020a 	bic.w	r2, r2, #10
 80058e2:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	2201      	movs	r2, #1
 80058e8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	2200      	movs	r2, #0
 80058f0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058f8:	2b00      	cmp	r3, #0
 80058fa:	f000 8097 	beq.w	8005a2c <HAL_DMA_IRQHandler+0xe0c>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005902:	6878      	ldr	r0, [r7, #4]
 8005904:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005906:	e091      	b.n	8005a2c <HAL_DMA_IRQHandler+0xe0c>
        }
      }
    }
    /* Transfer Error Interrupt management **************************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TE0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TEIE) != 0U))
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800590c:	f003 031f 	and.w	r3, r3, #31
 8005910:	2208      	movs	r2, #8
 8005912:	409a      	lsls	r2, r3
 8005914:	697b      	ldr	r3, [r7, #20]
 8005916:	4013      	ands	r3, r2
 8005918:	2b00      	cmp	r3, #0
 800591a:	f000 8088 	beq.w	8005a2e <HAL_DMA_IRQHandler+0xe0e>
 800591e:	693b      	ldr	r3, [r7, #16]
 8005920:	f003 0308 	and.w	r3, r3, #8
 8005924:	2b00      	cmp	r3, #0
 8005926:	f000 8082 	beq.w	8005a2e <HAL_DMA_IRQHandler+0xe0e>
    {
      /* When a DMA transfer error occurs */
      /* A hardware clear of its EN bits is performed */
      /* Disable ALL DMA IT */
      __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	4a41      	ldr	r2, [pc, #260]	; (8005a34 <HAL_DMA_IRQHandler+0xe14>)
 8005930:	4293      	cmp	r3, r2
 8005932:	d04a      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	4a3f      	ldr	r2, [pc, #252]	; (8005a38 <HAL_DMA_IRQHandler+0xe18>)
 800593a:	4293      	cmp	r3, r2
 800593c:	d045      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	681b      	ldr	r3, [r3, #0]
 8005942:	4a3e      	ldr	r2, [pc, #248]	; (8005a3c <HAL_DMA_IRQHandler+0xe1c>)
 8005944:	4293      	cmp	r3, r2
 8005946:	d040      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	4a3c      	ldr	r2, [pc, #240]	; (8005a40 <HAL_DMA_IRQHandler+0xe20>)
 800594e:	4293      	cmp	r3, r2
 8005950:	d03b      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	4a3b      	ldr	r2, [pc, #236]	; (8005a44 <HAL_DMA_IRQHandler+0xe24>)
 8005958:	4293      	cmp	r3, r2
 800595a:	d036      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	4a39      	ldr	r2, [pc, #228]	; (8005a48 <HAL_DMA_IRQHandler+0xe28>)
 8005962:	4293      	cmp	r3, r2
 8005964:	d031      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	4a38      	ldr	r2, [pc, #224]	; (8005a4c <HAL_DMA_IRQHandler+0xe2c>)
 800596c:	4293      	cmp	r3, r2
 800596e:	d02c      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	4a36      	ldr	r2, [pc, #216]	; (8005a50 <HAL_DMA_IRQHandler+0xe30>)
 8005976:	4293      	cmp	r3, r2
 8005978:	d027      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	4a35      	ldr	r2, [pc, #212]	; (8005a54 <HAL_DMA_IRQHandler+0xe34>)
 8005980:	4293      	cmp	r3, r2
 8005982:	d022      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	681b      	ldr	r3, [r3, #0]
 8005988:	4a33      	ldr	r2, [pc, #204]	; (8005a58 <HAL_DMA_IRQHandler+0xe38>)
 800598a:	4293      	cmp	r3, r2
 800598c:	d01d      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	681b      	ldr	r3, [r3, #0]
 8005992:	4a32      	ldr	r2, [pc, #200]	; (8005a5c <HAL_DMA_IRQHandler+0xe3c>)
 8005994:	4293      	cmp	r3, r2
 8005996:	d018      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	4a30      	ldr	r2, [pc, #192]	; (8005a60 <HAL_DMA_IRQHandler+0xe40>)
 800599e:	4293      	cmp	r3, r2
 80059a0:	d013      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	681b      	ldr	r3, [r3, #0]
 80059a6:	4a2f      	ldr	r2, [pc, #188]	; (8005a64 <HAL_DMA_IRQHandler+0xe44>)
 80059a8:	4293      	cmp	r3, r2
 80059aa:	d00e      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	4a2d      	ldr	r2, [pc, #180]	; (8005a68 <HAL_DMA_IRQHandler+0xe48>)
 80059b2:	4293      	cmp	r3, r2
 80059b4:	d009      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	681b      	ldr	r3, [r3, #0]
 80059ba:	4a2c      	ldr	r2, [pc, #176]	; (8005a6c <HAL_DMA_IRQHandler+0xe4c>)
 80059bc:	4293      	cmp	r3, r2
 80059be:	d004      	beq.n	80059ca <HAL_DMA_IRQHandler+0xdaa>
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	4a2a      	ldr	r2, [pc, #168]	; (8005a70 <HAL_DMA_IRQHandler+0xe50>)
 80059c6:	4293      	cmp	r3, r2
 80059c8:	d108      	bne.n	80059dc <HAL_DMA_IRQHandler+0xdbc>
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	681a      	ldr	r2, [r3, #0]
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	f022 021c 	bic.w	r2, r2, #28
 80059d8:	601a      	str	r2, [r3, #0]
 80059da:	e007      	b.n	80059ec <HAL_DMA_IRQHandler+0xdcc>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	681a      	ldr	r2, [r3, #0]
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	f022 020e 	bic.w	r2, r2, #14
 80059ea:	601a      	str	r2, [r3, #0]

      /* Clear all flags */
      regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80059f0:	f003 031f 	and.w	r3, r3, #31
 80059f4:	2201      	movs	r2, #1
 80059f6:	409a      	lsls	r2, r3
 80059f8:	69fb      	ldr	r3, [r7, #28]
 80059fa:	605a      	str	r2, [r3, #4]

      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TE;
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	2201      	movs	r2, #1
 8005a00:	655a      	str	r2, [r3, #84]	; 0x54

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	2201      	movs	r2, #1
 8005a06:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	2200      	movs	r2, #0
 8005a0e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      if (hdma->XferErrorCallback != NULL)
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005a16:	2b00      	cmp	r3, #0
 8005a18:	d009      	beq.n	8005a2e <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005a1e:	6878      	ldr	r0, [r7, #4]
 8005a20:	4798      	blx	r3
 8005a22:	e004      	b.n	8005a2e <HAL_DMA_IRQHandler+0xe0e>
          return;
 8005a24:	bf00      	nop
 8005a26:	e002      	b.n	8005a2e <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005a28:	bf00      	nop
 8005a2a:	e000      	b.n	8005a2e <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005a2c:	bf00      	nop
  }
  else
  {
    /* Nothing To Do */
  }
}
 8005a2e:	3728      	adds	r7, #40	; 0x28
 8005a30:	46bd      	mov	sp, r7
 8005a32:	bd80      	pop	{r7, pc}
 8005a34:	40020010 	.word	0x40020010
 8005a38:	40020028 	.word	0x40020028
 8005a3c:	40020040 	.word	0x40020040
 8005a40:	40020058 	.word	0x40020058
 8005a44:	40020070 	.word	0x40020070
 8005a48:	40020088 	.word	0x40020088
 8005a4c:	400200a0 	.word	0x400200a0
 8005a50:	400200b8 	.word	0x400200b8
 8005a54:	40020410 	.word	0x40020410
 8005a58:	40020428 	.word	0x40020428
 8005a5c:	40020440 	.word	0x40020440
 8005a60:	40020458 	.word	0x40020458
 8005a64:	40020470 	.word	0x40020470
 8005a68:	40020488 	.word	0x40020488
 8005a6c:	400204a0 	.word	0x400204a0
 8005a70:	400204b8 	.word	0x400204b8

08005a74 <HAL_DMA_GetError>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Stream.
  * @retval DMA Error Code
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
{
 8005a74:	b480      	push	{r7}
 8005a76:	b083      	sub	sp, #12
 8005a78:	af00      	add	r7, sp, #0
 8005a7a:	6078      	str	r0, [r7, #4]
  return hdma->ErrorCode;
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
}
 8005a80:	4618      	mov	r0, r3
 8005a82:	370c      	adds	r7, #12
 8005a84:	46bd      	mov	sp, r7
 8005a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a8a:	4770      	bx	lr

08005a8c <DMA_SetConfig>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval None
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8005a8c:	b480      	push	{r7}
 8005a8e:	b087      	sub	sp, #28
 8005a90:	af00      	add	r7, sp, #0
 8005a92:	60f8      	str	r0, [r7, #12]
 8005a94:	60b9      	str	r1, [r7, #8]
 8005a96:	607a      	str	r2, [r7, #4]
 8005a98:	603b      	str	r3, [r7, #0]
  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005a9e:	617b      	str	r3, [r7, #20]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 8005aa0:	68fb      	ldr	r3, [r7, #12]
 8005aa2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005aa4:	613b      	str	r3, [r7, #16]

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8005aa6:	68fb      	ldr	r3, [r7, #12]
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	4a7f      	ldr	r2, [pc, #508]	; (8005ca8 <DMA_SetConfig+0x21c>)
 8005aac:	4293      	cmp	r3, r2
 8005aae:	d072      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005ab0:	68fb      	ldr	r3, [r7, #12]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	4a7d      	ldr	r2, [pc, #500]	; (8005cac <DMA_SetConfig+0x220>)
 8005ab6:	4293      	cmp	r3, r2
 8005ab8:	d06d      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	4a7c      	ldr	r2, [pc, #496]	; (8005cb0 <DMA_SetConfig+0x224>)
 8005ac0:	4293      	cmp	r3, r2
 8005ac2:	d068      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	4a7a      	ldr	r2, [pc, #488]	; (8005cb4 <DMA_SetConfig+0x228>)
 8005aca:	4293      	cmp	r3, r2
 8005acc:	d063      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005ace:	68fb      	ldr	r3, [r7, #12]
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	4a79      	ldr	r2, [pc, #484]	; (8005cb8 <DMA_SetConfig+0x22c>)
 8005ad4:	4293      	cmp	r3, r2
 8005ad6:	d05e      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	4a77      	ldr	r2, [pc, #476]	; (8005cbc <DMA_SetConfig+0x230>)
 8005ade:	4293      	cmp	r3, r2
 8005ae0:	d059      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4a76      	ldr	r2, [pc, #472]	; (8005cc0 <DMA_SetConfig+0x234>)
 8005ae8:	4293      	cmp	r3, r2
 8005aea:	d054      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	681b      	ldr	r3, [r3, #0]
 8005af0:	4a74      	ldr	r2, [pc, #464]	; (8005cc4 <DMA_SetConfig+0x238>)
 8005af2:	4293      	cmp	r3, r2
 8005af4:	d04f      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005af6:	68fb      	ldr	r3, [r7, #12]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	4a73      	ldr	r2, [pc, #460]	; (8005cc8 <DMA_SetConfig+0x23c>)
 8005afc:	4293      	cmp	r3, r2
 8005afe:	d04a      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b00:	68fb      	ldr	r3, [r7, #12]
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	4a71      	ldr	r2, [pc, #452]	; (8005ccc <DMA_SetConfig+0x240>)
 8005b06:	4293      	cmp	r3, r2
 8005b08:	d045      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b0a:	68fb      	ldr	r3, [r7, #12]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	4a70      	ldr	r2, [pc, #448]	; (8005cd0 <DMA_SetConfig+0x244>)
 8005b10:	4293      	cmp	r3, r2
 8005b12:	d040      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b14:	68fb      	ldr	r3, [r7, #12]
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	4a6e      	ldr	r2, [pc, #440]	; (8005cd4 <DMA_SetConfig+0x248>)
 8005b1a:	4293      	cmp	r3, r2
 8005b1c:	d03b      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b1e:	68fb      	ldr	r3, [r7, #12]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	4a6d      	ldr	r2, [pc, #436]	; (8005cd8 <DMA_SetConfig+0x24c>)
 8005b24:	4293      	cmp	r3, r2
 8005b26:	d036      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	4a6b      	ldr	r2, [pc, #428]	; (8005cdc <DMA_SetConfig+0x250>)
 8005b2e:	4293      	cmp	r3, r2
 8005b30:	d031      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b32:	68fb      	ldr	r3, [r7, #12]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	4a6a      	ldr	r2, [pc, #424]	; (8005ce0 <DMA_SetConfig+0x254>)
 8005b38:	4293      	cmp	r3, r2
 8005b3a:	d02c      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b3c:	68fb      	ldr	r3, [r7, #12]
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	4a68      	ldr	r2, [pc, #416]	; (8005ce4 <DMA_SetConfig+0x258>)
 8005b42:	4293      	cmp	r3, r2
 8005b44:	d027      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b46:	68fb      	ldr	r3, [r7, #12]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	4a67      	ldr	r2, [pc, #412]	; (8005ce8 <DMA_SetConfig+0x25c>)
 8005b4c:	4293      	cmp	r3, r2
 8005b4e:	d022      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	4a65      	ldr	r2, [pc, #404]	; (8005cec <DMA_SetConfig+0x260>)
 8005b56:	4293      	cmp	r3, r2
 8005b58:	d01d      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b5a:	68fb      	ldr	r3, [r7, #12]
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	4a64      	ldr	r2, [pc, #400]	; (8005cf0 <DMA_SetConfig+0x264>)
 8005b60:	4293      	cmp	r3, r2
 8005b62:	d018      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b64:	68fb      	ldr	r3, [r7, #12]
 8005b66:	681b      	ldr	r3, [r3, #0]
 8005b68:	4a62      	ldr	r2, [pc, #392]	; (8005cf4 <DMA_SetConfig+0x268>)
 8005b6a:	4293      	cmp	r3, r2
 8005b6c:	d013      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b6e:	68fb      	ldr	r3, [r7, #12]
 8005b70:	681b      	ldr	r3, [r3, #0]
 8005b72:	4a61      	ldr	r2, [pc, #388]	; (8005cf8 <DMA_SetConfig+0x26c>)
 8005b74:	4293      	cmp	r3, r2
 8005b76:	d00e      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	4a5f      	ldr	r2, [pc, #380]	; (8005cfc <DMA_SetConfig+0x270>)
 8005b7e:	4293      	cmp	r3, r2
 8005b80:	d009      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b82:	68fb      	ldr	r3, [r7, #12]
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	4a5e      	ldr	r2, [pc, #376]	; (8005d00 <DMA_SetConfig+0x274>)
 8005b88:	4293      	cmp	r3, r2
 8005b8a:	d004      	beq.n	8005b96 <DMA_SetConfig+0x10a>
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	681b      	ldr	r3, [r3, #0]
 8005b90:	4a5c      	ldr	r2, [pc, #368]	; (8005d04 <DMA_SetConfig+0x278>)
 8005b92:	4293      	cmp	r3, r2
 8005b94:	d101      	bne.n	8005b9a <DMA_SetConfig+0x10e>
 8005b96:	2301      	movs	r3, #1
 8005b98:	e000      	b.n	8005b9c <DMA_SetConfig+0x110>
 8005b9a:	2300      	movs	r3, #0
 8005b9c:	2b00      	cmp	r3, #0
 8005b9e:	d00d      	beq.n	8005bbc <DMA_SetConfig+0x130>
  {
    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8005ba0:	68fb      	ldr	r3, [r7, #12]
 8005ba2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005ba4:	68fa      	ldr	r2, [r7, #12]
 8005ba6:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005ba8:	605a      	str	r2, [r3, #4]

    if(hdma->DMAmuxRequestGen != 0U)
 8005baa:	68fb      	ldr	r3, [r7, #12]
 8005bac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005bae:	2b00      	cmp	r3, #0
 8005bb0:	d004      	beq.n	8005bbc <DMA_SetConfig+0x130>
    {
      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8005bb2:	68fb      	ldr	r3, [r7, #12]
 8005bb4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005bb6:	68fa      	ldr	r2, [r7, #12]
 8005bb8:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005bba:	605a      	str	r2, [r3, #4]
    }
  }

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005bbc:	68fb      	ldr	r3, [r7, #12]
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	4a39      	ldr	r2, [pc, #228]	; (8005ca8 <DMA_SetConfig+0x21c>)
 8005bc2:	4293      	cmp	r3, r2
 8005bc4:	d04a      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	4a38      	ldr	r2, [pc, #224]	; (8005cac <DMA_SetConfig+0x220>)
 8005bcc:	4293      	cmp	r3, r2
 8005bce:	d045      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005bd0:	68fb      	ldr	r3, [r7, #12]
 8005bd2:	681b      	ldr	r3, [r3, #0]
 8005bd4:	4a36      	ldr	r2, [pc, #216]	; (8005cb0 <DMA_SetConfig+0x224>)
 8005bd6:	4293      	cmp	r3, r2
 8005bd8:	d040      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	681b      	ldr	r3, [r3, #0]
 8005bde:	4a35      	ldr	r2, [pc, #212]	; (8005cb4 <DMA_SetConfig+0x228>)
 8005be0:	4293      	cmp	r3, r2
 8005be2:	d03b      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	4a33      	ldr	r2, [pc, #204]	; (8005cb8 <DMA_SetConfig+0x22c>)
 8005bea:	4293      	cmp	r3, r2
 8005bec:	d036      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005bee:	68fb      	ldr	r3, [r7, #12]
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	4a32      	ldr	r2, [pc, #200]	; (8005cbc <DMA_SetConfig+0x230>)
 8005bf4:	4293      	cmp	r3, r2
 8005bf6:	d031      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	4a30      	ldr	r2, [pc, #192]	; (8005cc0 <DMA_SetConfig+0x234>)
 8005bfe:	4293      	cmp	r3, r2
 8005c00:	d02c      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	681b      	ldr	r3, [r3, #0]
 8005c06:	4a2f      	ldr	r2, [pc, #188]	; (8005cc4 <DMA_SetConfig+0x238>)
 8005c08:	4293      	cmp	r3, r2
 8005c0a:	d027      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	4a2d      	ldr	r2, [pc, #180]	; (8005cc8 <DMA_SetConfig+0x23c>)
 8005c12:	4293      	cmp	r3, r2
 8005c14:	d022      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	4a2c      	ldr	r2, [pc, #176]	; (8005ccc <DMA_SetConfig+0x240>)
 8005c1c:	4293      	cmp	r3, r2
 8005c1e:	d01d      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	4a2a      	ldr	r2, [pc, #168]	; (8005cd0 <DMA_SetConfig+0x244>)
 8005c26:	4293      	cmp	r3, r2
 8005c28:	d018      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	4a29      	ldr	r2, [pc, #164]	; (8005cd4 <DMA_SetConfig+0x248>)
 8005c30:	4293      	cmp	r3, r2
 8005c32:	d013      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c34:	68fb      	ldr	r3, [r7, #12]
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	4a27      	ldr	r2, [pc, #156]	; (8005cd8 <DMA_SetConfig+0x24c>)
 8005c3a:	4293      	cmp	r3, r2
 8005c3c:	d00e      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	4a26      	ldr	r2, [pc, #152]	; (8005cdc <DMA_SetConfig+0x250>)
 8005c44:	4293      	cmp	r3, r2
 8005c46:	d009      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c48:	68fb      	ldr	r3, [r7, #12]
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	4a24      	ldr	r2, [pc, #144]	; (8005ce0 <DMA_SetConfig+0x254>)
 8005c4e:	4293      	cmp	r3, r2
 8005c50:	d004      	beq.n	8005c5c <DMA_SetConfig+0x1d0>
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	681b      	ldr	r3, [r3, #0]
 8005c56:	4a23      	ldr	r2, [pc, #140]	; (8005ce4 <DMA_SetConfig+0x258>)
 8005c58:	4293      	cmp	r3, r2
 8005c5a:	d101      	bne.n	8005c60 <DMA_SetConfig+0x1d4>
 8005c5c:	2301      	movs	r3, #1
 8005c5e:	e000      	b.n	8005c62 <DMA_SetConfig+0x1d6>
 8005c60:	2300      	movs	r3, #0
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d059      	beq.n	8005d1a <DMA_SetConfig+0x28e>
  {
    /* Clear all interrupt flags at correct offset within the register */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8005c66:	68fb      	ldr	r3, [r7, #12]
 8005c68:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005c6a:	f003 031f 	and.w	r3, r3, #31
 8005c6e:	223f      	movs	r2, #63	; 0x3f
 8005c70:	409a      	lsls	r2, r3
 8005c72:	697b      	ldr	r3, [r7, #20]
 8005c74:	609a      	str	r2, [r3, #8]

    /* Clear DBM bit */
    ((DMA_Stream_TypeDef *)hdma->Instance)->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	681a      	ldr	r2, [r3, #0]
 8005c7c:	68fb      	ldr	r3, [r7, #12]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005c84:	601a      	str	r2, [r3, #0]

    /* Configure DMA Stream data length */
    ((DMA_Stream_TypeDef *)hdma->Instance)->NDTR = DataLength;
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	683a      	ldr	r2, [r7, #0]
 8005c8c:	605a      	str	r2, [r3, #4]

    /* Peripheral to Memory */
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	689b      	ldr	r3, [r3, #8]
 8005c92:	2b40      	cmp	r3, #64	; 0x40
 8005c94:	d138      	bne.n	8005d08 <DMA_SetConfig+0x27c>
    {
      /* Configure DMA Stream destination address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = DstAddress;
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	681b      	ldr	r3, [r3, #0]
 8005c9a:	687a      	ldr	r2, [r7, #4]
 8005c9c:	609a      	str	r2, [r3, #8]

      /* Configure DMA Stream source address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = SrcAddress;
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	68ba      	ldr	r2, [r7, #8]
 8005ca4:	60da      	str	r2, [r3, #12]
  }
  else
  {
    /* Nothing To Do */
  }
}
 8005ca6:	e086      	b.n	8005db6 <DMA_SetConfig+0x32a>
 8005ca8:	40020010 	.word	0x40020010
 8005cac:	40020028 	.word	0x40020028
 8005cb0:	40020040 	.word	0x40020040
 8005cb4:	40020058 	.word	0x40020058
 8005cb8:	40020070 	.word	0x40020070
 8005cbc:	40020088 	.word	0x40020088
 8005cc0:	400200a0 	.word	0x400200a0
 8005cc4:	400200b8 	.word	0x400200b8
 8005cc8:	40020410 	.word	0x40020410
 8005ccc:	40020428 	.word	0x40020428
 8005cd0:	40020440 	.word	0x40020440
 8005cd4:	40020458 	.word	0x40020458
 8005cd8:	40020470 	.word	0x40020470
 8005cdc:	40020488 	.word	0x40020488
 8005ce0:	400204a0 	.word	0x400204a0
 8005ce4:	400204b8 	.word	0x400204b8
 8005ce8:	58025408 	.word	0x58025408
 8005cec:	5802541c 	.word	0x5802541c
 8005cf0:	58025430 	.word	0x58025430
 8005cf4:	58025444 	.word	0x58025444
 8005cf8:	58025458 	.word	0x58025458
 8005cfc:	5802546c 	.word	0x5802546c
 8005d00:	58025480 	.word	0x58025480
 8005d04:	58025494 	.word	0x58025494
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = SrcAddress;
 8005d08:	68fb      	ldr	r3, [r7, #12]
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	68ba      	ldr	r2, [r7, #8]
 8005d0e:	609a      	str	r2, [r3, #8]
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = DstAddress;
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	687a      	ldr	r2, [r7, #4]
 8005d16:	60da      	str	r2, [r3, #12]
}
 8005d18:	e04d      	b.n	8005db6 <DMA_SetConfig+0x32a>
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	4a29      	ldr	r2, [pc, #164]	; (8005dc4 <DMA_SetConfig+0x338>)
 8005d20:	4293      	cmp	r3, r2
 8005d22:	d022      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	4a27      	ldr	r2, [pc, #156]	; (8005dc8 <DMA_SetConfig+0x33c>)
 8005d2a:	4293      	cmp	r3, r2
 8005d2c:	d01d      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	4a26      	ldr	r2, [pc, #152]	; (8005dcc <DMA_SetConfig+0x340>)
 8005d34:	4293      	cmp	r3, r2
 8005d36:	d018      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	4a24      	ldr	r2, [pc, #144]	; (8005dd0 <DMA_SetConfig+0x344>)
 8005d3e:	4293      	cmp	r3, r2
 8005d40:	d013      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d42:	68fb      	ldr	r3, [r7, #12]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	4a23      	ldr	r2, [pc, #140]	; (8005dd4 <DMA_SetConfig+0x348>)
 8005d48:	4293      	cmp	r3, r2
 8005d4a:	d00e      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	4a21      	ldr	r2, [pc, #132]	; (8005dd8 <DMA_SetConfig+0x34c>)
 8005d52:	4293      	cmp	r3, r2
 8005d54:	d009      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	4a20      	ldr	r2, [pc, #128]	; (8005ddc <DMA_SetConfig+0x350>)
 8005d5c:	4293      	cmp	r3, r2
 8005d5e:	d004      	beq.n	8005d6a <DMA_SetConfig+0x2de>
 8005d60:	68fb      	ldr	r3, [r7, #12]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	4a1e      	ldr	r2, [pc, #120]	; (8005de0 <DMA_SetConfig+0x354>)
 8005d66:	4293      	cmp	r3, r2
 8005d68:	d101      	bne.n	8005d6e <DMA_SetConfig+0x2e2>
 8005d6a:	2301      	movs	r3, #1
 8005d6c:	e000      	b.n	8005d70 <DMA_SetConfig+0x2e4>
 8005d6e:	2300      	movs	r3, #0
 8005d70:	2b00      	cmp	r3, #0
 8005d72:	d020      	beq.n	8005db6 <DMA_SetConfig+0x32a>
    regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005d78:	f003 031f 	and.w	r3, r3, #31
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	409a      	lsls	r2, r3
 8005d80:	693b      	ldr	r3, [r7, #16]
 8005d82:	605a      	str	r2, [r3, #4]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CNDTR = DataLength;
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	681b      	ldr	r3, [r3, #0]
 8005d88:	683a      	ldr	r2, [r7, #0]
 8005d8a:	605a      	str	r2, [r3, #4]
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005d8c:	68fb      	ldr	r3, [r7, #12]
 8005d8e:	689b      	ldr	r3, [r3, #8]
 8005d90:	2b40      	cmp	r3, #64	; 0x40
 8005d92:	d108      	bne.n	8005da6 <DMA_SetConfig+0x31a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = DstAddress;
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	681b      	ldr	r3, [r3, #0]
 8005d98:	687a      	ldr	r2, [r7, #4]
 8005d9a:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = SrcAddress;
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	681b      	ldr	r3, [r3, #0]
 8005da0:	68ba      	ldr	r2, [r7, #8]
 8005da2:	60da      	str	r2, [r3, #12]
}
 8005da4:	e007      	b.n	8005db6 <DMA_SetConfig+0x32a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = SrcAddress;
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	68ba      	ldr	r2, [r7, #8]
 8005dac:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = DstAddress;
 8005dae:	68fb      	ldr	r3, [r7, #12]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	687a      	ldr	r2, [r7, #4]
 8005db4:	60da      	str	r2, [r3, #12]
}
 8005db6:	bf00      	nop
 8005db8:	371c      	adds	r7, #28
 8005dba:	46bd      	mov	sp, r7
 8005dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc0:	4770      	bx	lr
 8005dc2:	bf00      	nop
 8005dc4:	58025408 	.word	0x58025408
 8005dc8:	5802541c 	.word	0x5802541c
 8005dcc:	58025430 	.word	0x58025430
 8005dd0:	58025444 	.word	0x58025444
 8005dd4:	58025458 	.word	0x58025458
 8005dd8:	5802546c 	.word	0x5802546c
 8005ddc:	58025480 	.word	0x58025480
 8005de0:	58025494 	.word	0x58025494

08005de4 <DMA_CalcBaseAndBitshift>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8005de4:	b480      	push	{r7}
 8005de6:	b085      	sub	sp, #20
 8005de8:	af00      	add	r7, sp, #0
 8005dea:	6078      	str	r0, [r7, #4]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	4a42      	ldr	r2, [pc, #264]	; (8005efc <DMA_CalcBaseAndBitshift+0x118>)
 8005df2:	4293      	cmp	r3, r2
 8005df4:	d04a      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	4a41      	ldr	r2, [pc, #260]	; (8005f00 <DMA_CalcBaseAndBitshift+0x11c>)
 8005dfc:	4293      	cmp	r3, r2
 8005dfe:	d045      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	681b      	ldr	r3, [r3, #0]
 8005e04:	4a3f      	ldr	r2, [pc, #252]	; (8005f04 <DMA_CalcBaseAndBitshift+0x120>)
 8005e06:	4293      	cmp	r3, r2
 8005e08:	d040      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e0a:	687b      	ldr	r3, [r7, #4]
 8005e0c:	681b      	ldr	r3, [r3, #0]
 8005e0e:	4a3e      	ldr	r2, [pc, #248]	; (8005f08 <DMA_CalcBaseAndBitshift+0x124>)
 8005e10:	4293      	cmp	r3, r2
 8005e12:	d03b      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	4a3c      	ldr	r2, [pc, #240]	; (8005f0c <DMA_CalcBaseAndBitshift+0x128>)
 8005e1a:	4293      	cmp	r3, r2
 8005e1c:	d036      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	4a3b      	ldr	r2, [pc, #236]	; (8005f10 <DMA_CalcBaseAndBitshift+0x12c>)
 8005e24:	4293      	cmp	r3, r2
 8005e26:	d031      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	4a39      	ldr	r2, [pc, #228]	; (8005f14 <DMA_CalcBaseAndBitshift+0x130>)
 8005e2e:	4293      	cmp	r3, r2
 8005e30:	d02c      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	4a38      	ldr	r2, [pc, #224]	; (8005f18 <DMA_CalcBaseAndBitshift+0x134>)
 8005e38:	4293      	cmp	r3, r2
 8005e3a:	d027      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	681b      	ldr	r3, [r3, #0]
 8005e40:	4a36      	ldr	r2, [pc, #216]	; (8005f1c <DMA_CalcBaseAndBitshift+0x138>)
 8005e42:	4293      	cmp	r3, r2
 8005e44:	d022      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e46:	687b      	ldr	r3, [r7, #4]
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	4a35      	ldr	r2, [pc, #212]	; (8005f20 <DMA_CalcBaseAndBitshift+0x13c>)
 8005e4c:	4293      	cmp	r3, r2
 8005e4e:	d01d      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	4a33      	ldr	r2, [pc, #204]	; (8005f24 <DMA_CalcBaseAndBitshift+0x140>)
 8005e56:	4293      	cmp	r3, r2
 8005e58:	d018      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e5a:	687b      	ldr	r3, [r7, #4]
 8005e5c:	681b      	ldr	r3, [r3, #0]
 8005e5e:	4a32      	ldr	r2, [pc, #200]	; (8005f28 <DMA_CalcBaseAndBitshift+0x144>)
 8005e60:	4293      	cmp	r3, r2
 8005e62:	d013      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	4a30      	ldr	r2, [pc, #192]	; (8005f2c <DMA_CalcBaseAndBitshift+0x148>)
 8005e6a:	4293      	cmp	r3, r2
 8005e6c:	d00e      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	681b      	ldr	r3, [r3, #0]
 8005e72:	4a2f      	ldr	r2, [pc, #188]	; (8005f30 <DMA_CalcBaseAndBitshift+0x14c>)
 8005e74:	4293      	cmp	r3, r2
 8005e76:	d009      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	4a2d      	ldr	r2, [pc, #180]	; (8005f34 <DMA_CalcBaseAndBitshift+0x150>)
 8005e7e:	4293      	cmp	r3, r2
 8005e80:	d004      	beq.n	8005e8c <DMA_CalcBaseAndBitshift+0xa8>
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	681b      	ldr	r3, [r3, #0]
 8005e86:	4a2c      	ldr	r2, [pc, #176]	; (8005f38 <DMA_CalcBaseAndBitshift+0x154>)
 8005e88:	4293      	cmp	r3, r2
 8005e8a:	d101      	bne.n	8005e90 <DMA_CalcBaseAndBitshift+0xac>
 8005e8c:	2301      	movs	r3, #1
 8005e8e:	e000      	b.n	8005e92 <DMA_CalcBaseAndBitshift+0xae>
 8005e90:	2300      	movs	r3, #0
 8005e92:	2b00      	cmp	r3, #0
 8005e94:	d024      	beq.n	8005ee0 <DMA_CalcBaseAndBitshift+0xfc>
  {
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	b2db      	uxtb	r3, r3
 8005e9c:	3b10      	subs	r3, #16
 8005e9e:	4a27      	ldr	r2, [pc, #156]	; (8005f3c <DMA_CalcBaseAndBitshift+0x158>)
 8005ea0:	fba2 2303 	umull	r2, r3, r2, r3
 8005ea4:	091b      	lsrs	r3, r3, #4
 8005ea6:	60fb      	str	r3, [r7, #12]

    /* lookup table for necessary bitshift of flags within status registers */
    static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	f003 0307 	and.w	r3, r3, #7
 8005eae:	4a24      	ldr	r2, [pc, #144]	; (8005f40 <DMA_CalcBaseAndBitshift+0x15c>)
 8005eb0:	5cd3      	ldrb	r3, [r2, r3]
 8005eb2:	461a      	mov	r2, r3
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	65da      	str	r2, [r3, #92]	; 0x5c

    if (stream_number > 3U)
 8005eb8:	68fb      	ldr	r3, [r7, #12]
 8005eba:	2b03      	cmp	r3, #3
 8005ebc:	d908      	bls.n	8005ed0 <DMA_CalcBaseAndBitshift+0xec>
    {
      /* return pointer to HISR and HIFCR */
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	461a      	mov	r2, r3
 8005ec4:	4b1f      	ldr	r3, [pc, #124]	; (8005f44 <DMA_CalcBaseAndBitshift+0x160>)
 8005ec6:	4013      	ands	r3, r2
 8005ec8:	1d1a      	adds	r2, r3, #4
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	659a      	str	r2, [r3, #88]	; 0x58
 8005ece:	e00d      	b.n	8005eec <DMA_CalcBaseAndBitshift+0x108>
    }
    else
    {
      /* return pointer to LISR and LIFCR */
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	681b      	ldr	r3, [r3, #0]
 8005ed4:	461a      	mov	r2, r3
 8005ed6:	4b1b      	ldr	r3, [pc, #108]	; (8005f44 <DMA_CalcBaseAndBitshift+0x160>)
 8005ed8:	4013      	ands	r3, r2
 8005eda:	687a      	ldr	r2, [r7, #4]
 8005edc:	6593      	str	r3, [r2, #88]	; 0x58
 8005ede:	e005      	b.n	8005eec <DMA_CalcBaseAndBitshift+0x108>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	681b      	ldr	r3, [r3, #0]
 8005ee4:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	659a      	str	r2, [r3, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 8005ef0:	4618      	mov	r0, r3
 8005ef2:	3714      	adds	r7, #20
 8005ef4:	46bd      	mov	sp, r7
 8005ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005efa:	4770      	bx	lr
 8005efc:	40020010 	.word	0x40020010
 8005f00:	40020028 	.word	0x40020028
 8005f04:	40020040 	.word	0x40020040
 8005f08:	40020058 	.word	0x40020058
 8005f0c:	40020070 	.word	0x40020070
 8005f10:	40020088 	.word	0x40020088
 8005f14:	400200a0 	.word	0x400200a0
 8005f18:	400200b8 	.word	0x400200b8
 8005f1c:	40020410 	.word	0x40020410
 8005f20:	40020428 	.word	0x40020428
 8005f24:	40020440 	.word	0x40020440
 8005f28:	40020458 	.word	0x40020458
 8005f2c:	40020470 	.word	0x40020470
 8005f30:	40020488 	.word	0x40020488
 8005f34:	400204a0 	.word	0x400204a0
 8005f38:	400204b8 	.word	0x400204b8
 8005f3c:	aaaaaaab 	.word	0xaaaaaaab
 8005f40:	08027f98 	.word	0x08027f98
 8005f44:	fffffc00 	.word	0xfffffc00

08005f48 <DMA_CheckFifoParam>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8005f48:	b480      	push	{r7}
 8005f4a:	b085      	sub	sp, #20
 8005f4c:	af00      	add	r7, sp, #0
 8005f4e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005f50:	2300      	movs	r3, #0
 8005f52:	73fb      	strb	r3, [r7, #15]

  /* Memory Data size equal to Byte */
  if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	699b      	ldr	r3, [r3, #24]
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d120      	bne.n	8005f9e <DMA_CheckFifoParam+0x56>
  {
    switch (hdma->Init.FIFOThreshold)
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f60:	2b03      	cmp	r3, #3
 8005f62:	d858      	bhi.n	8006016 <DMA_CheckFifoParam+0xce>
 8005f64:	a201      	add	r2, pc, #4	; (adr r2, 8005f6c <DMA_CheckFifoParam+0x24>)
 8005f66:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005f6a:	bf00      	nop
 8005f6c:	08005f7d 	.word	0x08005f7d
 8005f70:	08005f8f 	.word	0x08005f8f
 8005f74:	08005f7d 	.word	0x08005f7d
 8005f78:	08006017 	.word	0x08006017
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:

        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f80:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005f84:	2b00      	cmp	r3, #0
 8005f86:	d048      	beq.n	800601a <DMA_CheckFifoParam+0xd2>
        {
          status = HAL_ERROR;
 8005f88:	2301      	movs	r3, #1
 8005f8a:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005f8c:	e045      	b.n	800601a <DMA_CheckFifoParam+0xd2>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005f8e:	687b      	ldr	r3, [r7, #4]
 8005f90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f92:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005f96:	d142      	bne.n	800601e <DMA_CheckFifoParam+0xd6>
        {
          status = HAL_ERROR;
 8005f98:	2301      	movs	r3, #1
 8005f9a:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005f9c:	e03f      	b.n	800601e <DMA_CheckFifoParam+0xd6>
        break;
    }
  }

  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	699b      	ldr	r3, [r3, #24]
 8005fa2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005fa6:	d123      	bne.n	8005ff0 <DMA_CheckFifoParam+0xa8>
  {
    switch (hdma->Init.FIFOThreshold)
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005fac:	2b03      	cmp	r3, #3
 8005fae:	d838      	bhi.n	8006022 <DMA_CheckFifoParam+0xda>
 8005fb0:	a201      	add	r2, pc, #4	; (adr r2, 8005fb8 <DMA_CheckFifoParam+0x70>)
 8005fb2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005fb6:	bf00      	nop
 8005fb8:	08005fc9 	.word	0x08005fc9
 8005fbc:	08005fcf 	.word	0x08005fcf
 8005fc0:	08005fc9 	.word	0x08005fc9
 8005fc4:	08005fe1 	.word	0x08005fe1
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
        status = HAL_ERROR;
 8005fc8:	2301      	movs	r3, #1
 8005fca:	73fb      	strb	r3, [r7, #15]
        break;
 8005fcc:	e030      	b.n	8006030 <DMA_CheckFifoParam+0xe8>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005fd2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d025      	beq.n	8006026 <DMA_CheckFifoParam+0xde>
        {
          status = HAL_ERROR;
 8005fda:	2301      	movs	r3, #1
 8005fdc:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005fde:	e022      	b.n	8006026 <DMA_CheckFifoParam+0xde>

      case DMA_FIFO_THRESHOLD_FULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005fe4:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005fe8:	d11f      	bne.n	800602a <DMA_CheckFifoParam+0xe2>
        {
          status = HAL_ERROR;
 8005fea:	2301      	movs	r3, #1
 8005fec:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005fee:	e01c      	b.n	800602a <DMA_CheckFifoParam+0xe2>
  }

  /* Memory Data size equal to Word */
  else
  {
    switch (hdma->Init.FIFOThreshold)
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005ff4:	2b02      	cmp	r3, #2
 8005ff6:	d902      	bls.n	8005ffe <DMA_CheckFifoParam+0xb6>
 8005ff8:	2b03      	cmp	r3, #3
 8005ffa:	d003      	beq.n	8006004 <DMA_CheckFifoParam+0xbc>
          status = HAL_ERROR;
        }
    break;

      default:
        break;
 8005ffc:	e018      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        status = HAL_ERROR;
 8005ffe:	2301      	movs	r3, #1
 8006000:	73fb      	strb	r3, [r7, #15]
        break;
 8006002:	e015      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006008:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800600c:	2b00      	cmp	r3, #0
 800600e:	d00e      	beq.n	800602e <DMA_CheckFifoParam+0xe6>
          status = HAL_ERROR;
 8006010:	2301      	movs	r3, #1
 8006012:	73fb      	strb	r3, [r7, #15]
    break;
 8006014:	e00b      	b.n	800602e <DMA_CheckFifoParam+0xe6>
        break;
 8006016:	bf00      	nop
 8006018:	e00a      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        break;
 800601a:	bf00      	nop
 800601c:	e008      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        break;
 800601e:	bf00      	nop
 8006020:	e006      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        break;
 8006022:	bf00      	nop
 8006024:	e004      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        break;
 8006026:	bf00      	nop
 8006028:	e002      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
        break;
 800602a:	bf00      	nop
 800602c:	e000      	b.n	8006030 <DMA_CheckFifoParam+0xe8>
    break;
 800602e:	bf00      	nop
    }
  }

  return status;
 8006030:	7bfb      	ldrb	r3, [r7, #15]
}
 8006032:	4618      	mov	r0, r3
 8006034:	3714      	adds	r7, #20
 8006036:	46bd      	mov	sp, r7
 8006038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800603c:	4770      	bx	lr
 800603e:	bf00      	nop

08006040 <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8006040:	b480      	push	{r7}
 8006042:	b085      	sub	sp, #20
 8006044:	af00      	add	r7, sp, #0
 8006046:	6078      	str	r0, [r7, #4]
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	60bb      	str	r3, [r7, #8]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 800604e:	687b      	ldr	r3, [r7, #4]
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	4a38      	ldr	r2, [pc, #224]	; (8006134 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8006054:	4293      	cmp	r3, r2
 8006056:	d022      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	4a36      	ldr	r2, [pc, #216]	; (8006138 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 800605e:	4293      	cmp	r3, r2
 8006060:	d01d      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	681b      	ldr	r3, [r3, #0]
 8006066:	4a35      	ldr	r2, [pc, #212]	; (800613c <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 8006068:	4293      	cmp	r3, r2
 800606a:	d018      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	681b      	ldr	r3, [r3, #0]
 8006070:	4a33      	ldr	r2, [pc, #204]	; (8006140 <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 8006072:	4293      	cmp	r3, r2
 8006074:	d013      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	4a32      	ldr	r2, [pc, #200]	; (8006144 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 800607c:	4293      	cmp	r3, r2
 800607e:	d00e      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	4a30      	ldr	r2, [pc, #192]	; (8006148 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 8006086:	4293      	cmp	r3, r2
 8006088:	d009      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	681b      	ldr	r3, [r3, #0]
 800608e:	4a2f      	ldr	r2, [pc, #188]	; (800614c <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 8006090:	4293      	cmp	r3, r2
 8006092:	d004      	beq.n	800609e <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	4a2d      	ldr	r2, [pc, #180]	; (8006150 <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 800609a:	4293      	cmp	r3, r2
 800609c:	d101      	bne.n	80060a2 <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 800609e:	2301      	movs	r3, #1
 80060a0:	e000      	b.n	80060a4 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 80060a2:	2300      	movs	r3, #0
 80060a4:	2b00      	cmp	r3, #0
 80060a6:	d01a      	beq.n	80060de <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
  {
    /* BDMA Channels are connected to DMAMUX2 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	b2db      	uxtb	r3, r3
 80060ae:	3b08      	subs	r3, #8
 80060b0:	4a28      	ldr	r2, [pc, #160]	; (8006154 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 80060b2:	fba2 2303 	umull	r2, r3, r2, r3
 80060b6:	091b      	lsrs	r3, r3, #4
 80060b8:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 80060ba:	68fa      	ldr	r2, [r7, #12]
 80060bc:	4b26      	ldr	r3, [pc, #152]	; (8006158 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 80060be:	4413      	add	r3, r2
 80060c0:	009b      	lsls	r3, r3, #2
 80060c2:	461a      	mov	r2, r3
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	4a24      	ldr	r2, [pc, #144]	; (800615c <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 80060cc:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 80060ce:	68fb      	ldr	r3, [r7, #12]
 80060d0:	f003 031f 	and.w	r3, r3, #31
 80060d4:	2201      	movs	r2, #1
 80060d6:	409a      	lsls	r2, r3
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	669a      	str	r2, [r3, #104]	; 0x68
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
}
 80060dc:	e024      	b.n	8006128 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	b2db      	uxtb	r3, r3
 80060e4:	3b10      	subs	r3, #16
 80060e6:	4a1e      	ldr	r2, [pc, #120]	; (8006160 <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 80060e8:	fba2 2303 	umull	r2, r3, r2, r3
 80060ec:	091b      	lsrs	r3, r3, #4
 80060ee:	60fb      	str	r3, [r7, #12]
    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 80060f0:	68bb      	ldr	r3, [r7, #8]
 80060f2:	4a1c      	ldr	r2, [pc, #112]	; (8006164 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 80060f4:	4293      	cmp	r3, r2
 80060f6:	d806      	bhi.n	8006106 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 80060f8:	68bb      	ldr	r3, [r7, #8]
 80060fa:	4a1b      	ldr	r2, [pc, #108]	; (8006168 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 80060fc:	4293      	cmp	r3, r2
 80060fe:	d902      	bls.n	8006106 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
      stream_number += 8U;
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	3308      	adds	r3, #8
 8006104:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8006106:	68fa      	ldr	r2, [r7, #12]
 8006108:	4b18      	ldr	r3, [pc, #96]	; (800616c <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 800610a:	4413      	add	r3, r2
 800610c:	009b      	lsls	r3, r3, #2
 800610e:	461a      	mov	r2, r3
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	4a16      	ldr	r2, [pc, #88]	; (8006170 <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 8006118:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 800611a:	68fb      	ldr	r3, [r7, #12]
 800611c:	f003 031f 	and.w	r3, r3, #31
 8006120:	2201      	movs	r2, #1
 8006122:	409a      	lsls	r2, r3
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	669a      	str	r2, [r3, #104]	; 0x68
}
 8006128:	bf00      	nop
 800612a:	3714      	adds	r7, #20
 800612c:	46bd      	mov	sp, r7
 800612e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006132:	4770      	bx	lr
 8006134:	58025408 	.word	0x58025408
 8006138:	5802541c 	.word	0x5802541c
 800613c:	58025430 	.word	0x58025430
 8006140:	58025444 	.word	0x58025444
 8006144:	58025458 	.word	0x58025458
 8006148:	5802546c 	.word	0x5802546c
 800614c:	58025480 	.word	0x58025480
 8006150:	58025494 	.word	0x58025494
 8006154:	cccccccd 	.word	0xcccccccd
 8006158:	16009600 	.word	0x16009600
 800615c:	58025880 	.word	0x58025880
 8006160:	aaaaaaab 	.word	0xaaaaaaab
 8006164:	400204b8 	.word	0x400204b8
 8006168:	4002040f 	.word	0x4002040f
 800616c:	10008200 	.word	0x10008200
 8006170:	40020880 	.word	0x40020880

08006174 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8006174:	b480      	push	{r7}
 8006176:	b085      	sub	sp, #20
 8006178:	af00      	add	r7, sp, #0
 800617a:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	685b      	ldr	r3, [r3, #4]
 8006180:	b2db      	uxtb	r3, r3
 8006182:	60fb      	str	r3, [r7, #12]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	2b00      	cmp	r3, #0
 8006188:	d04a      	beq.n	8006220 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 800618a:	68fb      	ldr	r3, [r7, #12]
 800618c:	2b08      	cmp	r3, #8
 800618e:	d847      	bhi.n	8006220 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	681b      	ldr	r3, [r3, #0]
 8006194:	4a25      	ldr	r2, [pc, #148]	; (800622c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 8006196:	4293      	cmp	r3, r2
 8006198:	d022      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 800619a:	687b      	ldr	r3, [r7, #4]
 800619c:	681b      	ldr	r3, [r3, #0]
 800619e:	4a24      	ldr	r2, [pc, #144]	; (8006230 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 80061a0:	4293      	cmp	r3, r2
 80061a2:	d01d      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80061a4:	687b      	ldr	r3, [r7, #4]
 80061a6:	681b      	ldr	r3, [r3, #0]
 80061a8:	4a22      	ldr	r2, [pc, #136]	; (8006234 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 80061aa:	4293      	cmp	r3, r2
 80061ac:	d018      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	4a21      	ldr	r2, [pc, #132]	; (8006238 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 80061b4:	4293      	cmp	r3, r2
 80061b6:	d013      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	4a1f      	ldr	r2, [pc, #124]	; (800623c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 80061be:	4293      	cmp	r3, r2
 80061c0:	d00e      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	4a1e      	ldr	r2, [pc, #120]	; (8006240 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 80061c8:	4293      	cmp	r3, r2
 80061ca:	d009      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	4a1c      	ldr	r2, [pc, #112]	; (8006244 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 80061d2:	4293      	cmp	r3, r2
 80061d4:	d004      	beq.n	80061e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	4a1b      	ldr	r2, [pc, #108]	; (8006248 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 80061dc:	4293      	cmp	r3, r2
 80061de:	d101      	bne.n	80061e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 80061e0:	2301      	movs	r3, #1
 80061e2:	e000      	b.n	80061e6 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 80061e4:	2300      	movs	r3, #0
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d00a      	beq.n	8006200 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
    {
      /* BDMA Channels are connected to DMAMUX2 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 80061ea:	68fa      	ldr	r2, [r7, #12]
 80061ec:	4b17      	ldr	r3, [pc, #92]	; (800624c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 80061ee:	4413      	add	r3, r2
 80061f0:	009b      	lsls	r3, r3, #2
 80061f2:	461a      	mov	r2, r3
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	4a15      	ldr	r2, [pc, #84]	; (8006250 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 80061fc:	671a      	str	r2, [r3, #112]	; 0x70
 80061fe:	e009      	b.n	8006214 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8006200:	68fa      	ldr	r2, [r7, #12]
 8006202:	4b14      	ldr	r3, [pc, #80]	; (8006254 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8006204:	4413      	add	r3, r2
 8006206:	009b      	lsls	r3, r3, #2
 8006208:	461a      	mov	r2, r3
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	4a11      	ldr	r2, [pc, #68]	; (8006258 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 8006212:	671a      	str	r2, [r3, #112]	; 0x70
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	3b01      	subs	r3, #1
 8006218:	2201      	movs	r2, #1
 800621a:	409a      	lsls	r2, r3
 800621c:	687b      	ldr	r3, [r7, #4]
 800621e:	675a      	str	r2, [r3, #116]	; 0x74
  }
}
 8006220:	bf00      	nop
 8006222:	3714      	adds	r7, #20
 8006224:	46bd      	mov	sp, r7
 8006226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800622a:	4770      	bx	lr
 800622c:	58025408 	.word	0x58025408
 8006230:	5802541c 	.word	0x5802541c
 8006234:	58025430 	.word	0x58025430
 8006238:	58025444 	.word	0x58025444
 800623c:	58025458 	.word	0x58025458
 8006240:	5802546c 	.word	0x5802546c
 8006244:	58025480 	.word	0x58025480
 8006248:	58025494 	.word	0x58025494
 800624c:	1600963f 	.word	0x1600963f
 8006250:	58025940 	.word	0x58025940
 8006254:	1000823f 	.word	0x1000823f
 8006258:	40020940 	.word	0x40020940

0800625c <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800625c:	b480      	push	{r7}
 800625e:	b089      	sub	sp, #36	; 0x24
 8006260:	af00      	add	r7, sp, #0
 8006262:	6078      	str	r0, [r7, #4]
 8006264:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8006266:	2300      	movs	r3, #0
 8006268:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 800626a:	4b89      	ldr	r3, [pc, #548]	; (8006490 <HAL_GPIO_Init+0x234>)
 800626c:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 800626e:	e194      	b.n	800659a <HAL_GPIO_Init+0x33e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8006270:	683b      	ldr	r3, [r7, #0]
 8006272:	681a      	ldr	r2, [r3, #0]
 8006274:	2101      	movs	r1, #1
 8006276:	69fb      	ldr	r3, [r7, #28]
 8006278:	fa01 f303 	lsl.w	r3, r1, r3
 800627c:	4013      	ands	r3, r2
 800627e:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 8006280:	693b      	ldr	r3, [r7, #16]
 8006282:	2b00      	cmp	r3, #0
 8006284:	f000 8186 	beq.w	8006594 <HAL_GPIO_Init+0x338>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006288:	683b      	ldr	r3, [r7, #0]
 800628a:	685b      	ldr	r3, [r3, #4]
 800628c:	f003 0303 	and.w	r3, r3, #3
 8006290:	2b01      	cmp	r3, #1
 8006292:	d005      	beq.n	80062a0 <HAL_GPIO_Init+0x44>
 8006294:	683b      	ldr	r3, [r7, #0]
 8006296:	685b      	ldr	r3, [r3, #4]
 8006298:	f003 0303 	and.w	r3, r3, #3
 800629c:	2b02      	cmp	r3, #2
 800629e:	d130      	bne.n	8006302 <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	689b      	ldr	r3, [r3, #8]
 80062a4:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80062a6:	69fb      	ldr	r3, [r7, #28]
 80062a8:	005b      	lsls	r3, r3, #1
 80062aa:	2203      	movs	r2, #3
 80062ac:	fa02 f303 	lsl.w	r3, r2, r3
 80062b0:	43db      	mvns	r3, r3
 80062b2:	69ba      	ldr	r2, [r7, #24]
 80062b4:	4013      	ands	r3, r2
 80062b6:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80062b8:	683b      	ldr	r3, [r7, #0]
 80062ba:	68da      	ldr	r2, [r3, #12]
 80062bc:	69fb      	ldr	r3, [r7, #28]
 80062be:	005b      	lsls	r3, r3, #1
 80062c0:	fa02 f303 	lsl.w	r3, r2, r3
 80062c4:	69ba      	ldr	r2, [r7, #24]
 80062c6:	4313      	orrs	r3, r2
 80062c8:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	69ba      	ldr	r2, [r7, #24]
 80062ce:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	685b      	ldr	r3, [r3, #4]
 80062d4:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80062d6:	2201      	movs	r2, #1
 80062d8:	69fb      	ldr	r3, [r7, #28]
 80062da:	fa02 f303 	lsl.w	r3, r2, r3
 80062de:	43db      	mvns	r3, r3
 80062e0:	69ba      	ldr	r2, [r7, #24]
 80062e2:	4013      	ands	r3, r2
 80062e4:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80062e6:	683b      	ldr	r3, [r7, #0]
 80062e8:	685b      	ldr	r3, [r3, #4]
 80062ea:	091b      	lsrs	r3, r3, #4
 80062ec:	f003 0201 	and.w	r2, r3, #1
 80062f0:	69fb      	ldr	r3, [r7, #28]
 80062f2:	fa02 f303 	lsl.w	r3, r2, r3
 80062f6:	69ba      	ldr	r2, [r7, #24]
 80062f8:	4313      	orrs	r3, r2
 80062fa:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	69ba      	ldr	r2, [r7, #24]
 8006300:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006302:	683b      	ldr	r3, [r7, #0]
 8006304:	685b      	ldr	r3, [r3, #4]
 8006306:	f003 0303 	and.w	r3, r3, #3
 800630a:	2b03      	cmp	r3, #3
 800630c:	d017      	beq.n	800633e <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800630e:	687b      	ldr	r3, [r7, #4]
 8006310:	68db      	ldr	r3, [r3, #12]
 8006312:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8006314:	69fb      	ldr	r3, [r7, #28]
 8006316:	005b      	lsls	r3, r3, #1
 8006318:	2203      	movs	r2, #3
 800631a:	fa02 f303 	lsl.w	r3, r2, r3
 800631e:	43db      	mvns	r3, r3
 8006320:	69ba      	ldr	r2, [r7, #24]
 8006322:	4013      	ands	r3, r2
 8006324:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006326:	683b      	ldr	r3, [r7, #0]
 8006328:	689a      	ldr	r2, [r3, #8]
 800632a:	69fb      	ldr	r3, [r7, #28]
 800632c:	005b      	lsls	r3, r3, #1
 800632e:	fa02 f303 	lsl.w	r3, r2, r3
 8006332:	69ba      	ldr	r2, [r7, #24]
 8006334:	4313      	orrs	r3, r2
 8006336:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	69ba      	ldr	r2, [r7, #24]
 800633c:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800633e:	683b      	ldr	r3, [r7, #0]
 8006340:	685b      	ldr	r3, [r3, #4]
 8006342:	f003 0303 	and.w	r3, r3, #3
 8006346:	2b02      	cmp	r3, #2
 8006348:	d123      	bne.n	8006392 <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800634a:	69fb      	ldr	r3, [r7, #28]
 800634c:	08da      	lsrs	r2, r3, #3
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	3208      	adds	r2, #8
 8006352:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006356:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8006358:	69fb      	ldr	r3, [r7, #28]
 800635a:	f003 0307 	and.w	r3, r3, #7
 800635e:	009b      	lsls	r3, r3, #2
 8006360:	220f      	movs	r2, #15
 8006362:	fa02 f303 	lsl.w	r3, r2, r3
 8006366:	43db      	mvns	r3, r3
 8006368:	69ba      	ldr	r2, [r7, #24]
 800636a:	4013      	ands	r3, r2
 800636c:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 800636e:	683b      	ldr	r3, [r7, #0]
 8006370:	691a      	ldr	r2, [r3, #16]
 8006372:	69fb      	ldr	r3, [r7, #28]
 8006374:	f003 0307 	and.w	r3, r3, #7
 8006378:	009b      	lsls	r3, r3, #2
 800637a:	fa02 f303 	lsl.w	r3, r2, r3
 800637e:	69ba      	ldr	r2, [r7, #24]
 8006380:	4313      	orrs	r3, r2
 8006382:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8006384:	69fb      	ldr	r3, [r7, #28]
 8006386:	08da      	lsrs	r2, r3, #3
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	3208      	adds	r2, #8
 800638c:	69b9      	ldr	r1, [r7, #24]
 800638e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8006392:	687b      	ldr	r3, [r7, #4]
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8006398:	69fb      	ldr	r3, [r7, #28]
 800639a:	005b      	lsls	r3, r3, #1
 800639c:	2203      	movs	r2, #3
 800639e:	fa02 f303 	lsl.w	r3, r2, r3
 80063a2:	43db      	mvns	r3, r3
 80063a4:	69ba      	ldr	r2, [r7, #24]
 80063a6:	4013      	ands	r3, r2
 80063a8:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80063aa:	683b      	ldr	r3, [r7, #0]
 80063ac:	685b      	ldr	r3, [r3, #4]
 80063ae:	f003 0203 	and.w	r2, r3, #3
 80063b2:	69fb      	ldr	r3, [r7, #28]
 80063b4:	005b      	lsls	r3, r3, #1
 80063b6:	fa02 f303 	lsl.w	r3, r2, r3
 80063ba:	69ba      	ldr	r2, [r7, #24]
 80063bc:	4313      	orrs	r3, r2
 80063be:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	69ba      	ldr	r2, [r7, #24]
 80063c4:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80063c6:	683b      	ldr	r3, [r7, #0]
 80063c8:	685b      	ldr	r3, [r3, #4]
 80063ca:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	f000 80e0 	beq.w	8006594 <HAL_GPIO_Init+0x338>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80063d4:	4b2f      	ldr	r3, [pc, #188]	; (8006494 <HAL_GPIO_Init+0x238>)
 80063d6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80063da:	4a2e      	ldr	r2, [pc, #184]	; (8006494 <HAL_GPIO_Init+0x238>)
 80063dc:	f043 0302 	orr.w	r3, r3, #2
 80063e0:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 80063e4:	4b2b      	ldr	r3, [pc, #172]	; (8006494 <HAL_GPIO_Init+0x238>)
 80063e6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80063ea:	f003 0302 	and.w	r3, r3, #2
 80063ee:	60fb      	str	r3, [r7, #12]
 80063f0:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80063f2:	4a29      	ldr	r2, [pc, #164]	; (8006498 <HAL_GPIO_Init+0x23c>)
 80063f4:	69fb      	ldr	r3, [r7, #28]
 80063f6:	089b      	lsrs	r3, r3, #2
 80063f8:	3302      	adds	r3, #2
 80063fa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80063fe:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006400:	69fb      	ldr	r3, [r7, #28]
 8006402:	f003 0303 	and.w	r3, r3, #3
 8006406:	009b      	lsls	r3, r3, #2
 8006408:	220f      	movs	r2, #15
 800640a:	fa02 f303 	lsl.w	r3, r2, r3
 800640e:	43db      	mvns	r3, r3
 8006410:	69ba      	ldr	r2, [r7, #24]
 8006412:	4013      	ands	r3, r2
 8006414:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	4a20      	ldr	r2, [pc, #128]	; (800649c <HAL_GPIO_Init+0x240>)
 800641a:	4293      	cmp	r3, r2
 800641c:	d052      	beq.n	80064c4 <HAL_GPIO_Init+0x268>
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	4a1f      	ldr	r2, [pc, #124]	; (80064a0 <HAL_GPIO_Init+0x244>)
 8006422:	4293      	cmp	r3, r2
 8006424:	d031      	beq.n	800648a <HAL_GPIO_Init+0x22e>
 8006426:	687b      	ldr	r3, [r7, #4]
 8006428:	4a1e      	ldr	r2, [pc, #120]	; (80064a4 <HAL_GPIO_Init+0x248>)
 800642a:	4293      	cmp	r3, r2
 800642c:	d02b      	beq.n	8006486 <HAL_GPIO_Init+0x22a>
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	4a1d      	ldr	r2, [pc, #116]	; (80064a8 <HAL_GPIO_Init+0x24c>)
 8006432:	4293      	cmp	r3, r2
 8006434:	d025      	beq.n	8006482 <HAL_GPIO_Init+0x226>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	4a1c      	ldr	r2, [pc, #112]	; (80064ac <HAL_GPIO_Init+0x250>)
 800643a:	4293      	cmp	r3, r2
 800643c:	d01f      	beq.n	800647e <HAL_GPIO_Init+0x222>
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	4a1b      	ldr	r2, [pc, #108]	; (80064b0 <HAL_GPIO_Init+0x254>)
 8006442:	4293      	cmp	r3, r2
 8006444:	d019      	beq.n	800647a <HAL_GPIO_Init+0x21e>
 8006446:	687b      	ldr	r3, [r7, #4]
 8006448:	4a1a      	ldr	r2, [pc, #104]	; (80064b4 <HAL_GPIO_Init+0x258>)
 800644a:	4293      	cmp	r3, r2
 800644c:	d013      	beq.n	8006476 <HAL_GPIO_Init+0x21a>
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	4a19      	ldr	r2, [pc, #100]	; (80064b8 <HAL_GPIO_Init+0x25c>)
 8006452:	4293      	cmp	r3, r2
 8006454:	d00d      	beq.n	8006472 <HAL_GPIO_Init+0x216>
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	4a18      	ldr	r2, [pc, #96]	; (80064bc <HAL_GPIO_Init+0x260>)
 800645a:	4293      	cmp	r3, r2
 800645c:	d007      	beq.n	800646e <HAL_GPIO_Init+0x212>
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	4a17      	ldr	r2, [pc, #92]	; (80064c0 <HAL_GPIO_Init+0x264>)
 8006462:	4293      	cmp	r3, r2
 8006464:	d101      	bne.n	800646a <HAL_GPIO_Init+0x20e>
 8006466:	2309      	movs	r3, #9
 8006468:	e02d      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 800646a:	230a      	movs	r3, #10
 800646c:	e02b      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 800646e:	2308      	movs	r3, #8
 8006470:	e029      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 8006472:	2307      	movs	r3, #7
 8006474:	e027      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 8006476:	2306      	movs	r3, #6
 8006478:	e025      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 800647a:	2305      	movs	r3, #5
 800647c:	e023      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 800647e:	2304      	movs	r3, #4
 8006480:	e021      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 8006482:	2303      	movs	r3, #3
 8006484:	e01f      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 8006486:	2302      	movs	r3, #2
 8006488:	e01d      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 800648a:	2301      	movs	r3, #1
 800648c:	e01b      	b.n	80064c6 <HAL_GPIO_Init+0x26a>
 800648e:	bf00      	nop
 8006490:	58000080 	.word	0x58000080
 8006494:	58024400 	.word	0x58024400
 8006498:	58000400 	.word	0x58000400
 800649c:	58020000 	.word	0x58020000
 80064a0:	58020400 	.word	0x58020400
 80064a4:	58020800 	.word	0x58020800
 80064a8:	58020c00 	.word	0x58020c00
 80064ac:	58021000 	.word	0x58021000
 80064b0:	58021400 	.word	0x58021400
 80064b4:	58021800 	.word	0x58021800
 80064b8:	58021c00 	.word	0x58021c00
 80064bc:	58022000 	.word	0x58022000
 80064c0:	58022400 	.word	0x58022400
 80064c4:	2300      	movs	r3, #0
 80064c6:	69fa      	ldr	r2, [r7, #28]
 80064c8:	f002 0203 	and.w	r2, r2, #3
 80064cc:	0092      	lsls	r2, r2, #2
 80064ce:	4093      	lsls	r3, r2
 80064d0:	69ba      	ldr	r2, [r7, #24]
 80064d2:	4313      	orrs	r3, r2
 80064d4:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80064d6:	4938      	ldr	r1, [pc, #224]	; (80065b8 <HAL_GPIO_Init+0x35c>)
 80064d8:	69fb      	ldr	r3, [r7, #28]
 80064da:	089b      	lsrs	r3, r3, #2
 80064dc:	3302      	adds	r3, #2
 80064de:	69ba      	ldr	r2, [r7, #24]
 80064e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 80064e4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 80064ec:	693b      	ldr	r3, [r7, #16]
 80064ee:	43db      	mvns	r3, r3
 80064f0:	69ba      	ldr	r2, [r7, #24]
 80064f2:	4013      	ands	r3, r2
 80064f4:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80064f6:	683b      	ldr	r3, [r7, #0]
 80064f8:	685b      	ldr	r3, [r3, #4]
 80064fa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d003      	beq.n	800650a <HAL_GPIO_Init+0x2ae>
        {
          temp |= iocurrent;
 8006502:	69ba      	ldr	r2, [r7, #24]
 8006504:	693b      	ldr	r3, [r7, #16]
 8006506:	4313      	orrs	r3, r2
 8006508:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 800650a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800650e:	69bb      	ldr	r3, [r7, #24]
 8006510:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 8006512:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006516:	685b      	ldr	r3, [r3, #4]
 8006518:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 800651a:	693b      	ldr	r3, [r7, #16]
 800651c:	43db      	mvns	r3, r3
 800651e:	69ba      	ldr	r2, [r7, #24]
 8006520:	4013      	ands	r3, r2
 8006522:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8006524:	683b      	ldr	r3, [r7, #0]
 8006526:	685b      	ldr	r3, [r3, #4]
 8006528:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800652c:	2b00      	cmp	r3, #0
 800652e:	d003      	beq.n	8006538 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8006530:	69ba      	ldr	r2, [r7, #24]
 8006532:	693b      	ldr	r3, [r7, #16]
 8006534:	4313      	orrs	r3, r2
 8006536:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 8006538:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800653c:	69bb      	ldr	r3, [r7, #24]
 800653e:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 8006540:	697b      	ldr	r3, [r7, #20]
 8006542:	685b      	ldr	r3, [r3, #4]
 8006544:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8006546:	693b      	ldr	r3, [r7, #16]
 8006548:	43db      	mvns	r3, r3
 800654a:	69ba      	ldr	r2, [r7, #24]
 800654c:	4013      	ands	r3, r2
 800654e:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8006550:	683b      	ldr	r3, [r7, #0]
 8006552:	685b      	ldr	r3, [r3, #4]
 8006554:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006558:	2b00      	cmp	r3, #0
 800655a:	d003      	beq.n	8006564 <HAL_GPIO_Init+0x308>
        {
          temp |= iocurrent;
 800655c:	69ba      	ldr	r2, [r7, #24]
 800655e:	693b      	ldr	r3, [r7, #16]
 8006560:	4313      	orrs	r3, r2
 8006562:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 8006564:	697b      	ldr	r3, [r7, #20]
 8006566:	69ba      	ldr	r2, [r7, #24]
 8006568:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 800656a:	697b      	ldr	r3, [r7, #20]
 800656c:	681b      	ldr	r3, [r3, #0]
 800656e:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8006570:	693b      	ldr	r3, [r7, #16]
 8006572:	43db      	mvns	r3, r3
 8006574:	69ba      	ldr	r2, [r7, #24]
 8006576:	4013      	ands	r3, r2
 8006578:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800657a:	683b      	ldr	r3, [r7, #0]
 800657c:	685b      	ldr	r3, [r3, #4]
 800657e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006582:	2b00      	cmp	r3, #0
 8006584:	d003      	beq.n	800658e <HAL_GPIO_Init+0x332>
        {
          temp |= iocurrent;
 8006586:	69ba      	ldr	r2, [r7, #24]
 8006588:	693b      	ldr	r3, [r7, #16]
 800658a:	4313      	orrs	r3, r2
 800658c:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 800658e:	697b      	ldr	r3, [r7, #20]
 8006590:	69ba      	ldr	r2, [r7, #24]
 8006592:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8006594:	69fb      	ldr	r3, [r7, #28]
 8006596:	3301      	adds	r3, #1
 8006598:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 800659a:	683b      	ldr	r3, [r7, #0]
 800659c:	681a      	ldr	r2, [r3, #0]
 800659e:	69fb      	ldr	r3, [r7, #28]
 80065a0:	fa22 f303 	lsr.w	r3, r2, r3
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	f47f ae63 	bne.w	8006270 <HAL_GPIO_Init+0x14>
  }
}
 80065aa:	bf00      	nop
 80065ac:	bf00      	nop
 80065ae:	3724      	adds	r7, #36	; 0x24
 80065b0:	46bd      	mov	sp, r7
 80065b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065b6:	4770      	bx	lr
 80065b8:	58000400 	.word	0x58000400

080065bc <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80065bc:	b480      	push	{r7}
 80065be:	b085      	sub	sp, #20
 80065c0:	af00      	add	r7, sp, #0
 80065c2:	6078      	str	r0, [r7, #4]
 80065c4:	460b      	mov	r3, r1
 80065c6:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	691a      	ldr	r2, [r3, #16]
 80065cc:	887b      	ldrh	r3, [r7, #2]
 80065ce:	4013      	ands	r3, r2
 80065d0:	2b00      	cmp	r3, #0
 80065d2:	d002      	beq.n	80065da <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80065d4:	2301      	movs	r3, #1
 80065d6:	73fb      	strb	r3, [r7, #15]
 80065d8:	e001      	b.n	80065de <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80065da:	2300      	movs	r3, #0
 80065dc:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80065de:	7bfb      	ldrb	r3, [r7, #15]
}
 80065e0:	4618      	mov	r0, r3
 80065e2:	3714      	adds	r7, #20
 80065e4:	46bd      	mov	sp, r7
 80065e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ea:	4770      	bx	lr

080065ec <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80065ec:	b480      	push	{r7}
 80065ee:	b083      	sub	sp, #12
 80065f0:	af00      	add	r7, sp, #0
 80065f2:	6078      	str	r0, [r7, #4]
 80065f4:	460b      	mov	r3, r1
 80065f6:	807b      	strh	r3, [r7, #2]
 80065f8:	4613      	mov	r3, r2
 80065fa:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80065fc:	787b      	ldrb	r3, [r7, #1]
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d003      	beq.n	800660a <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8006602:	887a      	ldrh	r2, [r7, #2]
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8006608:	e003      	b.n	8006612 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800660a:	887b      	ldrh	r3, [r7, #2]
 800660c:	041a      	lsls	r2, r3, #16
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	619a      	str	r2, [r3, #24]
}
 8006612:	bf00      	nop
 8006614:	370c      	adds	r7, #12
 8006616:	46bd      	mov	sp, r7
 8006618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800661c:	4770      	bx	lr

0800661e <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800661e:	b580      	push	{r7, lr}
 8006620:	b082      	sub	sp, #8
 8006622:	af00      	add	r7, sp, #0
 8006624:	4603      	mov	r3, r0
 8006626:	80fb      	strh	r3, [r7, #6]
    __HAL_GPIO_EXTID2_CLEAR_IT(GPIO_Pin);
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
  }
#else
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00U)
 8006628:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800662c:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8006630:	88fb      	ldrh	r3, [r7, #6]
 8006632:	4013      	ands	r3, r2
 8006634:	2b00      	cmp	r3, #0
 8006636:	d008      	beq.n	800664a <HAL_GPIO_EXTI_IRQHandler+0x2c>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8006638:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800663c:	88fb      	ldrh	r3, [r7, #6]
 800663e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8006642:	88fb      	ldrh	r3, [r7, #6]
 8006644:	4618      	mov	r0, r3
 8006646:	f7fb fd81 	bl	800214c <HAL_GPIO_EXTI_Callback>
  }
#endif
}
 800664a:	bf00      	nop
 800664c:	3708      	adds	r7, #8
 800664e:	46bd      	mov	sp, r7
 8006650:	bd80      	pop	{r7, pc}
	...

08006654 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006654:	b580      	push	{r7, lr}
 8006656:	b084      	sub	sp, #16
 8006658:	af00      	add	r7, sp, #0
 800665a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 800665c:	4b19      	ldr	r3, [pc, #100]	; (80066c4 <HAL_PWREx_ConfigSupply+0x70>)
 800665e:	68db      	ldr	r3, [r3, #12]
 8006660:	f003 0304 	and.w	r3, r3, #4
 8006664:	2b04      	cmp	r3, #4
 8006666:	d00a      	beq.n	800667e <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006668:	4b16      	ldr	r3, [pc, #88]	; (80066c4 <HAL_PWREx_ConfigSupply+0x70>)
 800666a:	68db      	ldr	r3, [r3, #12]
 800666c:	f003 0307 	and.w	r3, r3, #7
 8006670:	687a      	ldr	r2, [r7, #4]
 8006672:	429a      	cmp	r2, r3
 8006674:	d001      	beq.n	800667a <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8006676:	2301      	movs	r3, #1
 8006678:	e01f      	b.n	80066ba <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 800667a:	2300      	movs	r3, #0
 800667c:	e01d      	b.n	80066ba <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 800667e:	4b11      	ldr	r3, [pc, #68]	; (80066c4 <HAL_PWREx_ConfigSupply+0x70>)
 8006680:	68db      	ldr	r3, [r3, #12]
 8006682:	f023 0207 	bic.w	r2, r3, #7
 8006686:	490f      	ldr	r1, [pc, #60]	; (80066c4 <HAL_PWREx_ConfigSupply+0x70>)
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	4313      	orrs	r3, r2
 800668c:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 800668e:	f7fc f803 	bl	8002698 <HAL_GetTick>
 8006692:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006694:	e009      	b.n	80066aa <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006696:	f7fb ffff 	bl	8002698 <HAL_GetTick>
 800669a:	4602      	mov	r2, r0
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	1ad3      	subs	r3, r2, r3
 80066a0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80066a4:	d901      	bls.n	80066aa <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 80066a6:	2301      	movs	r3, #1
 80066a8:	e007      	b.n	80066ba <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 80066aa:	4b06      	ldr	r3, [pc, #24]	; (80066c4 <HAL_PWREx_ConfigSupply+0x70>)
 80066ac:	685b      	ldr	r3, [r3, #4]
 80066ae:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80066b2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80066b6:	d1ee      	bne.n	8006696 <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 80066b8:	2300      	movs	r3, #0
}
 80066ba:	4618      	mov	r0, r3
 80066bc:	3710      	adds	r7, #16
 80066be:	46bd      	mov	sp, r7
 80066c0:	bd80      	pop	{r7, pc}
 80066c2:	bf00      	nop
 80066c4:	58024800 	.word	0x58024800

080066c8 <HAL_QSPI_Init>:
  *        in the QSPI_InitTypeDef and initialize the associated handle.
  * @param hqspi QSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
{
 80066c8:	b580      	push	{r7, lr}
 80066ca:	b086      	sub	sp, #24
 80066cc:	af02      	add	r7, sp, #8
 80066ce:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 80066d0:	f7fb ffe2 	bl	8002698 <HAL_GetTick>
 80066d4:	60f8      	str	r0, [r7, #12]

  /* Check the QSPI handle allocation */
  if(hqspi == NULL)
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	2b00      	cmp	r3, #0
 80066da:	d101      	bne.n	80066e0 <HAL_QSPI_Init+0x18>
  {
    return HAL_ERROR;
 80066dc:	2301      	movs	r3, #1
 80066de:	e05f      	b.n	80067a0 <HAL_QSPI_Init+0xd8>
  if (hqspi->Init.DualFlash != QSPI_DUALFLASH_ENABLE )
  {
    assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
  }

  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80066e6:	b2db      	uxtb	r3, r3
 80066e8:	2b00      	cmp	r3, #0
 80066ea:	d107      	bne.n	80066fc <HAL_QSPI_Init+0x34>

    /* Init the low level hardware */
    hqspi->MspInitCallback(hqspi);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_QSPI_MspInit(hqspi);
 80066ec:	6878      	ldr	r0, [r7, #4]
 80066ee:	f7fa fa1d 	bl	8000b2c <HAL_QSPI_MspInit>
#endif

    /* Configure the default timeout for the QSPI memory access */
    HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
 80066f2:	f241 3188 	movw	r1, #5000	; 0x1388
 80066f6:	6878      	ldr	r0, [r7, #4]
 80066f8:	f000 fac0 	bl	8006c7c <HAL_QSPI_SetTimeout>
  }

  /* Configure QSPI FIFO Threshold */
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	681b      	ldr	r3, [r3, #0]
 8006702:	f423 51f8 	bic.w	r1, r3, #7936	; 0x1f00
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	689b      	ldr	r3, [r3, #8]
 800670a:	3b01      	subs	r3, #1
 800670c:	021a      	lsls	r2, r3, #8
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	430a      	orrs	r2, r1
 8006714:	601a      	str	r2, [r3, #0]
             ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));

  /* Wait till BUSY flag reset */
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800671a:	9300      	str	r3, [sp, #0]
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	2200      	movs	r2, #0
 8006720:	2120      	movs	r1, #32
 8006722:	6878      	ldr	r0, [r7, #4]
 8006724:	f000 fab8 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006728:	4603      	mov	r3, r0
 800672a:	72fb      	strb	r3, [r7, #11]

  if(status == HAL_OK)
 800672c:	7afb      	ldrb	r3, [r7, #11]
 800672e:	2b00      	cmp	r3, #0
 8006730:	d135      	bne.n	800679e <HAL_QSPI_Init+0xd6>
  {
    /* Configure QSPI Clock Prescaler and Sample Shift */
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	681a      	ldr	r2, [r3, #0]
 8006738:	4b1b      	ldr	r3, [pc, #108]	; (80067a8 <HAL_QSPI_Init+0xe0>)
 800673a:	4013      	ands	r3, r2
 800673c:	687a      	ldr	r2, [r7, #4]
 800673e:	6852      	ldr	r2, [r2, #4]
 8006740:	0611      	lsls	r1, r2, #24
 8006742:	687a      	ldr	r2, [r7, #4]
 8006744:	68d2      	ldr	r2, [r2, #12]
 8006746:	4311      	orrs	r1, r2
 8006748:	687a      	ldr	r2, [r7, #4]
 800674a:	69d2      	ldr	r2, [r2, #28]
 800674c:	4311      	orrs	r1, r2
 800674e:	687a      	ldr	r2, [r7, #4]
 8006750:	6a12      	ldr	r2, [r2, #32]
 8006752:	4311      	orrs	r1, r2
 8006754:	687a      	ldr	r2, [r7, #4]
 8006756:	6812      	ldr	r2, [r2, #0]
 8006758:	430b      	orrs	r3, r1
 800675a:	6013      	str	r3, [r2, #0]
               ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
                hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));

    /* Configure QSPI Flash Size, CS High Time and Clock Mode */
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	681b      	ldr	r3, [r3, #0]
 8006760:	685a      	ldr	r2, [r3, #4]
 8006762:	4b12      	ldr	r3, [pc, #72]	; (80067ac <HAL_QSPI_Init+0xe4>)
 8006764:	4013      	ands	r3, r2
 8006766:	687a      	ldr	r2, [r7, #4]
 8006768:	6912      	ldr	r2, [r2, #16]
 800676a:	0411      	lsls	r1, r2, #16
 800676c:	687a      	ldr	r2, [r7, #4]
 800676e:	6952      	ldr	r2, [r2, #20]
 8006770:	4311      	orrs	r1, r2
 8006772:	687a      	ldr	r2, [r7, #4]
 8006774:	6992      	ldr	r2, [r2, #24]
 8006776:	4311      	orrs	r1, r2
 8006778:	687a      	ldr	r2, [r7, #4]
 800677a:	6812      	ldr	r2, [r2, #0]
 800677c:	430b      	orrs	r3, r1
 800677e:	6053      	str	r3, [r2, #4]
               ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
                hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));

    /* Enable the QSPI peripheral */
    __HAL_QSPI_ENABLE(hqspi);
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	681a      	ldr	r2, [r3, #0]
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	f042 0201 	orr.w	r2, r2, #1
 800678e:	601a      	str	r2, [r3, #0]

    /* Set QSPI error code to none */
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	2200      	movs	r2, #0
 8006794:	645a      	str	r2, [r3, #68]	; 0x44

    /* Initialize the QSPI state */
    hqspi->State = HAL_QSPI_STATE_READY;
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	2201      	movs	r2, #1
 800679a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  }

  /* Return function status */
  return status;
 800679e:	7afb      	ldrb	r3, [r7, #11]
}
 80067a0:	4618      	mov	r0, r3
 80067a2:	3710      	adds	r7, #16
 80067a4:	46bd      	mov	sp, r7
 80067a6:	bd80      	pop	{r7, pc}
 80067a8:	00ffff2f 	.word	0x00ffff2f
 80067ac:	ffe0f8fe 	.word	0xffe0f8fe

080067b0 <HAL_QSPI_Command>:
  * @param Timeout Timeout duration
  * @note   This function is used only in Indirect Read or Write Modes
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Command(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t Timeout)
{
 80067b0:	b580      	push	{r7, lr}
 80067b2:	b088      	sub	sp, #32
 80067b4:	af02      	add	r7, sp, #8
 80067b6:	60f8      	str	r0, [r7, #12]
 80067b8:	60b9      	str	r1, [r7, #8]
 80067ba:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 80067bc:	f7fb ff6c 	bl	8002698 <HAL_GetTick>
 80067c0:	6138      	str	r0, [r7, #16]
  assert_param(IS_QSPI_DDR_MODE(cmd->DdrMode));
  assert_param(IS_QSPI_DDR_HHC(cmd->DdrHoldHalfCycle));
  assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));

  /* Process locked */
  __HAL_LOCK(hqspi);
 80067c2:	68fb      	ldr	r3, [r7, #12]
 80067c4:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80067c8:	b2db      	uxtb	r3, r3
 80067ca:	2b01      	cmp	r3, #1
 80067cc:	d101      	bne.n	80067d2 <HAL_QSPI_Command+0x22>
 80067ce:	2302      	movs	r3, #2
 80067d0:	e048      	b.n	8006864 <HAL_QSPI_Command+0xb4>
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	2201      	movs	r2, #1
 80067d6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 80067da:	68fb      	ldr	r3, [r7, #12]
 80067dc:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80067e0:	b2db      	uxtb	r3, r3
 80067e2:	2b01      	cmp	r3, #1
 80067e4:	d137      	bne.n	8006856 <HAL_QSPI_Command+0xa6>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	2200      	movs	r2, #0
 80067ea:	645a      	str	r2, [r3, #68]	; 0x44

    /* Update QSPI state */
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80067ec:	68fb      	ldr	r3, [r7, #12]
 80067ee:	2202      	movs	r2, #2
 80067f0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Wait till BUSY flag reset */
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	9300      	str	r3, [sp, #0]
 80067f8:	693b      	ldr	r3, [r7, #16]
 80067fa:	2200      	movs	r2, #0
 80067fc:	2120      	movs	r1, #32
 80067fe:	68f8      	ldr	r0, [r7, #12]
 8006800:	f000 fa4a 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006804:	4603      	mov	r3, r0
 8006806:	75fb      	strb	r3, [r7, #23]

    if (status == HAL_OK)
 8006808:	7dfb      	ldrb	r3, [r7, #23]
 800680a:	2b00      	cmp	r3, #0
 800680c:	d125      	bne.n	800685a <HAL_QSPI_Command+0xaa>
    {
      /* Call the configuration function */
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800680e:	2200      	movs	r2, #0
 8006810:	68b9      	ldr	r1, [r7, #8]
 8006812:	68f8      	ldr	r0, [r7, #12]
 8006814:	f000 fa77 	bl	8006d06 <QSPI_Config>

      if (cmd->DataMode == QSPI_DATA_NONE)
 8006818:	68bb      	ldr	r3, [r7, #8]
 800681a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800681c:	2b00      	cmp	r3, #0
 800681e:	d115      	bne.n	800684c <HAL_QSPI_Command+0x9c>
      {
        /* When there is no data phase, the transfer start as soon as the configuration is done
        so wait until TC flag is set to go back in idle state */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	9300      	str	r3, [sp, #0]
 8006824:	693b      	ldr	r3, [r7, #16]
 8006826:	2201      	movs	r2, #1
 8006828:	2102      	movs	r1, #2
 800682a:	68f8      	ldr	r0, [r7, #12]
 800682c:	f000 fa34 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006830:	4603      	mov	r3, r0
 8006832:	75fb      	strb	r3, [r7, #23]

        if (status == HAL_OK)
 8006834:	7dfb      	ldrb	r3, [r7, #23]
 8006836:	2b00      	cmp	r3, #0
 8006838:	d10f      	bne.n	800685a <HAL_QSPI_Command+0xaa>
        {
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800683a:	68fb      	ldr	r3, [r7, #12]
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	2202      	movs	r2, #2
 8006840:	60da      	str	r2, [r3, #12]

          /* Update QSPI state */
          hqspi->State = HAL_QSPI_STATE_READY;
 8006842:	68fb      	ldr	r3, [r7, #12]
 8006844:	2201      	movs	r2, #1
 8006846:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800684a:	e006      	b.n	800685a <HAL_QSPI_Command+0xaa>
        }
      }
      else
      {
        /* Update QSPI state */
        hqspi->State = HAL_QSPI_STATE_READY;
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	2201      	movs	r2, #1
 8006850:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006854:	e001      	b.n	800685a <HAL_QSPI_Command+0xaa>
      }
    }
  }
  else
  {
    status = HAL_BUSY;
 8006856:	2302      	movs	r3, #2
 8006858:	75fb      	strb	r3, [r7, #23]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 800685a:	68fb      	ldr	r3, [r7, #12]
 800685c:	2200      	movs	r2, #0
 800685e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  /* Return function status */
  return status;
 8006862:	7dfb      	ldrb	r3, [r7, #23]
}
 8006864:	4618      	mov	r0, r3
 8006866:	3718      	adds	r7, #24
 8006868:	46bd      	mov	sp, r7
 800686a:	bd80      	pop	{r7, pc}

0800686c <HAL_QSPI_Transmit>:
  * @param Timeout Timeout duration
  * @note   This function is used only in Indirect Write Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Transmit(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
{
 800686c:	b580      	push	{r7, lr}
 800686e:	b08a      	sub	sp, #40	; 0x28
 8006870:	af02      	add	r7, sp, #8
 8006872:	60f8      	str	r0, [r7, #12]
 8006874:	60b9      	str	r1, [r7, #8]
 8006876:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8006878:	2300      	movs	r3, #0
 800687a:	77fb      	strb	r3, [r7, #31]
  uint32_t tickstart = HAL_GetTick();
 800687c:	f7fb ff0c 	bl	8002698 <HAL_GetTick>
 8006880:	61b8      	str	r0, [r7, #24]
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	3320      	adds	r3, #32
 8006888:	617b      	str	r3, [r7, #20]

  /* Process locked */
  __HAL_LOCK(hqspi);
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006890:	b2db      	uxtb	r3, r3
 8006892:	2b01      	cmp	r3, #1
 8006894:	d101      	bne.n	800689a <HAL_QSPI_Transmit+0x2e>
 8006896:	2302      	movs	r3, #2
 8006898:	e076      	b.n	8006988 <HAL_QSPI_Transmit+0x11c>
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	2201      	movs	r2, #1
 800689e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 80068a2:	68fb      	ldr	r3, [r7, #12]
 80068a4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80068a8:	b2db      	uxtb	r3, r3
 80068aa:	2b01      	cmp	r3, #1
 80068ac:	d165      	bne.n	800697a <HAL_QSPI_Transmit+0x10e>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	2200      	movs	r2, #0
 80068b2:	645a      	str	r2, [r3, #68]	; 0x44

    if(pData != NULL )
 80068b4:	68bb      	ldr	r3, [r7, #8]
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d056      	beq.n	8006968 <HAL_QSPI_Transmit+0xfc>
    {
      /* Update state */
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80068ba:	68fb      	ldr	r3, [r7, #12]
 80068bc:	2212      	movs	r2, #18
 80068be:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Configure counters and size of the handle */
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80068c2:	68fb      	ldr	r3, [r7, #12]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	691b      	ldr	r3, [r3, #16]
 80068c8:	1c5a      	adds	r2, r3, #1
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	62da      	str	r2, [r3, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	691b      	ldr	r3, [r3, #16]
 80068d4:	1c5a      	adds	r2, r3, #1
 80068d6:	68fb      	ldr	r3, [r7, #12]
 80068d8:	629a      	str	r2, [r3, #40]	; 0x28
      hqspi->pTxBuffPtr = pData;
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	68ba      	ldr	r2, [r7, #8]
 80068de:	625a      	str	r2, [r3, #36]	; 0x24

      /* Configure QSPI: CCR register with functional as indirect write */
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80068e0:	68fb      	ldr	r3, [r7, #12]
 80068e2:	681b      	ldr	r3, [r3, #0]
 80068e4:	695a      	ldr	r2, [r3, #20]
 80068e6:	68fb      	ldr	r3, [r7, #12]
 80068e8:	681b      	ldr	r3, [r3, #0]
 80068ea:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80068ee:	615a      	str	r2, [r3, #20]

      while(hqspi->TxXferCount > 0U)
 80068f0:	e01b      	b.n	800692a <HAL_QSPI_Transmit+0xbe>
      {
        /* Wait until FT flag is set to send data */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	9300      	str	r3, [sp, #0]
 80068f6:	69bb      	ldr	r3, [r7, #24]
 80068f8:	2201      	movs	r2, #1
 80068fa:	2104      	movs	r1, #4
 80068fc:	68f8      	ldr	r0, [r7, #12]
 80068fe:	f000 f9cb 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006902:	4603      	mov	r3, r0
 8006904:	77fb      	strb	r3, [r7, #31]

        if (status != HAL_OK)
 8006906:	7ffb      	ldrb	r3, [r7, #31]
 8006908:	2b00      	cmp	r3, #0
 800690a:	d113      	bne.n	8006934 <HAL_QSPI_Transmit+0xc8>
        {
          break;
        }

        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800690c:	68fb      	ldr	r3, [r7, #12]
 800690e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006910:	781a      	ldrb	r2, [r3, #0]
 8006912:	697b      	ldr	r3, [r7, #20]
 8006914:	701a      	strb	r2, [r3, #0]
        hqspi->pTxBuffPtr++;
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800691a:	1c5a      	adds	r2, r3, #1
 800691c:	68fb      	ldr	r3, [r7, #12]
 800691e:	625a      	str	r2, [r3, #36]	; 0x24
        hqspi->TxXferCount--;
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006924:	1e5a      	subs	r2, r3, #1
 8006926:	68fb      	ldr	r3, [r7, #12]
 8006928:	62da      	str	r2, [r3, #44]	; 0x2c
      while(hqspi->TxXferCount > 0U)
 800692a:	68fb      	ldr	r3, [r7, #12]
 800692c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800692e:	2b00      	cmp	r3, #0
 8006930:	d1df      	bne.n	80068f2 <HAL_QSPI_Transmit+0x86>
 8006932:	e000      	b.n	8006936 <HAL_QSPI_Transmit+0xca>
          break;
 8006934:	bf00      	nop
      }

      if (status == HAL_OK)
 8006936:	7ffb      	ldrb	r3, [r7, #31]
 8006938:	2b00      	cmp	r3, #0
 800693a:	d110      	bne.n	800695e <HAL_QSPI_Transmit+0xf2>
      {
        /* Wait until TC flag is set to go back in idle state */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	9300      	str	r3, [sp, #0]
 8006940:	69bb      	ldr	r3, [r7, #24]
 8006942:	2201      	movs	r2, #1
 8006944:	2102      	movs	r1, #2
 8006946:	68f8      	ldr	r0, [r7, #12]
 8006948:	f000 f9a6 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 800694c:	4603      	mov	r3, r0
 800694e:	77fb      	strb	r3, [r7, #31]

        if (status == HAL_OK)
 8006950:	7ffb      	ldrb	r3, [r7, #31]
 8006952:	2b00      	cmp	r3, #0
 8006954:	d103      	bne.n	800695e <HAL_QSPI_Transmit+0xf2>
        {
          /* Clear Transfer Complete bit */
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006956:	68fb      	ldr	r3, [r7, #12]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	2202      	movs	r2, #2
 800695c:	60da      	str	r2, [r3, #12]

        }
      }

      /* Update QSPI state */
      hqspi->State = HAL_QSPI_STATE_READY;
 800695e:	68fb      	ldr	r3, [r7, #12]
 8006960:	2201      	movs	r2, #1
 8006962:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006966:	e00a      	b.n	800697e <HAL_QSPI_Transmit+0x112>
    }
    else
    {
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800696c:	f043 0208 	orr.w	r2, r3, #8
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	645a      	str	r2, [r3, #68]	; 0x44
      status = HAL_ERROR;
 8006974:	2301      	movs	r3, #1
 8006976:	77fb      	strb	r3, [r7, #31]
 8006978:	e001      	b.n	800697e <HAL_QSPI_Transmit+0x112>
    }
  }
  else
  {
    status = HAL_BUSY;
 800697a:	2302      	movs	r3, #2
 800697c:	77fb      	strb	r3, [r7, #31]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	2200      	movs	r2, #0
 8006982:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return status;
 8006986:	7ffb      	ldrb	r3, [r7, #31]
}
 8006988:	4618      	mov	r0, r3
 800698a:	3720      	adds	r7, #32
 800698c:	46bd      	mov	sp, r7
 800698e:	bd80      	pop	{r7, pc}

08006990 <HAL_QSPI_Receive>:
  * @param Timeout Timeout duration
  * @note   This function is used only in Indirect Read Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Receive(QSPI_HandleTypeDef *hqspi, uint8_t *pData, uint32_t Timeout)
{
 8006990:	b580      	push	{r7, lr}
 8006992:	b08a      	sub	sp, #40	; 0x28
 8006994:	af02      	add	r7, sp, #8
 8006996:	60f8      	str	r0, [r7, #12]
 8006998:	60b9      	str	r1, [r7, #8]
 800699a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800699c:	2300      	movs	r3, #0
 800699e:	77fb      	strb	r3, [r7, #31]
  uint32_t tickstart = HAL_GetTick();
 80069a0:	f7fb fe7a 	bl	8002698 <HAL_GetTick>
 80069a4:	61b8      	str	r0, [r7, #24]
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 80069a6:	68fb      	ldr	r3, [r7, #12]
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	699b      	ldr	r3, [r3, #24]
 80069ac:	617b      	str	r3, [r7, #20]
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80069ae:	68fb      	ldr	r3, [r7, #12]
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	3320      	adds	r3, #32
 80069b4:	613b      	str	r3, [r7, #16]

  /* Process locked */
  __HAL_LOCK(hqspi);
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80069bc:	b2db      	uxtb	r3, r3
 80069be:	2b01      	cmp	r3, #1
 80069c0:	d101      	bne.n	80069c6 <HAL_QSPI_Receive+0x36>
 80069c2:	2302      	movs	r3, #2
 80069c4:	e07d      	b.n	8006ac2 <HAL_QSPI_Receive+0x132>
 80069c6:	68fb      	ldr	r3, [r7, #12]
 80069c8:	2201      	movs	r2, #1
 80069ca:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80069d4:	b2db      	uxtb	r3, r3
 80069d6:	2b01      	cmp	r3, #1
 80069d8:	d16c      	bne.n	8006ab4 <HAL_QSPI_Receive+0x124>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	2200      	movs	r2, #0
 80069de:	645a      	str	r2, [r3, #68]	; 0x44

    if(pData != NULL )
 80069e0:	68bb      	ldr	r3, [r7, #8]
 80069e2:	2b00      	cmp	r3, #0
 80069e4:	d05d      	beq.n	8006aa2 <HAL_QSPI_Receive+0x112>
    {
      /* Update state */
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80069e6:	68fb      	ldr	r3, [r7, #12]
 80069e8:	2222      	movs	r2, #34	; 0x22
 80069ea:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

      /* Configure counters and size of the handle */
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	691b      	ldr	r3, [r3, #16]
 80069f4:	1c5a      	adds	r2, r3, #1
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	639a      	str	r2, [r3, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80069fa:	68fb      	ldr	r3, [r7, #12]
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	691b      	ldr	r3, [r3, #16]
 8006a00:	1c5a      	adds	r2, r3, #1
 8006a02:	68fb      	ldr	r3, [r7, #12]
 8006a04:	635a      	str	r2, [r3, #52]	; 0x34
      hqspi->pRxBuffPtr = pData;
 8006a06:	68fb      	ldr	r3, [r7, #12]
 8006a08:	68ba      	ldr	r2, [r7, #8]
 8006a0a:	631a      	str	r2, [r3, #48]	; 0x30

      /* Configure QSPI: CCR register with functional as indirect read */
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8006a0c:	68fb      	ldr	r3, [r7, #12]
 8006a0e:	681b      	ldr	r3, [r3, #0]
 8006a10:	695b      	ldr	r3, [r3, #20]
 8006a12:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8006a16:	68fb      	ldr	r3, [r7, #12]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8006a1e:	615a      	str	r2, [r3, #20]

      /* Start the transfer by re-writing the address in AR register */
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006a20:	68fb      	ldr	r3, [r7, #12]
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	697a      	ldr	r2, [r7, #20]
 8006a26:	619a      	str	r2, [r3, #24]

      while(hqspi->RxXferCount > 0U)
 8006a28:	e01c      	b.n	8006a64 <HAL_QSPI_Receive+0xd4>
      {
        /* Wait until FT or TC flag is set to read received data */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	9300      	str	r3, [sp, #0]
 8006a2e:	69bb      	ldr	r3, [r7, #24]
 8006a30:	2201      	movs	r2, #1
 8006a32:	2106      	movs	r1, #6
 8006a34:	68f8      	ldr	r0, [r7, #12]
 8006a36:	f000 f92f 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006a3a:	4603      	mov	r3, r0
 8006a3c:	77fb      	strb	r3, [r7, #31]

        if  (status != HAL_OK)
 8006a3e:	7ffb      	ldrb	r3, [r7, #31]
 8006a40:	2b00      	cmp	r3, #0
 8006a42:	d114      	bne.n	8006a6e <HAL_QSPI_Receive+0xde>
        {
          break;
        }

        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006a44:	68fb      	ldr	r3, [r7, #12]
 8006a46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a48:	693a      	ldr	r2, [r7, #16]
 8006a4a:	7812      	ldrb	r2, [r2, #0]
 8006a4c:	b2d2      	uxtb	r2, r2
 8006a4e:	701a      	strb	r2, [r3, #0]
        hqspi->pRxBuffPtr++;
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a54:	1c5a      	adds	r2, r3, #1
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	631a      	str	r2, [r3, #48]	; 0x30
        hqspi->RxXferCount--;
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a5e:	1e5a      	subs	r2, r3, #1
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	639a      	str	r2, [r3, #56]	; 0x38
      while(hqspi->RxXferCount > 0U)
 8006a64:	68fb      	ldr	r3, [r7, #12]
 8006a66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a68:	2b00      	cmp	r3, #0
 8006a6a:	d1de      	bne.n	8006a2a <HAL_QSPI_Receive+0x9a>
 8006a6c:	e000      	b.n	8006a70 <HAL_QSPI_Receive+0xe0>
          break;
 8006a6e:	bf00      	nop
      }

      if (status == HAL_OK)
 8006a70:	7ffb      	ldrb	r3, [r7, #31]
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	d110      	bne.n	8006a98 <HAL_QSPI_Receive+0x108>
      {
        /* Wait until TC flag is set to go back in idle state */
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	9300      	str	r3, [sp, #0]
 8006a7a:	69bb      	ldr	r3, [r7, #24]
 8006a7c:	2201      	movs	r2, #1
 8006a7e:	2102      	movs	r1, #2
 8006a80:	68f8      	ldr	r0, [r7, #12]
 8006a82:	f000 f909 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006a86:	4603      	mov	r3, r0
 8006a88:	77fb      	strb	r3, [r7, #31]

        if  (status == HAL_OK)
 8006a8a:	7ffb      	ldrb	r3, [r7, #31]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d103      	bne.n	8006a98 <HAL_QSPI_Receive+0x108>
        {
          /* Clear Transfer Complete bit */
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	681b      	ldr	r3, [r3, #0]
 8006a94:	2202      	movs	r2, #2
 8006a96:	60da      	str	r2, [r3, #12]

        }
      }

      /* Update QSPI state */
      hqspi->State = HAL_QSPI_STATE_READY;
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	2201      	movs	r2, #1
 8006a9c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006aa0:	e00a      	b.n	8006ab8 <HAL_QSPI_Receive+0x128>
    }
    else
    {
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006aa6:	f043 0208 	orr.w	r2, r3, #8
 8006aaa:	68fb      	ldr	r3, [r7, #12]
 8006aac:	645a      	str	r2, [r3, #68]	; 0x44
      status = HAL_ERROR;
 8006aae:	2301      	movs	r3, #1
 8006ab0:	77fb      	strb	r3, [r7, #31]
 8006ab2:	e001      	b.n	8006ab8 <HAL_QSPI_Receive+0x128>
    }
  }
  else
  {
    status = HAL_BUSY;
 8006ab4:	2302      	movs	r3, #2
 8006ab6:	77fb      	strb	r3, [r7, #31]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 8006ab8:	68fb      	ldr	r3, [r7, #12]
 8006aba:	2200      	movs	r2, #0
 8006abc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return status;
 8006ac0:	7ffb      	ldrb	r3, [r7, #31]
}
 8006ac2:	4618      	mov	r0, r3
 8006ac4:	3720      	adds	r7, #32
 8006ac6:	46bd      	mov	sp, r7
 8006ac8:	bd80      	pop	{r7, pc}

08006aca <HAL_QSPI_AutoPolling>:
  * @param  Timeout Timeout duration
  * @note   This function is used only in Automatic Polling Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_AutoPolling(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI_AutoPollingTypeDef *cfg, uint32_t Timeout)
{
 8006aca:	b580      	push	{r7, lr}
 8006acc:	b088      	sub	sp, #32
 8006ace:	af02      	add	r7, sp, #8
 8006ad0:	60f8      	str	r0, [r7, #12]
 8006ad2:	60b9      	str	r1, [r7, #8]
 8006ad4:	607a      	str	r2, [r7, #4]
 8006ad6:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 8006ad8:	f7fb fdde 	bl	8002698 <HAL_GetTick>
 8006adc:	6138      	str	r0, [r7, #16]
  assert_param(IS_QSPI_INTERVAL(cfg->Interval));
  assert_param(IS_QSPI_STATUS_BYTES_SIZE(cfg->StatusBytesSize));
  assert_param(IS_QSPI_MATCH_MODE(cfg->MatchMode));

  /* Process locked */
  __HAL_LOCK(hqspi);
 8006ade:	68fb      	ldr	r3, [r7, #12]
 8006ae0:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006ae4:	b2db      	uxtb	r3, r3
 8006ae6:	2b01      	cmp	r3, #1
 8006ae8:	d101      	bne.n	8006aee <HAL_QSPI_AutoPolling+0x24>
 8006aea:	2302      	movs	r3, #2
 8006aec:	e060      	b.n	8006bb0 <HAL_QSPI_AutoPolling+0xe6>
 8006aee:	68fb      	ldr	r3, [r7, #12]
 8006af0:	2201      	movs	r2, #1
 8006af2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006af6:	68fb      	ldr	r3, [r7, #12]
 8006af8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006afc:	b2db      	uxtb	r3, r3
 8006afe:	2b01      	cmp	r3, #1
 8006b00:	d14f      	bne.n	8006ba2 <HAL_QSPI_AutoPolling+0xd8>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006b02:	68fb      	ldr	r3, [r7, #12]
 8006b04:	2200      	movs	r2, #0
 8006b06:	645a      	str	r2, [r3, #68]	; 0x44

    /* Update state */
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006b08:	68fb      	ldr	r3, [r7, #12]
 8006b0a:	2242      	movs	r2, #66	; 0x42
 8006b0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Wait till BUSY flag reset */
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006b10:	683b      	ldr	r3, [r7, #0]
 8006b12:	9300      	str	r3, [sp, #0]
 8006b14:	693b      	ldr	r3, [r7, #16]
 8006b16:	2200      	movs	r2, #0
 8006b18:	2120      	movs	r1, #32
 8006b1a:	68f8      	ldr	r0, [r7, #12]
 8006b1c:	f000 f8bc 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006b20:	4603      	mov	r3, r0
 8006b22:	75fb      	strb	r3, [r7, #23]

    if (status == HAL_OK)
 8006b24:	7dfb      	ldrb	r3, [r7, #23]
 8006b26:	2b00      	cmp	r3, #0
 8006b28:	d13d      	bne.n	8006ba6 <HAL_QSPI_AutoPolling+0xdc>
    {
      /* Configure QSPI: PSMAR register with the status match value */
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006b2a:	68fb      	ldr	r3, [r7, #12]
 8006b2c:	681b      	ldr	r3, [r3, #0]
 8006b2e:	687a      	ldr	r2, [r7, #4]
 8006b30:	6812      	ldr	r2, [r2, #0]
 8006b32:	629a      	str	r2, [r3, #40]	; 0x28

      /* Configure QSPI: PSMKR register with the status mask value */
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8006b34:	68fb      	ldr	r3, [r7, #12]
 8006b36:	681b      	ldr	r3, [r3, #0]
 8006b38:	687a      	ldr	r2, [r7, #4]
 8006b3a:	6852      	ldr	r2, [r2, #4]
 8006b3c:	625a      	str	r2, [r3, #36]	; 0x24

      /* Configure QSPI: PIR register with the interval value */
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8006b3e:	68fb      	ldr	r3, [r7, #12]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	687a      	ldr	r2, [r7, #4]
 8006b44:	6892      	ldr	r2, [r2, #8]
 8006b46:	62da      	str	r2, [r3, #44]	; 0x2c

      /* Configure QSPI: CR register with Match mode and Automatic stop enabled
      (otherwise there will be an infinite loop in blocking mode) */
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	691b      	ldr	r3, [r3, #16]
 8006b56:	431a      	orrs	r2, r3
 8006b58:	68fb      	ldr	r3, [r7, #12]
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006b60:	601a      	str	r2, [r3, #0]
               (cfg->MatchMode | QSPI_AUTOMATIC_STOP_ENABLE));

      /* Call the configuration function */
      cmd->NbData = cfg->StatusBytesSize;
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	68da      	ldr	r2, [r3, #12]
 8006b66:	68bb      	ldr	r3, [r7, #8]
 8006b68:	629a      	str	r2, [r3, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006b6a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006b6e:	68b9      	ldr	r1, [r7, #8]
 8006b70:	68f8      	ldr	r0, [r7, #12]
 8006b72:	f000 f8c8 	bl	8006d06 <QSPI_Config>

      /* Wait until SM flag is set to go back in idle state */
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8006b76:	683b      	ldr	r3, [r7, #0]
 8006b78:	9300      	str	r3, [sp, #0]
 8006b7a:	693b      	ldr	r3, [r7, #16]
 8006b7c:	2201      	movs	r2, #1
 8006b7e:	2108      	movs	r1, #8
 8006b80:	68f8      	ldr	r0, [r7, #12]
 8006b82:	f000 f889 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006b86:	4603      	mov	r3, r0
 8006b88:	75fb      	strb	r3, [r7, #23]

      if (status == HAL_OK)
 8006b8a:	7dfb      	ldrb	r3, [r7, #23]
 8006b8c:	2b00      	cmp	r3, #0
 8006b8e:	d10a      	bne.n	8006ba6 <HAL_QSPI_AutoPolling+0xdc>
      {
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8006b90:	68fb      	ldr	r3, [r7, #12]
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	2208      	movs	r2, #8
 8006b96:	60da      	str	r2, [r3, #12]

        /* Update state */
        hqspi->State = HAL_QSPI_STATE_READY;
 8006b98:	68fb      	ldr	r3, [r7, #12]
 8006b9a:	2201      	movs	r2, #1
 8006b9c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006ba0:	e001      	b.n	8006ba6 <HAL_QSPI_AutoPolling+0xdc>
      }
    }
  }
  else
  {
    status = HAL_BUSY;
 8006ba2:	2302      	movs	r3, #2
 8006ba4:	75fb      	strb	r3, [r7, #23]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 8006ba6:	68fb      	ldr	r3, [r7, #12]
 8006ba8:	2200      	movs	r2, #0
 8006baa:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  /* Return function status */
  return status;
 8006bae:	7dfb      	ldrb	r3, [r7, #23]
}
 8006bb0:	4618      	mov	r0, r3
 8006bb2:	3718      	adds	r7, #24
 8006bb4:	46bd      	mov	sp, r7
 8006bb6:	bd80      	pop	{r7, pc}

08006bb8 <HAL_QSPI_MemoryMapped>:
  * @param  cfg structure that contains the memory mapped configuration information.
  * @note   This function is used only in Memory mapped Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_MemoryMapped(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, QSPI_MemoryMappedTypeDef *cfg)
{
 8006bb8:	b580      	push	{r7, lr}
 8006bba:	b088      	sub	sp, #32
 8006bbc:	af02      	add	r7, sp, #8
 8006bbe:	60f8      	str	r0, [r7, #12]
 8006bc0:	60b9      	str	r1, [r7, #8]
 8006bc2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 8006bc4:	f7fb fd68 	bl	8002698 <HAL_GetTick>
 8006bc8:	6138      	str	r0, [r7, #16]
  assert_param(IS_QSPI_SIOO_MODE(cmd->SIOOMode));

  assert_param(IS_QSPI_TIMEOUT_ACTIVATION(cfg->TimeOutActivation));

  /* Process locked */
  __HAL_LOCK(hqspi);
 8006bca:	68fb      	ldr	r3, [r7, #12]
 8006bcc:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006bd0:	b2db      	uxtb	r3, r3
 8006bd2:	2b01      	cmp	r3, #1
 8006bd4:	d101      	bne.n	8006bda <HAL_QSPI_MemoryMapped+0x22>
 8006bd6:	2302      	movs	r3, #2
 8006bd8:	e04c      	b.n	8006c74 <HAL_QSPI_MemoryMapped+0xbc>
 8006bda:	68fb      	ldr	r3, [r7, #12]
 8006bdc:	2201      	movs	r2, #1
 8006bde:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006be2:	68fb      	ldr	r3, [r7, #12]
 8006be4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006be8:	b2db      	uxtb	r3, r3
 8006bea:	2b01      	cmp	r3, #1
 8006bec:	d13b      	bne.n	8006c66 <HAL_QSPI_MemoryMapped+0xae>
  {
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	2200      	movs	r2, #0
 8006bf2:	645a      	str	r2, [r3, #68]	; 0x44

    /* Update state */
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	2282      	movs	r2, #130	; 0x82
 8006bf8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Wait till BUSY flag reset */
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006bfc:	68fb      	ldr	r3, [r7, #12]
 8006bfe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006c00:	9300      	str	r3, [sp, #0]
 8006c02:	693b      	ldr	r3, [r7, #16]
 8006c04:	2200      	movs	r2, #0
 8006c06:	2120      	movs	r1, #32
 8006c08:	68f8      	ldr	r0, [r7, #12]
 8006c0a:	f000 f845 	bl	8006c98 <QSPI_WaitFlagStateUntilTimeout>
 8006c0e:	4603      	mov	r3, r0
 8006c10:	75fb      	strb	r3, [r7, #23]

    if (status == HAL_OK)
 8006c12:	7dfb      	ldrb	r3, [r7, #23]
 8006c14:	2b00      	cmp	r3, #0
 8006c16:	d128      	bne.n	8006c6a <HAL_QSPI_MemoryMapped+0xb2>
    {
      /* Configure QSPI: CR register with timeout counter enable */
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	681b      	ldr	r3, [r3, #0]
 8006c1e:	f023 0108 	bic.w	r1, r3, #8
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	685a      	ldr	r2, [r3, #4]
 8006c26:	68fb      	ldr	r3, [r7, #12]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	430a      	orrs	r2, r1
 8006c2c:	601a      	str	r2, [r3, #0]

    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	685b      	ldr	r3, [r3, #4]
 8006c32:	2b08      	cmp	r3, #8
 8006c34:	d110      	bne.n	8006c58 <HAL_QSPI_MemoryMapped+0xa0>
      {
        assert_param(IS_QSPI_TIMEOUT_PERIOD(cfg->TimeOutPeriod));

        /* Configure QSPI: LPTR register with the low-power timeout value */
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	681b      	ldr	r3, [r3, #0]
 8006c3a:	687a      	ldr	r2, [r7, #4]
 8006c3c:	6812      	ldr	r2, [r2, #0]
 8006c3e:	631a      	str	r2, [r3, #48]	; 0x30

        /* Clear interrupt */
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	2210      	movs	r2, #16
 8006c46:	60da      	str	r2, [r3, #12]

        /* Enable the QSPI TimeOut Interrupt */
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	681b      	ldr	r3, [r3, #0]
 8006c4c:	681a      	ldr	r2, [r3, #0]
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	681b      	ldr	r3, [r3, #0]
 8006c52:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8006c56:	601a      	str	r2, [r3, #0]
      }

      /* Call the configuration function */
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8006c58:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8006c5c:	68b9      	ldr	r1, [r7, #8]
 8006c5e:	68f8      	ldr	r0, [r7, #12]
 8006c60:	f000 f851 	bl	8006d06 <QSPI_Config>
 8006c64:	e001      	b.n	8006c6a <HAL_QSPI_MemoryMapped+0xb2>
    }
  }
  else
  {
    status = HAL_BUSY;
 8006c66:	2302      	movs	r3, #2
 8006c68:	75fb      	strb	r3, [r7, #23]
  }

  /* Process unlocked */
  __HAL_UNLOCK(hqspi);
 8006c6a:	68fb      	ldr	r3, [r7, #12]
 8006c6c:	2200      	movs	r2, #0
 8006c6e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  /* Return function status */
  return status;
 8006c72:	7dfb      	ldrb	r3, [r7, #23]
}
 8006c74:	4618      	mov	r0, r3
 8006c76:	3718      	adds	r7, #24
 8006c78:	46bd      	mov	sp, r7
 8006c7a:	bd80      	pop	{r7, pc}

08006c7c <HAL_QSPI_SetTimeout>:
  * @param  hqspi QSPI handle.
  * @param  Timeout Timeout for the QSPI memory access.
  * @retval None
  */
void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
{
 8006c7c:	b480      	push	{r7}
 8006c7e:	b083      	sub	sp, #12
 8006c80:	af00      	add	r7, sp, #0
 8006c82:	6078      	str	r0, [r7, #4]
 8006c84:	6039      	str	r1, [r7, #0]
  hqspi->Timeout = Timeout;
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	683a      	ldr	r2, [r7, #0]
 8006c8a:	649a      	str	r2, [r3, #72]	; 0x48
}
 8006c8c:	bf00      	nop
 8006c8e:	370c      	adds	r7, #12
 8006c90:	46bd      	mov	sp, r7
 8006c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c96:	4770      	bx	lr

08006c98 <QSPI_WaitFlagStateUntilTimeout>:
  * @param  Timeout Duration of the timeout
  * @retval HAL status
  */
static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8006c98:	b580      	push	{r7, lr}
 8006c9a:	b084      	sub	sp, #16
 8006c9c:	af00      	add	r7, sp, #0
 8006c9e:	60f8      	str	r0, [r7, #12]
 8006ca0:	60b9      	str	r1, [r7, #8]
 8006ca2:	603b      	str	r3, [r7, #0]
 8006ca4:	4613      	mov	r3, r2
 8006ca6:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006ca8:	e01a      	b.n	8006ce0 <QSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006caa:	69bb      	ldr	r3, [r7, #24]
 8006cac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006cb0:	d016      	beq.n	8006ce0 <QSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006cb2:	f7fb fcf1 	bl	8002698 <HAL_GetTick>
 8006cb6:	4602      	mov	r2, r0
 8006cb8:	683b      	ldr	r3, [r7, #0]
 8006cba:	1ad3      	subs	r3, r2, r3
 8006cbc:	69ba      	ldr	r2, [r7, #24]
 8006cbe:	429a      	cmp	r2, r3
 8006cc0:	d302      	bcc.n	8006cc8 <QSPI_WaitFlagStateUntilTimeout+0x30>
 8006cc2:	69bb      	ldr	r3, [r7, #24]
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	d10b      	bne.n	8006ce0 <QSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8006cc8:	68fb      	ldr	r3, [r7, #12]
 8006cca:	2204      	movs	r2, #4
 8006ccc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8006cd0:	68fb      	ldr	r3, [r7, #12]
 8006cd2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006cd4:	f043 0201 	orr.w	r2, r3, #1
 8006cd8:	68fb      	ldr	r3, [r7, #12]
 8006cda:	645a      	str	r2, [r3, #68]	; 0x44

        return HAL_ERROR;
 8006cdc:	2301      	movs	r3, #1
 8006cde:	e00e      	b.n	8006cfe <QSPI_WaitFlagStateUntilTimeout+0x66>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8006ce0:	68fb      	ldr	r3, [r7, #12]
 8006ce2:	681b      	ldr	r3, [r3, #0]
 8006ce4:	689a      	ldr	r2, [r3, #8]
 8006ce6:	68bb      	ldr	r3, [r7, #8]
 8006ce8:	4013      	ands	r3, r2
 8006cea:	2b00      	cmp	r3, #0
 8006cec:	bf14      	ite	ne
 8006cee:	2301      	movne	r3, #1
 8006cf0:	2300      	moveq	r3, #0
 8006cf2:	b2db      	uxtb	r3, r3
 8006cf4:	461a      	mov	r2, r3
 8006cf6:	79fb      	ldrb	r3, [r7, #7]
 8006cf8:	429a      	cmp	r2, r3
 8006cfa:	d1d6      	bne.n	8006caa <QSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8006cfc:	2300      	movs	r3, #0
}
 8006cfe:	4618      	mov	r0, r3
 8006d00:	3710      	adds	r7, #16
 8006d02:	46bd      	mov	sp, r7
 8006d04:	bd80      	pop	{r7, pc}

08006d06 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8006d06:	b480      	push	{r7}
 8006d08:	b085      	sub	sp, #20
 8006d0a:	af00      	add	r7, sp, #0
 8006d0c:	60f8      	str	r0, [r7, #12]
 8006d0e:	60b9      	str	r1, [r7, #8]
 8006d10:	607a      	str	r2, [r7, #4]
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006d12:	68bb      	ldr	r3, [r7, #8]
 8006d14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	d009      	beq.n	8006d2e <QSPI_Config+0x28>
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8006d20:	d005      	beq.n	8006d2e <QSPI_Config+0x28>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006d22:	68bb      	ldr	r3, [r7, #8]
 8006d24:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006d26:	68fb      	ldr	r3, [r7, #12]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	3a01      	subs	r2, #1
 8006d2c:	611a      	str	r2, [r3, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006d2e:	68bb      	ldr	r3, [r7, #8]
 8006d30:	699b      	ldr	r3, [r3, #24]
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	f000 80b9 	beq.w	8006eaa <QSPI_Config+0x1a4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006d38:	68bb      	ldr	r3, [r7, #8]
 8006d3a:	6a1b      	ldr	r3, [r3, #32]
 8006d3c:	2b00      	cmp	r3, #0
 8006d3e:	d05f      	beq.n	8006e00 <QSPI_Config+0xfa>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	68ba      	ldr	r2, [r7, #8]
 8006d46:	6892      	ldr	r2, [r2, #8]
 8006d48:	61da      	str	r2, [r3, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006d4a:	68bb      	ldr	r3, [r7, #8]
 8006d4c:	69db      	ldr	r3, [r3, #28]
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d031      	beq.n	8006db6 <QSPI_Config+0xb0>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006d52:	68bb      	ldr	r3, [r7, #8]
 8006d54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d56:	68bb      	ldr	r3, [r7, #8]
 8006d58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d5a:	431a      	orrs	r2, r3
 8006d5c:	68bb      	ldr	r3, [r7, #8]
 8006d5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006d60:	431a      	orrs	r2, r3
 8006d62:	68bb      	ldr	r3, [r7, #8]
 8006d64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d66:	431a      	orrs	r2, r3
 8006d68:	68bb      	ldr	r3, [r7, #8]
 8006d6a:	695b      	ldr	r3, [r3, #20]
 8006d6c:	049b      	lsls	r3, r3, #18
 8006d6e:	431a      	orrs	r2, r3
 8006d70:	68bb      	ldr	r3, [r7, #8]
 8006d72:	691b      	ldr	r3, [r3, #16]
 8006d74:	431a      	orrs	r2, r3
 8006d76:	68bb      	ldr	r3, [r7, #8]
 8006d78:	6a1b      	ldr	r3, [r3, #32]
 8006d7a:	431a      	orrs	r2, r3
 8006d7c:	68bb      	ldr	r3, [r7, #8]
 8006d7e:	68db      	ldr	r3, [r3, #12]
 8006d80:	431a      	orrs	r2, r3
 8006d82:	68bb      	ldr	r3, [r7, #8]
 8006d84:	69db      	ldr	r3, [r3, #28]
 8006d86:	431a      	orrs	r2, r3
 8006d88:	68bb      	ldr	r3, [r7, #8]
 8006d8a:	699b      	ldr	r3, [r3, #24]
 8006d8c:	431a      	orrs	r2, r3
 8006d8e:	68bb      	ldr	r3, [r7, #8]
 8006d90:	681b      	ldr	r3, [r3, #0]
 8006d92:	ea42 0103 	orr.w	r1, r2, r3
 8006d96:	68fb      	ldr	r3, [r7, #12]
 8006d98:	681b      	ldr	r3, [r3, #0]
 8006d9a:	687a      	ldr	r2, [r7, #4]
 8006d9c:	430a      	orrs	r2, r1
 8006d9e:	615a      	str	r2, [r3, #20]
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateBytesSize | cmd->AlternateByteMode |
                                         cmd->AddressSize | cmd->AddressMode | cmd->InstructionMode |
                                         cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8006da6:	f000 812e 	beq.w	8007006 <QSPI_Config+0x300>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006daa:	68fb      	ldr	r3, [r7, #12]
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	68ba      	ldr	r2, [r7, #8]
 8006db0:	6852      	ldr	r2, [r2, #4]
 8006db2:	619a      	str	r2, [r3, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8006db4:	e127      	b.n	8007006 <QSPI_Config+0x300>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006db6:	68bb      	ldr	r3, [r7, #8]
 8006db8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006dba:	68bb      	ldr	r3, [r7, #8]
 8006dbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006dbe:	431a      	orrs	r2, r3
 8006dc0:	68bb      	ldr	r3, [r7, #8]
 8006dc2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dc4:	431a      	orrs	r2, r3
 8006dc6:	68bb      	ldr	r3, [r7, #8]
 8006dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006dca:	431a      	orrs	r2, r3
 8006dcc:	68bb      	ldr	r3, [r7, #8]
 8006dce:	695b      	ldr	r3, [r3, #20]
 8006dd0:	049b      	lsls	r3, r3, #18
 8006dd2:	431a      	orrs	r2, r3
 8006dd4:	68bb      	ldr	r3, [r7, #8]
 8006dd6:	691b      	ldr	r3, [r3, #16]
 8006dd8:	431a      	orrs	r2, r3
 8006dda:	68bb      	ldr	r3, [r7, #8]
 8006ddc:	6a1b      	ldr	r3, [r3, #32]
 8006dde:	431a      	orrs	r2, r3
 8006de0:	68bb      	ldr	r3, [r7, #8]
 8006de2:	69db      	ldr	r3, [r3, #28]
 8006de4:	431a      	orrs	r2, r3
 8006de6:	68bb      	ldr	r3, [r7, #8]
 8006de8:	699b      	ldr	r3, [r3, #24]
 8006dea:	431a      	orrs	r2, r3
 8006dec:	68bb      	ldr	r3, [r7, #8]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	ea42 0103 	orr.w	r1, r2, r3
 8006df4:	68fb      	ldr	r3, [r7, #12]
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	687a      	ldr	r2, [r7, #4]
 8006dfa:	430a      	orrs	r2, r1
 8006dfc:	615a      	str	r2, [r3, #20]
}
 8006dfe:	e102      	b.n	8007006 <QSPI_Config+0x300>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006e00:	68bb      	ldr	r3, [r7, #8]
 8006e02:	69db      	ldr	r3, [r3, #28]
 8006e04:	2b00      	cmp	r3, #0
 8006e06:	d02e      	beq.n	8006e66 <QSPI_Config+0x160>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006e08:	68bb      	ldr	r3, [r7, #8]
 8006e0a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006e0c:	68bb      	ldr	r3, [r7, #8]
 8006e0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e10:	431a      	orrs	r2, r3
 8006e12:	68bb      	ldr	r3, [r7, #8]
 8006e14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e16:	431a      	orrs	r2, r3
 8006e18:	68bb      	ldr	r3, [r7, #8]
 8006e1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006e1c:	431a      	orrs	r2, r3
 8006e1e:	68bb      	ldr	r3, [r7, #8]
 8006e20:	695b      	ldr	r3, [r3, #20]
 8006e22:	049b      	lsls	r3, r3, #18
 8006e24:	431a      	orrs	r2, r3
 8006e26:	68bb      	ldr	r3, [r7, #8]
 8006e28:	6a1b      	ldr	r3, [r3, #32]
 8006e2a:	431a      	orrs	r2, r3
 8006e2c:	68bb      	ldr	r3, [r7, #8]
 8006e2e:	68db      	ldr	r3, [r3, #12]
 8006e30:	431a      	orrs	r2, r3
 8006e32:	68bb      	ldr	r3, [r7, #8]
 8006e34:	69db      	ldr	r3, [r3, #28]
 8006e36:	431a      	orrs	r2, r3
 8006e38:	68bb      	ldr	r3, [r7, #8]
 8006e3a:	699b      	ldr	r3, [r3, #24]
 8006e3c:	431a      	orrs	r2, r3
 8006e3e:	68bb      	ldr	r3, [r7, #8]
 8006e40:	681b      	ldr	r3, [r3, #0]
 8006e42:	ea42 0103 	orr.w	r1, r2, r3
 8006e46:	68fb      	ldr	r3, [r7, #12]
 8006e48:	681b      	ldr	r3, [r3, #0]
 8006e4a:	687a      	ldr	r2, [r7, #4]
 8006e4c:	430a      	orrs	r2, r1
 8006e4e:	615a      	str	r2, [r3, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8006e56:	f000 80d6 	beq.w	8007006 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006e5a:	68fb      	ldr	r3, [r7, #12]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	68ba      	ldr	r2, [r7, #8]
 8006e60:	6852      	ldr	r2, [r2, #4]
 8006e62:	619a      	str	r2, [r3, #24]
}
 8006e64:	e0cf      	b.n	8007006 <QSPI_Config+0x300>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006e66:	68bb      	ldr	r3, [r7, #8]
 8006e68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006e6a:	68bb      	ldr	r3, [r7, #8]
 8006e6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e6e:	431a      	orrs	r2, r3
 8006e70:	68bb      	ldr	r3, [r7, #8]
 8006e72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e74:	431a      	orrs	r2, r3
 8006e76:	68bb      	ldr	r3, [r7, #8]
 8006e78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006e7a:	431a      	orrs	r2, r3
 8006e7c:	68bb      	ldr	r3, [r7, #8]
 8006e7e:	695b      	ldr	r3, [r3, #20]
 8006e80:	049b      	lsls	r3, r3, #18
 8006e82:	431a      	orrs	r2, r3
 8006e84:	68bb      	ldr	r3, [r7, #8]
 8006e86:	6a1b      	ldr	r3, [r3, #32]
 8006e88:	431a      	orrs	r2, r3
 8006e8a:	68bb      	ldr	r3, [r7, #8]
 8006e8c:	69db      	ldr	r3, [r3, #28]
 8006e8e:	431a      	orrs	r2, r3
 8006e90:	68bb      	ldr	r3, [r7, #8]
 8006e92:	699b      	ldr	r3, [r3, #24]
 8006e94:	431a      	orrs	r2, r3
 8006e96:	68bb      	ldr	r3, [r7, #8]
 8006e98:	681b      	ldr	r3, [r3, #0]
 8006e9a:	ea42 0103 	orr.w	r1, r2, r3
 8006e9e:	68fb      	ldr	r3, [r7, #12]
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	687a      	ldr	r2, [r7, #4]
 8006ea4:	430a      	orrs	r2, r1
 8006ea6:	615a      	str	r2, [r3, #20]
}
 8006ea8:	e0ad      	b.n	8007006 <QSPI_Config+0x300>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006eaa:	68bb      	ldr	r3, [r7, #8]
 8006eac:	6a1b      	ldr	r3, [r3, #32]
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	d058      	beq.n	8006f64 <QSPI_Config+0x25e>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006eb2:	68fb      	ldr	r3, [r7, #12]
 8006eb4:	681b      	ldr	r3, [r3, #0]
 8006eb6:	68ba      	ldr	r2, [r7, #8]
 8006eb8:	6892      	ldr	r2, [r2, #8]
 8006eba:	61da      	str	r2, [r3, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006ebc:	68bb      	ldr	r3, [r7, #8]
 8006ebe:	69db      	ldr	r3, [r3, #28]
 8006ec0:	2b00      	cmp	r3, #0
 8006ec2:	d02d      	beq.n	8006f20 <QSPI_Config+0x21a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006ec4:	68bb      	ldr	r3, [r7, #8]
 8006ec6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006ec8:	68bb      	ldr	r3, [r7, #8]
 8006eca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ecc:	431a      	orrs	r2, r3
 8006ece:	68bb      	ldr	r3, [r7, #8]
 8006ed0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006ed2:	431a      	orrs	r2, r3
 8006ed4:	68bb      	ldr	r3, [r7, #8]
 8006ed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ed8:	431a      	orrs	r2, r3
 8006eda:	68bb      	ldr	r3, [r7, #8]
 8006edc:	695b      	ldr	r3, [r3, #20]
 8006ede:	049b      	lsls	r3, r3, #18
 8006ee0:	431a      	orrs	r2, r3
 8006ee2:	68bb      	ldr	r3, [r7, #8]
 8006ee4:	691b      	ldr	r3, [r3, #16]
 8006ee6:	431a      	orrs	r2, r3
 8006ee8:	68bb      	ldr	r3, [r7, #8]
 8006eea:	6a1b      	ldr	r3, [r3, #32]
 8006eec:	431a      	orrs	r2, r3
 8006eee:	68bb      	ldr	r3, [r7, #8]
 8006ef0:	68db      	ldr	r3, [r3, #12]
 8006ef2:	431a      	orrs	r2, r3
 8006ef4:	68bb      	ldr	r3, [r7, #8]
 8006ef6:	69db      	ldr	r3, [r3, #28]
 8006ef8:	431a      	orrs	r2, r3
 8006efa:	68bb      	ldr	r3, [r7, #8]
 8006efc:	699b      	ldr	r3, [r3, #24]
 8006efe:	ea42 0103 	orr.w	r1, r2, r3
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	681b      	ldr	r3, [r3, #0]
 8006f06:	687a      	ldr	r2, [r7, #4]
 8006f08:	430a      	orrs	r2, r1
 8006f0a:	615a      	str	r2, [r3, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8006f12:	d078      	beq.n	8007006 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	681b      	ldr	r3, [r3, #0]
 8006f18:	68ba      	ldr	r2, [r7, #8]
 8006f1a:	6852      	ldr	r2, [r2, #4]
 8006f1c:	619a      	str	r2, [r3, #24]
}
 8006f1e:	e072      	b.n	8007006 <QSPI_Config+0x300>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006f20:	68bb      	ldr	r3, [r7, #8]
 8006f22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006f24:	68bb      	ldr	r3, [r7, #8]
 8006f26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f28:	431a      	orrs	r2, r3
 8006f2a:	68bb      	ldr	r3, [r7, #8]
 8006f2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006f2e:	431a      	orrs	r2, r3
 8006f30:	68bb      	ldr	r3, [r7, #8]
 8006f32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006f34:	431a      	orrs	r2, r3
 8006f36:	68bb      	ldr	r3, [r7, #8]
 8006f38:	695b      	ldr	r3, [r3, #20]
 8006f3a:	049b      	lsls	r3, r3, #18
 8006f3c:	431a      	orrs	r2, r3
 8006f3e:	68bb      	ldr	r3, [r7, #8]
 8006f40:	691b      	ldr	r3, [r3, #16]
 8006f42:	431a      	orrs	r2, r3
 8006f44:	68bb      	ldr	r3, [r7, #8]
 8006f46:	6a1b      	ldr	r3, [r3, #32]
 8006f48:	431a      	orrs	r2, r3
 8006f4a:	68bb      	ldr	r3, [r7, #8]
 8006f4c:	69db      	ldr	r3, [r3, #28]
 8006f4e:	431a      	orrs	r2, r3
 8006f50:	68bb      	ldr	r3, [r7, #8]
 8006f52:	699b      	ldr	r3, [r3, #24]
 8006f54:	ea42 0103 	orr.w	r1, r2, r3
 8006f58:	68fb      	ldr	r3, [r7, #12]
 8006f5a:	681b      	ldr	r3, [r3, #0]
 8006f5c:	687a      	ldr	r2, [r7, #4]
 8006f5e:	430a      	orrs	r2, r1
 8006f60:	615a      	str	r2, [r3, #20]
}
 8006f62:	e050      	b.n	8007006 <QSPI_Config+0x300>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006f64:	68bb      	ldr	r3, [r7, #8]
 8006f66:	69db      	ldr	r3, [r3, #28]
 8006f68:	2b00      	cmp	r3, #0
 8006f6a:	d02a      	beq.n	8006fc2 <QSPI_Config+0x2bc>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006f6c:	68bb      	ldr	r3, [r7, #8]
 8006f6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006f70:	68bb      	ldr	r3, [r7, #8]
 8006f72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f74:	431a      	orrs	r2, r3
 8006f76:	68bb      	ldr	r3, [r7, #8]
 8006f78:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006f7a:	431a      	orrs	r2, r3
 8006f7c:	68bb      	ldr	r3, [r7, #8]
 8006f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006f80:	431a      	orrs	r2, r3
 8006f82:	68bb      	ldr	r3, [r7, #8]
 8006f84:	695b      	ldr	r3, [r3, #20]
 8006f86:	049b      	lsls	r3, r3, #18
 8006f88:	431a      	orrs	r2, r3
 8006f8a:	68bb      	ldr	r3, [r7, #8]
 8006f8c:	6a1b      	ldr	r3, [r3, #32]
 8006f8e:	431a      	orrs	r2, r3
 8006f90:	68bb      	ldr	r3, [r7, #8]
 8006f92:	68db      	ldr	r3, [r3, #12]
 8006f94:	431a      	orrs	r2, r3
 8006f96:	68bb      	ldr	r3, [r7, #8]
 8006f98:	69db      	ldr	r3, [r3, #28]
 8006f9a:	431a      	orrs	r2, r3
 8006f9c:	68bb      	ldr	r3, [r7, #8]
 8006f9e:	699b      	ldr	r3, [r3, #24]
 8006fa0:	ea42 0103 	orr.w	r1, r2, r3
 8006fa4:	68fb      	ldr	r3, [r7, #12]
 8006fa6:	681b      	ldr	r3, [r3, #0]
 8006fa8:	687a      	ldr	r2, [r7, #4]
 8006faa:	430a      	orrs	r2, r1
 8006fac:	615a      	str	r2, [r3, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006fae:	687b      	ldr	r3, [r7, #4]
 8006fb0:	f1b3 6f40 	cmp.w	r3, #201326592	; 0xc000000
 8006fb4:	d027      	beq.n	8007006 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006fb6:	68fb      	ldr	r3, [r7, #12]
 8006fb8:	681b      	ldr	r3, [r3, #0]
 8006fba:	68ba      	ldr	r2, [r7, #8]
 8006fbc:	6852      	ldr	r2, [r2, #4]
 8006fbe:	619a      	str	r2, [r3, #24]
}
 8006fc0:	e021      	b.n	8007006 <QSPI_Config+0x300>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8006fc2:	68bb      	ldr	r3, [r7, #8]
 8006fc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006fc6:	2b00      	cmp	r3, #0
 8006fc8:	d01d      	beq.n	8007006 <QSPI_Config+0x300>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006fca:	68bb      	ldr	r3, [r7, #8]
 8006fcc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006fce:	68bb      	ldr	r3, [r7, #8]
 8006fd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fd2:	431a      	orrs	r2, r3
 8006fd4:	68bb      	ldr	r3, [r7, #8]
 8006fd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006fd8:	431a      	orrs	r2, r3
 8006fda:	68bb      	ldr	r3, [r7, #8]
 8006fdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006fde:	431a      	orrs	r2, r3
 8006fe0:	68bb      	ldr	r3, [r7, #8]
 8006fe2:	695b      	ldr	r3, [r3, #20]
 8006fe4:	049b      	lsls	r3, r3, #18
 8006fe6:	431a      	orrs	r2, r3
 8006fe8:	68bb      	ldr	r3, [r7, #8]
 8006fea:	6a1b      	ldr	r3, [r3, #32]
 8006fec:	431a      	orrs	r2, r3
 8006fee:	68bb      	ldr	r3, [r7, #8]
 8006ff0:	69db      	ldr	r3, [r3, #28]
 8006ff2:	431a      	orrs	r2, r3
 8006ff4:	68bb      	ldr	r3, [r7, #8]
 8006ff6:	699b      	ldr	r3, [r3, #24]
 8006ff8:	ea42 0103 	orr.w	r1, r2, r3
 8006ffc:	68fb      	ldr	r3, [r7, #12]
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	687a      	ldr	r2, [r7, #4]
 8007002:	430a      	orrs	r2, r1
 8007004:	615a      	str	r2, [r3, #20]
}
 8007006:	bf00      	nop
 8007008:	3714      	adds	r7, #20
 800700a:	46bd      	mov	sp, r7
 800700c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007010:	4770      	bx	lr
	...

08007014 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007014:	b580      	push	{r7, lr}
 8007016:	b08c      	sub	sp, #48	; 0x30
 8007018:	af00      	add	r7, sp, #0
 800701a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	2b00      	cmp	r3, #0
 8007020:	d102      	bne.n	8007028 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8007022:	2301      	movs	r3, #1
 8007024:	f000 bc48 	b.w	80078b8 <HAL_RCC_OscConfig+0x8a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	f003 0301 	and.w	r3, r3, #1
 8007030:	2b00      	cmp	r3, #0
 8007032:	f000 8088 	beq.w	8007146 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007036:	4b99      	ldr	r3, [pc, #612]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007038:	691b      	ldr	r3, [r3, #16]
 800703a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800703e:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8007040:	4b96      	ldr	r3, [pc, #600]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007042:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007044:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8007046:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007048:	2b10      	cmp	r3, #16
 800704a:	d007      	beq.n	800705c <HAL_RCC_OscConfig+0x48>
 800704c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800704e:	2b18      	cmp	r3, #24
 8007050:	d111      	bne.n	8007076 <HAL_RCC_OscConfig+0x62>
 8007052:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007054:	f003 0303 	and.w	r3, r3, #3
 8007058:	2b02      	cmp	r3, #2
 800705a:	d10c      	bne.n	8007076 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800705c:	4b8f      	ldr	r3, [pc, #572]	; (800729c <HAL_RCC_OscConfig+0x288>)
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007064:	2b00      	cmp	r3, #0
 8007066:	d06d      	beq.n	8007144 <HAL_RCC_OscConfig+0x130>
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	685b      	ldr	r3, [r3, #4]
 800706c:	2b00      	cmp	r3, #0
 800706e:	d169      	bne.n	8007144 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8007070:	2301      	movs	r3, #1
 8007072:	f000 bc21 	b.w	80078b8 <HAL_RCC_OscConfig+0x8a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	685b      	ldr	r3, [r3, #4]
 800707a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800707e:	d106      	bne.n	800708e <HAL_RCC_OscConfig+0x7a>
 8007080:	4b86      	ldr	r3, [pc, #536]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	4a85      	ldr	r2, [pc, #532]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007086:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800708a:	6013      	str	r3, [r2, #0]
 800708c:	e02e      	b.n	80070ec <HAL_RCC_OscConfig+0xd8>
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	685b      	ldr	r3, [r3, #4]
 8007092:	2b00      	cmp	r3, #0
 8007094:	d10c      	bne.n	80070b0 <HAL_RCC_OscConfig+0x9c>
 8007096:	4b81      	ldr	r3, [pc, #516]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	4a80      	ldr	r2, [pc, #512]	; (800729c <HAL_RCC_OscConfig+0x288>)
 800709c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80070a0:	6013      	str	r3, [r2, #0]
 80070a2:	4b7e      	ldr	r3, [pc, #504]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070a4:	681b      	ldr	r3, [r3, #0]
 80070a6:	4a7d      	ldr	r2, [pc, #500]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070a8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80070ac:	6013      	str	r3, [r2, #0]
 80070ae:	e01d      	b.n	80070ec <HAL_RCC_OscConfig+0xd8>
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	685b      	ldr	r3, [r3, #4]
 80070b4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80070b8:	d10c      	bne.n	80070d4 <HAL_RCC_OscConfig+0xc0>
 80070ba:	4b78      	ldr	r3, [pc, #480]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	4a77      	ldr	r2, [pc, #476]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070c0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80070c4:	6013      	str	r3, [r2, #0]
 80070c6:	4b75      	ldr	r3, [pc, #468]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	4a74      	ldr	r2, [pc, #464]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070cc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80070d0:	6013      	str	r3, [r2, #0]
 80070d2:	e00b      	b.n	80070ec <HAL_RCC_OscConfig+0xd8>
 80070d4:	4b71      	ldr	r3, [pc, #452]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070d6:	681b      	ldr	r3, [r3, #0]
 80070d8:	4a70      	ldr	r2, [pc, #448]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070da:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80070de:	6013      	str	r3, [r2, #0]
 80070e0:	4b6e      	ldr	r3, [pc, #440]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	4a6d      	ldr	r2, [pc, #436]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80070e6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80070ea:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	685b      	ldr	r3, [r3, #4]
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	d013      	beq.n	800711c <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80070f4:	f7fb fad0 	bl	8002698 <HAL_GetTick>
 80070f8:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80070fa:	e008      	b.n	800710e <HAL_RCC_OscConfig+0xfa>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80070fc:	f7fb facc 	bl	8002698 <HAL_GetTick>
 8007100:	4602      	mov	r2, r0
 8007102:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007104:	1ad3      	subs	r3, r2, r3
 8007106:	2b64      	cmp	r3, #100	; 0x64
 8007108:	d901      	bls.n	800710e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800710a:	2303      	movs	r3, #3
 800710c:	e3d4      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800710e:	4b63      	ldr	r3, [pc, #396]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007110:	681b      	ldr	r3, [r3, #0]
 8007112:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007116:	2b00      	cmp	r3, #0
 8007118:	d0f0      	beq.n	80070fc <HAL_RCC_OscConfig+0xe8>
 800711a:	e014      	b.n	8007146 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800711c:	f7fb fabc 	bl	8002698 <HAL_GetTick>
 8007120:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8007122:	e008      	b.n	8007136 <HAL_RCC_OscConfig+0x122>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8007124:	f7fb fab8 	bl	8002698 <HAL_GetTick>
 8007128:	4602      	mov	r2, r0
 800712a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800712c:	1ad3      	subs	r3, r2, r3
 800712e:	2b64      	cmp	r3, #100	; 0x64
 8007130:	d901      	bls.n	8007136 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8007132:	2303      	movs	r3, #3
 8007134:	e3c0      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8007136:	4b59      	ldr	r3, [pc, #356]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007138:	681b      	ldr	r3, [r3, #0]
 800713a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800713e:	2b00      	cmp	r3, #0
 8007140:	d1f0      	bne.n	8007124 <HAL_RCC_OscConfig+0x110>
 8007142:	e000      	b.n	8007146 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007144:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	f003 0302 	and.w	r3, r3, #2
 800714e:	2b00      	cmp	r3, #0
 8007150:	f000 80ca 	beq.w	80072e8 <HAL_RCC_OscConfig+0x2d4>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007154:	4b51      	ldr	r3, [pc, #324]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007156:	691b      	ldr	r3, [r3, #16]
 8007158:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800715c:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 800715e:	4b4f      	ldr	r3, [pc, #316]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007160:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007162:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8007164:	6a3b      	ldr	r3, [r7, #32]
 8007166:	2b00      	cmp	r3, #0
 8007168:	d007      	beq.n	800717a <HAL_RCC_OscConfig+0x166>
 800716a:	6a3b      	ldr	r3, [r7, #32]
 800716c:	2b18      	cmp	r3, #24
 800716e:	d156      	bne.n	800721e <HAL_RCC_OscConfig+0x20a>
 8007170:	69fb      	ldr	r3, [r7, #28]
 8007172:	f003 0303 	and.w	r3, r3, #3
 8007176:	2b00      	cmp	r3, #0
 8007178:	d151      	bne.n	800721e <HAL_RCC_OscConfig+0x20a>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800717a:	4b48      	ldr	r3, [pc, #288]	; (800729c <HAL_RCC_OscConfig+0x288>)
 800717c:	681b      	ldr	r3, [r3, #0]
 800717e:	f003 0304 	and.w	r3, r3, #4
 8007182:	2b00      	cmp	r3, #0
 8007184:	d005      	beq.n	8007192 <HAL_RCC_OscConfig+0x17e>
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	68db      	ldr	r3, [r3, #12]
 800718a:	2b00      	cmp	r3, #0
 800718c:	d101      	bne.n	8007192 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 800718e:	2301      	movs	r3, #1
 8007190:	e392      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007192:	4b42      	ldr	r3, [pc, #264]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007194:	681b      	ldr	r3, [r3, #0]
 8007196:	f023 0219 	bic.w	r2, r3, #25
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	68db      	ldr	r3, [r3, #12]
 800719e:	493f      	ldr	r1, [pc, #252]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80071a0:	4313      	orrs	r3, r2
 80071a2:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80071a4:	f7fb fa78 	bl	8002698 <HAL_GetTick>
 80071a8:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80071aa:	e008      	b.n	80071be <HAL_RCC_OscConfig+0x1aa>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80071ac:	f7fb fa74 	bl	8002698 <HAL_GetTick>
 80071b0:	4602      	mov	r2, r0
 80071b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80071b4:	1ad3      	subs	r3, r2, r3
 80071b6:	2b02      	cmp	r3, #2
 80071b8:	d901      	bls.n	80071be <HAL_RCC_OscConfig+0x1aa>
          {
            return HAL_TIMEOUT;
 80071ba:	2303      	movs	r3, #3
 80071bc:	e37c      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80071be:	4b37      	ldr	r3, [pc, #220]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80071c0:	681b      	ldr	r3, [r3, #0]
 80071c2:	f003 0304 	and.w	r3, r3, #4
 80071c6:	2b00      	cmp	r3, #0
 80071c8:	d0f0      	beq.n	80071ac <HAL_RCC_OscConfig+0x198>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80071ca:	f7fb fa95 	bl	80026f8 <HAL_GetREVID>
 80071ce:	4603      	mov	r3, r0
 80071d0:	f241 0203 	movw	r2, #4099	; 0x1003
 80071d4:	4293      	cmp	r3, r2
 80071d6:	d817      	bhi.n	8007208 <HAL_RCC_OscConfig+0x1f4>
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	691b      	ldr	r3, [r3, #16]
 80071dc:	2b40      	cmp	r3, #64	; 0x40
 80071de:	d108      	bne.n	80071f2 <HAL_RCC_OscConfig+0x1de>
 80071e0:	4b2e      	ldr	r3, [pc, #184]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80071e2:	685b      	ldr	r3, [r3, #4]
 80071e4:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 80071e8:	4a2c      	ldr	r2, [pc, #176]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80071ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80071ee:	6053      	str	r3, [r2, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80071f0:	e07a      	b.n	80072e8 <HAL_RCC_OscConfig+0x2d4>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80071f2:	4b2a      	ldr	r3, [pc, #168]	; (800729c <HAL_RCC_OscConfig+0x288>)
 80071f4:	685b      	ldr	r3, [r3, #4]
 80071f6:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	691b      	ldr	r3, [r3, #16]
 80071fe:	031b      	lsls	r3, r3, #12
 8007200:	4926      	ldr	r1, [pc, #152]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007202:	4313      	orrs	r3, r2
 8007204:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8007206:	e06f      	b.n	80072e8 <HAL_RCC_OscConfig+0x2d4>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007208:	4b24      	ldr	r3, [pc, #144]	; (800729c <HAL_RCC_OscConfig+0x288>)
 800720a:	685b      	ldr	r3, [r3, #4]
 800720c:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	691b      	ldr	r3, [r3, #16]
 8007214:	061b      	lsls	r3, r3, #24
 8007216:	4921      	ldr	r1, [pc, #132]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007218:	4313      	orrs	r3, r2
 800721a:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800721c:	e064      	b.n	80072e8 <HAL_RCC_OscConfig+0x2d4>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	68db      	ldr	r3, [r3, #12]
 8007222:	2b00      	cmp	r3, #0
 8007224:	d047      	beq.n	80072b6 <HAL_RCC_OscConfig+0x2a2>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007226:	4b1d      	ldr	r3, [pc, #116]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	f023 0219 	bic.w	r2, r3, #25
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	68db      	ldr	r3, [r3, #12]
 8007232:	491a      	ldr	r1, [pc, #104]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007234:	4313      	orrs	r3, r2
 8007236:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007238:	f7fb fa2e 	bl	8002698 <HAL_GetTick>
 800723c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800723e:	e008      	b.n	8007252 <HAL_RCC_OscConfig+0x23e>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007240:	f7fb fa2a 	bl	8002698 <HAL_GetTick>
 8007244:	4602      	mov	r2, r0
 8007246:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007248:	1ad3      	subs	r3, r2, r3
 800724a:	2b02      	cmp	r3, #2
 800724c:	d901      	bls.n	8007252 <HAL_RCC_OscConfig+0x23e>
          {
            return HAL_TIMEOUT;
 800724e:	2303      	movs	r3, #3
 8007250:	e332      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007252:	4b12      	ldr	r3, [pc, #72]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007254:	681b      	ldr	r3, [r3, #0]
 8007256:	f003 0304 	and.w	r3, r3, #4
 800725a:	2b00      	cmp	r3, #0
 800725c:	d0f0      	beq.n	8007240 <HAL_RCC_OscConfig+0x22c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800725e:	f7fb fa4b 	bl	80026f8 <HAL_GetREVID>
 8007262:	4603      	mov	r3, r0
 8007264:	f241 0203 	movw	r2, #4099	; 0x1003
 8007268:	4293      	cmp	r3, r2
 800726a:	d819      	bhi.n	80072a0 <HAL_RCC_OscConfig+0x28c>
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	691b      	ldr	r3, [r3, #16]
 8007270:	2b40      	cmp	r3, #64	; 0x40
 8007272:	d108      	bne.n	8007286 <HAL_RCC_OscConfig+0x272>
 8007274:	4b09      	ldr	r3, [pc, #36]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007276:	685b      	ldr	r3, [r3, #4]
 8007278:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 800727c:	4a07      	ldr	r2, [pc, #28]	; (800729c <HAL_RCC_OscConfig+0x288>)
 800727e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007282:	6053      	str	r3, [r2, #4]
 8007284:	e030      	b.n	80072e8 <HAL_RCC_OscConfig+0x2d4>
 8007286:	4b05      	ldr	r3, [pc, #20]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007288:	685b      	ldr	r3, [r3, #4]
 800728a:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	691b      	ldr	r3, [r3, #16]
 8007292:	031b      	lsls	r3, r3, #12
 8007294:	4901      	ldr	r1, [pc, #4]	; (800729c <HAL_RCC_OscConfig+0x288>)
 8007296:	4313      	orrs	r3, r2
 8007298:	604b      	str	r3, [r1, #4]
 800729a:	e025      	b.n	80072e8 <HAL_RCC_OscConfig+0x2d4>
 800729c:	58024400 	.word	0x58024400
 80072a0:	4b9a      	ldr	r3, [pc, #616]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80072a2:	685b      	ldr	r3, [r3, #4]
 80072a4:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	691b      	ldr	r3, [r3, #16]
 80072ac:	061b      	lsls	r3, r3, #24
 80072ae:	4997      	ldr	r1, [pc, #604]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80072b0:	4313      	orrs	r3, r2
 80072b2:	604b      	str	r3, [r1, #4]
 80072b4:	e018      	b.n	80072e8 <HAL_RCC_OscConfig+0x2d4>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80072b6:	4b95      	ldr	r3, [pc, #596]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80072b8:	681b      	ldr	r3, [r3, #0]
 80072ba:	4a94      	ldr	r2, [pc, #592]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80072bc:	f023 0301 	bic.w	r3, r3, #1
 80072c0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80072c2:	f7fb f9e9 	bl	8002698 <HAL_GetTick>
 80072c6:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80072c8:	e008      	b.n	80072dc <HAL_RCC_OscConfig+0x2c8>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80072ca:	f7fb f9e5 	bl	8002698 <HAL_GetTick>
 80072ce:	4602      	mov	r2, r0
 80072d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072d2:	1ad3      	subs	r3, r2, r3
 80072d4:	2b02      	cmp	r3, #2
 80072d6:	d901      	bls.n	80072dc <HAL_RCC_OscConfig+0x2c8>
          {
            return HAL_TIMEOUT;
 80072d8:	2303      	movs	r3, #3
 80072da:	e2ed      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80072dc:	4b8b      	ldr	r3, [pc, #556]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	f003 0304 	and.w	r3, r3, #4
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d1f0      	bne.n	80072ca <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	681b      	ldr	r3, [r3, #0]
 80072ec:	f003 0310 	and.w	r3, r3, #16
 80072f0:	2b00      	cmp	r3, #0
 80072f2:	f000 80a9 	beq.w	8007448 <HAL_RCC_OscConfig+0x434>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80072f6:	4b85      	ldr	r3, [pc, #532]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80072f8:	691b      	ldr	r3, [r3, #16]
 80072fa:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80072fe:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8007300:	4b82      	ldr	r3, [pc, #520]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007302:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007304:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8007306:	69bb      	ldr	r3, [r7, #24]
 8007308:	2b08      	cmp	r3, #8
 800730a:	d007      	beq.n	800731c <HAL_RCC_OscConfig+0x308>
 800730c:	69bb      	ldr	r3, [r7, #24]
 800730e:	2b18      	cmp	r3, #24
 8007310:	d13a      	bne.n	8007388 <HAL_RCC_OscConfig+0x374>
 8007312:	697b      	ldr	r3, [r7, #20]
 8007314:	f003 0303 	and.w	r3, r3, #3
 8007318:	2b01      	cmp	r3, #1
 800731a:	d135      	bne.n	8007388 <HAL_RCC_OscConfig+0x374>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 800731c:	4b7b      	ldr	r3, [pc, #492]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800731e:	681b      	ldr	r3, [r3, #0]
 8007320:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007324:	2b00      	cmp	r3, #0
 8007326:	d005      	beq.n	8007334 <HAL_RCC_OscConfig+0x320>
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	69db      	ldr	r3, [r3, #28]
 800732c:	2b80      	cmp	r3, #128	; 0x80
 800732e:	d001      	beq.n	8007334 <HAL_RCC_OscConfig+0x320>
      {
        return HAL_ERROR;
 8007330:	2301      	movs	r3, #1
 8007332:	e2c1      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007334:	f7fb f9e0 	bl	80026f8 <HAL_GetREVID>
 8007338:	4603      	mov	r3, r0
 800733a:	f241 0203 	movw	r2, #4099	; 0x1003
 800733e:	4293      	cmp	r3, r2
 8007340:	d817      	bhi.n	8007372 <HAL_RCC_OscConfig+0x35e>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	6a1b      	ldr	r3, [r3, #32]
 8007346:	2b20      	cmp	r3, #32
 8007348:	d108      	bne.n	800735c <HAL_RCC_OscConfig+0x348>
 800734a:	4b70      	ldr	r3, [pc, #448]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800734c:	685b      	ldr	r3, [r3, #4]
 800734e:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8007352:	4a6e      	ldr	r2, [pc, #440]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007354:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8007358:	6053      	str	r3, [r2, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 800735a:	e075      	b.n	8007448 <HAL_RCC_OscConfig+0x434>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800735c:	4b6b      	ldr	r3, [pc, #428]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800735e:	685b      	ldr	r3, [r3, #4]
 8007360:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	6a1b      	ldr	r3, [r3, #32]
 8007368:	069b      	lsls	r3, r3, #26
 800736a:	4968      	ldr	r1, [pc, #416]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800736c:	4313      	orrs	r3, r2
 800736e:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8007370:	e06a      	b.n	8007448 <HAL_RCC_OscConfig+0x434>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007372:	4b66      	ldr	r3, [pc, #408]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007374:	68db      	ldr	r3, [r3, #12]
 8007376:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	6a1b      	ldr	r3, [r3, #32]
 800737e:	061b      	lsls	r3, r3, #24
 8007380:	4962      	ldr	r1, [pc, #392]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007382:	4313      	orrs	r3, r2
 8007384:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8007386:	e05f      	b.n	8007448 <HAL_RCC_OscConfig+0x434>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	69db      	ldr	r3, [r3, #28]
 800738c:	2b00      	cmp	r3, #0
 800738e:	d042      	beq.n	8007416 <HAL_RCC_OscConfig+0x402>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8007390:	4b5e      	ldr	r3, [pc, #376]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007392:	681b      	ldr	r3, [r3, #0]
 8007394:	4a5d      	ldr	r2, [pc, #372]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007396:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800739a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800739c:	f7fb f97c 	bl	8002698 <HAL_GetTick>
 80073a0:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80073a2:	e008      	b.n	80073b6 <HAL_RCC_OscConfig+0x3a2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 80073a4:	f7fb f978 	bl	8002698 <HAL_GetTick>
 80073a8:	4602      	mov	r2, r0
 80073aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073ac:	1ad3      	subs	r3, r2, r3
 80073ae:	2b02      	cmp	r3, #2
 80073b0:	d901      	bls.n	80073b6 <HAL_RCC_OscConfig+0x3a2>
          {
            return HAL_TIMEOUT;
 80073b2:	2303      	movs	r3, #3
 80073b4:	e280      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80073b6:	4b55      	ldr	r3, [pc, #340]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80073be:	2b00      	cmp	r3, #0
 80073c0:	d0f0      	beq.n	80073a4 <HAL_RCC_OscConfig+0x390>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 80073c2:	f7fb f999 	bl	80026f8 <HAL_GetREVID>
 80073c6:	4603      	mov	r3, r0
 80073c8:	f241 0203 	movw	r2, #4099	; 0x1003
 80073cc:	4293      	cmp	r3, r2
 80073ce:	d817      	bhi.n	8007400 <HAL_RCC_OscConfig+0x3ec>
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	6a1b      	ldr	r3, [r3, #32]
 80073d4:	2b20      	cmp	r3, #32
 80073d6:	d108      	bne.n	80073ea <HAL_RCC_OscConfig+0x3d6>
 80073d8:	4b4c      	ldr	r3, [pc, #304]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80073da:	685b      	ldr	r3, [r3, #4]
 80073dc:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 80073e0:	4a4a      	ldr	r2, [pc, #296]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80073e2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80073e6:	6053      	str	r3, [r2, #4]
 80073e8:	e02e      	b.n	8007448 <HAL_RCC_OscConfig+0x434>
 80073ea:	4b48      	ldr	r3, [pc, #288]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80073ec:	685b      	ldr	r3, [r3, #4]
 80073ee:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	6a1b      	ldr	r3, [r3, #32]
 80073f6:	069b      	lsls	r3, r3, #26
 80073f8:	4944      	ldr	r1, [pc, #272]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80073fa:	4313      	orrs	r3, r2
 80073fc:	604b      	str	r3, [r1, #4]
 80073fe:	e023      	b.n	8007448 <HAL_RCC_OscConfig+0x434>
 8007400:	4b42      	ldr	r3, [pc, #264]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007402:	68db      	ldr	r3, [r3, #12]
 8007404:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	6a1b      	ldr	r3, [r3, #32]
 800740c:	061b      	lsls	r3, r3, #24
 800740e:	493f      	ldr	r1, [pc, #252]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007410:	4313      	orrs	r3, r2
 8007412:	60cb      	str	r3, [r1, #12]
 8007414:	e018      	b.n	8007448 <HAL_RCC_OscConfig+0x434>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8007416:	4b3d      	ldr	r3, [pc, #244]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007418:	681b      	ldr	r3, [r3, #0]
 800741a:	4a3c      	ldr	r2, [pc, #240]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800741c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007420:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007422:	f7fb f939 	bl	8002698 <HAL_GetTick>
 8007426:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007428:	e008      	b.n	800743c <HAL_RCC_OscConfig+0x428>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 800742a:	f7fb f935 	bl	8002698 <HAL_GetTick>
 800742e:	4602      	mov	r2, r0
 8007430:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007432:	1ad3      	subs	r3, r2, r3
 8007434:	2b02      	cmp	r3, #2
 8007436:	d901      	bls.n	800743c <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8007438:	2303      	movs	r3, #3
 800743a:	e23d      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 800743c:	4b33      	ldr	r3, [pc, #204]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007444:	2b00      	cmp	r3, #0
 8007446:	d1f0      	bne.n	800742a <HAL_RCC_OscConfig+0x416>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	f003 0308 	and.w	r3, r3, #8
 8007450:	2b00      	cmp	r3, #0
 8007452:	d036      	beq.n	80074c2 <HAL_RCC_OscConfig+0x4ae>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	695b      	ldr	r3, [r3, #20]
 8007458:	2b00      	cmp	r3, #0
 800745a:	d019      	beq.n	8007490 <HAL_RCC_OscConfig+0x47c>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800745c:	4b2b      	ldr	r3, [pc, #172]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 800745e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007460:	4a2a      	ldr	r2, [pc, #168]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007462:	f043 0301 	orr.w	r3, r3, #1
 8007466:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007468:	f7fb f916 	bl	8002698 <HAL_GetTick>
 800746c:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 800746e:	e008      	b.n	8007482 <HAL_RCC_OscConfig+0x46e>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007470:	f7fb f912 	bl	8002698 <HAL_GetTick>
 8007474:	4602      	mov	r2, r0
 8007476:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007478:	1ad3      	subs	r3, r2, r3
 800747a:	2b02      	cmp	r3, #2
 800747c:	d901      	bls.n	8007482 <HAL_RCC_OscConfig+0x46e>
        {
          return HAL_TIMEOUT;
 800747e:	2303      	movs	r3, #3
 8007480:	e21a      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8007482:	4b22      	ldr	r3, [pc, #136]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007484:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007486:	f003 0302 	and.w	r3, r3, #2
 800748a:	2b00      	cmp	r3, #0
 800748c:	d0f0      	beq.n	8007470 <HAL_RCC_OscConfig+0x45c>
 800748e:	e018      	b.n	80074c2 <HAL_RCC_OscConfig+0x4ae>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8007490:	4b1e      	ldr	r3, [pc, #120]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007492:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007494:	4a1d      	ldr	r2, [pc, #116]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 8007496:	f023 0301 	bic.w	r3, r3, #1
 800749a:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800749c:	f7fb f8fc 	bl	8002698 <HAL_GetTick>
 80074a0:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80074a2:	e008      	b.n	80074b6 <HAL_RCC_OscConfig+0x4a2>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80074a4:	f7fb f8f8 	bl	8002698 <HAL_GetTick>
 80074a8:	4602      	mov	r2, r0
 80074aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074ac:	1ad3      	subs	r3, r2, r3
 80074ae:	2b02      	cmp	r3, #2
 80074b0:	d901      	bls.n	80074b6 <HAL_RCC_OscConfig+0x4a2>
        {
          return HAL_TIMEOUT;
 80074b2:	2303      	movs	r3, #3
 80074b4:	e200      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80074b6:	4b15      	ldr	r3, [pc, #84]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80074b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80074ba:	f003 0302 	and.w	r3, r3, #2
 80074be:	2b00      	cmp	r3, #0
 80074c0:	d1f0      	bne.n	80074a4 <HAL_RCC_OscConfig+0x490>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	681b      	ldr	r3, [r3, #0]
 80074c6:	f003 0320 	and.w	r3, r3, #32
 80074ca:	2b00      	cmp	r3, #0
 80074cc:	d039      	beq.n	8007542 <HAL_RCC_OscConfig+0x52e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	699b      	ldr	r3, [r3, #24]
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d01c      	beq.n	8007510 <HAL_RCC_OscConfig+0x4fc>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 80074d6:	4b0d      	ldr	r3, [pc, #52]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80074d8:	681b      	ldr	r3, [r3, #0]
 80074da:	4a0c      	ldr	r2, [pc, #48]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80074dc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80074e0:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 80074e2:	f7fb f8d9 	bl	8002698 <HAL_GetTick>
 80074e6:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80074e8:	e008      	b.n	80074fc <HAL_RCC_OscConfig+0x4e8>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80074ea:	f7fb f8d5 	bl	8002698 <HAL_GetTick>
 80074ee:	4602      	mov	r2, r0
 80074f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074f2:	1ad3      	subs	r3, r2, r3
 80074f4:	2b02      	cmp	r3, #2
 80074f6:	d901      	bls.n	80074fc <HAL_RCC_OscConfig+0x4e8>
        {
          return HAL_TIMEOUT;
 80074f8:	2303      	movs	r3, #3
 80074fa:	e1dd      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80074fc:	4b03      	ldr	r3, [pc, #12]	; (800750c <HAL_RCC_OscConfig+0x4f8>)
 80074fe:	681b      	ldr	r3, [r3, #0]
 8007500:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007504:	2b00      	cmp	r3, #0
 8007506:	d0f0      	beq.n	80074ea <HAL_RCC_OscConfig+0x4d6>
 8007508:	e01b      	b.n	8007542 <HAL_RCC_OscConfig+0x52e>
 800750a:	bf00      	nop
 800750c:	58024400 	.word	0x58024400
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8007510:	4b9b      	ldr	r3, [pc, #620]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	4a9a      	ldr	r2, [pc, #616]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007516:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800751a:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 800751c:	f7fb f8bc 	bl	8002698 <HAL_GetTick>
 8007520:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007522:	e008      	b.n	8007536 <HAL_RCC_OscConfig+0x522>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007524:	f7fb f8b8 	bl	8002698 <HAL_GetTick>
 8007528:	4602      	mov	r2, r0
 800752a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800752c:	1ad3      	subs	r3, r2, r3
 800752e:	2b02      	cmp	r3, #2
 8007530:	d901      	bls.n	8007536 <HAL_RCC_OscConfig+0x522>
        {
          return HAL_TIMEOUT;
 8007532:	2303      	movs	r3, #3
 8007534:	e1c0      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007536:	4b92      	ldr	r3, [pc, #584]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800753e:	2b00      	cmp	r3, #0
 8007540:	d1f0      	bne.n	8007524 <HAL_RCC_OscConfig+0x510>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	f003 0304 	and.w	r3, r3, #4
 800754a:	2b00      	cmp	r3, #0
 800754c:	f000 8081 	beq.w	8007652 <HAL_RCC_OscConfig+0x63e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8007550:	4b8c      	ldr	r3, [pc, #560]	; (8007784 <HAL_RCC_OscConfig+0x770>)
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	4a8b      	ldr	r2, [pc, #556]	; (8007784 <HAL_RCC_OscConfig+0x770>)
 8007556:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800755a:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 800755c:	f7fb f89c 	bl	8002698 <HAL_GetTick>
 8007560:	6278      	str	r0, [r7, #36]	; 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007562:	e008      	b.n	8007576 <HAL_RCC_OscConfig+0x562>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007564:	f7fb f898 	bl	8002698 <HAL_GetTick>
 8007568:	4602      	mov	r2, r0
 800756a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800756c:	1ad3      	subs	r3, r2, r3
 800756e:	2b64      	cmp	r3, #100	; 0x64
 8007570:	d901      	bls.n	8007576 <HAL_RCC_OscConfig+0x562>
      {
        return HAL_TIMEOUT;
 8007572:	2303      	movs	r3, #3
 8007574:	e1a0      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007576:	4b83      	ldr	r3, [pc, #524]	; (8007784 <HAL_RCC_OscConfig+0x770>)
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800757e:	2b00      	cmp	r3, #0
 8007580:	d0f0      	beq.n	8007564 <HAL_RCC_OscConfig+0x550>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	689b      	ldr	r3, [r3, #8]
 8007586:	2b01      	cmp	r3, #1
 8007588:	d106      	bne.n	8007598 <HAL_RCC_OscConfig+0x584>
 800758a:	4b7d      	ldr	r3, [pc, #500]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800758c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800758e:	4a7c      	ldr	r2, [pc, #496]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007590:	f043 0301 	orr.w	r3, r3, #1
 8007594:	6713      	str	r3, [r2, #112]	; 0x70
 8007596:	e02d      	b.n	80075f4 <HAL_RCC_OscConfig+0x5e0>
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	689b      	ldr	r3, [r3, #8]
 800759c:	2b00      	cmp	r3, #0
 800759e:	d10c      	bne.n	80075ba <HAL_RCC_OscConfig+0x5a6>
 80075a0:	4b77      	ldr	r3, [pc, #476]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075a4:	4a76      	ldr	r2, [pc, #472]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075a6:	f023 0301 	bic.w	r3, r3, #1
 80075aa:	6713      	str	r3, [r2, #112]	; 0x70
 80075ac:	4b74      	ldr	r3, [pc, #464]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075b0:	4a73      	ldr	r2, [pc, #460]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075b2:	f023 0304 	bic.w	r3, r3, #4
 80075b6:	6713      	str	r3, [r2, #112]	; 0x70
 80075b8:	e01c      	b.n	80075f4 <HAL_RCC_OscConfig+0x5e0>
 80075ba:	687b      	ldr	r3, [r7, #4]
 80075bc:	689b      	ldr	r3, [r3, #8]
 80075be:	2b05      	cmp	r3, #5
 80075c0:	d10c      	bne.n	80075dc <HAL_RCC_OscConfig+0x5c8>
 80075c2:	4b6f      	ldr	r3, [pc, #444]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075c6:	4a6e      	ldr	r2, [pc, #440]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075c8:	f043 0304 	orr.w	r3, r3, #4
 80075cc:	6713      	str	r3, [r2, #112]	; 0x70
 80075ce:	4b6c      	ldr	r3, [pc, #432]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075d2:	4a6b      	ldr	r2, [pc, #428]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075d4:	f043 0301 	orr.w	r3, r3, #1
 80075d8:	6713      	str	r3, [r2, #112]	; 0x70
 80075da:	e00b      	b.n	80075f4 <HAL_RCC_OscConfig+0x5e0>
 80075dc:	4b68      	ldr	r3, [pc, #416]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075e0:	4a67      	ldr	r2, [pc, #412]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075e2:	f023 0301 	bic.w	r3, r3, #1
 80075e6:	6713      	str	r3, [r2, #112]	; 0x70
 80075e8:	4b65      	ldr	r3, [pc, #404]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80075ec:	4a64      	ldr	r2, [pc, #400]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80075ee:	f023 0304 	bic.w	r3, r3, #4
 80075f2:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	689b      	ldr	r3, [r3, #8]
 80075f8:	2b00      	cmp	r3, #0
 80075fa:	d015      	beq.n	8007628 <HAL_RCC_OscConfig+0x614>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80075fc:	f7fb f84c 	bl	8002698 <HAL_GetTick>
 8007600:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007602:	e00a      	b.n	800761a <HAL_RCC_OscConfig+0x606>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007604:	f7fb f848 	bl	8002698 <HAL_GetTick>
 8007608:	4602      	mov	r2, r0
 800760a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800760c:	1ad3      	subs	r3, r2, r3
 800760e:	f241 3288 	movw	r2, #5000	; 0x1388
 8007612:	4293      	cmp	r3, r2
 8007614:	d901      	bls.n	800761a <HAL_RCC_OscConfig+0x606>
        {
          return HAL_TIMEOUT;
 8007616:	2303      	movs	r3, #3
 8007618:	e14e      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800761a:	4b59      	ldr	r3, [pc, #356]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800761c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800761e:	f003 0302 	and.w	r3, r3, #2
 8007622:	2b00      	cmp	r3, #0
 8007624:	d0ee      	beq.n	8007604 <HAL_RCC_OscConfig+0x5f0>
 8007626:	e014      	b.n	8007652 <HAL_RCC_OscConfig+0x63e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007628:	f7fb f836 	bl	8002698 <HAL_GetTick>
 800762c:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800762e:	e00a      	b.n	8007646 <HAL_RCC_OscConfig+0x632>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007630:	f7fb f832 	bl	8002698 <HAL_GetTick>
 8007634:	4602      	mov	r2, r0
 8007636:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007638:	1ad3      	subs	r3, r2, r3
 800763a:	f241 3288 	movw	r2, #5000	; 0x1388
 800763e:	4293      	cmp	r3, r2
 8007640:	d901      	bls.n	8007646 <HAL_RCC_OscConfig+0x632>
        {
          return HAL_TIMEOUT;
 8007642:	2303      	movs	r3, #3
 8007644:	e138      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8007646:	4b4e      	ldr	r3, [pc, #312]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007648:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800764a:	f003 0302 	and.w	r3, r3, #2
 800764e:	2b00      	cmp	r3, #0
 8007650:	d1ee      	bne.n	8007630 <HAL_RCC_OscConfig+0x61c>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007656:	2b00      	cmp	r3, #0
 8007658:	f000 812d 	beq.w	80078b6 <HAL_RCC_OscConfig+0x8a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 800765c:	4b48      	ldr	r3, [pc, #288]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800765e:	691b      	ldr	r3, [r3, #16]
 8007660:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007664:	2b18      	cmp	r3, #24
 8007666:	f000 80bd 	beq.w	80077e4 <HAL_RCC_OscConfig+0x7d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800766e:	2b02      	cmp	r3, #2
 8007670:	f040 809e 	bne.w	80077b0 <HAL_RCC_OscConfig+0x79c>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007674:	4b42      	ldr	r3, [pc, #264]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	4a41      	ldr	r2, [pc, #260]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800767a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800767e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007680:	f7fb f80a 	bl	8002698 <HAL_GetTick>
 8007684:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007686:	e008      	b.n	800769a <HAL_RCC_OscConfig+0x686>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007688:	f7fb f806 	bl	8002698 <HAL_GetTick>
 800768c:	4602      	mov	r2, r0
 800768e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007690:	1ad3      	subs	r3, r2, r3
 8007692:	2b02      	cmp	r3, #2
 8007694:	d901      	bls.n	800769a <HAL_RCC_OscConfig+0x686>
          {
            return HAL_TIMEOUT;
 8007696:	2303      	movs	r3, #3
 8007698:	e10e      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800769a:	4b39      	ldr	r3, [pc, #228]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	d1f0      	bne.n	8007688 <HAL_RCC_OscConfig+0x674>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80076a6:	4b36      	ldr	r3, [pc, #216]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80076a8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80076aa:	4b37      	ldr	r3, [pc, #220]	; (8007788 <HAL_RCC_OscConfig+0x774>)
 80076ac:	4013      	ands	r3, r2
 80076ae:	687a      	ldr	r2, [r7, #4]
 80076b0:	6a91      	ldr	r1, [r2, #40]	; 0x28
 80076b2:	687a      	ldr	r2, [r7, #4]
 80076b4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80076b6:	0112      	lsls	r2, r2, #4
 80076b8:	430a      	orrs	r2, r1
 80076ba:	4931      	ldr	r1, [pc, #196]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80076bc:	4313      	orrs	r3, r2
 80076be:	628b      	str	r3, [r1, #40]	; 0x28
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80076c4:	3b01      	subs	r3, #1
 80076c6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80076ca:	687b      	ldr	r3, [r7, #4]
 80076cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80076ce:	3b01      	subs	r3, #1
 80076d0:	025b      	lsls	r3, r3, #9
 80076d2:	b29b      	uxth	r3, r3
 80076d4:	431a      	orrs	r2, r3
 80076d6:	687b      	ldr	r3, [r7, #4]
 80076d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80076da:	3b01      	subs	r3, #1
 80076dc:	041b      	lsls	r3, r3, #16
 80076de:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 80076e2:	431a      	orrs	r2, r3
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80076e8:	3b01      	subs	r3, #1
 80076ea:	061b      	lsls	r3, r3, #24
 80076ec:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 80076f0:	4923      	ldr	r1, [pc, #140]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80076f2:	4313      	orrs	r3, r2
 80076f4:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 80076f6:	4b22      	ldr	r3, [pc, #136]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80076f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80076fa:	4a21      	ldr	r2, [pc, #132]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 80076fc:	f023 0301 	bic.w	r3, r3, #1
 8007700:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8007702:	4b1f      	ldr	r3, [pc, #124]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007704:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007706:	4b21      	ldr	r3, [pc, #132]	; (800778c <HAL_RCC_OscConfig+0x778>)
 8007708:	4013      	ands	r3, r2
 800770a:	687a      	ldr	r2, [r7, #4]
 800770c:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800770e:	00d2      	lsls	r2, r2, #3
 8007710:	491b      	ldr	r1, [pc, #108]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007712:	4313      	orrs	r3, r2
 8007714:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8007716:	4b1a      	ldr	r3, [pc, #104]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800771a:	f023 020c 	bic.w	r2, r3, #12
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007722:	4917      	ldr	r1, [pc, #92]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007724:	4313      	orrs	r3, r2
 8007726:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8007728:	4b15      	ldr	r3, [pc, #84]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800772a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800772c:	f023 0202 	bic.w	r2, r3, #2
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007734:	4912      	ldr	r1, [pc, #72]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007736:	4313      	orrs	r3, r2
 8007738:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 800773a:	4b11      	ldr	r3, [pc, #68]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800773c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800773e:	4a10      	ldr	r2, [pc, #64]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007740:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007744:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007746:	4b0e      	ldr	r3, [pc, #56]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007748:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800774a:	4a0d      	ldr	r2, [pc, #52]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800774c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007750:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007752:	4b0b      	ldr	r3, [pc, #44]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007754:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007756:	4a0a      	ldr	r2, [pc, #40]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007758:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800775c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 800775e:	4b08      	ldr	r3, [pc, #32]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007760:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007762:	4a07      	ldr	r2, [pc, #28]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007764:	f043 0301 	orr.w	r3, r3, #1
 8007768:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800776a:	4b05      	ldr	r3, [pc, #20]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 800776c:	681b      	ldr	r3, [r3, #0]
 800776e:	4a04      	ldr	r2, [pc, #16]	; (8007780 <HAL_RCC_OscConfig+0x76c>)
 8007770:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007774:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007776:	f7fa ff8f 	bl	8002698 <HAL_GetTick>
 800777a:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800777c:	e011      	b.n	80077a2 <HAL_RCC_OscConfig+0x78e>
 800777e:	bf00      	nop
 8007780:	58024400 	.word	0x58024400
 8007784:	58024800 	.word	0x58024800
 8007788:	fffffc0c 	.word	0xfffffc0c
 800778c:	ffff0007 	.word	0xffff0007
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007790:	f7fa ff82 	bl	8002698 <HAL_GetTick>
 8007794:	4602      	mov	r2, r0
 8007796:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007798:	1ad3      	subs	r3, r2, r3
 800779a:	2b02      	cmp	r3, #2
 800779c:	d901      	bls.n	80077a2 <HAL_RCC_OscConfig+0x78e>
          {
            return HAL_TIMEOUT;
 800779e:	2303      	movs	r3, #3
 80077a0:	e08a      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80077a2:	4b47      	ldr	r3, [pc, #284]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80077aa:	2b00      	cmp	r3, #0
 80077ac:	d0f0      	beq.n	8007790 <HAL_RCC_OscConfig+0x77c>
 80077ae:	e082      	b.n	80078b6 <HAL_RCC_OscConfig+0x8a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80077b0:	4b43      	ldr	r3, [pc, #268]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80077b2:	681b      	ldr	r3, [r3, #0]
 80077b4:	4a42      	ldr	r2, [pc, #264]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80077b6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80077ba:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80077bc:	f7fa ff6c 	bl	8002698 <HAL_GetTick>
 80077c0:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80077c2:	e008      	b.n	80077d6 <HAL_RCC_OscConfig+0x7c2>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80077c4:	f7fa ff68 	bl	8002698 <HAL_GetTick>
 80077c8:	4602      	mov	r2, r0
 80077ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077cc:	1ad3      	subs	r3, r2, r3
 80077ce:	2b02      	cmp	r3, #2
 80077d0:	d901      	bls.n	80077d6 <HAL_RCC_OscConfig+0x7c2>
          {
            return HAL_TIMEOUT;
 80077d2:	2303      	movs	r3, #3
 80077d4:	e070      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80077d6:	4b3a      	ldr	r3, [pc, #232]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80077de:	2b00      	cmp	r3, #0
 80077e0:	d1f0      	bne.n	80077c4 <HAL_RCC_OscConfig+0x7b0>
 80077e2:	e068      	b.n	80078b6 <HAL_RCC_OscConfig+0x8a2>
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 80077e4:	4b36      	ldr	r3, [pc, #216]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80077e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80077e8:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 80077ea:	4b35      	ldr	r3, [pc, #212]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80077ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80077ee:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077f4:	2b01      	cmp	r3, #1
 80077f6:	d031      	beq.n	800785c <HAL_RCC_OscConfig+0x848>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80077f8:	693b      	ldr	r3, [r7, #16]
 80077fa:	f003 0203 	and.w	r2, r3, #3
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007802:	429a      	cmp	r2, r3
 8007804:	d12a      	bne.n	800785c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8007806:	693b      	ldr	r3, [r7, #16]
 8007808:	091b      	lsrs	r3, r3, #4
 800780a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	6adb      	ldr	r3, [r3, #44]	; 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007812:	429a      	cmp	r2, r3
 8007814:	d122      	bne.n	800785c <HAL_RCC_OscConfig+0x848>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007816:	68fb      	ldr	r3, [r7, #12]
 8007818:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007820:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8007822:	429a      	cmp	r2, r3
 8007824:	d11a      	bne.n	800785c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	0a5b      	lsrs	r3, r3, #9
 800782a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007832:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8007834:	429a      	cmp	r2, r3
 8007836:	d111      	bne.n	800785c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007838:	68fb      	ldr	r3, [r7, #12]
 800783a:	0c1b      	lsrs	r3, r3, #16
 800783c:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007844:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007846:	429a      	cmp	r2, r3
 8007848:	d108      	bne.n	800785c <HAL_RCC_OscConfig+0x848>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	0e1b      	lsrs	r3, r3, #24
 800784e:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007856:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007858:	429a      	cmp	r2, r3
 800785a:	d001      	beq.n	8007860 <HAL_RCC_OscConfig+0x84c>
      {
        return HAL_ERROR;
 800785c:	2301      	movs	r3, #1
 800785e:	e02b      	b.n	80078b8 <HAL_RCC_OscConfig+0x8a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8007860:	4b17      	ldr	r3, [pc, #92]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 8007862:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007864:	08db      	lsrs	r3, r3, #3
 8007866:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800786a:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007870:	693a      	ldr	r2, [r7, #16]
 8007872:	429a      	cmp	r2, r3
 8007874:	d01f      	beq.n	80078b6 <HAL_RCC_OscConfig+0x8a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 8007876:	4b12      	ldr	r3, [pc, #72]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 8007878:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800787a:	4a11      	ldr	r2, [pc, #68]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 800787c:	f023 0301 	bic.w	r3, r3, #1
 8007880:	62d3      	str	r3, [r2, #44]	; 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 8007882:	f7fa ff09 	bl	8002698 <HAL_GetTick>
 8007886:	6278      	str	r0, [r7, #36]	; 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8007888:	bf00      	nop
 800788a:	f7fa ff05 	bl	8002698 <HAL_GetTick>
 800788e:	4602      	mov	r2, r0
 8007890:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007892:	4293      	cmp	r3, r2
 8007894:	d0f9      	beq.n	800788a <HAL_RCC_OscConfig+0x876>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8007896:	4b0a      	ldr	r3, [pc, #40]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 8007898:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800789a:	4b0a      	ldr	r3, [pc, #40]	; (80078c4 <HAL_RCC_OscConfig+0x8b0>)
 800789c:	4013      	ands	r3, r2
 800789e:	687a      	ldr	r2, [r7, #4]
 80078a0:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80078a2:	00d2      	lsls	r2, r2, #3
 80078a4:	4906      	ldr	r1, [pc, #24]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80078a6:	4313      	orrs	r3, r2
 80078a8:	634b      	str	r3, [r1, #52]	; 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 80078aa:	4b05      	ldr	r3, [pc, #20]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80078ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80078ae:	4a04      	ldr	r2, [pc, #16]	; (80078c0 <HAL_RCC_OscConfig+0x8ac>)
 80078b0:	f043 0301 	orr.w	r3, r3, #1
 80078b4:	62d3      	str	r3, [r2, #44]	; 0x2c
        }
      }
    }
  }
  return HAL_OK;
 80078b6:	2300      	movs	r3, #0
}
 80078b8:	4618      	mov	r0, r3
 80078ba:	3730      	adds	r7, #48	; 0x30
 80078bc:	46bd      	mov	sp, r7
 80078be:	bd80      	pop	{r7, pc}
 80078c0:	58024400 	.word	0x58024400
 80078c4:	ffff0007 	.word	0xffff0007

080078c8 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80078c8:	b580      	push	{r7, lr}
 80078ca:	b086      	sub	sp, #24
 80078cc:	af00      	add	r7, sp, #0
 80078ce:	6078      	str	r0, [r7, #4]
 80078d0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	2b00      	cmp	r3, #0
 80078d6:	d101      	bne.n	80078dc <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80078d8:	2301      	movs	r3, #1
 80078da:	e19c      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80078dc:	4b8a      	ldr	r3, [pc, #552]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f003 030f 	and.w	r3, r3, #15
 80078e4:	683a      	ldr	r2, [r7, #0]
 80078e6:	429a      	cmp	r2, r3
 80078e8:	d910      	bls.n	800790c <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80078ea:	4b87      	ldr	r3, [pc, #540]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 80078ec:	681b      	ldr	r3, [r3, #0]
 80078ee:	f023 020f 	bic.w	r2, r3, #15
 80078f2:	4985      	ldr	r1, [pc, #532]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 80078f4:	683b      	ldr	r3, [r7, #0]
 80078f6:	4313      	orrs	r3, r2
 80078f8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80078fa:	4b83      	ldr	r3, [pc, #524]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	f003 030f 	and.w	r3, r3, #15
 8007902:	683a      	ldr	r2, [r7, #0]
 8007904:	429a      	cmp	r2, r3
 8007906:	d001      	beq.n	800790c <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8007908:	2301      	movs	r3, #1
 800790a:	e184      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	681b      	ldr	r3, [r3, #0]
 8007910:	f003 0304 	and.w	r3, r3, #4
 8007914:	2b00      	cmp	r3, #0
 8007916:	d010      	beq.n	800793a <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	691a      	ldr	r2, [r3, #16]
 800791c:	4b7b      	ldr	r3, [pc, #492]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 800791e:	699b      	ldr	r3, [r3, #24]
 8007920:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007924:	429a      	cmp	r2, r3
 8007926:	d908      	bls.n	800793a <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007928:	4b78      	ldr	r3, [pc, #480]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 800792a:	699b      	ldr	r3, [r3, #24]
 800792c:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	691b      	ldr	r3, [r3, #16]
 8007934:	4975      	ldr	r1, [pc, #468]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007936:	4313      	orrs	r3, r2
 8007938:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	681b      	ldr	r3, [r3, #0]
 800793e:	f003 0308 	and.w	r3, r3, #8
 8007942:	2b00      	cmp	r3, #0
 8007944:	d010      	beq.n	8007968 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	695a      	ldr	r2, [r3, #20]
 800794a:	4b70      	ldr	r3, [pc, #448]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 800794c:	69db      	ldr	r3, [r3, #28]
 800794e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007952:	429a      	cmp	r2, r3
 8007954:	d908      	bls.n	8007968 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007956:	4b6d      	ldr	r3, [pc, #436]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007958:	69db      	ldr	r3, [r3, #28]
 800795a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	695b      	ldr	r3, [r3, #20]
 8007962:	496a      	ldr	r1, [pc, #424]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007964:	4313      	orrs	r3, r2
 8007966:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	f003 0310 	and.w	r3, r3, #16
 8007970:	2b00      	cmp	r3, #0
 8007972:	d010      	beq.n	8007996 <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	699a      	ldr	r2, [r3, #24]
 8007978:	4b64      	ldr	r3, [pc, #400]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 800797a:	69db      	ldr	r3, [r3, #28]
 800797c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007980:	429a      	cmp	r2, r3
 8007982:	d908      	bls.n	8007996 <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8007984:	4b61      	ldr	r3, [pc, #388]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007986:	69db      	ldr	r3, [r3, #28]
 8007988:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	699b      	ldr	r3, [r3, #24]
 8007990:	495e      	ldr	r1, [pc, #376]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007992:	4313      	orrs	r3, r2
 8007994:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	f003 0320 	and.w	r3, r3, #32
 800799e:	2b00      	cmp	r3, #0
 80079a0:	d010      	beq.n	80079c4 <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	69da      	ldr	r2, [r3, #28]
 80079a6:	4b59      	ldr	r3, [pc, #356]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 80079a8:	6a1b      	ldr	r3, [r3, #32]
 80079aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80079ae:	429a      	cmp	r2, r3
 80079b0:	d908      	bls.n	80079c4 <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 80079b2:	4b56      	ldr	r3, [pc, #344]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 80079b4:	6a1b      	ldr	r3, [r3, #32]
 80079b6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80079ba:	687b      	ldr	r3, [r7, #4]
 80079bc:	69db      	ldr	r3, [r3, #28]
 80079be:	4953      	ldr	r1, [pc, #332]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 80079c0:	4313      	orrs	r3, r2
 80079c2:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	f003 0302 	and.w	r3, r3, #2
 80079cc:	2b00      	cmp	r3, #0
 80079ce:	d010      	beq.n	80079f2 <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	68da      	ldr	r2, [r3, #12]
 80079d4:	4b4d      	ldr	r3, [pc, #308]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 80079d6:	699b      	ldr	r3, [r3, #24]
 80079d8:	f003 030f 	and.w	r3, r3, #15
 80079dc:	429a      	cmp	r2, r3
 80079de:	d908      	bls.n	80079f2 <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80079e0:	4b4a      	ldr	r3, [pc, #296]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 80079e2:	699b      	ldr	r3, [r3, #24]
 80079e4:	f023 020f 	bic.w	r2, r3, #15
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	68db      	ldr	r3, [r3, #12]
 80079ec:	4947      	ldr	r1, [pc, #284]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 80079ee:	4313      	orrs	r3, r2
 80079f0:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	681b      	ldr	r3, [r3, #0]
 80079f6:	f003 0301 	and.w	r3, r3, #1
 80079fa:	2b00      	cmp	r3, #0
 80079fc:	d055      	beq.n	8007aaa <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 80079fe:	4b43      	ldr	r3, [pc, #268]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a00:	699b      	ldr	r3, [r3, #24]
 8007a02:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	689b      	ldr	r3, [r3, #8]
 8007a0a:	4940      	ldr	r1, [pc, #256]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a0c:	4313      	orrs	r3, r2
 8007a0e:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	685b      	ldr	r3, [r3, #4]
 8007a14:	2b02      	cmp	r3, #2
 8007a16:	d107      	bne.n	8007a28 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007a18:	4b3c      	ldr	r3, [pc, #240]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a1a:	681b      	ldr	r3, [r3, #0]
 8007a1c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007a20:	2b00      	cmp	r3, #0
 8007a22:	d121      	bne.n	8007a68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007a24:	2301      	movs	r3, #1
 8007a26:	e0f6      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	685b      	ldr	r3, [r3, #4]
 8007a2c:	2b03      	cmp	r3, #3
 8007a2e:	d107      	bne.n	8007a40 <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007a30:	4b36      	ldr	r3, [pc, #216]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007a38:	2b00      	cmp	r3, #0
 8007a3a:	d115      	bne.n	8007a68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007a3c:	2301      	movs	r3, #1
 8007a3e:	e0ea      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8007a40:	687b      	ldr	r3, [r7, #4]
 8007a42:	685b      	ldr	r3, [r3, #4]
 8007a44:	2b01      	cmp	r3, #1
 8007a46:	d107      	bne.n	8007a58 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007a48:	4b30      	ldr	r3, [pc, #192]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a4a:	681b      	ldr	r3, [r3, #0]
 8007a4c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a50:	2b00      	cmp	r3, #0
 8007a52:	d109      	bne.n	8007a68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007a54:	2301      	movs	r3, #1
 8007a56:	e0de      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007a58:	4b2c      	ldr	r3, [pc, #176]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	f003 0304 	and.w	r3, r3, #4
 8007a60:	2b00      	cmp	r3, #0
 8007a62:	d101      	bne.n	8007a68 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007a64:	2301      	movs	r3, #1
 8007a66:	e0d6      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007a68:	4b28      	ldr	r3, [pc, #160]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a6a:	691b      	ldr	r3, [r3, #16]
 8007a6c:	f023 0207 	bic.w	r2, r3, #7
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	685b      	ldr	r3, [r3, #4]
 8007a74:	4925      	ldr	r1, [pc, #148]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a76:	4313      	orrs	r3, r2
 8007a78:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007a7a:	f7fa fe0d 	bl	8002698 <HAL_GetTick>
 8007a7e:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007a80:	e00a      	b.n	8007a98 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007a82:	f7fa fe09 	bl	8002698 <HAL_GetTick>
 8007a86:	4602      	mov	r2, r0
 8007a88:	697b      	ldr	r3, [r7, #20]
 8007a8a:	1ad3      	subs	r3, r2, r3
 8007a8c:	f241 3288 	movw	r2, #5000	; 0x1388
 8007a90:	4293      	cmp	r3, r2
 8007a92:	d901      	bls.n	8007a98 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 8007a94:	2303      	movs	r3, #3
 8007a96:	e0be      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007a98:	4b1c      	ldr	r3, [pc, #112]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007a9a:	691b      	ldr	r3, [r3, #16]
 8007a9c:	f003 0238 	and.w	r2, r3, #56	; 0x38
 8007aa0:	687b      	ldr	r3, [r7, #4]
 8007aa2:	685b      	ldr	r3, [r3, #4]
 8007aa4:	00db      	lsls	r3, r3, #3
 8007aa6:	429a      	cmp	r2, r3
 8007aa8:	d1eb      	bne.n	8007a82 <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	681b      	ldr	r3, [r3, #0]
 8007aae:	f003 0302 	and.w	r3, r3, #2
 8007ab2:	2b00      	cmp	r3, #0
 8007ab4:	d010      	beq.n	8007ad8 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	68da      	ldr	r2, [r3, #12]
 8007aba:	4b14      	ldr	r3, [pc, #80]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007abc:	699b      	ldr	r3, [r3, #24]
 8007abe:	f003 030f 	and.w	r3, r3, #15
 8007ac2:	429a      	cmp	r2, r3
 8007ac4:	d208      	bcs.n	8007ad8 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007ac6:	4b11      	ldr	r3, [pc, #68]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007ac8:	699b      	ldr	r3, [r3, #24]
 8007aca:	f023 020f 	bic.w	r2, r3, #15
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	68db      	ldr	r3, [r3, #12]
 8007ad2:	490e      	ldr	r1, [pc, #56]	; (8007b0c <HAL_RCC_ClockConfig+0x244>)
 8007ad4:	4313      	orrs	r3, r2
 8007ad6:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007ad8:	4b0b      	ldr	r3, [pc, #44]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 8007ada:	681b      	ldr	r3, [r3, #0]
 8007adc:	f003 030f 	and.w	r3, r3, #15
 8007ae0:	683a      	ldr	r2, [r7, #0]
 8007ae2:	429a      	cmp	r2, r3
 8007ae4:	d214      	bcs.n	8007b10 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007ae6:	4b08      	ldr	r3, [pc, #32]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 8007ae8:	681b      	ldr	r3, [r3, #0]
 8007aea:	f023 020f 	bic.w	r2, r3, #15
 8007aee:	4906      	ldr	r1, [pc, #24]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 8007af0:	683b      	ldr	r3, [r7, #0]
 8007af2:	4313      	orrs	r3, r2
 8007af4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007af6:	4b04      	ldr	r3, [pc, #16]	; (8007b08 <HAL_RCC_ClockConfig+0x240>)
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	f003 030f 	and.w	r3, r3, #15
 8007afe:	683a      	ldr	r2, [r7, #0]
 8007b00:	429a      	cmp	r2, r3
 8007b02:	d005      	beq.n	8007b10 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 8007b04:	2301      	movs	r3, #1
 8007b06:	e086      	b.n	8007c16 <HAL_RCC_ClockConfig+0x34e>
 8007b08:	52002000 	.word	0x52002000
 8007b0c:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	681b      	ldr	r3, [r3, #0]
 8007b14:	f003 0304 	and.w	r3, r3, #4
 8007b18:	2b00      	cmp	r3, #0
 8007b1a:	d010      	beq.n	8007b3e <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	691a      	ldr	r2, [r3, #16]
 8007b20:	4b3f      	ldr	r3, [pc, #252]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b22:	699b      	ldr	r3, [r3, #24]
 8007b24:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007b28:	429a      	cmp	r2, r3
 8007b2a:	d208      	bcs.n	8007b3e <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007b2c:	4b3c      	ldr	r3, [pc, #240]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b2e:	699b      	ldr	r3, [r3, #24]
 8007b30:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	691b      	ldr	r3, [r3, #16]
 8007b38:	4939      	ldr	r1, [pc, #228]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b3a:	4313      	orrs	r3, r2
 8007b3c:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	681b      	ldr	r3, [r3, #0]
 8007b42:	f003 0308 	and.w	r3, r3, #8
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d010      	beq.n	8007b6c <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	695a      	ldr	r2, [r3, #20]
 8007b4e:	4b34      	ldr	r3, [pc, #208]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b50:	69db      	ldr	r3, [r3, #28]
 8007b52:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007b56:	429a      	cmp	r2, r3
 8007b58:	d208      	bcs.n	8007b6c <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007b5a:	4b31      	ldr	r3, [pc, #196]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b5c:	69db      	ldr	r3, [r3, #28]
 8007b5e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	695b      	ldr	r3, [r3, #20]
 8007b66:	492e      	ldr	r1, [pc, #184]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b68:	4313      	orrs	r3, r2
 8007b6a:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	f003 0310 	and.w	r3, r3, #16
 8007b74:	2b00      	cmp	r3, #0
 8007b76:	d010      	beq.n	8007b9a <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	699a      	ldr	r2, [r3, #24]
 8007b7c:	4b28      	ldr	r3, [pc, #160]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b7e:	69db      	ldr	r3, [r3, #28]
 8007b80:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007b84:	429a      	cmp	r2, r3
 8007b86:	d208      	bcs.n	8007b9a <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8007b88:	4b25      	ldr	r3, [pc, #148]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b8a:	69db      	ldr	r3, [r3, #28]
 8007b8c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	699b      	ldr	r3, [r3, #24]
 8007b94:	4922      	ldr	r1, [pc, #136]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007b96:	4313      	orrs	r3, r2
 8007b98:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	681b      	ldr	r3, [r3, #0]
 8007b9e:	f003 0320 	and.w	r3, r3, #32
 8007ba2:	2b00      	cmp	r3, #0
 8007ba4:	d010      	beq.n	8007bc8 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	69da      	ldr	r2, [r3, #28]
 8007baa:	4b1d      	ldr	r3, [pc, #116]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007bac:	6a1b      	ldr	r3, [r3, #32]
 8007bae:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007bb2:	429a      	cmp	r2, r3
 8007bb4:	d208      	bcs.n	8007bc8 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8007bb6:	4b1a      	ldr	r3, [pc, #104]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007bb8:	6a1b      	ldr	r3, [r3, #32]
 8007bba:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	69db      	ldr	r3, [r3, #28]
 8007bc2:	4917      	ldr	r1, [pc, #92]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007bc4:	4313      	orrs	r3, r2
 8007bc6:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8007bc8:	f000 f834 	bl	8007c34 <HAL_RCC_GetSysClockFreq>
 8007bcc:	4602      	mov	r2, r0
 8007bce:	4b14      	ldr	r3, [pc, #80]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007bd0:	699b      	ldr	r3, [r3, #24]
 8007bd2:	0a1b      	lsrs	r3, r3, #8
 8007bd4:	f003 030f 	and.w	r3, r3, #15
 8007bd8:	4912      	ldr	r1, [pc, #72]	; (8007c24 <HAL_RCC_ClockConfig+0x35c>)
 8007bda:	5ccb      	ldrb	r3, [r1, r3]
 8007bdc:	f003 031f 	and.w	r3, r3, #31
 8007be0:	fa22 f303 	lsr.w	r3, r2, r3
 8007be4:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007be6:	4b0e      	ldr	r3, [pc, #56]	; (8007c20 <HAL_RCC_ClockConfig+0x358>)
 8007be8:	699b      	ldr	r3, [r3, #24]
 8007bea:	f003 030f 	and.w	r3, r3, #15
 8007bee:	4a0d      	ldr	r2, [pc, #52]	; (8007c24 <HAL_RCC_ClockConfig+0x35c>)
 8007bf0:	5cd3      	ldrb	r3, [r2, r3]
 8007bf2:	f003 031f 	and.w	r3, r3, #31
 8007bf6:	693a      	ldr	r2, [r7, #16]
 8007bf8:	fa22 f303 	lsr.w	r3, r2, r3
 8007bfc:	4a0a      	ldr	r2, [pc, #40]	; (8007c28 <HAL_RCC_ClockConfig+0x360>)
 8007bfe:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007c00:	4a0a      	ldr	r2, [pc, #40]	; (8007c2c <HAL_RCC_ClockConfig+0x364>)
 8007c02:	693b      	ldr	r3, [r7, #16]
 8007c04:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 8007c06:	4b0a      	ldr	r3, [pc, #40]	; (8007c30 <HAL_RCC_ClockConfig+0x368>)
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	4618      	mov	r0, r3
 8007c0c:	f7fa fcfa 	bl	8002604 <HAL_InitTick>
 8007c10:	4603      	mov	r3, r0
 8007c12:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 8007c14:	7bfb      	ldrb	r3, [r7, #15]
}
 8007c16:	4618      	mov	r0, r3
 8007c18:	3718      	adds	r7, #24
 8007c1a:	46bd      	mov	sp, r7
 8007c1c:	bd80      	pop	{r7, pc}
 8007c1e:	bf00      	nop
 8007c20:	58024400 	.word	0x58024400
 8007c24:	08027f88 	.word	0x08027f88
 8007c28:	24000008 	.word	0x24000008
 8007c2c:	24000004 	.word	0x24000004
 8007c30:	24000010 	.word	0x24000010

08007c34 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8007c34:	b480      	push	{r7}
 8007c36:	b089      	sub	sp, #36	; 0x24
 8007c38:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007c3a:	4bb3      	ldr	r3, [pc, #716]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007c3c:	691b      	ldr	r3, [r3, #16]
 8007c3e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007c42:	2b18      	cmp	r3, #24
 8007c44:	f200 8155 	bhi.w	8007ef2 <HAL_RCC_GetSysClockFreq+0x2be>
 8007c48:	a201      	add	r2, pc, #4	; (adr r2, 8007c50 <HAL_RCC_GetSysClockFreq+0x1c>)
 8007c4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007c4e:	bf00      	nop
 8007c50:	08007cb5 	.word	0x08007cb5
 8007c54:	08007ef3 	.word	0x08007ef3
 8007c58:	08007ef3 	.word	0x08007ef3
 8007c5c:	08007ef3 	.word	0x08007ef3
 8007c60:	08007ef3 	.word	0x08007ef3
 8007c64:	08007ef3 	.word	0x08007ef3
 8007c68:	08007ef3 	.word	0x08007ef3
 8007c6c:	08007ef3 	.word	0x08007ef3
 8007c70:	08007cdb 	.word	0x08007cdb
 8007c74:	08007ef3 	.word	0x08007ef3
 8007c78:	08007ef3 	.word	0x08007ef3
 8007c7c:	08007ef3 	.word	0x08007ef3
 8007c80:	08007ef3 	.word	0x08007ef3
 8007c84:	08007ef3 	.word	0x08007ef3
 8007c88:	08007ef3 	.word	0x08007ef3
 8007c8c:	08007ef3 	.word	0x08007ef3
 8007c90:	08007ce1 	.word	0x08007ce1
 8007c94:	08007ef3 	.word	0x08007ef3
 8007c98:	08007ef3 	.word	0x08007ef3
 8007c9c:	08007ef3 	.word	0x08007ef3
 8007ca0:	08007ef3 	.word	0x08007ef3
 8007ca4:	08007ef3 	.word	0x08007ef3
 8007ca8:	08007ef3 	.word	0x08007ef3
 8007cac:	08007ef3 	.word	0x08007ef3
 8007cb0:	08007ce7 	.word	0x08007ce7
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8007cb4:	4b94      	ldr	r3, [pc, #592]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007cb6:	681b      	ldr	r3, [r3, #0]
 8007cb8:	f003 0320 	and.w	r3, r3, #32
 8007cbc:	2b00      	cmp	r3, #0
 8007cbe:	d009      	beq.n	8007cd4 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007cc0:	4b91      	ldr	r3, [pc, #580]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	08db      	lsrs	r3, r3, #3
 8007cc6:	f003 0303 	and.w	r3, r3, #3
 8007cca:	4a90      	ldr	r2, [pc, #576]	; (8007f0c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007ccc:	fa22 f303 	lsr.w	r3, r2, r3
 8007cd0:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 8007cd2:	e111      	b.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 8007cd4:	4b8d      	ldr	r3, [pc, #564]	; (8007f0c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007cd6:	61bb      	str	r3, [r7, #24]
      break;
 8007cd8:	e10e      	b.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8007cda:	4b8d      	ldr	r3, [pc, #564]	; (8007f10 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007cdc:	61bb      	str	r3, [r7, #24]
      break;
 8007cde:	e10b      	b.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 8007ce0:	4b8c      	ldr	r3, [pc, #560]	; (8007f14 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8007ce2:	61bb      	str	r3, [r7, #24]
      break;
 8007ce4:	e108      	b.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8007ce6:	4b88      	ldr	r3, [pc, #544]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ce8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007cea:	f003 0303 	and.w	r3, r3, #3
 8007cee:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8007cf0:	4b85      	ldr	r3, [pc, #532]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007cf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007cf4:	091b      	lsrs	r3, r3, #4
 8007cf6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8007cfa:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007cfc:	4b82      	ldr	r3, [pc, #520]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007cfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d00:	f003 0301 	and.w	r3, r3, #1
 8007d04:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8007d06:	4b80      	ldr	r3, [pc, #512]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d0a:	08db      	lsrs	r3, r3, #3
 8007d0c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007d10:	68fa      	ldr	r2, [r7, #12]
 8007d12:	fb02 f303 	mul.w	r3, r2, r3
 8007d16:	ee07 3a90 	vmov	s15, r3
 8007d1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007d1e:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 8007d22:	693b      	ldr	r3, [r7, #16]
 8007d24:	2b00      	cmp	r3, #0
 8007d26:	f000 80e1 	beq.w	8007eec <HAL_RCC_GetSysClockFreq+0x2b8>
 8007d2a:	697b      	ldr	r3, [r7, #20]
 8007d2c:	2b02      	cmp	r3, #2
 8007d2e:	f000 8083 	beq.w	8007e38 <HAL_RCC_GetSysClockFreq+0x204>
 8007d32:	697b      	ldr	r3, [r7, #20]
 8007d34:	2b02      	cmp	r3, #2
 8007d36:	f200 80a1 	bhi.w	8007e7c <HAL_RCC_GetSysClockFreq+0x248>
 8007d3a:	697b      	ldr	r3, [r7, #20]
 8007d3c:	2b00      	cmp	r3, #0
 8007d3e:	d003      	beq.n	8007d48 <HAL_RCC_GetSysClockFreq+0x114>
 8007d40:	697b      	ldr	r3, [r7, #20]
 8007d42:	2b01      	cmp	r3, #1
 8007d44:	d056      	beq.n	8007df4 <HAL_RCC_GetSysClockFreq+0x1c0>
 8007d46:	e099      	b.n	8007e7c <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8007d48:	4b6f      	ldr	r3, [pc, #444]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d4a:	681b      	ldr	r3, [r3, #0]
 8007d4c:	f003 0320 	and.w	r3, r3, #32
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d02d      	beq.n	8007db0 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007d54:	4b6c      	ldr	r3, [pc, #432]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d56:	681b      	ldr	r3, [r3, #0]
 8007d58:	08db      	lsrs	r3, r3, #3
 8007d5a:	f003 0303 	and.w	r3, r3, #3
 8007d5e:	4a6b      	ldr	r2, [pc, #428]	; (8007f0c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007d60:	fa22 f303 	lsr.w	r3, r2, r3
 8007d64:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007d66:	687b      	ldr	r3, [r7, #4]
 8007d68:	ee07 3a90 	vmov	s15, r3
 8007d6c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007d70:	693b      	ldr	r3, [r7, #16]
 8007d72:	ee07 3a90 	vmov	s15, r3
 8007d76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007d7a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007d7e:	4b62      	ldr	r3, [pc, #392]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007d80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007d82:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007d86:	ee07 3a90 	vmov	s15, r3
 8007d8a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007d8e:	ed97 6a02 	vldr	s12, [r7, #8]
 8007d92:	eddf 5a61 	vldr	s11, [pc, #388]	; 8007f18 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007d96:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007d9a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007d9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007da2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007da6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007daa:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8007dae:	e087      	b.n	8007ec0 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007db0:	693b      	ldr	r3, [r7, #16]
 8007db2:	ee07 3a90 	vmov	s15, r3
 8007db6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007dba:	eddf 6a58 	vldr	s13, [pc, #352]	; 8007f1c <HAL_RCC_GetSysClockFreq+0x2e8>
 8007dbe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007dc2:	4b51      	ldr	r3, [pc, #324]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007dc6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007dca:	ee07 3a90 	vmov	s15, r3
 8007dce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007dd2:	ed97 6a02 	vldr	s12, [r7, #8]
 8007dd6:	eddf 5a50 	vldr	s11, [pc, #320]	; 8007f18 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007dda:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007dde:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007de2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007de6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007dea:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007dee:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007df2:	e065      	b.n	8007ec0 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007df4:	693b      	ldr	r3, [r7, #16]
 8007df6:	ee07 3a90 	vmov	s15, r3
 8007dfa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007dfe:	eddf 6a48 	vldr	s13, [pc, #288]	; 8007f20 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007e02:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007e06:	4b40      	ldr	r3, [pc, #256]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007e0e:	ee07 3a90 	vmov	s15, r3
 8007e12:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007e16:	ed97 6a02 	vldr	s12, [r7, #8]
 8007e1a:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8007f18 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007e1e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007e22:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007e26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007e2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e2e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007e32:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007e36:	e043      	b.n	8007ec0 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007e38:	693b      	ldr	r3, [r7, #16]
 8007e3a:	ee07 3a90 	vmov	s15, r3
 8007e3e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007e42:	eddf 6a38 	vldr	s13, [pc, #224]	; 8007f24 <HAL_RCC_GetSysClockFreq+0x2f0>
 8007e46:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007e4a:	4b2f      	ldr	r3, [pc, #188]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007e4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e4e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007e52:	ee07 3a90 	vmov	s15, r3
 8007e56:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007e5a:	ed97 6a02 	vldr	s12, [r7, #8]
 8007e5e:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8007f18 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007e62:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007e66:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007e6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007e6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007e72:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007e76:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007e7a:	e021      	b.n	8007ec0 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007e7c:	693b      	ldr	r3, [r7, #16]
 8007e7e:	ee07 3a90 	vmov	s15, r3
 8007e82:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007e86:	eddf 6a26 	vldr	s13, [pc, #152]	; 8007f20 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007e8a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007e8e:	4b1e      	ldr	r3, [pc, #120]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007e90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007e92:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007e96:	ee07 3a90 	vmov	s15, r3
 8007e9a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007e9e:	ed97 6a02 	vldr	s12, [r7, #8]
 8007ea2:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8007f18 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007ea6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007eaa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007eae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007eb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007eb6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007eba:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007ebe:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8007ec0:	4b11      	ldr	r3, [pc, #68]	; (8007f08 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ec2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ec4:	0a5b      	lsrs	r3, r3, #9
 8007ec6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007eca:	3301      	adds	r3, #1
 8007ecc:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8007ece:	683b      	ldr	r3, [r7, #0]
 8007ed0:	ee07 3a90 	vmov	s15, r3
 8007ed4:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8007ed8:	edd7 6a07 	vldr	s13, [r7, #28]
 8007edc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007ee0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007ee4:	ee17 3a90 	vmov	r3, s15
 8007ee8:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8007eea:	e005      	b.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8007eec:	2300      	movs	r3, #0
 8007eee:	61bb      	str	r3, [r7, #24]
      break;
 8007ef0:	e002      	b.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8007ef2:	4b07      	ldr	r3, [pc, #28]	; (8007f10 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007ef4:	61bb      	str	r3, [r7, #24]
      break;
 8007ef6:	bf00      	nop
  }

  return sysclockfreq;
 8007ef8:	69bb      	ldr	r3, [r7, #24]
}
 8007efa:	4618      	mov	r0, r3
 8007efc:	3724      	adds	r7, #36	; 0x24
 8007efe:	46bd      	mov	sp, r7
 8007f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f04:	4770      	bx	lr
 8007f06:	bf00      	nop
 8007f08:	58024400 	.word	0x58024400
 8007f0c:	03d09000 	.word	0x03d09000
 8007f10:	003d0900 	.word	0x003d0900
 8007f14:	017d7840 	.word	0x017d7840
 8007f18:	46000000 	.word	0x46000000
 8007f1c:	4c742400 	.word	0x4c742400
 8007f20:	4a742400 	.word	0x4a742400
 8007f24:	4bbebc20 	.word	0x4bbebc20

08007f28 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007f28:	b580      	push	{r7, lr}
 8007f2a:	b082      	sub	sp, #8
 8007f2c:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007f2e:	f7ff fe81 	bl	8007c34 <HAL_RCC_GetSysClockFreq>
 8007f32:	4602      	mov	r2, r0
 8007f34:	4b10      	ldr	r3, [pc, #64]	; (8007f78 <HAL_RCC_GetHCLKFreq+0x50>)
 8007f36:	699b      	ldr	r3, [r3, #24]
 8007f38:	0a1b      	lsrs	r3, r3, #8
 8007f3a:	f003 030f 	and.w	r3, r3, #15
 8007f3e:	490f      	ldr	r1, [pc, #60]	; (8007f7c <HAL_RCC_GetHCLKFreq+0x54>)
 8007f40:	5ccb      	ldrb	r3, [r1, r3]
 8007f42:	f003 031f 	and.w	r3, r3, #31
 8007f46:	fa22 f303 	lsr.w	r3, r2, r3
 8007f4a:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007f4c:	4b0a      	ldr	r3, [pc, #40]	; (8007f78 <HAL_RCC_GetHCLKFreq+0x50>)
 8007f4e:	699b      	ldr	r3, [r3, #24]
 8007f50:	f003 030f 	and.w	r3, r3, #15
 8007f54:	4a09      	ldr	r2, [pc, #36]	; (8007f7c <HAL_RCC_GetHCLKFreq+0x54>)
 8007f56:	5cd3      	ldrb	r3, [r2, r3]
 8007f58:	f003 031f 	and.w	r3, r3, #31
 8007f5c:	687a      	ldr	r2, [r7, #4]
 8007f5e:	fa22 f303 	lsr.w	r3, r2, r3
 8007f62:	4a07      	ldr	r2, [pc, #28]	; (8007f80 <HAL_RCC_GetHCLKFreq+0x58>)
 8007f64:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007f66:	4a07      	ldr	r2, [pc, #28]	; (8007f84 <HAL_RCC_GetHCLKFreq+0x5c>)
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 8007f6c:	4b04      	ldr	r3, [pc, #16]	; (8007f80 <HAL_RCC_GetHCLKFreq+0x58>)
 8007f6e:	681b      	ldr	r3, [r3, #0]
}
 8007f70:	4618      	mov	r0, r3
 8007f72:	3708      	adds	r7, #8
 8007f74:	46bd      	mov	sp, r7
 8007f76:	bd80      	pop	{r7, pc}
 8007f78:	58024400 	.word	0x58024400
 8007f7c:	08027f88 	.word	0x08027f88
 8007f80:	24000008 	.word	0x24000008
 8007f84:	24000004 	.word	0x24000004

08007f88 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007f88:	b580      	push	{r7, lr}
 8007f8a:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8007f8c:	f7ff ffcc 	bl	8007f28 <HAL_RCC_GetHCLKFreq>
 8007f90:	4602      	mov	r2, r0
 8007f92:	4b06      	ldr	r3, [pc, #24]	; (8007fac <HAL_RCC_GetPCLK1Freq+0x24>)
 8007f94:	69db      	ldr	r3, [r3, #28]
 8007f96:	091b      	lsrs	r3, r3, #4
 8007f98:	f003 0307 	and.w	r3, r3, #7
 8007f9c:	4904      	ldr	r1, [pc, #16]	; (8007fb0 <HAL_RCC_GetPCLK1Freq+0x28>)
 8007f9e:	5ccb      	ldrb	r3, [r1, r3]
 8007fa0:	f003 031f 	and.w	r3, r3, #31
 8007fa4:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8007fa8:	4618      	mov	r0, r3
 8007faa:	bd80      	pop	{r7, pc}
 8007fac:	58024400 	.word	0x58024400
 8007fb0:	08027f88 	.word	0x08027f88

08007fb4 <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8007fb4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007fb8:	b0ca      	sub	sp, #296	; 0x128
 8007fba:	af00      	add	r7, sp, #0
 8007fbc:	f8c7 0114 	str.w	r0, [r7, #276]	; 0x114
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007fc0:	2300      	movs	r3, #0
 8007fc2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8007fc6:	2300      	movs	r3, #0
 8007fc8:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007fcc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8007fd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fd4:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 8007fd8:	2500      	movs	r5, #0
 8007fda:	ea54 0305 	orrs.w	r3, r4, r5
 8007fde:	d049      	beq.n	8008074 <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 8007fe0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8007fe4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007fe6:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007fea:	d02f      	beq.n	800804c <HAL_RCCEx_PeriphCLKConfig+0x98>
 8007fec:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007ff0:	d828      	bhi.n	8008044 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007ff2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007ff6:	d01a      	beq.n	800802e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8007ff8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007ffc:	d822      	bhi.n	8008044 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007ffe:	2b00      	cmp	r3, #0
 8008000:	d003      	beq.n	800800a <HAL_RCCEx_PeriphCLKConfig+0x56>
 8008002:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008006:	d007      	beq.n	8008018 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008008:	e01c      	b.n	8008044 <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800800a:	4bb8      	ldr	r3, [pc, #736]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800800c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800800e:	4ab7      	ldr	r2, [pc, #732]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008010:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008014:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8008016:	e01a      	b.n	800804e <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008018:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800801c:	3308      	adds	r3, #8
 800801e:	2102      	movs	r1, #2
 8008020:	4618      	mov	r0, r3
 8008022:	f002 fb61 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008026:	4603      	mov	r3, r0
 8008028:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 800802c:	e00f      	b.n	800804e <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800802e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008032:	3328      	adds	r3, #40	; 0x28
 8008034:	2102      	movs	r1, #2
 8008036:	4618      	mov	r0, r3
 8008038:	f002 fc08 	bl	800a84c <RCCEx_PLL3_Config>
 800803c:	4603      	mov	r3, r0
 800803e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8008042:	e004      	b.n	800804e <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008044:	2301      	movs	r3, #1
 8008046:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800804a:	e000      	b.n	800804e <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 800804c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800804e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008052:	2b00      	cmp	r3, #0
 8008054:	d10a      	bne.n	800806c <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8008056:	4ba5      	ldr	r3, [pc, #660]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008058:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800805a:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 800805e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008062:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008064:	4aa1      	ldr	r2, [pc, #644]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008066:	430b      	orrs	r3, r1
 8008068:	6513      	str	r3, [r2, #80]	; 0x50
 800806a:	e003      	b.n	8008074 <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800806c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008070:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8008074:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008078:	e9d3 2300 	ldrd	r2, r3, [r3]
 800807c:	f402 7880 	and.w	r8, r2, #256	; 0x100
 8008080:	f04f 0900 	mov.w	r9, #0
 8008084:	ea58 0309 	orrs.w	r3, r8, r9
 8008088:	d047      	beq.n	800811a <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 800808a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800808e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008090:	2b04      	cmp	r3, #4
 8008092:	d82a      	bhi.n	80080ea <HAL_RCCEx_PeriphCLKConfig+0x136>
 8008094:	a201      	add	r2, pc, #4	; (adr r2, 800809c <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8008096:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800809a:	bf00      	nop
 800809c:	080080b1 	.word	0x080080b1
 80080a0:	080080bf 	.word	0x080080bf
 80080a4:	080080d5 	.word	0x080080d5
 80080a8:	080080f3 	.word	0x080080f3
 80080ac:	080080f3 	.word	0x080080f3
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80080b0:	4b8e      	ldr	r3, [pc, #568]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80080b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80080b4:	4a8d      	ldr	r2, [pc, #564]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80080b6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80080ba:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80080bc:	e01a      	b.n	80080f4 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80080be:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80080c2:	3308      	adds	r3, #8
 80080c4:	2100      	movs	r1, #0
 80080c6:	4618      	mov	r0, r3
 80080c8:	f002 fb0e 	bl	800a6e8 <RCCEx_PLL2_Config>
 80080cc:	4603      	mov	r3, r0
 80080ce:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80080d2:	e00f      	b.n	80080f4 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 80080d4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80080d8:	3328      	adds	r3, #40	; 0x28
 80080da:	2100      	movs	r1, #0
 80080dc:	4618      	mov	r0, r3
 80080de:	f002 fbb5 	bl	800a84c <RCCEx_PLL3_Config>
 80080e2:	4603      	mov	r3, r0
 80080e4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80080e8:	e004      	b.n	80080f4 <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80080ea:	2301      	movs	r3, #1
 80080ec:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80080f0:	e000      	b.n	80080f4 <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 80080f2:	bf00      	nop
    }

    if (ret == HAL_OK)
 80080f4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80080f8:	2b00      	cmp	r3, #0
 80080fa:	d10a      	bne.n	8008112 <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80080fc:	4b7b      	ldr	r3, [pc, #492]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80080fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008100:	f023 0107 	bic.w	r1, r3, #7
 8008104:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008108:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800810a:	4a78      	ldr	r2, [pc, #480]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800810c:	430b      	orrs	r3, r1
 800810e:	6513      	str	r3, [r2, #80]	; 0x50
 8008110:	e003      	b.n	800811a <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008112:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008116:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

#if defined(SAI3)
  /*---------------------------- SAI2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
 800811a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800811e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008122:	f402 7a00 	and.w	sl, r2, #512	; 0x200
 8008126:	f04f 0b00 	mov.w	fp, #0
 800812a:	ea5a 030b 	orrs.w	r3, sl, fp
 800812e:	d04c      	beq.n	80081ca <HAL_RCCEx_PeriphCLKConfig+0x216>
  {
    switch (PeriphClkInit->Sai23ClockSelection)
 8008130:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008134:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008136:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800813a:	d030      	beq.n	800819e <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 800813c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008140:	d829      	bhi.n	8008196 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8008142:	2bc0      	cmp	r3, #192	; 0xc0
 8008144:	d02d      	beq.n	80081a2 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8008146:	2bc0      	cmp	r3, #192	; 0xc0
 8008148:	d825      	bhi.n	8008196 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800814a:	2b80      	cmp	r3, #128	; 0x80
 800814c:	d018      	beq.n	8008180 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800814e:	2b80      	cmp	r3, #128	; 0x80
 8008150:	d821      	bhi.n	8008196 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8008152:	2b00      	cmp	r3, #0
 8008154:	d002      	beq.n	800815c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8008156:	2b40      	cmp	r3, #64	; 0x40
 8008158:	d007      	beq.n	800816a <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 800815a:	e01c      	b.n	8008196 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
    {
      case RCC_SAI23CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2/3 */
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800815c:	4b63      	ldr	r3, [pc, #396]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800815e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008160:	4a62      	ldr	r2, [pc, #392]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008162:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008166:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI2/3 clock source configuration done later after clock selection check */
        break;
 8008168:	e01c      	b.n	80081a4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>

      case RCC_SAI23CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2/3 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800816a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800816e:	3308      	adds	r3, #8
 8008170:	2100      	movs	r1, #0
 8008172:	4618      	mov	r0, r3
 8008174:	f002 fab8 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008178:	4603      	mov	r3, r0
 800817a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2/3 clock source configuration done later after clock selection check */
        break;
 800817e:	e011      	b.n	80081a4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>

      case RCC_SAI23CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008180:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008184:	3328      	adds	r3, #40	; 0x28
 8008186:	2100      	movs	r1, #0
 8008188:	4618      	mov	r0, r3
 800818a:	f002 fb5f 	bl	800a84c <RCCEx_PLL3_Config>
 800818e:	4603      	mov	r3, r0
 8008190:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2/3 clock source configuration done later after clock selection check */
        break;
 8008194:	e006      	b.n	80081a4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
        /* HSI, HSE, or CSI oscillator is used as source of SAI2/3 clock */
        /* SAI2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008196:	2301      	movs	r3, #1
 8008198:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800819c:	e002      	b.n	80081a4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
        break;
 800819e:	bf00      	nop
 80081a0:	e000      	b.n	80081a4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
        break;
 80081a2:	bf00      	nop
    }

    if (ret == HAL_OK)
 80081a4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80081a8:	2b00      	cmp	r3, #0
 80081aa:	d10a      	bne.n	80081c2 <HAL_RCCEx_PeriphCLKConfig+0x20e>
    {
      /* Set the source of SAI2/3 clock*/
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
 80081ac:	4b4f      	ldr	r3, [pc, #316]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80081ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80081b0:	f423 71e0 	bic.w	r1, r3, #448	; 0x1c0
 80081b4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80081b8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80081ba:	4a4c      	ldr	r2, [pc, #304]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80081bc:	430b      	orrs	r3, r1
 80081be:	6513      	str	r3, [r2, #80]	; 0x50
 80081c0:	e003      	b.n	80081ca <HAL_RCCEx_PeriphCLKConfig+0x216>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80081c2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80081c6:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 80081ca:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80081ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081d2:	f402 6380 	and.w	r3, r2, #1024	; 0x400
 80081d6:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 80081da:	2300      	movs	r3, #0
 80081dc:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 80081e0:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	; 0x108
 80081e4:	460b      	mov	r3, r1
 80081e6:	4313      	orrs	r3, r2
 80081e8:	d053      	beq.n	8008292 <HAL_RCCEx_PeriphCLKConfig+0x2de>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 80081ea:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80081ee:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80081f2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80081f6:	d035      	beq.n	8008264 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 80081f8:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80081fc:	d82e      	bhi.n	800825c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 80081fe:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8008202:	d031      	beq.n	8008268 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 8008204:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8008208:	d828      	bhi.n	800825c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800820a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800820e:	d01a      	beq.n	8008246 <HAL_RCCEx_PeriphCLKConfig+0x292>
 8008210:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008214:	d822      	bhi.n	800825c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8008216:	2b00      	cmp	r3, #0
 8008218:	d003      	beq.n	8008222 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 800821a:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800821e:	d007      	beq.n	8008230 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8008220:	e01c      	b.n	800825c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008222:	4b32      	ldr	r3, [pc, #200]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008226:	4a31      	ldr	r2, [pc, #196]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008228:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800822c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 800822e:	e01c      	b.n	800826a <HAL_RCCEx_PeriphCLKConfig+0x2b6>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008230:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008234:	3308      	adds	r3, #8
 8008236:	2100      	movs	r1, #0
 8008238:	4618      	mov	r0, r3
 800823a:	f002 fa55 	bl	800a6e8 <RCCEx_PLL2_Config>
 800823e:	4603      	mov	r3, r0
 8008240:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8008244:	e011      	b.n	800826a <HAL_RCCEx_PeriphCLKConfig+0x2b6>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008246:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800824a:	3328      	adds	r3, #40	; 0x28
 800824c:	2100      	movs	r1, #0
 800824e:	4618      	mov	r0, r3
 8008250:	f002 fafc 	bl	800a84c <RCCEx_PLL3_Config>
 8008254:	4603      	mov	r3, r0
 8008256:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 800825a:	e006      	b.n	800826a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 800825c:	2301      	movs	r3, #1
 800825e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008262:	e002      	b.n	800826a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
        break;
 8008264:	bf00      	nop
 8008266:	e000      	b.n	800826a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
        break;
 8008268:	bf00      	nop
    }

    if (ret == HAL_OK)
 800826a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800826e:	2b00      	cmp	r3, #0
 8008270:	d10b      	bne.n	800828a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8008272:	4b1e      	ldr	r3, [pc, #120]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008274:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008276:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 800827a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800827e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008282:	4a1a      	ldr	r2, [pc, #104]	; (80082ec <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8008284:	430b      	orrs	r3, r1
 8008286:	6593      	str	r3, [r2, #88]	; 0x58
 8008288:	e003      	b.n	8008292 <HAL_RCCEx_PeriphCLKConfig+0x2de>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800828a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800828e:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8008292:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008296:	e9d3 2300 	ldrd	r2, r3, [r3]
 800829a:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 800829e:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 80082a2:	2300      	movs	r3, #0
 80082a4:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 80082a8:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	; 0x100
 80082ac:	460b      	mov	r3, r1
 80082ae:	4313      	orrs	r3, r2
 80082b0:	d056      	beq.n	8008360 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 80082b2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80082b6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80082ba:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80082be:	d038      	beq.n	8008332 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 80082c0:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80082c4:	d831      	bhi.n	800832a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80082c6:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80082ca:	d034      	beq.n	8008336 <HAL_RCCEx_PeriphCLKConfig+0x382>
 80082cc:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80082d0:	d82b      	bhi.n	800832a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80082d2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80082d6:	d01d      	beq.n	8008314 <HAL_RCCEx_PeriphCLKConfig+0x360>
 80082d8:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80082dc:	d825      	bhi.n	800832a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80082de:	2b00      	cmp	r3, #0
 80082e0:	d006      	beq.n	80082f0 <HAL_RCCEx_PeriphCLKConfig+0x33c>
 80082e2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80082e6:	d00a      	beq.n	80082fe <HAL_RCCEx_PeriphCLKConfig+0x34a>
 80082e8:	e01f      	b.n	800832a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80082ea:	bf00      	nop
 80082ec:	58024400 	.word	0x58024400
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80082f0:	4ba2      	ldr	r3, [pc, #648]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80082f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082f4:	4aa1      	ldr	r2, [pc, #644]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80082f6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80082fa:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 80082fc:	e01c      	b.n	8008338 <HAL_RCCEx_PeriphCLKConfig+0x384>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80082fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008302:	3308      	adds	r3, #8
 8008304:	2100      	movs	r1, #0
 8008306:	4618      	mov	r0, r3
 8008308:	f002 f9ee 	bl	800a6e8 <RCCEx_PLL2_Config>
 800830c:	4603      	mov	r3, r0
 800830e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8008312:	e011      	b.n	8008338 <HAL_RCCEx_PeriphCLKConfig+0x384>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008314:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008318:	3328      	adds	r3, #40	; 0x28
 800831a:	2100      	movs	r1, #0
 800831c:	4618      	mov	r0, r3
 800831e:	f002 fa95 	bl	800a84c <RCCEx_PLL3_Config>
 8008322:	4603      	mov	r3, r0
 8008324:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8008328:	e006      	b.n	8008338 <HAL_RCCEx_PeriphCLKConfig+0x384>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 800832a:	2301      	movs	r3, #1
 800832c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008330:	e002      	b.n	8008338 <HAL_RCCEx_PeriphCLKConfig+0x384>
        break;
 8008332:	bf00      	nop
 8008334:	e000      	b.n	8008338 <HAL_RCCEx_PeriphCLKConfig+0x384>
        break;
 8008336:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008338:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800833c:	2b00      	cmp	r3, #0
 800833e:	d10b      	bne.n	8008358 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8008340:	4b8e      	ldr	r3, [pc, #568]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008342:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008344:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 8008348:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800834c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8008350:	4a8a      	ldr	r2, [pc, #552]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008352:	430b      	orrs	r3, r1
 8008354:	6593      	str	r3, [r2, #88]	; 0x58
 8008356:	e003      	b.n	8008360 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008358:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800835c:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
  }
#endif  /*SAI4*/

#if defined(QUADSPI)
  /*---------------------------- QSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
 8008360:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008364:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008368:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 800836c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8008370:	2300      	movs	r3, #0
 8008372:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8008376:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 800837a:	460b      	mov	r3, r1
 800837c:	4313      	orrs	r3, r2
 800837e:	d03a      	beq.n	80083f6 <HAL_RCCEx_PeriphCLKConfig+0x442>
  {
    switch (PeriphClkInit->QspiClockSelection)
 8008380:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008384:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008386:	2b30      	cmp	r3, #48	; 0x30
 8008388:	d01f      	beq.n	80083ca <HAL_RCCEx_PeriphCLKConfig+0x416>
 800838a:	2b30      	cmp	r3, #48	; 0x30
 800838c:	d819      	bhi.n	80083c2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 800838e:	2b20      	cmp	r3, #32
 8008390:	d00c      	beq.n	80083ac <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 8008392:	2b20      	cmp	r3, #32
 8008394:	d815      	bhi.n	80083c2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 8008396:	2b00      	cmp	r3, #0
 8008398:	d019      	beq.n	80083ce <HAL_RCCEx_PeriphCLKConfig+0x41a>
 800839a:	2b10      	cmp	r3, #16
 800839c:	d111      	bne.n	80083c2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
    {
      case RCC_QSPICLKSOURCE_PLL:      /* PLL is used as clock source for QSPI*/
        /* Enable QSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800839e:	4b77      	ldr	r3, [pc, #476]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80083a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083a2:	4a76      	ldr	r2, [pc, #472]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80083a4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80083a8:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* QSPI clock source configuration done later after clock selection check */
        break;
 80083aa:	e011      	b.n	80083d0 <HAL_RCCEx_PeriphCLKConfig+0x41c>

      case RCC_QSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for QSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80083ac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80083b0:	3308      	adds	r3, #8
 80083b2:	2102      	movs	r1, #2
 80083b4:	4618      	mov	r0, r3
 80083b6:	f002 f997 	bl	800a6e8 <RCCEx_PLL2_Config>
 80083ba:	4603      	mov	r3, r0
 80083bc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* QSPI clock source configuration done later after clock selection check */
        break;
 80083c0:	e006      	b.n	80083d0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
      case RCC_QSPICLKSOURCE_D1HCLK:
        /* Domain1 HCLK  clock selected as QSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 80083c2:	2301      	movs	r3, #1
 80083c4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80083c8:	e002      	b.n	80083d0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
        break;
 80083ca:	bf00      	nop
 80083cc:	e000      	b.n	80083d0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
        break;
 80083ce:	bf00      	nop
    }

    if (ret == HAL_OK)
 80083d0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80083d4:	2b00      	cmp	r3, #0
 80083d6:	d10a      	bne.n	80083ee <HAL_RCCEx_PeriphCLKConfig+0x43a>
    {
      /* Set the source of QSPI clock*/
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
 80083d8:	4b68      	ldr	r3, [pc, #416]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80083da:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083dc:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 80083e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80083e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80083e6:	4a65      	ldr	r2, [pc, #404]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80083e8:	430b      	orrs	r3, r1
 80083ea:	64d3      	str	r3, [r2, #76]	; 0x4c
 80083ec:	e003      	b.n	80083f6 <HAL_RCCEx_PeriphCLKConfig+0x442>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80083ee:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80083f2:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 80083f6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80083fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80083fe:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 8008402:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8008406:	2300      	movs	r3, #0
 8008408:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800840c:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 8008410:	460b      	mov	r3, r1
 8008412:	4313      	orrs	r3, r2
 8008414:	d051      	beq.n	80084ba <HAL_RCCEx_PeriphCLKConfig+0x506>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 8008416:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800841a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800841c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008420:	d035      	beq.n	800848e <HAL_RCCEx_PeriphCLKConfig+0x4da>
 8008422:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008426:	d82e      	bhi.n	8008486 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8008428:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800842c:	d031      	beq.n	8008492 <HAL_RCCEx_PeriphCLKConfig+0x4de>
 800842e:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008432:	d828      	bhi.n	8008486 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8008434:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008438:	d01a      	beq.n	8008470 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 800843a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800843e:	d822      	bhi.n	8008486 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8008440:	2b00      	cmp	r3, #0
 8008442:	d003      	beq.n	800844c <HAL_RCCEx_PeriphCLKConfig+0x498>
 8008444:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008448:	d007      	beq.n	800845a <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 800844a:	e01c      	b.n	8008486 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800844c:	4b4b      	ldr	r3, [pc, #300]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800844e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008450:	4a4a      	ldr	r2, [pc, #296]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008452:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008456:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008458:	e01c      	b.n	8008494 <HAL_RCCEx_PeriphCLKConfig+0x4e0>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800845a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800845e:	3308      	adds	r3, #8
 8008460:	2100      	movs	r1, #0
 8008462:	4618      	mov	r0, r3
 8008464:	f002 f940 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008468:	4603      	mov	r3, r0
 800846a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 800846e:	e011      	b.n	8008494 <HAL_RCCEx_PeriphCLKConfig+0x4e0>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008470:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008474:	3328      	adds	r3, #40	; 0x28
 8008476:	2100      	movs	r1, #0
 8008478:	4618      	mov	r0, r3
 800847a:	f002 f9e7 	bl	800a84c <RCCEx_PLL3_Config>
 800847e:	4603      	mov	r3, r0
 8008480:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008484:	e006      	b.n	8008494 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008486:	2301      	movs	r3, #1
 8008488:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800848c:	e002      	b.n	8008494 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
        break;
 800848e:	bf00      	nop
 8008490:	e000      	b.n	8008494 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
        break;
 8008492:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008494:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008498:	2b00      	cmp	r3, #0
 800849a:	d10a      	bne.n	80084b2 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 800849c:	4b37      	ldr	r3, [pc, #220]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800849e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80084a0:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 80084a4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80084a8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80084aa:	4a34      	ldr	r2, [pc, #208]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80084ac:	430b      	orrs	r3, r1
 80084ae:	6513      	str	r3, [r2, #80]	; 0x50
 80084b0:	e003      	b.n	80084ba <HAL_RCCEx_PeriphCLKConfig+0x506>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80084b2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80084b6:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 80084ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80084be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084c2:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 80084c6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80084ca:	2300      	movs	r3, #0
 80084cc:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80084d0:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 80084d4:	460b      	mov	r3, r1
 80084d6:	4313      	orrs	r3, r2
 80084d8:	d056      	beq.n	8008588 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 80084da:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80084de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80084e0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80084e4:	d033      	beq.n	800854e <HAL_RCCEx_PeriphCLKConfig+0x59a>
 80084e6:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80084ea:	d82c      	bhi.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x592>
 80084ec:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80084f0:	d02f      	beq.n	8008552 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 80084f2:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80084f6:	d826      	bhi.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x592>
 80084f8:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80084fc:	d02b      	beq.n	8008556 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 80084fe:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8008502:	d820      	bhi.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8008504:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008508:	d012      	beq.n	8008530 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 800850a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800850e:	d81a      	bhi.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8008510:	2b00      	cmp	r3, #0
 8008512:	d022      	beq.n	800855a <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8008514:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008518:	d115      	bne.n	8008546 <HAL_RCCEx_PeriphCLKConfig+0x592>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800851a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800851e:	3308      	adds	r3, #8
 8008520:	2101      	movs	r1, #1
 8008522:	4618      	mov	r0, r3
 8008524:	f002 f8e0 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008528:	4603      	mov	r3, r0
 800852a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 800852e:	e015      	b.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008530:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008534:	3328      	adds	r3, #40	; 0x28
 8008536:	2101      	movs	r1, #1
 8008538:	4618      	mov	r0, r3
 800853a:	f002 f987 	bl	800a84c <RCCEx_PLL3_Config>
 800853e:	4603      	mov	r3, r0
 8008540:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8008544:	e00a      	b.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008546:	2301      	movs	r3, #1
 8008548:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800854c:	e006      	b.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 800854e:	bf00      	nop
 8008550:	e004      	b.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 8008552:	bf00      	nop
 8008554:	e002      	b.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 8008556:	bf00      	nop
 8008558:	e000      	b.n	800855c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
        break;
 800855a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800855c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008560:	2b00      	cmp	r3, #0
 8008562:	d10d      	bne.n	8008580 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8008564:	4b05      	ldr	r3, [pc, #20]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008566:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008568:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 800856c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008570:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008572:	4a02      	ldr	r2, [pc, #8]	; (800857c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008574:	430b      	orrs	r3, r1
 8008576:	6513      	str	r3, [r2, #80]	; 0x50
 8008578:	e006      	b.n	8008588 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800857a:	bf00      	nop
 800857c:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008580:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008584:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8008588:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800858c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008590:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 8008594:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8008598:	2300      	movs	r3, #0
 800859a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800859e:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 80085a2:	460b      	mov	r3, r1
 80085a4:	4313      	orrs	r3, r2
 80085a6:	d055      	beq.n	8008654 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 80085a8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80085ac:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80085b0:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80085b4:	d033      	beq.n	800861e <HAL_RCCEx_PeriphCLKConfig+0x66a>
 80085b6:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80085ba:	d82c      	bhi.n	8008616 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80085bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80085c0:	d02f      	beq.n	8008622 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 80085c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80085c6:	d826      	bhi.n	8008616 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80085c8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80085cc:	d02b      	beq.n	8008626 <HAL_RCCEx_PeriphCLKConfig+0x672>
 80085ce:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80085d2:	d820      	bhi.n	8008616 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80085d4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80085d8:	d012      	beq.n	8008600 <HAL_RCCEx_PeriphCLKConfig+0x64c>
 80085da:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80085de:	d81a      	bhi.n	8008616 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80085e0:	2b00      	cmp	r3, #0
 80085e2:	d022      	beq.n	800862a <HAL_RCCEx_PeriphCLKConfig+0x676>
 80085e4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80085e8:	d115      	bne.n	8008616 <HAL_RCCEx_PeriphCLKConfig+0x662>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80085ea:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80085ee:	3308      	adds	r3, #8
 80085f0:	2101      	movs	r1, #1
 80085f2:	4618      	mov	r0, r3
 80085f4:	f002 f878 	bl	800a6e8 <RCCEx_PLL2_Config>
 80085f8:	4603      	mov	r3, r0
 80085fa:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80085fe:	e015      	b.n	800862c <HAL_RCCEx_PeriphCLKConfig+0x678>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008600:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008604:	3328      	adds	r3, #40	; 0x28
 8008606:	2101      	movs	r1, #1
 8008608:	4618      	mov	r0, r3
 800860a:	f002 f91f 	bl	800a84c <RCCEx_PLL3_Config>
 800860e:	4603      	mov	r3, r0
 8008610:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 8008614:	e00a      	b.n	800862c <HAL_RCCEx_PeriphCLKConfig+0x678>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 8008616:	2301      	movs	r3, #1
 8008618:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800861c:	e006      	b.n	800862c <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 800861e:	bf00      	nop
 8008620:	e004      	b.n	800862c <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 8008622:	bf00      	nop
 8008624:	e002      	b.n	800862c <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 8008626:	bf00      	nop
 8008628:	e000      	b.n	800862c <HAL_RCCEx_PeriphCLKConfig+0x678>
        break;
 800862a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800862c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008630:	2b00      	cmp	r3, #0
 8008632:	d10b      	bne.n	800864c <HAL_RCCEx_PeriphCLKConfig+0x698>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8008634:	4ba3      	ldr	r3, [pc, #652]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008636:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008638:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 800863c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008640:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8008644:	4a9f      	ldr	r2, [pc, #636]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008646:	430b      	orrs	r3, r1
 8008648:	6593      	str	r3, [r2, #88]	; 0x58
 800864a:	e003      	b.n	8008654 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800864c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008650:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8008654:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008658:	e9d3 2300 	ldrd	r2, r3, [r3]
 800865c:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 8008660:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8008664:	2300      	movs	r3, #0
 8008666:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800866a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800866e:	460b      	mov	r3, r1
 8008670:	4313      	orrs	r3, r2
 8008672:	d037      	beq.n	80086e4 <HAL_RCCEx_PeriphCLKConfig+0x730>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 8008674:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008678:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800867a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800867e:	d00e      	beq.n	800869e <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 8008680:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008684:	d816      	bhi.n	80086b4 <HAL_RCCEx_PeriphCLKConfig+0x700>
 8008686:	2b00      	cmp	r3, #0
 8008688:	d018      	beq.n	80086bc <HAL_RCCEx_PeriphCLKConfig+0x708>
 800868a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800868e:	d111      	bne.n	80086b4 <HAL_RCCEx_PeriphCLKConfig+0x700>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008690:	4b8c      	ldr	r3, [pc, #560]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008694:	4a8b      	ldr	r2, [pc, #556]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008696:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800869a:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 800869c:	e00f      	b.n	80086be <HAL_RCCEx_PeriphCLKConfig+0x70a>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800869e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80086a2:	3308      	adds	r3, #8
 80086a4:	2101      	movs	r1, #1
 80086a6:	4618      	mov	r0, r3
 80086a8:	f002 f81e 	bl	800a6e8 <RCCEx_PLL2_Config>
 80086ac:	4603      	mov	r3, r0
 80086ae:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 80086b2:	e004      	b.n	80086be <HAL_RCCEx_PeriphCLKConfig+0x70a>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80086b4:	2301      	movs	r3, #1
 80086b6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80086ba:	e000      	b.n	80086be <HAL_RCCEx_PeriphCLKConfig+0x70a>
        break;
 80086bc:	bf00      	nop
    }

    if (ret == HAL_OK)
 80086be:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80086c2:	2b00      	cmp	r3, #0
 80086c4:	d10a      	bne.n	80086dc <HAL_RCCEx_PeriphCLKConfig+0x728>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 80086c6:	4b7f      	ldr	r3, [pc, #508]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80086c8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80086ca:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 80086ce:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80086d2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80086d4:	4a7b      	ldr	r2, [pc, #492]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80086d6:	430b      	orrs	r3, r1
 80086d8:	6513      	str	r3, [r2, #80]	; 0x50
 80086da:	e003      	b.n	80086e4 <HAL_RCCEx_PeriphCLKConfig+0x730>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80086dc:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80086e0:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 80086e4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80086e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086ec:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 80086f0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80086f4:	2300      	movs	r3, #0
 80086f6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80086fa:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 80086fe:	460b      	mov	r3, r1
 8008700:	4313      	orrs	r3, r2
 8008702:	d039      	beq.n	8008778 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
  {
    switch (PeriphClkInit->FmcClockSelection)
 8008704:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008708:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800870a:	2b03      	cmp	r3, #3
 800870c:	d81c      	bhi.n	8008748 <HAL_RCCEx_PeriphCLKConfig+0x794>
 800870e:	a201      	add	r2, pc, #4	; (adr r2, 8008714 <HAL_RCCEx_PeriphCLKConfig+0x760>)
 8008710:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008714:	08008751 	.word	0x08008751
 8008718:	08008725 	.word	0x08008725
 800871c:	08008733 	.word	0x08008733
 8008720:	08008751 	.word	0x08008751
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008724:	4b67      	ldr	r3, [pc, #412]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008726:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008728:	4a66      	ldr	r2, [pc, #408]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800872a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800872e:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 8008730:	e00f      	b.n	8008752 <HAL_RCCEx_PeriphCLKConfig+0x79e>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008732:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008736:	3308      	adds	r3, #8
 8008738:	2102      	movs	r1, #2
 800873a:	4618      	mov	r0, r3
 800873c:	f001 ffd4 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008740:	4603      	mov	r3, r0
 8008742:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* FMC clock source configuration done later after clock selection check */
        break;
 8008746:	e004      	b.n	8008752 <HAL_RCCEx_PeriphCLKConfig+0x79e>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8008748:	2301      	movs	r3, #1
 800874a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800874e:	e000      	b.n	8008752 <HAL_RCCEx_PeriphCLKConfig+0x79e>
        break;
 8008750:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008752:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008756:	2b00      	cmp	r3, #0
 8008758:	d10a      	bne.n	8008770 <HAL_RCCEx_PeriphCLKConfig+0x7bc>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 800875a:	4b5a      	ldr	r3, [pc, #360]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800875c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800875e:	f023 0103 	bic.w	r1, r3, #3
 8008762:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008766:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008768:	4a56      	ldr	r2, [pc, #344]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800876a:	430b      	orrs	r3, r1
 800876c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800876e:	e003      	b.n	8008778 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008770:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008774:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8008778:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800877c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008780:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 8008784:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8008788:	2300      	movs	r3, #0
 800878a:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800878e:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 8008792:	460b      	mov	r3, r1
 8008794:	4313      	orrs	r3, r2
 8008796:	f000 809f 	beq.w	80088d8 <HAL_RCCEx_PeriphCLKConfig+0x924>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800879a:	4b4b      	ldr	r3, [pc, #300]	; (80088c8 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 800879c:	681b      	ldr	r3, [r3, #0]
 800879e:	4a4a      	ldr	r2, [pc, #296]	; (80088c8 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80087a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80087a4:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80087a6:	f7f9 ff77 	bl	8002698 <HAL_GetTick>
 80087aa:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80087ae:	e00b      	b.n	80087c8 <HAL_RCCEx_PeriphCLKConfig+0x814>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80087b0:	f7f9 ff72 	bl	8002698 <HAL_GetTick>
 80087b4:	4602      	mov	r2, r0
 80087b6:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 80087ba:	1ad3      	subs	r3, r2, r3
 80087bc:	2b64      	cmp	r3, #100	; 0x64
 80087be:	d903      	bls.n	80087c8 <HAL_RCCEx_PeriphCLKConfig+0x814>
      {
        ret = HAL_TIMEOUT;
 80087c0:	2303      	movs	r3, #3
 80087c2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80087c6:	e005      	b.n	80087d4 <HAL_RCCEx_PeriphCLKConfig+0x820>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80087c8:	4b3f      	ldr	r3, [pc, #252]	; (80088c8 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80087ca:	681b      	ldr	r3, [r3, #0]
 80087cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80087d0:	2b00      	cmp	r3, #0
 80087d2:	d0ed      	beq.n	80087b0 <HAL_RCCEx_PeriphCLKConfig+0x7fc>
      }
    }

    if (ret == HAL_OK)
 80087d4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80087d8:	2b00      	cmp	r3, #0
 80087da:	d179      	bne.n	80088d0 <HAL_RCCEx_PeriphCLKConfig+0x91c>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 80087dc:	4b39      	ldr	r3, [pc, #228]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80087de:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80087e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80087e4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80087e8:	4053      	eors	r3, r2
 80087ea:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80087ee:	2b00      	cmp	r3, #0
 80087f0:	d015      	beq.n	800881e <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80087f2:	4b34      	ldr	r3, [pc, #208]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80087f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80087fa:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 80087fe:	4b31      	ldr	r3, [pc, #196]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008800:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008802:	4a30      	ldr	r2, [pc, #192]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008804:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008808:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 800880a:	4b2e      	ldr	r3, [pc, #184]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800880c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800880e:	4a2d      	ldr	r2, [pc, #180]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008810:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008814:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 8008816:	4a2b      	ldr	r2, [pc, #172]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008818:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800881c:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 800881e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008822:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008826:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800882a:	d118      	bne.n	800885e <HAL_RCCEx_PeriphCLKConfig+0x8aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800882c:	f7f9 ff34 	bl	8002698 <HAL_GetTick>
 8008830:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8008834:	e00d      	b.n	8008852 <HAL_RCCEx_PeriphCLKConfig+0x89e>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008836:	f7f9 ff2f 	bl	8002698 <HAL_GetTick>
 800883a:	4602      	mov	r2, r0
 800883c:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8008840:	1ad2      	subs	r2, r2, r3
 8008842:	f241 3388 	movw	r3, #5000	; 0x1388
 8008846:	429a      	cmp	r2, r3
 8008848:	d903      	bls.n	8008852 <HAL_RCCEx_PeriphCLKConfig+0x89e>
          {
            ret = HAL_TIMEOUT;
 800884a:	2303      	movs	r3, #3
 800884c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
            break;
 8008850:	e005      	b.n	800885e <HAL_RCCEx_PeriphCLKConfig+0x8aa>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8008852:	4b1c      	ldr	r3, [pc, #112]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008854:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008856:	f003 0302 	and.w	r3, r3, #2
 800885a:	2b00      	cmp	r3, #0
 800885c:	d0eb      	beq.n	8008836 <HAL_RCCEx_PeriphCLKConfig+0x882>
          }
        }
      }

      if (ret == HAL_OK)
 800885e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008862:	2b00      	cmp	r3, #0
 8008864:	d129      	bne.n	80088ba <HAL_RCCEx_PeriphCLKConfig+0x906>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008866:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800886a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800886e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008872:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008876:	d10e      	bne.n	8008896 <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 8008878:	4b12      	ldr	r3, [pc, #72]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800887a:	691b      	ldr	r3, [r3, #16]
 800887c:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 8008880:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008884:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008888:	091a      	lsrs	r2, r3, #4
 800888a:	4b10      	ldr	r3, [pc, #64]	; (80088cc <HAL_RCCEx_PeriphCLKConfig+0x918>)
 800888c:	4013      	ands	r3, r2
 800888e:	4a0d      	ldr	r2, [pc, #52]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008890:	430b      	orrs	r3, r1
 8008892:	6113      	str	r3, [r2, #16]
 8008894:	e005      	b.n	80088a2 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 8008896:	4b0b      	ldr	r3, [pc, #44]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008898:	691b      	ldr	r3, [r3, #16]
 800889a:	4a0a      	ldr	r2, [pc, #40]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800889c:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 80088a0:	6113      	str	r3, [r2, #16]
 80088a2:	4b08      	ldr	r3, [pc, #32]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80088a4:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80088a6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80088aa:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80088ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80088b2:	4a04      	ldr	r2, [pc, #16]	; (80088c4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80088b4:	430b      	orrs	r3, r1
 80088b6:	6713      	str	r3, [r2, #112]	; 0x70
 80088b8:	e00e      	b.n	80088d8 <HAL_RCCEx_PeriphCLKConfig+0x924>
      }
      else
      {
        /* set overall return value */
        status = ret;
 80088ba:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80088be:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 80088c2:	e009      	b.n	80088d8 <HAL_RCCEx_PeriphCLKConfig+0x924>
 80088c4:	58024400 	.word	0x58024400
 80088c8:	58024800 	.word	0x58024800
 80088cc:	00ffffcf 	.word	0x00ffffcf
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 80088d0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80088d4:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 80088d8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80088dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088e0:	f002 0301 	and.w	r3, r2, #1
 80088e4:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80088e8:	2300      	movs	r3, #0
 80088ea:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80088ee:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 80088f2:	460b      	mov	r3, r1
 80088f4:	4313      	orrs	r3, r2
 80088f6:	f000 8089 	beq.w	8008a0c <HAL_RCCEx_PeriphCLKConfig+0xa58>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 80088fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80088fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008900:	2b28      	cmp	r3, #40	; 0x28
 8008902:	d86b      	bhi.n	80089dc <HAL_RCCEx_PeriphCLKConfig+0xa28>
 8008904:	a201      	add	r2, pc, #4	; (adr r2, 800890c <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008906:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800890a:	bf00      	nop
 800890c:	080089e5 	.word	0x080089e5
 8008910:	080089dd 	.word	0x080089dd
 8008914:	080089dd 	.word	0x080089dd
 8008918:	080089dd 	.word	0x080089dd
 800891c:	080089dd 	.word	0x080089dd
 8008920:	080089dd 	.word	0x080089dd
 8008924:	080089dd 	.word	0x080089dd
 8008928:	080089dd 	.word	0x080089dd
 800892c:	080089b1 	.word	0x080089b1
 8008930:	080089dd 	.word	0x080089dd
 8008934:	080089dd 	.word	0x080089dd
 8008938:	080089dd 	.word	0x080089dd
 800893c:	080089dd 	.word	0x080089dd
 8008940:	080089dd 	.word	0x080089dd
 8008944:	080089dd 	.word	0x080089dd
 8008948:	080089dd 	.word	0x080089dd
 800894c:	080089c7 	.word	0x080089c7
 8008950:	080089dd 	.word	0x080089dd
 8008954:	080089dd 	.word	0x080089dd
 8008958:	080089dd 	.word	0x080089dd
 800895c:	080089dd 	.word	0x080089dd
 8008960:	080089dd 	.word	0x080089dd
 8008964:	080089dd 	.word	0x080089dd
 8008968:	080089dd 	.word	0x080089dd
 800896c:	080089e5 	.word	0x080089e5
 8008970:	080089dd 	.word	0x080089dd
 8008974:	080089dd 	.word	0x080089dd
 8008978:	080089dd 	.word	0x080089dd
 800897c:	080089dd 	.word	0x080089dd
 8008980:	080089dd 	.word	0x080089dd
 8008984:	080089dd 	.word	0x080089dd
 8008988:	080089dd 	.word	0x080089dd
 800898c:	080089e5 	.word	0x080089e5
 8008990:	080089dd 	.word	0x080089dd
 8008994:	080089dd 	.word	0x080089dd
 8008998:	080089dd 	.word	0x080089dd
 800899c:	080089dd 	.word	0x080089dd
 80089a0:	080089dd 	.word	0x080089dd
 80089a4:	080089dd 	.word	0x080089dd
 80089a8:	080089dd 	.word	0x080089dd
 80089ac:	080089e5 	.word	0x080089e5
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80089b0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80089b4:	3308      	adds	r3, #8
 80089b6:	2101      	movs	r1, #1
 80089b8:	4618      	mov	r0, r3
 80089ba:	f001 fe95 	bl	800a6e8 <RCCEx_PLL2_Config>
 80089be:	4603      	mov	r3, r0
 80089c0:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 80089c4:	e00f      	b.n	80089e6 <HAL_RCCEx_PeriphCLKConfig+0xa32>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80089c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80089ca:	3328      	adds	r3, #40	; 0x28
 80089cc:	2101      	movs	r1, #1
 80089ce:	4618      	mov	r0, r3
 80089d0:	f001 ff3c 	bl	800a84c <RCCEx_PLL3_Config>
 80089d4:	4603      	mov	r3, r0
 80089d6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 80089da:	e004      	b.n	80089e6 <HAL_RCCEx_PeriphCLKConfig+0xa32>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80089dc:	2301      	movs	r3, #1
 80089de:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80089e2:	e000      	b.n	80089e6 <HAL_RCCEx_PeriphCLKConfig+0xa32>
        break;
 80089e4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80089e6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80089ea:	2b00      	cmp	r3, #0
 80089ec:	d10a      	bne.n	8008a04 <HAL_RCCEx_PeriphCLKConfig+0xa50>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 80089ee:	4bbf      	ldr	r3, [pc, #764]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 80089f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80089f2:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 80089f6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80089fa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80089fc:	4abb      	ldr	r2, [pc, #748]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 80089fe:	430b      	orrs	r3, r1
 8008a00:	6553      	str	r3, [r2, #84]	; 0x54
 8008a02:	e003      	b.n	8008a0c <HAL_RCCEx_PeriphCLKConfig+0xa58>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008a04:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008a08:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8008a0c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008a10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a14:	f002 0302 	and.w	r3, r2, #2
 8008a18:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8008a1c:	2300      	movs	r3, #0
 8008a1e:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8008a22:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 8008a26:	460b      	mov	r3, r1
 8008a28:	4313      	orrs	r3, r2
 8008a2a:	d041      	beq.n	8008ab0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 8008a2c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008a30:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008a32:	2b05      	cmp	r3, #5
 8008a34:	d824      	bhi.n	8008a80 <HAL_RCCEx_PeriphCLKConfig+0xacc>
 8008a36:	a201      	add	r2, pc, #4	; (adr r2, 8008a3c <HAL_RCCEx_PeriphCLKConfig+0xa88>)
 8008a38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008a3c:	08008a89 	.word	0x08008a89
 8008a40:	08008a55 	.word	0x08008a55
 8008a44:	08008a6b 	.word	0x08008a6b
 8008a48:	08008a89 	.word	0x08008a89
 8008a4c:	08008a89 	.word	0x08008a89
 8008a50:	08008a89 	.word	0x08008a89
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008a54:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008a58:	3308      	adds	r3, #8
 8008a5a:	2101      	movs	r1, #1
 8008a5c:	4618      	mov	r0, r3
 8008a5e:	f001 fe43 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008a62:	4603      	mov	r3, r0
 8008a64:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8008a68:	e00f      	b.n	8008a8a <HAL_RCCEx_PeriphCLKConfig+0xad6>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008a6a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008a6e:	3328      	adds	r3, #40	; 0x28
 8008a70:	2101      	movs	r1, #1
 8008a72:	4618      	mov	r0, r3
 8008a74:	f001 feea 	bl	800a84c <RCCEx_PLL3_Config>
 8008a78:	4603      	mov	r3, r0
 8008a7a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8008a7e:	e004      	b.n	8008a8a <HAL_RCCEx_PeriphCLKConfig+0xad6>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008a80:	2301      	movs	r3, #1
 8008a82:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008a86:	e000      	b.n	8008a8a <HAL_RCCEx_PeriphCLKConfig+0xad6>
        break;
 8008a88:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008a8a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008a8e:	2b00      	cmp	r3, #0
 8008a90:	d10a      	bne.n	8008aa8 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8008a92:	4b96      	ldr	r3, [pc, #600]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008a94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008a96:	f023 0107 	bic.w	r1, r3, #7
 8008a9a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008a9e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8008aa0:	4a92      	ldr	r2, [pc, #584]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008aa2:	430b      	orrs	r3, r1
 8008aa4:	6553      	str	r3, [r2, #84]	; 0x54
 8008aa6:	e003      	b.n	8008ab0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008aa8:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008aac:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8008ab0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008ab4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ab8:	f002 0304 	and.w	r3, r2, #4
 8008abc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008ac0:	2300      	movs	r3, #0
 8008ac2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008ac6:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 8008aca:	460b      	mov	r3, r1
 8008acc:	4313      	orrs	r3, r2
 8008ace:	d044      	beq.n	8008b5a <HAL_RCCEx_PeriphCLKConfig+0xba6>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8008ad0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008ad4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008ad8:	2b05      	cmp	r3, #5
 8008ada:	d825      	bhi.n	8008b28 <HAL_RCCEx_PeriphCLKConfig+0xb74>
 8008adc:	a201      	add	r2, pc, #4	; (adr r2, 8008ae4 <HAL_RCCEx_PeriphCLKConfig+0xb30>)
 8008ade:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008ae2:	bf00      	nop
 8008ae4:	08008b31 	.word	0x08008b31
 8008ae8:	08008afd 	.word	0x08008afd
 8008aec:	08008b13 	.word	0x08008b13
 8008af0:	08008b31 	.word	0x08008b31
 8008af4:	08008b31 	.word	0x08008b31
 8008af8:	08008b31 	.word	0x08008b31
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008afc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008b00:	3308      	adds	r3, #8
 8008b02:	2101      	movs	r1, #1
 8008b04:	4618      	mov	r0, r3
 8008b06:	f001 fdef 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008b0a:	4603      	mov	r3, r0
 8008b0c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8008b10:	e00f      	b.n	8008b32 <HAL_RCCEx_PeriphCLKConfig+0xb7e>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008b12:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008b16:	3328      	adds	r3, #40	; 0x28
 8008b18:	2101      	movs	r1, #1
 8008b1a:	4618      	mov	r0, r3
 8008b1c:	f001 fe96 	bl	800a84c <RCCEx_PLL3_Config>
 8008b20:	4603      	mov	r3, r0
 8008b22:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8008b26:	e004      	b.n	8008b32 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008b28:	2301      	movs	r3, #1
 8008b2a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008b2e:	e000      	b.n	8008b32 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
        break;
 8008b30:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008b32:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008b36:	2b00      	cmp	r3, #0
 8008b38:	d10b      	bne.n	8008b52 <HAL_RCCEx_PeriphCLKConfig+0xb9e>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8008b3a:	4b6c      	ldr	r3, [pc, #432]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008b3c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008b3e:	f023 0107 	bic.w	r1, r3, #7
 8008b42:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008b46:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008b4a:	4a68      	ldr	r2, [pc, #416]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008b4c:	430b      	orrs	r3, r1
 8008b4e:	6593      	str	r3, [r2, #88]	; 0x58
 8008b50:	e003      	b.n	8008b5a <HAL_RCCEx_PeriphCLKConfig+0xba6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008b52:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008b56:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8008b5a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008b5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b62:	f002 0320 	and.w	r3, r2, #32
 8008b66:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008b6a:	2300      	movs	r3, #0
 8008b6c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008b70:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8008b74:	460b      	mov	r3, r1
 8008b76:	4313      	orrs	r3, r2
 8008b78:	d055      	beq.n	8008c26 <HAL_RCCEx_PeriphCLKConfig+0xc72>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 8008b7a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008b7e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008b82:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008b86:	d033      	beq.n	8008bf0 <HAL_RCCEx_PeriphCLKConfig+0xc3c>
 8008b88:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008b8c:	d82c      	bhi.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8008b8e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008b92:	d02f      	beq.n	8008bf4 <HAL_RCCEx_PeriphCLKConfig+0xc40>
 8008b94:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008b98:	d826      	bhi.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8008b9a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008b9e:	d02b      	beq.n	8008bf8 <HAL_RCCEx_PeriphCLKConfig+0xc44>
 8008ba0:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008ba4:	d820      	bhi.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8008ba6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008baa:	d012      	beq.n	8008bd2 <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 8008bac:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008bb0:	d81a      	bhi.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8008bb2:	2b00      	cmp	r3, #0
 8008bb4:	d022      	beq.n	8008bfc <HAL_RCCEx_PeriphCLKConfig+0xc48>
 8008bb6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008bba:	d115      	bne.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008bbc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008bc0:	3308      	adds	r3, #8
 8008bc2:	2100      	movs	r1, #0
 8008bc4:	4618      	mov	r0, r3
 8008bc6:	f001 fd8f 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008bca:	4603      	mov	r3, r0
 8008bcc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8008bd0:	e015      	b.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0xc4a>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008bd2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008bd6:	3328      	adds	r3, #40	; 0x28
 8008bd8:	2102      	movs	r1, #2
 8008bda:	4618      	mov	r0, r3
 8008bdc:	f001 fe36 	bl	800a84c <RCCEx_PLL3_Config>
 8008be0:	4603      	mov	r3, r0
 8008be2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8008be6:	e00a      	b.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008be8:	2301      	movs	r3, #1
 8008bea:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008bee:	e006      	b.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8008bf0:	bf00      	nop
 8008bf2:	e004      	b.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8008bf4:	bf00      	nop
 8008bf6:	e002      	b.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8008bf8:	bf00      	nop
 8008bfa:	e000      	b.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0xc4a>
        break;
 8008bfc:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008bfe:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008c02:	2b00      	cmp	r3, #0
 8008c04:	d10b      	bne.n	8008c1e <HAL_RCCEx_PeriphCLKConfig+0xc6a>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8008c06:	4b39      	ldr	r3, [pc, #228]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008c08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c0a:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 8008c0e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008c12:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008c16:	4a35      	ldr	r2, [pc, #212]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008c18:	430b      	orrs	r3, r1
 8008c1a:	6553      	str	r3, [r2, #84]	; 0x54
 8008c1c:	e003      	b.n	8008c26 <HAL_RCCEx_PeriphCLKConfig+0xc72>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008c1e:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008c22:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8008c26:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c2e:	f002 0340 	and.w	r3, r2, #64	; 0x40
 8008c32:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8008c36:	2300      	movs	r3, #0
 8008c38:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8008c3c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 8008c40:	460b      	mov	r3, r1
 8008c42:	4313      	orrs	r3, r2
 8008c44:	d058      	beq.n	8008cf8 <HAL_RCCEx_PeriphCLKConfig+0xd44>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 8008c46:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008c4a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008c4e:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8008c52:	d033      	beq.n	8008cbc <HAL_RCCEx_PeriphCLKConfig+0xd08>
 8008c54:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8008c58:	d82c      	bhi.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8008c5a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008c5e:	d02f      	beq.n	8008cc0 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
 8008c60:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008c64:	d826      	bhi.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8008c66:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008c6a:	d02b      	beq.n	8008cc4 <HAL_RCCEx_PeriphCLKConfig+0xd10>
 8008c6c:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008c70:	d820      	bhi.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8008c72:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008c76:	d012      	beq.n	8008c9e <HAL_RCCEx_PeriphCLKConfig+0xcea>
 8008c78:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008c7c:	d81a      	bhi.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8008c7e:	2b00      	cmp	r3, #0
 8008c80:	d022      	beq.n	8008cc8 <HAL_RCCEx_PeriphCLKConfig+0xd14>
 8008c82:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008c86:	d115      	bne.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008c88:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008c8c:	3308      	adds	r3, #8
 8008c8e:	2100      	movs	r1, #0
 8008c90:	4618      	mov	r0, r3
 8008c92:	f001 fd29 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008c96:	4603      	mov	r3, r0
 8008c98:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8008c9c:	e015      	b.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xd16>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008c9e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008ca2:	3328      	adds	r3, #40	; 0x28
 8008ca4:	2102      	movs	r1, #2
 8008ca6:	4618      	mov	r0, r3
 8008ca8:	f001 fdd0 	bl	800a84c <RCCEx_PLL3_Config>
 8008cac:	4603      	mov	r3, r0
 8008cae:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8008cb2:	e00a      	b.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xd16>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008cb4:	2301      	movs	r3, #1
 8008cb6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008cba:	e006      	b.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8008cbc:	bf00      	nop
 8008cbe:	e004      	b.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8008cc0:	bf00      	nop
 8008cc2:	e002      	b.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8008cc4:	bf00      	nop
 8008cc6:	e000      	b.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xd16>
        break;
 8008cc8:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008cca:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008cce:	2b00      	cmp	r3, #0
 8008cd0:	d10e      	bne.n	8008cf0 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8008cd2:	4b06      	ldr	r3, [pc, #24]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008cd4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008cd6:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 8008cda:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008cde:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008ce2:	4a02      	ldr	r2, [pc, #8]	; (8008cec <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008ce4:	430b      	orrs	r3, r1
 8008ce6:	6593      	str	r3, [r2, #88]	; 0x58
 8008ce8:	e006      	b.n	8008cf8 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8008cea:	bf00      	nop
 8008cec:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008cf0:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008cf4:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8008cf8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008cfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d00:	f002 0380 	and.w	r3, r2, #128	; 0x80
 8008d04:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8008d08:	2300      	movs	r3, #0
 8008d0a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8008d0e:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 8008d12:	460b      	mov	r3, r1
 8008d14:	4313      	orrs	r3, r2
 8008d16:	d055      	beq.n	8008dc4 <HAL_RCCEx_PeriphCLKConfig+0xe10>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 8008d18:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008d1c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008d20:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8008d24:	d033      	beq.n	8008d8e <HAL_RCCEx_PeriphCLKConfig+0xdda>
 8008d26:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8008d2a:	d82c      	bhi.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008d2c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008d30:	d02f      	beq.n	8008d92 <HAL_RCCEx_PeriphCLKConfig+0xdde>
 8008d32:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008d36:	d826      	bhi.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008d38:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8008d3c:	d02b      	beq.n	8008d96 <HAL_RCCEx_PeriphCLKConfig+0xde2>
 8008d3e:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8008d42:	d820      	bhi.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008d44:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008d48:	d012      	beq.n	8008d70 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 8008d4a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008d4e:	d81a      	bhi.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008d50:	2b00      	cmp	r3, #0
 8008d52:	d022      	beq.n	8008d9a <HAL_RCCEx_PeriphCLKConfig+0xde6>
 8008d54:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008d58:	d115      	bne.n	8008d86 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008d5a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008d5e:	3308      	adds	r3, #8
 8008d60:	2100      	movs	r1, #0
 8008d62:	4618      	mov	r0, r3
 8008d64:	f001 fcc0 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008d68:	4603      	mov	r3, r0
 8008d6a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8008d6e:	e015      	b.n	8008d9c <HAL_RCCEx_PeriphCLKConfig+0xde8>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008d70:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008d74:	3328      	adds	r3, #40	; 0x28
 8008d76:	2102      	movs	r1, #2
 8008d78:	4618      	mov	r0, r3
 8008d7a:	f001 fd67 	bl	800a84c <RCCEx_PLL3_Config>
 8008d7e:	4603      	mov	r3, r0
 8008d80:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8008d84:	e00a      	b.n	8008d9c <HAL_RCCEx_PeriphCLKConfig+0xde8>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008d86:	2301      	movs	r3, #1
 8008d88:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008d8c:	e006      	b.n	8008d9c <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8008d8e:	bf00      	nop
 8008d90:	e004      	b.n	8008d9c <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8008d92:	bf00      	nop
 8008d94:	e002      	b.n	8008d9c <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8008d96:	bf00      	nop
 8008d98:	e000      	b.n	8008d9c <HAL_RCCEx_PeriphCLKConfig+0xde8>
        break;
 8008d9a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008d9c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008da0:	2b00      	cmp	r3, #0
 8008da2:	d10b      	bne.n	8008dbc <HAL_RCCEx_PeriphCLKConfig+0xe08>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8008da4:	4ba1      	ldr	r3, [pc, #644]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008da6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008da8:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 8008dac:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008db0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008db4:	4a9d      	ldr	r2, [pc, #628]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008db6:	430b      	orrs	r3, r1
 8008db8:	6593      	str	r3, [r2, #88]	; 0x58
 8008dba:	e003      	b.n	8008dc4 <HAL_RCCEx_PeriphCLKConfig+0xe10>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008dbc:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008dc0:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);

  }
#else
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8008dc4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008dc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008dcc:	f002 0308 	and.w	r3, r2, #8
 8008dd0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8008dd4:	2300      	movs	r3, #0
 8008dd6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8008dda:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 8008dde:	460b      	mov	r3, r1
 8008de0:	4313      	orrs	r3, r2
 8008de2:	d01e      	beq.n	8008e22 <HAL_RCCEx_PeriphCLKConfig+0xe6e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C123CLKSOURCE(PeriphClkInit->I2c123ClockSelection));

    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
 8008de4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008de8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008dec:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008df0:	d10c      	bne.n	8008e0c <HAL_RCCEx_PeriphCLKConfig+0xe58>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008df2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008df6:	3328      	adds	r3, #40	; 0x28
 8008df8:	2102      	movs	r1, #2
 8008dfa:	4618      	mov	r0, r3
 8008dfc:	f001 fd26 	bl	800a84c <RCCEx_PLL3_Config>
 8008e00:	4603      	mov	r3, r0
 8008e02:	2b00      	cmp	r3, #0
 8008e04:	d002      	beq.n	8008e0c <HAL_RCCEx_PeriphCLKConfig+0xe58>
      {
        status = HAL_ERROR;
 8008e06:	2301      	movs	r3, #1
 8008e08:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
      }
    }

    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8008e0c:	4b87      	ldr	r3, [pc, #540]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008e0e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008e10:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8008e14:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008e18:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008e1c:	4a83      	ldr	r2, [pc, #524]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008e1e:	430b      	orrs	r3, r1
 8008e20:	6553      	str	r3, [r2, #84]	; 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8008e22:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008e26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e2a:	f002 0310 	and.w	r3, r2, #16
 8008e2e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008e32:	2300      	movs	r3, #0
 8008e34:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8008e38:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 8008e3c:	460b      	mov	r3, r1
 8008e3e:	4313      	orrs	r3, r2
 8008e40:	d01e      	beq.n	8008e80 <HAL_RCCEx_PeriphCLKConfig+0xecc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8008e42:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008e46:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008e4a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008e4e:	d10c      	bne.n	8008e6a <HAL_RCCEx_PeriphCLKConfig+0xeb6>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008e50:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008e54:	3328      	adds	r3, #40	; 0x28
 8008e56:	2102      	movs	r1, #2
 8008e58:	4618      	mov	r0, r3
 8008e5a:	f001 fcf7 	bl	800a84c <RCCEx_PLL3_Config>
 8008e5e:	4603      	mov	r3, r0
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d002      	beq.n	8008e6a <HAL_RCCEx_PeriphCLKConfig+0xeb6>
      {
        status = HAL_ERROR;
 8008e64:	2301      	movs	r3, #1
 8008e66:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8008e6a:	4b70      	ldr	r3, [pc, #448]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008e6c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008e6e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8008e72:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008e76:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008e7a:	4a6c      	ldr	r2, [pc, #432]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008e7c:	430b      	orrs	r3, r1
 8008e7e:	6593      	str	r3, [r2, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8008e80:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008e84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e88:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 8008e8c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8008e90:	2300      	movs	r3, #0
 8008e92:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8008e96:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 8008e9a:	460b      	mov	r3, r1
 8008e9c:	4313      	orrs	r3, r2
 8008e9e:	d03e      	beq.n	8008f1e <HAL_RCCEx_PeriphCLKConfig+0xf6a>
  {
    switch (PeriphClkInit->AdcClockSelection)
 8008ea0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008ea4:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008ea8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008eac:	d022      	beq.n	8008ef4 <HAL_RCCEx_PeriphCLKConfig+0xf40>
 8008eae:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008eb2:	d81b      	bhi.n	8008eec <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	d003      	beq.n	8008ec0 <HAL_RCCEx_PeriphCLKConfig+0xf0c>
 8008eb8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008ebc:	d00b      	beq.n	8008ed6 <HAL_RCCEx_PeriphCLKConfig+0xf22>
 8008ebe:	e015      	b.n	8008eec <HAL_RCCEx_PeriphCLKConfig+0xf38>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008ec0:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008ec4:	3308      	adds	r3, #8
 8008ec6:	2100      	movs	r1, #0
 8008ec8:	4618      	mov	r0, r3
 8008eca:	f001 fc0d 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008ece:	4603      	mov	r3, r0
 8008ed0:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008ed4:	e00f      	b.n	8008ef6 <HAL_RCCEx_PeriphCLKConfig+0xf42>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008ed6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008eda:	3328      	adds	r3, #40	; 0x28
 8008edc:	2102      	movs	r1, #2
 8008ede:	4618      	mov	r0, r3
 8008ee0:	f001 fcb4 	bl	800a84c <RCCEx_PLL3_Config>
 8008ee4:	4603      	mov	r3, r0
 8008ee6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008eea:	e004      	b.n	8008ef6 <HAL_RCCEx_PeriphCLKConfig+0xf42>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008eec:	2301      	movs	r3, #1
 8008eee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008ef2:	e000      	b.n	8008ef6 <HAL_RCCEx_PeriphCLKConfig+0xf42>
        break;
 8008ef4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008ef6:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008efa:	2b00      	cmp	r3, #0
 8008efc:	d10b      	bne.n	8008f16 <HAL_RCCEx_PeriphCLKConfig+0xf62>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008efe:	4b4b      	ldr	r3, [pc, #300]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008f00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008f02:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8008f06:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008f0a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008f0e:	4a47      	ldr	r2, [pc, #284]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008f10:	430b      	orrs	r3, r1
 8008f12:	6593      	str	r3, [r2, #88]	; 0x58
 8008f14:	e003      	b.n	8008f1e <HAL_RCCEx_PeriphCLKConfig+0xf6a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008f16:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008f1a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8008f1e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008f22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f26:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 8008f2a:	67bb      	str	r3, [r7, #120]	; 0x78
 8008f2c:	2300      	movs	r3, #0
 8008f2e:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008f30:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 8008f34:	460b      	mov	r3, r1
 8008f36:	4313      	orrs	r3, r2
 8008f38:	d03b      	beq.n	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0xffe>
  {

    switch (PeriphClkInit->UsbClockSelection)
 8008f3a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008f3e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008f42:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f46:	d01f      	beq.n	8008f88 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 8008f48:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f4c:	d818      	bhi.n	8008f80 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8008f4e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008f52:	d003      	beq.n	8008f5c <HAL_RCCEx_PeriphCLKConfig+0xfa8>
 8008f54:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008f58:	d007      	beq.n	8008f6a <HAL_RCCEx_PeriphCLKConfig+0xfb6>
 8008f5a:	e011      	b.n	8008f80 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008f5c:	4b33      	ldr	r3, [pc, #204]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008f5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f60:	4a32      	ldr	r2, [pc, #200]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008f62:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008f66:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 8008f68:	e00f      	b.n	8008f8a <HAL_RCCEx_PeriphCLKConfig+0xfd6>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008f6a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008f6e:	3328      	adds	r3, #40	; 0x28
 8008f70:	2101      	movs	r1, #1
 8008f72:	4618      	mov	r0, r3
 8008f74:	f001 fc6a 	bl	800a84c <RCCEx_PLL3_Config>
 8008f78:	4603      	mov	r3, r0
 8008f7a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* USB clock source configuration done later after clock selection check */
        break;
 8008f7e:	e004      	b.n	8008f8a <HAL_RCCEx_PeriphCLKConfig+0xfd6>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008f80:	2301      	movs	r3, #1
 8008f82:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 8008f86:	e000      	b.n	8008f8a <HAL_RCCEx_PeriphCLKConfig+0xfd6>
        break;
 8008f88:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008f8a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008f8e:	2b00      	cmp	r3, #0
 8008f90:	d10b      	bne.n	8008faa <HAL_RCCEx_PeriphCLKConfig+0xff6>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8008f92:	4b26      	ldr	r3, [pc, #152]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008f94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f96:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8008f9a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008f9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008fa2:	4a22      	ldr	r2, [pc, #136]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008fa4:	430b      	orrs	r3, r1
 8008fa6:	6553      	str	r3, [r2, #84]	; 0x54
 8008fa8:	e003      	b.n	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0xffe>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008faa:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8008fae:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8008fb2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008fb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008fba:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 8008fbe:	673b      	str	r3, [r7, #112]	; 0x70
 8008fc0:	2300      	movs	r3, #0
 8008fc2:	677b      	str	r3, [r7, #116]	; 0x74
 8008fc4:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 8008fc8:	460b      	mov	r3, r1
 8008fca:	4313      	orrs	r3, r2
 8008fcc:	d034      	beq.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1084>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 8008fce:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008fd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008fd4:	2b00      	cmp	r3, #0
 8008fd6:	d003      	beq.n	8008fe0 <HAL_RCCEx_PeriphCLKConfig+0x102c>
 8008fd8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008fdc:	d007      	beq.n	8008fee <HAL_RCCEx_PeriphCLKConfig+0x103a>
 8008fde:	e011      	b.n	8009004 <HAL_RCCEx_PeriphCLKConfig+0x1050>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008fe0:	4b12      	ldr	r3, [pc, #72]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008fe4:	4a11      	ldr	r2, [pc, #68]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008fe6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008fea:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008fec:	e00e      	b.n	800900c <HAL_RCCEx_PeriphCLKConfig+0x1058>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008fee:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8008ff2:	3308      	adds	r3, #8
 8008ff4:	2102      	movs	r1, #2
 8008ff6:	4618      	mov	r0, r3
 8008ff8:	f001 fb76 	bl	800a6e8 <RCCEx_PLL2_Config>
 8008ffc:	4603      	mov	r3, r0
 8008ffe:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8009002:	e003      	b.n	800900c <HAL_RCCEx_PeriphCLKConfig+0x1058>

      default:
        ret = HAL_ERROR;
 8009004:	2301      	movs	r3, #1
 8009006:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 800900a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800900c:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8009010:	2b00      	cmp	r3, #0
 8009012:	d10d      	bne.n	8009030 <HAL_RCCEx_PeriphCLKConfig+0x107c>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8009014:	4b05      	ldr	r3, [pc, #20]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8009016:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009018:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800901c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009020:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009022:	4a02      	ldr	r2, [pc, #8]	; (800902c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8009024:	430b      	orrs	r3, r1
 8009026:	64d3      	str	r3, [r2, #76]	; 0x4c
 8009028:	e006      	b.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 800902a:	bf00      	nop
 800902c:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8009030:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8009034:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8009038:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800903c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009040:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 8009044:	66bb      	str	r3, [r7, #104]	; 0x68
 8009046:	2300      	movs	r3, #0
 8009048:	66fb      	str	r3, [r7, #108]	; 0x6c
 800904a:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 800904e:	460b      	mov	r3, r1
 8009050:	4313      	orrs	r3, r2
 8009052:	d00c      	beq.n	800906e <HAL_RCCEx_PeriphCLKConfig+0x10ba>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8009054:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009058:	3328      	adds	r3, #40	; 0x28
 800905a:	2102      	movs	r1, #2
 800905c:	4618      	mov	r0, r3
 800905e:	f001 fbf5 	bl	800a84c <RCCEx_PLL3_Config>
 8009062:	4603      	mov	r3, r0
 8009064:	2b00      	cmp	r3, #0
 8009066:	d002      	beq.n	800906e <HAL_RCCEx_PeriphCLKConfig+0x10ba>
    {
      status = HAL_ERROR;
 8009068:	2301      	movs	r3, #1
 800906a:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 800906e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009072:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009076:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 800907a:	663b      	str	r3, [r7, #96]	; 0x60
 800907c:	2300      	movs	r3, #0
 800907e:	667b      	str	r3, [r7, #100]	; 0x64
 8009080:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 8009084:	460b      	mov	r3, r1
 8009086:	4313      	orrs	r3, r2
 8009088:	d038      	beq.n	80090fc <HAL_RCCEx_PeriphCLKConfig+0x1148>
  {

    switch (PeriphClkInit->RngClockSelection)
 800908a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800908e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009092:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009096:	d018      	beq.n	80090ca <HAL_RCCEx_PeriphCLKConfig+0x1116>
 8009098:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800909c:	d811      	bhi.n	80090c2 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 800909e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80090a2:	d014      	beq.n	80090ce <HAL_RCCEx_PeriphCLKConfig+0x111a>
 80090a4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80090a8:	d80b      	bhi.n	80090c2 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 80090aa:	2b00      	cmp	r3, #0
 80090ac:	d011      	beq.n	80090d2 <HAL_RCCEx_PeriphCLKConfig+0x111e>
 80090ae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80090b2:	d106      	bne.n	80090c2 <HAL_RCCEx_PeriphCLKConfig+0x110e>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80090b4:	4bc3      	ldr	r3, [pc, #780]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80090b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090b8:	4ac2      	ldr	r2, [pc, #776]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80090ba:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80090be:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 80090c0:	e008      	b.n	80090d4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80090c2:	2301      	movs	r3, #1
 80090c4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
        break;
 80090c8:	e004      	b.n	80090d4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        break;
 80090ca:	bf00      	nop
 80090cc:	e002      	b.n	80090d4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        break;
 80090ce:	bf00      	nop
 80090d0:	e000      	b.n	80090d4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
        break;
 80090d2:	bf00      	nop
    }

    if (ret == HAL_OK)
 80090d4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80090d8:	2b00      	cmp	r3, #0
 80090da:	d10b      	bne.n	80090f4 <HAL_RCCEx_PeriphCLKConfig+0x1140>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 80090dc:	4bb9      	ldr	r3, [pc, #740]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80090de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80090e0:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80090e4:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80090e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80090ec:	4ab5      	ldr	r2, [pc, #724]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80090ee:	430b      	orrs	r3, r1
 80090f0:	6553      	str	r3, [r2, #84]	; 0x54
 80090f2:	e003      	b.n	80090fc <HAL_RCCEx_PeriphCLKConfig+0x1148>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80090f4:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80090f8:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 80090fc:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009100:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009104:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 8009108:	65bb      	str	r3, [r7, #88]	; 0x58
 800910a:	2300      	movs	r3, #0
 800910c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800910e:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 8009112:	460b      	mov	r3, r1
 8009114:	4313      	orrs	r3, r2
 8009116:	d009      	beq.n	800912c <HAL_RCCEx_PeriphCLKConfig+0x1178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8009118:	4baa      	ldr	r3, [pc, #680]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800911a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800911c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8009120:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009124:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009126:	4aa7      	ldr	r2, [pc, #668]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8009128:	430b      	orrs	r3, r1
 800912a:	6513      	str	r3, [r2, #80]	; 0x50
  }
#if defined(HRTIM1)
  /*------------------------------ HRTIM1 clock Configuration ----------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
 800912c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009134:	f002 5380 	and.w	r3, r2, #268435456	; 0x10000000
 8009138:	653b      	str	r3, [r7, #80]	; 0x50
 800913a:	2300      	movs	r3, #0
 800913c:	657b      	str	r3, [r7, #84]	; 0x54
 800913e:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 8009142:	460b      	mov	r3, r1
 8009144:	4313      	orrs	r3, r2
 8009146:	d00a      	beq.n	800915e <HAL_RCCEx_PeriphCLKConfig+0x11aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HRTIM1CLKSOURCE(PeriphClkInit->Hrtim1ClockSelection));

    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
 8009148:	4b9e      	ldr	r3, [pc, #632]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800914a:	691b      	ldr	r3, [r3, #16]
 800914c:	f423 4180 	bic.w	r1, r3, #16384	; 0x4000
 8009150:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009154:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009158:	4a9a      	ldr	r2, [pc, #616]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800915a:	430b      	orrs	r3, r1
 800915c:	6113      	str	r3, [r2, #16]
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 800915e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009162:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009166:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 800916a:	64bb      	str	r3, [r7, #72]	; 0x48
 800916c:	2300      	movs	r3, #0
 800916e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009170:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 8009174:	460b      	mov	r3, r1
 8009176:	4313      	orrs	r3, r2
 8009178:	d009      	beq.n	800918e <HAL_RCCEx_PeriphCLKConfig+0x11da>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 800917a:	4b92      	ldr	r3, [pc, #584]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800917c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800917e:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 8009182:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009186:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009188:	4a8e      	ldr	r2, [pc, #568]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800918a:	430b      	orrs	r3, r1
 800918c:	6513      	str	r3, [r2, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 800918e:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009196:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 800919a:	643b      	str	r3, [r7, #64]	; 0x40
 800919c:	2300      	movs	r3, #0
 800919e:	647b      	str	r3, [r7, #68]	; 0x44
 80091a0:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 80091a4:	460b      	mov	r3, r1
 80091a6:	4313      	orrs	r3, r2
 80091a8:	d00e      	beq.n	80091c8 <HAL_RCCEx_PeriphCLKConfig+0x1214>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80091aa:	4b86      	ldr	r3, [pc, #536]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80091ac:	691b      	ldr	r3, [r3, #16]
 80091ae:	4a85      	ldr	r2, [pc, #532]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80091b0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80091b4:	6113      	str	r3, [r2, #16]
 80091b6:	4b83      	ldr	r3, [pc, #524]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80091b8:	6919      	ldr	r1, [r3, #16]
 80091ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80091be:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80091c2:	4a80      	ldr	r2, [pc, #512]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80091c4:	430b      	orrs	r3, r1
 80091c6:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 80091c8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80091cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80091d0:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 80091d4:	63bb      	str	r3, [r7, #56]	; 0x38
 80091d6:	2300      	movs	r3, #0
 80091d8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80091da:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 80091de:	460b      	mov	r3, r1
 80091e0:	4313      	orrs	r3, r2
 80091e2:	d009      	beq.n	80091f8 <HAL_RCCEx_PeriphCLKConfig+0x1244>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 80091e4:	4b77      	ldr	r3, [pc, #476]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80091e6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80091e8:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 80091ec:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80091f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091f2:	4a74      	ldr	r2, [pc, #464]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80091f4:	430b      	orrs	r3, r1
 80091f6:	64d3      	str	r3, [r2, #76]	; 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 80091f8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80091fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009200:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 8009204:	633b      	str	r3, [r7, #48]	; 0x30
 8009206:	2300      	movs	r3, #0
 8009208:	637b      	str	r3, [r7, #52]	; 0x34
 800920a:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 800920e:	460b      	mov	r3, r1
 8009210:	4313      	orrs	r3, r2
 8009212:	d00a      	beq.n	800922a <HAL_RCCEx_PeriphCLKConfig+0x1276>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8009214:	4b6b      	ldr	r3, [pc, #428]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8009216:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009218:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 800921c:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8009220:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009224:	4a67      	ldr	r2, [pc, #412]	; (80093c4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8009226:	430b      	orrs	r3, r1
 8009228:	6553      	str	r3, [r2, #84]	; 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 800922a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800922e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009232:	2100      	movs	r1, #0
 8009234:	62b9      	str	r1, [r7, #40]	; 0x28
 8009236:	f003 0301 	and.w	r3, r3, #1
 800923a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800923c:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 8009240:	460b      	mov	r3, r1
 8009242:	4313      	orrs	r3, r2
 8009244:	d011      	beq.n	800926a <HAL_RCCEx_PeriphCLKConfig+0x12b6>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8009246:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800924a:	3308      	adds	r3, #8
 800924c:	2100      	movs	r1, #0
 800924e:	4618      	mov	r0, r3
 8009250:	f001 fa4a 	bl	800a6e8 <RCCEx_PLL2_Config>
 8009254:	4603      	mov	r3, r0
 8009256:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 800925a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800925e:	2b00      	cmp	r3, #0
 8009260:	d003      	beq.n	800926a <HAL_RCCEx_PeriphCLKConfig+0x12b6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8009262:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8009266:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 800926a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800926e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009272:	2100      	movs	r1, #0
 8009274:	6239      	str	r1, [r7, #32]
 8009276:	f003 0302 	and.w	r3, r3, #2
 800927a:	627b      	str	r3, [r7, #36]	; 0x24
 800927c:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8009280:	460b      	mov	r3, r1
 8009282:	4313      	orrs	r3, r2
 8009284:	d011      	beq.n	80092aa <HAL_RCCEx_PeriphCLKConfig+0x12f6>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8009286:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800928a:	3308      	adds	r3, #8
 800928c:	2101      	movs	r1, #1
 800928e:	4618      	mov	r0, r3
 8009290:	f001 fa2a 	bl	800a6e8 <RCCEx_PLL2_Config>
 8009294:	4603      	mov	r3, r0
 8009296:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 800929a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800929e:	2b00      	cmp	r3, #0
 80092a0:	d003      	beq.n	80092aa <HAL_RCCEx_PeriphCLKConfig+0x12f6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80092a2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80092a6:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 80092aa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80092ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092b2:	2100      	movs	r1, #0
 80092b4:	61b9      	str	r1, [r7, #24]
 80092b6:	f003 0304 	and.w	r3, r3, #4
 80092ba:	61fb      	str	r3, [r7, #28]
 80092bc:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 80092c0:	460b      	mov	r3, r1
 80092c2:	4313      	orrs	r3, r2
 80092c4:	d011      	beq.n	80092ea <HAL_RCCEx_PeriphCLKConfig+0x1336>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80092c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80092ca:	3308      	adds	r3, #8
 80092cc:	2102      	movs	r1, #2
 80092ce:	4618      	mov	r0, r3
 80092d0:	f001 fa0a 	bl	800a6e8 <RCCEx_PLL2_Config>
 80092d4:	4603      	mov	r3, r0
 80092d6:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 80092da:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80092de:	2b00      	cmp	r3, #0
 80092e0:	d003      	beq.n	80092ea <HAL_RCCEx_PeriphCLKConfig+0x1336>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80092e2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80092e6:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 80092ea:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80092ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092f2:	2100      	movs	r1, #0
 80092f4:	6139      	str	r1, [r7, #16]
 80092f6:	f003 0308 	and.w	r3, r3, #8
 80092fa:	617b      	str	r3, [r7, #20]
 80092fc:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8009300:	460b      	mov	r3, r1
 8009302:	4313      	orrs	r3, r2
 8009304:	d011      	beq.n	800932a <HAL_RCCEx_PeriphCLKConfig+0x1376>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8009306:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800930a:	3328      	adds	r3, #40	; 0x28
 800930c:	2100      	movs	r1, #0
 800930e:	4618      	mov	r0, r3
 8009310:	f001 fa9c 	bl	800a84c <RCCEx_PLL3_Config>
 8009314:	4603      	mov	r3, r0
 8009316:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
  
    if (ret == HAL_OK)
 800931a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800931e:	2b00      	cmp	r3, #0
 8009320:	d003      	beq.n	800932a <HAL_RCCEx_PeriphCLKConfig+0x1376>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8009322:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8009326:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 800932a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800932e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009332:	2100      	movs	r1, #0
 8009334:	60b9      	str	r1, [r7, #8]
 8009336:	f003 0310 	and.w	r3, r3, #16
 800933a:	60fb      	str	r3, [r7, #12]
 800933c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8009340:	460b      	mov	r3, r1
 8009342:	4313      	orrs	r3, r2
 8009344:	d011      	beq.n	800936a <HAL_RCCEx_PeriphCLKConfig+0x13b6>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8009346:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800934a:	3328      	adds	r3, #40	; 0x28
 800934c:	2101      	movs	r1, #1
 800934e:	4618      	mov	r0, r3
 8009350:	f001 fa7c 	bl	800a84c <RCCEx_PLL3_Config>
 8009354:	4603      	mov	r3, r0
 8009356:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 800935a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800935e:	2b00      	cmp	r3, #0
 8009360:	d003      	beq.n	800936a <HAL_RCCEx_PeriphCLKConfig+0x13b6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8009362:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 8009366:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 800936a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800936e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009372:	2100      	movs	r1, #0
 8009374:	6039      	str	r1, [r7, #0]
 8009376:	f003 0320 	and.w	r3, r3, #32
 800937a:	607b      	str	r3, [r7, #4]
 800937c:	e9d7 1200 	ldrd	r1, r2, [r7]
 8009380:	460b      	mov	r3, r1
 8009382:	4313      	orrs	r3, r2
 8009384:	d011      	beq.n	80093aa <HAL_RCCEx_PeriphCLKConfig+0x13f6>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8009386:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800938a:	3328      	adds	r3, #40	; 0x28
 800938c:	2102      	movs	r1, #2
 800938e:	4618      	mov	r0, r3
 8009390:	f001 fa5c 	bl	800a84c <RCCEx_PLL3_Config>
 8009394:	4603      	mov	r3, r0
 8009396:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
    
    if (ret == HAL_OK)
 800939a:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 800939e:	2b00      	cmp	r3, #0
 80093a0:	d003      	beq.n	80093aa <HAL_RCCEx_PeriphCLKConfig+0x13f6>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 80093a2:	f897 3127 	ldrb.w	r3, [r7, #295]	; 0x127
 80093a6:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
    } 
  }

  if (status == HAL_OK)
 80093aa:	f897 3126 	ldrb.w	r3, [r7, #294]	; 0x126
 80093ae:	2b00      	cmp	r3, #0
 80093b0:	d101      	bne.n	80093b6 <HAL_RCCEx_PeriphCLKConfig+0x1402>
  {
    return HAL_OK;
 80093b2:	2300      	movs	r3, #0
 80093b4:	e000      	b.n	80093b8 <HAL_RCCEx_PeriphCLKConfig+0x1404>
  }
  return HAL_ERROR;
 80093b6:	2301      	movs	r3, #1
}
 80093b8:	4618      	mov	r0, r3
 80093ba:	f507 7794 	add.w	r7, r7, #296	; 0x128
 80093be:	46bd      	mov	sp, r7
 80093c0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80093c4:	58024400 	.word	0x58024400

080093c8 <HAL_RCCEx_GetPeriphCLKFreq>:
  * @retval Frequency in KHz
  *
  *  (*) : Available on some STM32H7 lines only.
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint64_t PeriphClk)
{
 80093c8:	b580      	push	{r7, lr}
 80093ca:	b090      	sub	sp, #64	; 0x40
 80093cc:	af00      	add	r7, sp, #0
 80093ce:	e9c7 0100 	strd	r0, r1, [r7]
  /* This variable is used to store the SAI and CKP clock source */
  uint32_t saiclocksource;
  uint32_t ckpclocksource;
  uint32_t srcclk;

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 80093d2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80093d6:	f5a2 7180 	sub.w	r1, r2, #256	; 0x100
 80093da:	430b      	orrs	r3, r1
 80093dc:	f040 8094 	bne.w	8009508 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
  {

    saiclocksource = __HAL_RCC_GET_SAI1_SOURCE();
 80093e0:	4b9e      	ldr	r3, [pc, #632]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80093e2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80093e4:	f003 0307 	and.w	r3, r3, #7
 80093e8:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 80093ea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80093ec:	2b04      	cmp	r3, #4
 80093ee:	f200 8087 	bhi.w	8009500 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 80093f2:	a201      	add	r2, pc, #4	; (adr r2, 80093f8 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 80093f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80093f8:	0800940d 	.word	0x0800940d
 80093fc:	08009435 	.word	0x08009435
 8009400:	0800945d 	.word	0x0800945d
 8009404:	080094f9 	.word	0x080094f9
 8009408:	08009485 	.word	0x08009485
    {
      case RCC_SAI1CLKSOURCE_PLL: /* PLL1 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 800940c:	4b93      	ldr	r3, [pc, #588]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800940e:	681b      	ldr	r3, [r3, #0]
 8009410:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009414:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009418:	d108      	bne.n	800942c <HAL_RCCEx_GetPeriphCLKFreq+0x64>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800941a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800941e:	4618      	mov	r0, r3
 8009420:	f001 f810 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009424:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009426:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009428:	f000 bd45 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 800942c:	2300      	movs	r3, #0
 800942e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009430:	f000 bd41 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009434:	4b89      	ldr	r3, [pc, #548]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009436:	681b      	ldr	r3, [r3, #0]
 8009438:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800943c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009440:	d108      	bne.n	8009454 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009442:	f107 0318 	add.w	r3, r7, #24
 8009446:	4618      	mov	r0, r3
 8009448:	f000 fd54 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 800944c:	69bb      	ldr	r3, [r7, #24]
 800944e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009450:	f000 bd31 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009454:	2300      	movs	r3, #0
 8009456:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009458:	f000 bd2d 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI1CLKSOURCE_PLL3: /* PLL3 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800945c:	4b7f      	ldr	r3, [pc, #508]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800945e:	681b      	ldr	r3, [r3, #0]
 8009460:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009464:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009468:	d108      	bne.n	800947c <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800946a:	f107 030c 	add.w	r3, r7, #12
 800946e:	4618      	mov	r0, r3
 8009470:	f000 fe94 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8009474:	68fb      	ldr	r3, [r7, #12]
 8009476:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009478:	f000 bd1d 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 800947c:	2300      	movs	r3, #0
 800947e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009480:	f000 bd19 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI1CLKSOURCE_CLKP: /* CKPER is the clock source for SAI1*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009484:	4b75      	ldr	r3, [pc, #468]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009486:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009488:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800948c:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800948e:	4b73      	ldr	r3, [pc, #460]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009490:	681b      	ldr	r3, [r3, #0]
 8009492:	f003 0304 	and.w	r3, r3, #4
 8009496:	2b04      	cmp	r3, #4
 8009498:	d10c      	bne.n	80094b4 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800949a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800949c:	2b00      	cmp	r3, #0
 800949e:	d109      	bne.n	80094b4 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80094a0:	4b6e      	ldr	r3, [pc, #440]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80094a2:	681b      	ldr	r3, [r3, #0]
 80094a4:	08db      	lsrs	r3, r3, #3
 80094a6:	f003 0303 	and.w	r3, r3, #3
 80094aa:	4a6d      	ldr	r2, [pc, #436]	; (8009660 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80094ac:	fa22 f303 	lsr.w	r3, r2, r3
 80094b0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80094b2:	e01f      	b.n	80094f4 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 80094b4:	4b69      	ldr	r3, [pc, #420]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80094b6:	681b      	ldr	r3, [r3, #0]
 80094b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80094bc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80094c0:	d106      	bne.n	80094d0 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 80094c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80094c4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80094c8:	d102      	bne.n	80094d0 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80094ca:	4b66      	ldr	r3, [pc, #408]	; (8009664 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 80094cc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80094ce:	e011      	b.n	80094f4 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80094d0:	4b62      	ldr	r3, [pc, #392]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80094d2:	681b      	ldr	r3, [r3, #0]
 80094d4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80094d8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80094dc:	d106      	bne.n	80094ec <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 80094de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80094e0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80094e4:	d102      	bne.n	80094ec <HAL_RCCEx_GetPeriphCLKFreq+0x124>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 80094e6:	4b60      	ldr	r3, [pc, #384]	; (8009668 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 80094e8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80094ea:	e003      	b.n	80094f4 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80094ec:	2300      	movs	r3, #0
 80094ee:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80094f0:	f000 bce1 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80094f4:	f000 bcdf 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case (RCC_SAI1CLKSOURCE_PIN): /* External clock is the clock source for SAI1 */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80094f8:	4b5c      	ldr	r3, [pc, #368]	; (800966c <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 80094fa:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80094fc:	f000 bcdb 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      default :
      {
        frequency = 0;
 8009500:	2300      	movs	r3, #0
 8009502:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009504:	f000 bcd7 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }

#if defined(SAI3)
  else if (PeriphClk == RCC_PERIPHCLK_SAI23)
 8009508:	e9d7 2300 	ldrd	r2, r3, [r7]
 800950c:	f5a2 7100 	sub.w	r1, r2, #512	; 0x200
 8009510:	430b      	orrs	r3, r1
 8009512:	f040 80ad 	bne.w	8009670 <HAL_RCCEx_GetPeriphCLKFreq+0x2a8>
  {

    saiclocksource = __HAL_RCC_GET_SAI23_SOURCE();
 8009516:	4b51      	ldr	r3, [pc, #324]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009518:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800951a:	f403 73e0 	and.w	r3, r3, #448	; 0x1c0
 800951e:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8009520:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009522:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009526:	d056      	beq.n	80095d6 <HAL_RCCEx_GetPeriphCLKFreq+0x20e>
 8009528:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800952a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800952e:	f200 8090 	bhi.w	8009652 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8009532:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009534:	2bc0      	cmp	r3, #192	; 0xc0
 8009536:	f000 8088 	beq.w	800964a <HAL_RCCEx_GetPeriphCLKFreq+0x282>
 800953a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800953c:	2bc0      	cmp	r3, #192	; 0xc0
 800953e:	f200 8088 	bhi.w	8009652 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8009542:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009544:	2b80      	cmp	r3, #128	; 0x80
 8009546:	d032      	beq.n	80095ae <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 8009548:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800954a:	2b80      	cmp	r3, #128	; 0x80
 800954c:	f200 8081 	bhi.w	8009652 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8009550:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009552:	2b00      	cmp	r3, #0
 8009554:	d003      	beq.n	800955e <HAL_RCCEx_GetPeriphCLKFreq+0x196>
 8009556:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009558:	2b40      	cmp	r3, #64	; 0x40
 800955a:	d014      	beq.n	8009586 <HAL_RCCEx_GetPeriphCLKFreq+0x1be>
 800955c:	e079      	b.n	8009652 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
    {
      case RCC_SAI23CLKSOURCE_PLL: /* PLL1 is the clock source for SAI2/3 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 800955e:	4b3f      	ldr	r3, [pc, #252]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009566:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800956a:	d108      	bne.n	800957e <HAL_RCCEx_GetPeriphCLKFreq+0x1b6>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800956c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009570:	4618      	mov	r0, r3
 8009572:	f000 ff67 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009576:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009578:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800957a:	f000 bc9c 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 800957e:	2300      	movs	r3, #0
 8009580:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009582:	f000 bc98 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SAI23CLKSOURCE_PLL2: /* PLL2 is the clock source for SAI2/3 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009586:	4b35      	ldr	r3, [pc, #212]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009588:	681b      	ldr	r3, [r3, #0]
 800958a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800958e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009592:	d108      	bne.n	80095a6 <HAL_RCCEx_GetPeriphCLKFreq+0x1de>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009594:	f107 0318 	add.w	r3, r7, #24
 8009598:	4618      	mov	r0, r3
 800959a:	f000 fcab 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 800959e:	69bb      	ldr	r3, [r7, #24]
 80095a0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80095a2:	f000 bc88 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 80095a6:	2300      	movs	r3, #0
 80095a8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095aa:	f000 bc84 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI23CLKSOURCE_PLL3: /* PLL3 is the clock source for SAI2/3 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80095ae:	4b2b      	ldr	r3, [pc, #172]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80095b0:	681b      	ldr	r3, [r3, #0]
 80095b2:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80095b6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80095ba:	d108      	bne.n	80095ce <HAL_RCCEx_GetPeriphCLKFreq+0x206>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80095bc:	f107 030c 	add.w	r3, r7, #12
 80095c0:	4618      	mov	r0, r3
 80095c2:	f000 fdeb 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80095c6:	68fb      	ldr	r3, [r7, #12]
 80095c8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80095ca:	f000 bc74 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 80095ce:	2300      	movs	r3, #0
 80095d0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095d2:	f000 bc70 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI23CLKSOURCE_CLKP: /* CKPER is the clock source for SAI2/3 */
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80095d6:	4b21      	ldr	r3, [pc, #132]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80095d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80095da:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80095de:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 80095e0:	4b1e      	ldr	r3, [pc, #120]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	f003 0304 	and.w	r3, r3, #4
 80095e8:	2b04      	cmp	r3, #4
 80095ea:	d10c      	bne.n	8009606 <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 80095ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80095ee:	2b00      	cmp	r3, #0
 80095f0:	d109      	bne.n	8009606 <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80095f2:	4b1a      	ldr	r3, [pc, #104]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80095f4:	681b      	ldr	r3, [r3, #0]
 80095f6:	08db      	lsrs	r3, r3, #3
 80095f8:	f003 0303 	and.w	r3, r3, #3
 80095fc:	4a18      	ldr	r2, [pc, #96]	; (8009660 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80095fe:	fa22 f303 	lsr.w	r3, r2, r3
 8009602:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009604:	e01f      	b.n	8009646 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009606:	4b15      	ldr	r3, [pc, #84]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800960e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009612:	d106      	bne.n	8009622 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 8009614:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009616:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800961a:	d102      	bne.n	8009622 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 800961c:	4b11      	ldr	r3, [pc, #68]	; (8009664 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 800961e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009620:	e011      	b.n	8009646 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009622:	4b0e      	ldr	r3, [pc, #56]	; (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009624:	681b      	ldr	r3, [r3, #0]
 8009626:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800962a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800962e:	d106      	bne.n	800963e <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 8009630:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009632:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009636:	d102      	bne.n	800963e <HAL_RCCEx_GetPeriphCLKFreq+0x276>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009638:	4b0b      	ldr	r3, [pc, #44]	; (8009668 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 800963a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800963c:	e003      	b.n	8009646 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 800963e:	2300      	movs	r3, #0
 8009640:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009642:	f000 bc38 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009646:	f000 bc36 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case (RCC_SAI23CLKSOURCE_PIN): /* External clock is the clock source for SAI2/3 */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800964a:	4b08      	ldr	r3, [pc, #32]	; (800966c <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 800964c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800964e:	f000 bc32 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      default :
      {
        frequency = 0;
 8009652:	2300      	movs	r3, #0
 8009654:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009656:	f000 bc2e 	b.w	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800965a:	bf00      	nop
 800965c:	58024400 	.word	0x58024400
 8009660:	03d09000 	.word	0x03d09000
 8009664:	003d0900 	.word	0x003d0900
 8009668:	017d7840 	.word	0x017d7840
 800966c:	00bb8000 	.word	0x00bb8000
    }
  }
#endif

#if defined(SAI4)
  else if (PeriphClk == RCC_PERIPHCLK_SAI4A)
 8009670:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009674:	f5a2 6180 	sub.w	r1, r2, #1024	; 0x400
 8009678:	430b      	orrs	r3, r1
 800967a:	f040 809c 	bne.w	80097b6 <HAL_RCCEx_GetPeriphCLKFreq+0x3ee>
  {

    saiclocksource = __HAL_RCC_GET_SAI4A_SOURCE();
 800967e:	4b9e      	ldr	r3, [pc, #632]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009680:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009682:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
 8009686:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8009688:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800968a:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800968e:	d054      	beq.n	800973a <HAL_RCCEx_GetPeriphCLKFreq+0x372>
 8009690:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009692:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8009696:	f200 808b 	bhi.w	80097b0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 800969a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800969c:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80096a0:	f000 8083 	beq.w	80097aa <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
 80096a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80096a6:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80096aa:	f200 8081 	bhi.w	80097b0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80096ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80096b0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80096b4:	d02f      	beq.n	8009716 <HAL_RCCEx_GetPeriphCLKFreq+0x34e>
 80096b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80096b8:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80096bc:	d878      	bhi.n	80097b0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80096be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d004      	beq.n	80096ce <HAL_RCCEx_GetPeriphCLKFreq+0x306>
 80096c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80096c6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80096ca:	d012      	beq.n	80096f2 <HAL_RCCEx_GetPeriphCLKFreq+0x32a>
 80096cc:	e070      	b.n	80097b0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
    {
      case RCC_SAI4ACLKSOURCE_PLL: /* PLL1 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80096ce:	4b8a      	ldr	r3, [pc, #552]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80096d6:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80096da:	d107      	bne.n	80096ec <HAL_RCCEx_GetPeriphCLKFreq+0x324>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80096dc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80096e0:	4618      	mov	r0, r3
 80096e2:	f000 feaf 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80096e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80096e8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80096ea:	e3e4      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 80096ec:	2300      	movs	r3, #0
 80096ee:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80096f0:	e3e1      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SAI4ACLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80096f2:	4b81      	ldr	r3, [pc, #516]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80096f4:	681b      	ldr	r3, [r3, #0]
 80096f6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80096fa:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80096fe:	d107      	bne.n	8009710 <HAL_RCCEx_GetPeriphCLKFreq+0x348>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009700:	f107 0318 	add.w	r3, r7, #24
 8009704:	4618      	mov	r0, r3
 8009706:	f000 fbf5 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 800970a:	69bb      	ldr	r3, [r7, #24]
 800970c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800970e:	e3d2      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009710:	2300      	movs	r3, #0
 8009712:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009714:	e3cf      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI4ACLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009716:	4b78      	ldr	r3, [pc, #480]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009718:	681b      	ldr	r3, [r3, #0]
 800971a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800971e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009722:	d107      	bne.n	8009734 <HAL_RCCEx_GetPeriphCLKFreq+0x36c>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009724:	f107 030c 	add.w	r3, r7, #12
 8009728:	4618      	mov	r0, r3
 800972a:	f000 fd37 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 800972e:	68fb      	ldr	r3, [r7, #12]
 8009730:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009732:	e3c0      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009734:	2300      	movs	r3, #0
 8009736:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009738:	e3bd      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI4ACLKSOURCE_CLKP: /* CKPER is the clock source for SAI4A*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 800973a:	4b6f      	ldr	r3, [pc, #444]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800973c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800973e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009742:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009744:	4b6c      	ldr	r3, [pc, #432]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009746:	681b      	ldr	r3, [r3, #0]
 8009748:	f003 0304 	and.w	r3, r3, #4
 800974c:	2b04      	cmp	r3, #4
 800974e:	d10c      	bne.n	800976a <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 8009750:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009752:	2b00      	cmp	r3, #0
 8009754:	d109      	bne.n	800976a <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009756:	4b68      	ldr	r3, [pc, #416]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009758:	681b      	ldr	r3, [r3, #0]
 800975a:	08db      	lsrs	r3, r3, #3
 800975c:	f003 0303 	and.w	r3, r3, #3
 8009760:	4a66      	ldr	r2, [pc, #408]	; (80098fc <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8009762:	fa22 f303 	lsr.w	r3, r2, r3
 8009766:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009768:	e01e      	b.n	80097a8 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 800976a:	4b63      	ldr	r3, [pc, #396]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800976c:	681b      	ldr	r3, [r3, #0]
 800976e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009772:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009776:	d106      	bne.n	8009786 <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 8009778:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800977a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800977e:	d102      	bne.n	8009786 <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009780:	4b5f      	ldr	r3, [pc, #380]	; (8009900 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 8009782:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009784:	e010      	b.n	80097a8 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009786:	4b5c      	ldr	r3, [pc, #368]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009788:	681b      	ldr	r3, [r3, #0]
 800978a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800978e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009792:	d106      	bne.n	80097a2 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 8009794:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009796:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800979a:	d102      	bne.n	80097a2 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 800979c:	4b59      	ldr	r3, [pc, #356]	; (8009904 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 800979e:	63fb      	str	r3, [r7, #60]	; 0x3c
 80097a0:	e002      	b.n	80097a8 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80097a2:	2300      	movs	r3, #0
 80097a4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80097a6:	e386      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80097a8:	e385      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI4ACLKSOURCE_PIN: /* External clock is the clock source for SAI4A */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80097aa:	4b57      	ldr	r3, [pc, #348]	; (8009908 <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 80097ac:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097ae:	e382      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      default :
      {
        frequency = 0;
 80097b0:	2300      	movs	r3, #0
 80097b2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097b4:	e37f      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }

  else if (PeriphClk == RCC_PERIPHCLK_SAI4B)
 80097b6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80097ba:	f5a2 6100 	sub.w	r1, r2, #2048	; 0x800
 80097be:	430b      	orrs	r3, r1
 80097c0:	f040 80a7 	bne.w	8009912 <HAL_RCCEx_GetPeriphCLKFreq+0x54a>
  {

    saiclocksource = __HAL_RCC_GET_SAI4B_SOURCE();
 80097c4:	4b4c      	ldr	r3, [pc, #304]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80097c6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80097c8:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
 80097cc:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 80097ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80097d0:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80097d4:	d055      	beq.n	8009882 <HAL_RCCEx_GetPeriphCLKFreq+0x4ba>
 80097d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80097d8:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80097dc:	f200 8096 	bhi.w	800990c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 80097e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80097e2:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80097e6:	f000 8084 	beq.w	80098f2 <HAL_RCCEx_GetPeriphCLKFreq+0x52a>
 80097ea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80097ec:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80097f0:	f200 808c 	bhi.w	800990c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 80097f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80097f6:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80097fa:	d030      	beq.n	800985e <HAL_RCCEx_GetPeriphCLKFreq+0x496>
 80097fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80097fe:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009802:	f200 8083 	bhi.w	800990c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8009806:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009808:	2b00      	cmp	r3, #0
 800980a:	d004      	beq.n	8009816 <HAL_RCCEx_GetPeriphCLKFreq+0x44e>
 800980c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800980e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8009812:	d012      	beq.n	800983a <HAL_RCCEx_GetPeriphCLKFreq+0x472>
 8009814:	e07a      	b.n	800990c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
    {
      case RCC_SAI4BCLKSOURCE_PLL: /* PLL1 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009816:	4b38      	ldr	r3, [pc, #224]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009818:	681b      	ldr	r3, [r3, #0]
 800981a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800981e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009822:	d107      	bne.n	8009834 <HAL_RCCEx_GetPeriphCLKFreq+0x46c>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009824:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009828:	4618      	mov	r0, r3
 800982a:	f000 fe0b 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 800982e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009830:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009832:	e340      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009834:	2300      	movs	r3, #0
 8009836:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009838:	e33d      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SAI4BCLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800983a:	4b2f      	ldr	r3, [pc, #188]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800983c:	681b      	ldr	r3, [r3, #0]
 800983e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009842:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009846:	d107      	bne.n	8009858 <HAL_RCCEx_GetPeriphCLKFreq+0x490>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009848:	f107 0318 	add.w	r3, r7, #24
 800984c:	4618      	mov	r0, r3
 800984e:	f000 fb51 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8009852:	69bb      	ldr	r3, [r7, #24]
 8009854:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009856:	e32e      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009858:	2300      	movs	r3, #0
 800985a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800985c:	e32b      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI4BCLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800985e:	4b26      	ldr	r3, [pc, #152]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009860:	681b      	ldr	r3, [r3, #0]
 8009862:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009866:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800986a:	d107      	bne.n	800987c <HAL_RCCEx_GetPeriphCLKFreq+0x4b4>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800986c:	f107 030c 	add.w	r3, r7, #12
 8009870:	4618      	mov	r0, r3
 8009872:	f000 fc93 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8009876:	68fb      	ldr	r3, [r7, #12]
 8009878:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800987a:	e31c      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 800987c:	2300      	movs	r3, #0
 800987e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009880:	e319      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI4BCLKSOURCE_CLKP: /* CKPER is the clock source for SAI4B*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009882:	4b1d      	ldr	r3, [pc, #116]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009884:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009886:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800988a:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800988c:	4b1a      	ldr	r3, [pc, #104]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	f003 0304 	and.w	r3, r3, #4
 8009894:	2b04      	cmp	r3, #4
 8009896:	d10c      	bne.n	80098b2 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 8009898:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800989a:	2b00      	cmp	r3, #0
 800989c:	d109      	bne.n	80098b2 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800989e:	4b16      	ldr	r3, [pc, #88]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80098a0:	681b      	ldr	r3, [r3, #0]
 80098a2:	08db      	lsrs	r3, r3, #3
 80098a4:	f003 0303 	and.w	r3, r3, #3
 80098a8:	4a14      	ldr	r2, [pc, #80]	; (80098fc <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 80098aa:	fa22 f303 	lsr.w	r3, r2, r3
 80098ae:	63fb      	str	r3, [r7, #60]	; 0x3c
 80098b0:	e01e      	b.n	80098f0 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 80098b2:	4b11      	ldr	r3, [pc, #68]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80098b4:	681b      	ldr	r3, [r3, #0]
 80098b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80098ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80098be:	d106      	bne.n	80098ce <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 80098c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80098c2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80098c6:	d102      	bne.n	80098ce <HAL_RCCEx_GetPeriphCLKFreq+0x506>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80098c8:	4b0d      	ldr	r3, [pc, #52]	; (8009900 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 80098ca:	63fb      	str	r3, [r7, #60]	; 0x3c
 80098cc:	e010      	b.n	80098f0 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80098ce:	4b0a      	ldr	r3, [pc, #40]	; (80098f8 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80098d0:	681b      	ldr	r3, [r3, #0]
 80098d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80098d6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80098da:	d106      	bne.n	80098ea <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 80098dc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80098de:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80098e2:	d102      	bne.n	80098ea <HAL_RCCEx_GetPeriphCLKFreq+0x522>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 80098e4:	4b07      	ldr	r3, [pc, #28]	; (8009904 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 80098e6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80098e8:	e002      	b.n	80098f0 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80098ea:	2300      	movs	r3, #0
 80098ec:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80098ee:	e2e2      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098f0:	e2e1      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SAI4BCLKSOURCE_PIN: /* External clock is the clock source for SAI4B */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80098f2:	4b05      	ldr	r3, [pc, #20]	; (8009908 <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 80098f4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098f6:	e2de      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098f8:	58024400 	.word	0x58024400
 80098fc:	03d09000 	.word	0x03d09000
 8009900:	003d0900 	.word	0x003d0900
 8009904:	017d7840 	.word	0x017d7840
 8009908:	00bb8000 	.word	0x00bb8000
      }

      default :
      {
        frequency = 0;
 800990c:	2300      	movs	r3, #0
 800990e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009910:	e2d1      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }
#endif /*SAI4*/
  else if (PeriphClk == RCC_PERIPHCLK_SPI123)
 8009912:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009916:	f5a2 5180 	sub.w	r1, r2, #4096	; 0x1000
 800991a:	430b      	orrs	r3, r1
 800991c:	f040 809c 	bne.w	8009a58 <HAL_RCCEx_GetPeriphCLKFreq+0x690>
  {
    /* Get SPI1/2/3 clock source */
    srcclk = __HAL_RCC_GET_SPI123_SOURCE();
 8009920:	4b93      	ldr	r3, [pc, #588]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009922:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009924:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 8009928:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 800992a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800992c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009930:	d054      	beq.n	80099dc <HAL_RCCEx_GetPeriphCLKFreq+0x614>
 8009932:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009934:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009938:	f200 808b 	bhi.w	8009a52 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 800993c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800993e:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009942:	f000 8083 	beq.w	8009a4c <HAL_RCCEx_GetPeriphCLKFreq+0x684>
 8009946:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009948:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800994c:	f200 8081 	bhi.w	8009a52 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8009950:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009952:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009956:	d02f      	beq.n	80099b8 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
 8009958:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800995a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800995e:	d878      	bhi.n	8009a52 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8009960:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009962:	2b00      	cmp	r3, #0
 8009964:	d004      	beq.n	8009970 <HAL_RCCEx_GetPeriphCLKFreq+0x5a8>
 8009966:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009968:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800996c:	d012      	beq.n	8009994 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
 800996e:	e070      	b.n	8009a52 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
    {
      case RCC_SPI123CLKSOURCE_PLL: /* PLL1 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009970:	4b7f      	ldr	r3, [pc, #508]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009972:	681b      	ldr	r3, [r3, #0]
 8009974:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009978:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800997c:	d107      	bne.n	800998e <HAL_RCCEx_GetPeriphCLKFreq+0x5c6>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800997e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009982:	4618      	mov	r0, r3
 8009984:	f000 fd5e 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009988:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800998a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800998c:	e293      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 800998e:	2300      	movs	r3, #0
 8009990:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009992:	e290      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009994:	4b76      	ldr	r3, [pc, #472]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800999c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80099a0:	d107      	bne.n	80099b2 <HAL_RCCEx_GetPeriphCLKFreq+0x5ea>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80099a2:	f107 0318 	add.w	r3, r7, #24
 80099a6:	4618      	mov	r0, r3
 80099a8:	f000 faa4 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80099ac:	69bb      	ldr	r3, [r7, #24]
 80099ae:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80099b0:	e281      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 80099b2:	2300      	movs	r3, #0
 80099b4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80099b6:	e27e      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SPI123CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80099b8:	4b6d      	ldr	r3, [pc, #436]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80099ba:	681b      	ldr	r3, [r3, #0]
 80099bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80099c0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80099c4:	d107      	bne.n	80099d6 <HAL_RCCEx_GetPeriphCLKFreq+0x60e>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80099c6:	f107 030c 	add.w	r3, r7, #12
 80099ca:	4618      	mov	r0, r3
 80099cc:	f000 fbe6 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80099d0:	68fb      	ldr	r3, [r7, #12]
 80099d2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80099d4:	e26f      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 80099d6:	2300      	movs	r3, #0
 80099d8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80099da:	e26c      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_SPI123CLKSOURCE_CLKP: /* CKPER is the clock source for SPI123 */
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80099dc:	4b64      	ldr	r3, [pc, #400]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80099de:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80099e0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80099e4:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 80099e6:	4b62      	ldr	r3, [pc, #392]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80099e8:	681b      	ldr	r3, [r3, #0]
 80099ea:	f003 0304 	and.w	r3, r3, #4
 80099ee:	2b04      	cmp	r3, #4
 80099f0:	d10c      	bne.n	8009a0c <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 80099f2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80099f4:	2b00      	cmp	r3, #0
 80099f6:	d109      	bne.n	8009a0c <HAL_RCCEx_GetPeriphCLKFreq+0x644>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80099f8:	4b5d      	ldr	r3, [pc, #372]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80099fa:	681b      	ldr	r3, [r3, #0]
 80099fc:	08db      	lsrs	r3, r3, #3
 80099fe:	f003 0303 	and.w	r3, r3, #3
 8009a02:	4a5c      	ldr	r2, [pc, #368]	; (8009b74 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8009a04:	fa22 f303 	lsr.w	r3, r2, r3
 8009a08:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a0a:	e01e      	b.n	8009a4a <HAL_RCCEx_GetPeriphCLKFreq+0x682>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009a0c:	4b58      	ldr	r3, [pc, #352]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009a0e:	681b      	ldr	r3, [r3, #0]
 8009a10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009a14:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009a18:	d106      	bne.n	8009a28 <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 8009a1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a1c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009a20:	d102      	bne.n	8009a28 <HAL_RCCEx_GetPeriphCLKFreq+0x660>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009a22:	4b55      	ldr	r3, [pc, #340]	; (8009b78 <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8009a24:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a26:	e010      	b.n	8009a4a <HAL_RCCEx_GetPeriphCLKFreq+0x682>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009a28:	4b51      	ldr	r3, [pc, #324]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009a30:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009a34:	d106      	bne.n	8009a44 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 8009a36:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a38:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009a3c:	d102      	bne.n	8009a44 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009a3e:	4b4f      	ldr	r3, [pc, #316]	; (8009b7c <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 8009a40:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a42:	e002      	b.n	8009a4a <HAL_RCCEx_GetPeriphCLKFreq+0x682>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009a44:	2300      	movs	r3, #0
 8009a46:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009a48:	e235      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009a4a:	e234      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case (RCC_SPI123CLKSOURCE_PIN): /* External clock is the clock source for I2S */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8009a4c:	4b4c      	ldr	r3, [pc, #304]	; (8009b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>)
 8009a4e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009a50:	e231      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      default :
      {
        frequency = 0;
 8009a52:	2300      	movs	r3, #0
 8009a54:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009a56:	e22e      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI45)
 8009a58:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009a5c:	f5a2 5100 	sub.w	r1, r2, #8192	; 0x2000
 8009a60:	430b      	orrs	r3, r1
 8009a62:	f040 808f 	bne.w	8009b84 <HAL_RCCEx_GetPeriphCLKFreq+0x7bc>
  {
    /* Get SPI45 clock source */
    srcclk = __HAL_RCC_GET_SPI45_SOURCE();
 8009a66:	4b42      	ldr	r3, [pc, #264]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009a68:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009a6a:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 8009a6e:	63bb      	str	r3, [r7, #56]	; 0x38
    switch (srcclk)
 8009a70:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a72:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009a76:	d06b      	beq.n	8009b50 <HAL_RCCEx_GetPeriphCLKFreq+0x788>
 8009a78:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a7a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009a7e:	d874      	bhi.n	8009b6a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009a80:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a82:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8009a86:	d056      	beq.n	8009b36 <HAL_RCCEx_GetPeriphCLKFreq+0x76e>
 8009a88:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a8a:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8009a8e:	d86c      	bhi.n	8009b6a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009a90:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a92:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8009a96:	d03b      	beq.n	8009b10 <HAL_RCCEx_GetPeriphCLKFreq+0x748>
 8009a98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a9a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8009a9e:	d864      	bhi.n	8009b6a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009aa0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009aa2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009aa6:	d021      	beq.n	8009aec <HAL_RCCEx_GetPeriphCLKFreq+0x724>
 8009aa8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009aaa:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009aae:	d85c      	bhi.n	8009b6a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009ab0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ab2:	2b00      	cmp	r3, #0
 8009ab4:	d004      	beq.n	8009ac0 <HAL_RCCEx_GetPeriphCLKFreq+0x6f8>
 8009ab6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ab8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009abc:	d004      	beq.n	8009ac8 <HAL_RCCEx_GetPeriphCLKFreq+0x700>
 8009abe:	e054      	b.n	8009b6a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
    {
      case RCC_SPI45CLKSOURCE_PCLK2: /* CD/D2 PCLK2 is the clock source for SPI4/5 */
      {
        frequency = HAL_RCC_GetPCLK1Freq();
 8009ac0:	f7fe fa62 	bl	8007f88 <HAL_RCC_GetPCLK1Freq>
 8009ac4:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8009ac6:	e1f6      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009ac8:	4b29      	ldr	r3, [pc, #164]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009aca:	681b      	ldr	r3, [r3, #0]
 8009acc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009ad0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009ad4:	d107      	bne.n	8009ae6 <HAL_RCCEx_GetPeriphCLKFreq+0x71e>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009ad6:	f107 0318 	add.w	r3, r7, #24
 8009ada:	4618      	mov	r0, r3
 8009adc:	f000 fa0a 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009ae0:	69fb      	ldr	r3, [r7, #28]
 8009ae2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009ae4:	e1e7      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009ae6:	2300      	movs	r3, #0
 8009ae8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009aea:	e1e4      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI45CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009aec:	4b20      	ldr	r3, [pc, #128]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009aee:	681b      	ldr	r3, [r3, #0]
 8009af0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009af4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009af8:	d107      	bne.n	8009b0a <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009afa:	f107 030c 	add.w	r3, r7, #12
 8009afe:	4618      	mov	r0, r3
 8009b00:	f000 fb4c 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 8009b04:	693b      	ldr	r3, [r7, #16]
 8009b06:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009b08:	e1d5      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009b0a:	2300      	movs	r3, #0
 8009b0c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b0e:	e1d2      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI45CLKSOURCE_HSI: /* HSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009b10:	4b17      	ldr	r3, [pc, #92]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009b12:	681b      	ldr	r3, [r3, #0]
 8009b14:	f003 0304 	and.w	r3, r3, #4
 8009b18:	2b04      	cmp	r3, #4
 8009b1a:	d109      	bne.n	8009b30 <HAL_RCCEx_GetPeriphCLKFreq+0x768>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009b1c:	4b14      	ldr	r3, [pc, #80]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009b1e:	681b      	ldr	r3, [r3, #0]
 8009b20:	08db      	lsrs	r3, r3, #3
 8009b22:	f003 0303 	and.w	r3, r3, #3
 8009b26:	4a13      	ldr	r2, [pc, #76]	; (8009b74 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8009b28:	fa22 f303 	lsr.w	r3, r2, r3
 8009b2c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009b2e:	e1c2      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009b30:	2300      	movs	r3, #0
 8009b32:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b34:	e1bf      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI45CLKSOURCE_CSI: /* CSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 8009b36:	4b0e      	ldr	r3, [pc, #56]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009b38:	681b      	ldr	r3, [r3, #0]
 8009b3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009b3e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009b42:	d102      	bne.n	8009b4a <HAL_RCCEx_GetPeriphCLKFreq+0x782>
        {
          frequency = CSI_VALUE;
 8009b44:	4b0c      	ldr	r3, [pc, #48]	; (8009b78 <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8009b46:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009b48:	e1b5      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009b4a:	2300      	movs	r3, #0
 8009b4c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b4e:	e1b2      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI45CLKSOURCE_HSE: /* HSE is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009b50:	4b07      	ldr	r3, [pc, #28]	; (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009b52:	681b      	ldr	r3, [r3, #0]
 8009b54:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009b58:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009b5c:	d102      	bne.n	8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0x79c>
        {
          frequency = HSE_VALUE;
 8009b5e:	4b07      	ldr	r3, [pc, #28]	; (8009b7c <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 8009b60:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009b62:	e1a8      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009b64:	2300      	movs	r3, #0
 8009b66:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b68:	e1a5      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      default :
      {
        frequency = 0;
 8009b6a:	2300      	movs	r3, #0
 8009b6c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009b6e:	e1a2      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b70:	58024400 	.word	0x58024400
 8009b74:	03d09000 	.word	0x03d09000
 8009b78:	003d0900 	.word	0x003d0900
 8009b7c:	017d7840 	.word	0x017d7840
 8009b80:	00bb8000 	.word	0x00bb8000
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADC)
 8009b84:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009b88:	f5a2 2100 	sub.w	r1, r2, #524288	; 0x80000
 8009b8c:	430b      	orrs	r3, r1
 8009b8e:	d173      	bne.n	8009c78 <HAL_RCCEx_GetPeriphCLKFreq+0x8b0>
  {
    /* Get ADC clock source */
    srcclk = __HAL_RCC_GET_ADC_SOURCE();
 8009b90:	4b9c      	ldr	r3, [pc, #624]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009b92:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b94:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8009b98:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009b9a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b9c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009ba0:	d02f      	beq.n	8009c02 <HAL_RCCEx_GetPeriphCLKFreq+0x83a>
 8009ba2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ba4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009ba8:	d863      	bhi.n	8009c72 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 8009baa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009bac:	2b00      	cmp	r3, #0
 8009bae:	d004      	beq.n	8009bba <HAL_RCCEx_GetPeriphCLKFreq+0x7f2>
 8009bb0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009bb2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009bb6:	d012      	beq.n	8009bde <HAL_RCCEx_GetPeriphCLKFreq+0x816>
 8009bb8:	e05b      	b.n	8009c72 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
    {
      case RCC_ADCCLKSOURCE_PLL2:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009bba:	4b92      	ldr	r3, [pc, #584]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009bbc:	681b      	ldr	r3, [r3, #0]
 8009bbe:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009bc2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009bc6:	d107      	bne.n	8009bd8 <HAL_RCCEx_GetPeriphCLKFreq+0x810>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009bc8:	f107 0318 	add.w	r3, r7, #24
 8009bcc:	4618      	mov	r0, r3
 8009bce:	f000 f991 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8009bd2:	69bb      	ldr	r3, [r7, #24]
 8009bd4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009bd6:	e16e      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009bd8:	2300      	movs	r3, #0
 8009bda:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009bdc:	e16b      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_ADCCLKSOURCE_PLL3:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009bde:	4b89      	ldr	r3, [pc, #548]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009be0:	681b      	ldr	r3, [r3, #0]
 8009be2:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009be6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009bea:	d107      	bne.n	8009bfc <HAL_RCCEx_GetPeriphCLKFreq+0x834>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009bec:	f107 030c 	add.w	r3, r7, #12
 8009bf0:	4618      	mov	r0, r3
 8009bf2:	f000 fad3 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_R_Frequency;
 8009bf6:	697b      	ldr	r3, [r7, #20]
 8009bf8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009bfa:	e15c      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009bfc:	2300      	movs	r3, #0
 8009bfe:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c00:	e159      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      case RCC_ADCCLKSOURCE_CLKP:
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009c02:	4b80      	ldr	r3, [pc, #512]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009c04:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009c06:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009c0a:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009c0c:	4b7d      	ldr	r3, [pc, #500]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009c0e:	681b      	ldr	r3, [r3, #0]
 8009c10:	f003 0304 	and.w	r3, r3, #4
 8009c14:	2b04      	cmp	r3, #4
 8009c16:	d10c      	bne.n	8009c32 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 8009c18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009c1a:	2b00      	cmp	r3, #0
 8009c1c:	d109      	bne.n	8009c32 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009c1e:	4b79      	ldr	r3, [pc, #484]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009c20:	681b      	ldr	r3, [r3, #0]
 8009c22:	08db      	lsrs	r3, r3, #3
 8009c24:	f003 0303 	and.w	r3, r3, #3
 8009c28:	4a77      	ldr	r2, [pc, #476]	; (8009e08 <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8009c2a:	fa22 f303 	lsr.w	r3, r2, r3
 8009c2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009c30:	e01e      	b.n	8009c70 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009c32:	4b74      	ldr	r3, [pc, #464]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009c34:	681b      	ldr	r3, [r3, #0]
 8009c36:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009c3a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009c3e:	d106      	bne.n	8009c4e <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 8009c40:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009c42:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009c46:	d102      	bne.n	8009c4e <HAL_RCCEx_GetPeriphCLKFreq+0x886>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009c48:	4b70      	ldr	r3, [pc, #448]	; (8009e0c <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 8009c4a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009c4c:	e010      	b.n	8009c70 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009c4e:	4b6d      	ldr	r3, [pc, #436]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009c50:	681b      	ldr	r3, [r3, #0]
 8009c52:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009c56:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009c5a:	d106      	bne.n	8009c6a <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 8009c5c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009c5e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009c62:	d102      	bne.n	8009c6a <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009c64:	4b6a      	ldr	r3, [pc, #424]	; (8009e10 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8009c66:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009c68:	e002      	b.n	8009c70 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009c6a:	2300      	movs	r3, #0
 8009c6c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009c6e:	e122      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009c70:	e121      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      default :
      {
        frequency = 0;
 8009c72:	2300      	movs	r3, #0
 8009c74:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009c76:	e11e      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
 8009c78:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009c7c:	f5a2 3180 	sub.w	r1, r2, #65536	; 0x10000
 8009c80:	430b      	orrs	r3, r1
 8009c82:	d133      	bne.n	8009cec <HAL_RCCEx_GetPeriphCLKFreq+0x924>
  {
    /* Get SDMMC clock source */
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 8009c84:	4b5f      	ldr	r3, [pc, #380]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009c86:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009c88:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009c8c:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009c8e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c90:	2b00      	cmp	r3, #0
 8009c92:	d004      	beq.n	8009c9e <HAL_RCCEx_GetPeriphCLKFreq+0x8d6>
 8009c94:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c96:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009c9a:	d012      	beq.n	8009cc2 <HAL_RCCEx_GetPeriphCLKFreq+0x8fa>
 8009c9c:	e023      	b.n	8009ce6 <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
    {
      case RCC_SDMMCCLKSOURCE_PLL: /* PLL1 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009c9e:	4b59      	ldr	r3, [pc, #356]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009ca0:	681b      	ldr	r3, [r3, #0]
 8009ca2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009ca6:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009caa:	d107      	bne.n	8009cbc <HAL_RCCEx_GetPeriphCLKFreq+0x8f4>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009cac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009cb0:	4618      	mov	r0, r3
 8009cb2:	f000 fbc7 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009cb6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009cb8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009cba:	e0fc      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009cbc:	2300      	movs	r3, #0
 8009cbe:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009cc0:	e0f9      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009cc2:	4b50      	ldr	r3, [pc, #320]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009cc4:	681b      	ldr	r3, [r3, #0]
 8009cc6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009cca:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009cce:	d107      	bne.n	8009ce0 <HAL_RCCEx_GetPeriphCLKFreq+0x918>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009cd0:	f107 0318 	add.w	r3, r7, #24
 8009cd4:	4618      	mov	r0, r3
 8009cd6:	f000 f90d 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_R_Frequency;
 8009cda:	6a3b      	ldr	r3, [r7, #32]
 8009cdc:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009cde:	e0ea      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009ce0:	2300      	movs	r3, #0
 8009ce2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009ce4:	e0e7      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }

      default :
      {
        frequency = 0;
 8009ce6:	2300      	movs	r3, #0
 8009ce8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009cea:	e0e4      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI6)
 8009cec:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009cf0:	f5a2 4180 	sub.w	r1, r2, #16384	; 0x4000
 8009cf4:	430b      	orrs	r3, r1
 8009cf6:	f040 808d 	bne.w	8009e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa4c>
  {
    /* Get SPI6 clock source */
    srcclk = __HAL_RCC_GET_SPI6_SOURCE();
 8009cfa:	4b42      	ldr	r3, [pc, #264]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009cfc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009cfe:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8009d02:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009d04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d06:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009d0a:	d06b      	beq.n	8009de4 <HAL_RCCEx_GetPeriphCLKFreq+0xa1c>
 8009d0c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d0e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009d12:	d874      	bhi.n	8009dfe <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009d14:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d16:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009d1a:	d056      	beq.n	8009dca <HAL_RCCEx_GetPeriphCLKFreq+0xa02>
 8009d1c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d1e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009d22:	d86c      	bhi.n	8009dfe <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009d24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d26:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009d2a:	d03b      	beq.n	8009da4 <HAL_RCCEx_GetPeriphCLKFreq+0x9dc>
 8009d2c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d2e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009d32:	d864      	bhi.n	8009dfe <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009d34:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d36:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009d3a:	d021      	beq.n	8009d80 <HAL_RCCEx_GetPeriphCLKFreq+0x9b8>
 8009d3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d3e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009d42:	d85c      	bhi.n	8009dfe <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009d44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d46:	2b00      	cmp	r3, #0
 8009d48:	d004      	beq.n	8009d54 <HAL_RCCEx_GetPeriphCLKFreq+0x98c>
 8009d4a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d4c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009d50:	d004      	beq.n	8009d5c <HAL_RCCEx_GetPeriphCLKFreq+0x994>
 8009d52:	e054      	b.n	8009dfe <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
    {
      case RCC_SPI6CLKSOURCE_D3PCLK1: /* D3PCLK1 (PCLK4) is the clock source for SPI6 */
      {
        frequency = HAL_RCCEx_GetD3PCLK1Freq();
 8009d54:	f000 f8b8 	bl	8009ec8 <HAL_RCCEx_GetD3PCLK1Freq>
 8009d58:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 8009d5a:	e0ac      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009d5c:	4b29      	ldr	r3, [pc, #164]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009d5e:	681b      	ldr	r3, [r3, #0]
 8009d60:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009d64:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009d68:	d107      	bne.n	8009d7a <HAL_RCCEx_GetPeriphCLKFreq+0x9b2>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009d6a:	f107 0318 	add.w	r3, r7, #24
 8009d6e:	4618      	mov	r0, r3
 8009d70:	f000 f8c0 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009d74:	69fb      	ldr	r3, [r7, #28]
 8009d76:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009d78:	e09d      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009d7a:	2300      	movs	r3, #0
 8009d7c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009d7e:	e09a      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI6CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009d80:	4b20      	ldr	r3, [pc, #128]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009d82:	681b      	ldr	r3, [r3, #0]
 8009d84:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009d88:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009d8c:	d107      	bne.n	8009d9e <HAL_RCCEx_GetPeriphCLKFreq+0x9d6>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009d8e:	f107 030c 	add.w	r3, r7, #12
 8009d92:	4618      	mov	r0, r3
 8009d94:	f000 fa02 	bl	800a19c <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 8009d98:	693b      	ldr	r3, [r7, #16]
 8009d9a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009d9c:	e08b      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009d9e:	2300      	movs	r3, #0
 8009da0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009da2:	e088      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI6CLKSOURCE_HSI: /* HSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009da4:	4b17      	ldr	r3, [pc, #92]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009da6:	681b      	ldr	r3, [r3, #0]
 8009da8:	f003 0304 	and.w	r3, r3, #4
 8009dac:	2b04      	cmp	r3, #4
 8009dae:	d109      	bne.n	8009dc4 <HAL_RCCEx_GetPeriphCLKFreq+0x9fc>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009db0:	4b14      	ldr	r3, [pc, #80]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009db2:	681b      	ldr	r3, [r3, #0]
 8009db4:	08db      	lsrs	r3, r3, #3
 8009db6:	f003 0303 	and.w	r3, r3, #3
 8009dba:	4a13      	ldr	r2, [pc, #76]	; (8009e08 <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8009dbc:	fa22 f303 	lsr.w	r3, r2, r3
 8009dc0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009dc2:	e078      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009dc4:	2300      	movs	r3, #0
 8009dc6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009dc8:	e075      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI6CLKSOURCE_CSI: /* CSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 8009dca:	4b0e      	ldr	r3, [pc, #56]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009dcc:	681b      	ldr	r3, [r3, #0]
 8009dce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009dd2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009dd6:	d102      	bne.n	8009dde <HAL_RCCEx_GetPeriphCLKFreq+0xa16>
        {
          frequency = CSI_VALUE;
 8009dd8:	4b0c      	ldr	r3, [pc, #48]	; (8009e0c <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 8009dda:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009ddc:	e06b      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009dde:	2300      	movs	r3, #0
 8009de0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009de2:	e068      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_SPI6CLKSOURCE_HSE: /* HSE is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009de4:	4b07      	ldr	r3, [pc, #28]	; (8009e04 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009de6:	681b      	ldr	r3, [r3, #0]
 8009de8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009dec:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009df0:	d102      	bne.n	8009df8 <HAL_RCCEx_GetPeriphCLKFreq+0xa30>
        {
          frequency = HSE_VALUE;
 8009df2:	4b07      	ldr	r3, [pc, #28]	; (8009e10 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8009df4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009df6:	e05e      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009df8:	2300      	movs	r3, #0
 8009dfa:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009dfc:	e05b      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
        break;
      }
#endif /* RCC_SPI6CLKSOURCE_PIN */
      default :
      {
        frequency = 0;
 8009dfe:	2300      	movs	r3, #0
 8009e00:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009e02:	e058      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009e04:	58024400 	.word	0x58024400
 8009e08:	03d09000 	.word	0x03d09000
 8009e0c:	003d0900 	.word	0x003d0900
 8009e10:	017d7840 	.word	0x017d7840
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN)
 8009e14:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009e18:	f5a2 4100 	sub.w	r1, r2, #32768	; 0x8000
 8009e1c:	430b      	orrs	r3, r1
 8009e1e:	d148      	bne.n	8009eb2 <HAL_RCCEx_GetPeriphCLKFreq+0xaea>
  {
    /* Get FDCAN clock source */
    srcclk = __HAL_RCC_GET_FDCAN_SOURCE();
 8009e20:	4b27      	ldr	r3, [pc, #156]	; (8009ec0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009e22:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009e24:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009e28:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009e2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e2c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009e30:	d02a      	beq.n	8009e88 <HAL_RCCEx_GetPeriphCLKFreq+0xac0>
 8009e32:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e34:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009e38:	d838      	bhi.n	8009eac <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 8009e3a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e3c:	2b00      	cmp	r3, #0
 8009e3e:	d004      	beq.n	8009e4a <HAL_RCCEx_GetPeriphCLKFreq+0xa82>
 8009e40:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e42:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009e46:	d00d      	beq.n	8009e64 <HAL_RCCEx_GetPeriphCLKFreq+0xa9c>
 8009e48:	e030      	b.n	8009eac <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
    {
      case RCC_FDCANCLKSOURCE_HSE: /* HSE is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009e4a:	4b1d      	ldr	r3, [pc, #116]	; (8009ec0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009e4c:	681b      	ldr	r3, [r3, #0]
 8009e4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009e52:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009e56:	d102      	bne.n	8009e5e <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
        {
          frequency = HSE_VALUE;
 8009e58:	4b1a      	ldr	r3, [pc, #104]	; (8009ec4 <HAL_RCCEx_GetPeriphCLKFreq+0xafc>)
 8009e5a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009e5c:	e02b      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009e5e:	2300      	movs	r3, #0
 8009e60:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009e62:	e028      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_FDCANCLKSOURCE_PLL: /* PLL is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009e64:	4b16      	ldr	r3, [pc, #88]	; (8009ec0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009e66:	681b      	ldr	r3, [r3, #0]
 8009e68:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009e6c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009e70:	d107      	bne.n	8009e82 <HAL_RCCEx_GetPeriphCLKFreq+0xaba>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009e72:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009e76:	4618      	mov	r0, r3
 8009e78:	f000 fae4 	bl	800a444 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009e7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e7e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009e80:	e019      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009e82:	2300      	movs	r3, #0
 8009e84:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009e86:	e016      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8009e88:	4b0d      	ldr	r3, [pc, #52]	; (8009ec0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009e8a:	681b      	ldr	r3, [r3, #0]
 8009e8c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009e90:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009e94:	d107      	bne.n	8009ea6 <HAL_RCCEx_GetPeriphCLKFreq+0xade>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009e96:	f107 0318 	add.w	r3, r7, #24
 8009e9a:	4618      	mov	r0, r3
 8009e9c:	f000 f82a 	bl	8009ef4 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009ea0:	69fb      	ldr	r3, [r7, #28]
 8009ea2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009ea4:	e007      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
          frequency = 0;
 8009ea6:	2300      	movs	r3, #0
 8009ea8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009eaa:	e004      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
      default :
      {
        frequency = 0;
 8009eac:	2300      	movs	r3, #0
 8009eae:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009eb0:	e001      	b.n	8009eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
      }
    }
  }
  else
  {
    frequency = 0;
 8009eb2:	2300      	movs	r3, #0
 8009eb4:	63fb      	str	r3, [r7, #60]	; 0x3c
  }

  return frequency;
 8009eb6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 8009eb8:	4618      	mov	r0, r3
 8009eba:	3740      	adds	r7, #64	; 0x40
 8009ebc:	46bd      	mov	sp, r7
 8009ebe:	bd80      	pop	{r7, pc}
 8009ec0:	58024400 	.word	0x58024400
 8009ec4:	017d7840 	.word	0x017d7840

08009ec8 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 8009ec8:	b580      	push	{r7, lr}
 8009eca:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 8009ecc:	f7fe f82c 	bl	8007f28 <HAL_RCC_GetHCLKFreq>
 8009ed0:	4602      	mov	r2, r0
 8009ed2:	4b06      	ldr	r3, [pc, #24]	; (8009eec <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8009ed4:	6a1b      	ldr	r3, [r3, #32]
 8009ed6:	091b      	lsrs	r3, r3, #4
 8009ed8:	f003 0307 	and.w	r3, r3, #7
 8009edc:	4904      	ldr	r1, [pc, #16]	; (8009ef0 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8009ede:	5ccb      	ldrb	r3, [r1, r3]
 8009ee0:	f003 031f 	and.w	r3, r3, #31
 8009ee4:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8009ee8:	4618      	mov	r0, r3
 8009eea:	bd80      	pop	{r7, pc}
 8009eec:	58024400 	.word	0x58024400
 8009ef0:	08027f88 	.word	0x08027f88

08009ef4 <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 8009ef4:	b480      	push	{r7}
 8009ef6:	b089      	sub	sp, #36	; 0x24
 8009ef8:	af00      	add	r7, sp, #0
 8009efa:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009efc:	4ba1      	ldr	r3, [pc, #644]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009efe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f00:	f003 0303 	and.w	r3, r3, #3
 8009f04:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 8009f06:	4b9f      	ldr	r3, [pc, #636]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f0a:	0b1b      	lsrs	r3, r3, #12
 8009f0c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009f10:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 8009f12:	4b9c      	ldr	r3, [pc, #624]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f16:	091b      	lsrs	r3, r3, #4
 8009f18:	f003 0301 	and.w	r3, r3, #1
 8009f1c:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 8009f1e:	4b99      	ldr	r3, [pc, #612]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009f22:	08db      	lsrs	r3, r3, #3
 8009f24:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009f28:	693a      	ldr	r2, [r7, #16]
 8009f2a:	fb02 f303 	mul.w	r3, r2, r3
 8009f2e:	ee07 3a90 	vmov	s15, r3
 8009f32:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f36:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8009f3a:	697b      	ldr	r3, [r7, #20]
 8009f3c:	2b00      	cmp	r3, #0
 8009f3e:	f000 8111 	beq.w	800a164 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 8009f42:	69bb      	ldr	r3, [r7, #24]
 8009f44:	2b02      	cmp	r3, #2
 8009f46:	f000 8083 	beq.w	800a050 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009f4a:	69bb      	ldr	r3, [r7, #24]
 8009f4c:	2b02      	cmp	r3, #2
 8009f4e:	f200 80a1 	bhi.w	800a094 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009f52:	69bb      	ldr	r3, [r7, #24]
 8009f54:	2b00      	cmp	r3, #0
 8009f56:	d003      	beq.n	8009f60 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009f58:	69bb      	ldr	r3, [r7, #24]
 8009f5a:	2b01      	cmp	r3, #1
 8009f5c:	d056      	beq.n	800a00c <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009f5e:	e099      	b.n	800a094 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009f60:	4b88      	ldr	r3, [pc, #544]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f62:	681b      	ldr	r3, [r3, #0]
 8009f64:	f003 0320 	and.w	r3, r3, #32
 8009f68:	2b00      	cmp	r3, #0
 8009f6a:	d02d      	beq.n	8009fc8 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009f6c:	4b85      	ldr	r3, [pc, #532]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f6e:	681b      	ldr	r3, [r3, #0]
 8009f70:	08db      	lsrs	r3, r3, #3
 8009f72:	f003 0303 	and.w	r3, r3, #3
 8009f76:	4a84      	ldr	r2, [pc, #528]	; (800a188 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8009f78:	fa22 f303 	lsr.w	r3, r2, r3
 8009f7c:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009f7e:	68bb      	ldr	r3, [r7, #8]
 8009f80:	ee07 3a90 	vmov	s15, r3
 8009f84:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f88:	697b      	ldr	r3, [r7, #20]
 8009f8a:	ee07 3a90 	vmov	s15, r3
 8009f8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f92:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f96:	4b7b      	ldr	r3, [pc, #492]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f9a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f9e:	ee07 3a90 	vmov	s15, r3
 8009fa2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fa6:	ed97 6a03 	vldr	s12, [r7, #12]
 8009faa:	eddf 5a78 	vldr	s11, [pc, #480]	; 800a18c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009fae:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009fb2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009fb6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009fba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fbe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009fc2:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8009fc6:	e087      	b.n	800a0d8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009fc8:	697b      	ldr	r3, [r7, #20]
 8009fca:	ee07 3a90 	vmov	s15, r3
 8009fce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009fd2:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800a190 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8009fd6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009fda:	4b6a      	ldr	r3, [pc, #424]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009fdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009fde:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009fe2:	ee07 3a90 	vmov	s15, r3
 8009fe6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fea:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fee:	eddf 5a67 	vldr	s11, [pc, #412]	; 800a18c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009ff2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009ff6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009ffa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009ffe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a002:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a006:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a00a:	e065      	b.n	800a0d8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 800a00c:	697b      	ldr	r3, [r7, #20]
 800a00e:	ee07 3a90 	vmov	s15, r3
 800a012:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a016:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800a194 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800a01a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a01e:	4b59      	ldr	r3, [pc, #356]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a020:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a022:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a026:	ee07 3a90 	vmov	s15, r3
 800a02a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a02e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a032:	eddf 5a56 	vldr	s11, [pc, #344]	; 800a18c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a036:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a03a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a03e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a042:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a046:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a04a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a04e:	e043      	b.n	800a0d8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 800a050:	697b      	ldr	r3, [r7, #20]
 800a052:	ee07 3a90 	vmov	s15, r3
 800a056:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a05a:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800a198 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800a05e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a062:	4b48      	ldr	r3, [pc, #288]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a064:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a066:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a06a:	ee07 3a90 	vmov	s15, r3
 800a06e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a072:	ed97 6a03 	vldr	s12, [r7, #12]
 800a076:	eddf 5a45 	vldr	s11, [pc, #276]	; 800a18c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a07a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a07e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a082:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a086:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a08a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a08e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a092:	e021      	b.n	800a0d8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 800a094:	697b      	ldr	r3, [r7, #20]
 800a096:	ee07 3a90 	vmov	s15, r3
 800a09a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a09e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800a194 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800a0a2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a0a6:	4b37      	ldr	r3, [pc, #220]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a0a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a0aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a0ae:	ee07 3a90 	vmov	s15, r3
 800a0b2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a0b6:	ed97 6a03 	vldr	s12, [r7, #12]
 800a0ba:	eddf 5a34 	vldr	s11, [pc, #208]	; 800a18c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a0be:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a0c2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a0c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a0ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a0d2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a0d6:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 800a0d8:	4b2a      	ldr	r3, [pc, #168]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a0da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a0dc:	0a5b      	lsrs	r3, r3, #9
 800a0de:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a0e2:	ee07 3a90 	vmov	s15, r3
 800a0e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a0ee:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a0f2:	edd7 6a07 	vldr	s13, [r7, #28]
 800a0f6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a0fa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a0fe:	ee17 2a90 	vmov	r2, s15
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 800a106:	4b1f      	ldr	r3, [pc, #124]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a10a:	0c1b      	lsrs	r3, r3, #16
 800a10c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a110:	ee07 3a90 	vmov	s15, r3
 800a114:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a118:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a11c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a120:	edd7 6a07 	vldr	s13, [r7, #28]
 800a124:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a128:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a12c:	ee17 2a90 	vmov	r2, s15
 800a130:	687b      	ldr	r3, [r7, #4]
 800a132:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 800a134:	4b13      	ldr	r3, [pc, #76]	; (800a184 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a136:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a138:	0e1b      	lsrs	r3, r3, #24
 800a13a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a13e:	ee07 3a90 	vmov	s15, r3
 800a142:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a146:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a14a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a14e:	edd7 6a07 	vldr	s13, [r7, #28]
 800a152:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a156:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a15a:	ee17 2a90 	vmov	r2, s15
 800a15e:	687b      	ldr	r3, [r7, #4]
 800a160:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 800a162:	e008      	b.n	800a176 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 800a164:	687b      	ldr	r3, [r7, #4]
 800a166:	2200      	movs	r2, #0
 800a168:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	2200      	movs	r2, #0
 800a16e:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	2200      	movs	r2, #0
 800a174:	609a      	str	r2, [r3, #8]
}
 800a176:	bf00      	nop
 800a178:	3724      	adds	r7, #36	; 0x24
 800a17a:	46bd      	mov	sp, r7
 800a17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a180:	4770      	bx	lr
 800a182:	bf00      	nop
 800a184:	58024400 	.word	0x58024400
 800a188:	03d09000 	.word	0x03d09000
 800a18c:	46000000 	.word	0x46000000
 800a190:	4c742400 	.word	0x4c742400
 800a194:	4a742400 	.word	0x4a742400
 800a198:	4bbebc20 	.word	0x4bbebc20

0800a19c <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 800a19c:	b480      	push	{r7}
 800a19e:	b089      	sub	sp, #36	; 0x24
 800a1a0:	af00      	add	r7, sp, #0
 800a1a2:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800a1a4:	4ba1      	ldr	r3, [pc, #644]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a1a8:	f003 0303 	and.w	r3, r3, #3
 800a1ac:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 800a1ae:	4b9f      	ldr	r3, [pc, #636]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a1b2:	0d1b      	lsrs	r3, r3, #20
 800a1b4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a1b8:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 800a1ba:	4b9c      	ldr	r3, [pc, #624]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1be:	0a1b      	lsrs	r3, r3, #8
 800a1c0:	f003 0301 	and.w	r3, r3, #1
 800a1c4:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 800a1c6:	4b99      	ldr	r3, [pc, #612]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a1ca:	08db      	lsrs	r3, r3, #3
 800a1cc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a1d0:	693a      	ldr	r2, [r7, #16]
 800a1d2:	fb02 f303 	mul.w	r3, r2, r3
 800a1d6:	ee07 3a90 	vmov	s15, r3
 800a1da:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a1de:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 800a1e2:	697b      	ldr	r3, [r7, #20]
 800a1e4:	2b00      	cmp	r3, #0
 800a1e6:	f000 8111 	beq.w	800a40c <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 800a1ea:	69bb      	ldr	r3, [r7, #24]
 800a1ec:	2b02      	cmp	r3, #2
 800a1ee:	f000 8083 	beq.w	800a2f8 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800a1f2:	69bb      	ldr	r3, [r7, #24]
 800a1f4:	2b02      	cmp	r3, #2
 800a1f6:	f200 80a1 	bhi.w	800a33c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800a1fa:	69bb      	ldr	r3, [r7, #24]
 800a1fc:	2b00      	cmp	r3, #0
 800a1fe:	d003      	beq.n	800a208 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800a200:	69bb      	ldr	r3, [r7, #24]
 800a202:	2b01      	cmp	r3, #1
 800a204:	d056      	beq.n	800a2b4 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 800a206:	e099      	b.n	800a33c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800a208:	4b88      	ldr	r3, [pc, #544]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a20a:	681b      	ldr	r3, [r3, #0]
 800a20c:	f003 0320 	and.w	r3, r3, #32
 800a210:	2b00      	cmp	r3, #0
 800a212:	d02d      	beq.n	800a270 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800a214:	4b85      	ldr	r3, [pc, #532]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a216:	681b      	ldr	r3, [r3, #0]
 800a218:	08db      	lsrs	r3, r3, #3
 800a21a:	f003 0303 	and.w	r3, r3, #3
 800a21e:	4a84      	ldr	r2, [pc, #528]	; (800a430 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800a220:	fa22 f303 	lsr.w	r3, r2, r3
 800a224:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a226:	68bb      	ldr	r3, [r7, #8]
 800a228:	ee07 3a90 	vmov	s15, r3
 800a22c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a230:	697b      	ldr	r3, [r7, #20]
 800a232:	ee07 3a90 	vmov	s15, r3
 800a236:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a23a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a23e:	4b7b      	ldr	r3, [pc, #492]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a240:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a242:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a246:	ee07 3a90 	vmov	s15, r3
 800a24a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a24e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a252:	eddf 5a78 	vldr	s11, [pc, #480]	; 800a434 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a256:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a25a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a25e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a262:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a266:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a26a:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 800a26e:	e087      	b.n	800a380 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a270:	697b      	ldr	r3, [r7, #20]
 800a272:	ee07 3a90 	vmov	s15, r3
 800a276:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a27a:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800a438 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800a27e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a282:	4b6a      	ldr	r3, [pc, #424]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a284:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a286:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a28a:	ee07 3a90 	vmov	s15, r3
 800a28e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a292:	ed97 6a03 	vldr	s12, [r7, #12]
 800a296:	eddf 5a67 	vldr	s11, [pc, #412]	; 800a434 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a29a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a29e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a2a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a2a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a2ae:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a2b2:	e065      	b.n	800a380 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a2b4:	697b      	ldr	r3, [r7, #20]
 800a2b6:	ee07 3a90 	vmov	s15, r3
 800a2ba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a2be:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800a43c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a2c2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a2c6:	4b59      	ldr	r3, [pc, #356]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a2c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2ca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a2ce:	ee07 3a90 	vmov	s15, r3
 800a2d2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a2d6:	ed97 6a03 	vldr	s12, [r7, #12]
 800a2da:	eddf 5a56 	vldr	s11, [pc, #344]	; 800a434 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a2de:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a2e2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a2e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a2ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a2f2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a2f6:	e043      	b.n	800a380 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a2f8:	697b      	ldr	r3, [r7, #20]
 800a2fa:	ee07 3a90 	vmov	s15, r3
 800a2fe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a302:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800a440 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800a306:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a30a:	4b48      	ldr	r3, [pc, #288]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a30c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a30e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a312:	ee07 3a90 	vmov	s15, r3
 800a316:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a31a:	ed97 6a03 	vldr	s12, [r7, #12]
 800a31e:	eddf 5a45 	vldr	s11, [pc, #276]	; 800a434 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a322:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a326:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a32a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a32e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a332:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a336:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a33a:	e021      	b.n	800a380 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800a33c:	697b      	ldr	r3, [r7, #20]
 800a33e:	ee07 3a90 	vmov	s15, r3
 800a342:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a346:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800a43c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a34a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a34e:	4b37      	ldr	r3, [pc, #220]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a350:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a352:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a356:	ee07 3a90 	vmov	s15, r3
 800a35a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a35e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a362:	eddf 5a34 	vldr	s11, [pc, #208]	; 800a434 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a366:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a36a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a36e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a372:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a376:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a37a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a37e:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 800a380:	4b2a      	ldr	r3, [pc, #168]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a382:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a384:	0a5b      	lsrs	r3, r3, #9
 800a386:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a38a:	ee07 3a90 	vmov	s15, r3
 800a38e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a392:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a396:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a39a:	edd7 6a07 	vldr	s13, [r7, #28]
 800a39e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a3a2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a3a6:	ee17 2a90 	vmov	r2, s15
 800a3aa:	687b      	ldr	r3, [r7, #4]
 800a3ac:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 800a3ae:	4b1f      	ldr	r3, [pc, #124]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a3b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a3b2:	0c1b      	lsrs	r3, r3, #16
 800a3b4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a3b8:	ee07 3a90 	vmov	s15, r3
 800a3bc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a3c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a3c4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a3c8:	edd7 6a07 	vldr	s13, [r7, #28]
 800a3cc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a3d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a3d4:	ee17 2a90 	vmov	r2, s15
 800a3d8:	687b      	ldr	r3, [r7, #4]
 800a3da:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 800a3dc:	4b13      	ldr	r3, [pc, #76]	; (800a42c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a3de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a3e0:	0e1b      	lsrs	r3, r3, #24
 800a3e2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a3e6:	ee07 3a90 	vmov	s15, r3
 800a3ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a3ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a3f2:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a3f6:	edd7 6a07 	vldr	s13, [r7, #28]
 800a3fa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a3fe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a402:	ee17 2a90 	vmov	r2, s15
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 800a40a:	e008      	b.n	800a41e <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	2200      	movs	r2, #0
 800a410:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	2200      	movs	r2, #0
 800a416:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	2200      	movs	r2, #0
 800a41c:	609a      	str	r2, [r3, #8]
}
 800a41e:	bf00      	nop
 800a420:	3724      	adds	r7, #36	; 0x24
 800a422:	46bd      	mov	sp, r7
 800a424:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a428:	4770      	bx	lr
 800a42a:	bf00      	nop
 800a42c:	58024400 	.word	0x58024400
 800a430:	03d09000 	.word	0x03d09000
 800a434:	46000000 	.word	0x46000000
 800a438:	4c742400 	.word	0x4c742400
 800a43c:	4a742400 	.word	0x4a742400
 800a440:	4bbebc20 	.word	0x4bbebc20

0800a444 <HAL_RCCEx_GetPLL1ClockFreq>:
  *         right PLL1CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL1_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL1ClockFreq(PLL1_ClocksTypeDef *PLL1_Clocks)
{
 800a444:	b480      	push	{r7}
 800a446:	b089      	sub	sp, #36	; 0x24
 800a448:	af00      	add	r7, sp, #0
 800a44a:	6078      	str	r0, [r7, #4]
  uint32_t pllsource, pll1m, pll1fracen, hsivalue;
  float_t fracn1, pll1vco;

  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800a44c:	4ba0      	ldr	r3, [pc, #640]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a44e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a450:	f003 0303 	and.w	r3, r3, #3
 800a454:	61bb      	str	r3, [r7, #24]
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 800a456:	4b9e      	ldr	r3, [pc, #632]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a458:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a45a:	091b      	lsrs	r3, r3, #4
 800a45c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a460:	617b      	str	r3, [r7, #20]
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
 800a462:	4b9b      	ldr	r3, [pc, #620]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a466:	f003 0301 	and.w	r3, r3, #1
 800a46a:	613b      	str	r3, [r7, #16]
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 800a46c:	4b98      	ldr	r3, [pc, #608]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a46e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a470:	08db      	lsrs	r3, r3, #3
 800a472:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a476:	693a      	ldr	r2, [r7, #16]
 800a478:	fb02 f303 	mul.w	r3, r2, r3
 800a47c:	ee07 3a90 	vmov	s15, r3
 800a480:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a484:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll1m != 0U)
 800a488:	697b      	ldr	r3, [r7, #20]
 800a48a:	2b00      	cmp	r3, #0
 800a48c:	f000 8111 	beq.w	800a6b2 <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
  {
    switch (pllsource)
 800a490:	69bb      	ldr	r3, [r7, #24]
 800a492:	2b02      	cmp	r3, #2
 800a494:	f000 8083 	beq.w	800a59e <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 800a498:	69bb      	ldr	r3, [r7, #24]
 800a49a:	2b02      	cmp	r3, #2
 800a49c:	f200 80a1 	bhi.w	800a5e2 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800a4a0:	69bb      	ldr	r3, [r7, #24]
 800a4a2:	2b00      	cmp	r3, #0
 800a4a4:	d003      	beq.n	800a4ae <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 800a4a6:	69bb      	ldr	r3, [r7, #24]
 800a4a8:	2b01      	cmp	r3, #1
 800a4aa:	d056      	beq.n	800a55a <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 800a4ac:	e099      	b.n	800a5e2 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800a4ae:	4b88      	ldr	r3, [pc, #544]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a4b0:	681b      	ldr	r3, [r3, #0]
 800a4b2:	f003 0320 	and.w	r3, r3, #32
 800a4b6:	2b00      	cmp	r3, #0
 800a4b8:	d02d      	beq.n	800a516 <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800a4ba:	4b85      	ldr	r3, [pc, #532]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a4bc:	681b      	ldr	r3, [r3, #0]
 800a4be:	08db      	lsrs	r3, r3, #3
 800a4c0:	f003 0303 	and.w	r3, r3, #3
 800a4c4:	4a83      	ldr	r2, [pc, #524]	; (800a6d4 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 800a4c6:	fa22 f303 	lsr.w	r3, r2, r3
 800a4ca:	60bb      	str	r3, [r7, #8]
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a4cc:	68bb      	ldr	r3, [r7, #8]
 800a4ce:	ee07 3a90 	vmov	s15, r3
 800a4d2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a4d6:	697b      	ldr	r3, [r7, #20]
 800a4d8:	ee07 3a90 	vmov	s15, r3
 800a4dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a4e0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a4e4:	4b7a      	ldr	r3, [pc, #488]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a4e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a4e8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a4ec:	ee07 3a90 	vmov	s15, r3
 800a4f0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a4f4:	ed97 6a03 	vldr	s12, [r7, #12]
 800a4f8:	eddf 5a77 	vldr	s11, [pc, #476]	; 800a6d8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a4fc:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a500:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a504:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a508:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a50c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a510:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
        }
        break;
 800a514:	e087      	b.n	800a626 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a516:	697b      	ldr	r3, [r7, #20]
 800a518:	ee07 3a90 	vmov	s15, r3
 800a51c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a520:	eddf 6a6e 	vldr	s13, [pc, #440]	; 800a6dc <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a524:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a528:	4b69      	ldr	r3, [pc, #420]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a52a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a52c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a530:	ee07 3a90 	vmov	s15, r3
 800a534:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a538:	ed97 6a03 	vldr	s12, [r7, #12]
 800a53c:	eddf 5a66 	vldr	s11, [pc, #408]	; 800a6d8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a540:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a544:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a548:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a54c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a550:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a554:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a558:	e065      	b.n	800a626 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll1vco = ((float_t)CSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a55a:	697b      	ldr	r3, [r7, #20]
 800a55c:	ee07 3a90 	vmov	s15, r3
 800a560:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a564:	eddf 6a5e 	vldr	s13, [pc, #376]	; 800a6e0 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 800a568:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a56c:	4b58      	ldr	r3, [pc, #352]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a56e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a570:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a574:	ee07 3a90 	vmov	s15, r3
 800a578:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a57c:	ed97 6a03 	vldr	s12, [r7, #12]
 800a580:	eddf 5a55 	vldr	s11, [pc, #340]	; 800a6d8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a584:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a588:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a58c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a590:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a594:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a598:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a59c:	e043      	b.n	800a626 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a59e:	697b      	ldr	r3, [r7, #20]
 800a5a0:	ee07 3a90 	vmov	s15, r3
 800a5a4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a5a8:	eddf 6a4e 	vldr	s13, [pc, #312]	; 800a6e4 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 800a5ac:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a5b0:	4b47      	ldr	r3, [pc, #284]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a5b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a5b8:	ee07 3a90 	vmov	s15, r3
 800a5bc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a5c0:	ed97 6a03 	vldr	s12, [r7, #12]
 800a5c4:	eddf 5a44 	vldr	s11, [pc, #272]	; 800a6d8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a5c8:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a5cc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a5d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a5d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a5d8:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a5dc:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a5e0:	e021      	b.n	800a626 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      default:
        pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a5e2:	697b      	ldr	r3, [r7, #20]
 800a5e4:	ee07 3a90 	vmov	s15, r3
 800a5e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a5ec:	eddf 6a3b 	vldr	s13, [pc, #236]	; 800a6dc <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a5f0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a5f4:	4b36      	ldr	r3, [pc, #216]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a5f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5f8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a5fc:	ee07 3a90 	vmov	s15, r3
 800a600:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a604:	ed97 6a03 	vldr	s12, [r7, #12]
 800a608:	eddf 5a33 	vldr	s11, [pc, #204]	; 800a6d8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a60c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a610:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a614:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a618:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a61c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a620:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a624:	bf00      	nop
    }

    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
 800a626:	4b2a      	ldr	r3, [pc, #168]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a628:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a62a:	0a5b      	lsrs	r3, r3, #9
 800a62c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a630:	ee07 3a90 	vmov	s15, r3
 800a634:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a638:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a63c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a640:	edd7 6a07 	vldr	s13, [r7, #28]
 800a644:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a648:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a64c:	ee17 2a90 	vmov	r2, s15
 800a650:	687b      	ldr	r3, [r7, #4]
 800a652:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> 16) + (float_t)1)) ;
 800a654:	4b1e      	ldr	r3, [pc, #120]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a656:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a658:	0c1b      	lsrs	r3, r3, #16
 800a65a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a65e:	ee07 3a90 	vmov	s15, r3
 800a662:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a666:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a66a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a66e:	edd7 6a07 	vldr	s13, [r7, #28]
 800a672:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a676:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a67a:	ee17 2a90 	vmov	r2, s15
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
 800a682:	4b13      	ldr	r3, [pc, #76]	; (800a6d0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a684:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a686:	0e1b      	lsrs	r3, r3, #24
 800a688:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a68c:	ee07 3a90 	vmov	s15, r3
 800a690:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a694:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a698:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a69c:	edd7 6a07 	vldr	s13, [r7, #28]
 800a6a0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a6a4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a6a8:	ee17 2a90 	vmov	r2, s15
 800a6ac:	687b      	ldr	r3, [r7, #4]
 800a6ae:	609a      	str	r2, [r3, #8]
    PLL1_Clocks->PLL1_P_Frequency = 0U;
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
    PLL1_Clocks->PLL1_R_Frequency = 0U;
  }

}
 800a6b0:	e008      	b.n	800a6c4 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
    PLL1_Clocks->PLL1_P_Frequency = 0U;
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	2200      	movs	r2, #0
 800a6b6:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
 800a6b8:	687b      	ldr	r3, [r7, #4]
 800a6ba:	2200      	movs	r2, #0
 800a6bc:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = 0U;
 800a6be:	687b      	ldr	r3, [r7, #4]
 800a6c0:	2200      	movs	r2, #0
 800a6c2:	609a      	str	r2, [r3, #8]
}
 800a6c4:	bf00      	nop
 800a6c6:	3724      	adds	r7, #36	; 0x24
 800a6c8:	46bd      	mov	sp, r7
 800a6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ce:	4770      	bx	lr
 800a6d0:	58024400 	.word	0x58024400
 800a6d4:	03d09000 	.word	0x03d09000
 800a6d8:	46000000 	.word	0x46000000
 800a6dc:	4c742400 	.word	0x4c742400
 800a6e0:	4a742400 	.word	0x4a742400
 800a6e4:	4bbebc20 	.word	0x4bbebc20

0800a6e8 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 800a6e8:	b580      	push	{r7, lr}
 800a6ea:	b084      	sub	sp, #16
 800a6ec:	af00      	add	r7, sp, #0
 800a6ee:	6078      	str	r0, [r7, #4]
 800a6f0:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a6f2:	2300      	movs	r3, #0
 800a6f4:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a6f6:	4b53      	ldr	r3, [pc, #332]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a6f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a6fa:	f003 0303 	and.w	r3, r3, #3
 800a6fe:	2b03      	cmp	r3, #3
 800a700:	d101      	bne.n	800a706 <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 800a702:	2301      	movs	r3, #1
 800a704:	e099      	b.n	800a83a <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 800a706:	4b4f      	ldr	r3, [pc, #316]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	4a4e      	ldr	r2, [pc, #312]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a70c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a710:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a712:	f7f7 ffc1 	bl	8002698 <HAL_GetTick>
 800a716:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a718:	e008      	b.n	800a72c <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a71a:	f7f7 ffbd 	bl	8002698 <HAL_GetTick>
 800a71e:	4602      	mov	r2, r0
 800a720:	68bb      	ldr	r3, [r7, #8]
 800a722:	1ad3      	subs	r3, r2, r3
 800a724:	2b02      	cmp	r3, #2
 800a726:	d901      	bls.n	800a72c <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a728:	2303      	movs	r3, #3
 800a72a:	e086      	b.n	800a83a <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a72c:	4b45      	ldr	r3, [pc, #276]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a734:	2b00      	cmp	r3, #0
 800a736:	d1f0      	bne.n	800a71a <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 800a738:	4b42      	ldr	r3, [pc, #264]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a73a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a73c:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	681b      	ldr	r3, [r3, #0]
 800a744:	031b      	lsls	r3, r3, #12
 800a746:	493f      	ldr	r1, [pc, #252]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a748:	4313      	orrs	r3, r2
 800a74a:	628b      	str	r3, [r1, #40]	; 0x28
 800a74c:	687b      	ldr	r3, [r7, #4]
 800a74e:	685b      	ldr	r3, [r3, #4]
 800a750:	3b01      	subs	r3, #1
 800a752:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a756:	687b      	ldr	r3, [r7, #4]
 800a758:	689b      	ldr	r3, [r3, #8]
 800a75a:	3b01      	subs	r3, #1
 800a75c:	025b      	lsls	r3, r3, #9
 800a75e:	b29b      	uxth	r3, r3
 800a760:	431a      	orrs	r2, r3
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	68db      	ldr	r3, [r3, #12]
 800a766:	3b01      	subs	r3, #1
 800a768:	041b      	lsls	r3, r3, #16
 800a76a:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a76e:	431a      	orrs	r2, r3
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	691b      	ldr	r3, [r3, #16]
 800a774:	3b01      	subs	r3, #1
 800a776:	061b      	lsls	r3, r3, #24
 800a778:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a77c:	4931      	ldr	r1, [pc, #196]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a77e:	4313      	orrs	r3, r2
 800a780:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 800a782:	4b30      	ldr	r3, [pc, #192]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a784:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a786:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800a78a:	687b      	ldr	r3, [r7, #4]
 800a78c:	695b      	ldr	r3, [r3, #20]
 800a78e:	492d      	ldr	r1, [pc, #180]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a790:	4313      	orrs	r3, r2
 800a792:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 800a794:	4b2b      	ldr	r3, [pc, #172]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a798:	f023 0220 	bic.w	r2, r3, #32
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	699b      	ldr	r3, [r3, #24]
 800a7a0:	4928      	ldr	r1, [pc, #160]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7a2:	4313      	orrs	r3, r2
 800a7a4:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 800a7a6:	4b27      	ldr	r3, [pc, #156]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7aa:	4a26      	ldr	r2, [pc, #152]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7ac:	f023 0310 	bic.w	r3, r3, #16
 800a7b0:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800a7b2:	4b24      	ldr	r3, [pc, #144]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7b4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a7b6:	4b24      	ldr	r3, [pc, #144]	; (800a848 <RCCEx_PLL2_Config+0x160>)
 800a7b8:	4013      	ands	r3, r2
 800a7ba:	687a      	ldr	r2, [r7, #4]
 800a7bc:	69d2      	ldr	r2, [r2, #28]
 800a7be:	00d2      	lsls	r2, r2, #3
 800a7c0:	4920      	ldr	r1, [pc, #128]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7c2:	4313      	orrs	r3, r2
 800a7c4:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800a7c6:	4b1f      	ldr	r3, [pc, #124]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7ca:	4a1e      	ldr	r2, [pc, #120]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7cc:	f043 0310 	orr.w	r3, r3, #16
 800a7d0:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a7d2:	683b      	ldr	r3, [r7, #0]
 800a7d4:	2b00      	cmp	r3, #0
 800a7d6:	d106      	bne.n	800a7e6 <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800a7d8:	4b1a      	ldr	r3, [pc, #104]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7dc:	4a19      	ldr	r2, [pc, #100]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7de:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800a7e2:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a7e4:	e00f      	b.n	800a806 <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a7e6:	683b      	ldr	r3, [r7, #0]
 800a7e8:	2b01      	cmp	r3, #1
 800a7ea:	d106      	bne.n	800a7fa <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 800a7ec:	4b15      	ldr	r3, [pc, #84]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7f0:	4a14      	ldr	r2, [pc, #80]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7f2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a7f6:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a7f8:	e005      	b.n	800a806 <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800a7fa:	4b12      	ldr	r3, [pc, #72]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a7fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7fe:	4a11      	ldr	r2, [pc, #68]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a800:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800a804:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 800a806:	4b0f      	ldr	r3, [pc, #60]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a808:	681b      	ldr	r3, [r3, #0]
 800a80a:	4a0e      	ldr	r2, [pc, #56]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a80c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a810:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a812:	f7f7 ff41 	bl	8002698 <HAL_GetTick>
 800a816:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a818:	e008      	b.n	800a82c <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a81a:	f7f7 ff3d 	bl	8002698 <HAL_GetTick>
 800a81e:	4602      	mov	r2, r0
 800a820:	68bb      	ldr	r3, [r7, #8]
 800a822:	1ad3      	subs	r3, r2, r3
 800a824:	2b02      	cmp	r3, #2
 800a826:	d901      	bls.n	800a82c <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a828:	2303      	movs	r3, #3
 800a82a:	e006      	b.n	800a83a <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a82c:	4b05      	ldr	r3, [pc, #20]	; (800a844 <RCCEx_PLL2_Config+0x15c>)
 800a82e:	681b      	ldr	r3, [r3, #0]
 800a830:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a834:	2b00      	cmp	r3, #0
 800a836:	d0f0      	beq.n	800a81a <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 800a838:	7bfb      	ldrb	r3, [r7, #15]
}
 800a83a:	4618      	mov	r0, r3
 800a83c:	3710      	adds	r7, #16
 800a83e:	46bd      	mov	sp, r7
 800a840:	bd80      	pop	{r7, pc}
 800a842:	bf00      	nop
 800a844:	58024400 	.word	0x58024400
 800a848:	ffff0007 	.word	0xffff0007

0800a84c <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 800a84c:	b580      	push	{r7, lr}
 800a84e:	b084      	sub	sp, #16
 800a850:	af00      	add	r7, sp, #0
 800a852:	6078      	str	r0, [r7, #4]
 800a854:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a856:	2300      	movs	r3, #0
 800a858:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a85a:	4b53      	ldr	r3, [pc, #332]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a85c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a85e:	f003 0303 	and.w	r3, r3, #3
 800a862:	2b03      	cmp	r3, #3
 800a864:	d101      	bne.n	800a86a <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 800a866:	2301      	movs	r3, #1
 800a868:	e099      	b.n	800a99e <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 800a86a:	4b4f      	ldr	r3, [pc, #316]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a86c:	681b      	ldr	r3, [r3, #0]
 800a86e:	4a4e      	ldr	r2, [pc, #312]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a870:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a874:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a876:	f7f7 ff0f 	bl	8002698 <HAL_GetTick>
 800a87a:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a87c:	e008      	b.n	800a890 <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a87e:	f7f7 ff0b 	bl	8002698 <HAL_GetTick>
 800a882:	4602      	mov	r2, r0
 800a884:	68bb      	ldr	r3, [r7, #8]
 800a886:	1ad3      	subs	r3, r2, r3
 800a888:	2b02      	cmp	r3, #2
 800a88a:	d901      	bls.n	800a890 <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a88c:	2303      	movs	r3, #3
 800a88e:	e086      	b.n	800a99e <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a890:	4b45      	ldr	r3, [pc, #276]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a892:	681b      	ldr	r3, [r3, #0]
 800a894:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a898:	2b00      	cmp	r3, #0
 800a89a:	d1f0      	bne.n	800a87e <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 800a89c:	4b42      	ldr	r3, [pc, #264]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a89e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a8a0:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800a8a4:	687b      	ldr	r3, [r7, #4]
 800a8a6:	681b      	ldr	r3, [r3, #0]
 800a8a8:	051b      	lsls	r3, r3, #20
 800a8aa:	493f      	ldr	r1, [pc, #252]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a8ac:	4313      	orrs	r3, r2
 800a8ae:	628b      	str	r3, [r1, #40]	; 0x28
 800a8b0:	687b      	ldr	r3, [r7, #4]
 800a8b2:	685b      	ldr	r3, [r3, #4]
 800a8b4:	3b01      	subs	r3, #1
 800a8b6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	689b      	ldr	r3, [r3, #8]
 800a8be:	3b01      	subs	r3, #1
 800a8c0:	025b      	lsls	r3, r3, #9
 800a8c2:	b29b      	uxth	r3, r3
 800a8c4:	431a      	orrs	r2, r3
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	68db      	ldr	r3, [r3, #12]
 800a8ca:	3b01      	subs	r3, #1
 800a8cc:	041b      	lsls	r3, r3, #16
 800a8ce:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a8d2:	431a      	orrs	r2, r3
 800a8d4:	687b      	ldr	r3, [r7, #4]
 800a8d6:	691b      	ldr	r3, [r3, #16]
 800a8d8:	3b01      	subs	r3, #1
 800a8da:	061b      	lsls	r3, r3, #24
 800a8dc:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a8e0:	4931      	ldr	r1, [pc, #196]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a8e2:	4313      	orrs	r3, r2
 800a8e4:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 800a8e6:	4b30      	ldr	r3, [pc, #192]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a8e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a8ea:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a8ee:	687b      	ldr	r3, [r7, #4]
 800a8f0:	695b      	ldr	r3, [r3, #20]
 800a8f2:	492d      	ldr	r1, [pc, #180]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a8f4:	4313      	orrs	r3, r2
 800a8f6:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 800a8f8:	4b2b      	ldr	r3, [pc, #172]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a8fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a8fc:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	699b      	ldr	r3, [r3, #24]
 800a904:	4928      	ldr	r1, [pc, #160]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a906:	4313      	orrs	r3, r2
 800a908:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 800a90a:	4b27      	ldr	r3, [pc, #156]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a90c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a90e:	4a26      	ldr	r2, [pc, #152]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a910:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a914:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800a916:	4b24      	ldr	r3, [pc, #144]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a918:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a91a:	4b24      	ldr	r3, [pc, #144]	; (800a9ac <RCCEx_PLL3_Config+0x160>)
 800a91c:	4013      	ands	r3, r2
 800a91e:	687a      	ldr	r2, [r7, #4]
 800a920:	69d2      	ldr	r2, [r2, #28]
 800a922:	00d2      	lsls	r2, r2, #3
 800a924:	4920      	ldr	r1, [pc, #128]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a926:	4313      	orrs	r3, r2
 800a928:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800a92a:	4b1f      	ldr	r3, [pc, #124]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a92c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a92e:	4a1e      	ldr	r2, [pc, #120]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a930:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a934:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a936:	683b      	ldr	r3, [r7, #0]
 800a938:	2b00      	cmp	r3, #0
 800a93a:	d106      	bne.n	800a94a <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800a93c:	4b1a      	ldr	r3, [pc, #104]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a93e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a940:	4a19      	ldr	r2, [pc, #100]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a942:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a946:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a948:	e00f      	b.n	800a96a <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a94a:	683b      	ldr	r3, [r7, #0]
 800a94c:	2b01      	cmp	r3, #1
 800a94e:	d106      	bne.n	800a95e <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800a950:	4b15      	ldr	r3, [pc, #84]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a954:	4a14      	ldr	r2, [pc, #80]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a956:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a95a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a95c:	e005      	b.n	800a96a <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800a95e:	4b12      	ldr	r3, [pc, #72]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a962:	4a11      	ldr	r2, [pc, #68]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a964:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a968:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 800a96a:	4b0f      	ldr	r3, [pc, #60]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a96c:	681b      	ldr	r3, [r3, #0]
 800a96e:	4a0e      	ldr	r2, [pc, #56]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a970:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a974:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a976:	f7f7 fe8f 	bl	8002698 <HAL_GetTick>
 800a97a:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a97c:	e008      	b.n	800a990 <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a97e:	f7f7 fe8b 	bl	8002698 <HAL_GetTick>
 800a982:	4602      	mov	r2, r0
 800a984:	68bb      	ldr	r3, [r7, #8]
 800a986:	1ad3      	subs	r3, r2, r3
 800a988:	2b02      	cmp	r3, #2
 800a98a:	d901      	bls.n	800a990 <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a98c:	2303      	movs	r3, #3
 800a98e:	e006      	b.n	800a99e <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a990:	4b05      	ldr	r3, [pc, #20]	; (800a9a8 <RCCEx_PLL3_Config+0x15c>)
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a998:	2b00      	cmp	r3, #0
 800a99a:	d0f0      	beq.n	800a97e <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 800a99c:	7bfb      	ldrb	r3, [r7, #15]
}
 800a99e:	4618      	mov	r0, r3
 800a9a0:	3710      	adds	r7, #16
 800a9a2:	46bd      	mov	sp, r7
 800a9a4:	bd80      	pop	{r7, pc}
 800a9a6:	bf00      	nop
 800a9a8:	58024400 	.word	0x58024400
 800a9ac:	ffff0007 	.word	0xffff0007

0800a9b0 <HAL_RTC_Init>:
  * @brief  Initialize the RTC peripheral
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
{
 800a9b0:	b580      	push	{r7, lr}
 800a9b2:	b084      	sub	sp, #16
 800a9b4:	af00      	add	r7, sp, #0
 800a9b6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_ERROR;
 800a9b8:	2301      	movs	r3, #1
 800a9ba:	73fb      	strb	r3, [r7, #15]

  /* Check RTC handler */
  if(hrtc != NULL)
 800a9bc:	687b      	ldr	r3, [r7, #4]
 800a9be:	2b00      	cmp	r3, #0
 800a9c0:	d071      	beq.n	800aaa6 <HAL_RTC_Init+0xf6>
      {
        hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
      }
    }
#else /*  (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
    if(hrtc->State == HAL_RTC_STATE_RESET)
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800a9c8:	b2db      	uxtb	r3, r3
 800a9ca:	2b00      	cmp	r3, #0
 800a9cc:	d106      	bne.n	800a9dc <HAL_RTC_Init+0x2c>
    {
      /* Allocate lock resource and initialize it */
      hrtc->Lock = HAL_UNLOCKED;
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	2200      	movs	r2, #0
 800a9d2:	f883 2020 	strb.w	r2, [r3, #32]

      /* Initialize RTC MSP */
      HAL_RTC_MspInit(hrtc);
 800a9d6:	6878      	ldr	r0, [r7, #4]
 800a9d8:	f7f6 f9ce 	bl	8000d78 <HAL_RTC_MspInit>
    }
#endif /*  (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */

    /* Set RTC state */
    hrtc->State = HAL_RTC_STATE_BUSY;
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	2202      	movs	r2, #2
 800a9e0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

    /* Check whether the calendar needs to be initialized */
    if (__HAL_RTC_IS_CALENDAR_INITIALIZED(hrtc) == 0U)
 800a9e4:	687b      	ldr	r3, [r7, #4]
 800a9e6:	681b      	ldr	r3, [r3, #0]
 800a9e8:	68db      	ldr	r3, [r3, #12]
 800a9ea:	f003 0310 	and.w	r3, r3, #16
 800a9ee:	2b10      	cmp	r3, #16
 800a9f0:	d050      	beq.n	800aa94 <HAL_RTC_Init+0xe4>
    {
      /* Disable the write protection for RTC registers */
      __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	681b      	ldr	r3, [r3, #0]
 800a9f6:	22ca      	movs	r2, #202	; 0xca
 800a9f8:	625a      	str	r2, [r3, #36]	; 0x24
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	681b      	ldr	r3, [r3, #0]
 800a9fe:	2253      	movs	r2, #83	; 0x53
 800aa00:	625a      	str	r2, [r3, #36]	; 0x24

     /* Enter Initialization mode */
      status = RTC_EnterInitMode(hrtc);
 800aa02:	6878      	ldr	r0, [r7, #4]
 800aa04:	f000 f9a0 	bl	800ad48 <RTC_EnterInitMode>
 800aa08:	4603      	mov	r3, r0
 800aa0a:	73fb      	strb	r3, [r7, #15]
      if (status == HAL_OK)
 800aa0c:	7bfb      	ldrb	r3, [r7, #15]
 800aa0e:	2b00      	cmp	r3, #0
 800aa10:	d124      	bne.n	800aa5c <HAL_RTC_Init+0xac>
#if defined(TAMP)
        /* Clear RTC_CR FMT, OSEL, POL and TAMPOE Bits */
        hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE);
#else
        /* Clear RTC_CR FMT, OSEL and POL Bits */
        hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	681b      	ldr	r3, [r3, #0]
 800aa16:	6899      	ldr	r1, [r3, #8]
 800aa18:	687b      	ldr	r3, [r7, #4]
 800aa1a:	681a      	ldr	r2, [r3, #0]
 800aa1c:	4b24      	ldr	r3, [pc, #144]	; (800aab0 <HAL_RTC_Init+0x100>)
 800aa1e:	400b      	ands	r3, r1
 800aa20:	6093      	str	r3, [r2, #8]
#endif /* TAMP */

        /* Set RTC_CR register */
        hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	681b      	ldr	r3, [r3, #0]
 800aa26:	6899      	ldr	r1, [r3, #8]
 800aa28:	687b      	ldr	r3, [r7, #4]
 800aa2a:	685a      	ldr	r2, [r3, #4]
 800aa2c:	687b      	ldr	r3, [r7, #4]
 800aa2e:	691b      	ldr	r3, [r3, #16]
 800aa30:	431a      	orrs	r2, r3
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	699b      	ldr	r3, [r3, #24]
 800aa36:	431a      	orrs	r2, r3
 800aa38:	687b      	ldr	r3, [r7, #4]
 800aa3a:	681b      	ldr	r3, [r3, #0]
 800aa3c:	430a      	orrs	r2, r1
 800aa3e:	609a      	str	r2, [r3, #8]

        /* Configure the RTC PRER */
        hrtc->Instance->PRER = (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos) | (hrtc->Init.SynchPrediv << RTC_PRER_PREDIV_S_Pos);
 800aa40:	687b      	ldr	r3, [r7, #4]
 800aa42:	689b      	ldr	r3, [r3, #8]
 800aa44:	0419      	lsls	r1, r3, #16
 800aa46:	687b      	ldr	r3, [r7, #4]
 800aa48:	68da      	ldr	r2, [r3, #12]
 800aa4a:	687b      	ldr	r3, [r7, #4]
 800aa4c:	681b      	ldr	r3, [r3, #0]
 800aa4e:	430a      	orrs	r2, r1
 800aa50:	611a      	str	r2, [r3, #16]

        /* Exit Initialization mode */
        status = RTC_ExitInitMode(hrtc);
 800aa52:	6878      	ldr	r0, [r7, #4]
 800aa54:	f000 f9ac 	bl	800adb0 <RTC_ExitInitMode>
 800aa58:	4603      	mov	r3, r0
 800aa5a:	73fb      	strb	r3, [r7, #15]
      }
      if(status == HAL_OK)
 800aa5c:	7bfb      	ldrb	r3, [r7, #15]
 800aa5e:	2b00      	cmp	r3, #0
 800aa60:	d113      	bne.n	800aa8a <HAL_RTC_Init+0xda>
      {
#if defined(TAMP)
        hrtc->Instance->CR &= ~(RTC_CR_TAMPALRM_PU | RTC_CR_TAMPALRM_TYPE | RTC_CR_OUT2EN);
        hrtc->Instance->CR |= (hrtc->Init.OutPutPullUp | hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
#else
        hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 800aa62:	687b      	ldr	r3, [r7, #4]
 800aa64:	681b      	ldr	r3, [r3, #0]
 800aa66:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800aa68:	687b      	ldr	r3, [r7, #4]
 800aa6a:	681b      	ldr	r3, [r3, #0]
 800aa6c:	f022 0203 	bic.w	r2, r2, #3
 800aa70:	64da      	str	r2, [r3, #76]	; 0x4c
        hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	681b      	ldr	r3, [r3, #0]
 800aa76:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 800aa78:	687b      	ldr	r3, [r7, #4]
 800aa7a:	69da      	ldr	r2, [r3, #28]
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	695b      	ldr	r3, [r3, #20]
 800aa80:	431a      	orrs	r2, r3
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	681b      	ldr	r3, [r3, #0]
 800aa86:	430a      	orrs	r2, r1
 800aa88:	64da      	str	r2, [r3, #76]	; 0x4c
#endif /* TAMP */
      }

    /* Enable the write protection for RTC registers */
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800aa8a:	687b      	ldr	r3, [r7, #4]
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	22ff      	movs	r2, #255	; 0xff
 800aa90:	625a      	str	r2, [r3, #36]	; 0x24
 800aa92:	e001      	b.n	800aa98 <HAL_RTC_Init+0xe8>
    }
    else
    {
      /* The calendar is already initialized */
      status = HAL_OK;
 800aa94:	2300      	movs	r3, #0
 800aa96:	73fb      	strb	r3, [r7, #15]
    }

    if (status == HAL_OK)
 800aa98:	7bfb      	ldrb	r3, [r7, #15]
 800aa9a:	2b00      	cmp	r3, #0
 800aa9c:	d103      	bne.n	800aaa6 <HAL_RTC_Init+0xf6>
    {
      /* Set RTC state */
      hrtc->State = HAL_RTC_STATE_READY;
 800aa9e:	687b      	ldr	r3, [r7, #4]
 800aaa0:	2201      	movs	r2, #1
 800aaa2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
    }
  }

  /* return status */
  return status;
 800aaa6:	7bfb      	ldrb	r3, [r7, #15]
}
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	3710      	adds	r7, #16
 800aaac:	46bd      	mov	sp, r7
 800aaae:	bd80      	pop	{r7, pc}
 800aab0:	ff8fffbf 	.word	0xff8fffbf

0800aab4 <HAL_RTC_SetTime>:
  *            @arg RTC_FORMAT_BIN: Binary data format
  *            @arg RTC_FORMAT_BCD: BCD data format
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
{
 800aab4:	b590      	push	{r4, r7, lr}
 800aab6:	b087      	sub	sp, #28
 800aab8:	af00      	add	r7, sp, #0
 800aaba:	60f8      	str	r0, [r7, #12]
 800aabc:	60b9      	str	r1, [r7, #8]
 800aabe:	607a      	str	r2, [r7, #4]
  assert_param(IS_RTC_FORMAT(Format));
  assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
  assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));

  /* Process Locked */
  __HAL_LOCK(hrtc);
 800aac0:	68fb      	ldr	r3, [r7, #12]
 800aac2:	f893 3020 	ldrb.w	r3, [r3, #32]
 800aac6:	2b01      	cmp	r3, #1
 800aac8:	d101      	bne.n	800aace <HAL_RTC_SetTime+0x1a>
 800aaca:	2302      	movs	r3, #2
 800aacc:	e089      	b.n	800abe2 <HAL_RTC_SetTime+0x12e>
 800aace:	68fb      	ldr	r3, [r7, #12]
 800aad0:	2201      	movs	r2, #1
 800aad2:	f883 2020 	strb.w	r2, [r3, #32]

  hrtc->State = HAL_RTC_STATE_BUSY;
 800aad6:	68fb      	ldr	r3, [r7, #12]
 800aad8:	2202      	movs	r2, #2
 800aada:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 800aade:	68fb      	ldr	r3, [r7, #12]
 800aae0:	681b      	ldr	r3, [r3, #0]
 800aae2:	22ca      	movs	r2, #202	; 0xca
 800aae4:	625a      	str	r2, [r3, #36]	; 0x24
 800aae6:	68fb      	ldr	r3, [r7, #12]
 800aae8:	681b      	ldr	r3, [r3, #0]
 800aaea:	2253      	movs	r2, #83	; 0x53
 800aaec:	625a      	str	r2, [r3, #36]	; 0x24
 /* Enter Initialization mode */
  status = RTC_EnterInitMode(hrtc);
 800aaee:	68f8      	ldr	r0, [r7, #12]
 800aaf0:	f000 f92a 	bl	800ad48 <RTC_EnterInitMode>
 800aaf4:	4603      	mov	r3, r0
 800aaf6:	74fb      	strb	r3, [r7, #19]
  if (status == HAL_OK)
 800aaf8:	7cfb      	ldrb	r3, [r7, #19]
 800aafa:	2b00      	cmp	r3, #0
 800aafc:	d161      	bne.n	800abc2 <HAL_RTC_SetTime+0x10e>
  {
    if(Format == RTC_FORMAT_BIN)
 800aafe:	687b      	ldr	r3, [r7, #4]
 800ab00:	2b00      	cmp	r3, #0
 800ab02:	d126      	bne.n	800ab52 <HAL_RTC_SetTime+0x9e>
    {
      if((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 800ab04:	68fb      	ldr	r3, [r7, #12]
 800ab06:	681b      	ldr	r3, [r3, #0]
 800ab08:	689b      	ldr	r3, [r3, #8]
 800ab0a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab0e:	2b00      	cmp	r3, #0
 800ab10:	d102      	bne.n	800ab18 <HAL_RTC_SetTime+0x64>
        assert_param(IS_RTC_HOUR12(sTime->Hours));
        assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
      }
      else
      {
        sTime->TimeFormat = 0x00U;
 800ab12:	68bb      	ldr	r3, [r7, #8]
 800ab14:	2200      	movs	r2, #0
 800ab16:	70da      	strb	r2, [r3, #3]
        assert_param(IS_RTC_HOUR24(sTime->Hours));
      }
      assert_param(IS_RTC_MINUTES(sTime->Minutes));
      assert_param(IS_RTC_SECONDS(sTime->Seconds));

      tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 800ab18:	68bb      	ldr	r3, [r7, #8]
 800ab1a:	781b      	ldrb	r3, [r3, #0]
 800ab1c:	4618      	mov	r0, r3
 800ab1e:	f000 f985 	bl	800ae2c <RTC_ByteToBcd2>
 800ab22:	4603      	mov	r3, r0
 800ab24:	041c      	lsls	r4, r3, #16
                          ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 800ab26:	68bb      	ldr	r3, [r7, #8]
 800ab28:	785b      	ldrb	r3, [r3, #1]
 800ab2a:	4618      	mov	r0, r3
 800ab2c:	f000 f97e 	bl	800ae2c <RTC_ByteToBcd2>
 800ab30:	4603      	mov	r3, r0
 800ab32:	021b      	lsls	r3, r3, #8
      tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 800ab34:	431c      	orrs	r4, r3
                          ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos)  | \
 800ab36:	68bb      	ldr	r3, [r7, #8]
 800ab38:	789b      	ldrb	r3, [r3, #2]
 800ab3a:	4618      	mov	r0, r3
 800ab3c:	f000 f976 	bl	800ae2c <RTC_ByteToBcd2>
 800ab40:	4603      	mov	r3, r0
                          ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 800ab42:	ea44 0203 	orr.w	r2, r4, r3
                          (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
 800ab46:	68bb      	ldr	r3, [r7, #8]
 800ab48:	78db      	ldrb	r3, [r3, #3]
 800ab4a:	059b      	lsls	r3, r3, #22
      tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 800ab4c:	4313      	orrs	r3, r2
 800ab4e:	617b      	str	r3, [r7, #20]
 800ab50:	e018      	b.n	800ab84 <HAL_RTC_SetTime+0xd0>
    }
    else
    {
      if((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 800ab52:	68fb      	ldr	r3, [r7, #12]
 800ab54:	681b      	ldr	r3, [r3, #0]
 800ab56:	689b      	ldr	r3, [r3, #8]
 800ab58:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab5c:	2b00      	cmp	r3, #0
 800ab5e:	d102      	bne.n	800ab66 <HAL_RTC_SetTime+0xb2>
        assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
        assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
      }
      else
      {
        sTime->TimeFormat = 0x00U;
 800ab60:	68bb      	ldr	r3, [r7, #8]
 800ab62:	2200      	movs	r2, #0
 800ab64:	70da      	strb	r2, [r3, #3]
        assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
      }
      assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
      assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
      tmpreg = (((uint32_t)(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 800ab66:	68bb      	ldr	r3, [r7, #8]
 800ab68:	781b      	ldrb	r3, [r3, #0]
 800ab6a:	041a      	lsls	r2, r3, #16
                ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 800ab6c:	68bb      	ldr	r3, [r7, #8]
 800ab6e:	785b      	ldrb	r3, [r3, #1]
 800ab70:	021b      	lsls	r3, r3, #8
      tmpreg = (((uint32_t)(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 800ab72:	4313      	orrs	r3, r2
                ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos)  | \
 800ab74:	68ba      	ldr	r2, [r7, #8]
 800ab76:	7892      	ldrb	r2, [r2, #2]
                ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 800ab78:	431a      	orrs	r2, r3
                ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 800ab7a:	68bb      	ldr	r3, [r7, #8]
 800ab7c:	78db      	ldrb	r3, [r3, #3]
 800ab7e:	059b      	lsls	r3, r3, #22
      tmpreg = (((uint32_t)(sTime->Hours)   << RTC_TR_HU_Pos)  | \
 800ab80:	4313      	orrs	r3, r2
 800ab82:	617b      	str	r3, [r7, #20]
    }

    /* Set the RTC_TR register */
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 800ab84:	68fb      	ldr	r3, [r7, #12]
 800ab86:	681a      	ldr	r2, [r3, #0]
 800ab88:	6979      	ldr	r1, [r7, #20]
 800ab8a:	4b18      	ldr	r3, [pc, #96]	; (800abec <HAL_RTC_SetTime+0x138>)
 800ab8c:	400b      	ands	r3, r1
 800ab8e:	6013      	str	r3, [r2, #0]

    /* Clear the bits to be configured */
    hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	681b      	ldr	r3, [r3, #0]
 800ab94:	689a      	ldr	r2, [r3, #8]
 800ab96:	68fb      	ldr	r3, [r7, #12]
 800ab98:	681b      	ldr	r3, [r3, #0]
 800ab9a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ab9e:	609a      	str	r2, [r3, #8]

    /* Configure the RTC_CR register */
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 800aba0:	68fb      	ldr	r3, [r7, #12]
 800aba2:	681b      	ldr	r3, [r3, #0]
 800aba4:	6899      	ldr	r1, [r3, #8]
 800aba6:	68bb      	ldr	r3, [r7, #8]
 800aba8:	68da      	ldr	r2, [r3, #12]
 800abaa:	68bb      	ldr	r3, [r7, #8]
 800abac:	691b      	ldr	r3, [r3, #16]
 800abae:	431a      	orrs	r2, r3
 800abb0:	68fb      	ldr	r3, [r7, #12]
 800abb2:	681b      	ldr	r3, [r3, #0]
 800abb4:	430a      	orrs	r2, r1
 800abb6:	609a      	str	r2, [r3, #8]

    /* Exit Initialization mode */
    status = RTC_ExitInitMode(hrtc);
 800abb8:	68f8      	ldr	r0, [r7, #12]
 800abba:	f000 f8f9 	bl	800adb0 <RTC_ExitInitMode>
 800abbe:	4603      	mov	r3, r0
 800abc0:	74fb      	strb	r3, [r7, #19]
  }

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800abc2:	68fb      	ldr	r3, [r7, #12]
 800abc4:	681b      	ldr	r3, [r3, #0]
 800abc6:	22ff      	movs	r2, #255	; 0xff
 800abc8:	625a      	str	r2, [r3, #36]	; 0x24

  if (status == HAL_OK)
 800abca:	7cfb      	ldrb	r3, [r7, #19]
 800abcc:	2b00      	cmp	r3, #0
 800abce:	d103      	bne.n	800abd8 <HAL_RTC_SetTime+0x124>
  {
    hrtc->State = HAL_RTC_STATE_READY;
 800abd0:	68fb      	ldr	r3, [r7, #12]
 800abd2:	2201      	movs	r2, #1
 800abd4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 800abd8:	68fb      	ldr	r3, [r7, #12]
 800abda:	2200      	movs	r2, #0
 800abdc:	f883 2020 	strb.w	r2, [r3, #32]

  return status;
 800abe0:	7cfb      	ldrb	r3, [r7, #19]
}
 800abe2:	4618      	mov	r0, r3
 800abe4:	371c      	adds	r7, #28
 800abe6:	46bd      	mov	sp, r7
 800abe8:	bd90      	pop	{r4, r7, pc}
 800abea:	bf00      	nop
 800abec:	007f7f7f 	.word	0x007f7f7f

0800abf0 <HAL_RTC_SetDate>:
  *            @arg RTC_FORMAT_BIN: Binary data format
  *            @arg RTC_FORMAT_BCD: BCD data format
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
{
 800abf0:	b590      	push	{r4, r7, lr}
 800abf2:	b087      	sub	sp, #28
 800abf4:	af00      	add	r7, sp, #0
 800abf6:	60f8      	str	r0, [r7, #12]
 800abf8:	60b9      	str	r1, [r7, #8]
 800abfa:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_RTC_FORMAT(Format));

  /* Process Locked */
  __HAL_LOCK(hrtc);
 800abfc:	68fb      	ldr	r3, [r7, #12]
 800abfe:	f893 3020 	ldrb.w	r3, [r3, #32]
 800ac02:	2b01      	cmp	r3, #1
 800ac04:	d101      	bne.n	800ac0a <HAL_RTC_SetDate+0x1a>
 800ac06:	2302      	movs	r3, #2
 800ac08:	e073      	b.n	800acf2 <HAL_RTC_SetDate+0x102>
 800ac0a:	68fb      	ldr	r3, [r7, #12]
 800ac0c:	2201      	movs	r2, #1
 800ac0e:	f883 2020 	strb.w	r2, [r3, #32]

  hrtc->State = HAL_RTC_STATE_BUSY;
 800ac12:	68fb      	ldr	r3, [r7, #12]
 800ac14:	2202      	movs	r2, #2
 800ac16:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

  if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	2b00      	cmp	r3, #0
 800ac1e:	d10e      	bne.n	800ac3e <HAL_RTC_SetDate+0x4e>
 800ac20:	68bb      	ldr	r3, [r7, #8]
 800ac22:	785b      	ldrb	r3, [r3, #1]
 800ac24:	f003 0310 	and.w	r3, r3, #16
 800ac28:	2b00      	cmp	r3, #0
 800ac2a:	d008      	beq.n	800ac3e <HAL_RTC_SetDate+0x4e>
  {
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 800ac2c:	68bb      	ldr	r3, [r7, #8]
 800ac2e:	785b      	ldrb	r3, [r3, #1]
 800ac30:	f023 0310 	bic.w	r3, r3, #16
 800ac34:	b2db      	uxtb	r3, r3
 800ac36:	330a      	adds	r3, #10
 800ac38:	b2da      	uxtb	r2, r3
 800ac3a:	68bb      	ldr	r3, [r7, #8]
 800ac3c:	705a      	strb	r2, [r3, #1]
  }

  assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));

  if(Format == RTC_FORMAT_BIN)
 800ac3e:	687b      	ldr	r3, [r7, #4]
 800ac40:	2b00      	cmp	r3, #0
 800ac42:	d11c      	bne.n	800ac7e <HAL_RTC_SetDate+0x8e>
  {
    assert_param(IS_RTC_YEAR(sDate->Year));
    assert_param(IS_RTC_MONTH(sDate->Month));
    assert_param(IS_RTC_DATE(sDate->Date));

    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
 800ac44:	68bb      	ldr	r3, [r7, #8]
 800ac46:	78db      	ldrb	r3, [r3, #3]
 800ac48:	4618      	mov	r0, r3
 800ac4a:	f000 f8ef 	bl	800ae2c <RTC_ByteToBcd2>
 800ac4e:	4603      	mov	r3, r0
 800ac50:	041c      	lsls	r4, r3, #16
                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 800ac52:	68bb      	ldr	r3, [r7, #8]
 800ac54:	785b      	ldrb	r3, [r3, #1]
 800ac56:	4618      	mov	r0, r3
 800ac58:	f000 f8e8 	bl	800ae2c <RTC_ByteToBcd2>
 800ac5c:	4603      	mov	r3, r0
 800ac5e:	021b      	lsls	r3, r3, #8
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
 800ac60:	431c      	orrs	r4, r3
                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)  << RTC_DR_DU_Pos) | \
 800ac62:	68bb      	ldr	r3, [r7, #8]
 800ac64:	789b      	ldrb	r3, [r3, #2]
 800ac66:	4618      	mov	r0, r3
 800ac68:	f000 f8e0 	bl	800ae2c <RTC_ByteToBcd2>
 800ac6c:	4603      	mov	r3, r0
                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 800ac6e:	ea44 0203 	orr.w	r2, r4, r3
                  ((uint32_t)sDate->WeekDay               << RTC_DR_WDU_Pos));
 800ac72:	68bb      	ldr	r3, [r7, #8]
 800ac74:	781b      	ldrb	r3, [r3, #0]
 800ac76:	035b      	lsls	r3, r3, #13
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
 800ac78:	4313      	orrs	r3, r2
 800ac7a:	617b      	str	r3, [r7, #20]
 800ac7c:	e00e      	b.n	800ac9c <HAL_RTC_SetDate+0xac>
  {
    assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
    assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
    assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));

    datetmpreg = ((((uint32_t)sDate->Year)    << RTC_DR_YU_Pos) | \
 800ac7e:	68bb      	ldr	r3, [r7, #8]
 800ac80:	78db      	ldrb	r3, [r3, #3]
 800ac82:	041a      	lsls	r2, r3, #16
                  (((uint32_t)sDate->Month)   << RTC_DR_MU_Pos) | \
 800ac84:	68bb      	ldr	r3, [r7, #8]
 800ac86:	785b      	ldrb	r3, [r3, #1]
 800ac88:	021b      	lsls	r3, r3, #8
    datetmpreg = ((((uint32_t)sDate->Year)    << RTC_DR_YU_Pos) | \
 800ac8a:	4313      	orrs	r3, r2
                  (((uint32_t)sDate->Date)    << RTC_DR_DU_Pos) | \
 800ac8c:	68ba      	ldr	r2, [r7, #8]
 800ac8e:	7892      	ldrb	r2, [r2, #2]
                  (((uint32_t)sDate->Month)   << RTC_DR_MU_Pos) | \
 800ac90:	431a      	orrs	r2, r3
                  (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
 800ac92:	68bb      	ldr	r3, [r7, #8]
 800ac94:	781b      	ldrb	r3, [r3, #0]
 800ac96:	035b      	lsls	r3, r3, #13
    datetmpreg = ((((uint32_t)sDate->Year)    << RTC_DR_YU_Pos) | \
 800ac98:	4313      	orrs	r3, r2
 800ac9a:	617b      	str	r3, [r7, #20]
  }

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 800ac9c:	68fb      	ldr	r3, [r7, #12]
 800ac9e:	681b      	ldr	r3, [r3, #0]
 800aca0:	22ca      	movs	r2, #202	; 0xca
 800aca2:	625a      	str	r2, [r3, #36]	; 0x24
 800aca4:	68fb      	ldr	r3, [r7, #12]
 800aca6:	681b      	ldr	r3, [r3, #0]
 800aca8:	2253      	movs	r2, #83	; 0x53
 800acaa:	625a      	str	r2, [r3, #36]	; 0x24


  /* Enter Initialization mode */
  status = RTC_EnterInitMode(hrtc);
 800acac:	68f8      	ldr	r0, [r7, #12]
 800acae:	f000 f84b 	bl	800ad48 <RTC_EnterInitMode>
 800acb2:	4603      	mov	r3, r0
 800acb4:	74fb      	strb	r3, [r7, #19]
  if (status == HAL_OK)
 800acb6:	7cfb      	ldrb	r3, [r7, #19]
 800acb8:	2b00      	cmp	r3, #0
 800acba:	d10a      	bne.n	800acd2 <HAL_RTC_SetDate+0xe2>
  {
    /* Set the RTC_DR register */
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 800acbc:	68fb      	ldr	r3, [r7, #12]
 800acbe:	681a      	ldr	r2, [r3, #0]
 800acc0:	6979      	ldr	r1, [r7, #20]
 800acc2:	4b0e      	ldr	r3, [pc, #56]	; (800acfc <HAL_RTC_SetDate+0x10c>)
 800acc4:	400b      	ands	r3, r1
 800acc6:	6053      	str	r3, [r2, #4]


    /* Exit Initialization mode */
    status = RTC_ExitInitMode(hrtc);
 800acc8:	68f8      	ldr	r0, [r7, #12]
 800acca:	f000 f871 	bl	800adb0 <RTC_ExitInitMode>
 800acce:	4603      	mov	r3, r0
 800acd0:	74fb      	strb	r3, [r7, #19]
  }

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800acd2:	68fb      	ldr	r3, [r7, #12]
 800acd4:	681b      	ldr	r3, [r3, #0]
 800acd6:	22ff      	movs	r2, #255	; 0xff
 800acd8:	625a      	str	r2, [r3, #36]	; 0x24

  if (status == HAL_OK)
 800acda:	7cfb      	ldrb	r3, [r7, #19]
 800acdc:	2b00      	cmp	r3, #0
 800acde:	d103      	bne.n	800ace8 <HAL_RTC_SetDate+0xf8>
  {
    hrtc->State = HAL_RTC_STATE_READY;
 800ace0:	68fb      	ldr	r3, [r7, #12]
 800ace2:	2201      	movs	r2, #1
 800ace4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 800ace8:	68fb      	ldr	r3, [r7, #12]
 800acea:	2200      	movs	r2, #0
 800acec:	f883 2020 	strb.w	r2, [r3, #32]

  return status;
 800acf0:	7cfb      	ldrb	r3, [r7, #19]


}
 800acf2:	4618      	mov	r0, r3
 800acf4:	371c      	adds	r7, #28
 800acf6:	46bd      	mov	sp, r7
 800acf8:	bd90      	pop	{r4, r7, pc}
 800acfa:	bf00      	nop
 800acfc:	00ffff3f 	.word	0x00ffff3f

0800ad00 <HAL_RTC_WaitForSynchro>:
  *         correctly copied into the RTC_TR and RTC_DR shadow registers.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
{
 800ad00:	b580      	push	{r7, lr}
 800ad02:	b084      	sub	sp, #16
 800ad04:	af00      	add	r7, sp, #0
 800ad06:	6078      	str	r0, [r7, #4]

  /* Clear RSF flag, keep reserved bits at reset values (setting other flags has no effect) */
#if defined(TAMP)
  hrtc->Instance->ICSR = ((uint32_t)(RTC_RSF_MASK & RTC_ICSR_RESERVED_MASK));
#else
  hrtc->Instance->ISR = ((uint32_t)(RTC_RSF_MASK & RTC_ISR_RESERVED_MASK));
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	681b      	ldr	r3, [r3, #0]
 800ad0c:	4a0d      	ldr	r2, [pc, #52]	; (800ad44 <HAL_RTC_WaitForSynchro+0x44>)
 800ad0e:	60da      	str	r2, [r3, #12]
#endif /* TAMP */

  tickstart = HAL_GetTick();
 800ad10:	f7f7 fcc2 	bl	8002698 <HAL_GetTick>
 800ad14:	60f8      	str	r0, [r7, #12]

  /* Wait the registers to be synchronised */
#if defined(TAMP)
  while ((hrtc->Instance->ICSR & RTC_ICSR_RSF) == 0U)
#else
    while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 800ad16:	e009      	b.n	800ad2c <HAL_RTC_WaitForSynchro+0x2c>
#endif /* TAMP */
    {
      if((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 800ad18:	f7f7 fcbe 	bl	8002698 <HAL_GetTick>
 800ad1c:	4602      	mov	r2, r0
 800ad1e:	68fb      	ldr	r3, [r7, #12]
 800ad20:	1ad3      	subs	r3, r2, r3
 800ad22:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ad26:	d901      	bls.n	800ad2c <HAL_RTC_WaitForSynchro+0x2c>
      {
        return HAL_TIMEOUT;
 800ad28:	2303      	movs	r3, #3
 800ad2a:	e007      	b.n	800ad3c <HAL_RTC_WaitForSynchro+0x3c>
    while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
 800ad2c:	687b      	ldr	r3, [r7, #4]
 800ad2e:	681b      	ldr	r3, [r3, #0]
 800ad30:	68db      	ldr	r3, [r3, #12]
 800ad32:	f003 0320 	and.w	r3, r3, #32
 800ad36:	2b00      	cmp	r3, #0
 800ad38:	d0ee      	beq.n	800ad18 <HAL_RTC_WaitForSynchro+0x18>
      }
    }

  return HAL_OK;
 800ad3a:	2300      	movs	r3, #0
}
 800ad3c:	4618      	mov	r0, r3
 800ad3e:	3710      	adds	r7, #16
 800ad40:	46bd      	mov	sp, r7
 800ad42:	bd80      	pop	{r7, pc}
 800ad44:	0003ff5f 	.word	0x0003ff5f

0800ad48 <RTC_EnterInitMode>:
  *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
{
 800ad48:	b580      	push	{r7, lr}
 800ad4a:	b084      	sub	sp, #16
 800ad4c:	af00      	add	r7, sp, #0
 800ad4e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800ad50:	2300      	movs	r3, #0
 800ad52:	73fb      	strb	r3, [r7, #15]
    tickstart = HAL_GetTick();

    /* Wait till RTC is in INIT state and if timeout is reached exit */
    while (((hrtc->Instance->ICSR & RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
#else
  if ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 800ad54:	687b      	ldr	r3, [r7, #4]
 800ad56:	681b      	ldr	r3, [r3, #0]
 800ad58:	68db      	ldr	r3, [r3, #12]
 800ad5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad5e:	2b00      	cmp	r3, #0
 800ad60:	d120      	bne.n	800ada4 <RTC_EnterInitMode+0x5c>
  {
    /* Set the Initialization mode */
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	681b      	ldr	r3, [r3, #0]
 800ad66:	f04f 32ff 	mov.w	r2, #4294967295
 800ad6a:	60da      	str	r2, [r3, #12]

    tickstart = HAL_GetTick();
 800ad6c:	f7f7 fc94 	bl	8002698 <HAL_GetTick>
 800ad70:	60b8      	str	r0, [r7, #8]

    /* Wait till RTC is in INIT state and if timeout is reached exit */
    while (((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U) && (status != HAL_TIMEOUT))
 800ad72:	e00d      	b.n	800ad90 <RTC_EnterInitMode+0x48>
#endif /* TAMP */
    {
      if((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 800ad74:	f7f7 fc90 	bl	8002698 <HAL_GetTick>
 800ad78:	4602      	mov	r2, r0
 800ad7a:	68bb      	ldr	r3, [r7, #8]
 800ad7c:	1ad3      	subs	r3, r2, r3
 800ad7e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ad82:	d905      	bls.n	800ad90 <RTC_EnterInitMode+0x48>
      {
        status = HAL_TIMEOUT;
 800ad84:	2303      	movs	r3, #3
 800ad86:	73fb      	strb	r3, [r7, #15]
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 800ad88:	687b      	ldr	r3, [r7, #4]
 800ad8a:	2203      	movs	r2, #3
 800ad8c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
    while (((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U) && (status != HAL_TIMEOUT))
 800ad90:	687b      	ldr	r3, [r7, #4]
 800ad92:	681b      	ldr	r3, [r3, #0]
 800ad94:	68db      	ldr	r3, [r3, #12]
 800ad96:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad9a:	2b00      	cmp	r3, #0
 800ad9c:	d102      	bne.n	800ada4 <RTC_EnterInitMode+0x5c>
 800ad9e:	7bfb      	ldrb	r3, [r7, #15]
 800ada0:	2b03      	cmp	r3, #3
 800ada2:	d1e7      	bne.n	800ad74 <RTC_EnterInitMode+0x2c>
      }
    }
  }

  return status;
 800ada4:	7bfb      	ldrb	r3, [r7, #15]
}
 800ada6:	4618      	mov	r0, r3
 800ada8:	3710      	adds	r7, #16
 800adaa:	46bd      	mov	sp, r7
 800adac:	bd80      	pop	{r7, pc}
	...

0800adb0 <RTC_ExitInitMode>:
  * @brief  Exit the RTC Initialization mode.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
{
 800adb0:	b580      	push	{r7, lr}
 800adb2:	b084      	sub	sp, #16
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800adb8:	2300      	movs	r3, #0
 800adba:	73fb      	strb	r3, [r7, #15]

  /* Exit Initialization mode */
#if defined(TAMP)
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
#else
  CLEAR_BIT(RTC->ISR, RTC_ISR_INITF);
 800adbc:	4b1a      	ldr	r3, [pc, #104]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800adbe:	68db      	ldr	r3, [r3, #12]
 800adc0:	4a19      	ldr	r2, [pc, #100]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800adc2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800adc6:	60d3      	str	r3, [r2, #12]
#endif /* TAMP */

  /* If CR_BYPSHAD bit = 0, wait for synchro */
  if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
 800adc8:	4b17      	ldr	r3, [pc, #92]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800adca:	689b      	ldr	r3, [r3, #8]
 800adcc:	f003 0320 	and.w	r3, r3, #32
 800add0:	2b00      	cmp	r3, #0
 800add2:	d10c      	bne.n	800adee <RTC_ExitInitMode+0x3e>
  {
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 800add4:	6878      	ldr	r0, [r7, #4]
 800add6:	f7ff ff93 	bl	800ad00 <HAL_RTC_WaitForSynchro>
 800adda:	4603      	mov	r3, r0
 800addc:	2b00      	cmp	r3, #0
 800adde:	d01e      	beq.n	800ae1e <RTC_ExitInitMode+0x6e>
    {
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
 800ade0:	687b      	ldr	r3, [r7, #4]
 800ade2:	2203      	movs	r2, #3
 800ade4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      status = HAL_TIMEOUT;
 800ade8:	2303      	movs	r3, #3
 800adea:	73fb      	strb	r3, [r7, #15]
 800adec:	e017      	b.n	800ae1e <RTC_ExitInitMode+0x6e>
    }
  }
  else
  {
    /* Clear BYPSHAD bit */
    CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 800adee:	4b0e      	ldr	r3, [pc, #56]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800adf0:	689b      	ldr	r3, [r3, #8]
 800adf2:	4a0d      	ldr	r2, [pc, #52]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800adf4:	f023 0320 	bic.w	r3, r3, #32
 800adf8:	6093      	str	r3, [r2, #8]
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 800adfa:	6878      	ldr	r0, [r7, #4]
 800adfc:	f7ff ff80 	bl	800ad00 <HAL_RTC_WaitForSynchro>
 800ae00:	4603      	mov	r3, r0
 800ae02:	2b00      	cmp	r3, #0
 800ae04:	d005      	beq.n	800ae12 <RTC_ExitInitMode+0x62>
    {
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	2203      	movs	r2, #3
 800ae0a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
      status = HAL_TIMEOUT;
 800ae0e:	2303      	movs	r3, #3
 800ae10:	73fb      	strb	r3, [r7, #15]
    }
    /* Restore BYPSHAD bit */
    SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 800ae12:	4b05      	ldr	r3, [pc, #20]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800ae14:	689b      	ldr	r3, [r3, #8]
 800ae16:	4a04      	ldr	r2, [pc, #16]	; (800ae28 <RTC_ExitInitMode+0x78>)
 800ae18:	f043 0320 	orr.w	r3, r3, #32
 800ae1c:	6093      	str	r3, [r2, #8]
  }

  return status;
 800ae1e:	7bfb      	ldrb	r3, [r7, #15]
}
 800ae20:	4618      	mov	r0, r3
 800ae22:	3710      	adds	r7, #16
 800ae24:	46bd      	mov	sp, r7
 800ae26:	bd80      	pop	{r7, pc}
 800ae28:	58004000 	.word	0x58004000

0800ae2c <RTC_ByteToBcd2>:
  * @brief  Convert a 2 digit decimal to BCD format.
  * @param  Value Byte to be converted
  * @retval Converted byte
  */
uint8_t RTC_ByteToBcd2(uint8_t Value)
{
 800ae2c:	b480      	push	{r7}
 800ae2e:	b085      	sub	sp, #20
 800ae30:	af00      	add	r7, sp, #0
 800ae32:	4603      	mov	r3, r0
 800ae34:	71fb      	strb	r3, [r7, #7]
  uint32_t bcdhigh = 0U;
 800ae36:	2300      	movs	r3, #0
 800ae38:	60fb      	str	r3, [r7, #12]
  uint8_t  bcdlow  = Value;
 800ae3a:	79fb      	ldrb	r3, [r7, #7]
 800ae3c:	72fb      	strb	r3, [r7, #11]

  while (bcdlow >= 10U)
 800ae3e:	e005      	b.n	800ae4c <RTC_ByteToBcd2+0x20>
  {
    bcdhigh++;
 800ae40:	68fb      	ldr	r3, [r7, #12]
 800ae42:	3301      	adds	r3, #1
 800ae44:	60fb      	str	r3, [r7, #12]
    bcdlow -= 10U;
 800ae46:	7afb      	ldrb	r3, [r7, #11]
 800ae48:	3b0a      	subs	r3, #10
 800ae4a:	72fb      	strb	r3, [r7, #11]
  while (bcdlow >= 10U)
 800ae4c:	7afb      	ldrb	r3, [r7, #11]
 800ae4e:	2b09      	cmp	r3, #9
 800ae50:	d8f6      	bhi.n	800ae40 <RTC_ByteToBcd2+0x14>
  }

  return ((uint8_t)(bcdhigh << 4U) | bcdlow);
 800ae52:	68fb      	ldr	r3, [r7, #12]
 800ae54:	b2db      	uxtb	r3, r3
 800ae56:	011b      	lsls	r3, r3, #4
 800ae58:	b2da      	uxtb	r2, r3
 800ae5a:	7afb      	ldrb	r3, [r7, #11]
 800ae5c:	4313      	orrs	r3, r2
 800ae5e:	b2db      	uxtb	r3, r3
}
 800ae60:	4618      	mov	r0, r3
 800ae62:	3714      	adds	r7, #20
 800ae64:	46bd      	mov	sp, r7
 800ae66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae6a:	4770      	bx	lr

0800ae6c <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800ae6c:	b580      	push	{r7, lr}
 800ae6e:	b084      	sub	sp, #16
 800ae70:	af00      	add	r7, sp, #0
 800ae72:	6078      	str	r0, [r7, #4]
  uint32_t crc_length;
  uint32_t packet_length;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800ae74:	687b      	ldr	r3, [r7, #4]
 800ae76:	2b00      	cmp	r3, #0
 800ae78:	d101      	bne.n	800ae7e <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800ae7a:	2301      	movs	r3, #1
 800ae7c:	e10f      	b.n	800b09e <HAL_SPI_Init+0x232>
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	2200      	movs	r2, #0
 800ae82:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	4a87      	ldr	r2, [pc, #540]	; (800b0a8 <HAL_SPI_Init+0x23c>)
 800ae8a:	4293      	cmp	r3, r2
 800ae8c:	d00f      	beq.n	800aeae <HAL_SPI_Init+0x42>
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	681b      	ldr	r3, [r3, #0]
 800ae92:	4a86      	ldr	r2, [pc, #536]	; (800b0ac <HAL_SPI_Init+0x240>)
 800ae94:	4293      	cmp	r3, r2
 800ae96:	d00a      	beq.n	800aeae <HAL_SPI_Init+0x42>
 800ae98:	687b      	ldr	r3, [r7, #4]
 800ae9a:	681b      	ldr	r3, [r3, #0]
 800ae9c:	4a84      	ldr	r2, [pc, #528]	; (800b0b0 <HAL_SPI_Init+0x244>)
 800ae9e:	4293      	cmp	r3, r2
 800aea0:	d005      	beq.n	800aeae <HAL_SPI_Init+0x42>
 800aea2:	687b      	ldr	r3, [r7, #4]
 800aea4:	68db      	ldr	r3, [r3, #12]
 800aea6:	2b0f      	cmp	r3, #15
 800aea8:	d901      	bls.n	800aeae <HAL_SPI_Init+0x42>
  {
    return HAL_ERROR;
 800aeaa:	2301      	movs	r3, #1
 800aeac:	e0f7      	b.n	800b09e <HAL_SPI_Init+0x232>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 800aeae:	6878      	ldr	r0, [r7, #4]
 800aeb0:	f001 f912 	bl	800c0d8 <SPI_GetPacketSize>
 800aeb4:	60f8      	str	r0, [r7, #12]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800aeb6:	687b      	ldr	r3, [r7, #4]
 800aeb8:	681b      	ldr	r3, [r3, #0]
 800aeba:	4a7b      	ldr	r2, [pc, #492]	; (800b0a8 <HAL_SPI_Init+0x23c>)
 800aebc:	4293      	cmp	r3, r2
 800aebe:	d00c      	beq.n	800aeda <HAL_SPI_Init+0x6e>
 800aec0:	687b      	ldr	r3, [r7, #4]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	4a79      	ldr	r2, [pc, #484]	; (800b0ac <HAL_SPI_Init+0x240>)
 800aec6:	4293      	cmp	r3, r2
 800aec8:	d007      	beq.n	800aeda <HAL_SPI_Init+0x6e>
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	4a78      	ldr	r2, [pc, #480]	; (800b0b0 <HAL_SPI_Init+0x244>)
 800aed0:	4293      	cmp	r3, r2
 800aed2:	d002      	beq.n	800aeda <HAL_SPI_Init+0x6e>
 800aed4:	68fb      	ldr	r3, [r7, #12]
 800aed6:	2b08      	cmp	r3, #8
 800aed8:	d811      	bhi.n	800aefe <HAL_SPI_Init+0x92>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800aeda:	687b      	ldr	r3, [r7, #4]
 800aedc:	681b      	ldr	r3, [r3, #0]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800aede:	4a72      	ldr	r2, [pc, #456]	; (800b0a8 <HAL_SPI_Init+0x23c>)
 800aee0:	4293      	cmp	r3, r2
 800aee2:	d009      	beq.n	800aef8 <HAL_SPI_Init+0x8c>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800aee4:	687b      	ldr	r3, [r7, #4]
 800aee6:	681b      	ldr	r3, [r3, #0]
 800aee8:	4a70      	ldr	r2, [pc, #448]	; (800b0ac <HAL_SPI_Init+0x240>)
 800aeea:	4293      	cmp	r3, r2
 800aeec:	d004      	beq.n	800aef8 <HAL_SPI_Init+0x8c>
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	681b      	ldr	r3, [r3, #0]
 800aef2:	4a6f      	ldr	r2, [pc, #444]	; (800b0b0 <HAL_SPI_Init+0x244>)
 800aef4:	4293      	cmp	r3, r2
 800aef6:	d104      	bne.n	800af02 <HAL_SPI_Init+0x96>
 800aef8:	68fb      	ldr	r3, [r7, #12]
 800aefa:	2b10      	cmp	r3, #16
 800aefc:	d901      	bls.n	800af02 <HAL_SPI_Init+0x96>
  {
    return HAL_ERROR;
 800aefe:	2301      	movs	r3, #1
 800af00:	e0cd      	b.n	800b09e <HAL_SPI_Init+0x232>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800af02:	687b      	ldr	r3, [r7, #4]
 800af04:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800af08:	b2db      	uxtb	r3, r3
 800af0a:	2b00      	cmp	r3, #0
 800af0c:	d106      	bne.n	800af1c <HAL_SPI_Init+0xb0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800af0e:	687b      	ldr	r3, [r7, #4]
 800af10:	2200      	movs	r2, #0
 800af12:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800af16:	6878      	ldr	r0, [r7, #4]
 800af18:	f7f5 ffb6 	bl	8000e88 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800af1c:	687b      	ldr	r3, [r7, #4]
 800af1e:	2202      	movs	r2, #2
 800af20:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	681b      	ldr	r3, [r3, #0]
 800af28:	681a      	ldr	r2, [r3, #0]
 800af2a:	687b      	ldr	r3, [r7, #4]
 800af2c:	681b      	ldr	r3, [r3, #0]
 800af2e:	f022 0201 	bic.w	r2, r2, #1
 800af32:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 800af34:	687b      	ldr	r3, [r7, #4]
 800af36:	681b      	ldr	r3, [r3, #0]
 800af38:	689b      	ldr	r3, [r3, #8]
 800af3a:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 800af3e:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	699b      	ldr	r3, [r3, #24]
 800af44:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800af48:	d119      	bne.n	800af7e <HAL_SPI_Init+0x112>
 800af4a:	687b      	ldr	r3, [r7, #4]
 800af4c:	685b      	ldr	r3, [r3, #4]
 800af4e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800af52:	d103      	bne.n	800af5c <HAL_SPI_Init+0xf0>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800af54:	687b      	ldr	r3, [r7, #4]
 800af56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800af58:	2b00      	cmp	r3, #0
 800af5a:	d008      	beq.n	800af6e <HAL_SPI_Init+0x102>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800af60:	2b00      	cmp	r3, #0
 800af62:	d10c      	bne.n	800af7e <HAL_SPI_Init+0x112>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 800af64:	687b      	ldr	r3, [r7, #4]
 800af66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800af68:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800af6c:	d107      	bne.n	800af7e <HAL_SPI_Init+0x112>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 800af6e:	687b      	ldr	r3, [r7, #4]
 800af70:	681b      	ldr	r3, [r3, #0]
 800af72:	681a      	ldr	r2, [r3, #0]
 800af74:	687b      	ldr	r3, [r7, #4]
 800af76:	681b      	ldr	r3, [r3, #0]
 800af78:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800af7c:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 800af7e:	687b      	ldr	r3, [r7, #4]
 800af80:	685b      	ldr	r3, [r3, #4]
 800af82:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800af86:	2b00      	cmp	r3, #0
 800af88:	d00f      	beq.n	800afaa <HAL_SPI_Init+0x13e>
 800af8a:	687b      	ldr	r3, [r7, #4]
 800af8c:	68db      	ldr	r3, [r3, #12]
 800af8e:	2b06      	cmp	r3, #6
 800af90:	d90b      	bls.n	800afaa <HAL_SPI_Init+0x13e>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	681b      	ldr	r3, [r3, #0]
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	f423 7180 	bic.w	r1, r3, #256	; 0x100
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800afa0:	687b      	ldr	r3, [r7, #4]
 800afa2:	681b      	ldr	r3, [r3, #0]
 800afa4:	430a      	orrs	r2, r1
 800afa6:	601a      	str	r2, [r3, #0]
 800afa8:	e007      	b.n	800afba <HAL_SPI_Init+0x14e>
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 800afaa:	687b      	ldr	r3, [r7, #4]
 800afac:	681b      	ldr	r3, [r3, #0]
 800afae:	681a      	ldr	r2, [r3, #0]
 800afb0:	687b      	ldr	r3, [r7, #4]
 800afb2:	681b      	ldr	r3, [r3, #0]
 800afb4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800afb8:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 800afba:	687b      	ldr	r3, [r7, #4]
 800afbc:	69da      	ldr	r2, [r3, #28]
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800afc2:	431a      	orrs	r2, r3
 800afc4:	68bb      	ldr	r3, [r7, #8]
 800afc6:	431a      	orrs	r2, r3
 800afc8:	687b      	ldr	r3, [r7, #4]
 800afca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800afcc:	ea42 0103 	orr.w	r1, r2, r3
 800afd0:	687b      	ldr	r3, [r7, #4]
 800afd2:	68da      	ldr	r2, [r3, #12]
 800afd4:	687b      	ldr	r3, [r7, #4]
 800afd6:	681b      	ldr	r3, [r3, #0]
 800afd8:	430a      	orrs	r2, r1
 800afda:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 800afdc:	687b      	ldr	r3, [r7, #4]
 800afde:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800afe0:	687b      	ldr	r3, [r7, #4]
 800afe2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800afe4:	431a      	orrs	r2, r3
 800afe6:	687b      	ldr	r3, [r7, #4]
 800afe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800afea:	431a      	orrs	r2, r3
 800afec:	687b      	ldr	r3, [r7, #4]
 800afee:	699b      	ldr	r3, [r3, #24]
 800aff0:	431a      	orrs	r2, r3
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	691b      	ldr	r3, [r3, #16]
 800aff6:	431a      	orrs	r2, r3
 800aff8:	687b      	ldr	r3, [r7, #4]
 800affa:	695b      	ldr	r3, [r3, #20]
 800affc:	431a      	orrs	r2, r3
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	6a1b      	ldr	r3, [r3, #32]
 800b002:	431a      	orrs	r2, r3
 800b004:	687b      	ldr	r3, [r7, #4]
 800b006:	685b      	ldr	r3, [r3, #4]
 800b008:	431a      	orrs	r2, r3
 800b00a:	687b      	ldr	r3, [r7, #4]
 800b00c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800b00e:	431a      	orrs	r2, r3
 800b010:	687b      	ldr	r3, [r7, #4]
 800b012:	689b      	ldr	r3, [r3, #8]
 800b014:	431a      	orrs	r2, r3
 800b016:	687b      	ldr	r3, [r7, #4]
 800b018:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b01a:	ea42 0103 	orr.w	r1, r2, r3
 800b01e:	687b      	ldr	r3, [r7, #4]
 800b020:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800b022:	687b      	ldr	r3, [r7, #4]
 800b024:	681b      	ldr	r3, [r3, #0]
 800b026:	430a      	orrs	r2, r1
 800b028:	60da      	str	r2, [r3, #12]
    WRITE_REG(hspi->Instance->CRCPOLY, hspi->Init.CRCPolynomial);
  }
#endif /* USE_SPI_CRC */

  /* Insure that Underrun configuration is managed only by Salve */
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
 800b02a:	687b      	ldr	r3, [r7, #4]
 800b02c:	685b      	ldr	r3, [r3, #4]
 800b02e:	2b00      	cmp	r3, #0
 800b030:	d113      	bne.n	800b05a <HAL_SPI_Init+0x1ee>
    /* Set Default Underrun configuration */
#if (USE_SPI_CRC != 0UL)
    if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
#endif /* USE_SPI_CRC */
    {
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 800b032:	687b      	ldr	r3, [r7, #4]
 800b034:	681b      	ldr	r3, [r3, #0]
 800b036:	689b      	ldr	r3, [r3, #8]
 800b038:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 800b03c:	687b      	ldr	r3, [r7, #4]
 800b03e:	681b      	ldr	r3, [r3, #0]
 800b040:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b044:	609a      	str	r2, [r3, #8]
    }
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	681b      	ldr	r3, [r3, #0]
 800b04a:	689b      	ldr	r3, [r3, #8]
 800b04c:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 800b050:	687b      	ldr	r3, [r7, #4]
 800b052:	681b      	ldr	r3, [r3, #0]
 800b054:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b058:	609a      	str	r2, [r3, #8]
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b05a:	687b      	ldr	r3, [r7, #4]
 800b05c:	681b      	ldr	r3, [r3, #0]
 800b05e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b060:	687b      	ldr	r3, [r7, #4]
 800b062:	681b      	ldr	r3, [r3, #0]
 800b064:	f022 0201 	bic.w	r2, r2, #1
 800b068:	651a      	str	r2, [r3, #80]	; 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 800b06a:	687b      	ldr	r3, [r7, #4]
 800b06c:	685b      	ldr	r3, [r3, #4]
 800b06e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800b072:	2b00      	cmp	r3, #0
 800b074:	d00a      	beq.n	800b08c <HAL_SPI_Init+0x220>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	681b      	ldr	r3, [r3, #0]
 800b07a:	68db      	ldr	r3, [r3, #12]
 800b07c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800b080:	687b      	ldr	r3, [r7, #4]
 800b082:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b084:	687b      	ldr	r3, [r7, #4]
 800b086:	681b      	ldr	r3, [r3, #0]
 800b088:	430a      	orrs	r2, r1
 800b08a:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b08c:	687b      	ldr	r3, [r7, #4]
 800b08e:	2200      	movs	r2, #0
 800b090:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->State     = HAL_SPI_STATE_READY;
 800b094:	687b      	ldr	r3, [r7, #4]
 800b096:	2201      	movs	r2, #1
 800b098:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  return HAL_OK;
 800b09c:	2300      	movs	r3, #0
}
 800b09e:	4618      	mov	r0, r3
 800b0a0:	3710      	adds	r7, #16
 800b0a2:	46bd      	mov	sp, r7
 800b0a4:	bd80      	pop	{r7, pc}
 800b0a6:	bf00      	nop
 800b0a8:	40013000 	.word	0x40013000
 800b0ac:	40003800 	.word	0x40003800
 800b0b0:	40003c00 	.word	0x40003c00

0800b0b4 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800b0b4:	b580      	push	{r7, lr}
 800b0b6:	b08a      	sub	sp, #40	; 0x28
 800b0b8:	af02      	add	r7, sp, #8
 800b0ba:	60f8      	str	r0, [r7, #12]
 800b0bc:	60b9      	str	r1, [r7, #8]
 800b0be:	603b      	str	r3, [r7, #0]
 800b0c0:	4613      	mov	r3, r2
 800b0c2:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 800b0c4:	68fb      	ldr	r3, [r7, #12]
 800b0c6:	681b      	ldr	r3, [r3, #0]
 800b0c8:	3320      	adds	r3, #32
 800b0ca:	61fb      	str	r3, [r7, #28]
#endif /* __GNUC__ */

  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800b0cc:	2300      	movs	r3, #0
 800b0ce:	76fb      	strb	r3, [r7, #27]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Lock the process */
  __HAL_LOCK(hspi);
 800b0d0:	68fb      	ldr	r3, [r7, #12]
 800b0d2:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800b0d6:	2b01      	cmp	r3, #1
 800b0d8:	d101      	bne.n	800b0de <HAL_SPI_Transmit+0x2a>
 800b0da:	2302      	movs	r3, #2
 800b0dc:	e1e1      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
 800b0de:	68fb      	ldr	r3, [r7, #12]
 800b0e0:	2201      	movs	r2, #1
 800b0e2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800b0e6:	f7f7 fad7 	bl	8002698 <HAL_GetTick>
 800b0ea:	6178      	str	r0, [r7, #20]

  if (hspi->State != HAL_SPI_STATE_READY)
 800b0ec:	68fb      	ldr	r3, [r7, #12]
 800b0ee:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b0f2:	b2db      	uxtb	r3, r3
 800b0f4:	2b01      	cmp	r3, #1
 800b0f6:	d007      	beq.n	800b108 <HAL_SPI_Transmit+0x54>
  {
    errorcode = HAL_BUSY;
 800b0f8:	2302      	movs	r3, #2
 800b0fa:	76fb      	strb	r3, [r7, #27]
    __HAL_UNLOCK(hspi);
 800b0fc:	68fb      	ldr	r3, [r7, #12]
 800b0fe:	2200      	movs	r2, #0
 800b100:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b104:	7efb      	ldrb	r3, [r7, #27]
 800b106:	e1cc      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
  }

  if ((pData == NULL) || (Size == 0UL))
 800b108:	68bb      	ldr	r3, [r7, #8]
 800b10a:	2b00      	cmp	r3, #0
 800b10c:	d002      	beq.n	800b114 <HAL_SPI_Transmit+0x60>
 800b10e:	88fb      	ldrh	r3, [r7, #6]
 800b110:	2b00      	cmp	r3, #0
 800b112:	d107      	bne.n	800b124 <HAL_SPI_Transmit+0x70>
  {
    errorcode = HAL_ERROR;
 800b114:	2301      	movs	r3, #1
 800b116:	76fb      	strb	r3, [r7, #27]
    __HAL_UNLOCK(hspi);
 800b118:	68fb      	ldr	r3, [r7, #12]
 800b11a:	2200      	movs	r2, #0
 800b11c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b120:	7efb      	ldrb	r3, [r7, #27]
 800b122:	e1be      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b124:	68fb      	ldr	r3, [r7, #12]
 800b126:	2203      	movs	r2, #3
 800b128:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b12c:	68fb      	ldr	r3, [r7, #12]
 800b12e:	2200      	movs	r2, #0
 800b130:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800b134:	68fb      	ldr	r3, [r7, #12]
 800b136:	68ba      	ldr	r2, [r7, #8]
 800b138:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800b13a:	68fb      	ldr	r3, [r7, #12]
 800b13c:	88fa      	ldrh	r2, [r7, #6]
 800b13e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800b142:	68fb      	ldr	r3, [r7, #12]
 800b144:	88fa      	ldrh	r2, [r7, #6]
 800b146:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800b14a:	68fb      	ldr	r3, [r7, #12]
 800b14c:	2200      	movs	r2, #0
 800b14e:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = (uint16_t) 0UL;
 800b150:	68fb      	ldr	r3, [r7, #12]
 800b152:	2200      	movs	r2, #0
 800b154:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t) 0UL;
 800b158:	68fb      	ldr	r3, [r7, #12]
 800b15a:	2200      	movs	r2, #0
 800b15c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxISR       = NULL;
 800b160:	68fb      	ldr	r3, [r7, #12]
 800b162:	2200      	movs	r2, #0
 800b164:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800b166:	68fb      	ldr	r3, [r7, #12]
 800b168:	2200      	movs	r2, #0
 800b16a:	671a      	str	r2, [r3, #112]	; 0x70

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b16c:	68fb      	ldr	r3, [r7, #12]
 800b16e:	689b      	ldr	r3, [r3, #8]
 800b170:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800b174:	d108      	bne.n	800b188 <HAL_SPI_Transmit+0xd4>
  {
    SPI_1LINE_TX(hspi);
 800b176:	68fb      	ldr	r3, [r7, #12]
 800b178:	681b      	ldr	r3, [r3, #0]
 800b17a:	681a      	ldr	r2, [r3, #0]
 800b17c:	68fb      	ldr	r3, [r7, #12]
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b184:	601a      	str	r2, [r3, #0]
 800b186:	e009      	b.n	800b19c <HAL_SPI_Transmit+0xe8>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800b188:	68fb      	ldr	r3, [r7, #12]
 800b18a:	681b      	ldr	r3, [r3, #0]
 800b18c:	68db      	ldr	r3, [r3, #12]
 800b18e:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800b192:	68fb      	ldr	r3, [r7, #12]
 800b194:	681b      	ldr	r3, [r3, #0]
 800b196:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800b19a:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800b19c:	68fb      	ldr	r3, [r7, #12]
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	685a      	ldr	r2, [r3, #4]
 800b1a2:	4b96      	ldr	r3, [pc, #600]	; (800b3fc <HAL_SPI_Transmit+0x348>)
 800b1a4:	4013      	ands	r3, r2
 800b1a6:	88f9      	ldrh	r1, [r7, #6]
 800b1a8:	68fa      	ldr	r2, [r7, #12]
 800b1aa:	6812      	ldr	r2, [r2, #0]
 800b1ac:	430b      	orrs	r3, r1
 800b1ae:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800b1b0:	68fb      	ldr	r3, [r7, #12]
 800b1b2:	681b      	ldr	r3, [r3, #0]
 800b1b4:	681a      	ldr	r2, [r3, #0]
 800b1b6:	68fb      	ldr	r3, [r7, #12]
 800b1b8:	681b      	ldr	r3, [r3, #0]
 800b1ba:	f042 0201 	orr.w	r2, r2, #1
 800b1be:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b1c0:	68fb      	ldr	r3, [r7, #12]
 800b1c2:	685b      	ldr	r3, [r3, #4]
 800b1c4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800b1c8:	d107      	bne.n	800b1da <HAL_SPI_Transmit+0x126>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800b1ca:	68fb      	ldr	r3, [r7, #12]
 800b1cc:	681b      	ldr	r3, [r3, #0]
 800b1ce:	681a      	ldr	r2, [r3, #0]
 800b1d0:	68fb      	ldr	r3, [r7, #12]
 800b1d2:	681b      	ldr	r3, [r3, #0]
 800b1d4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b1d8:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	68db      	ldr	r3, [r3, #12]
 800b1de:	2b0f      	cmp	r3, #15
 800b1e0:	d947      	bls.n	800b272 <HAL_SPI_Transmit+0x1be>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800b1e2:	e03f      	b.n	800b264 <HAL_SPI_Transmit+0x1b0>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800b1e4:	68fb      	ldr	r3, [r7, #12]
 800b1e6:	681b      	ldr	r3, [r3, #0]
 800b1e8:	695b      	ldr	r3, [r3, #20]
 800b1ea:	f003 0302 	and.w	r3, r3, #2
 800b1ee:	2b02      	cmp	r3, #2
 800b1f0:	d114      	bne.n	800b21c <HAL_SPI_Transmit+0x168>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800b1f2:	68fb      	ldr	r3, [r7, #12]
 800b1f4:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800b1f6:	68fb      	ldr	r3, [r7, #12]
 800b1f8:	681b      	ldr	r3, [r3, #0]
 800b1fa:	6812      	ldr	r2, [r2, #0]
 800b1fc:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b202:	1d1a      	adds	r2, r3, #4
 800b204:	68fb      	ldr	r3, [r7, #12]
 800b206:	65da      	str	r2, [r3, #92]	; 0x5c
        hspi->TxXferCount--;
 800b208:	68fb      	ldr	r3, [r7, #12]
 800b20a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b20e:	b29b      	uxth	r3, r3
 800b210:	3b01      	subs	r3, #1
 800b212:	b29a      	uxth	r2, r3
 800b214:	68fb      	ldr	r3, [r7, #12]
 800b216:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b21a:	e023      	b.n	800b264 <HAL_SPI_Transmit+0x1b0>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b21c:	f7f7 fa3c 	bl	8002698 <HAL_GetTick>
 800b220:	4602      	mov	r2, r0
 800b222:	697b      	ldr	r3, [r7, #20]
 800b224:	1ad3      	subs	r3, r2, r3
 800b226:	683a      	ldr	r2, [r7, #0]
 800b228:	429a      	cmp	r2, r3
 800b22a:	d803      	bhi.n	800b234 <HAL_SPI_Transmit+0x180>
 800b22c:	683b      	ldr	r3, [r7, #0]
 800b22e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b232:	d102      	bne.n	800b23a <HAL_SPI_Transmit+0x186>
 800b234:	683b      	ldr	r3, [r7, #0]
 800b236:	2b00      	cmp	r3, #0
 800b238:	d114      	bne.n	800b264 <HAL_SPI_Transmit+0x1b0>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b23a:	68f8      	ldr	r0, [r7, #12]
 800b23c:	f000 fe7e 	bl	800bf3c <SPI_CloseTransfer>

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b240:	68fb      	ldr	r3, [r7, #12]
 800b242:	2200      	movs	r2, #0
 800b244:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b248:	68fb      	ldr	r3, [r7, #12]
 800b24a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b24e:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b252:	68fb      	ldr	r3, [r7, #12]
 800b254:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b258:	68fb      	ldr	r3, [r7, #12]
 800b25a:	2201      	movs	r2, #1
 800b25c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
          return HAL_TIMEOUT;
 800b260:	2303      	movs	r3, #3
 800b262:	e11e      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
    while (hspi->TxXferCount > 0UL)
 800b264:	68fb      	ldr	r3, [r7, #12]
 800b266:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b26a:	b29b      	uxth	r3, r3
 800b26c:	2b00      	cmp	r3, #0
 800b26e:	d1b9      	bne.n	800b1e4 <HAL_SPI_Transmit+0x130>
 800b270:	e0f1      	b.n	800b456 <HAL_SPI_Transmit+0x3a2>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800b272:	68fb      	ldr	r3, [r7, #12]
 800b274:	68db      	ldr	r3, [r3, #12]
 800b276:	2b07      	cmp	r3, #7
 800b278:	f240 80e6 	bls.w	800b448 <HAL_SPI_Transmit+0x394>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800b27c:	e05d      	b.n	800b33a <HAL_SPI_Transmit+0x286>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800b27e:	68fb      	ldr	r3, [r7, #12]
 800b280:	681b      	ldr	r3, [r3, #0]
 800b282:	695b      	ldr	r3, [r3, #20]
 800b284:	f003 0302 	and.w	r3, r3, #2
 800b288:	2b02      	cmp	r3, #2
 800b28a:	d132      	bne.n	800b2f2 <HAL_SPI_Transmit+0x23e>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800b28c:	68fb      	ldr	r3, [r7, #12]
 800b28e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b292:	b29b      	uxth	r3, r3
 800b294:	2b01      	cmp	r3, #1
 800b296:	d918      	bls.n	800b2ca <HAL_SPI_Transmit+0x216>
 800b298:	68fb      	ldr	r3, [r7, #12]
 800b29a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b29c:	2b00      	cmp	r3, #0
 800b29e:	d014      	beq.n	800b2ca <HAL_SPI_Transmit+0x216>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800b2a0:	68fb      	ldr	r3, [r7, #12]
 800b2a2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800b2a4:	68fb      	ldr	r3, [r7, #12]
 800b2a6:	681b      	ldr	r3, [r3, #0]
 800b2a8:	6812      	ldr	r2, [r2, #0]
 800b2aa:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800b2ac:	68fb      	ldr	r3, [r7, #12]
 800b2ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b2b0:	1d1a      	adds	r2, r3, #4
 800b2b2:	68fb      	ldr	r3, [r7, #12]
 800b2b4:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800b2b6:	68fb      	ldr	r3, [r7, #12]
 800b2b8:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b2bc:	b29b      	uxth	r3, r3
 800b2be:	3b02      	subs	r3, #2
 800b2c0:	b29a      	uxth	r2, r3
 800b2c2:	68fb      	ldr	r3, [r7, #12]
 800b2c4:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b2c8:	e037      	b.n	800b33a <HAL_SPI_Transmit+0x286>
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800b2ca:	68fb      	ldr	r3, [r7, #12]
 800b2cc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b2ce:	881a      	ldrh	r2, [r3, #0]
 800b2d0:	69fb      	ldr	r3, [r7, #28]
 800b2d2:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800b2d4:	68fb      	ldr	r3, [r7, #12]
 800b2d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b2d8:	1c9a      	adds	r2, r3, #2
 800b2da:	68fb      	ldr	r3, [r7, #12]
 800b2dc:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800b2de:	68fb      	ldr	r3, [r7, #12]
 800b2e0:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b2e4:	b29b      	uxth	r3, r3
 800b2e6:	3b01      	subs	r3, #1
 800b2e8:	b29a      	uxth	r2, r3
 800b2ea:	68fb      	ldr	r3, [r7, #12]
 800b2ec:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b2f0:	e023      	b.n	800b33a <HAL_SPI_Transmit+0x286>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b2f2:	f7f7 f9d1 	bl	8002698 <HAL_GetTick>
 800b2f6:	4602      	mov	r2, r0
 800b2f8:	697b      	ldr	r3, [r7, #20]
 800b2fa:	1ad3      	subs	r3, r2, r3
 800b2fc:	683a      	ldr	r2, [r7, #0]
 800b2fe:	429a      	cmp	r2, r3
 800b300:	d803      	bhi.n	800b30a <HAL_SPI_Transmit+0x256>
 800b302:	683b      	ldr	r3, [r7, #0]
 800b304:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b308:	d102      	bne.n	800b310 <HAL_SPI_Transmit+0x25c>
 800b30a:	683b      	ldr	r3, [r7, #0]
 800b30c:	2b00      	cmp	r3, #0
 800b30e:	d114      	bne.n	800b33a <HAL_SPI_Transmit+0x286>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b310:	68f8      	ldr	r0, [r7, #12]
 800b312:	f000 fe13 	bl	800bf3c <SPI_CloseTransfer>

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b316:	68fb      	ldr	r3, [r7, #12]
 800b318:	2200      	movs	r2, #0
 800b31a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b31e:	68fb      	ldr	r3, [r7, #12]
 800b320:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b324:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b328:	68fb      	ldr	r3, [r7, #12]
 800b32a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b32e:	68fb      	ldr	r3, [r7, #12]
 800b330:	2201      	movs	r2, #1
 800b332:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
          return HAL_TIMEOUT;
 800b336:	2303      	movs	r3, #3
 800b338:	e0b3      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
    while (hspi->TxXferCount > 0UL)
 800b33a:	68fb      	ldr	r3, [r7, #12]
 800b33c:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b340:	b29b      	uxth	r3, r3
 800b342:	2b00      	cmp	r3, #0
 800b344:	d19b      	bne.n	800b27e <HAL_SPI_Transmit+0x1ca>
 800b346:	e086      	b.n	800b456 <HAL_SPI_Transmit+0x3a2>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800b348:	68fb      	ldr	r3, [r7, #12]
 800b34a:	681b      	ldr	r3, [r3, #0]
 800b34c:	695b      	ldr	r3, [r3, #20]
 800b34e:	f003 0302 	and.w	r3, r3, #2
 800b352:	2b02      	cmp	r3, #2
 800b354:	d154      	bne.n	800b400 <HAL_SPI_Transmit+0x34c>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 800b356:	68fb      	ldr	r3, [r7, #12]
 800b358:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b35c:	b29b      	uxth	r3, r3
 800b35e:	2b03      	cmp	r3, #3
 800b360:	d918      	bls.n	800b394 <HAL_SPI_Transmit+0x2e0>
 800b362:	68fb      	ldr	r3, [r7, #12]
 800b364:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b366:	2b40      	cmp	r3, #64	; 0x40
 800b368:	d914      	bls.n	800b394 <HAL_SPI_Transmit+0x2e0>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800b36a:	68fb      	ldr	r3, [r7, #12]
 800b36c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800b36e:	68fb      	ldr	r3, [r7, #12]
 800b370:	681b      	ldr	r3, [r3, #0]
 800b372:	6812      	ldr	r2, [r2, #0]
 800b374:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800b376:	68fb      	ldr	r3, [r7, #12]
 800b378:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b37a:	1d1a      	adds	r2, r3, #4
 800b37c:	68fb      	ldr	r3, [r7, #12]
 800b37e:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)4UL;
 800b380:	68fb      	ldr	r3, [r7, #12]
 800b382:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b386:	b29b      	uxth	r3, r3
 800b388:	3b04      	subs	r3, #4
 800b38a:	b29a      	uxth	r2, r3
 800b38c:	68fb      	ldr	r3, [r7, #12]
 800b38e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b392:	e059      	b.n	800b448 <HAL_SPI_Transmit+0x394>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800b394:	68fb      	ldr	r3, [r7, #12]
 800b396:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b39a:	b29b      	uxth	r3, r3
 800b39c:	2b01      	cmp	r3, #1
 800b39e:	d917      	bls.n	800b3d0 <HAL_SPI_Transmit+0x31c>
 800b3a0:	68fb      	ldr	r3, [r7, #12]
 800b3a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b3a4:	2b00      	cmp	r3, #0
 800b3a6:	d013      	beq.n	800b3d0 <HAL_SPI_Transmit+0x31c>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800b3a8:	68fb      	ldr	r3, [r7, #12]
 800b3aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b3ac:	881a      	ldrh	r2, [r3, #0]
 800b3ae:	69fb      	ldr	r3, [r7, #28]
 800b3b0:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800b3b2:	68fb      	ldr	r3, [r7, #12]
 800b3b4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b3b6:	1c9a      	adds	r2, r3, #2
 800b3b8:	68fb      	ldr	r3, [r7, #12]
 800b3ba:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800b3bc:	68fb      	ldr	r3, [r7, #12]
 800b3be:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b3c2:	b29b      	uxth	r3, r3
 800b3c4:	3b02      	subs	r3, #2
 800b3c6:	b29a      	uxth	r2, r3
 800b3c8:	68fb      	ldr	r3, [r7, #12]
 800b3ca:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b3ce:	e03b      	b.n	800b448 <HAL_SPI_Transmit+0x394>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800b3d0:	68fb      	ldr	r3, [r7, #12]
 800b3d2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800b3d4:	68fb      	ldr	r3, [r7, #12]
 800b3d6:	681b      	ldr	r3, [r3, #0]
 800b3d8:	3320      	adds	r3, #32
 800b3da:	7812      	ldrb	r2, [r2, #0]
 800b3dc:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 800b3de:	68fb      	ldr	r3, [r7, #12]
 800b3e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b3e2:	1c5a      	adds	r2, r3, #1
 800b3e4:	68fb      	ldr	r3, [r7, #12]
 800b3e6:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800b3e8:	68fb      	ldr	r3, [r7, #12]
 800b3ea:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b3ee:	b29b      	uxth	r3, r3
 800b3f0:	3b01      	subs	r3, #1
 800b3f2:	b29a      	uxth	r2, r3
 800b3f4:	68fb      	ldr	r3, [r7, #12]
 800b3f6:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b3fa:	e025      	b.n	800b448 <HAL_SPI_Transmit+0x394>
 800b3fc:	ffff0000 	.word	0xffff0000
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b400:	f7f7 f94a 	bl	8002698 <HAL_GetTick>
 800b404:	4602      	mov	r2, r0
 800b406:	697b      	ldr	r3, [r7, #20]
 800b408:	1ad3      	subs	r3, r2, r3
 800b40a:	683a      	ldr	r2, [r7, #0]
 800b40c:	429a      	cmp	r2, r3
 800b40e:	d803      	bhi.n	800b418 <HAL_SPI_Transmit+0x364>
 800b410:	683b      	ldr	r3, [r7, #0]
 800b412:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b416:	d102      	bne.n	800b41e <HAL_SPI_Transmit+0x36a>
 800b418:	683b      	ldr	r3, [r7, #0]
 800b41a:	2b00      	cmp	r3, #0
 800b41c:	d114      	bne.n	800b448 <HAL_SPI_Transmit+0x394>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b41e:	68f8      	ldr	r0, [r7, #12]
 800b420:	f000 fd8c 	bl	800bf3c <SPI_CloseTransfer>

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b424:	68fb      	ldr	r3, [r7, #12]
 800b426:	2200      	movs	r2, #0
 800b428:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b42c:	68fb      	ldr	r3, [r7, #12]
 800b42e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b432:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b436:	68fb      	ldr	r3, [r7, #12]
 800b438:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b43c:	68fb      	ldr	r3, [r7, #12]
 800b43e:	2201      	movs	r2, #1
 800b440:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
          return HAL_TIMEOUT;
 800b444:	2303      	movs	r3, #3
 800b446:	e02c      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
    while (hspi->TxXferCount > 0UL)
 800b448:	68fb      	ldr	r3, [r7, #12]
 800b44a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b44e:	b29b      	uxth	r3, r3
 800b450:	2b00      	cmp	r3, #0
 800b452:	f47f af79 	bne.w	800b348 <HAL_SPI_Transmit+0x294>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 800b456:	697b      	ldr	r3, [r7, #20]
 800b458:	9300      	str	r3, [sp, #0]
 800b45a:	683b      	ldr	r3, [r7, #0]
 800b45c:	2200      	movs	r2, #0
 800b45e:	2108      	movs	r1, #8
 800b460:	68f8      	ldr	r0, [r7, #12]
 800b462:	f000 fe0b 	bl	800c07c <SPI_WaitOnFlagUntilTimeout>
 800b466:	4603      	mov	r3, r0
 800b468:	2b00      	cmp	r3, #0
 800b46a:	d007      	beq.n	800b47c <HAL_SPI_Transmit+0x3c8>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b46c:	68fb      	ldr	r3, [r7, #12]
 800b46e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b472:	f043 0220 	orr.w	r2, r3, #32
 800b476:	68fb      	ldr	r3, [r7, #12]
 800b478:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 800b47c:	68f8      	ldr	r0, [r7, #12]
 800b47e:	f000 fd5d 	bl	800bf3c <SPI_CloseTransfer>

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800b482:	68fb      	ldr	r3, [r7, #12]
 800b484:	2200      	movs	r2, #0
 800b486:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  hspi->State = HAL_SPI_STATE_READY;
 800b48a:	68fb      	ldr	r3, [r7, #12]
 800b48c:	2201      	movs	r2, #1
 800b48e:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b492:	68fb      	ldr	r3, [r7, #12]
 800b494:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b498:	2b00      	cmp	r3, #0
 800b49a:	d001      	beq.n	800b4a0 <HAL_SPI_Transmit+0x3ec>
  {
    return HAL_ERROR;
 800b49c:	2301      	movs	r3, #1
 800b49e:	e000      	b.n	800b4a2 <HAL_SPI_Transmit+0x3ee>
  }
  return errorcode;
 800b4a0:	7efb      	ldrb	r3, [r7, #27]
}
 800b4a2:	4618      	mov	r0, r3
 800b4a4:	3720      	adds	r7, #32
 800b4a6:	46bd      	mov	sp, r7
 800b4a8:	bd80      	pop	{r7, pc}
 800b4aa:	bf00      	nop

0800b4ac <HAL_SPI_Receive>:
  * @param  Size   : amount of data to be received
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800b4ac:	b580      	push	{r7, lr}
 800b4ae:	b088      	sub	sp, #32
 800b4b0:	af00      	add	r7, sp, #0
 800b4b2:	60f8      	str	r0, [r7, #12]
 800b4b4:	60b9      	str	r1, [r7, #8]
 800b4b6:	603b      	str	r3, [r7, #0]
 800b4b8:	4613      	mov	r3, r2
 800b4ba:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800b4bc:	2300      	movs	r3, #0
 800b4be:	77fb      	strb	r3, [r7, #31]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 800b4c0:	68fb      	ldr	r3, [r7, #12]
 800b4c2:	681b      	ldr	r3, [r3, #0]
 800b4c4:	3330      	adds	r3, #48	; 0x30
 800b4c6:	61bb      	str	r3, [r7, #24]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));

  /* Lock the process */
  __HAL_LOCK(hspi);
 800b4c8:	68fb      	ldr	r3, [r7, #12]
 800b4ca:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800b4ce:	2b01      	cmp	r3, #1
 800b4d0:	d101      	bne.n	800b4d6 <HAL_SPI_Receive+0x2a>
 800b4d2:	2302      	movs	r3, #2
 800b4d4:	e173      	b.n	800b7be <HAL_SPI_Receive+0x312>
 800b4d6:	68fb      	ldr	r3, [r7, #12]
 800b4d8:	2201      	movs	r2, #1
 800b4da:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800b4de:	f7f7 f8db 	bl	8002698 <HAL_GetTick>
 800b4e2:	6178      	str	r0, [r7, #20]

  if (hspi->State != HAL_SPI_STATE_READY)
 800b4e4:	68fb      	ldr	r3, [r7, #12]
 800b4e6:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b4ea:	b2db      	uxtb	r3, r3
 800b4ec:	2b01      	cmp	r3, #1
 800b4ee:	d007      	beq.n	800b500 <HAL_SPI_Receive+0x54>
  {
    errorcode = HAL_BUSY;
 800b4f0:	2302      	movs	r3, #2
 800b4f2:	77fb      	strb	r3, [r7, #31]
    __HAL_UNLOCK(hspi);
 800b4f4:	68fb      	ldr	r3, [r7, #12]
 800b4f6:	2200      	movs	r2, #0
 800b4f8:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b4fc:	7ffb      	ldrb	r3, [r7, #31]
 800b4fe:	e15e      	b.n	800b7be <HAL_SPI_Receive+0x312>
  }

  if ((pData == NULL) || (Size == 0UL))
 800b500:	68bb      	ldr	r3, [r7, #8]
 800b502:	2b00      	cmp	r3, #0
 800b504:	d002      	beq.n	800b50c <HAL_SPI_Receive+0x60>
 800b506:	88fb      	ldrh	r3, [r7, #6]
 800b508:	2b00      	cmp	r3, #0
 800b50a:	d107      	bne.n	800b51c <HAL_SPI_Receive+0x70>
  {
    errorcode = HAL_ERROR;
 800b50c:	2301      	movs	r3, #1
 800b50e:	77fb      	strb	r3, [r7, #31]
    __HAL_UNLOCK(hspi);
 800b510:	68fb      	ldr	r3, [r7, #12]
 800b512:	2200      	movs	r2, #0
 800b514:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b518:	7ffb      	ldrb	r3, [r7, #31]
 800b51a:	e150      	b.n	800b7be <HAL_SPI_Receive+0x312>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800b51c:	68fb      	ldr	r3, [r7, #12]
 800b51e:	2204      	movs	r2, #4
 800b520:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b524:	68fb      	ldr	r3, [r7, #12]
 800b526:	2200      	movs	r2, #0
 800b528:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800b52c:	68fb      	ldr	r3, [r7, #12]
 800b52e:	68ba      	ldr	r2, [r7, #8]
 800b530:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = Size;
 800b532:	68fb      	ldr	r3, [r7, #12]
 800b534:	88fa      	ldrh	r2, [r7, #6]
 800b536:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = Size;
 800b53a:	68fb      	ldr	r3, [r7, #12]
 800b53c:	88fa      	ldrh	r2, [r7, #6]
 800b53e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = NULL;
 800b542:	68fb      	ldr	r3, [r7, #12]
 800b544:	2200      	movs	r2, #0
 800b546:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = (uint16_t) 0UL;
 800b548:	68fb      	ldr	r3, [r7, #12]
 800b54a:	2200      	movs	r2, #0
 800b54c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = (uint16_t) 0UL;
 800b550:	68fb      	ldr	r3, [r7, #12]
 800b552:	2200      	movs	r2, #0
 800b554:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxISR       = NULL;
 800b558:	68fb      	ldr	r3, [r7, #12]
 800b55a:	2200      	movs	r2, #0
 800b55c:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->TxISR       = NULL;
 800b55e:	68fb      	ldr	r3, [r7, #12]
 800b560:	2200      	movs	r2, #0
 800b562:	675a      	str	r2, [r3, #116]	; 0x74

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b564:	68fb      	ldr	r3, [r7, #12]
 800b566:	689b      	ldr	r3, [r3, #8]
 800b568:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800b56c:	d108      	bne.n	800b580 <HAL_SPI_Receive+0xd4>
  {
    SPI_1LINE_RX(hspi);
 800b56e:	68fb      	ldr	r3, [r7, #12]
 800b570:	681b      	ldr	r3, [r3, #0]
 800b572:	681a      	ldr	r2, [r3, #0]
 800b574:	68fb      	ldr	r3, [r7, #12]
 800b576:	681b      	ldr	r3, [r3, #0]
 800b578:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b57c:	601a      	str	r2, [r3, #0]
 800b57e:	e009      	b.n	800b594 <HAL_SPI_Receive+0xe8>
  }
  else
  {
    SPI_2LINES_RX(hspi);
 800b580:	68fb      	ldr	r3, [r7, #12]
 800b582:	681b      	ldr	r3, [r3, #0]
 800b584:	68db      	ldr	r3, [r3, #12]
 800b586:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800b58a:	68fb      	ldr	r3, [r7, #12]
 800b58c:	681b      	ldr	r3, [r3, #0]
 800b58e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b592:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800b594:	68fb      	ldr	r3, [r7, #12]
 800b596:	681b      	ldr	r3, [r3, #0]
 800b598:	685a      	ldr	r2, [r3, #4]
 800b59a:	4b8b      	ldr	r3, [pc, #556]	; (800b7c8 <HAL_SPI_Receive+0x31c>)
 800b59c:	4013      	ands	r3, r2
 800b59e:	88f9      	ldrh	r1, [r7, #6]
 800b5a0:	68fa      	ldr	r2, [r7, #12]
 800b5a2:	6812      	ldr	r2, [r2, #0]
 800b5a4:	430b      	orrs	r3, r1
 800b5a6:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800b5a8:	68fb      	ldr	r3, [r7, #12]
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	681a      	ldr	r2, [r3, #0]
 800b5ae:	68fb      	ldr	r3, [r7, #12]
 800b5b0:	681b      	ldr	r3, [r3, #0]
 800b5b2:	f042 0201 	orr.w	r2, r2, #1
 800b5b6:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b5b8:	68fb      	ldr	r3, [r7, #12]
 800b5ba:	685b      	ldr	r3, [r3, #4]
 800b5bc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800b5c0:	d107      	bne.n	800b5d2 <HAL_SPI_Receive+0x126>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800b5c2:	68fb      	ldr	r3, [r7, #12]
 800b5c4:	681b      	ldr	r3, [r3, #0]
 800b5c6:	681a      	ldr	r2, [r3, #0]
 800b5c8:	68fb      	ldr	r3, [r7, #12]
 800b5ca:	681b      	ldr	r3, [r3, #0]
 800b5cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b5d0:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	68db      	ldr	r3, [r3, #12]
 800b5d6:	2b0f      	cmp	r3, #15
 800b5d8:	d948      	bls.n	800b66c <HAL_SPI_Receive+0x1c0>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0UL)
 800b5da:	e040      	b.n	800b65e <HAL_SPI_Receive+0x1b2>
    {
      /* Check the RXWNE/EOT flag */
      if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL)
 800b5dc:	68fb      	ldr	r3, [r7, #12]
 800b5de:	681b      	ldr	r3, [r3, #0]
 800b5e0:	695a      	ldr	r2, [r3, #20]
 800b5e2:	f248 0308 	movw	r3, #32776	; 0x8008
 800b5e6:	4013      	ands	r3, r2
 800b5e8:	2b00      	cmp	r3, #0
 800b5ea:	d014      	beq.n	800b616 <HAL_SPI_Receive+0x16a>
      {
        *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800b5ec:	68fb      	ldr	r3, [r7, #12]
 800b5ee:	681a      	ldr	r2, [r3, #0]
 800b5f0:	68fb      	ldr	r3, [r7, #12]
 800b5f2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b5f4:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800b5f6:	601a      	str	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint32_t);
 800b5f8:	68fb      	ldr	r3, [r7, #12]
 800b5fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b5fc:	1d1a      	adds	r2, r3, #4
 800b5fe:	68fb      	ldr	r3, [r7, #12]
 800b600:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b602:	68fb      	ldr	r3, [r7, #12]
 800b604:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b608:	b29b      	uxth	r3, r3
 800b60a:	3b01      	subs	r3, #1
 800b60c:	b29a      	uxth	r2, r3
 800b60e:	68fb      	ldr	r3, [r7, #12]
 800b610:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b614:	e023      	b.n	800b65e <HAL_SPI_Receive+0x1b2>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b616:	f7f7 f83f 	bl	8002698 <HAL_GetTick>
 800b61a:	4602      	mov	r2, r0
 800b61c:	697b      	ldr	r3, [r7, #20]
 800b61e:	1ad3      	subs	r3, r2, r3
 800b620:	683a      	ldr	r2, [r7, #0]
 800b622:	429a      	cmp	r2, r3
 800b624:	d803      	bhi.n	800b62e <HAL_SPI_Receive+0x182>
 800b626:	683b      	ldr	r3, [r7, #0]
 800b628:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b62c:	d102      	bne.n	800b634 <HAL_SPI_Receive+0x188>
 800b62e:	683b      	ldr	r3, [r7, #0]
 800b630:	2b00      	cmp	r3, #0
 800b632:	d114      	bne.n	800b65e <HAL_SPI_Receive+0x1b2>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b634:	68f8      	ldr	r0, [r7, #12]
 800b636:	f000 fc81 	bl	800bf3c <SPI_CloseTransfer>

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b63a:	68fb      	ldr	r3, [r7, #12]
 800b63c:	2200      	movs	r2, #0
 800b63e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b642:	68fb      	ldr	r3, [r7, #12]
 800b644:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b648:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b64c:	68fb      	ldr	r3, [r7, #12]
 800b64e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b652:	68fb      	ldr	r3, [r7, #12]
 800b654:	2201      	movs	r2, #1
 800b656:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
          return HAL_TIMEOUT;
 800b65a:	2303      	movs	r3, #3
 800b65c:	e0af      	b.n	800b7be <HAL_SPI_Receive+0x312>
    while (hspi->RxXferCount > 0UL)
 800b65e:	68fb      	ldr	r3, [r7, #12]
 800b660:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b664:	b29b      	uxth	r3, r3
 800b666:	2b00      	cmp	r3, #0
 800b668:	d1b8      	bne.n	800b5dc <HAL_SPI_Receive+0x130>
 800b66a:	e095      	b.n	800b798 <HAL_SPI_Receive+0x2ec>
        }
      }
    }
  }
  /* Receive data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800b66c:	68fb      	ldr	r3, [r7, #12]
 800b66e:	68db      	ldr	r3, [r3, #12]
 800b670:	2b07      	cmp	r3, #7
 800b672:	f240 808b 	bls.w	800b78c <HAL_SPI_Receive+0x2e0>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0UL)
 800b676:	e03f      	b.n	800b6f8 <HAL_SPI_Receive+0x24c>
    {
      /* Check the RXP flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
 800b678:	68fb      	ldr	r3, [r7, #12]
 800b67a:	681b      	ldr	r3, [r3, #0]
 800b67c:	695b      	ldr	r3, [r3, #20]
 800b67e:	f003 0301 	and.w	r3, r3, #1
 800b682:	2b01      	cmp	r3, #1
 800b684:	d114      	bne.n	800b6b0 <HAL_SPI_Receive+0x204>
      {
#if defined (__GNUC__)
        *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800b686:	68fb      	ldr	r3, [r7, #12]
 800b688:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b68a:	69ba      	ldr	r2, [r7, #24]
 800b68c:	8812      	ldrh	r2, [r2, #0]
 800b68e:	b292      	uxth	r2, r2
 800b690:	801a      	strh	r2, [r3, #0]
#else
        *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b692:	68fb      	ldr	r3, [r7, #12]
 800b694:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b696:	1c9a      	adds	r2, r3, #2
 800b698:	68fb      	ldr	r3, [r7, #12]
 800b69a:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b69c:	68fb      	ldr	r3, [r7, #12]
 800b69e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b6a2:	b29b      	uxth	r3, r3
 800b6a4:	3b01      	subs	r3, #1
 800b6a6:	b29a      	uxth	r2, r3
 800b6a8:	68fb      	ldr	r3, [r7, #12]
 800b6aa:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b6ae:	e023      	b.n	800b6f8 <HAL_SPI_Receive+0x24c>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b6b0:	f7f6 fff2 	bl	8002698 <HAL_GetTick>
 800b6b4:	4602      	mov	r2, r0
 800b6b6:	697b      	ldr	r3, [r7, #20]
 800b6b8:	1ad3      	subs	r3, r2, r3
 800b6ba:	683a      	ldr	r2, [r7, #0]
 800b6bc:	429a      	cmp	r2, r3
 800b6be:	d803      	bhi.n	800b6c8 <HAL_SPI_Receive+0x21c>
 800b6c0:	683b      	ldr	r3, [r7, #0]
 800b6c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b6c6:	d102      	bne.n	800b6ce <HAL_SPI_Receive+0x222>
 800b6c8:	683b      	ldr	r3, [r7, #0]
 800b6ca:	2b00      	cmp	r3, #0
 800b6cc:	d114      	bne.n	800b6f8 <HAL_SPI_Receive+0x24c>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b6ce:	68f8      	ldr	r0, [r7, #12]
 800b6d0:	f000 fc34 	bl	800bf3c <SPI_CloseTransfer>

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b6d4:	68fb      	ldr	r3, [r7, #12]
 800b6d6:	2200      	movs	r2, #0
 800b6d8:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b6dc:	68fb      	ldr	r3, [r7, #12]
 800b6de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b6e2:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b6e6:	68fb      	ldr	r3, [r7, #12]
 800b6e8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b6ec:	68fb      	ldr	r3, [r7, #12]
 800b6ee:	2201      	movs	r2, #1
 800b6f0:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
          return HAL_TIMEOUT;
 800b6f4:	2303      	movs	r3, #3
 800b6f6:	e062      	b.n	800b7be <HAL_SPI_Receive+0x312>
    while (hspi->RxXferCount > 0UL)
 800b6f8:	68fb      	ldr	r3, [r7, #12]
 800b6fa:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b6fe:	b29b      	uxth	r3, r3
 800b700:	2b00      	cmp	r3, #0
 800b702:	d1b9      	bne.n	800b678 <HAL_SPI_Receive+0x1cc>
 800b704:	e048      	b.n	800b798 <HAL_SPI_Receive+0x2ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0UL)
    {
      /* Check the RXP flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
 800b706:	68fb      	ldr	r3, [r7, #12]
 800b708:	681b      	ldr	r3, [r3, #0]
 800b70a:	695b      	ldr	r3, [r3, #20]
 800b70c:	f003 0301 	and.w	r3, r3, #1
 800b710:	2b01      	cmp	r3, #1
 800b712:	d117      	bne.n	800b744 <HAL_SPI_Receive+0x298>
      {
        *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800b714:	68fb      	ldr	r3, [r7, #12]
 800b716:	681b      	ldr	r3, [r3, #0]
 800b718:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800b71c:	68fb      	ldr	r3, [r7, #12]
 800b71e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b720:	7812      	ldrb	r2, [r2, #0]
 800b722:	b2d2      	uxtb	r2, r2
 800b724:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b726:	68fb      	ldr	r3, [r7, #12]
 800b728:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b72a:	1c5a      	adds	r2, r3, #1
 800b72c:	68fb      	ldr	r3, [r7, #12]
 800b72e:	665a      	str	r2, [r3, #100]	; 0x64
        hspi->RxXferCount--;
 800b730:	68fb      	ldr	r3, [r7, #12]
 800b732:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b736:	b29b      	uxth	r3, r3
 800b738:	3b01      	subs	r3, #1
 800b73a:	b29a      	uxth	r2, r3
 800b73c:	68fb      	ldr	r3, [r7, #12]
 800b73e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800b742:	e023      	b.n	800b78c <HAL_SPI_Receive+0x2e0>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b744:	f7f6 ffa8 	bl	8002698 <HAL_GetTick>
 800b748:	4602      	mov	r2, r0
 800b74a:	697b      	ldr	r3, [r7, #20]
 800b74c:	1ad3      	subs	r3, r2, r3
 800b74e:	683a      	ldr	r2, [r7, #0]
 800b750:	429a      	cmp	r2, r3
 800b752:	d803      	bhi.n	800b75c <HAL_SPI_Receive+0x2b0>
 800b754:	683b      	ldr	r3, [r7, #0]
 800b756:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b75a:	d102      	bne.n	800b762 <HAL_SPI_Receive+0x2b6>
 800b75c:	683b      	ldr	r3, [r7, #0]
 800b75e:	2b00      	cmp	r3, #0
 800b760:	d114      	bne.n	800b78c <HAL_SPI_Receive+0x2e0>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800b762:	68f8      	ldr	r0, [r7, #12]
 800b764:	f000 fbea 	bl	800bf3c <SPI_CloseTransfer>

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800b768:	68fb      	ldr	r3, [r7, #12]
 800b76a:	2200      	movs	r2, #0
 800b76c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800b770:	68fb      	ldr	r3, [r7, #12]
 800b772:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b776:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800b77a:	68fb      	ldr	r3, [r7, #12]
 800b77c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800b780:	68fb      	ldr	r3, [r7, #12]
 800b782:	2201      	movs	r2, #1
 800b784:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
          return HAL_TIMEOUT;
 800b788:	2303      	movs	r3, #3
 800b78a:	e018      	b.n	800b7be <HAL_SPI_Receive+0x312>
    while (hspi->RxXferCount > 0UL)
 800b78c:	68fb      	ldr	r3, [r7, #12]
 800b78e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800b792:	b29b      	uxth	r3, r3
 800b794:	2b00      	cmp	r3, #0
 800b796:	d1b6      	bne.n	800b706 <HAL_SPI_Receive+0x25a>
    }
  }
#endif /* USE_SPI_CRC */

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 800b798:	68f8      	ldr	r0, [r7, #12]
 800b79a:	f000 fbcf 	bl	800bf3c <SPI_CloseTransfer>

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800b79e:	68fb      	ldr	r3, [r7, #12]
 800b7a0:	2200      	movs	r2, #0
 800b7a2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  hspi->State = HAL_SPI_STATE_READY;
 800b7a6:	68fb      	ldr	r3, [r7, #12]
 800b7a8:	2201      	movs	r2, #1
 800b7aa:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b7ae:	68fb      	ldr	r3, [r7, #12]
 800b7b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b7b4:	2b00      	cmp	r3, #0
 800b7b6:	d001      	beq.n	800b7bc <HAL_SPI_Receive+0x310>
  {
    return HAL_ERROR;
 800b7b8:	2301      	movs	r3, #1
 800b7ba:	e000      	b.n	800b7be <HAL_SPI_Receive+0x312>
  }
  return errorcode;
 800b7bc:	7ffb      	ldrb	r3, [r7, #31]
}
 800b7be:	4618      	mov	r0, r3
 800b7c0:	3720      	adds	r7, #32
 800b7c2:	46bd      	mov	sp, r7
 800b7c4:	bd80      	pop	{r7, pc}
 800b7c6:	bf00      	nop
 800b7c8:	ffff0000 	.word	0xffff0000

0800b7cc <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 800b7cc:	b580      	push	{r7, lr}
 800b7ce:	b086      	sub	sp, #24
 800b7d0:	af00      	add	r7, sp, #0
 800b7d2:	60f8      	str	r0, [r7, #12]
 800b7d4:	60b9      	str	r1, [r7, #8]
 800b7d6:	4613      	mov	r3, r2
 800b7d8:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 800b7da:	2300      	movs	r3, #0
 800b7dc:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Lock the process */
  __HAL_LOCK(hspi);
 800b7de:	68fb      	ldr	r3, [r7, #12]
 800b7e0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800b7e4:	2b01      	cmp	r3, #1
 800b7e6:	d101      	bne.n	800b7ec <HAL_SPI_Transmit_DMA+0x20>
 800b7e8:	2302      	movs	r3, #2
 800b7ea:	e137      	b.n	800ba5c <HAL_SPI_Transmit_DMA+0x290>
 800b7ec:	68fb      	ldr	r3, [r7, #12]
 800b7ee:	2201      	movs	r2, #1
 800b7f0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  if (hspi->State != HAL_SPI_STATE_READY)
 800b7f4:	68fb      	ldr	r3, [r7, #12]
 800b7f6:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b7fa:	b2db      	uxtb	r3, r3
 800b7fc:	2b01      	cmp	r3, #1
 800b7fe:	d007      	beq.n	800b810 <HAL_SPI_Transmit_DMA+0x44>
  {
    errorcode = HAL_BUSY;
 800b800:	2302      	movs	r3, #2
 800b802:	75fb      	strb	r3, [r7, #23]
    __HAL_UNLOCK(hspi);
 800b804:	68fb      	ldr	r3, [r7, #12]
 800b806:	2200      	movs	r2, #0
 800b808:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b80c:	7dfb      	ldrb	r3, [r7, #23]
 800b80e:	e125      	b.n	800ba5c <HAL_SPI_Transmit_DMA+0x290>
  }

  if ((pData == NULL) || (Size == 0UL))
 800b810:	68bb      	ldr	r3, [r7, #8]
 800b812:	2b00      	cmp	r3, #0
 800b814:	d002      	beq.n	800b81c <HAL_SPI_Transmit_DMA+0x50>
 800b816:	88fb      	ldrh	r3, [r7, #6]
 800b818:	2b00      	cmp	r3, #0
 800b81a:	d107      	bne.n	800b82c <HAL_SPI_Transmit_DMA+0x60>
  {
    errorcode = HAL_ERROR;
 800b81c:	2301      	movs	r3, #1
 800b81e:	75fb      	strb	r3, [r7, #23]
    __HAL_UNLOCK(hspi);
 800b820:	68fb      	ldr	r3, [r7, #12]
 800b822:	2200      	movs	r2, #0
 800b824:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b828:	7dfb      	ldrb	r3, [r7, #23]
 800b82a:	e117      	b.n	800ba5c <HAL_SPI_Transmit_DMA+0x290>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b82c:	68fb      	ldr	r3, [r7, #12]
 800b82e:	2203      	movs	r2, #3
 800b830:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b834:	68fb      	ldr	r3, [r7, #12]
 800b836:	2200      	movs	r2, #0
 800b838:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800b83c:	68fb      	ldr	r3, [r7, #12]
 800b83e:	68ba      	ldr	r2, [r7, #8]
 800b840:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800b842:	68fb      	ldr	r3, [r7, #12]
 800b844:	88fa      	ldrh	r2, [r7, #6]
 800b846:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800b84a:	68fb      	ldr	r3, [r7, #12]
 800b84c:	88fa      	ldrh	r2, [r7, #6]
 800b84e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800b852:	68fb      	ldr	r3, [r7, #12]
 800b854:	2200      	movs	r2, #0
 800b856:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->TxISR       = NULL;
 800b858:	68fb      	ldr	r3, [r7, #12]
 800b85a:	2200      	movs	r2, #0
 800b85c:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800b85e:	68fb      	ldr	r3, [r7, #12]
 800b860:	2200      	movs	r2, #0
 800b862:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->RxXferSize  = (uint16_t)0UL;
 800b864:	68fb      	ldr	r3, [r7, #12]
 800b866:	2200      	movs	r2, #0
 800b868:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t)0UL;
 800b86c:	68fb      	ldr	r3, [r7, #12]
 800b86e:	2200      	movs	r2, #0
 800b870:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b874:	68fb      	ldr	r3, [r7, #12]
 800b876:	689b      	ldr	r3, [r3, #8]
 800b878:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800b87c:	d108      	bne.n	800b890 <HAL_SPI_Transmit_DMA+0xc4>
  {
    SPI_1LINE_TX(hspi);
 800b87e:	68fb      	ldr	r3, [r7, #12]
 800b880:	681b      	ldr	r3, [r3, #0]
 800b882:	681a      	ldr	r2, [r3, #0]
 800b884:	68fb      	ldr	r3, [r7, #12]
 800b886:	681b      	ldr	r3, [r3, #0]
 800b888:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b88c:	601a      	str	r2, [r3, #0]
 800b88e:	e009      	b.n	800b8a4 <HAL_SPI_Transmit_DMA+0xd8>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800b890:	68fb      	ldr	r3, [r7, #12]
 800b892:	681b      	ldr	r3, [r3, #0]
 800b894:	68db      	ldr	r3, [r3, #12]
 800b896:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800b89a:	68fb      	ldr	r3, [r7, #12]
 800b89c:	681b      	ldr	r3, [r3, #0]
 800b89e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800b8a2:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800b8a4:	68fb      	ldr	r3, [r7, #12]
 800b8a6:	68db      	ldr	r3, [r3, #12]
 800b8a8:	2b0f      	cmp	r3, #15
 800b8aa:	d905      	bls.n	800b8b8 <HAL_SPI_Transmit_DMA+0xec>
 800b8ac:	68fb      	ldr	r3, [r7, #12]
 800b8ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8b0:	699b      	ldr	r3, [r3, #24]
 800b8b2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b8b6:	d10f      	bne.n	800b8d8 <HAL_SPI_Transmit_DMA+0x10c>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800b8b8:	68fb      	ldr	r3, [r7, #12]
 800b8ba:	68db      	ldr	r3, [r3, #12]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800b8bc:	2b07      	cmp	r3, #7
 800b8be:	d913      	bls.n	800b8e8 <HAL_SPI_Transmit_DMA+0x11c>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800b8c0:	68fb      	ldr	r3, [r7, #12]
 800b8c2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8c4:	699b      	ldr	r3, [r3, #24]
 800b8c6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b8ca:	d00d      	beq.n	800b8e8 <HAL_SPI_Transmit_DMA+0x11c>
                                                     (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))))
 800b8cc:	68fb      	ldr	r3, [r7, #12]
 800b8ce:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8d0:	699b      	ldr	r3, [r3, #24]
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800b8d2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b8d6:	d007      	beq.n	800b8e8 <HAL_SPI_Transmit_DMA+0x11c>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    errorcode = HAL_ERROR;
 800b8d8:	2301      	movs	r3, #1
 800b8da:	75fb      	strb	r3, [r7, #23]
    __HAL_UNLOCK(hspi);
 800b8dc:	68fb      	ldr	r3, [r7, #12]
 800b8de:	2200      	movs	r2, #0
 800b8e0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return errorcode;
 800b8e4:	7dfb      	ldrb	r3, [r7, #23]
 800b8e6:	e0b9      	b.n	800ba5c <HAL_SPI_Transmit_DMA+0x290>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800b8e8:	68fb      	ldr	r3, [r7, #12]
 800b8ea:	68db      	ldr	r3, [r3, #12]
 800b8ec:	2b07      	cmp	r3, #7
 800b8ee:	d820      	bhi.n	800b932 <HAL_SPI_Transmit_DMA+0x166>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800b8f0:	68fb      	ldr	r3, [r7, #12]
 800b8f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8f4:	699b      	ldr	r3, [r3, #24]
 800b8f6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b8fa:	d109      	bne.n	800b910 <HAL_SPI_Transmit_DMA+0x144>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800b8fc:	68fb      	ldr	r3, [r7, #12]
 800b8fe:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b902:	b29b      	uxth	r3, r3
 800b904:	3301      	adds	r3, #1
 800b906:	105b      	asrs	r3, r3, #1
 800b908:	b29a      	uxth	r2, r3
 800b90a:	68fb      	ldr	r3, [r7, #12]
 800b90c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
    }
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800b910:	68fb      	ldr	r3, [r7, #12]
 800b912:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b914:	699b      	ldr	r3, [r3, #24]
 800b916:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b91a:	d11e      	bne.n	800b95a <HAL_SPI_Transmit_DMA+0x18e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 800b91c:	68fb      	ldr	r3, [r7, #12]
 800b91e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b922:	b29b      	uxth	r3, r3
 800b924:	3303      	adds	r3, #3
 800b926:	109b      	asrs	r3, r3, #2
 800b928:	b29a      	uxth	r2, r3
 800b92a:	68fb      	ldr	r3, [r7, #12]
 800b92c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800b930:	e013      	b.n	800b95a <HAL_SPI_Transmit_DMA+0x18e>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 800b932:	68fb      	ldr	r3, [r7, #12]
 800b934:	68db      	ldr	r3, [r3, #12]
 800b936:	2b0f      	cmp	r3, #15
 800b938:	d80f      	bhi.n	800b95a <HAL_SPI_Transmit_DMA+0x18e>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800b93a:	68fb      	ldr	r3, [r7, #12]
 800b93c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b93e:	699b      	ldr	r3, [r3, #24]
 800b940:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800b944:	d109      	bne.n	800b95a <HAL_SPI_Transmit_DMA+0x18e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800b946:	68fb      	ldr	r3, [r7, #12]
 800b948:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b94c:	b29b      	uxth	r3, r3
 800b94e:	3301      	adds	r3, #1
 800b950:	105b      	asrs	r3, r3, #1
 800b952:	b29a      	uxth	r2, r3
 800b954:	68fb      	ldr	r3, [r7, #12]
 800b956:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800b95a:	68fb      	ldr	r3, [r7, #12]
 800b95c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b95e:	4a41      	ldr	r2, [pc, #260]	; (800ba64 <HAL_SPI_Transmit_DMA+0x298>)
 800b960:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800b962:	68fb      	ldr	r3, [r7, #12]
 800b964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b966:	4a40      	ldr	r2, [pc, #256]	; (800ba68 <HAL_SPI_Transmit_DMA+0x29c>)
 800b968:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800b96a:	68fb      	ldr	r3, [r7, #12]
 800b96c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b96e:	4a3f      	ldr	r2, [pc, #252]	; (800ba6c <HAL_SPI_Transmit_DMA+0x2a0>)
 800b970:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 800b972:	68fb      	ldr	r3, [r7, #12]
 800b974:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b976:	2200      	movs	r2, #0
 800b978:	651a      	str	r2, [r3, #80]	; 0x50

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800b97a:	68fb      	ldr	r3, [r7, #12]
 800b97c:	681b      	ldr	r3, [r3, #0]
 800b97e:	689a      	ldr	r2, [r3, #8]
 800b980:	68fb      	ldr	r3, [r7, #12]
 800b982:	681b      	ldr	r3, [r3, #0]
 800b984:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b988:	609a      	str	r2, [r3, #8]

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800b98a:	68fb      	ldr	r3, [r7, #12]
 800b98c:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800b98e:	68fb      	ldr	r3, [r7, #12]
 800b990:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b992:	4619      	mov	r1, r3
 800b994:	68fb      	ldr	r3, [r7, #12]
 800b996:	681b      	ldr	r3, [r3, #0]
 800b998:	3320      	adds	r3, #32
 800b99a:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800b99c:	68fb      	ldr	r3, [r7, #12]
 800b99e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800b9a2:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800b9a4:	f7f8 fc8c 	bl	80042c0 <HAL_DMA_Start_IT>
 800b9a8:	4603      	mov	r3, r0
 800b9aa:	2b00      	cmp	r3, #0
 800b9ac:	d013      	beq.n	800b9d6 <HAL_SPI_Transmit_DMA+0x20a>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800b9ae:	68fb      	ldr	r3, [r7, #12]
 800b9b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b9b4:	f043 0210 	orr.w	r2, r3, #16
 800b9b8:	68fb      	ldr	r3, [r7, #12]
 800b9ba:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 800b9be:	68fb      	ldr	r3, [r7, #12]
 800b9c0:	2200      	movs	r2, #0
 800b9c2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    hspi->State = HAL_SPI_STATE_READY;
 800b9c6:	68fb      	ldr	r3, [r7, #12]
 800b9c8:	2201      	movs	r2, #1
 800b9ca:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
    errorcode = HAL_ERROR;
 800b9ce:	2301      	movs	r3, #1
 800b9d0:	75fb      	strb	r3, [r7, #23]
    return errorcode;
 800b9d2:	7dfb      	ldrb	r3, [r7, #23]
 800b9d4:	e042      	b.n	800ba5c <HAL_SPI_Transmit_DMA+0x290>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800b9d6:	68fb      	ldr	r3, [r7, #12]
 800b9d8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b9da:	69db      	ldr	r3, [r3, #28]
 800b9dc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b9e0:	d108      	bne.n	800b9f4 <HAL_SPI_Transmit_DMA+0x228>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 800b9e2:	68fb      	ldr	r3, [r7, #12]
 800b9e4:	681b      	ldr	r3, [r3, #0]
 800b9e6:	6859      	ldr	r1, [r3, #4]
 800b9e8:	68fb      	ldr	r3, [r7, #12]
 800b9ea:	681a      	ldr	r2, [r3, #0]
 800b9ec:	4b20      	ldr	r3, [pc, #128]	; (800ba70 <HAL_SPI_Transmit_DMA+0x2a4>)
 800b9ee:	400b      	ands	r3, r1
 800b9f0:	6053      	str	r3, [r2, #4]
 800b9f2:	e009      	b.n	800ba08 <HAL_SPI_Transmit_DMA+0x23c>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800b9f4:	68fb      	ldr	r3, [r7, #12]
 800b9f6:	681b      	ldr	r3, [r3, #0]
 800b9f8:	685a      	ldr	r2, [r3, #4]
 800b9fa:	4b1d      	ldr	r3, [pc, #116]	; (800ba70 <HAL_SPI_Transmit_DMA+0x2a4>)
 800b9fc:	4013      	ands	r3, r2
 800b9fe:	88f9      	ldrh	r1, [r7, #6]
 800ba00:	68fa      	ldr	r2, [r7, #12]
 800ba02:	6812      	ldr	r2, [r2, #0]
 800ba04:	430b      	orrs	r3, r1
 800ba06:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800ba08:	68fb      	ldr	r3, [r7, #12]
 800ba0a:	681b      	ldr	r3, [r3, #0]
 800ba0c:	689a      	ldr	r2, [r3, #8]
 800ba0e:	68fb      	ldr	r3, [r7, #12]
 800ba10:	681b      	ldr	r3, [r3, #0]
 800ba12:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ba16:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 800ba18:	68fb      	ldr	r3, [r7, #12]
 800ba1a:	681b      	ldr	r3, [r3, #0]
 800ba1c:	691a      	ldr	r2, [r3, #16]
 800ba1e:	68fb      	ldr	r3, [r7, #12]
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	f442 7248 	orr.w	r2, r2, #800	; 0x320
 800ba26:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800ba28:	68fb      	ldr	r3, [r7, #12]
 800ba2a:	681b      	ldr	r3, [r3, #0]
 800ba2c:	681a      	ldr	r2, [r3, #0]
 800ba2e:	68fb      	ldr	r3, [r7, #12]
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	f042 0201 	orr.w	r2, r2, #1
 800ba36:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba38:	68fb      	ldr	r3, [r7, #12]
 800ba3a:	685b      	ldr	r3, [r3, #4]
 800ba3c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800ba40:	d107      	bne.n	800ba52 <HAL_SPI_Transmit_DMA+0x286>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800ba42:	68fb      	ldr	r3, [r7, #12]
 800ba44:	681b      	ldr	r3, [r3, #0]
 800ba46:	681a      	ldr	r2, [r3, #0]
 800ba48:	68fb      	ldr	r3, [r7, #12]
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba50:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800ba52:	68fb      	ldr	r3, [r7, #12]
 800ba54:	2200      	movs	r2, #0
 800ba56:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
  return errorcode;
 800ba5a:	7dfb      	ldrb	r3, [r7, #23]
}
 800ba5c:	4618      	mov	r0, r3
 800ba5e:	3718      	adds	r7, #24
 800ba60:	46bd      	mov	sp, r7
 800ba62:	bd80      	pop	{r7, pc}
 800ba64:	0800bea7 	.word	0x0800bea7
 800ba68:	0800be61 	.word	0x0800be61
 800ba6c:	0800bec3 	.word	0x0800bec3
 800ba70:	ffff0000 	.word	0xffff0000

0800ba74 <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 800ba74:	b580      	push	{r7, lr}
 800ba76:	b08a      	sub	sp, #40	; 0x28
 800ba78:	af00      	add	r7, sp, #0
 800ba7a:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 800ba7c:	687b      	ldr	r3, [r7, #4]
 800ba7e:	681b      	ldr	r3, [r3, #0]
 800ba80:	691b      	ldr	r3, [r3, #16]
 800ba82:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	695b      	ldr	r3, [r3, #20]
 800ba8a:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 800ba8c:	6a3a      	ldr	r2, [r7, #32]
 800ba8e:	69fb      	ldr	r3, [r7, #28]
 800ba90:	4013      	ands	r3, r2
 800ba92:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 800ba94:	687b      	ldr	r3, [r7, #4]
 800ba96:	681b      	ldr	r3, [r3, #0]
 800ba98:	689b      	ldr	r3, [r3, #8]
 800ba9a:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 800ba9c:	2300      	movs	r3, #0
 800ba9e:	627b      	str	r3, [r7, #36]	; 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800baa6:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	681b      	ldr	r3, [r3, #0]
 800baac:	3330      	adds	r3, #48	; 0x30
 800baae:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 800bab0:	69fb      	ldr	r3, [r7, #28]
 800bab2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800bab6:	2b00      	cmp	r3, #0
 800bab8:	d010      	beq.n	800badc <HAL_SPI_IRQHandler+0x68>
 800baba:	6a3b      	ldr	r3, [r7, #32]
 800babc:	f003 0308 	and.w	r3, r3, #8
 800bac0:	2b00      	cmp	r3, #0
 800bac2:	d00b      	beq.n	800badc <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800bac4:	687b      	ldr	r3, [r7, #4]
 800bac6:	681b      	ldr	r3, [r3, #0]
 800bac8:	699a      	ldr	r2, [r3, #24]
 800baca:	687b      	ldr	r3, [r7, #4]
 800bacc:	681b      	ldr	r3, [r3, #0]
 800bace:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bad2:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 800bad4:	6878      	ldr	r0, [r7, #4]
 800bad6:	f000 f9b9 	bl	800be4c <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 800bada:	e192      	b.n	800be02 <HAL_SPI_IRQHandler+0x38e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800badc:	69bb      	ldr	r3, [r7, #24]
 800bade:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bae2:	2b00      	cmp	r3, #0
 800bae4:	d113      	bne.n	800bb0e <HAL_SPI_IRQHandler+0x9a>
 800bae6:	69bb      	ldr	r3, [r7, #24]
 800bae8:	f003 0320 	and.w	r3, r3, #32
 800baec:	2b00      	cmp	r3, #0
 800baee:	d10e      	bne.n	800bb0e <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 800baf0:	69bb      	ldr	r3, [r7, #24]
 800baf2:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800baf6:	2b00      	cmp	r3, #0
 800baf8:	d009      	beq.n	800bb0e <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800bafe:	6878      	ldr	r0, [r7, #4]
 800bb00:	4798      	blx	r3
    hspi->RxISR(hspi);
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800bb06:	6878      	ldr	r0, [r7, #4]
 800bb08:	4798      	blx	r3
    handled = 1UL;
 800bb0a:	2301      	movs	r3, #1
 800bb0c:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800bb0e:	69bb      	ldr	r3, [r7, #24]
 800bb10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bb14:	2b00      	cmp	r3, #0
 800bb16:	d10f      	bne.n	800bb38 <HAL_SPI_IRQHandler+0xc4>
 800bb18:	69bb      	ldr	r3, [r7, #24]
 800bb1a:	f003 0301 	and.w	r3, r3, #1
 800bb1e:	2b00      	cmp	r3, #0
 800bb20:	d00a      	beq.n	800bb38 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800bb22:	69bb      	ldr	r3, [r7, #24]
 800bb24:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800bb28:	2b00      	cmp	r3, #0
 800bb2a:	d105      	bne.n	800bb38 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800bb30:	6878      	ldr	r0, [r7, #4]
 800bb32:	4798      	blx	r3
    handled = 1UL;
 800bb34:	2301      	movs	r3, #1
 800bb36:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800bb38:	69bb      	ldr	r3, [r7, #24]
 800bb3a:	f003 0320 	and.w	r3, r3, #32
 800bb3e:	2b00      	cmp	r3, #0
 800bb40:	d10f      	bne.n	800bb62 <HAL_SPI_IRQHandler+0xee>
 800bb42:	69bb      	ldr	r3, [r7, #24]
 800bb44:	f003 0302 	and.w	r3, r3, #2
 800bb48:	2b00      	cmp	r3, #0
 800bb4a:	d00a      	beq.n	800bb62 <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800bb4c:	69bb      	ldr	r3, [r7, #24]
 800bb4e:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800bb52:	2b00      	cmp	r3, #0
 800bb54:	d105      	bne.n	800bb62 <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 800bb56:	687b      	ldr	r3, [r7, #4]
 800bb58:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800bb5a:	6878      	ldr	r0, [r7, #4]
 800bb5c:	4798      	blx	r3
    handled = 1UL;
 800bb5e:	2301      	movs	r3, #1
 800bb60:	627b      	str	r3, [r7, #36]	; 0x24
    hspi->Reload.Requested = 0UL;
    __HAL_SPI_CLEAR_TSERFFLAG(hspi);
  }
#endif /* USE_SPI_RELOAD_TRANSFER */

  if (handled != 0UL)
 800bb62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bb64:	2b00      	cmp	r3, #0
 800bb66:	f040 8147 	bne.w	800bdf8 <HAL_SPI_IRQHandler+0x384>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 800bb6a:	69bb      	ldr	r3, [r7, #24]
 800bb6c:	f003 0308 	and.w	r3, r3, #8
 800bb70:	2b00      	cmp	r3, #0
 800bb72:	f000 808b 	beq.w	800bc8c <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	681b      	ldr	r3, [r3, #0]
 800bb7a:	699a      	ldr	r2, [r3, #24]
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	f042 0208 	orr.w	r2, r2, #8
 800bb84:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800bb86:	687b      	ldr	r3, [r7, #4]
 800bb88:	681b      	ldr	r3, [r3, #0]
 800bb8a:	699a      	ldr	r2, [r3, #24]
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	681b      	ldr	r3, [r3, #0]
 800bb90:	f042 0210 	orr.w	r2, r2, #16
 800bb94:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800bb96:	687b      	ldr	r3, [r7, #4]
 800bb98:	681b      	ldr	r3, [r3, #0]
 800bb9a:	699a      	ldr	r2, [r3, #24]
 800bb9c:	687b      	ldr	r3, [r7, #4]
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bba4:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	681b      	ldr	r3, [r3, #0]
 800bbaa:	691a      	ldr	r2, [r3, #16]
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	681b      	ldr	r3, [r3, #0]
 800bbb0:	f022 0208 	bic.w	r2, r2, #8
 800bbb4:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800bbb6:	687b      	ldr	r3, [r7, #4]
 800bbb8:	681b      	ldr	r3, [r3, #0]
 800bbba:	689b      	ldr	r3, [r3, #8]
 800bbbc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800bbc0:	2b00      	cmp	r3, #0
 800bbc2:	d13d      	bne.n	800bc40 <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 800bbc4:	e036      	b.n	800bc34 <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800bbc6:	687b      	ldr	r3, [r7, #4]
 800bbc8:	68db      	ldr	r3, [r3, #12]
 800bbca:	2b0f      	cmp	r3, #15
 800bbcc:	d90b      	bls.n	800bbe6 <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800bbce:	687b      	ldr	r3, [r7, #4]
 800bbd0:	681a      	ldr	r2, [r3, #0]
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bbd6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800bbd8:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 800bbda:	687b      	ldr	r3, [r7, #4]
 800bbdc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bbde:	1d1a      	adds	r2, r3, #4
 800bbe0:	687b      	ldr	r3, [r7, #4]
 800bbe2:	665a      	str	r2, [r3, #100]	; 0x64
 800bbe4:	e01d      	b.n	800bc22 <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800bbe6:	687b      	ldr	r3, [r7, #4]
 800bbe8:	68db      	ldr	r3, [r3, #12]
 800bbea:	2b07      	cmp	r3, #7
 800bbec:	d90b      	bls.n	800bc06 <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bbf2:	68fa      	ldr	r2, [r7, #12]
 800bbf4:	8812      	ldrh	r2, [r2, #0]
 800bbf6:	b292      	uxth	r2, r2
 800bbf8:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bbfe:	1c9a      	adds	r2, r3, #2
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	665a      	str	r2, [r3, #100]	; 0x64
 800bc04:	e00d      	b.n	800bc22 <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	681b      	ldr	r3, [r3, #0]
 800bc0a:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800bc0e:	687b      	ldr	r3, [r7, #4]
 800bc10:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bc12:	7812      	ldrb	r2, [r2, #0]
 800bc14:	b2d2      	uxtb	r2, r2
 800bc16:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 800bc18:	687b      	ldr	r3, [r7, #4]
 800bc1a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bc1c:	1c5a      	adds	r2, r3, #1
 800bc1e:	687b      	ldr	r3, [r7, #4]
 800bc20:	665a      	str	r2, [r3, #100]	; 0x64
        }

        hspi->RxXferCount--;
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800bc28:	b29b      	uxth	r3, r3
 800bc2a:	3b01      	subs	r3, #1
 800bc2c:	b29a      	uxth	r2, r3
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
      while (hspi->RxXferCount != 0UL)
 800bc34:	687b      	ldr	r3, [r7, #4]
 800bc36:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800bc3a:	b29b      	uxth	r3, r3
 800bc3c:	2b00      	cmp	r3, #0
 800bc3e:	d1c2      	bne.n	800bbc6 <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 800bc40:	6878      	ldr	r0, [r7, #4]
 800bc42:	f000 f97b 	bl	800bf3c <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	2201      	movs	r2, #1
 800bc4a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bc4e:	687b      	ldr	r3, [r7, #4]
 800bc50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bc54:	2b00      	cmp	r3, #0
 800bc56:	d003      	beq.n	800bc60 <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 800bc58:	6878      	ldr	r0, [r7, #4]
 800bc5a:	f7f6 f949 	bl	8001ef0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800bc5e:	e0d0      	b.n	800be02 <HAL_SPI_IRQHandler+0x38e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 800bc60:	7cfb      	ldrb	r3, [r7, #19]
 800bc62:	2b05      	cmp	r3, #5
 800bc64:	d103      	bne.n	800bc6e <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 800bc66:	6878      	ldr	r0, [r7, #4]
 800bc68:	f000 f8dc 	bl	800be24 <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 800bc6c:	e0c6      	b.n	800bdfc <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 800bc6e:	7cfb      	ldrb	r3, [r7, #19]
 800bc70:	2b04      	cmp	r3, #4
 800bc72:	d103      	bne.n	800bc7c <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 800bc74:	6878      	ldr	r0, [r7, #4]
 800bc76:	f000 f8cb 	bl	800be10 <HAL_SPI_RxCpltCallback>
    return;
 800bc7a:	e0bf      	b.n	800bdfc <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 800bc7c:	7cfb      	ldrb	r3, [r7, #19]
 800bc7e:	2b03      	cmp	r3, #3
 800bc80:	f040 80bc 	bne.w	800bdfc <HAL_SPI_IRQHandler+0x388>
      HAL_SPI_TxCpltCallback(hspi);
 800bc84:	6878      	ldr	r0, [r7, #4]
 800bc86:	f7f6 f949 	bl	8001f1c <HAL_SPI_TxCpltCallback>
    return;
 800bc8a:	e0b7      	b.n	800bdfc <HAL_SPI_IRQHandler+0x388>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 800bc8c:	69bb      	ldr	r3, [r7, #24]
 800bc8e:	f403 7358 	and.w	r3, r3, #864	; 0x360
 800bc92:	2b00      	cmp	r3, #0
 800bc94:	f000 80b5 	beq.w	800be02 <HAL_SPI_IRQHandler+0x38e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 800bc98:	69bb      	ldr	r3, [r7, #24]
 800bc9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bc9e:	2b00      	cmp	r3, #0
 800bca0:	d00f      	beq.n	800bcc2 <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bca8:	f043 0204 	orr.w	r2, r3, #4
 800bcac:	687b      	ldr	r3, [r7, #4]
 800bcae:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bcb2:	687b      	ldr	r3, [r7, #4]
 800bcb4:	681b      	ldr	r3, [r3, #0]
 800bcb6:	699a      	ldr	r2, [r3, #24]
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	681b      	ldr	r3, [r3, #0]
 800bcbc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800bcc0:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 800bcc2:	69bb      	ldr	r3, [r7, #24]
 800bcc4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800bcc8:	2b00      	cmp	r3, #0
 800bcca:	d00f      	beq.n	800bcec <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800bccc:	687b      	ldr	r3, [r7, #4]
 800bcce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bcd2:	f043 0201 	orr.w	r2, r3, #1
 800bcd6:	687b      	ldr	r3, [r7, #4]
 800bcd8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800bcdc:	687b      	ldr	r3, [r7, #4]
 800bcde:	681b      	ldr	r3, [r3, #0]
 800bce0:	699a      	ldr	r2, [r3, #24]
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	681b      	ldr	r3, [r3, #0]
 800bce6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bcea:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 800bcec:	69bb      	ldr	r3, [r7, #24]
 800bcee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bcf2:	2b00      	cmp	r3, #0
 800bcf4:	d00f      	beq.n	800bd16 <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800bcf6:	687b      	ldr	r3, [r7, #4]
 800bcf8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bcfc:	f043 0208 	orr.w	r2, r3, #8
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	681b      	ldr	r3, [r3, #0]
 800bd0a:	699a      	ldr	r2, [r3, #24]
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	681b      	ldr	r3, [r3, #0]
 800bd10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bd14:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 800bd16:	69bb      	ldr	r3, [r7, #24]
 800bd18:	f003 0320 	and.w	r3, r3, #32
 800bd1c:	2b00      	cmp	r3, #0
 800bd1e:	d00f      	beq.n	800bd40 <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800bd20:	687b      	ldr	r3, [r7, #4]
 800bd22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bd26:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800bd30:	687b      	ldr	r3, [r7, #4]
 800bd32:	681b      	ldr	r3, [r3, #0]
 800bd34:	699a      	ldr	r2, [r3, #24]
 800bd36:	687b      	ldr	r3, [r7, #4]
 800bd38:	681b      	ldr	r3, [r3, #0]
 800bd3a:	f042 0220 	orr.w	r2, r2, #32
 800bd3e:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bd40:	687b      	ldr	r3, [r7, #4]
 800bd42:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bd46:	2b00      	cmp	r3, #0
 800bd48:	d05a      	beq.n	800be00 <HAL_SPI_IRQHandler+0x38c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 800bd4a:	687b      	ldr	r3, [r7, #4]
 800bd4c:	681b      	ldr	r3, [r3, #0]
 800bd4e:	681a      	ldr	r2, [r3, #0]
 800bd50:	687b      	ldr	r3, [r7, #4]
 800bd52:	681b      	ldr	r3, [r3, #0]
 800bd54:	f022 0201 	bic.w	r2, r2, #1
 800bd58:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 800bd5a:	687b      	ldr	r3, [r7, #4]
 800bd5c:	681b      	ldr	r3, [r3, #0]
 800bd5e:	6919      	ldr	r1, [r3, #16]
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	681a      	ldr	r2, [r3, #0]
 800bd64:	4b28      	ldr	r3, [pc, #160]	; (800be08 <HAL_SPI_IRQHandler+0x394>)
 800bd66:	400b      	ands	r3, r1
 800bd68:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800bd6a:	697b      	ldr	r3, [r7, #20]
 800bd6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800bd70:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800bd74:	d138      	bne.n	800bde8 <HAL_SPI_IRQHandler+0x374>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800bd76:	687b      	ldr	r3, [r7, #4]
 800bd78:	681b      	ldr	r3, [r3, #0]
 800bd7a:	689a      	ldr	r2, [r3, #8]
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	681b      	ldr	r3, [r3, #0]
 800bd80:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800bd84:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 800bd86:	687b      	ldr	r3, [r7, #4]
 800bd88:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	d013      	beq.n	800bdb6 <HAL_SPI_IRQHandler+0x342>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800bd8e:	687b      	ldr	r3, [r7, #4]
 800bd90:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd92:	4a1e      	ldr	r2, [pc, #120]	; (800be0c <HAL_SPI_IRQHandler+0x398>)
 800bd94:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd9a:	4618      	mov	r0, r3
 800bd9c:	f7f8 fcfa 	bl	8004794 <HAL_DMA_Abort_IT>
 800bda0:	4603      	mov	r3, r0
 800bda2:	2b00      	cmp	r3, #0
 800bda4:	d007      	beq.n	800bdb6 <HAL_SPI_IRQHandler+0x342>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800bda6:	687b      	ldr	r3, [r7, #4]
 800bda8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bdac:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800bdb0:	687b      	ldr	r3, [r7, #4]
 800bdb2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bdba:	2b00      	cmp	r3, #0
 800bdbc:	d020      	beq.n	800be00 <HAL_SPI_IRQHandler+0x38c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800bdbe:	687b      	ldr	r3, [r7, #4]
 800bdc0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bdc2:	4a12      	ldr	r2, [pc, #72]	; (800be0c <HAL_SPI_IRQHandler+0x398>)
 800bdc4:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bdca:	4618      	mov	r0, r3
 800bdcc:	f7f8 fce2 	bl	8004794 <HAL_DMA_Abort_IT>
 800bdd0:	4603      	mov	r3, r0
 800bdd2:	2b00      	cmp	r3, #0
 800bdd4:	d014      	beq.n	800be00 <HAL_SPI_IRQHandler+0x38c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800bdd6:	687b      	ldr	r3, [r7, #4]
 800bdd8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bddc:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800bde0:	687b      	ldr	r3, [r7, #4]
 800bde2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
        HAL_SPI_ErrorCallback(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 800bde6:	e00b      	b.n	800be00 <HAL_SPI_IRQHandler+0x38c>
        hspi->State = HAL_SPI_STATE_READY;
 800bde8:	687b      	ldr	r3, [r7, #4]
 800bdea:	2201      	movs	r2, #1
 800bdec:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
        HAL_SPI_ErrorCallback(hspi);
 800bdf0:	6878      	ldr	r0, [r7, #4]
 800bdf2:	f7f6 f87d 	bl	8001ef0 <HAL_SPI_ErrorCallback>
    return;
 800bdf6:	e003      	b.n	800be00 <HAL_SPI_IRQHandler+0x38c>
    return;
 800bdf8:	bf00      	nop
 800bdfa:	e002      	b.n	800be02 <HAL_SPI_IRQHandler+0x38e>
    return;
 800bdfc:	bf00      	nop
 800bdfe:	e000      	b.n	800be02 <HAL_SPI_IRQHandler+0x38e>
    return;
 800be00:	bf00      	nop
  }
}
 800be02:	3728      	adds	r7, #40	; 0x28
 800be04:	46bd      	mov	sp, r7
 800be06:	bd80      	pop	{r7, pc}
 800be08:	fffffc94 	.word	0xfffffc94
 800be0c:	0800bf09 	.word	0x0800bf09

0800be10 <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800be10:	b480      	push	{r7}
 800be12:	b083      	sub	sp, #12
 800be14:	af00      	add	r7, sp, #0
 800be16:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 800be18:	bf00      	nop
 800be1a:	370c      	adds	r7, #12
 800be1c:	46bd      	mov	sp, r7
 800be1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be22:	4770      	bx	lr

0800be24 <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800be24:	b480      	push	{r7}
 800be26:	b083      	sub	sp, #12
 800be28:	af00      	add	r7, sp, #0
 800be2a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 800be2c:	bf00      	nop
 800be2e:	370c      	adds	r7, #12
 800be30:	46bd      	mov	sp, r7
 800be32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be36:	4770      	bx	lr

0800be38 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 800be38:	b480      	push	{r7}
 800be3a:	b083      	sub	sp, #12
 800be3c:	af00      	add	r7, sp, #0
 800be3e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 800be40:	bf00      	nop
 800be42:	370c      	adds	r7, #12
 800be44:	46bd      	mov	sp, r7
 800be46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be4a:	4770      	bx	lr

0800be4c <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi)
{
 800be4c:	b480      	push	{r7}
 800be4e:	b083      	sub	sp, #12
 800be50:	af00      	add	r7, sp, #0
 800be52:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 800be54:	bf00      	nop
 800be56:	370c      	adds	r7, #12
 800be58:	46bd      	mov	sp, r7
 800be5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be5e:	4770      	bx	lr

0800be60 <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800be60:	b580      	push	{r7, lr}
 800be62:	b084      	sub	sp, #16
 800be64:	af00      	add	r7, sp, #0
 800be66:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800be68:	687b      	ldr	r3, [r7, #4]
 800be6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800be6c:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 800be6e:	68fb      	ldr	r3, [r7, #12]
 800be70:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800be74:	b2db      	uxtb	r3, r3
 800be76:	2b07      	cmp	r3, #7
 800be78:	d011      	beq.n	800be9e <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800be7a:	68fb      	ldr	r3, [r7, #12]
 800be7c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800be7e:	69db      	ldr	r3, [r3, #28]
 800be80:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800be84:	d103      	bne.n	800be8e <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 800be86:	68f8      	ldr	r0, [r7, #12]
 800be88:	f7f6 f848 	bl	8001f1c <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 800be8c:	e007      	b.n	800be9e <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 800be8e:	68fb      	ldr	r3, [r7, #12]
 800be90:	681b      	ldr	r3, [r3, #0]
 800be92:	691a      	ldr	r2, [r3, #16]
 800be94:	68fb      	ldr	r3, [r7, #12]
 800be96:	681b      	ldr	r3, [r3, #0]
 800be98:	f042 0208 	orr.w	r2, r2, #8
 800be9c:	611a      	str	r2, [r3, #16]
}
 800be9e:	bf00      	nop
 800bea0:	3710      	adds	r7, #16
 800bea2:	46bd      	mov	sp, r7
 800bea4:	bd80      	pop	{r7, pc}

0800bea6 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 800bea6:	b580      	push	{r7, lr}
 800bea8:	b084      	sub	sp, #16
 800beaa:	af00      	add	r7, sp, #0
 800beac:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800beae:	687b      	ldr	r3, [r7, #4]
 800beb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800beb2:	60fb      	str	r3, [r7, #12]

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 800beb4:	68f8      	ldr	r0, [r7, #12]
 800beb6:	f7ff ffbf 	bl	800be38 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800beba:	bf00      	nop
 800bebc:	3710      	adds	r7, #16
 800bebe:	46bd      	mov	sp, r7
 800bec0:	bd80      	pop	{r7, pc}

0800bec2 <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800bec2:	b580      	push	{r7, lr}
 800bec4:	b084      	sub	sp, #16
 800bec6:	af00      	add	r7, sp, #0
 800bec8:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800beca:	687b      	ldr	r3, [r7, #4]
 800becc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bece:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 800bed0:	6878      	ldr	r0, [r7, #4]
 800bed2:	f7f9 fdcf 	bl	8005a74 <HAL_DMA_GetError>
 800bed6:	4603      	mov	r3, r0
 800bed8:	2b02      	cmp	r3, #2
 800beda:	d011      	beq.n	800bf00 <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 800bedc:	68f8      	ldr	r0, [r7, #12]
 800bede:	f000 f82d 	bl	800bf3c <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800bee2:	68fb      	ldr	r3, [r7, #12]
 800bee4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bee8:	f043 0210 	orr.w	r2, r3, #16
 800beec:	68fb      	ldr	r3, [r7, #12]
 800beee:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800bef2:	68fb      	ldr	r3, [r7, #12]
 800bef4:	2201      	movs	r2, #1
 800bef6:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 800befa:	68f8      	ldr	r0, [r7, #12]
 800befc:	f7f5 fff8 	bl	8001ef0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 800bf00:	bf00      	nop
 800bf02:	3710      	adds	r7, #16
 800bf04:	46bd      	mov	sp, r7
 800bf06:	bd80      	pop	{r7, pc}

0800bf08 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800bf08:	b580      	push	{r7, lr}
 800bf0a:	b084      	sub	sp, #16
 800bf0c:	af00      	add	r7, sp, #0
 800bf0e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800bf10:	687b      	ldr	r3, [r7, #4]
 800bf12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf14:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 800bf16:	68fb      	ldr	r3, [r7, #12]
 800bf18:	2200      	movs	r2, #0
 800bf1a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxXferCount = (uint16_t) 0UL;
 800bf1e:	68fb      	ldr	r3, [r7, #12]
 800bf20:	2200      	movs	r2, #0
 800bf22:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 800bf26:	68fb      	ldr	r3, [r7, #12]
 800bf28:	2201      	movs	r2, #1
 800bf2a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800bf2e:	68f8      	ldr	r0, [r7, #12]
 800bf30:	f7f5 ffde 	bl	8001ef0 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800bf34:	bf00      	nop
 800bf36:	3710      	adds	r7, #16
 800bf38:	46bd      	mov	sp, r7
 800bf3a:	bd80      	pop	{r7, pc}

0800bf3c <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 800bf3c:	b480      	push	{r7}
 800bf3e:	b085      	sub	sp, #20
 800bf40:	af00      	add	r7, sp, #0
 800bf42:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	681b      	ldr	r3, [r3, #0]
 800bf48:	695b      	ldr	r3, [r3, #20]
 800bf4a:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800bf4c:	687b      	ldr	r3, [r7, #4]
 800bf4e:	681b      	ldr	r3, [r3, #0]
 800bf50:	699a      	ldr	r2, [r3, #24]
 800bf52:	687b      	ldr	r3, [r7, #4]
 800bf54:	681b      	ldr	r3, [r3, #0]
 800bf56:	f042 0208 	orr.w	r2, r2, #8
 800bf5a:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800bf5c:	687b      	ldr	r3, [r7, #4]
 800bf5e:	681b      	ldr	r3, [r3, #0]
 800bf60:	699a      	ldr	r2, [r3, #24]
 800bf62:	687b      	ldr	r3, [r7, #4]
 800bf64:	681b      	ldr	r3, [r3, #0]
 800bf66:	f042 0210 	orr.w	r2, r2, #16
 800bf6a:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800bf6c:	687b      	ldr	r3, [r7, #4]
 800bf6e:	681b      	ldr	r3, [r3, #0]
 800bf70:	681a      	ldr	r2, [r3, #0]
 800bf72:	687b      	ldr	r3, [r7, #4]
 800bf74:	681b      	ldr	r3, [r3, #0]
 800bf76:	f022 0201 	bic.w	r2, r2, #1
 800bf7a:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 800bf7c:	687b      	ldr	r3, [r7, #4]
 800bf7e:	681b      	ldr	r3, [r3, #0]
 800bf80:	6919      	ldr	r1, [r3, #16]
 800bf82:	687b      	ldr	r3, [r7, #4]
 800bf84:	681a      	ldr	r2, [r3, #0]
 800bf86:	4b3c      	ldr	r3, [pc, #240]	; (800c078 <SPI_CloseTransfer+0x13c>)
 800bf88:	400b      	ands	r3, r1
 800bf8a:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800bf8c:	687b      	ldr	r3, [r7, #4]
 800bf8e:	681b      	ldr	r3, [r3, #0]
 800bf90:	689a      	ldr	r2, [r3, #8]
 800bf92:	687b      	ldr	r3, [r7, #4]
 800bf94:	681b      	ldr	r3, [r3, #0]
 800bf96:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800bf9a:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bf9c:	687b      	ldr	r3, [r7, #4]
 800bf9e:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800bfa2:	b2db      	uxtb	r3, r3
 800bfa4:	2b04      	cmp	r3, #4
 800bfa6:	d014      	beq.n	800bfd2 <SPI_CloseTransfer+0x96>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 800bfa8:	68fb      	ldr	r3, [r7, #12]
 800bfaa:	f003 0320 	and.w	r3, r3, #32
 800bfae:	2b00      	cmp	r3, #0
 800bfb0:	d00f      	beq.n	800bfd2 <SPI_CloseTransfer+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800bfb2:	687b      	ldr	r3, [r7, #4]
 800bfb4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bfb8:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800bfbc:	687b      	ldr	r3, [r7, #4]
 800bfbe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800bfc2:	687b      	ldr	r3, [r7, #4]
 800bfc4:	681b      	ldr	r3, [r3, #0]
 800bfc6:	699a      	ldr	r2, [r3, #24]
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	f042 0220 	orr.w	r2, r2, #32
 800bfd0:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800bfd2:	687b      	ldr	r3, [r7, #4]
 800bfd4:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800bfd8:	b2db      	uxtb	r3, r3
 800bfda:	2b03      	cmp	r3, #3
 800bfdc:	d014      	beq.n	800c008 <SPI_CloseTransfer+0xcc>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 800bfde:	68fb      	ldr	r3, [r7, #12]
 800bfe0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bfe4:	2b00      	cmp	r3, #0
 800bfe6:	d00f      	beq.n	800c008 <SPI_CloseTransfer+0xcc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800bfe8:	687b      	ldr	r3, [r7, #4]
 800bfea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bfee:	f043 0204 	orr.w	r2, r3, #4
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bff8:	687b      	ldr	r3, [r7, #4]
 800bffa:	681b      	ldr	r3, [r3, #0]
 800bffc:	699a      	ldr	r2, [r3, #24]
 800bffe:	687b      	ldr	r3, [r7, #4]
 800c000:	681b      	ldr	r3, [r3, #0]
 800c002:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800c006:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 800c008:	68fb      	ldr	r3, [r7, #12]
 800c00a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800c00e:	2b00      	cmp	r3, #0
 800c010:	d00f      	beq.n	800c032 <SPI_CloseTransfer+0xf6>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800c012:	687b      	ldr	r3, [r7, #4]
 800c014:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c018:	f043 0201 	orr.w	r2, r3, #1
 800c01c:	687b      	ldr	r3, [r7, #4]
 800c01e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800c022:	687b      	ldr	r3, [r7, #4]
 800c024:	681b      	ldr	r3, [r3, #0]
 800c026:	699a      	ldr	r2, [r3, #24]
 800c028:	687b      	ldr	r3, [r7, #4]
 800c02a:	681b      	ldr	r3, [r3, #0]
 800c02c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c030:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 800c032:	68fb      	ldr	r3, [r7, #12]
 800c034:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c038:	2b00      	cmp	r3, #0
 800c03a:	d00f      	beq.n	800c05c <SPI_CloseTransfer+0x120>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800c03c:	687b      	ldr	r3, [r7, #4]
 800c03e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c042:	f043 0208 	orr.w	r2, r3, #8
 800c046:	687b      	ldr	r3, [r7, #4]
 800c048:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 800c04c:	687b      	ldr	r3, [r7, #4]
 800c04e:	681b      	ldr	r3, [r3, #0]
 800c050:	699a      	ldr	r2, [r3, #24]
 800c052:	687b      	ldr	r3, [r7, #4]
 800c054:	681b      	ldr	r3, [r3, #0]
 800c056:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c05a:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 800c05c:	687b      	ldr	r3, [r7, #4]
 800c05e:	2200      	movs	r2, #0
 800c060:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxXferCount = (uint16_t)0UL;
 800c064:	687b      	ldr	r3, [r7, #4]
 800c066:	2200      	movs	r2, #0
 800c068:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
}
 800c06c:	bf00      	nop
 800c06e:	3714      	adds	r7, #20
 800c070:	46bd      	mov	sp, r7
 800c072:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c076:	4770      	bx	lr
 800c078:	fffffc90 	.word	0xfffffc90

0800c07c <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 800c07c:	b580      	push	{r7, lr}
 800c07e:	b084      	sub	sp, #16
 800c080:	af00      	add	r7, sp, #0
 800c082:	60f8      	str	r0, [r7, #12]
 800c084:	60b9      	str	r1, [r7, #8]
 800c086:	603b      	str	r3, [r7, #0]
 800c088:	4613      	mov	r3, r2
 800c08a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800c08c:	e010      	b.n	800c0b0 <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c08e:	f7f6 fb03 	bl	8002698 <HAL_GetTick>
 800c092:	4602      	mov	r2, r0
 800c094:	69bb      	ldr	r3, [r7, #24]
 800c096:	1ad3      	subs	r3, r2, r3
 800c098:	683a      	ldr	r2, [r7, #0]
 800c09a:	429a      	cmp	r2, r3
 800c09c:	d803      	bhi.n	800c0a6 <SPI_WaitOnFlagUntilTimeout+0x2a>
 800c09e:	683b      	ldr	r3, [r7, #0]
 800c0a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c0a4:	d102      	bne.n	800c0ac <SPI_WaitOnFlagUntilTimeout+0x30>
 800c0a6:	683b      	ldr	r3, [r7, #0]
 800c0a8:	2b00      	cmp	r3, #0
 800c0aa:	d101      	bne.n	800c0b0 <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 800c0ac:	2303      	movs	r3, #3
 800c0ae:	e00f      	b.n	800c0d0 <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800c0b0:	68fb      	ldr	r3, [r7, #12]
 800c0b2:	681b      	ldr	r3, [r3, #0]
 800c0b4:	695a      	ldr	r2, [r3, #20]
 800c0b6:	68bb      	ldr	r3, [r7, #8]
 800c0b8:	4013      	ands	r3, r2
 800c0ba:	68ba      	ldr	r2, [r7, #8]
 800c0bc:	429a      	cmp	r2, r3
 800c0be:	bf0c      	ite	eq
 800c0c0:	2301      	moveq	r3, #1
 800c0c2:	2300      	movne	r3, #0
 800c0c4:	b2db      	uxtb	r3, r3
 800c0c6:	461a      	mov	r2, r3
 800c0c8:	79fb      	ldrb	r3, [r7, #7]
 800c0ca:	429a      	cmp	r2, r3
 800c0cc:	d0df      	beq.n	800c08e <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 800c0ce:	2300      	movs	r3, #0
}
 800c0d0:	4618      	mov	r0, r3
 800c0d2:	3710      	adds	r7, #16
 800c0d4:	46bd      	mov	sp, r7
 800c0d6:	bd80      	pop	{r7, pc}

0800c0d8 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi)
{
 800c0d8:	b480      	push	{r7}
 800c0da:	b085      	sub	sp, #20
 800c0dc:	af00      	add	r7, sp, #0
 800c0de:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 800c0e0:	687b      	ldr	r3, [r7, #4]
 800c0e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0e4:	095b      	lsrs	r3, r3, #5
 800c0e6:	3301      	adds	r3, #1
 800c0e8:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 800c0ea:	687b      	ldr	r3, [r7, #4]
 800c0ec:	68db      	ldr	r3, [r3, #12]
 800c0ee:	3301      	adds	r3, #1
 800c0f0:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 800c0f2:	68bb      	ldr	r3, [r7, #8]
 800c0f4:	3307      	adds	r3, #7
 800c0f6:	08db      	lsrs	r3, r3, #3
 800c0f8:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 800c0fa:	68bb      	ldr	r3, [r7, #8]
 800c0fc:	68fa      	ldr	r2, [r7, #12]
 800c0fe:	fb02 f303 	mul.w	r3, r2, r3
}
 800c102:	4618      	mov	r0, r3
 800c104:	3714      	adds	r7, #20
 800c106:	46bd      	mov	sp, r7
 800c108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c10c:	4770      	bx	lr

0800c10e <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800c10e:	b580      	push	{r7, lr}
 800c110:	b082      	sub	sp, #8
 800c112:	af00      	add	r7, sp, #0
 800c114:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c116:	687b      	ldr	r3, [r7, #4]
 800c118:	2b00      	cmp	r3, #0
 800c11a:	d101      	bne.n	800c120 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800c11c:	2301      	movs	r3, #1
 800c11e:	e049      	b.n	800c1b4 <HAL_TIM_PWM_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c120:	687b      	ldr	r3, [r7, #4]
 800c122:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c126:	b2db      	uxtb	r3, r3
 800c128:	2b00      	cmp	r3, #0
 800c12a:	d106      	bne.n	800c13a <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800c12c:	687b      	ldr	r3, [r7, #4]
 800c12e:	2200      	movs	r2, #0
 800c130:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800c134:	6878      	ldr	r0, [r7, #4]
 800c136:	f7f5 f951 	bl	80013dc <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800c13a:	687b      	ldr	r3, [r7, #4]
 800c13c:	2202      	movs	r2, #2
 800c13e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c142:	687b      	ldr	r3, [r7, #4]
 800c144:	681a      	ldr	r2, [r3, #0]
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	3304      	adds	r3, #4
 800c14a:	4619      	mov	r1, r3
 800c14c:	4610      	mov	r0, r2
 800c14e:	f000 fa57 	bl	800c600 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	2201      	movs	r2, #1
 800c156:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c15a:	687b      	ldr	r3, [r7, #4]
 800c15c:	2201      	movs	r2, #1
 800c15e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	2201      	movs	r2, #1
 800c166:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800c16a:	687b      	ldr	r3, [r7, #4]
 800c16c:	2201      	movs	r2, #1
 800c16e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c172:	687b      	ldr	r3, [r7, #4]
 800c174:	2201      	movs	r2, #1
 800c176:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800c17a:	687b      	ldr	r3, [r7, #4]
 800c17c:	2201      	movs	r2, #1
 800c17e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	2201      	movs	r2, #1
 800c186:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	2201      	movs	r2, #1
 800c18e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800c192:	687b      	ldr	r3, [r7, #4]
 800c194:	2201      	movs	r2, #1
 800c196:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800c19a:	687b      	ldr	r3, [r7, #4]
 800c19c:	2201      	movs	r2, #1
 800c19e:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800c1a2:	687b      	ldr	r3, [r7, #4]
 800c1a4:	2201      	movs	r2, #1
 800c1a6:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800c1aa:	687b      	ldr	r3, [r7, #4]
 800c1ac:	2201      	movs	r2, #1
 800c1ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800c1b2:	2300      	movs	r3, #0
}
 800c1b4:	4618      	mov	r0, r3
 800c1b6:	3708      	adds	r7, #8
 800c1b8:	46bd      	mov	sp, r7
 800c1ba:	bd80      	pop	{r7, pc}

0800c1bc <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_5: TIM Channel 5 selected
  *            @arg TIM_CHANNEL_6: TIM Channel 6 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800c1bc:	b580      	push	{r7, lr}
 800c1be:	b084      	sub	sp, #16
 800c1c0:	af00      	add	r7, sp, #0
 800c1c2:	6078      	str	r0, [r7, #4]
 800c1c4:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800c1c6:	683b      	ldr	r3, [r7, #0]
 800c1c8:	2b00      	cmp	r3, #0
 800c1ca:	d109      	bne.n	800c1e0 <HAL_TIM_PWM_Start+0x24>
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c1d2:	b2db      	uxtb	r3, r3
 800c1d4:	2b01      	cmp	r3, #1
 800c1d6:	bf14      	ite	ne
 800c1d8:	2301      	movne	r3, #1
 800c1da:	2300      	moveq	r3, #0
 800c1dc:	b2db      	uxtb	r3, r3
 800c1de:	e03c      	b.n	800c25a <HAL_TIM_PWM_Start+0x9e>
 800c1e0:	683b      	ldr	r3, [r7, #0]
 800c1e2:	2b04      	cmp	r3, #4
 800c1e4:	d109      	bne.n	800c1fa <HAL_TIM_PWM_Start+0x3e>
 800c1e6:	687b      	ldr	r3, [r7, #4]
 800c1e8:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800c1ec:	b2db      	uxtb	r3, r3
 800c1ee:	2b01      	cmp	r3, #1
 800c1f0:	bf14      	ite	ne
 800c1f2:	2301      	movne	r3, #1
 800c1f4:	2300      	moveq	r3, #0
 800c1f6:	b2db      	uxtb	r3, r3
 800c1f8:	e02f      	b.n	800c25a <HAL_TIM_PWM_Start+0x9e>
 800c1fa:	683b      	ldr	r3, [r7, #0]
 800c1fc:	2b08      	cmp	r3, #8
 800c1fe:	d109      	bne.n	800c214 <HAL_TIM_PWM_Start+0x58>
 800c200:	687b      	ldr	r3, [r7, #4]
 800c202:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800c206:	b2db      	uxtb	r3, r3
 800c208:	2b01      	cmp	r3, #1
 800c20a:	bf14      	ite	ne
 800c20c:	2301      	movne	r3, #1
 800c20e:	2300      	moveq	r3, #0
 800c210:	b2db      	uxtb	r3, r3
 800c212:	e022      	b.n	800c25a <HAL_TIM_PWM_Start+0x9e>
 800c214:	683b      	ldr	r3, [r7, #0]
 800c216:	2b0c      	cmp	r3, #12
 800c218:	d109      	bne.n	800c22e <HAL_TIM_PWM_Start+0x72>
 800c21a:	687b      	ldr	r3, [r7, #4]
 800c21c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800c220:	b2db      	uxtb	r3, r3
 800c222:	2b01      	cmp	r3, #1
 800c224:	bf14      	ite	ne
 800c226:	2301      	movne	r3, #1
 800c228:	2300      	moveq	r3, #0
 800c22a:	b2db      	uxtb	r3, r3
 800c22c:	e015      	b.n	800c25a <HAL_TIM_PWM_Start+0x9e>
 800c22e:	683b      	ldr	r3, [r7, #0]
 800c230:	2b10      	cmp	r3, #16
 800c232:	d109      	bne.n	800c248 <HAL_TIM_PWM_Start+0x8c>
 800c234:	687b      	ldr	r3, [r7, #4]
 800c236:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800c23a:	b2db      	uxtb	r3, r3
 800c23c:	2b01      	cmp	r3, #1
 800c23e:	bf14      	ite	ne
 800c240:	2301      	movne	r3, #1
 800c242:	2300      	moveq	r3, #0
 800c244:	b2db      	uxtb	r3, r3
 800c246:	e008      	b.n	800c25a <HAL_TIM_PWM_Start+0x9e>
 800c248:	687b      	ldr	r3, [r7, #4]
 800c24a:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800c24e:	b2db      	uxtb	r3, r3
 800c250:	2b01      	cmp	r3, #1
 800c252:	bf14      	ite	ne
 800c254:	2301      	movne	r3, #1
 800c256:	2300      	moveq	r3, #0
 800c258:	b2db      	uxtb	r3, r3
 800c25a:	2b00      	cmp	r3, #0
 800c25c:	d001      	beq.n	800c262 <HAL_TIM_PWM_Start+0xa6>
  {
    return HAL_ERROR;
 800c25e:	2301      	movs	r3, #1
 800c260:	e0a1      	b.n	800c3a6 <HAL_TIM_PWM_Start+0x1ea>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800c262:	683b      	ldr	r3, [r7, #0]
 800c264:	2b00      	cmp	r3, #0
 800c266:	d104      	bne.n	800c272 <HAL_TIM_PWM_Start+0xb6>
 800c268:	687b      	ldr	r3, [r7, #4]
 800c26a:	2202      	movs	r2, #2
 800c26c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c270:	e023      	b.n	800c2ba <HAL_TIM_PWM_Start+0xfe>
 800c272:	683b      	ldr	r3, [r7, #0]
 800c274:	2b04      	cmp	r3, #4
 800c276:	d104      	bne.n	800c282 <HAL_TIM_PWM_Start+0xc6>
 800c278:	687b      	ldr	r3, [r7, #4]
 800c27a:	2202      	movs	r2, #2
 800c27c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800c280:	e01b      	b.n	800c2ba <HAL_TIM_PWM_Start+0xfe>
 800c282:	683b      	ldr	r3, [r7, #0]
 800c284:	2b08      	cmp	r3, #8
 800c286:	d104      	bne.n	800c292 <HAL_TIM_PWM_Start+0xd6>
 800c288:	687b      	ldr	r3, [r7, #4]
 800c28a:	2202      	movs	r2, #2
 800c28c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800c290:	e013      	b.n	800c2ba <HAL_TIM_PWM_Start+0xfe>
 800c292:	683b      	ldr	r3, [r7, #0]
 800c294:	2b0c      	cmp	r3, #12
 800c296:	d104      	bne.n	800c2a2 <HAL_TIM_PWM_Start+0xe6>
 800c298:	687b      	ldr	r3, [r7, #4]
 800c29a:	2202      	movs	r2, #2
 800c29c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800c2a0:	e00b      	b.n	800c2ba <HAL_TIM_PWM_Start+0xfe>
 800c2a2:	683b      	ldr	r3, [r7, #0]
 800c2a4:	2b10      	cmp	r3, #16
 800c2a6:	d104      	bne.n	800c2b2 <HAL_TIM_PWM_Start+0xf6>
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	2202      	movs	r2, #2
 800c2ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800c2b0:	e003      	b.n	800c2ba <HAL_TIM_PWM_Start+0xfe>
 800c2b2:	687b      	ldr	r3, [r7, #4]
 800c2b4:	2202      	movs	r2, #2
 800c2b6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800c2ba:	687b      	ldr	r3, [r7, #4]
 800c2bc:	681b      	ldr	r3, [r3, #0]
 800c2be:	2201      	movs	r2, #1
 800c2c0:	6839      	ldr	r1, [r7, #0]
 800c2c2:	4618      	mov	r0, r3
 800c2c4:	f000 fd0c 	bl	800cce0 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	681b      	ldr	r3, [r3, #0]
 800c2cc:	4a38      	ldr	r2, [pc, #224]	; (800c3b0 <HAL_TIM_PWM_Start+0x1f4>)
 800c2ce:	4293      	cmp	r3, r2
 800c2d0:	d013      	beq.n	800c2fa <HAL_TIM_PWM_Start+0x13e>
 800c2d2:	687b      	ldr	r3, [r7, #4]
 800c2d4:	681b      	ldr	r3, [r3, #0]
 800c2d6:	4a37      	ldr	r2, [pc, #220]	; (800c3b4 <HAL_TIM_PWM_Start+0x1f8>)
 800c2d8:	4293      	cmp	r3, r2
 800c2da:	d00e      	beq.n	800c2fa <HAL_TIM_PWM_Start+0x13e>
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	681b      	ldr	r3, [r3, #0]
 800c2e0:	4a35      	ldr	r2, [pc, #212]	; (800c3b8 <HAL_TIM_PWM_Start+0x1fc>)
 800c2e2:	4293      	cmp	r3, r2
 800c2e4:	d009      	beq.n	800c2fa <HAL_TIM_PWM_Start+0x13e>
 800c2e6:	687b      	ldr	r3, [r7, #4]
 800c2e8:	681b      	ldr	r3, [r3, #0]
 800c2ea:	4a34      	ldr	r2, [pc, #208]	; (800c3bc <HAL_TIM_PWM_Start+0x200>)
 800c2ec:	4293      	cmp	r3, r2
 800c2ee:	d004      	beq.n	800c2fa <HAL_TIM_PWM_Start+0x13e>
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	681b      	ldr	r3, [r3, #0]
 800c2f4:	4a32      	ldr	r2, [pc, #200]	; (800c3c0 <HAL_TIM_PWM_Start+0x204>)
 800c2f6:	4293      	cmp	r3, r2
 800c2f8:	d101      	bne.n	800c2fe <HAL_TIM_PWM_Start+0x142>
 800c2fa:	2301      	movs	r3, #1
 800c2fc:	e000      	b.n	800c300 <HAL_TIM_PWM_Start+0x144>
 800c2fe:	2300      	movs	r3, #0
 800c300:	2b00      	cmp	r3, #0
 800c302:	d007      	beq.n	800c314 <HAL_TIM_PWM_Start+0x158>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800c304:	687b      	ldr	r3, [r7, #4]
 800c306:	681b      	ldr	r3, [r3, #0]
 800c308:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800c30a:	687b      	ldr	r3, [r7, #4]
 800c30c:	681b      	ldr	r3, [r3, #0]
 800c30e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c312:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c314:	687b      	ldr	r3, [r7, #4]
 800c316:	681b      	ldr	r3, [r3, #0]
 800c318:	4a25      	ldr	r2, [pc, #148]	; (800c3b0 <HAL_TIM_PWM_Start+0x1f4>)
 800c31a:	4293      	cmp	r3, r2
 800c31c:	d022      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	681b      	ldr	r3, [r3, #0]
 800c322:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c326:	d01d      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c328:	687b      	ldr	r3, [r7, #4]
 800c32a:	681b      	ldr	r3, [r3, #0]
 800c32c:	4a25      	ldr	r2, [pc, #148]	; (800c3c4 <HAL_TIM_PWM_Start+0x208>)
 800c32e:	4293      	cmp	r3, r2
 800c330:	d018      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c332:	687b      	ldr	r3, [r7, #4]
 800c334:	681b      	ldr	r3, [r3, #0]
 800c336:	4a24      	ldr	r2, [pc, #144]	; (800c3c8 <HAL_TIM_PWM_Start+0x20c>)
 800c338:	4293      	cmp	r3, r2
 800c33a:	d013      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c33c:	687b      	ldr	r3, [r7, #4]
 800c33e:	681b      	ldr	r3, [r3, #0]
 800c340:	4a22      	ldr	r2, [pc, #136]	; (800c3cc <HAL_TIM_PWM_Start+0x210>)
 800c342:	4293      	cmp	r3, r2
 800c344:	d00e      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c346:	687b      	ldr	r3, [r7, #4]
 800c348:	681b      	ldr	r3, [r3, #0]
 800c34a:	4a1a      	ldr	r2, [pc, #104]	; (800c3b4 <HAL_TIM_PWM_Start+0x1f8>)
 800c34c:	4293      	cmp	r3, r2
 800c34e:	d009      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c350:	687b      	ldr	r3, [r7, #4]
 800c352:	681b      	ldr	r3, [r3, #0]
 800c354:	4a1e      	ldr	r2, [pc, #120]	; (800c3d0 <HAL_TIM_PWM_Start+0x214>)
 800c356:	4293      	cmp	r3, r2
 800c358:	d004      	beq.n	800c364 <HAL_TIM_PWM_Start+0x1a8>
 800c35a:	687b      	ldr	r3, [r7, #4]
 800c35c:	681b      	ldr	r3, [r3, #0]
 800c35e:	4a16      	ldr	r2, [pc, #88]	; (800c3b8 <HAL_TIM_PWM_Start+0x1fc>)
 800c360:	4293      	cmp	r3, r2
 800c362:	d115      	bne.n	800c390 <HAL_TIM_PWM_Start+0x1d4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c364:	687b      	ldr	r3, [r7, #4]
 800c366:	681b      	ldr	r3, [r3, #0]
 800c368:	689a      	ldr	r2, [r3, #8]
 800c36a:	4b1a      	ldr	r3, [pc, #104]	; (800c3d4 <HAL_TIM_PWM_Start+0x218>)
 800c36c:	4013      	ands	r3, r2
 800c36e:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c370:	68fb      	ldr	r3, [r7, #12]
 800c372:	2b06      	cmp	r3, #6
 800c374:	d015      	beq.n	800c3a2 <HAL_TIM_PWM_Start+0x1e6>
 800c376:	68fb      	ldr	r3, [r7, #12]
 800c378:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c37c:	d011      	beq.n	800c3a2 <HAL_TIM_PWM_Start+0x1e6>
    {
      __HAL_TIM_ENABLE(htim);
 800c37e:	687b      	ldr	r3, [r7, #4]
 800c380:	681b      	ldr	r3, [r3, #0]
 800c382:	681a      	ldr	r2, [r3, #0]
 800c384:	687b      	ldr	r3, [r7, #4]
 800c386:	681b      	ldr	r3, [r3, #0]
 800c388:	f042 0201 	orr.w	r2, r2, #1
 800c38c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c38e:	e008      	b.n	800c3a2 <HAL_TIM_PWM_Start+0x1e6>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800c390:	687b      	ldr	r3, [r7, #4]
 800c392:	681b      	ldr	r3, [r3, #0]
 800c394:	681a      	ldr	r2, [r3, #0]
 800c396:	687b      	ldr	r3, [r7, #4]
 800c398:	681b      	ldr	r3, [r3, #0]
 800c39a:	f042 0201 	orr.w	r2, r2, #1
 800c39e:	601a      	str	r2, [r3, #0]
 800c3a0:	e000      	b.n	800c3a4 <HAL_TIM_PWM_Start+0x1e8>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c3a2:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 800c3a4:	2300      	movs	r3, #0
}
 800c3a6:	4618      	mov	r0, r3
 800c3a8:	3710      	adds	r7, #16
 800c3aa:	46bd      	mov	sp, r7
 800c3ac:	bd80      	pop	{r7, pc}
 800c3ae:	bf00      	nop
 800c3b0:	40010000 	.word	0x40010000
 800c3b4:	40010400 	.word	0x40010400
 800c3b8:	40014000 	.word	0x40014000
 800c3bc:	40014400 	.word	0x40014400
 800c3c0:	40014800 	.word	0x40014800
 800c3c4:	40000400 	.word	0x40000400
 800c3c8:	40000800 	.word	0x40000800
 800c3cc:	40000c00 	.word	0x40000c00
 800c3d0:	40001800 	.word	0x40001800
 800c3d4:	00010007 	.word	0x00010007

0800c3d8 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 800c3d8:	b580      	push	{r7, lr}
 800c3da:	b086      	sub	sp, #24
 800c3dc:	af00      	add	r7, sp, #0
 800c3de:	60f8      	str	r0, [r7, #12]
 800c3e0:	60b9      	str	r1, [r7, #8]
 800c3e2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800c3e4:	2300      	movs	r3, #0
 800c3e6:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800c3e8:	68fb      	ldr	r3, [r7, #12]
 800c3ea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c3ee:	2b01      	cmp	r3, #1
 800c3f0:	d101      	bne.n	800c3f6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800c3f2:	2302      	movs	r3, #2
 800c3f4:	e0ff      	b.n	800c5f6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 800c3f6:	68fb      	ldr	r3, [r7, #12]
 800c3f8:	2201      	movs	r2, #1
 800c3fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 800c3fe:	687b      	ldr	r3, [r7, #4]
 800c400:	2b14      	cmp	r3, #20
 800c402:	f200 80f0 	bhi.w	800c5e6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 800c406:	a201      	add	r2, pc, #4	; (adr r2, 800c40c <HAL_TIM_PWM_ConfigChannel+0x34>)
 800c408:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c40c:	0800c461 	.word	0x0800c461
 800c410:	0800c5e7 	.word	0x0800c5e7
 800c414:	0800c5e7 	.word	0x0800c5e7
 800c418:	0800c5e7 	.word	0x0800c5e7
 800c41c:	0800c4a1 	.word	0x0800c4a1
 800c420:	0800c5e7 	.word	0x0800c5e7
 800c424:	0800c5e7 	.word	0x0800c5e7
 800c428:	0800c5e7 	.word	0x0800c5e7
 800c42c:	0800c4e3 	.word	0x0800c4e3
 800c430:	0800c5e7 	.word	0x0800c5e7
 800c434:	0800c5e7 	.word	0x0800c5e7
 800c438:	0800c5e7 	.word	0x0800c5e7
 800c43c:	0800c523 	.word	0x0800c523
 800c440:	0800c5e7 	.word	0x0800c5e7
 800c444:	0800c5e7 	.word	0x0800c5e7
 800c448:	0800c5e7 	.word	0x0800c5e7
 800c44c:	0800c565 	.word	0x0800c565
 800c450:	0800c5e7 	.word	0x0800c5e7
 800c454:	0800c5e7 	.word	0x0800c5e7
 800c458:	0800c5e7 	.word	0x0800c5e7
 800c45c:	0800c5a5 	.word	0x0800c5a5
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800c460:	68fb      	ldr	r3, [r7, #12]
 800c462:	681b      	ldr	r3, [r3, #0]
 800c464:	68b9      	ldr	r1, [r7, #8]
 800c466:	4618      	mov	r0, r3
 800c468:	f000 f964 	bl	800c734 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800c46c:	68fb      	ldr	r3, [r7, #12]
 800c46e:	681b      	ldr	r3, [r3, #0]
 800c470:	699a      	ldr	r2, [r3, #24]
 800c472:	68fb      	ldr	r3, [r7, #12]
 800c474:	681b      	ldr	r3, [r3, #0]
 800c476:	f042 0208 	orr.w	r2, r2, #8
 800c47a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800c47c:	68fb      	ldr	r3, [r7, #12]
 800c47e:	681b      	ldr	r3, [r3, #0]
 800c480:	699a      	ldr	r2, [r3, #24]
 800c482:	68fb      	ldr	r3, [r7, #12]
 800c484:	681b      	ldr	r3, [r3, #0]
 800c486:	f022 0204 	bic.w	r2, r2, #4
 800c48a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800c48c:	68fb      	ldr	r3, [r7, #12]
 800c48e:	681b      	ldr	r3, [r3, #0]
 800c490:	6999      	ldr	r1, [r3, #24]
 800c492:	68bb      	ldr	r3, [r7, #8]
 800c494:	691a      	ldr	r2, [r3, #16]
 800c496:	68fb      	ldr	r3, [r7, #12]
 800c498:	681b      	ldr	r3, [r3, #0]
 800c49a:	430a      	orrs	r2, r1
 800c49c:	619a      	str	r2, [r3, #24]
      break;
 800c49e:	e0a5      	b.n	800c5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800c4a0:	68fb      	ldr	r3, [r7, #12]
 800c4a2:	681b      	ldr	r3, [r3, #0]
 800c4a4:	68b9      	ldr	r1, [r7, #8]
 800c4a6:	4618      	mov	r0, r3
 800c4a8:	f000 f9d4 	bl	800c854 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800c4ac:	68fb      	ldr	r3, [r7, #12]
 800c4ae:	681b      	ldr	r3, [r3, #0]
 800c4b0:	699a      	ldr	r2, [r3, #24]
 800c4b2:	68fb      	ldr	r3, [r7, #12]
 800c4b4:	681b      	ldr	r3, [r3, #0]
 800c4b6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800c4ba:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800c4bc:	68fb      	ldr	r3, [r7, #12]
 800c4be:	681b      	ldr	r3, [r3, #0]
 800c4c0:	699a      	ldr	r2, [r3, #24]
 800c4c2:	68fb      	ldr	r3, [r7, #12]
 800c4c4:	681b      	ldr	r3, [r3, #0]
 800c4c6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c4ca:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800c4cc:	68fb      	ldr	r3, [r7, #12]
 800c4ce:	681b      	ldr	r3, [r3, #0]
 800c4d0:	6999      	ldr	r1, [r3, #24]
 800c4d2:	68bb      	ldr	r3, [r7, #8]
 800c4d4:	691b      	ldr	r3, [r3, #16]
 800c4d6:	021a      	lsls	r2, r3, #8
 800c4d8:	68fb      	ldr	r3, [r7, #12]
 800c4da:	681b      	ldr	r3, [r3, #0]
 800c4dc:	430a      	orrs	r2, r1
 800c4de:	619a      	str	r2, [r3, #24]
      break;
 800c4e0:	e084      	b.n	800c5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800c4e2:	68fb      	ldr	r3, [r7, #12]
 800c4e4:	681b      	ldr	r3, [r3, #0]
 800c4e6:	68b9      	ldr	r1, [r7, #8]
 800c4e8:	4618      	mov	r0, r3
 800c4ea:	f000 fa3d 	bl	800c968 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800c4ee:	68fb      	ldr	r3, [r7, #12]
 800c4f0:	681b      	ldr	r3, [r3, #0]
 800c4f2:	69da      	ldr	r2, [r3, #28]
 800c4f4:	68fb      	ldr	r3, [r7, #12]
 800c4f6:	681b      	ldr	r3, [r3, #0]
 800c4f8:	f042 0208 	orr.w	r2, r2, #8
 800c4fc:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800c4fe:	68fb      	ldr	r3, [r7, #12]
 800c500:	681b      	ldr	r3, [r3, #0]
 800c502:	69da      	ldr	r2, [r3, #28]
 800c504:	68fb      	ldr	r3, [r7, #12]
 800c506:	681b      	ldr	r3, [r3, #0]
 800c508:	f022 0204 	bic.w	r2, r2, #4
 800c50c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800c50e:	68fb      	ldr	r3, [r7, #12]
 800c510:	681b      	ldr	r3, [r3, #0]
 800c512:	69d9      	ldr	r1, [r3, #28]
 800c514:	68bb      	ldr	r3, [r7, #8]
 800c516:	691a      	ldr	r2, [r3, #16]
 800c518:	68fb      	ldr	r3, [r7, #12]
 800c51a:	681b      	ldr	r3, [r3, #0]
 800c51c:	430a      	orrs	r2, r1
 800c51e:	61da      	str	r2, [r3, #28]
      break;
 800c520:	e064      	b.n	800c5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800c522:	68fb      	ldr	r3, [r7, #12]
 800c524:	681b      	ldr	r3, [r3, #0]
 800c526:	68b9      	ldr	r1, [r7, #8]
 800c528:	4618      	mov	r0, r3
 800c52a:	f000 faa5 	bl	800ca78 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800c52e:	68fb      	ldr	r3, [r7, #12]
 800c530:	681b      	ldr	r3, [r3, #0]
 800c532:	69da      	ldr	r2, [r3, #28]
 800c534:	68fb      	ldr	r3, [r7, #12]
 800c536:	681b      	ldr	r3, [r3, #0]
 800c538:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800c53c:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800c53e:	68fb      	ldr	r3, [r7, #12]
 800c540:	681b      	ldr	r3, [r3, #0]
 800c542:	69da      	ldr	r2, [r3, #28]
 800c544:	68fb      	ldr	r3, [r7, #12]
 800c546:	681b      	ldr	r3, [r3, #0]
 800c548:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c54c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800c54e:	68fb      	ldr	r3, [r7, #12]
 800c550:	681b      	ldr	r3, [r3, #0]
 800c552:	69d9      	ldr	r1, [r3, #28]
 800c554:	68bb      	ldr	r3, [r7, #8]
 800c556:	691b      	ldr	r3, [r3, #16]
 800c558:	021a      	lsls	r2, r3, #8
 800c55a:	68fb      	ldr	r3, [r7, #12]
 800c55c:	681b      	ldr	r3, [r3, #0]
 800c55e:	430a      	orrs	r2, r1
 800c560:	61da      	str	r2, [r3, #28]
      break;
 800c562:	e043      	b.n	800c5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 800c564:	68fb      	ldr	r3, [r7, #12]
 800c566:	681b      	ldr	r3, [r3, #0]
 800c568:	68b9      	ldr	r1, [r7, #8]
 800c56a:	4618      	mov	r0, r3
 800c56c:	f000 faee 	bl	800cb4c <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800c570:	68fb      	ldr	r3, [r7, #12]
 800c572:	681b      	ldr	r3, [r3, #0]
 800c574:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800c576:	68fb      	ldr	r3, [r7, #12]
 800c578:	681b      	ldr	r3, [r3, #0]
 800c57a:	f042 0208 	orr.w	r2, r2, #8
 800c57e:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 800c580:	68fb      	ldr	r3, [r7, #12]
 800c582:	681b      	ldr	r3, [r3, #0]
 800c584:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800c586:	68fb      	ldr	r3, [r7, #12]
 800c588:	681b      	ldr	r3, [r3, #0]
 800c58a:	f022 0204 	bic.w	r2, r2, #4
 800c58e:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800c590:	68fb      	ldr	r3, [r7, #12]
 800c592:	681b      	ldr	r3, [r3, #0]
 800c594:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800c596:	68bb      	ldr	r3, [r7, #8]
 800c598:	691a      	ldr	r2, [r3, #16]
 800c59a:	68fb      	ldr	r3, [r7, #12]
 800c59c:	681b      	ldr	r3, [r3, #0]
 800c59e:	430a      	orrs	r2, r1
 800c5a0:	655a      	str	r2, [r3, #84]	; 0x54
      break;
 800c5a2:	e023      	b.n	800c5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 800c5a4:	68fb      	ldr	r3, [r7, #12]
 800c5a6:	681b      	ldr	r3, [r3, #0]
 800c5a8:	68b9      	ldr	r1, [r7, #8]
 800c5aa:	4618      	mov	r0, r3
 800c5ac:	f000 fb32 	bl	800cc14 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 800c5b0:	68fb      	ldr	r3, [r7, #12]
 800c5b2:	681b      	ldr	r3, [r3, #0]
 800c5b4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800c5b6:	68fb      	ldr	r3, [r7, #12]
 800c5b8:	681b      	ldr	r3, [r3, #0]
 800c5ba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800c5be:	655a      	str	r2, [r3, #84]	; 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 800c5c0:	68fb      	ldr	r3, [r7, #12]
 800c5c2:	681b      	ldr	r3, [r3, #0]
 800c5c4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800c5c6:	68fb      	ldr	r3, [r7, #12]
 800c5c8:	681b      	ldr	r3, [r3, #0]
 800c5ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c5ce:	655a      	str	r2, [r3, #84]	; 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800c5d0:	68fb      	ldr	r3, [r7, #12]
 800c5d2:	681b      	ldr	r3, [r3, #0]
 800c5d4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800c5d6:	68bb      	ldr	r3, [r7, #8]
 800c5d8:	691b      	ldr	r3, [r3, #16]
 800c5da:	021a      	lsls	r2, r3, #8
 800c5dc:	68fb      	ldr	r3, [r7, #12]
 800c5de:	681b      	ldr	r3, [r3, #0]
 800c5e0:	430a      	orrs	r2, r1
 800c5e2:	655a      	str	r2, [r3, #84]	; 0x54
      break;
 800c5e4:	e002      	b.n	800c5ec <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 800c5e6:	2301      	movs	r3, #1
 800c5e8:	75fb      	strb	r3, [r7, #23]
      break;
 800c5ea:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800c5ec:	68fb      	ldr	r3, [r7, #12]
 800c5ee:	2200      	movs	r2, #0
 800c5f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 800c5f4:	7dfb      	ldrb	r3, [r7, #23]
}
 800c5f6:	4618      	mov	r0, r3
 800c5f8:	3718      	adds	r7, #24
 800c5fa:	46bd      	mov	sp, r7
 800c5fc:	bd80      	pop	{r7, pc}
 800c5fe:	bf00      	nop

0800c600 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 800c600:	b480      	push	{r7}
 800c602:	b085      	sub	sp, #20
 800c604:	af00      	add	r7, sp, #0
 800c606:	6078      	str	r0, [r7, #4]
 800c608:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	681b      	ldr	r3, [r3, #0]
 800c60e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c610:	687b      	ldr	r3, [r7, #4]
 800c612:	4a40      	ldr	r2, [pc, #256]	; (800c714 <TIM_Base_SetConfig+0x114>)
 800c614:	4293      	cmp	r3, r2
 800c616:	d013      	beq.n	800c640 <TIM_Base_SetConfig+0x40>
 800c618:	687b      	ldr	r3, [r7, #4]
 800c61a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c61e:	d00f      	beq.n	800c640 <TIM_Base_SetConfig+0x40>
 800c620:	687b      	ldr	r3, [r7, #4]
 800c622:	4a3d      	ldr	r2, [pc, #244]	; (800c718 <TIM_Base_SetConfig+0x118>)
 800c624:	4293      	cmp	r3, r2
 800c626:	d00b      	beq.n	800c640 <TIM_Base_SetConfig+0x40>
 800c628:	687b      	ldr	r3, [r7, #4]
 800c62a:	4a3c      	ldr	r2, [pc, #240]	; (800c71c <TIM_Base_SetConfig+0x11c>)
 800c62c:	4293      	cmp	r3, r2
 800c62e:	d007      	beq.n	800c640 <TIM_Base_SetConfig+0x40>
 800c630:	687b      	ldr	r3, [r7, #4]
 800c632:	4a3b      	ldr	r2, [pc, #236]	; (800c720 <TIM_Base_SetConfig+0x120>)
 800c634:	4293      	cmp	r3, r2
 800c636:	d003      	beq.n	800c640 <TIM_Base_SetConfig+0x40>
 800c638:	687b      	ldr	r3, [r7, #4]
 800c63a:	4a3a      	ldr	r2, [pc, #232]	; (800c724 <TIM_Base_SetConfig+0x124>)
 800c63c:	4293      	cmp	r3, r2
 800c63e:	d108      	bne.n	800c652 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c640:	68fb      	ldr	r3, [r7, #12]
 800c642:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800c646:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800c648:	683b      	ldr	r3, [r7, #0]
 800c64a:	685b      	ldr	r3, [r3, #4]
 800c64c:	68fa      	ldr	r2, [r7, #12]
 800c64e:	4313      	orrs	r3, r2
 800c650:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c652:	687b      	ldr	r3, [r7, #4]
 800c654:	4a2f      	ldr	r2, [pc, #188]	; (800c714 <TIM_Base_SetConfig+0x114>)
 800c656:	4293      	cmp	r3, r2
 800c658:	d01f      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c65a:	687b      	ldr	r3, [r7, #4]
 800c65c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c660:	d01b      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	4a2c      	ldr	r2, [pc, #176]	; (800c718 <TIM_Base_SetConfig+0x118>)
 800c666:	4293      	cmp	r3, r2
 800c668:	d017      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c66a:	687b      	ldr	r3, [r7, #4]
 800c66c:	4a2b      	ldr	r2, [pc, #172]	; (800c71c <TIM_Base_SetConfig+0x11c>)
 800c66e:	4293      	cmp	r3, r2
 800c670:	d013      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c672:	687b      	ldr	r3, [r7, #4]
 800c674:	4a2a      	ldr	r2, [pc, #168]	; (800c720 <TIM_Base_SetConfig+0x120>)
 800c676:	4293      	cmp	r3, r2
 800c678:	d00f      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c67a:	687b      	ldr	r3, [r7, #4]
 800c67c:	4a29      	ldr	r2, [pc, #164]	; (800c724 <TIM_Base_SetConfig+0x124>)
 800c67e:	4293      	cmp	r3, r2
 800c680:	d00b      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	4a28      	ldr	r2, [pc, #160]	; (800c728 <TIM_Base_SetConfig+0x128>)
 800c686:	4293      	cmp	r3, r2
 800c688:	d007      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c68a:	687b      	ldr	r3, [r7, #4]
 800c68c:	4a27      	ldr	r2, [pc, #156]	; (800c72c <TIM_Base_SetConfig+0x12c>)
 800c68e:	4293      	cmp	r3, r2
 800c690:	d003      	beq.n	800c69a <TIM_Base_SetConfig+0x9a>
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	4a26      	ldr	r2, [pc, #152]	; (800c730 <TIM_Base_SetConfig+0x130>)
 800c696:	4293      	cmp	r3, r2
 800c698:	d108      	bne.n	800c6ac <TIM_Base_SetConfig+0xac>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800c69a:	68fb      	ldr	r3, [r7, #12]
 800c69c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c6a0:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c6a2:	683b      	ldr	r3, [r7, #0]
 800c6a4:	68db      	ldr	r3, [r3, #12]
 800c6a6:	68fa      	ldr	r2, [r7, #12]
 800c6a8:	4313      	orrs	r3, r2
 800c6aa:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c6ac:	68fb      	ldr	r3, [r7, #12]
 800c6ae:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800c6b2:	683b      	ldr	r3, [r7, #0]
 800c6b4:	695b      	ldr	r3, [r3, #20]
 800c6b6:	4313      	orrs	r3, r2
 800c6b8:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800c6ba:	687b      	ldr	r3, [r7, #4]
 800c6bc:	68fa      	ldr	r2, [r7, #12]
 800c6be:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c6c0:	683b      	ldr	r3, [r7, #0]
 800c6c2:	689a      	ldr	r2, [r3, #8]
 800c6c4:	687b      	ldr	r3, [r7, #4]
 800c6c6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c6c8:	683b      	ldr	r3, [r7, #0]
 800c6ca:	681a      	ldr	r2, [r3, #0]
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	4a10      	ldr	r2, [pc, #64]	; (800c714 <TIM_Base_SetConfig+0x114>)
 800c6d4:	4293      	cmp	r3, r2
 800c6d6:	d00f      	beq.n	800c6f8 <TIM_Base_SetConfig+0xf8>
 800c6d8:	687b      	ldr	r3, [r7, #4]
 800c6da:	4a12      	ldr	r2, [pc, #72]	; (800c724 <TIM_Base_SetConfig+0x124>)
 800c6dc:	4293      	cmp	r3, r2
 800c6de:	d00b      	beq.n	800c6f8 <TIM_Base_SetConfig+0xf8>
 800c6e0:	687b      	ldr	r3, [r7, #4]
 800c6e2:	4a11      	ldr	r2, [pc, #68]	; (800c728 <TIM_Base_SetConfig+0x128>)
 800c6e4:	4293      	cmp	r3, r2
 800c6e6:	d007      	beq.n	800c6f8 <TIM_Base_SetConfig+0xf8>
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	4a10      	ldr	r2, [pc, #64]	; (800c72c <TIM_Base_SetConfig+0x12c>)
 800c6ec:	4293      	cmp	r3, r2
 800c6ee:	d003      	beq.n	800c6f8 <TIM_Base_SetConfig+0xf8>
 800c6f0:	687b      	ldr	r3, [r7, #4]
 800c6f2:	4a0f      	ldr	r2, [pc, #60]	; (800c730 <TIM_Base_SetConfig+0x130>)
 800c6f4:	4293      	cmp	r3, r2
 800c6f6:	d103      	bne.n	800c700 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800c6f8:	683b      	ldr	r3, [r7, #0]
 800c6fa:	691a      	ldr	r2, [r3, #16]
 800c6fc:	687b      	ldr	r3, [r7, #4]
 800c6fe:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c700:	687b      	ldr	r3, [r7, #4]
 800c702:	2201      	movs	r2, #1
 800c704:	615a      	str	r2, [r3, #20]
}
 800c706:	bf00      	nop
 800c708:	3714      	adds	r7, #20
 800c70a:	46bd      	mov	sp, r7
 800c70c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c710:	4770      	bx	lr
 800c712:	bf00      	nop
 800c714:	40010000 	.word	0x40010000
 800c718:	40000400 	.word	0x40000400
 800c71c:	40000800 	.word	0x40000800
 800c720:	40000c00 	.word	0x40000c00
 800c724:	40010400 	.word	0x40010400
 800c728:	40014000 	.word	0x40014000
 800c72c:	40014400 	.word	0x40014400
 800c730:	40014800 	.word	0x40014800

0800c734 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800c734:	b480      	push	{r7}
 800c736:	b087      	sub	sp, #28
 800c738:	af00      	add	r7, sp, #0
 800c73a:	6078      	str	r0, [r7, #4]
 800c73c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c73e:	687b      	ldr	r3, [r7, #4]
 800c740:	6a1b      	ldr	r3, [r3, #32]
 800c742:	f023 0201 	bic.w	r2, r3, #1
 800c746:	687b      	ldr	r3, [r7, #4]
 800c748:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800c74a:	687b      	ldr	r3, [r7, #4]
 800c74c:	6a1b      	ldr	r3, [r3, #32]
 800c74e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800c750:	687b      	ldr	r3, [r7, #4]
 800c752:	685b      	ldr	r3, [r3, #4]
 800c754:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	699b      	ldr	r3, [r3, #24]
 800c75a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 800c75c:	68fa      	ldr	r2, [r7, #12]
 800c75e:	4b37      	ldr	r3, [pc, #220]	; (800c83c <TIM_OC1_SetConfig+0x108>)
 800c760:	4013      	ands	r3, r2
 800c762:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800c764:	68fb      	ldr	r3, [r7, #12]
 800c766:	f023 0303 	bic.w	r3, r3, #3
 800c76a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800c76c:	683b      	ldr	r3, [r7, #0]
 800c76e:	681b      	ldr	r3, [r3, #0]
 800c770:	68fa      	ldr	r2, [r7, #12]
 800c772:	4313      	orrs	r3, r2
 800c774:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800c776:	697b      	ldr	r3, [r7, #20]
 800c778:	f023 0302 	bic.w	r3, r3, #2
 800c77c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800c77e:	683b      	ldr	r3, [r7, #0]
 800c780:	689b      	ldr	r3, [r3, #8]
 800c782:	697a      	ldr	r2, [r7, #20]
 800c784:	4313      	orrs	r3, r2
 800c786:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800c788:	687b      	ldr	r3, [r7, #4]
 800c78a:	4a2d      	ldr	r2, [pc, #180]	; (800c840 <TIM_OC1_SetConfig+0x10c>)
 800c78c:	4293      	cmp	r3, r2
 800c78e:	d00f      	beq.n	800c7b0 <TIM_OC1_SetConfig+0x7c>
 800c790:	687b      	ldr	r3, [r7, #4]
 800c792:	4a2c      	ldr	r2, [pc, #176]	; (800c844 <TIM_OC1_SetConfig+0x110>)
 800c794:	4293      	cmp	r3, r2
 800c796:	d00b      	beq.n	800c7b0 <TIM_OC1_SetConfig+0x7c>
 800c798:	687b      	ldr	r3, [r7, #4]
 800c79a:	4a2b      	ldr	r2, [pc, #172]	; (800c848 <TIM_OC1_SetConfig+0x114>)
 800c79c:	4293      	cmp	r3, r2
 800c79e:	d007      	beq.n	800c7b0 <TIM_OC1_SetConfig+0x7c>
 800c7a0:	687b      	ldr	r3, [r7, #4]
 800c7a2:	4a2a      	ldr	r2, [pc, #168]	; (800c84c <TIM_OC1_SetConfig+0x118>)
 800c7a4:	4293      	cmp	r3, r2
 800c7a6:	d003      	beq.n	800c7b0 <TIM_OC1_SetConfig+0x7c>
 800c7a8:	687b      	ldr	r3, [r7, #4]
 800c7aa:	4a29      	ldr	r2, [pc, #164]	; (800c850 <TIM_OC1_SetConfig+0x11c>)
 800c7ac:	4293      	cmp	r3, r2
 800c7ae:	d10c      	bne.n	800c7ca <TIM_OC1_SetConfig+0x96>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800c7b0:	697b      	ldr	r3, [r7, #20]
 800c7b2:	f023 0308 	bic.w	r3, r3, #8
 800c7b6:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800c7b8:	683b      	ldr	r3, [r7, #0]
 800c7ba:	68db      	ldr	r3, [r3, #12]
 800c7bc:	697a      	ldr	r2, [r7, #20]
 800c7be:	4313      	orrs	r3, r2
 800c7c0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800c7c2:	697b      	ldr	r3, [r7, #20]
 800c7c4:	f023 0304 	bic.w	r3, r3, #4
 800c7c8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800c7ca:	687b      	ldr	r3, [r7, #4]
 800c7cc:	4a1c      	ldr	r2, [pc, #112]	; (800c840 <TIM_OC1_SetConfig+0x10c>)
 800c7ce:	4293      	cmp	r3, r2
 800c7d0:	d00f      	beq.n	800c7f2 <TIM_OC1_SetConfig+0xbe>
 800c7d2:	687b      	ldr	r3, [r7, #4]
 800c7d4:	4a1b      	ldr	r2, [pc, #108]	; (800c844 <TIM_OC1_SetConfig+0x110>)
 800c7d6:	4293      	cmp	r3, r2
 800c7d8:	d00b      	beq.n	800c7f2 <TIM_OC1_SetConfig+0xbe>
 800c7da:	687b      	ldr	r3, [r7, #4]
 800c7dc:	4a1a      	ldr	r2, [pc, #104]	; (800c848 <TIM_OC1_SetConfig+0x114>)
 800c7de:	4293      	cmp	r3, r2
 800c7e0:	d007      	beq.n	800c7f2 <TIM_OC1_SetConfig+0xbe>
 800c7e2:	687b      	ldr	r3, [r7, #4]
 800c7e4:	4a19      	ldr	r2, [pc, #100]	; (800c84c <TIM_OC1_SetConfig+0x118>)
 800c7e6:	4293      	cmp	r3, r2
 800c7e8:	d003      	beq.n	800c7f2 <TIM_OC1_SetConfig+0xbe>
 800c7ea:	687b      	ldr	r3, [r7, #4]
 800c7ec:	4a18      	ldr	r2, [pc, #96]	; (800c850 <TIM_OC1_SetConfig+0x11c>)
 800c7ee:	4293      	cmp	r3, r2
 800c7f0:	d111      	bne.n	800c816 <TIM_OC1_SetConfig+0xe2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800c7f2:	693b      	ldr	r3, [r7, #16]
 800c7f4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c7f8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800c7fa:	693b      	ldr	r3, [r7, #16]
 800c7fc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800c800:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800c802:	683b      	ldr	r3, [r7, #0]
 800c804:	695b      	ldr	r3, [r3, #20]
 800c806:	693a      	ldr	r2, [r7, #16]
 800c808:	4313      	orrs	r3, r2
 800c80a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800c80c:	683b      	ldr	r3, [r7, #0]
 800c80e:	699b      	ldr	r3, [r3, #24]
 800c810:	693a      	ldr	r2, [r7, #16]
 800c812:	4313      	orrs	r3, r2
 800c814:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	693a      	ldr	r2, [r7, #16]
 800c81a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800c81c:	687b      	ldr	r3, [r7, #4]
 800c81e:	68fa      	ldr	r2, [r7, #12]
 800c820:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800c822:	683b      	ldr	r3, [r7, #0]
 800c824:	685a      	ldr	r2, [r3, #4]
 800c826:	687b      	ldr	r3, [r7, #4]
 800c828:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	697a      	ldr	r2, [r7, #20]
 800c82e:	621a      	str	r2, [r3, #32]
}
 800c830:	bf00      	nop
 800c832:	371c      	adds	r7, #28
 800c834:	46bd      	mov	sp, r7
 800c836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c83a:	4770      	bx	lr
 800c83c:	fffeff8f 	.word	0xfffeff8f
 800c840:	40010000 	.word	0x40010000
 800c844:	40010400 	.word	0x40010400
 800c848:	40014000 	.word	0x40014000
 800c84c:	40014400 	.word	0x40014400
 800c850:	40014800 	.word	0x40014800

0800c854 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800c854:	b480      	push	{r7}
 800c856:	b087      	sub	sp, #28
 800c858:	af00      	add	r7, sp, #0
 800c85a:	6078      	str	r0, [r7, #4]
 800c85c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c85e:	687b      	ldr	r3, [r7, #4]
 800c860:	6a1b      	ldr	r3, [r3, #32]
 800c862:	f023 0210 	bic.w	r2, r3, #16
 800c866:	687b      	ldr	r3, [r7, #4]
 800c868:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800c86a:	687b      	ldr	r3, [r7, #4]
 800c86c:	6a1b      	ldr	r3, [r3, #32]
 800c86e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800c870:	687b      	ldr	r3, [r7, #4]
 800c872:	685b      	ldr	r3, [r3, #4]
 800c874:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800c876:	687b      	ldr	r3, [r7, #4]
 800c878:	699b      	ldr	r3, [r3, #24]
 800c87a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 800c87c:	68fa      	ldr	r2, [r7, #12]
 800c87e:	4b34      	ldr	r3, [pc, #208]	; (800c950 <TIM_OC2_SetConfig+0xfc>)
 800c880:	4013      	ands	r3, r2
 800c882:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800c884:	68fb      	ldr	r3, [r7, #12]
 800c886:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c88a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800c88c:	683b      	ldr	r3, [r7, #0]
 800c88e:	681b      	ldr	r3, [r3, #0]
 800c890:	021b      	lsls	r3, r3, #8
 800c892:	68fa      	ldr	r2, [r7, #12]
 800c894:	4313      	orrs	r3, r2
 800c896:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800c898:	697b      	ldr	r3, [r7, #20]
 800c89a:	f023 0320 	bic.w	r3, r3, #32
 800c89e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800c8a0:	683b      	ldr	r3, [r7, #0]
 800c8a2:	689b      	ldr	r3, [r3, #8]
 800c8a4:	011b      	lsls	r3, r3, #4
 800c8a6:	697a      	ldr	r2, [r7, #20]
 800c8a8:	4313      	orrs	r3, r2
 800c8aa:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800c8ac:	687b      	ldr	r3, [r7, #4]
 800c8ae:	4a29      	ldr	r2, [pc, #164]	; (800c954 <TIM_OC2_SetConfig+0x100>)
 800c8b0:	4293      	cmp	r3, r2
 800c8b2:	d003      	beq.n	800c8bc <TIM_OC2_SetConfig+0x68>
 800c8b4:	687b      	ldr	r3, [r7, #4]
 800c8b6:	4a28      	ldr	r2, [pc, #160]	; (800c958 <TIM_OC2_SetConfig+0x104>)
 800c8b8:	4293      	cmp	r3, r2
 800c8ba:	d10d      	bne.n	800c8d8 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800c8bc:	697b      	ldr	r3, [r7, #20]
 800c8be:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c8c2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800c8c4:	683b      	ldr	r3, [r7, #0]
 800c8c6:	68db      	ldr	r3, [r3, #12]
 800c8c8:	011b      	lsls	r3, r3, #4
 800c8ca:	697a      	ldr	r2, [r7, #20]
 800c8cc:	4313      	orrs	r3, r2
 800c8ce:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800c8d0:	697b      	ldr	r3, [r7, #20]
 800c8d2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c8d6:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800c8d8:	687b      	ldr	r3, [r7, #4]
 800c8da:	4a1e      	ldr	r2, [pc, #120]	; (800c954 <TIM_OC2_SetConfig+0x100>)
 800c8dc:	4293      	cmp	r3, r2
 800c8de:	d00f      	beq.n	800c900 <TIM_OC2_SetConfig+0xac>
 800c8e0:	687b      	ldr	r3, [r7, #4]
 800c8e2:	4a1d      	ldr	r2, [pc, #116]	; (800c958 <TIM_OC2_SetConfig+0x104>)
 800c8e4:	4293      	cmp	r3, r2
 800c8e6:	d00b      	beq.n	800c900 <TIM_OC2_SetConfig+0xac>
 800c8e8:	687b      	ldr	r3, [r7, #4]
 800c8ea:	4a1c      	ldr	r2, [pc, #112]	; (800c95c <TIM_OC2_SetConfig+0x108>)
 800c8ec:	4293      	cmp	r3, r2
 800c8ee:	d007      	beq.n	800c900 <TIM_OC2_SetConfig+0xac>
 800c8f0:	687b      	ldr	r3, [r7, #4]
 800c8f2:	4a1b      	ldr	r2, [pc, #108]	; (800c960 <TIM_OC2_SetConfig+0x10c>)
 800c8f4:	4293      	cmp	r3, r2
 800c8f6:	d003      	beq.n	800c900 <TIM_OC2_SetConfig+0xac>
 800c8f8:	687b      	ldr	r3, [r7, #4]
 800c8fa:	4a1a      	ldr	r2, [pc, #104]	; (800c964 <TIM_OC2_SetConfig+0x110>)
 800c8fc:	4293      	cmp	r3, r2
 800c8fe:	d113      	bne.n	800c928 <TIM_OC2_SetConfig+0xd4>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 800c900:	693b      	ldr	r3, [r7, #16]
 800c902:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c906:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800c908:	693b      	ldr	r3, [r7, #16]
 800c90a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c90e:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800c910:	683b      	ldr	r3, [r7, #0]
 800c912:	695b      	ldr	r3, [r3, #20]
 800c914:	009b      	lsls	r3, r3, #2
 800c916:	693a      	ldr	r2, [r7, #16]
 800c918:	4313      	orrs	r3, r2
 800c91a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800c91c:	683b      	ldr	r3, [r7, #0]
 800c91e:	699b      	ldr	r3, [r3, #24]
 800c920:	009b      	lsls	r3, r3, #2
 800c922:	693a      	ldr	r2, [r7, #16]
 800c924:	4313      	orrs	r3, r2
 800c926:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800c928:	687b      	ldr	r3, [r7, #4]
 800c92a:	693a      	ldr	r2, [r7, #16]
 800c92c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800c92e:	687b      	ldr	r3, [r7, #4]
 800c930:	68fa      	ldr	r2, [r7, #12]
 800c932:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800c934:	683b      	ldr	r3, [r7, #0]
 800c936:	685a      	ldr	r2, [r3, #4]
 800c938:	687b      	ldr	r3, [r7, #4]
 800c93a:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800c93c:	687b      	ldr	r3, [r7, #4]
 800c93e:	697a      	ldr	r2, [r7, #20]
 800c940:	621a      	str	r2, [r3, #32]
}
 800c942:	bf00      	nop
 800c944:	371c      	adds	r7, #28
 800c946:	46bd      	mov	sp, r7
 800c948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c94c:	4770      	bx	lr
 800c94e:	bf00      	nop
 800c950:	feff8fff 	.word	0xfeff8fff
 800c954:	40010000 	.word	0x40010000
 800c958:	40010400 	.word	0x40010400
 800c95c:	40014000 	.word	0x40014000
 800c960:	40014400 	.word	0x40014400
 800c964:	40014800 	.word	0x40014800

0800c968 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800c968:	b480      	push	{r7}
 800c96a:	b087      	sub	sp, #28
 800c96c:	af00      	add	r7, sp, #0
 800c96e:	6078      	str	r0, [r7, #4]
 800c970:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800c972:	687b      	ldr	r3, [r7, #4]
 800c974:	6a1b      	ldr	r3, [r3, #32]
 800c976:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800c97a:	687b      	ldr	r3, [r7, #4]
 800c97c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800c97e:	687b      	ldr	r3, [r7, #4]
 800c980:	6a1b      	ldr	r3, [r3, #32]
 800c982:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800c984:	687b      	ldr	r3, [r7, #4]
 800c986:	685b      	ldr	r3, [r3, #4]
 800c988:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800c98a:	687b      	ldr	r3, [r7, #4]
 800c98c:	69db      	ldr	r3, [r3, #28]
 800c98e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800c990:	68fa      	ldr	r2, [r7, #12]
 800c992:	4b33      	ldr	r3, [pc, #204]	; (800ca60 <TIM_OC3_SetConfig+0xf8>)
 800c994:	4013      	ands	r3, r2
 800c996:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800c998:	68fb      	ldr	r3, [r7, #12]
 800c99a:	f023 0303 	bic.w	r3, r3, #3
 800c99e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800c9a0:	683b      	ldr	r3, [r7, #0]
 800c9a2:	681b      	ldr	r3, [r3, #0]
 800c9a4:	68fa      	ldr	r2, [r7, #12]
 800c9a6:	4313      	orrs	r3, r2
 800c9a8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800c9aa:	697b      	ldr	r3, [r7, #20]
 800c9ac:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800c9b0:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800c9b2:	683b      	ldr	r3, [r7, #0]
 800c9b4:	689b      	ldr	r3, [r3, #8]
 800c9b6:	021b      	lsls	r3, r3, #8
 800c9b8:	697a      	ldr	r2, [r7, #20]
 800c9ba:	4313      	orrs	r3, r2
 800c9bc:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	4a28      	ldr	r2, [pc, #160]	; (800ca64 <TIM_OC3_SetConfig+0xfc>)
 800c9c2:	4293      	cmp	r3, r2
 800c9c4:	d003      	beq.n	800c9ce <TIM_OC3_SetConfig+0x66>
 800c9c6:	687b      	ldr	r3, [r7, #4]
 800c9c8:	4a27      	ldr	r2, [pc, #156]	; (800ca68 <TIM_OC3_SetConfig+0x100>)
 800c9ca:	4293      	cmp	r3, r2
 800c9cc:	d10d      	bne.n	800c9ea <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800c9ce:	697b      	ldr	r3, [r7, #20]
 800c9d0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c9d4:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800c9d6:	683b      	ldr	r3, [r7, #0]
 800c9d8:	68db      	ldr	r3, [r3, #12]
 800c9da:	021b      	lsls	r3, r3, #8
 800c9dc:	697a      	ldr	r2, [r7, #20]
 800c9de:	4313      	orrs	r3, r2
 800c9e0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800c9e2:	697b      	ldr	r3, [r7, #20]
 800c9e4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c9e8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800c9ea:	687b      	ldr	r3, [r7, #4]
 800c9ec:	4a1d      	ldr	r2, [pc, #116]	; (800ca64 <TIM_OC3_SetConfig+0xfc>)
 800c9ee:	4293      	cmp	r3, r2
 800c9f0:	d00f      	beq.n	800ca12 <TIM_OC3_SetConfig+0xaa>
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	4a1c      	ldr	r2, [pc, #112]	; (800ca68 <TIM_OC3_SetConfig+0x100>)
 800c9f6:	4293      	cmp	r3, r2
 800c9f8:	d00b      	beq.n	800ca12 <TIM_OC3_SetConfig+0xaa>
 800c9fa:	687b      	ldr	r3, [r7, #4]
 800c9fc:	4a1b      	ldr	r2, [pc, #108]	; (800ca6c <TIM_OC3_SetConfig+0x104>)
 800c9fe:	4293      	cmp	r3, r2
 800ca00:	d007      	beq.n	800ca12 <TIM_OC3_SetConfig+0xaa>
 800ca02:	687b      	ldr	r3, [r7, #4]
 800ca04:	4a1a      	ldr	r2, [pc, #104]	; (800ca70 <TIM_OC3_SetConfig+0x108>)
 800ca06:	4293      	cmp	r3, r2
 800ca08:	d003      	beq.n	800ca12 <TIM_OC3_SetConfig+0xaa>
 800ca0a:	687b      	ldr	r3, [r7, #4]
 800ca0c:	4a19      	ldr	r2, [pc, #100]	; (800ca74 <TIM_OC3_SetConfig+0x10c>)
 800ca0e:	4293      	cmp	r3, r2
 800ca10:	d113      	bne.n	800ca3a <TIM_OC3_SetConfig+0xd2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800ca12:	693b      	ldr	r3, [r7, #16]
 800ca14:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ca18:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800ca1a:	693b      	ldr	r3, [r7, #16]
 800ca1c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800ca20:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800ca22:	683b      	ldr	r3, [r7, #0]
 800ca24:	695b      	ldr	r3, [r3, #20]
 800ca26:	011b      	lsls	r3, r3, #4
 800ca28:	693a      	ldr	r2, [r7, #16]
 800ca2a:	4313      	orrs	r3, r2
 800ca2c:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800ca2e:	683b      	ldr	r3, [r7, #0]
 800ca30:	699b      	ldr	r3, [r3, #24]
 800ca32:	011b      	lsls	r3, r3, #4
 800ca34:	693a      	ldr	r2, [r7, #16]
 800ca36:	4313      	orrs	r3, r2
 800ca38:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800ca3a:	687b      	ldr	r3, [r7, #4]
 800ca3c:	693a      	ldr	r2, [r7, #16]
 800ca3e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800ca40:	687b      	ldr	r3, [r7, #4]
 800ca42:	68fa      	ldr	r2, [r7, #12]
 800ca44:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800ca46:	683b      	ldr	r3, [r7, #0]
 800ca48:	685a      	ldr	r2, [r3, #4]
 800ca4a:	687b      	ldr	r3, [r7, #4]
 800ca4c:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800ca4e:	687b      	ldr	r3, [r7, #4]
 800ca50:	697a      	ldr	r2, [r7, #20]
 800ca52:	621a      	str	r2, [r3, #32]
}
 800ca54:	bf00      	nop
 800ca56:	371c      	adds	r7, #28
 800ca58:	46bd      	mov	sp, r7
 800ca5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca5e:	4770      	bx	lr
 800ca60:	fffeff8f 	.word	0xfffeff8f
 800ca64:	40010000 	.word	0x40010000
 800ca68:	40010400 	.word	0x40010400
 800ca6c:	40014000 	.word	0x40014000
 800ca70:	40014400 	.word	0x40014400
 800ca74:	40014800 	.word	0x40014800

0800ca78 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800ca78:	b480      	push	{r7}
 800ca7a:	b087      	sub	sp, #28
 800ca7c:	af00      	add	r7, sp, #0
 800ca7e:	6078      	str	r0, [r7, #4]
 800ca80:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800ca82:	687b      	ldr	r3, [r7, #4]
 800ca84:	6a1b      	ldr	r3, [r3, #32]
 800ca86:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800ca8a:	687b      	ldr	r3, [r7, #4]
 800ca8c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800ca8e:	687b      	ldr	r3, [r7, #4]
 800ca90:	6a1b      	ldr	r3, [r3, #32]
 800ca92:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800ca94:	687b      	ldr	r3, [r7, #4]
 800ca96:	685b      	ldr	r3, [r3, #4]
 800ca98:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800ca9a:	687b      	ldr	r3, [r7, #4]
 800ca9c:	69db      	ldr	r3, [r3, #28]
 800ca9e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 800caa0:	68fa      	ldr	r2, [r7, #12]
 800caa2:	4b24      	ldr	r3, [pc, #144]	; (800cb34 <TIM_OC4_SetConfig+0xbc>)
 800caa4:	4013      	ands	r3, r2
 800caa6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800caa8:	68fb      	ldr	r3, [r7, #12]
 800caaa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800caae:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800cab0:	683b      	ldr	r3, [r7, #0]
 800cab2:	681b      	ldr	r3, [r3, #0]
 800cab4:	021b      	lsls	r3, r3, #8
 800cab6:	68fa      	ldr	r2, [r7, #12]
 800cab8:	4313      	orrs	r3, r2
 800caba:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800cabc:	693b      	ldr	r3, [r7, #16]
 800cabe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800cac2:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800cac4:	683b      	ldr	r3, [r7, #0]
 800cac6:	689b      	ldr	r3, [r3, #8]
 800cac8:	031b      	lsls	r3, r3, #12
 800caca:	693a      	ldr	r2, [r7, #16]
 800cacc:	4313      	orrs	r3, r2
 800cace:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	4a19      	ldr	r2, [pc, #100]	; (800cb38 <TIM_OC4_SetConfig+0xc0>)
 800cad4:	4293      	cmp	r3, r2
 800cad6:	d00f      	beq.n	800caf8 <TIM_OC4_SetConfig+0x80>
 800cad8:	687b      	ldr	r3, [r7, #4]
 800cada:	4a18      	ldr	r2, [pc, #96]	; (800cb3c <TIM_OC4_SetConfig+0xc4>)
 800cadc:	4293      	cmp	r3, r2
 800cade:	d00b      	beq.n	800caf8 <TIM_OC4_SetConfig+0x80>
 800cae0:	687b      	ldr	r3, [r7, #4]
 800cae2:	4a17      	ldr	r2, [pc, #92]	; (800cb40 <TIM_OC4_SetConfig+0xc8>)
 800cae4:	4293      	cmp	r3, r2
 800cae6:	d007      	beq.n	800caf8 <TIM_OC4_SetConfig+0x80>
 800cae8:	687b      	ldr	r3, [r7, #4]
 800caea:	4a16      	ldr	r2, [pc, #88]	; (800cb44 <TIM_OC4_SetConfig+0xcc>)
 800caec:	4293      	cmp	r3, r2
 800caee:	d003      	beq.n	800caf8 <TIM_OC4_SetConfig+0x80>
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	4a15      	ldr	r2, [pc, #84]	; (800cb48 <TIM_OC4_SetConfig+0xd0>)
 800caf4:	4293      	cmp	r3, r2
 800caf6:	d109      	bne.n	800cb0c <TIM_OC4_SetConfig+0x94>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 800caf8:	697b      	ldr	r3, [r7, #20]
 800cafa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800cafe:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800cb00:	683b      	ldr	r3, [r7, #0]
 800cb02:	695b      	ldr	r3, [r3, #20]
 800cb04:	019b      	lsls	r3, r3, #6
 800cb06:	697a      	ldr	r2, [r7, #20]
 800cb08:	4313      	orrs	r3, r2
 800cb0a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800cb0c:	687b      	ldr	r3, [r7, #4]
 800cb0e:	697a      	ldr	r2, [r7, #20]
 800cb10:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800cb12:	687b      	ldr	r3, [r7, #4]
 800cb14:	68fa      	ldr	r2, [r7, #12]
 800cb16:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800cb18:	683b      	ldr	r3, [r7, #0]
 800cb1a:	685a      	ldr	r2, [r3, #4]
 800cb1c:	687b      	ldr	r3, [r7, #4]
 800cb1e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800cb20:	687b      	ldr	r3, [r7, #4]
 800cb22:	693a      	ldr	r2, [r7, #16]
 800cb24:	621a      	str	r2, [r3, #32]
}
 800cb26:	bf00      	nop
 800cb28:	371c      	adds	r7, #28
 800cb2a:	46bd      	mov	sp, r7
 800cb2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb30:	4770      	bx	lr
 800cb32:	bf00      	nop
 800cb34:	feff8fff 	.word	0xfeff8fff
 800cb38:	40010000 	.word	0x40010000
 800cb3c:	40010400 	.word	0x40010400
 800cb40:	40014000 	.word	0x40014000
 800cb44:	40014400 	.word	0x40014400
 800cb48:	40014800 	.word	0x40014800

0800cb4c <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 800cb4c:	b480      	push	{r7}
 800cb4e:	b087      	sub	sp, #28
 800cb50:	af00      	add	r7, sp, #0
 800cb52:	6078      	str	r0, [r7, #4]
 800cb54:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	6a1b      	ldr	r3, [r3, #32]
 800cb5a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800cb5e:	687b      	ldr	r3, [r7, #4]
 800cb60:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800cb62:	687b      	ldr	r3, [r7, #4]
 800cb64:	6a1b      	ldr	r3, [r3, #32]
 800cb66:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800cb68:	687b      	ldr	r3, [r7, #4]
 800cb6a:	685b      	ldr	r3, [r3, #4]
 800cb6c:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800cb72:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 800cb74:	68fa      	ldr	r2, [r7, #12]
 800cb76:	4b21      	ldr	r3, [pc, #132]	; (800cbfc <TIM_OC5_SetConfig+0xb0>)
 800cb78:	4013      	ands	r3, r2
 800cb7a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800cb7c:	683b      	ldr	r3, [r7, #0]
 800cb7e:	681b      	ldr	r3, [r3, #0]
 800cb80:	68fa      	ldr	r2, [r7, #12]
 800cb82:	4313      	orrs	r3, r2
 800cb84:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 800cb86:	693b      	ldr	r3, [r7, #16]
 800cb88:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800cb8c:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 800cb8e:	683b      	ldr	r3, [r7, #0]
 800cb90:	689b      	ldr	r3, [r3, #8]
 800cb92:	041b      	lsls	r3, r3, #16
 800cb94:	693a      	ldr	r2, [r7, #16]
 800cb96:	4313      	orrs	r3, r2
 800cb98:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	4a18      	ldr	r2, [pc, #96]	; (800cc00 <TIM_OC5_SetConfig+0xb4>)
 800cb9e:	4293      	cmp	r3, r2
 800cba0:	d00f      	beq.n	800cbc2 <TIM_OC5_SetConfig+0x76>
 800cba2:	687b      	ldr	r3, [r7, #4]
 800cba4:	4a17      	ldr	r2, [pc, #92]	; (800cc04 <TIM_OC5_SetConfig+0xb8>)
 800cba6:	4293      	cmp	r3, r2
 800cba8:	d00b      	beq.n	800cbc2 <TIM_OC5_SetConfig+0x76>
 800cbaa:	687b      	ldr	r3, [r7, #4]
 800cbac:	4a16      	ldr	r2, [pc, #88]	; (800cc08 <TIM_OC5_SetConfig+0xbc>)
 800cbae:	4293      	cmp	r3, r2
 800cbb0:	d007      	beq.n	800cbc2 <TIM_OC5_SetConfig+0x76>
 800cbb2:	687b      	ldr	r3, [r7, #4]
 800cbb4:	4a15      	ldr	r2, [pc, #84]	; (800cc0c <TIM_OC5_SetConfig+0xc0>)
 800cbb6:	4293      	cmp	r3, r2
 800cbb8:	d003      	beq.n	800cbc2 <TIM_OC5_SetConfig+0x76>
 800cbba:	687b      	ldr	r3, [r7, #4]
 800cbbc:	4a14      	ldr	r2, [pc, #80]	; (800cc10 <TIM_OC5_SetConfig+0xc4>)
 800cbbe:	4293      	cmp	r3, r2
 800cbc0:	d109      	bne.n	800cbd6 <TIM_OC5_SetConfig+0x8a>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 800cbc2:	697b      	ldr	r3, [r7, #20]
 800cbc4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800cbc8:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 800cbca:	683b      	ldr	r3, [r7, #0]
 800cbcc:	695b      	ldr	r3, [r3, #20]
 800cbce:	021b      	lsls	r3, r3, #8
 800cbd0:	697a      	ldr	r2, [r7, #20]
 800cbd2:	4313      	orrs	r3, r2
 800cbd4:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800cbd6:	687b      	ldr	r3, [r7, #4]
 800cbd8:	697a      	ldr	r2, [r7, #20]
 800cbda:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800cbdc:	687b      	ldr	r3, [r7, #4]
 800cbde:	68fa      	ldr	r2, [r7, #12]
 800cbe0:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 800cbe2:	683b      	ldr	r3, [r7, #0]
 800cbe4:	685a      	ldr	r2, [r3, #4]
 800cbe6:	687b      	ldr	r3, [r7, #4]
 800cbe8:	659a      	str	r2, [r3, #88]	; 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800cbea:	687b      	ldr	r3, [r7, #4]
 800cbec:	693a      	ldr	r2, [r7, #16]
 800cbee:	621a      	str	r2, [r3, #32]
}
 800cbf0:	bf00      	nop
 800cbf2:	371c      	adds	r7, #28
 800cbf4:	46bd      	mov	sp, r7
 800cbf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbfa:	4770      	bx	lr
 800cbfc:	fffeff8f 	.word	0xfffeff8f
 800cc00:	40010000 	.word	0x40010000
 800cc04:	40010400 	.word	0x40010400
 800cc08:	40014000 	.word	0x40014000
 800cc0c:	40014400 	.word	0x40014400
 800cc10:	40014800 	.word	0x40014800

0800cc14 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 800cc14:	b480      	push	{r7}
 800cc16:	b087      	sub	sp, #28
 800cc18:	af00      	add	r7, sp, #0
 800cc1a:	6078      	str	r0, [r7, #4]
 800cc1c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800cc1e:	687b      	ldr	r3, [r7, #4]
 800cc20:	6a1b      	ldr	r3, [r3, #32]
 800cc22:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800cc26:	687b      	ldr	r3, [r7, #4]
 800cc28:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	6a1b      	ldr	r3, [r3, #32]
 800cc2e:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800cc30:	687b      	ldr	r3, [r7, #4]
 800cc32:	685b      	ldr	r3, [r3, #4]
 800cc34:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800cc36:	687b      	ldr	r3, [r7, #4]
 800cc38:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800cc3a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 800cc3c:	68fa      	ldr	r2, [r7, #12]
 800cc3e:	4b22      	ldr	r3, [pc, #136]	; (800ccc8 <TIM_OC6_SetConfig+0xb4>)
 800cc40:	4013      	ands	r3, r2
 800cc42:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800cc44:	683b      	ldr	r3, [r7, #0]
 800cc46:	681b      	ldr	r3, [r3, #0]
 800cc48:	021b      	lsls	r3, r3, #8
 800cc4a:	68fa      	ldr	r2, [r7, #12]
 800cc4c:	4313      	orrs	r3, r2
 800cc4e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 800cc50:	693b      	ldr	r3, [r7, #16]
 800cc52:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800cc56:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 800cc58:	683b      	ldr	r3, [r7, #0]
 800cc5a:	689b      	ldr	r3, [r3, #8]
 800cc5c:	051b      	lsls	r3, r3, #20
 800cc5e:	693a      	ldr	r2, [r7, #16]
 800cc60:	4313      	orrs	r3, r2
 800cc62:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800cc64:	687b      	ldr	r3, [r7, #4]
 800cc66:	4a19      	ldr	r2, [pc, #100]	; (800cccc <TIM_OC6_SetConfig+0xb8>)
 800cc68:	4293      	cmp	r3, r2
 800cc6a:	d00f      	beq.n	800cc8c <TIM_OC6_SetConfig+0x78>
 800cc6c:	687b      	ldr	r3, [r7, #4]
 800cc6e:	4a18      	ldr	r2, [pc, #96]	; (800ccd0 <TIM_OC6_SetConfig+0xbc>)
 800cc70:	4293      	cmp	r3, r2
 800cc72:	d00b      	beq.n	800cc8c <TIM_OC6_SetConfig+0x78>
 800cc74:	687b      	ldr	r3, [r7, #4]
 800cc76:	4a17      	ldr	r2, [pc, #92]	; (800ccd4 <TIM_OC6_SetConfig+0xc0>)
 800cc78:	4293      	cmp	r3, r2
 800cc7a:	d007      	beq.n	800cc8c <TIM_OC6_SetConfig+0x78>
 800cc7c:	687b      	ldr	r3, [r7, #4]
 800cc7e:	4a16      	ldr	r2, [pc, #88]	; (800ccd8 <TIM_OC6_SetConfig+0xc4>)
 800cc80:	4293      	cmp	r3, r2
 800cc82:	d003      	beq.n	800cc8c <TIM_OC6_SetConfig+0x78>
 800cc84:	687b      	ldr	r3, [r7, #4]
 800cc86:	4a15      	ldr	r2, [pc, #84]	; (800ccdc <TIM_OC6_SetConfig+0xc8>)
 800cc88:	4293      	cmp	r3, r2
 800cc8a:	d109      	bne.n	800cca0 <TIM_OC6_SetConfig+0x8c>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 800cc8c:	697b      	ldr	r3, [r7, #20]
 800cc8e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800cc92:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 800cc94:	683b      	ldr	r3, [r7, #0]
 800cc96:	695b      	ldr	r3, [r3, #20]
 800cc98:	029b      	lsls	r3, r3, #10
 800cc9a:	697a      	ldr	r2, [r7, #20]
 800cc9c:	4313      	orrs	r3, r2
 800cc9e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800cca0:	687b      	ldr	r3, [r7, #4]
 800cca2:	697a      	ldr	r2, [r7, #20]
 800cca4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800cca6:	687b      	ldr	r3, [r7, #4]
 800cca8:	68fa      	ldr	r2, [r7, #12]
 800ccaa:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 800ccac:	683b      	ldr	r3, [r7, #0]
 800ccae:	685a      	ldr	r2, [r3, #4]
 800ccb0:	687b      	ldr	r3, [r7, #4]
 800ccb2:	65da      	str	r2, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800ccb4:	687b      	ldr	r3, [r7, #4]
 800ccb6:	693a      	ldr	r2, [r7, #16]
 800ccb8:	621a      	str	r2, [r3, #32]
}
 800ccba:	bf00      	nop
 800ccbc:	371c      	adds	r7, #28
 800ccbe:	46bd      	mov	sp, r7
 800ccc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccc4:	4770      	bx	lr
 800ccc6:	bf00      	nop
 800ccc8:	feff8fff 	.word	0xfeff8fff
 800cccc:	40010000 	.word	0x40010000
 800ccd0:	40010400 	.word	0x40010400
 800ccd4:	40014000 	.word	0x40014000
 800ccd8:	40014400 	.word	0x40014400
 800ccdc:	40014800 	.word	0x40014800

0800cce0 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800cce0:	b480      	push	{r7}
 800cce2:	b087      	sub	sp, #28
 800cce4:	af00      	add	r7, sp, #0
 800cce6:	60f8      	str	r0, [r7, #12]
 800cce8:	60b9      	str	r1, [r7, #8]
 800ccea:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800ccec:	68bb      	ldr	r3, [r7, #8]
 800ccee:	f003 031f 	and.w	r3, r3, #31
 800ccf2:	2201      	movs	r2, #1
 800ccf4:	fa02 f303 	lsl.w	r3, r2, r3
 800ccf8:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800ccfa:	68fb      	ldr	r3, [r7, #12]
 800ccfc:	6a1a      	ldr	r2, [r3, #32]
 800ccfe:	697b      	ldr	r3, [r7, #20]
 800cd00:	43db      	mvns	r3, r3
 800cd02:	401a      	ands	r2, r3
 800cd04:	68fb      	ldr	r3, [r7, #12]
 800cd06:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800cd08:	68fb      	ldr	r3, [r7, #12]
 800cd0a:	6a1a      	ldr	r2, [r3, #32]
 800cd0c:	68bb      	ldr	r3, [r7, #8]
 800cd0e:	f003 031f 	and.w	r3, r3, #31
 800cd12:	6879      	ldr	r1, [r7, #4]
 800cd14:	fa01 f303 	lsl.w	r3, r1, r3
 800cd18:	431a      	orrs	r2, r3
 800cd1a:	68fb      	ldr	r3, [r7, #12]
 800cd1c:	621a      	str	r2, [r3, #32]
}
 800cd1e:	bf00      	nop
 800cd20:	371c      	adds	r7, #28
 800cd22:	46bd      	mov	sp, r7
 800cd24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd28:	4770      	bx	lr
	...

0800cd2c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800cd2c:	b480      	push	{r7}
 800cd2e:	b085      	sub	sp, #20
 800cd30:	af00      	add	r7, sp, #0
 800cd32:	6078      	str	r0, [r7, #4]
 800cd34:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800cd36:	687b      	ldr	r3, [r7, #4]
 800cd38:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800cd3c:	2b01      	cmp	r3, #1
 800cd3e:	d101      	bne.n	800cd44 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800cd40:	2302      	movs	r3, #2
 800cd42:	e06d      	b.n	800ce20 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800cd44:	687b      	ldr	r3, [r7, #4]
 800cd46:	2201      	movs	r2, #1
 800cd48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800cd4c:	687b      	ldr	r3, [r7, #4]
 800cd4e:	2202      	movs	r2, #2
 800cd50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800cd54:	687b      	ldr	r3, [r7, #4]
 800cd56:	681b      	ldr	r3, [r3, #0]
 800cd58:	685b      	ldr	r3, [r3, #4]
 800cd5a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800cd5c:	687b      	ldr	r3, [r7, #4]
 800cd5e:	681b      	ldr	r3, [r3, #0]
 800cd60:	689b      	ldr	r3, [r3, #8]
 800cd62:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800cd64:	687b      	ldr	r3, [r7, #4]
 800cd66:	681b      	ldr	r3, [r3, #0]
 800cd68:	4a30      	ldr	r2, [pc, #192]	; (800ce2c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800cd6a:	4293      	cmp	r3, r2
 800cd6c:	d004      	beq.n	800cd78 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800cd6e:	687b      	ldr	r3, [r7, #4]
 800cd70:	681b      	ldr	r3, [r3, #0]
 800cd72:	4a2f      	ldr	r2, [pc, #188]	; (800ce30 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800cd74:	4293      	cmp	r3, r2
 800cd76:	d108      	bne.n	800cd8a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 800cd78:	68fb      	ldr	r3, [r7, #12]
 800cd7a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800cd7e:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 800cd80:	683b      	ldr	r3, [r7, #0]
 800cd82:	685b      	ldr	r3, [r3, #4]
 800cd84:	68fa      	ldr	r2, [r7, #12]
 800cd86:	4313      	orrs	r3, r2
 800cd88:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800cd8a:	68fb      	ldr	r3, [r7, #12]
 800cd8c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800cd90:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cd92:	683b      	ldr	r3, [r7, #0]
 800cd94:	681b      	ldr	r3, [r3, #0]
 800cd96:	68fa      	ldr	r2, [r7, #12]
 800cd98:	4313      	orrs	r3, r2
 800cd9a:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800cd9c:	687b      	ldr	r3, [r7, #4]
 800cd9e:	681b      	ldr	r3, [r3, #0]
 800cda0:	68fa      	ldr	r2, [r7, #12]
 800cda2:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cda4:	687b      	ldr	r3, [r7, #4]
 800cda6:	681b      	ldr	r3, [r3, #0]
 800cda8:	4a20      	ldr	r2, [pc, #128]	; (800ce2c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800cdaa:	4293      	cmp	r3, r2
 800cdac:	d022      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cdae:	687b      	ldr	r3, [r7, #4]
 800cdb0:	681b      	ldr	r3, [r3, #0]
 800cdb2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cdb6:	d01d      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cdb8:	687b      	ldr	r3, [r7, #4]
 800cdba:	681b      	ldr	r3, [r3, #0]
 800cdbc:	4a1d      	ldr	r2, [pc, #116]	; (800ce34 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800cdbe:	4293      	cmp	r3, r2
 800cdc0:	d018      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cdc2:	687b      	ldr	r3, [r7, #4]
 800cdc4:	681b      	ldr	r3, [r3, #0]
 800cdc6:	4a1c      	ldr	r2, [pc, #112]	; (800ce38 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800cdc8:	4293      	cmp	r3, r2
 800cdca:	d013      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cdcc:	687b      	ldr	r3, [r7, #4]
 800cdce:	681b      	ldr	r3, [r3, #0]
 800cdd0:	4a1a      	ldr	r2, [pc, #104]	; (800ce3c <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800cdd2:	4293      	cmp	r3, r2
 800cdd4:	d00e      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cdd6:	687b      	ldr	r3, [r7, #4]
 800cdd8:	681b      	ldr	r3, [r3, #0]
 800cdda:	4a15      	ldr	r2, [pc, #84]	; (800ce30 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800cddc:	4293      	cmp	r3, r2
 800cdde:	d009      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cde0:	687b      	ldr	r3, [r7, #4]
 800cde2:	681b      	ldr	r3, [r3, #0]
 800cde4:	4a16      	ldr	r2, [pc, #88]	; (800ce40 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800cde6:	4293      	cmp	r3, r2
 800cde8:	d004      	beq.n	800cdf4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cdea:	687b      	ldr	r3, [r7, #4]
 800cdec:	681b      	ldr	r3, [r3, #0]
 800cdee:	4a15      	ldr	r2, [pc, #84]	; (800ce44 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800cdf0:	4293      	cmp	r3, r2
 800cdf2:	d10c      	bne.n	800ce0e <HAL_TIMEx_MasterConfigSynchronization+0xe2>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800cdf4:	68bb      	ldr	r3, [r7, #8]
 800cdf6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cdfa:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cdfc:	683b      	ldr	r3, [r7, #0]
 800cdfe:	689b      	ldr	r3, [r3, #8]
 800ce00:	68ba      	ldr	r2, [r7, #8]
 800ce02:	4313      	orrs	r3, r2
 800ce04:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800ce06:	687b      	ldr	r3, [r7, #4]
 800ce08:	681b      	ldr	r3, [r3, #0]
 800ce0a:	68ba      	ldr	r2, [r7, #8]
 800ce0c:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800ce0e:	687b      	ldr	r3, [r7, #4]
 800ce10:	2201      	movs	r2, #1
 800ce12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800ce16:	687b      	ldr	r3, [r7, #4]
 800ce18:	2200      	movs	r2, #0
 800ce1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800ce1e:	2300      	movs	r3, #0
}
 800ce20:	4618      	mov	r0, r3
 800ce22:	3714      	adds	r7, #20
 800ce24:	46bd      	mov	sp, r7
 800ce26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce2a:	4770      	bx	lr
 800ce2c:	40010000 	.word	0x40010000
 800ce30:	40010400 	.word	0x40010400
 800ce34:	40000400 	.word	0x40000400
 800ce38:	40000800 	.word	0x40000800
 800ce3c:	40000c00 	.word	0x40000c00
 800ce40:	40001800 	.word	0x40001800
 800ce44:	40014000 	.word	0x40014000

0800ce48 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800ce48:	b580      	push	{r7, lr}
 800ce4a:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800ce4c:	f003 fda6 	bl	801099c <touchgfx_components_init>
  touchgfx_init();
 800ce50:	f003 fd7a 	bl	8010948 <touchgfx_init>
}
 800ce54:	bf00      	nop
 800ce56:	bd80      	pop	{r7, pc}

0800ce58 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800ce58:	b580      	push	{r7, lr}
 800ce5a:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800ce5c:	f003 fda6 	bl	80109ac <touchgfx_taskEntry>
}
 800ce60:	bf00      	nop
 800ce62:	bd80      	pop	{r7, pc}

0800ce64 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800ce64:	b480      	push	{r7}
 800ce66:	b083      	sub	sp, #12
 800ce68:	af00      	add	r7, sp, #0
 800ce6a:	6078      	str	r0, [r7, #4]
    {
 800ce6c:	4a04      	ldr	r2, [pc, #16]	; (800ce80 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800ce6e:	687b      	ldr	r3, [r7, #4]
 800ce70:	601a      	str	r2, [r3, #0]
    }
 800ce72:	687b      	ldr	r3, [r7, #4]
 800ce74:	4618      	mov	r0, r3
 800ce76:	370c      	adds	r7, #12
 800ce78:	46bd      	mov	sp, r7
 800ce7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce7e:	4770      	bx	lr
 800ce80:	08027fbc 	.word	0x08027fbc

0800ce84 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800ce84:	b580      	push	{r7, lr}
 800ce86:	b082      	sub	sp, #8
 800ce88:	af00      	add	r7, sp, #0
 800ce8a:	6078      	str	r0, [r7, #4]
    }
 800ce8c:	6878      	ldr	r0, [r7, #4]
 800ce8e:	f7ff ffe9 	bl	800ce64 <_ZN8touchgfx12FontProviderD1Ev>
 800ce92:	2104      	movs	r1, #4
 800ce94:	6878      	ldr	r0, [r7, #4]
 800ce96:	f018 ffb6 	bl	8025e06 <_ZdlPvj>
 800ce9a:	687b      	ldr	r3, [r7, #4]
 800ce9c:	4618      	mov	r0, r3
 800ce9e:	3708      	adds	r7, #8
 800cea0:	46bd      	mov	sp, r7
 800cea2:	bd80      	pop	{r7, pc}

0800cea4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800cea4:	b580      	push	{r7, lr}
 800cea6:	b082      	sub	sp, #8
 800cea8:	af00      	add	r7, sp, #0
 800ceaa:	6078      	str	r0, [r7, #4]
 800ceac:	460b      	mov	r3, r1
 800ceae:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800ceb0:	887b      	ldrh	r3, [r7, #2]
 800ceb2:	2b00      	cmp	r3, #0
 800ceb4:	d104      	bne.n	800cec0 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800ceb6:	f002 fb19 	bl	800f4ec <_ZN17TypedTextDatabase8getFontsEv>
 800ceba:	4603      	mov	r3, r0
 800cebc:	681b      	ldr	r3, [r3, #0]
 800cebe:	e000      	b.n	800cec2 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
    default:
        return 0;
 800cec0:	2300      	movs	r3, #0
    }
}
 800cec2:	4618      	mov	r0, r3
 800cec4:	3708      	adds	r7, #8
 800cec6:	46bd      	mov	sp, r7
 800cec8:	bd80      	pop	{r7, pc}
	...

0800cecc <_ZN23ApplicationFontProviderD1Ev>:
{
    static const touchgfx::FontId DEFAULT = 0; // Asap_Regular_80_4bpp
    static const uint16_t NUMBER_OF_FONTS = 1;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800cecc:	b580      	push	{r7, lr}
 800cece:	b082      	sub	sp, #8
 800ced0:	af00      	add	r7, sp, #0
 800ced2:	6078      	str	r0, [r7, #4]
 800ced4:	4a05      	ldr	r2, [pc, #20]	; (800ceec <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800ced6:	687b      	ldr	r3, [r7, #4]
 800ced8:	601a      	str	r2, [r3, #0]
 800ceda:	687b      	ldr	r3, [r7, #4]
 800cedc:	4618      	mov	r0, r3
 800cede:	f7ff ffc1 	bl	800ce64 <_ZN8touchgfx12FontProviderD1Ev>
 800cee2:	687b      	ldr	r3, [r7, #4]
 800cee4:	4618      	mov	r0, r3
 800cee6:	3708      	adds	r7, #8
 800cee8:	46bd      	mov	sp, r7
 800ceea:	bd80      	pop	{r7, pc}
 800ceec:	08027fa8 	.word	0x08027fa8

0800cef0 <_ZN23ApplicationFontProviderD0Ev>:
 800cef0:	b580      	push	{r7, lr}
 800cef2:	b082      	sub	sp, #8
 800cef4:	af00      	add	r7, sp, #0
 800cef6:	6078      	str	r0, [r7, #4]
 800cef8:	6878      	ldr	r0, [r7, #4]
 800cefa:	f7ff ffe7 	bl	800cecc <_ZN23ApplicationFontProviderD1Ev>
 800cefe:	2104      	movs	r1, #4
 800cf00:	6878      	ldr	r0, [r7, #4]
 800cf02:	f018 ff80 	bl	8025e06 <_ZdlPvj>
 800cf06:	687b      	ldr	r3, [r7, #4]
 800cf08:	4618      	mov	r0, r3
 800cf0a:	3708      	adds	r7, #8
 800cf0c:	46bd      	mov	sp, r7
 800cf0e:	bd80      	pop	{r7, pc}

0800cf10 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800cf10:	b480      	push	{r7}
 800cf12:	b083      	sub	sp, #12
 800cf14:	af00      	add	r7, sp, #0
 800cf16:	6078      	str	r0, [r7, #4]
    {
 800cf18:	4a04      	ldr	r2, [pc, #16]	; (800cf2c <_ZN8touchgfx4FontD1Ev+0x1c>)
 800cf1a:	687b      	ldr	r3, [r7, #4]
 800cf1c:	601a      	str	r2, [r3, #0]
    }
 800cf1e:	687b      	ldr	r3, [r7, #4]
 800cf20:	4618      	mov	r0, r3
 800cf22:	370c      	adds	r7, #12
 800cf24:	46bd      	mov	sp, r7
 800cf26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf2a:	4770      	bx	lr
 800cf2c:	080283e8 	.word	0x080283e8

0800cf30 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800cf30:	b580      	push	{r7, lr}
 800cf32:	b082      	sub	sp, #8
 800cf34:	af00      	add	r7, sp, #0
 800cf36:	6078      	str	r0, [r7, #4]
    }
 800cf38:	6878      	ldr	r0, [r7, #4]
 800cf3a:	f7ff ffe9 	bl	800cf10 <_ZN8touchgfx4FontD1Ev>
 800cf3e:	2114      	movs	r1, #20
 800cf40:	6878      	ldr	r0, [r7, #4]
 800cf42:	f018 ff60 	bl	8025e06 <_ZdlPvj>
 800cf46:	687b      	ldr	r3, [r7, #4]
 800cf48:	4618      	mov	r0, r3
 800cf4a:	3708      	adds	r7, #8
 800cf4c:	46bd      	mov	sp, r7
 800cf4e:	bd80      	pop	{r7, pc}

0800cf50 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800cf50:	b590      	push	{r4, r7, lr}
 800cf52:	b087      	sub	sp, #28
 800cf54:	af00      	add	r7, sp, #0
 800cf56:	6078      	str	r0, [r7, #4]
 800cf58:	460b      	mov	r3, r1
 800cf5a:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800cf5c:	887b      	ldrh	r3, [r7, #2]
 800cf5e:	2b00      	cmp	r3, #0
 800cf60:	d101      	bne.n	800cf66 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800cf62:	2300      	movs	r3, #0
 800cf64:	e010      	b.n	800cf88 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800cf66:	2300      	movs	r3, #0
 800cf68:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800cf6a:	2300      	movs	r3, #0
 800cf6c:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800cf6e:	687b      	ldr	r3, [r7, #4]
 800cf70:	681b      	ldr	r3, [r3, #0]
 800cf72:	3308      	adds	r3, #8
 800cf74:	681c      	ldr	r4, [r3, #0]
 800cf76:	f107 030f 	add.w	r3, r7, #15
 800cf7a:	f107 0210 	add.w	r2, r7, #16
 800cf7e:	8879      	ldrh	r1, [r7, #2]
 800cf80:	6878      	ldr	r0, [r7, #4]
 800cf82:	47a0      	blx	r4
 800cf84:	6178      	str	r0, [r7, #20]
        return glyph;
 800cf86:	697b      	ldr	r3, [r7, #20]
    }
 800cf88:	4618      	mov	r0, r3
 800cf8a:	371c      	adds	r7, #28
 800cf8c:	46bd      	mov	sp, r7
 800cf8e:	bd90      	pop	{r4, r7, pc}

0800cf90 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800cf90:	b480      	push	{r7}
 800cf92:	b083      	sub	sp, #12
 800cf94:	af00      	add	r7, sp, #0
 800cf96:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800cf98:	687b      	ldr	r3, [r7, #4]
 800cf9a:	89db      	ldrh	r3, [r3, #14]
    }
 800cf9c:	4618      	mov	r0, r3
 800cf9e:	370c      	adds	r7, #12
 800cfa0:	46bd      	mov	sp, r7
 800cfa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfa6:	4770      	bx	lr

0800cfa8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800cfa8:	b480      	push	{r7}
 800cfaa:	b083      	sub	sp, #12
 800cfac:	af00      	add	r7, sp, #0
 800cfae:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800cfb0:	687b      	ldr	r3, [r7, #4]
 800cfb2:	8a1b      	ldrh	r3, [r3, #16]
    }
 800cfb4:	4618      	mov	r0, r3
 800cfb6:	370c      	adds	r7, #12
 800cfb8:	46bd      	mov	sp, r7
 800cfba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfbe:	4770      	bx	lr

0800cfc0 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800cfc0:	b480      	push	{r7}
 800cfc2:	b083      	sub	sp, #12
 800cfc4:	af00      	add	r7, sp, #0
 800cfc6:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800cfc8:	687b      	ldr	r3, [r7, #4]
 800cfca:	88db      	ldrh	r3, [r3, #6]
    }
 800cfcc:	4618      	mov	r0, r3
 800cfce:	370c      	adds	r7, #12
 800cfd0:	46bd      	mov	sp, r7
 800cfd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfd6:	4770      	bx	lr

0800cfd8 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800cfd8:	b480      	push	{r7}
 800cfda:	b083      	sub	sp, #12
 800cfdc:	af00      	add	r7, sp, #0
 800cfde:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800cfe0:	687b      	ldr	r3, [r7, #4]
 800cfe2:	889b      	ldrh	r3, [r3, #4]
    }
 800cfe4:	4618      	mov	r0, r3
 800cfe6:	370c      	adds	r7, #12
 800cfe8:	46bd      	mov	sp, r7
 800cfea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfee:	4770      	bx	lr

0800cff0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800cff0:	b480      	push	{r7}
 800cff2:	b083      	sub	sp, #12
 800cff4:	af00      	add	r7, sp, #0
 800cff6:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800cff8:	687b      	ldr	r3, [r7, #4]
 800cffa:	7a9b      	ldrb	r3, [r3, #10]
 800cffc:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800d000:	b2db      	uxtb	r3, r3
    }
 800d002:	4618      	mov	r0, r3
 800d004:	370c      	adds	r7, #12
 800d006:	46bd      	mov	sp, r7
 800d008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d00c:	4770      	bx	lr

0800d00e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800d00e:	b480      	push	{r7}
 800d010:	b083      	sub	sp, #12
 800d012:	af00      	add	r7, sp, #0
 800d014:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800d016:	687b      	ldr	r3, [r7, #4]
 800d018:	7a9b      	ldrb	r3, [r3, #10]
 800d01a:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800d01e:	b2db      	uxtb	r3, r3
    }
 800d020:	4618      	mov	r0, r3
 800d022:	370c      	adds	r7, #12
 800d024:	46bd      	mov	sp, r7
 800d026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d02a:	4770      	bx	lr

0800d02c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800d02c:	b580      	push	{r7, lr}
 800d02e:	b082      	sub	sp, #8
 800d030:	af00      	add	r7, sp, #0
 800d032:	6078      	str	r0, [r7, #4]
 800d034:	4a05      	ldr	r2, [pc, #20]	; (800d04c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800d036:	687b      	ldr	r3, [r7, #4]
 800d038:	601a      	str	r2, [r3, #0]
 800d03a:	687b      	ldr	r3, [r7, #4]
 800d03c:	4618      	mov	r0, r3
 800d03e:	f7ff ff67 	bl	800cf10 <_ZN8touchgfx4FontD1Ev>
 800d042:	687b      	ldr	r3, [r7, #4]
 800d044:	4618      	mov	r0, r3
 800d046:	3708      	adds	r7, #8
 800d048:	46bd      	mov	sp, r7
 800d04a:	bd80      	pop	{r7, pc}
 800d04c:	08028f20 	.word	0x08028f20

0800d050 <_ZN8touchgfx9ConstFontD0Ev>:
 800d050:	b580      	push	{r7, lr}
 800d052:	b082      	sub	sp, #8
 800d054:	af00      	add	r7, sp, #0
 800d056:	6078      	str	r0, [r7, #4]
 800d058:	6878      	ldr	r0, [r7, #4]
 800d05a:	f7ff ffe7 	bl	800d02c <_ZN8touchgfx9ConstFontD1Ev>
 800d05e:	211c      	movs	r1, #28
 800d060:	6878      	ldr	r0, [r7, #4]
 800d062:	f018 fed0 	bl	8025e06 <_ZdlPvj>
 800d066:	687b      	ldr	r3, [r7, #4]
 800d068:	4618      	mov	r0, r3
 800d06a:	3708      	adds	r7, #8
 800d06c:	46bd      	mov	sp, r7
 800d06e:	bd80      	pop	{r7, pc}

0800d070 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800d070:	b580      	push	{r7, lr}
 800d072:	b082      	sub	sp, #8
 800d074:	af00      	add	r7, sp, #0
 800d076:	6078      	str	r0, [r7, #4]
 800d078:	4a05      	ldr	r2, [pc, #20]	; (800d090 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800d07a:	687b      	ldr	r3, [r7, #4]
 800d07c:	601a      	str	r2, [r3, #0]
 800d07e:	687b      	ldr	r3, [r7, #4]
 800d080:	4618      	mov	r0, r3
 800d082:	f7ff ffd3 	bl	800d02c <_ZN8touchgfx9ConstFontD1Ev>
 800d086:	687b      	ldr	r3, [r7, #4]
 800d088:	4618      	mov	r0, r3
 800d08a:	3708      	adds	r7, #8
 800d08c:	46bd      	mov	sp, r7
 800d08e:	bd80      	pop	{r7, pc}
 800d090:	08027fe0 	.word	0x08027fe0

0800d094 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800d094:	b580      	push	{r7, lr}
 800d096:	b082      	sub	sp, #8
 800d098:	af00      	add	r7, sp, #0
 800d09a:	6078      	str	r0, [r7, #4]
 800d09c:	6878      	ldr	r0, [r7, #4]
 800d09e:	f7ff ffe7 	bl	800d070 <_ZN8touchgfx13GeneratedFontD1Ev>
 800d0a2:	212c      	movs	r1, #44	; 0x2c
 800d0a4:	6878      	ldr	r0, [r7, #4]
 800d0a6:	f018 feae 	bl	8025e06 <_ZdlPvj>
 800d0aa:	687b      	ldr	r3, [r7, #4]
 800d0ac:	4618      	mov	r0, r3
 800d0ae:	3708      	adds	r7, #8
 800d0b0:	46bd      	mov	sp, r7
 800d0b2:	bd80      	pop	{r7, pc}

0800d0b4 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800d0b4:	b480      	push	{r7}
 800d0b6:	b083      	sub	sp, #12
 800d0b8:	af00      	add	r7, sp, #0
 800d0ba:	6078      	str	r0, [r7, #4]
    {
 800d0bc:	4a04      	ldr	r2, [pc, #16]	; (800d0d0 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	601a      	str	r2, [r3, #0]
    }
 800d0c2:	687b      	ldr	r3, [r7, #4]
 800d0c4:	4618      	mov	r0, r3
 800d0c6:	370c      	adds	r7, #12
 800d0c8:	46bd      	mov	sp, r7
 800d0ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0ce:	4770      	bx	lr
 800d0d0:	08027fd0 	.word	0x08027fd0

0800d0d4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800d0d4:	b580      	push	{r7, lr}
 800d0d6:	b082      	sub	sp, #8
 800d0d8:	af00      	add	r7, sp, #0
 800d0da:	6078      	str	r0, [r7, #4]
    }
 800d0dc:	6878      	ldr	r0, [r7, #4]
 800d0de:	f7ff ffe9 	bl	800d0b4 <_ZN8touchgfx9TypedTextD1Ev>
 800d0e2:	2108      	movs	r1, #8
 800d0e4:	6878      	ldr	r0, [r7, #4]
 800d0e6:	f018 fe8e 	bl	8025e06 <_ZdlPvj>
 800d0ea:	687b      	ldr	r3, [r7, #4]
 800d0ec:	4618      	mov	r0, r3
 800d0ee:	3708      	adds	r7, #8
 800d0f0:	46bd      	mov	sp, r7
 800d0f2:	bd80      	pop	{r7, pc}

0800d0f4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800d0f4:	b480      	push	{r7}
 800d0f6:	b083      	sub	sp, #12
 800d0f8:	af00      	add	r7, sp, #0
 800d0fa:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800d0fc:	687b      	ldr	r3, [r7, #4]
 800d0fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800d100:	4618      	mov	r0, r3
 800d102:	370c      	adds	r7, #12
 800d104:	46bd      	mov	sp, r7
 800d106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d10a:	4770      	bx	lr

0800d10c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800d10c:	b480      	push	{r7}
 800d10e:	b083      	sub	sp, #12
 800d110:	af00      	add	r7, sp, #0
 800d112:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800d114:	687b      	ldr	r3, [r7, #4]
 800d116:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800d118:	4618      	mov	r0, r3
 800d11a:	370c      	adds	r7, #12
 800d11c:	46bd      	mov	sp, r7
 800d11e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d122:	4770      	bx	lr

0800d124 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800d124:	b580      	push	{r7, lr}
 800d126:	b08e      	sub	sp, #56	; 0x38
 800d128:	af0a      	add	r7, sp, #40	; 0x28
 800d12a:	60f8      	str	r0, [r7, #12]
 800d12c:	60b9      	str	r1, [r7, #8]
 800d12e:	4611      	mov	r1, r2
 800d130:	461a      	mov	r2, r3
 800d132:	460b      	mov	r3, r1
 800d134:	80fb      	strh	r3, [r7, #6]
 800d136:	4613      	mov	r3, r2
 800d138:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800d13a:	68f8      	ldr	r0, [r7, #12]
 800d13c:	88b9      	ldrh	r1, [r7, #4]
 800d13e:	88fa      	ldrh	r2, [r7, #6]
 800d140:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800d144:	9308      	str	r3, [sp, #32]
 800d146:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800d148:	9307      	str	r3, [sp, #28]
 800d14a:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800d14e:	9306      	str	r3, [sp, #24]
 800d150:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d154:	9305      	str	r3, [sp, #20]
 800d156:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800d15a:	9304      	str	r3, [sp, #16]
 800d15c:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800d160:	9303      	str	r3, [sp, #12]
 800d162:	f897 3020 	ldrb.w	r3, [r7, #32]
 800d166:	9302      	str	r3, [sp, #8]
 800d168:	7f3b      	ldrb	r3, [r7, #28]
 800d16a:	9301      	str	r3, [sp, #4]
 800d16c:	8b3b      	ldrh	r3, [r7, #24]
 800d16e:	9300      	str	r3, [sp, #0]
 800d170:	460b      	mov	r3, r1
 800d172:	68b9      	ldr	r1, [r7, #8]
 800d174:	f009 faae 	bl	80166d4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800d178:	4a09      	ldr	r2, [pc, #36]	; (800d1a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800d17a:	68fb      	ldr	r3, [r7, #12]
 800d17c:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800d17e:	68fb      	ldr	r3, [r7, #12]
 800d180:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800d182:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800d184:	68fb      	ldr	r3, [r7, #12]
 800d186:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800d188:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800d18a:	68fb      	ldr	r3, [r7, #12]
 800d18c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d18e:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800d190:	68fb      	ldr	r3, [r7, #12]
 800d192:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800d194:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800d196:	68fb      	ldr	r3, [r7, #12]
 800d198:	4618      	mov	r0, r3
 800d19a:	3710      	adds	r7, #16
 800d19c:	46bd      	mov	sp, r7
 800d19e:	bd80      	pop	{r7, pc}
 800d1a0:	08027fe0 	.word	0x08027fe0

0800d1a4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800d1a4:	b480      	push	{r7}
 800d1a6:	b085      	sub	sp, #20
 800d1a8:	af00      	add	r7, sp, #0
 800d1aa:	6078      	str	r0, [r7, #4]
 800d1ac:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800d1ae:	687b      	ldr	r3, [r7, #4]
 800d1b0:	69db      	ldr	r3, [r3, #28]
 800d1b2:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800d1b4:	683b      	ldr	r3, [r7, #0]
 800d1b6:	889b      	ldrh	r3, [r3, #4]
 800d1b8:	0adb      	lsrs	r3, r3, #11
 800d1ba:	b29b      	uxth	r3, r3
 800d1bc:	009b      	lsls	r3, r3, #2
 800d1be:	68fa      	ldr	r2, [r7, #12]
 800d1c0:	4413      	add	r3, r2
 800d1c2:	681a      	ldr	r2, [r3, #0]
 800d1c4:	683b      	ldr	r3, [r7, #0]
 800d1c6:	681b      	ldr	r3, [r3, #0]
 800d1c8:	4413      	add	r3, r2
}
 800d1ca:	4618      	mov	r0, r3
 800d1cc:	3714      	adds	r7, #20
 800d1ce:	46bd      	mov	sp, r7
 800d1d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1d4:	4770      	bx	lr

0800d1d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800d1d6:	b480      	push	{r7}
 800d1d8:	b089      	sub	sp, #36	; 0x24
 800d1da:	af00      	add	r7, sp, #0
 800d1dc:	60f8      	str	r0, [r7, #12]
 800d1de:	460b      	mov	r3, r1
 800d1e0:	607a      	str	r2, [r7, #4]
 800d1e2:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800d1e4:	687b      	ldr	r3, [r7, #4]
 800d1e6:	2b00      	cmp	r3, #0
 800d1e8:	d003      	beq.n	800d1f2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	7b1b      	ldrb	r3, [r3, #12]
 800d1ee:	2b00      	cmp	r3, #0
 800d1f0:	d101      	bne.n	800d1f6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800d1f2:	2300      	movs	r3, #0
 800d1f4:	e031      	b.n	800d25a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800d1f6:	68fb      	ldr	r3, [r7, #12]
 800d1f8:	6a1a      	ldr	r2, [r3, #32]
 800d1fa:	687b      	ldr	r3, [r7, #4]
 800d1fc:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800d1fe:	697b      	ldr	r3, [r7, #20]
 800d200:	7b5b      	ldrb	r3, [r3, #13]
 800d202:	021b      	lsls	r3, r3, #8
 800d204:	b21b      	sxth	r3, r3
 800d206:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d20a:	b219      	sxth	r1, r3
 800d20c:	697b      	ldr	r3, [r7, #20]
 800d20e:	7adb      	ldrb	r3, [r3, #11]
 800d210:	b21b      	sxth	r3, r3
 800d212:	430b      	orrs	r3, r1
 800d214:	b21b      	sxth	r3, r3
 800d216:	b29b      	uxth	r3, r3
 800d218:	009b      	lsls	r3, r3, #2
 800d21a:	4413      	add	r3, r2
 800d21c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800d21e:	687b      	ldr	r3, [r7, #4]
 800d220:	7b1b      	ldrb	r3, [r3, #12]
 800d222:	837b      	strh	r3, [r7, #26]
 800d224:	e013      	b.n	800d24e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800d226:	69fb      	ldr	r3, [r7, #28]
 800d228:	881b      	ldrh	r3, [r3, #0]
 800d22a:	897a      	ldrh	r2, [r7, #10]
 800d22c:	429a      	cmp	r2, r3
 800d22e:	d103      	bne.n	800d238 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800d230:	69fb      	ldr	r3, [r7, #28]
 800d232:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800d236:	e010      	b.n	800d25a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800d238:	69fb      	ldr	r3, [r7, #28]
 800d23a:	881b      	ldrh	r3, [r3, #0]
 800d23c:	897a      	ldrh	r2, [r7, #10]
 800d23e:	429a      	cmp	r2, r3
 800d240:	d309      	bcc.n	800d256 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800d242:	8b7b      	ldrh	r3, [r7, #26]
 800d244:	3b01      	subs	r3, #1
 800d246:	837b      	strh	r3, [r7, #26]
 800d248:	69fb      	ldr	r3, [r7, #28]
 800d24a:	3304      	adds	r3, #4
 800d24c:	61fb      	str	r3, [r7, #28]
 800d24e:	8b7b      	ldrh	r3, [r7, #26]
 800d250:	2b00      	cmp	r3, #0
 800d252:	d1e8      	bne.n	800d226 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800d254:	e000      	b.n	800d258 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800d256:	bf00      	nop
        }
    }
    return 0;
 800d258:	2300      	movs	r3, #0
}
 800d25a:	4618      	mov	r0, r3
 800d25c:	3724      	adds	r7, #36	; 0x24
 800d25e:	46bd      	mov	sp, r7
 800d260:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d264:	4770      	bx	lr
	...

0800d268 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 800d268:	b580      	push	{r7, lr}
 800d26a:	af00      	add	r7, sp, #0
 800d26c:	4801      	ldr	r0, [pc, #4]	; (800d274 <__tcf_0+0xc>)
 800d26e:	f7ff feff 	bl	800d070 <_ZN8touchgfx13GeneratedFontD1Ev>
 800d272:	bd80      	pop	{r7, pc}
 800d274:	24002384 	.word	0x24002384

0800d278 <_Z28getFont_Asap_Regular_80_4bppv>:
{
 800d278:	b580      	push	{r7, lr}
 800d27a:	b08e      	sub	sp, #56	; 0x38
 800d27c:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 800d27e:	4b21      	ldr	r3, [pc, #132]	; (800d304 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800d280:	681b      	ldr	r3, [r3, #0]
 800d282:	f3bf 8f5b 	dmb	ish
 800d286:	f003 0301 	and.w	r3, r3, #1
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	bf0c      	ite	eq
 800d28e:	2301      	moveq	r3, #1
 800d290:	2300      	movne	r3, #0
 800d292:	b2db      	uxtb	r3, r3
 800d294:	2b00      	cmp	r3, #0
 800d296:	d030      	beq.n	800d2fa <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 800d298:	481a      	ldr	r0, [pc, #104]	; (800d304 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800d29a:	f018 fdb6 	bl	8025e0a <__cxa_guard_acquire>
 800d29e:	4603      	mov	r3, r0
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	bf14      	ite	ne
 800d2a4:	2301      	movne	r3, #1
 800d2a6:	2300      	moveq	r3, #0
 800d2a8:	b2db      	uxtb	r3, r3
 800d2aa:	2b00      	cmp	r3, #0
 800d2ac:	d025      	beq.n	800d2fa <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 800d2ae:	2300      	movs	r3, #0
 800d2b0:	930c      	str	r3, [sp, #48]	; 0x30
 800d2b2:	2300      	movs	r3, #0
 800d2b4:	930b      	str	r3, [sp, #44]	; 0x2c
 800d2b6:	2300      	movs	r3, #0
 800d2b8:	930a      	str	r3, [sp, #40]	; 0x28
 800d2ba:	2300      	movs	r3, #0
 800d2bc:	9309      	str	r3, [sp, #36]	; 0x24
 800d2be:	4b12      	ldr	r3, [pc, #72]	; (800d308 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 800d2c0:	9308      	str	r3, [sp, #32]
 800d2c2:	4b12      	ldr	r3, [pc, #72]	; (800d30c <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 800d2c4:	9307      	str	r3, [sp, #28]
 800d2c6:	2300      	movs	r3, #0
 800d2c8:	9306      	str	r3, [sp, #24]
 800d2ca:	2300      	movs	r3, #0
 800d2cc:	9305      	str	r3, [sp, #20]
 800d2ce:	2301      	movs	r3, #1
 800d2d0:	9304      	str	r3, [sp, #16]
 800d2d2:	2304      	movs	r3, #4
 800d2d4:	9303      	str	r3, [sp, #12]
 800d2d6:	2300      	movs	r3, #0
 800d2d8:	9302      	str	r3, [sp, #8]
 800d2da:	2300      	movs	r3, #0
 800d2dc:	9301      	str	r3, [sp, #4]
 800d2de:	2350      	movs	r3, #80	; 0x50
 800d2e0:	9300      	str	r3, [sp, #0]
 800d2e2:	2350      	movs	r3, #80	; 0x50
 800d2e4:	220a      	movs	r2, #10
 800d2e6:	490a      	ldr	r1, [pc, #40]	; (800d310 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 800d2e8:	480a      	ldr	r0, [pc, #40]	; (800d314 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 800d2ea:	f7ff ff1b 	bl	800d124 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800d2ee:	480a      	ldr	r0, [pc, #40]	; (800d318 <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 800d2f0:	f018 fdd6 	bl	8025ea0 <atexit>
 800d2f4:	4803      	ldr	r0, [pc, #12]	; (800d304 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800d2f6:	f018 fd94 	bl	8025e22 <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 800d2fa:	4b06      	ldr	r3, [pc, #24]	; (800d314 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 800d2fc:	4618      	mov	r0, r3
 800d2fe:	46bd      	mov	sp, r7
 800d300:	bd80      	pop	{r7, pc}
 800d302:	bf00      	nop
 800d304:	240023b0 	.word	0x240023b0
 800d308:	0802bc04 	.word	0x0802bc04
 800d30c:	0802bc08 	.word	0x0802bc08
 800d310:	0802bb78 	.word	0x0802bb78
 800d314:	24002384 	.word	0x24002384
 800d318:	0800d269 	.word	0x0800d269

0800d31c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800d31c:	b480      	push	{r7}
 800d31e:	b083      	sub	sp, #12
 800d320:	af00      	add	r7, sp, #0
 800d322:	6078      	str	r0, [r7, #4]
 800d324:	6039      	str	r1, [r7, #0]
 800d326:	683b      	ldr	r3, [r7, #0]
 800d328:	4618      	mov	r0, r3
 800d32a:	370c      	adds	r7, #12
 800d32c:	46bd      	mov	sp, r7
 800d32e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d332:	4770      	bx	lr

0800d334 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d334:	b480      	push	{r7}
 800d336:	b083      	sub	sp, #12
 800d338:	af00      	add	r7, sp, #0
 800d33a:	6078      	str	r0, [r7, #4]
 800d33c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d33e:	bf00      	nop
 800d340:	370c      	adds	r7, #12
 800d342:	46bd      	mov	sp, r7
 800d344:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d348:	4770      	bx	lr

0800d34a <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800d34a:	b480      	push	{r7}
 800d34c:	b083      	sub	sp, #12
 800d34e:	af00      	add	r7, sp, #0
 800d350:	6078      	str	r0, [r7, #4]
 800d352:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d354:	bf00      	nop
 800d356:	370c      	adds	r7, #12
 800d358:	46bd      	mov	sp, r7
 800d35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d35e:	4770      	bx	lr

0800d360 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800d360:	b480      	push	{r7}
 800d362:	b083      	sub	sp, #12
 800d364:	af00      	add	r7, sp, #0
 800d366:	6078      	str	r0, [r7, #4]
 800d368:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d36a:	bf00      	nop
 800d36c:	370c      	adds	r7, #12
 800d36e:	46bd      	mov	sp, r7
 800d370:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d374:	4770      	bx	lr

0800d376 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800d376:	b480      	push	{r7}
 800d378:	b083      	sub	sp, #12
 800d37a:	af00      	add	r7, sp, #0
 800d37c:	6078      	str	r0, [r7, #4]
 800d37e:	460b      	mov	r3, r1
 800d380:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800d382:	bf00      	nop
 800d384:	370c      	adds	r7, #12
 800d386:	46bd      	mov	sp, r7
 800d388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d38c:	4770      	bx	lr

0800d38e <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800d38e:	b480      	push	{r7}
 800d390:	b083      	sub	sp, #12
 800d392:	af00      	add	r7, sp, #0
 800d394:	6078      	str	r0, [r7, #4]
    {
    }
 800d396:	bf00      	nop
 800d398:	370c      	adds	r7, #12
 800d39a:	46bd      	mov	sp, r7
 800d39c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3a0:	4770      	bx	lr

0800d3a2 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800d3a2:	b480      	push	{r7}
 800d3a4:	b083      	sub	sp, #12
 800d3a6:	af00      	add	r7, sp, #0
 800d3a8:	6078      	str	r0, [r7, #4]
    {
    }
 800d3aa:	bf00      	nop
 800d3ac:	370c      	adds	r7, #12
 800d3ae:	46bd      	mov	sp, r7
 800d3b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3b4:	4770      	bx	lr
	...

0800d3b8 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800d3b8:	b480      	push	{r7}
 800d3ba:	b083      	sub	sp, #12
 800d3bc:	af00      	add	r7, sp, #0
 800d3be:	6078      	str	r0, [r7, #4]
    {
 800d3c0:	4a04      	ldr	r2, [pc, #16]	; (800d3d4 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	601a      	str	r2, [r3, #0]
    }
 800d3c6:	687b      	ldr	r3, [r7, #4]
 800d3c8:	4618      	mov	r0, r3
 800d3ca:	370c      	adds	r7, #12
 800d3cc:	46bd      	mov	sp, r7
 800d3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3d2:	4770      	bx	lr
 800d3d4:	08028160 	.word	0x08028160

0800d3d8 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800d3d8:	b580      	push	{r7, lr}
 800d3da:	b082      	sub	sp, #8
 800d3dc:	af00      	add	r7, sp, #0
 800d3de:	6078      	str	r0, [r7, #4]
    }
 800d3e0:	6878      	ldr	r0, [r7, #4]
 800d3e2:	f7ff ffe9 	bl	800d3b8 <_ZN8touchgfx15UIEventListenerD1Ev>
 800d3e6:	2104      	movs	r1, #4
 800d3e8:	6878      	ldr	r0, [r7, #4]
 800d3ea:	f018 fd0c 	bl	8025e06 <_ZdlPvj>
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	4618      	mov	r0, r3
 800d3f2:	3708      	adds	r7, #8
 800d3f4:	46bd      	mov	sp, r7
 800d3f6:	bd80      	pop	{r7, pc}

0800d3f8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800d3f8:	b480      	push	{r7}
 800d3fa:	b083      	sub	sp, #12
 800d3fc:	af00      	add	r7, sp, #0
 800d3fe:	6078      	str	r0, [r7, #4]
    {
    }
 800d400:	bf00      	nop
 800d402:	370c      	adds	r7, #12
 800d404:	46bd      	mov	sp, r7
 800d406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d40a:	4770      	bx	lr

0800d40c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800d40c:	b480      	push	{r7}
 800d40e:	b083      	sub	sp, #12
 800d410:	af00      	add	r7, sp, #0
 800d412:	6078      	str	r0, [r7, #4]
 800d414:	460b      	mov	r3, r1
 800d416:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800d418:	bf00      	nop
 800d41a:	370c      	adds	r7, #12
 800d41c:	46bd      	mov	sp, r7
 800d41e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d422:	4770      	bx	lr

0800d424 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800d424:	b480      	push	{r7}
 800d426:	b083      	sub	sp, #12
 800d428:	af00      	add	r7, sp, #0
 800d42a:	6078      	str	r0, [r7, #4]
 800d42c:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800d42e:	687b      	ldr	r3, [r7, #4]
 800d430:	683a      	ldr	r2, [r7, #0]
 800d432:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800d436:	6810      	ldr	r0, [r2, #0]
 800d438:	6851      	ldr	r1, [r2, #4]
 800d43a:	c303      	stmia	r3!, {r0, r1}
    }
 800d43c:	bf00      	nop
 800d43e:	370c      	adds	r7, #12
 800d440:	46bd      	mov	sp, r7
 800d442:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d446:	4770      	bx	lr

0800d448 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800d448:	b580      	push	{r7, lr}
 800d44a:	b082      	sub	sp, #8
 800d44c:	af00      	add	r7, sp, #0
 800d44e:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800d450:	687b      	ldr	r3, [r7, #4]
 800d452:	3304      	adds	r3, #4
 800d454:	4618      	mov	r0, r3
 800d456:	f008 f83c 	bl	80154d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800d45a:	bf00      	nop
 800d45c:	3708      	adds	r7, #8
 800d45e:	46bd      	mov	sp, r7
 800d460:	bd80      	pop	{r7, pc}
	...

0800d464 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800d464:	b480      	push	{r7}
 800d466:	b083      	sub	sp, #12
 800d468:	af00      	add	r7, sp, #0
 800d46a:	6078      	str	r0, [r7, #4]
    {
 800d46c:	4a04      	ldr	r2, [pc, #16]	; (800d480 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800d46e:	687b      	ldr	r3, [r7, #4]
 800d470:	601a      	str	r2, [r3, #0]
    }
 800d472:	687b      	ldr	r3, [r7, #4]
 800d474:	4618      	mov	r0, r3
 800d476:	370c      	adds	r7, #12
 800d478:	46bd      	mov	sp, r7
 800d47a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d47e:	4770      	bx	lr
 800d480:	08028148 	.word	0x08028148

0800d484 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800d484:	b580      	push	{r7, lr}
 800d486:	b082      	sub	sp, #8
 800d488:	af00      	add	r7, sp, #0
 800d48a:	6078      	str	r0, [r7, #4]
    }
 800d48c:	6878      	ldr	r0, [r7, #4]
 800d48e:	f7ff ffe9 	bl	800d464 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800d492:	2104      	movs	r1, #4
 800d494:	6878      	ldr	r0, [r7, #4]
 800d496:	f018 fcb6 	bl	8025e06 <_ZdlPvj>
 800d49a:	687b      	ldr	r3, [r7, #4]
 800d49c:	4618      	mov	r0, r3
 800d49e:	3708      	adds	r7, #8
 800d4a0:	46bd      	mov	sp, r7
 800d4a2:	bd80      	pop	{r7, pc}

0800d4a4 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800d4a4:	b480      	push	{r7}
 800d4a6:	af00      	add	r7, sp, #0
    {
        return instance;
 800d4a8:	4b03      	ldr	r3, [pc, #12]	; (800d4b8 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800d4aa:	681b      	ldr	r3, [r3, #0]
    }
 800d4ac:	4618      	mov	r0, r3
 800d4ae:	46bd      	mov	sp, r7
 800d4b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4b4:	4770      	bx	lr
 800d4b6:	bf00      	nop
 800d4b8:	24004a50 	.word	0x24004a50

0800d4bc <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800d4bc:	b480      	push	{r7}
 800d4be:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800d4c0:	4b0b      	ldr	r3, [pc, #44]	; (800d4f0 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800d4c2:	681b      	ldr	r3, [r3, #0]
 800d4c4:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800d4c8:	2b00      	cmp	r3, #0
 800d4ca:	d008      	beq.n	800d4de <_ZN8touchgfx3HAL3lcdEv+0x22>
 800d4cc:	4b08      	ldr	r3, [pc, #32]	; (800d4f0 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800d4ce:	681b      	ldr	r3, [r3, #0]
 800d4d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d4d2:	2b00      	cmp	r3, #0
 800d4d4:	d003      	beq.n	800d4de <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800d4d6:	4b06      	ldr	r3, [pc, #24]	; (800d4f0 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800d4d8:	681b      	ldr	r3, [r3, #0]
 800d4da:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d4dc:	e002      	b.n	800d4e4 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800d4de:	4b04      	ldr	r3, [pc, #16]	; (800d4f0 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800d4e0:	681b      	ldr	r3, [r3, #0]
 800d4e2:	689b      	ldr	r3, [r3, #8]
    }
 800d4e4:	4618      	mov	r0, r3
 800d4e6:	46bd      	mov	sp, r7
 800d4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4ec:	4770      	bx	lr
 800d4ee:	bf00      	nop
 800d4f0:	24004a50 	.word	0x24004a50

0800d4f4 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800d4f4:	b480      	push	{r7}
 800d4f6:	b083      	sub	sp, #12
 800d4f8:	af00      	add	r7, sp, #0
 800d4fa:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800d4fc:	4a07      	ldr	r2, [pc, #28]	; (800d51c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	601a      	str	r2, [r3, #0]
 800d502:	687b      	ldr	r3, [r7, #4]
 800d504:	2200      	movs	r2, #0
 800d506:	605a      	str	r2, [r3, #4]
 800d508:	687b      	ldr	r3, [r7, #4]
 800d50a:	2200      	movs	r2, #0
 800d50c:	721a      	strb	r2, [r3, #8]
    {
    }
 800d50e:	687b      	ldr	r3, [r7, #4]
 800d510:	4618      	mov	r0, r3
 800d512:	370c      	adds	r7, #12
 800d514:	46bd      	mov	sp, r7
 800d516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d51a:	4770      	bx	lr
 800d51c:	08028124 	.word	0x08028124

0800d520 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800d520:	b480      	push	{r7}
 800d522:	b083      	sub	sp, #12
 800d524:	af00      	add	r7, sp, #0
 800d526:	6078      	str	r0, [r7, #4]
    {
 800d528:	4a04      	ldr	r2, [pc, #16]	; (800d53c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800d52a:	687b      	ldr	r3, [r7, #4]
 800d52c:	601a      	str	r2, [r3, #0]
    }
 800d52e:	687b      	ldr	r3, [r7, #4]
 800d530:	4618      	mov	r0, r3
 800d532:	370c      	adds	r7, #12
 800d534:	46bd      	mov	sp, r7
 800d536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d53a:	4770      	bx	lr
 800d53c:	08028124 	.word	0x08028124

0800d540 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800d540:	b580      	push	{r7, lr}
 800d542:	b082      	sub	sp, #8
 800d544:	af00      	add	r7, sp, #0
 800d546:	6078      	str	r0, [r7, #4]
    }
 800d548:	6878      	ldr	r0, [r7, #4]
 800d54a:	f7ff ffe9 	bl	800d520 <_ZN8touchgfx10TransitionD1Ev>
 800d54e:	210c      	movs	r1, #12
 800d550:	6878      	ldr	r0, [r7, #4]
 800d552:	f018 fc58 	bl	8025e06 <_ZdlPvj>
 800d556:	687b      	ldr	r3, [r7, #4]
 800d558:	4618      	mov	r0, r3
 800d55a:	3708      	adds	r7, #8
 800d55c:	46bd      	mov	sp, r7
 800d55e:	bd80      	pop	{r7, pc}

0800d560 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800d560:	b480      	push	{r7}
 800d562:	b083      	sub	sp, #12
 800d564:	af00      	add	r7, sp, #0
 800d566:	6078      	str	r0, [r7, #4]
    {
    }
 800d568:	bf00      	nop
 800d56a:	370c      	adds	r7, #12
 800d56c:	46bd      	mov	sp, r7
 800d56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d572:	4770      	bx	lr

0800d574 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800d574:	b480      	push	{r7}
 800d576:	b083      	sub	sp, #12
 800d578:	af00      	add	r7, sp, #0
 800d57a:	6078      	str	r0, [r7, #4]
    {
    }
 800d57c:	bf00      	nop
 800d57e:	370c      	adds	r7, #12
 800d580:	46bd      	mov	sp, r7
 800d582:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d586:	4770      	bx	lr

0800d588 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800d588:	b480      	push	{r7}
 800d58a:	b083      	sub	sp, #12
 800d58c:	af00      	add	r7, sp, #0
 800d58e:	6078      	str	r0, [r7, #4]
    {
    }
 800d590:	bf00      	nop
 800d592:	370c      	adds	r7, #12
 800d594:	46bd      	mov	sp, r7
 800d596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d59a:	4770      	bx	lr

0800d59c <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800d59c:	b580      	push	{r7, lr}
 800d59e:	b082      	sub	sp, #8
 800d5a0:	af00      	add	r7, sp, #0
 800d5a2:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800d5a4:	f007 ff70 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 800d5a8:	4603      	mov	r3, r0
 800d5aa:	681a      	ldr	r2, [r3, #0]
 800d5ac:	323c      	adds	r2, #60	; 0x3c
 800d5ae:	6812      	ldr	r2, [r2, #0]
 800d5b0:	4618      	mov	r0, r3
 800d5b2:	4790      	blx	r2
    }
 800d5b4:	bf00      	nop
 800d5b6:	3708      	adds	r7, #8
 800d5b8:	46bd      	mov	sp, r7
 800d5ba:	bd80      	pop	{r7, pc}

0800d5bc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800d5bc:	b480      	push	{r7}
 800d5be:	b083      	sub	sp, #12
 800d5c0:	af00      	add	r7, sp, #0
 800d5c2:	6078      	str	r0, [r7, #4]
 800d5c4:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800d5c6:	687b      	ldr	r3, [r7, #4]
 800d5c8:	683a      	ldr	r2, [r7, #0]
 800d5ca:	605a      	str	r2, [r3, #4]
    }
 800d5cc:	bf00      	nop
 800d5ce:	370c      	adds	r7, #12
 800d5d0:	46bd      	mov	sp, r7
 800d5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5d6:	4770      	bx	lr

0800d5d8 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800d5d8:	b580      	push	{r7, lr}
 800d5da:	b082      	sub	sp, #8
 800d5dc:	af00      	add	r7, sp, #0
 800d5de:	6078      	str	r0, [r7, #4]
 800d5e0:	4a05      	ldr	r2, [pc, #20]	; (800d5f8 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800d5e2:	687b      	ldr	r3, [r7, #4]
 800d5e4:	601a      	str	r2, [r3, #0]
 800d5e6:	687b      	ldr	r3, [r7, #4]
 800d5e8:	4618      	mov	r0, r3
 800d5ea:	f7ff fee5 	bl	800d3b8 <_ZN8touchgfx15UIEventListenerD1Ev>
 800d5ee:	687b      	ldr	r3, [r7, #4]
 800d5f0:	4618      	mov	r0, r3
 800d5f2:	3708      	adds	r7, #8
 800d5f4:	46bd      	mov	sp, r7
 800d5f6:	bd80      	pop	{r7, pc}
 800d5f8:	08028e64 	.word	0x08028e64

0800d5fc <_ZN8touchgfx11ApplicationD0Ev>:
 800d5fc:	b580      	push	{r7, lr}
 800d5fe:	b082      	sub	sp, #8
 800d600:	af00      	add	r7, sp, #0
 800d602:	6078      	str	r0, [r7, #4]
 800d604:	6878      	ldr	r0, [r7, #4]
 800d606:	f7ff ffe7 	bl	800d5d8 <_ZN8touchgfx11ApplicationD1Ev>
 800d60a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800d60e:	6878      	ldr	r0, [r7, #4]
 800d610:	f018 fbf9 	bl	8025e06 <_ZdlPvj>
 800d614:	687b      	ldr	r3, [r7, #4]
 800d616:	4618      	mov	r0, r3
 800d618:	3708      	adds	r7, #8
 800d61a:	46bd      	mov	sp, r7
 800d61c:	bd80      	pop	{r7, pc}
	...

0800d620 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800d620:	b580      	push	{r7, lr}
 800d622:	b082      	sub	sp, #8
 800d624:	af00      	add	r7, sp, #0
 800d626:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800d628:	687b      	ldr	r3, [r7, #4]
 800d62a:	4618      	mov	r0, r3
 800d62c:	f007 fff2 	bl	8015614 <_ZN8touchgfx11ApplicationC1Ev>
 800d630:	4a09      	ldr	r2, [pc, #36]	; (800d658 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800d632:	687b      	ldr	r3, [r7, #4]
 800d634:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800d636:	687b      	ldr	r3, [r7, #4]
 800d638:	2200      	movs	r2, #0
 800d63a:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800d63e:	687b      	ldr	r3, [r7, #4]
 800d640:	2200      	movs	r2, #0
 800d642:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800d646:	687b      	ldr	r3, [r7, #4]
 800d648:	4a04      	ldr	r2, [pc, #16]	; (800d65c <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800d64a:	6013      	str	r3, [r2, #0]
    }
 800d64c:	687b      	ldr	r3, [r7, #4]
 800d64e:	4618      	mov	r0, r3
 800d650:	3708      	adds	r7, #8
 800d652:	46bd      	mov	sp, r7
 800d654:	bd80      	pop	{r7, pc}
 800d656:	bf00      	nop
 800d658:	080280d0 	.word	0x080280d0
 800d65c:	24004a9c 	.word	0x24004a9c

0800d660 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800d660:	b580      	push	{r7, lr}
 800d662:	b082      	sub	sp, #8
 800d664:	af00      	add	r7, sp, #0
 800d666:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800d668:	6878      	ldr	r0, [r7, #4]
 800d66a:	f000 f804 	bl	800d676 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800d66e:	bf00      	nop
 800d670:	3708      	adds	r7, #8
 800d672:	46bd      	mov	sp, r7
 800d674:	bd80      	pop	{r7, pc}

0800d676 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800d676:	b580      	push	{r7, lr}
 800d678:	b082      	sub	sp, #8
 800d67a:	af00      	add	r7, sp, #0
 800d67c:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800d67e:	687b      	ldr	r3, [r7, #4]
 800d680:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800d684:	2b00      	cmp	r3, #0
 800d686:	d00f      	beq.n	800d6a8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800d688:	687b      	ldr	r3, [r7, #4]
 800d68a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800d68e:	687b      	ldr	r3, [r7, #4]
 800d690:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800d694:	681b      	ldr	r3, [r3, #0]
 800d696:	330c      	adds	r3, #12
 800d698:	681b      	ldr	r3, [r3, #0]
 800d69a:	4610      	mov	r0, r2
 800d69c:	4798      	blx	r3
 800d69e:	4603      	mov	r3, r0
 800d6a0:	2b00      	cmp	r3, #0
 800d6a2:	d001      	beq.n	800d6a8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800d6a4:	2301      	movs	r3, #1
 800d6a6:	e000      	b.n	800d6aa <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800d6a8:	2300      	movs	r3, #0
 800d6aa:	2b00      	cmp	r3, #0
 800d6ac:	d00e      	beq.n	800d6cc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800d6ae:	687b      	ldr	r3, [r7, #4]
 800d6b0:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800d6b4:	687b      	ldr	r3, [r7, #4]
 800d6b6:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800d6ba:	681b      	ldr	r3, [r3, #0]
 800d6bc:	3308      	adds	r3, #8
 800d6be:	681b      	ldr	r3, [r3, #0]
 800d6c0:	4610      	mov	r0, r2
 800d6c2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800d6c4:	687b      	ldr	r3, [r7, #4]
 800d6c6:	2200      	movs	r2, #0
 800d6c8:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800d6cc:	bf00      	nop
 800d6ce:	3708      	adds	r7, #8
 800d6d0:	46bd      	mov	sp, r7
 800d6d2:	bd80      	pop	{r7, pc}

0800d6d4 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 800d6d4:	b480      	push	{r7}
 800d6d6:	b083      	sub	sp, #12
 800d6d8:	af00      	add	r7, sp, #0
 800d6da:	6078      	str	r0, [r7, #4]
 800d6dc:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800d6de:	687b      	ldr	r3, [r7, #4]
 800d6e0:	683a      	ldr	r2, [r7, #0]
 800d6e2:	601a      	str	r2, [r3, #0]
    }
 800d6e4:	bf00      	nop
 800d6e6:	370c      	adds	r7, #12
 800d6e8:	46bd      	mov	sp, r7
 800d6ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6ee:	4770      	bx	lr

0800d6f0 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800d6f0:	b580      	push	{r7, lr}
 800d6f2:	b082      	sub	sp, #8
 800d6f4:	af00      	add	r7, sp, #0
 800d6f6:	6078      	str	r0, [r7, #4]
 800d6f8:	4a05      	ldr	r2, [pc, #20]	; (800d710 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800d6fa:	687b      	ldr	r3, [r7, #4]
 800d6fc:	601a      	str	r2, [r3, #0]
 800d6fe:	687b      	ldr	r3, [r7, #4]
 800d700:	4618      	mov	r0, r3
 800d702:	f7ff ff69 	bl	800d5d8 <_ZN8touchgfx11ApplicationD1Ev>
 800d706:	687b      	ldr	r3, [r7, #4]
 800d708:	4618      	mov	r0, r3
 800d70a:	3708      	adds	r7, #8
 800d70c:	46bd      	mov	sp, r7
 800d70e:	bd80      	pop	{r7, pc}
 800d710:	080280d0 	.word	0x080280d0

0800d714 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800d714:	b580      	push	{r7, lr}
 800d716:	b082      	sub	sp, #8
 800d718:	af00      	add	r7, sp, #0
 800d71a:	6078      	str	r0, [r7, #4]
 800d71c:	6878      	ldr	r0, [r7, #4]
 800d71e:	f7ff ffe7 	bl	800d6f0 <_ZN8touchgfx14MVPApplicationD1Ev>
 800d722:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800d726:	6878      	ldr	r0, [r7, #4]
 800d728:	f018 fb6d 	bl	8025e06 <_ZdlPvj>
 800d72c:	687b      	ldr	r3, [r7, #4]
 800d72e:	4618      	mov	r0, r3
 800d730:	3708      	adds	r7, #8
 800d732:	46bd      	mov	sp, r7
 800d734:	bd80      	pop	{r7, pc}
	...

0800d738 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800d738:	b580      	push	{r7, lr}
 800d73a:	b082      	sub	sp, #8
 800d73c:	af00      	add	r7, sp, #0
 800d73e:	6078      	str	r0, [r7, #4]
 800d740:	4a08      	ldr	r2, [pc, #32]	; (800d764 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800d742:	687b      	ldr	r3, [r7, #4]
 800d744:	601a      	str	r2, [r3, #0]
 800d746:	687b      	ldr	r3, [r7, #4]
 800d748:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800d74c:	4618      	mov	r0, r3
 800d74e:	f000 facd 	bl	800dcec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800d752:	687b      	ldr	r3, [r7, #4]
 800d754:	4618      	mov	r0, r3
 800d756:	f7ff ffcb 	bl	800d6f0 <_ZN8touchgfx14MVPApplicationD1Ev>
 800d75a:	687b      	ldr	r3, [r7, #4]
 800d75c:	4618      	mov	r0, r3
 800d75e:	3708      	adds	r7, #8
 800d760:	46bd      	mov	sp, r7
 800d762:	bd80      	pop	{r7, pc}
 800d764:	08028064 	.word	0x08028064

0800d768 <_ZN23FrontendApplicationBaseD0Ev>:
 800d768:	b580      	push	{r7, lr}
 800d76a:	b082      	sub	sp, #8
 800d76c:	af00      	add	r7, sp, #0
 800d76e:	6078      	str	r0, [r7, #4]
 800d770:	6878      	ldr	r0, [r7, #4]
 800d772:	f7ff ffe1 	bl	800d738 <_ZN23FrontendApplicationBaseD1Ev>
 800d776:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800d77a:	6878      	ldr	r0, [r7, #4]
 800d77c:	f018 fb43 	bl	8025e06 <_ZdlPvj>
 800d780:	687b      	ldr	r3, [r7, #4]
 800d782:	4618      	mov	r0, r3
 800d784:	3708      	adds	r7, #8
 800d786:	46bd      	mov	sp, r7
 800d788:	bd80      	pop	{r7, pc}

0800d78a <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800d78a:	b580      	push	{r7, lr}
 800d78c:	b082      	sub	sp, #8
 800d78e:	af00      	add	r7, sp, #0
 800d790:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 800d792:	6878      	ldr	r0, [r7, #4]
 800d794:	f000 f882 	bl	800d89c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800d798:	bf00      	nop
 800d79a:	3708      	adds	r7, #8
 800d79c:	46bd      	mov	sp, r7
 800d79e:	bd80      	pop	{r7, pc}

0800d7a0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800d7a0:	b480      	push	{r7}
 800d7a2:	b083      	sub	sp, #12
 800d7a4:	af00      	add	r7, sp, #0
 800d7a6:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800d7a8:	687b      	ldr	r3, [r7, #4]
 800d7aa:	2201      	movs	r2, #1
 800d7ac:	721a      	strb	r2, [r3, #8]
    }
 800d7ae:	bf00      	nop
 800d7b0:	370c      	adds	r7, #12
 800d7b2:	46bd      	mov	sp, r7
 800d7b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7b8:	4770      	bx	lr

0800d7ba <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 800d7ba:	b480      	push	{r7}
 800d7bc:	b083      	sub	sp, #12
 800d7be:	af00      	add	r7, sp, #0
 800d7c0:	6078      	str	r0, [r7, #4]
 800d7c2:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800d7c4:	687b      	ldr	r3, [r7, #4]
 800d7c6:	683a      	ldr	r2, [r7, #0]
 800d7c8:	605a      	str	r2, [r3, #4]
    }
 800d7ca:	bf00      	nop
 800d7cc:	370c      	adds	r7, #12
 800d7ce:	46bd      	mov	sp, r7
 800d7d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7d4:	4770      	bx	lr
	...

0800d7d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800d7d8:	b580      	push	{r7, lr}
 800d7da:	b084      	sub	sp, #16
 800d7dc:	af00      	add	r7, sp, #0
 800d7de:	60f8      	str	r0, [r7, #12]
 800d7e0:	60b9      	str	r1, [r7, #8]
 800d7e2:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800d7e4:	68fb      	ldr	r3, [r7, #12]
 800d7e6:	4618      	mov	r0, r3
 800d7e8:	f7ff ff1a 	bl	800d620 <_ZN8touchgfx14MVPApplicationC1Ev>
 800d7ec:	4a16      	ldr	r2, [pc, #88]	; (800d848 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800d7ee:	68fb      	ldr	r3, [r7, #12]
 800d7f0:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800d7f2:	68fb      	ldr	r3, [r7, #12]
 800d7f4:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800d7f8:	4618      	mov	r0, r3
 800d7fa:	f000 f8a5 	bl	800d948 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800d7fe:	68fb      	ldr	r3, [r7, #12]
 800d800:	687a      	ldr	r2, [r7, #4]
 800d802:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800d806:	68fb      	ldr	r3, [r7, #12]
 800d808:	68ba      	ldr	r2, [r7, #8]
 800d80a:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800d80e:	f7ff fe49 	bl	800d4a4 <_ZN8touchgfx3HAL11getInstanceEv>
 800d812:	4603      	mov	r3, r0
 800d814:	681a      	ldr	r2, [r3, #0]
 800d816:	3208      	adds	r2, #8
 800d818:	6812      	ldr	r2, [r2, #0]
 800d81a:	2101      	movs	r1, #1
 800d81c:	4618      	mov	r0, r3
 800d81e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800d820:	2000      	movs	r0, #0
 800d822:	f001 fdeb 	bl	800f3fc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800d826:	f7ff fe49 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 800d82a:	4603      	mov	r3, r0
 800d82c:	4618      	mov	r0, r3
 800d82e:	f010 ff90 	bl	801e752 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800d832:	f7ff fe43 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 800d836:	4603      	mov	r3, r0
 800d838:	4618      	mov	r0, r3
 800d83a:	f011 f805 	bl	801e848 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800d83e:	68fb      	ldr	r3, [r7, #12]
 800d840:	4618      	mov	r0, r3
 800d842:	3710      	adds	r7, #16
 800d844:	46bd      	mov	sp, r7
 800d846:	bd80      	pop	{r7, pc}
 800d848:	08028064 	.word	0x08028064

0800d84c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800d84c:	b480      	push	{r7}
 800d84e:	b083      	sub	sp, #12
 800d850:	af00      	add	r7, sp, #0
 800d852:	6078      	str	r0, [r7, #4]
 800d854:	6039      	str	r1, [r7, #0]
 800d856:	687b      	ldr	r3, [r7, #4]
 800d858:	4618      	mov	r0, r3
 800d85a:	370c      	adds	r7, #12
 800d85c:	46bd      	mov	sp, r7
 800d85e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d862:	4770      	bx	lr

0800d864 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800d864:	b580      	push	{r7, lr}
 800d866:	b082      	sub	sp, #8
 800d868:	af00      	add	r7, sp, #0
 800d86a:	6078      	str	r0, [r7, #4]
 800d86c:	6039      	str	r1, [r7, #0]
 800d86e:	687b      	ldr	r3, [r7, #4]
 800d870:	683a      	ldr	r2, [r7, #0]
 800d872:	4611      	mov	r1, r2
 800d874:	4618      	mov	r0, r3
 800d876:	f7ff ffe9 	bl	800d84c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800d87a:	683b      	ldr	r3, [r7, #0]
 800d87c:	685a      	ldr	r2, [r3, #4]
 800d87e:	687b      	ldr	r3, [r7, #4]
 800d880:	605a      	str	r2, [r3, #4]
 800d882:	687b      	ldr	r3, [r7, #4]
 800d884:	683a      	ldr	r2, [r7, #0]
 800d886:	3308      	adds	r3, #8
 800d888:	3208      	adds	r2, #8
 800d88a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d88e:	e883 0003 	stmia.w	r3, {r0, r1}
 800d892:	687b      	ldr	r3, [r7, #4]
 800d894:	4618      	mov	r0, r3
 800d896:	3708      	adds	r7, #8
 800d898:	46bd      	mov	sp, r7
 800d89a:	bd80      	pop	{r7, pc}

0800d89c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
 */

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 800d89c:	b590      	push	{r4, r7, lr}
 800d89e:	b089      	sub	sp, #36	; 0x24
 800d8a0:	af00      	add	r7, sp, #0
 800d8a2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 800d8a4:	687b      	ldr	r3, [r7, #4]
 800d8a6:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800d8aa:	4b10      	ldr	r3, [pc, #64]	; (800d8ec <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 800d8ac:	61bb      	str	r3, [r7, #24]
 800d8ae:	2300      	movs	r3, #0
 800d8b0:	61fb      	str	r3, [r7, #28]
 800d8b2:	f107 0008 	add.w	r0, r7, #8
 800d8b6:	f107 0318 	add.w	r3, r7, #24
 800d8ba:	cb0c      	ldmia	r3, {r2, r3}
 800d8bc:	6879      	ldr	r1, [r7, #4]
 800d8be:	f000 f85f 	bl	800d980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800d8c2:	f107 0308 	add.w	r3, r7, #8
 800d8c6:	4619      	mov	r1, r3
 800d8c8:	4620      	mov	r0, r4
 800d8ca:	f7ff ffcb 	bl	800d864 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800d8ce:	f107 0308 	add.w	r3, r7, #8
 800d8d2:	4618      	mov	r0, r3
 800d8d4:	f000 fa0a 	bl	800dcec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800d8d8:	687b      	ldr	r3, [r7, #4]
 800d8da:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800d8de:	687b      	ldr	r3, [r7, #4]
 800d8e0:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800d8e4:	bf00      	nop
 800d8e6:	3724      	adds	r7, #36	; 0x24
 800d8e8:	46bd      	mov	sp, r7
 800d8ea:	bd90      	pop	{r4, r7, pc}
 800d8ec:	0800d8f1 	.word	0x0800d8f1

0800d8f0 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 800d8f0:	b580      	push	{r7, lr}
 800d8f2:	b084      	sub	sp, #16
 800d8f4:	af02      	add	r7, sp, #8
 800d8f6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800d8f8:	687b      	ldr	r3, [r7, #4]
 800d8fa:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800d8fe:	687b      	ldr	r3, [r7, #4]
 800d900:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800d904:	461a      	mov	r2, r3
 800d906:	687b      	ldr	r3, [r7, #4]
 800d908:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800d90c:	9300      	str	r3, [sp, #0]
 800d90e:	4b04      	ldr	r3, [pc, #16]	; (800d920 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 800d910:	4804      	ldr	r0, [pc, #16]	; (800d924 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 800d912:	f000 f867 	bl	800d9e4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800d916:	bf00      	nop
 800d918:	3708      	adds	r7, #8
 800d91a:	46bd      	mov	sp, r7
 800d91c:	bd80      	pop	{r7, pc}
 800d91e:	bf00      	nop
 800d920:	24004a90 	.word	0x24004a90
 800d924:	24004a8c 	.word	0x24004a8c

0800d928 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800d928:	b480      	push	{r7}
 800d92a:	b083      	sub	sp, #12
 800d92c:	af00      	add	r7, sp, #0
 800d92e:	6078      	str	r0, [r7, #4]
 800d930:	4a04      	ldr	r2, [pc, #16]	; (800d944 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800d932:	687b      	ldr	r3, [r7, #4]
 800d934:	601a      	str	r2, [r3, #0]
 800d936:	687b      	ldr	r3, [r7, #4]
 800d938:	4618      	mov	r0, r3
 800d93a:	370c      	adds	r7, #12
 800d93c:	46bd      	mov	sp, r7
 800d93e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d942:	4770      	bx	lr
 800d944:	08028148 	.word	0x08028148

0800d948 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800d948:	b580      	push	{r7, lr}
 800d94a:	b082      	sub	sp, #8
 800d94c:	af00      	add	r7, sp, #0
 800d94e:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800d950:	687b      	ldr	r3, [r7, #4]
 800d952:	4618      	mov	r0, r3
 800d954:	f7ff ffe8 	bl	800d928 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800d958:	4a08      	ldr	r2, [pc, #32]	; (800d97c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800d95a:	687b      	ldr	r3, [r7, #4]
 800d95c:	601a      	str	r2, [r3, #0]
 800d95e:	687b      	ldr	r3, [r7, #4]
 800d960:	2200      	movs	r2, #0
 800d962:	605a      	str	r2, [r3, #4]
 800d964:	687b      	ldr	r3, [r7, #4]
 800d966:	2200      	movs	r2, #0
 800d968:	609a      	str	r2, [r3, #8]
 800d96a:	687b      	ldr	r3, [r7, #4]
 800d96c:	2200      	movs	r2, #0
 800d96e:	60da      	str	r2, [r3, #12]
    {
    }
 800d970:	687b      	ldr	r3, [r7, #4]
 800d972:	4618      	mov	r0, r3
 800d974:	3708      	adds	r7, #8
 800d976:	46bd      	mov	sp, r7
 800d978:	bd80      	pop	{r7, pc}
 800d97a:	bf00      	nop
 800d97c:	080280b8 	.word	0x080280b8

0800d980 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800d980:	b580      	push	{r7, lr}
 800d982:	b084      	sub	sp, #16
 800d984:	af00      	add	r7, sp, #0
 800d986:	60f8      	str	r0, [r7, #12]
 800d988:	60b9      	str	r1, [r7, #8]
 800d98a:	4639      	mov	r1, r7
 800d98c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800d990:	68fb      	ldr	r3, [r7, #12]
 800d992:	4618      	mov	r0, r3
 800d994:	f7ff ffc8 	bl	800d928 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800d998:	4a08      	ldr	r2, [pc, #32]	; (800d9bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800d99a:	68fb      	ldr	r3, [r7, #12]
 800d99c:	601a      	str	r2, [r3, #0]
 800d99e:	68fb      	ldr	r3, [r7, #12]
 800d9a0:	68ba      	ldr	r2, [r7, #8]
 800d9a2:	605a      	str	r2, [r3, #4]
 800d9a4:	68fb      	ldr	r3, [r7, #12]
 800d9a6:	3308      	adds	r3, #8
 800d9a8:	463a      	mov	r2, r7
 800d9aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d9ae:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800d9b2:	68fb      	ldr	r3, [r7, #12]
 800d9b4:	4618      	mov	r0, r3
 800d9b6:	3710      	adds	r7, #16
 800d9b8:	46bd      	mov	sp, r7
 800d9ba:	bd80      	pop	{r7, pc}
 800d9bc:	080280b8 	.word	0x080280b8

0800d9c0 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800d9c0:	b580      	push	{r7, lr}
 800d9c2:	b082      	sub	sp, #8
 800d9c4:	af00      	add	r7, sp, #0
 800d9c6:	6078      	str	r0, [r7, #4]
 800d9c8:	687b      	ldr	r3, [r7, #4]
 800d9ca:	4618      	mov	r0, r3
 800d9cc:	f7ff fd92 	bl	800d4f4 <_ZN8touchgfx10TransitionC1Ev>
 800d9d0:	4a03      	ldr	r2, [pc, #12]	; (800d9e0 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800d9d2:	687b      	ldr	r3, [r7, #4]
 800d9d4:	601a      	str	r2, [r3, #0]
 800d9d6:	687b      	ldr	r3, [r7, #4]
 800d9d8:	4618      	mov	r0, r3
 800d9da:	3708      	adds	r7, #8
 800d9dc:	46bd      	mov	sp, r7
 800d9de:	bd80      	pop	{r7, pc}
 800d9e0:	08028040 	.word	0x08028040

0800d9e4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800d9e4:	b590      	push	{r4, r7, lr}
 800d9e6:	b08f      	sub	sp, #60	; 0x3c
 800d9e8:	af00      	add	r7, sp, #0
 800d9ea:	60f8      	str	r0, [r7, #12]
 800d9ec:	60b9      	str	r1, [r7, #8]
 800d9ee:	607a      	str	r2, [r7, #4]
 800d9f0:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800d9f2:	687b      	ldr	r3, [r7, #4]
 800d9f4:	689a      	ldr	r2, [r3, #8]
 800d9f6:	687b      	ldr	r3, [r7, #4]
 800d9f8:	689b      	ldr	r3, [r3, #8]
 800d9fa:	681b      	ldr	r3, [r3, #0]
 800d9fc:	3320      	adds	r3, #32
 800d9fe:	681b      	ldr	r3, [r3, #0]
 800da00:	4610      	mov	r0, r2
 800da02:	4798      	blx	r3
 800da04:	4603      	mov	r3, r0
 800da06:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800da0a:	d205      	bcs.n	800da18 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800da0c:	4b7d      	ldr	r3, [pc, #500]	; (800dc04 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800da0e:	4a7e      	ldr	r2, [pc, #504]	; (800dc08 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800da10:	21a3      	movs	r1, #163	; 0xa3
 800da12:	487e      	ldr	r0, [pc, #504]	; (800dc0c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800da14:	f018 fa26 	bl	8025e64 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800da18:	687b      	ldr	r3, [r7, #4]
 800da1a:	685a      	ldr	r2, [r3, #4]
 800da1c:	687b      	ldr	r3, [r7, #4]
 800da1e:	685b      	ldr	r3, [r3, #4]
 800da20:	681b      	ldr	r3, [r3, #0]
 800da22:	3320      	adds	r3, #32
 800da24:	681b      	ldr	r3, [r3, #0]
 800da26:	4610      	mov	r0, r2
 800da28:	4798      	blx	r3
 800da2a:	4603      	mov	r3, r0
 800da2c:	2b0f      	cmp	r3, #15
 800da2e:	d805      	bhi.n	800da3c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800da30:	4b77      	ldr	r3, [pc, #476]	; (800dc10 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800da32:	4a75      	ldr	r2, [pc, #468]	; (800dc08 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800da34:	21a4      	movs	r1, #164	; 0xa4
 800da36:	4875      	ldr	r0, [pc, #468]	; (800dc0c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800da38:	f018 fa14 	bl	8025e64 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800da3c:	687b      	ldr	r3, [r7, #4]
 800da3e:	68da      	ldr	r2, [r3, #12]
 800da40:	687b      	ldr	r3, [r7, #4]
 800da42:	68db      	ldr	r3, [r3, #12]
 800da44:	681b      	ldr	r3, [r3, #0]
 800da46:	3320      	adds	r3, #32
 800da48:	681b      	ldr	r3, [r3, #0]
 800da4a:	4610      	mov	r0, r2
 800da4c:	4798      	blx	r3
 800da4e:	4603      	mov	r3, r0
 800da50:	2b0b      	cmp	r3, #11
 800da52:	d805      	bhi.n	800da60 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800da54:	4b6f      	ldr	r3, [pc, #444]	; (800dc14 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800da56:	4a6c      	ldr	r2, [pc, #432]	; (800dc08 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800da58:	21a5      	movs	r1, #165	; 0xa5
 800da5a:	486c      	ldr	r0, [pc, #432]	; (800dc0c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800da5c:	f018 fa02 	bl	8025e64 <__assert_func>
 800da60:	68fb      	ldr	r3, [r7, #12]
 800da62:	62bb      	str	r3, [r7, #40]	; 0x28
 800da64:	68bb      	ldr	r3, [r7, #8]
 800da66:	627b      	str	r3, [r7, #36]	; 0x24
 800da68:	683b      	ldr	r3, [r7, #0]
 800da6a:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800da6c:	f007 fd0c 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 800da70:	4603      	mov	r3, r0
 800da72:	4618      	mov	r0, r3
 800da74:	f7ff fce8 	bl	800d448 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800da78:	6a3b      	ldr	r3, [r7, #32]
 800da7a:	681b      	ldr	r3, [r3, #0]
 800da7c:	2b00      	cmp	r3, #0
 800da7e:	d008      	beq.n	800da92 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800da80:	6a3b      	ldr	r3, [r7, #32]
 800da82:	681a      	ldr	r2, [r3, #0]
 800da84:	6a3b      	ldr	r3, [r7, #32]
 800da86:	681b      	ldr	r3, [r3, #0]
 800da88:	681b      	ldr	r3, [r3, #0]
 800da8a:	330c      	adds	r3, #12
 800da8c:	681b      	ldr	r3, [r3, #0]
 800da8e:	4610      	mov	r0, r2
 800da90:	4798      	blx	r3
    if (*currentTrans)
 800da92:	6a3b      	ldr	r3, [r7, #32]
 800da94:	681b      	ldr	r3, [r3, #0]
 800da96:	2b00      	cmp	r3, #0
 800da98:	d007      	beq.n	800daaa <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800da9a:	6a3b      	ldr	r3, [r7, #32]
 800da9c:	681a      	ldr	r2, [r3, #0]
 800da9e:	6a3b      	ldr	r3, [r7, #32]
 800daa0:	681b      	ldr	r3, [r3, #0]
 800daa2:	681b      	ldr	r3, [r3, #0]
 800daa4:	681b      	ldr	r3, [r3, #0]
 800daa6:	4610      	mov	r0, r2
 800daa8:	4798      	blx	r3
    if (*currentScreen)
 800daaa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800daac:	681b      	ldr	r3, [r3, #0]
 800daae:	2b00      	cmp	r3, #0
 800dab0:	d008      	beq.n	800dac4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800dab2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dab4:	681a      	ldr	r2, [r3, #0]
 800dab6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dab8:	681b      	ldr	r3, [r3, #0]
 800daba:	681b      	ldr	r3, [r3, #0]
 800dabc:	3314      	adds	r3, #20
 800dabe:	681b      	ldr	r3, [r3, #0]
 800dac0:	4610      	mov	r0, r2
 800dac2:	4798      	blx	r3
    if (*currentPresenter)
 800dac4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dac6:	681b      	ldr	r3, [r3, #0]
 800dac8:	2b00      	cmp	r3, #0
 800daca:	d008      	beq.n	800dade <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800dacc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dace:	681a      	ldr	r2, [r3, #0]
 800dad0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dad2:	681b      	ldr	r3, [r3, #0]
 800dad4:	681b      	ldr	r3, [r3, #0]
 800dad6:	3304      	adds	r3, #4
 800dad8:	681b      	ldr	r3, [r3, #0]
 800dada:	4610      	mov	r0, r2
 800dadc:	4798      	blx	r3
    if (*currentScreen)
 800dade:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dae0:	681b      	ldr	r3, [r3, #0]
 800dae2:	2b00      	cmp	r3, #0
 800dae4:	d007      	beq.n	800daf6 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800dae6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dae8:	681a      	ldr	r2, [r3, #0]
 800daea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800daec:	681b      	ldr	r3, [r3, #0]
 800daee:	681b      	ldr	r3, [r3, #0]
 800daf0:	681b      	ldr	r3, [r3, #0]
 800daf2:	4610      	mov	r0, r2
 800daf4:	4798      	blx	r3
    if (*currentPresenter)
 800daf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800daf8:	681b      	ldr	r3, [r3, #0]
 800dafa:	2b00      	cmp	r3, #0
 800dafc:	d008      	beq.n	800db10 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800dafe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db00:	681a      	ldr	r2, [r3, #0]
 800db02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db04:	681b      	ldr	r3, [r3, #0]
 800db06:	681b      	ldr	r3, [r3, #0]
 800db08:	3308      	adds	r3, #8
 800db0a:	681b      	ldr	r3, [r3, #0]
 800db0c:	4610      	mov	r0, r2
 800db0e:	4798      	blx	r3
}
 800db10:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800db12:	687b      	ldr	r3, [r7, #4]
 800db14:	68db      	ldr	r3, [r3, #12]
 800db16:	2100      	movs	r1, #0
 800db18:	4618      	mov	r0, r3
 800db1a:	f000 f87d 	bl	800dc18 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800db1e:	4603      	mov	r3, r0
 800db20:	4619      	mov	r1, r3
 800db22:	200c      	movs	r0, #12
 800db24:	f7ff fbfa 	bl	800d31c <_ZnwjPv>
 800db28:	4604      	mov	r4, r0
 800db2a:	4620      	mov	r0, r4
 800db2c:	f7ff ff48 	bl	800d9c0 <_ZN8touchgfx12NoTransitionC1Ev>
 800db30:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800db32:	687b      	ldr	r3, [r7, #4]
 800db34:	689b      	ldr	r3, [r3, #8]
 800db36:	2100      	movs	r1, #0
 800db38:	4618      	mov	r0, r3
 800db3a:	f000 f880 	bl	800dc3e <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 800db3e:	4603      	mov	r3, r0
 800db40:	4619      	mov	r1, r3
 800db42:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800db46:	f7ff fbe9 	bl	800d31c <_ZnwjPv>
 800db4a:	4604      	mov	r4, r0
 800db4c:	4620      	mov	r0, r4
 800db4e:	f001 fe47 	bl	800f7e0 <_ZN8MainViewC1Ev>
 800db52:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800db54:	687b      	ldr	r3, [r7, #4]
 800db56:	685b      	ldr	r3, [r3, #4]
 800db58:	2100      	movs	r1, #0
 800db5a:	4618      	mov	r0, r3
 800db5c:	f000 f882 	bl	800dc64 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 800db60:	4603      	mov	r3, r0
 800db62:	4619      	mov	r1, r3
 800db64:	2010      	movs	r0, #16
 800db66:	f7ff fbd9 	bl	800d31c <_ZnwjPv>
 800db6a:	4604      	mov	r4, r0
 800db6c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800db6e:	4620      	mov	r0, r4
 800db70:	f001 fdde 	bl	800f730 <_ZN13MainPresenterC1ER8MainView>
 800db74:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800db76:	683b      	ldr	r3, [r7, #0]
 800db78:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800db7a:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800db7c:	68bb      	ldr	r3, [r7, #8]
 800db7e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800db80:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800db82:	68fb      	ldr	r3, [r7, #12]
 800db84:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800db86:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800db88:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800db8a:	2b00      	cmp	r3, #0
 800db8c:	d002      	beq.n	800db94 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800db8e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800db90:	3304      	adds	r3, #4
 800db92:	e000      	b.n	800db96 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800db94:	2300      	movs	r3, #0
 800db96:	4619      	mov	r1, r3
 800db98:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800db9a:	f7ff fd9b 	bl	800d6d4 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800db9e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dba0:	3304      	adds	r3, #4
 800dba2:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800dba4:	4618      	mov	r0, r3
 800dba6:	f7ff fe08 	bl	800d7ba <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800dbaa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dbac:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800dbae:	4618      	mov	r0, r3
 800dbb0:	f000 f86b 	bl	800dc8a <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 800dbb4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dbb6:	61fb      	str	r3, [r7, #28]
 800dbb8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dbba:	61bb      	str	r3, [r7, #24]
 800dbbc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800dbbe:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800dbc0:	69fb      	ldr	r3, [r7, #28]
 800dbc2:	681b      	ldr	r3, [r3, #0]
 800dbc4:	330c      	adds	r3, #12
 800dbc6:	681b      	ldr	r3, [r3, #0]
 800dbc8:	69f8      	ldr	r0, [r7, #28]
 800dbca:	4798      	blx	r3
    newPresenter->activate();
 800dbcc:	69bb      	ldr	r3, [r7, #24]
 800dbce:	681b      	ldr	r3, [r3, #0]
 800dbd0:	681b      	ldr	r3, [r3, #0]
 800dbd2:	69b8      	ldr	r0, [r7, #24]
 800dbd4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800dbd6:	6979      	ldr	r1, [r7, #20]
 800dbd8:	69f8      	ldr	r0, [r7, #28]
 800dbda:	f009 f93b 	bl	8016e54 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800dbde:	697b      	ldr	r3, [r7, #20]
 800dbe0:	681b      	ldr	r3, [r3, #0]
 800dbe2:	3310      	adds	r3, #16
 800dbe4:	681b      	ldr	r3, [r3, #0]
 800dbe6:	6978      	ldr	r0, [r7, #20]
 800dbe8:	4798      	blx	r3
    newTransition->invalidate();
 800dbea:	697b      	ldr	r3, [r7, #20]
 800dbec:	681b      	ldr	r3, [r3, #0]
 800dbee:	3314      	adds	r3, #20
 800dbf0:	681b      	ldr	r3, [r3, #0]
 800dbf2:	6978      	ldr	r0, [r7, #20]
 800dbf4:	4798      	blx	r3
}
 800dbf6:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800dbf8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800dbfa:	4618      	mov	r0, r3
 800dbfc:	373c      	adds	r7, #60	; 0x3c
 800dbfe:	46bd      	mov	sp, r7
 800dc00:	bd90      	pop	{r4, r7, pc}
 800dc02:	bf00      	nop
 800dc04:	08026ed8 	.word	0x08026ed8
 800dc08:	08026f68 	.word	0x08026f68
 800dc0c:	08027068 	.word	0x08027068
 800dc10:	080270ac 	.word	0x080270ac
 800dc14:	08027150 	.word	0x08027150

0800dc18 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800dc18:	b580      	push	{r7, lr}
 800dc1a:	b082      	sub	sp, #8
 800dc1c:	af00      	add	r7, sp, #0
 800dc1e:	6078      	str	r0, [r7, #4]
 800dc20:	460b      	mov	r3, r1
 800dc22:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800dc24:	687b      	ldr	r3, [r7, #4]
 800dc26:	681b      	ldr	r3, [r3, #0]
 800dc28:	3324      	adds	r3, #36	; 0x24
 800dc2a:	681b      	ldr	r3, [r3, #0]
 800dc2c:	887a      	ldrh	r2, [r7, #2]
 800dc2e:	4611      	mov	r1, r2
 800dc30:	6878      	ldr	r0, [r7, #4]
 800dc32:	4798      	blx	r3
 800dc34:	4603      	mov	r3, r0
    }
 800dc36:	4618      	mov	r0, r3
 800dc38:	3708      	adds	r7, #8
 800dc3a:	46bd      	mov	sp, r7
 800dc3c:	bd80      	pop	{r7, pc}

0800dc3e <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 800dc3e:	b580      	push	{r7, lr}
 800dc40:	b082      	sub	sp, #8
 800dc42:	af00      	add	r7, sp, #0
 800dc44:	6078      	str	r0, [r7, #4]
 800dc46:	460b      	mov	r3, r1
 800dc48:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800dc4a:	687b      	ldr	r3, [r7, #4]
 800dc4c:	681b      	ldr	r3, [r3, #0]
 800dc4e:	3324      	adds	r3, #36	; 0x24
 800dc50:	681b      	ldr	r3, [r3, #0]
 800dc52:	887a      	ldrh	r2, [r7, #2]
 800dc54:	4611      	mov	r1, r2
 800dc56:	6878      	ldr	r0, [r7, #4]
 800dc58:	4798      	blx	r3
 800dc5a:	4603      	mov	r3, r0
    }
 800dc5c:	4618      	mov	r0, r3
 800dc5e:	3708      	adds	r7, #8
 800dc60:	46bd      	mov	sp, r7
 800dc62:	bd80      	pop	{r7, pc}

0800dc64 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 800dc64:	b580      	push	{r7, lr}
 800dc66:	b082      	sub	sp, #8
 800dc68:	af00      	add	r7, sp, #0
 800dc6a:	6078      	str	r0, [r7, #4]
 800dc6c:	460b      	mov	r3, r1
 800dc6e:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800dc70:	687b      	ldr	r3, [r7, #4]
 800dc72:	681b      	ldr	r3, [r3, #0]
 800dc74:	3324      	adds	r3, #36	; 0x24
 800dc76:	681b      	ldr	r3, [r3, #0]
 800dc78:	887a      	ldrh	r2, [r7, #2]
 800dc7a:	4611      	mov	r1, r2
 800dc7c:	6878      	ldr	r0, [r7, #4]
 800dc7e:	4798      	blx	r3
 800dc80:	4603      	mov	r3, r0
    }
 800dc82:	4618      	mov	r0, r3
 800dc84:	3708      	adds	r7, #8
 800dc86:	46bd      	mov	sp, r7
 800dc88:	bd80      	pop	{r7, pc}

0800dc8a <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800dc8a:	b480      	push	{r7}
 800dc8c:	b083      	sub	sp, #12
 800dc8e:	af00      	add	r7, sp, #0
 800dc90:	6078      	str	r0, [r7, #4]
 800dc92:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800dc94:	687b      	ldr	r3, [r7, #4]
 800dc96:	683a      	ldr	r2, [r7, #0]
 800dc98:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800dc9a:	bf00      	nop
 800dc9c:	370c      	adds	r7, #12
 800dc9e:	46bd      	mov	sp, r7
 800dca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dca4:	4770      	bx	lr
	...

0800dca8 <_ZN8touchgfx12NoTransitionD1Ev>:
 800dca8:	b580      	push	{r7, lr}
 800dcaa:	b082      	sub	sp, #8
 800dcac:	af00      	add	r7, sp, #0
 800dcae:	6078      	str	r0, [r7, #4]
 800dcb0:	4a05      	ldr	r2, [pc, #20]	; (800dcc8 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800dcb2:	687b      	ldr	r3, [r7, #4]
 800dcb4:	601a      	str	r2, [r3, #0]
 800dcb6:	687b      	ldr	r3, [r7, #4]
 800dcb8:	4618      	mov	r0, r3
 800dcba:	f7ff fc31 	bl	800d520 <_ZN8touchgfx10TransitionD1Ev>
 800dcbe:	687b      	ldr	r3, [r7, #4]
 800dcc0:	4618      	mov	r0, r3
 800dcc2:	3708      	adds	r7, #8
 800dcc4:	46bd      	mov	sp, r7
 800dcc6:	bd80      	pop	{r7, pc}
 800dcc8:	08028040 	.word	0x08028040

0800dccc <_ZN8touchgfx12NoTransitionD0Ev>:
 800dccc:	b580      	push	{r7, lr}
 800dcce:	b082      	sub	sp, #8
 800dcd0:	af00      	add	r7, sp, #0
 800dcd2:	6078      	str	r0, [r7, #4]
 800dcd4:	6878      	ldr	r0, [r7, #4]
 800dcd6:	f7ff ffe7 	bl	800dca8 <_ZN8touchgfx12NoTransitionD1Ev>
 800dcda:	210c      	movs	r1, #12
 800dcdc:	6878      	ldr	r0, [r7, #4]
 800dcde:	f018 f892 	bl	8025e06 <_ZdlPvj>
 800dce2:	687b      	ldr	r3, [r7, #4]
 800dce4:	4618      	mov	r0, r3
 800dce6:	3708      	adds	r7, #8
 800dce8:	46bd      	mov	sp, r7
 800dcea:	bd80      	pop	{r7, pc}

0800dcec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800dcec:	b580      	push	{r7, lr}
 800dcee:	b082      	sub	sp, #8
 800dcf0:	af00      	add	r7, sp, #0
 800dcf2:	6078      	str	r0, [r7, #4]
 800dcf4:	4a05      	ldr	r2, [pc, #20]	; (800dd0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800dcf6:	687b      	ldr	r3, [r7, #4]
 800dcf8:	601a      	str	r2, [r3, #0]
 800dcfa:	687b      	ldr	r3, [r7, #4]
 800dcfc:	4618      	mov	r0, r3
 800dcfe:	f7ff fbb1 	bl	800d464 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800dd02:	687b      	ldr	r3, [r7, #4]
 800dd04:	4618      	mov	r0, r3
 800dd06:	3708      	adds	r7, #8
 800dd08:	46bd      	mov	sp, r7
 800dd0a:	bd80      	pop	{r7, pc}
 800dd0c:	080280b8 	.word	0x080280b8

0800dd10 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800dd10:	b580      	push	{r7, lr}
 800dd12:	b082      	sub	sp, #8
 800dd14:	af00      	add	r7, sp, #0
 800dd16:	6078      	str	r0, [r7, #4]
 800dd18:	6878      	ldr	r0, [r7, #4]
 800dd1a:	f7ff ffe7 	bl	800dcec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800dd1e:	2110      	movs	r1, #16
 800dd20:	6878      	ldr	r0, [r7, #4]
 800dd22:	f018 f870 	bl	8025e06 <_ZdlPvj>
 800dd26:	687b      	ldr	r3, [r7, #4]
 800dd28:	4618      	mov	r0, r3
 800dd2a:	3708      	adds	r7, #8
 800dd2c:	46bd      	mov	sp, r7
 800dd2e:	bd80      	pop	{r7, pc}

0800dd30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800dd30:	b580      	push	{r7, lr}
 800dd32:	b082      	sub	sp, #8
 800dd34:	af00      	add	r7, sp, #0
 800dd36:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800dd38:	687b      	ldr	r3, [r7, #4]
 800dd3a:	685b      	ldr	r3, [r3, #4]
 800dd3c:	687a      	ldr	r2, [r7, #4]
 800dd3e:	68d2      	ldr	r2, [r2, #12]
 800dd40:	1052      	asrs	r2, r2, #1
 800dd42:	1899      	adds	r1, r3, r2
 800dd44:	687b      	ldr	r3, [r7, #4]
 800dd46:	68db      	ldr	r3, [r3, #12]
 800dd48:	f003 0301 	and.w	r3, r3, #1
 800dd4c:	2b00      	cmp	r3, #0
 800dd4e:	d102      	bne.n	800dd56 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800dd50:	687b      	ldr	r3, [r7, #4]
 800dd52:	689b      	ldr	r3, [r3, #8]
 800dd54:	e00a      	b.n	800dd6c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800dd56:	687b      	ldr	r3, [r7, #4]
 800dd58:	685b      	ldr	r3, [r3, #4]
 800dd5a:	687a      	ldr	r2, [r7, #4]
 800dd5c:	68d2      	ldr	r2, [r2, #12]
 800dd5e:	1052      	asrs	r2, r2, #1
 800dd60:	4413      	add	r3, r2
 800dd62:	681b      	ldr	r3, [r3, #0]
 800dd64:	687a      	ldr	r2, [r7, #4]
 800dd66:	6892      	ldr	r2, [r2, #8]
 800dd68:	4413      	add	r3, r2
 800dd6a:	681b      	ldr	r3, [r3, #0]
 800dd6c:	4608      	mov	r0, r1
 800dd6e:	4798      	blx	r3
    }
 800dd70:	bf00      	nop
 800dd72:	3708      	adds	r7, #8
 800dd74:	46bd      	mov	sp, r7
 800dd76:	bd80      	pop	{r7, pc}

0800dd78 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800dd78:	b480      	push	{r7}
 800dd7a:	b083      	sub	sp, #12
 800dd7c:	af00      	add	r7, sp, #0
 800dd7e:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800dd80:	687b      	ldr	r3, [r7, #4]
 800dd82:	685b      	ldr	r3, [r3, #4]
 800dd84:	2b00      	cmp	r3, #0
 800dd86:	d010      	beq.n	800ddaa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800dd88:	687b      	ldr	r3, [r7, #4]
 800dd8a:	689b      	ldr	r3, [r3, #8]
 800dd8c:	2b00      	cmp	r3, #0
 800dd8e:	d107      	bne.n	800dda0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800dd90:	687b      	ldr	r3, [r7, #4]
 800dd92:	68db      	ldr	r3, [r3, #12]
 800dd94:	f003 0301 	and.w	r3, r3, #1
 800dd98:	2b00      	cmp	r3, #0
 800dd9a:	d101      	bne.n	800dda0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800dd9c:	2301      	movs	r3, #1
 800dd9e:	e000      	b.n	800dda2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800dda0:	2300      	movs	r3, #0
 800dda2:	2b01      	cmp	r3, #1
 800dda4:	d001      	beq.n	800ddaa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800dda6:	2301      	movs	r3, #1
 800dda8:	e000      	b.n	800ddac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800ddaa:	2300      	movs	r3, #0
    }
 800ddac:	4618      	mov	r0, r3
 800ddae:	370c      	adds	r7, #12
 800ddb0:	46bd      	mov	sp, r7
 800ddb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddb6:	4770      	bx	lr

0800ddb8 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800ddb8:	b480      	push	{r7}
 800ddba:	b083      	sub	sp, #12
 800ddbc:	af00      	add	r7, sp, #0
 800ddbe:	6078      	str	r0, [r7, #4]
 800ddc0:	6039      	str	r1, [r7, #0]
        : color(col)
 800ddc2:	687b      	ldr	r3, [r7, #4]
 800ddc4:	683a      	ldr	r2, [r7, #0]
 800ddc6:	601a      	str	r2, [r3, #0]
    {
    }
 800ddc8:	687b      	ldr	r3, [r7, #4]
 800ddca:	4618      	mov	r0, r3
 800ddcc:	370c      	adds	r7, #12
 800ddce:	46bd      	mov	sp, r7
 800ddd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddd4:	4770      	bx	lr

0800ddd6 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800ddd6:	b480      	push	{r7}
 800ddd8:	b083      	sub	sp, #12
 800ddda:	af00      	add	r7, sp, #0
 800dddc:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800ddde:	687b      	ldr	r3, [r7, #4]
 800dde0:	2200      	movs	r2, #0
 800dde2:	801a      	strh	r2, [r3, #0]
 800dde4:	687b      	ldr	r3, [r7, #4]
 800dde6:	2200      	movs	r2, #0
 800dde8:	805a      	strh	r2, [r3, #2]
 800ddea:	687b      	ldr	r3, [r7, #4]
 800ddec:	2200      	movs	r2, #0
 800ddee:	809a      	strh	r2, [r3, #4]
 800ddf0:	687b      	ldr	r3, [r7, #4]
 800ddf2:	2200      	movs	r2, #0
 800ddf4:	80da      	strh	r2, [r3, #6]
    {
    }
 800ddf6:	687b      	ldr	r3, [r7, #4]
 800ddf8:	4618      	mov	r0, r3
 800ddfa:	370c      	adds	r7, #12
 800ddfc:	46bd      	mov	sp, r7
 800ddfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de02:	4770      	bx	lr

0800de04 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800de04:	b480      	push	{r7}
 800de06:	b085      	sub	sp, #20
 800de08:	af00      	add	r7, sp, #0
 800de0a:	60f8      	str	r0, [r7, #12]
 800de0c:	4608      	mov	r0, r1
 800de0e:	4611      	mov	r1, r2
 800de10:	461a      	mov	r2, r3
 800de12:	4603      	mov	r3, r0
 800de14:	817b      	strh	r3, [r7, #10]
 800de16:	460b      	mov	r3, r1
 800de18:	813b      	strh	r3, [r7, #8]
 800de1a:	4613      	mov	r3, r2
 800de1c:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800de1e:	68fb      	ldr	r3, [r7, #12]
 800de20:	897a      	ldrh	r2, [r7, #10]
 800de22:	801a      	strh	r2, [r3, #0]
 800de24:	68fb      	ldr	r3, [r7, #12]
 800de26:	893a      	ldrh	r2, [r7, #8]
 800de28:	805a      	strh	r2, [r3, #2]
 800de2a:	68fb      	ldr	r3, [r7, #12]
 800de2c:	88fa      	ldrh	r2, [r7, #6]
 800de2e:	809a      	strh	r2, [r3, #4]
 800de30:	68fb      	ldr	r3, [r7, #12]
 800de32:	8b3a      	ldrh	r2, [r7, #24]
 800de34:	80da      	strh	r2, [r3, #6]
    {
    }
 800de36:	68fb      	ldr	r3, [r7, #12]
 800de38:	4618      	mov	r0, r3
 800de3a:	3714      	adds	r7, #20
 800de3c:	46bd      	mov	sp, r7
 800de3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de42:	4770      	bx	lr

0800de44 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800de44:	b480      	push	{r7}
 800de46:	b083      	sub	sp, #12
 800de48:	af00      	add	r7, sp, #0
 800de4a:	6078      	str	r0, [r7, #4]
 800de4c:	460b      	mov	r3, r1
 800de4e:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800de50:	687b      	ldr	r3, [r7, #4]
 800de52:	887a      	ldrh	r2, [r7, #2]
 800de54:	801a      	strh	r2, [r3, #0]
    {
    }
 800de56:	687b      	ldr	r3, [r7, #4]
 800de58:	4618      	mov	r0, r3
 800de5a:	370c      	adds	r7, #12
 800de5c:	46bd      	mov	sp, r7
 800de5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de62:	4770      	bx	lr

0800de64 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800de64:	b580      	push	{r7, lr}
 800de66:	b082      	sub	sp, #8
 800de68:	af00      	add	r7, sp, #0
 800de6a:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800de6c:	4a14      	ldr	r2, [pc, #80]	; (800dec0 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800de6e:	687b      	ldr	r3, [r7, #4]
 800de70:	601a      	str	r2, [r3, #0]
        : rect(),
 800de72:	687b      	ldr	r3, [r7, #4]
 800de74:	3304      	adds	r3, #4
 800de76:	4618      	mov	r0, r3
 800de78:	f7ff ffad 	bl	800ddd6 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800de7c:	687b      	ldr	r3, [r7, #4]
 800de7e:	330c      	adds	r3, #12
 800de80:	4618      	mov	r0, r3
 800de82:	f7ff ffa8 	bl	800ddd6 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800de86:	687b      	ldr	r3, [r7, #4]
 800de88:	2200      	movs	r2, #0
 800de8a:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800de8c:	687b      	ldr	r3, [r7, #4]
 800de8e:	2200      	movs	r2, #0
 800de90:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800de92:	687b      	ldr	r3, [r7, #4]
 800de94:	2200      	movs	r2, #0
 800de96:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800de98:	687b      	ldr	r3, [r7, #4]
 800de9a:	2200      	movs	r2, #0
 800de9c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800de9e:	687b      	ldr	r3, [r7, #4]
 800dea0:	2200      	movs	r2, #0
 800dea2:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800dea4:	687b      	ldr	r3, [r7, #4]
 800dea6:	2200      	movs	r2, #0
 800dea8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800deac:	687b      	ldr	r3, [r7, #4]
 800deae:	2201      	movs	r2, #1
 800deb0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800deb4:	687b      	ldr	r3, [r7, #4]
 800deb6:	4618      	mov	r0, r3
 800deb8:	3708      	adds	r7, #8
 800deba:	46bd      	mov	sp, r7
 800debc:	bd80      	pop	{r7, pc}
 800debe:	bf00      	nop
 800dec0:	08028eb8 	.word	0x08028eb8

0800dec4 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800dec4:	b480      	push	{r7}
 800dec6:	b083      	sub	sp, #12
 800dec8:	af00      	add	r7, sp, #0
 800deca:	6078      	str	r0, [r7, #4]
    {
 800decc:	4a04      	ldr	r2, [pc, #16]	; (800dee0 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800dece:	687b      	ldr	r3, [r7, #4]
 800ded0:	601a      	str	r2, [r3, #0]
    }
 800ded2:	687b      	ldr	r3, [r7, #4]
 800ded4:	4618      	mov	r0, r3
 800ded6:	370c      	adds	r7, #12
 800ded8:	46bd      	mov	sp, r7
 800deda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dede:	4770      	bx	lr
 800dee0:	08028eb8 	.word	0x08028eb8

0800dee4 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800dee4:	b580      	push	{r7, lr}
 800dee6:	b082      	sub	sp, #8
 800dee8:	af00      	add	r7, sp, #0
 800deea:	6078      	str	r0, [r7, #4]
    }
 800deec:	6878      	ldr	r0, [r7, #4]
 800deee:	f7ff ffe9 	bl	800dec4 <_ZN8touchgfx8DrawableD1Ev>
 800def2:	2128      	movs	r1, #40	; 0x28
 800def4:	6878      	ldr	r0, [r7, #4]
 800def6:	f017 ff86 	bl	8025e06 <_ZdlPvj>
 800defa:	687b      	ldr	r3, [r7, #4]
 800defc:	4618      	mov	r0, r3
 800defe:	3708      	adds	r7, #8
 800df00:	46bd      	mov	sp, r7
 800df02:	bd80      	pop	{r7, pc}

0800df04 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800df04:	b580      	push	{r7, lr}
 800df06:	b082      	sub	sp, #8
 800df08:	af00      	add	r7, sp, #0
 800df0a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800df0c:	687b      	ldr	r3, [r7, #4]
 800df0e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800df12:	2b00      	cmp	r3, #0
 800df14:	d005      	beq.n	800df22 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800df16:	687b      	ldr	r3, [r7, #4]
 800df18:	681b      	ldr	r3, [r3, #0]
 800df1a:	3314      	adds	r3, #20
 800df1c:	681b      	ldr	r3, [r3, #0]
 800df1e:	6878      	ldr	r0, [r7, #4]
 800df20:	4798      	blx	r3
        }
    }
 800df22:	bf00      	nop
 800df24:	3708      	adds	r7, #8
 800df26:	46bd      	mov	sp, r7
 800df28:	bd80      	pop	{r7, pc}

0800df2a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800df2a:	b480      	push	{r7}
 800df2c:	b083      	sub	sp, #12
 800df2e:	af00      	add	r7, sp, #0
 800df30:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800df32:	2300      	movs	r3, #0
    }
 800df34:	4618      	mov	r0, r3
 800df36:	370c      	adds	r7, #12
 800df38:	46bd      	mov	sp, r7
 800df3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df3e:	4770      	bx	lr

0800df40 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800df40:	b580      	push	{r7, lr}
 800df42:	b084      	sub	sp, #16
 800df44:	af00      	add	r7, sp, #0
 800df46:	60f8      	str	r0, [r7, #12]
 800df48:	4608      	mov	r0, r1
 800df4a:	4611      	mov	r1, r2
 800df4c:	461a      	mov	r2, r3
 800df4e:	4603      	mov	r3, r0
 800df50:	817b      	strh	r3, [r7, #10]
 800df52:	460b      	mov	r3, r1
 800df54:	813b      	strh	r3, [r7, #8]
 800df56:	4613      	mov	r3, r2
 800df58:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800df5a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800df5e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800df62:	4619      	mov	r1, r3
 800df64:	68f8      	ldr	r0, [r7, #12]
 800df66:	f000 f82a 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800df6a:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800df6e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800df72:	4619      	mov	r1, r3
 800df74:	68f8      	ldr	r0, [r7, #12]
 800df76:	f000 f87e 	bl	800e076 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800df7a:	bf00      	nop
 800df7c:	3710      	adds	r7, #16
 800df7e:	46bd      	mov	sp, r7
 800df80:	bd80      	pop	{r7, pc}

0800df82 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800df82:	b480      	push	{r7}
 800df84:	b083      	sub	sp, #12
 800df86:	af00      	add	r7, sp, #0
 800df88:	6078      	str	r0, [r7, #4]
 800df8a:	460b      	mov	r3, r1
 800df8c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800df8e:	687b      	ldr	r3, [r7, #4]
 800df90:	887a      	ldrh	r2, [r7, #2]
 800df92:	809a      	strh	r2, [r3, #4]
    }
 800df94:	bf00      	nop
 800df96:	370c      	adds	r7, #12
 800df98:	46bd      	mov	sp, r7
 800df9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df9e:	4770      	bx	lr

0800dfa0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800dfa0:	b480      	push	{r7}
 800dfa2:	b083      	sub	sp, #12
 800dfa4:	af00      	add	r7, sp, #0
 800dfa6:	6078      	str	r0, [r7, #4]
 800dfa8:	460b      	mov	r3, r1
 800dfaa:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800dfac:	687b      	ldr	r3, [r7, #4]
 800dfae:	887a      	ldrh	r2, [r7, #2]
 800dfb0:	80da      	strh	r2, [r3, #6]
    }
 800dfb2:	bf00      	nop
 800dfb4:	370c      	adds	r7, #12
 800dfb6:	46bd      	mov	sp, r7
 800dfb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfbc:	4770      	bx	lr

0800dfbe <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800dfbe:	b580      	push	{r7, lr}
 800dfc0:	b082      	sub	sp, #8
 800dfc2:	af00      	add	r7, sp, #0
 800dfc4:	6078      	str	r0, [r7, #4]
 800dfc6:	460b      	mov	r3, r1
 800dfc8:	807b      	strh	r3, [r7, #2]
 800dfca:	4613      	mov	r3, r2
 800dfcc:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800dfce:	687b      	ldr	r3, [r7, #4]
 800dfd0:	681b      	ldr	r3, [r3, #0]
 800dfd2:	3330      	adds	r3, #48	; 0x30
 800dfd4:	681b      	ldr	r3, [r3, #0]
 800dfd6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800dfda:	4611      	mov	r1, r2
 800dfdc:	6878      	ldr	r0, [r7, #4]
 800dfde:	4798      	blx	r3
        setY(y);
 800dfe0:	687b      	ldr	r3, [r7, #4]
 800dfe2:	681b      	ldr	r3, [r3, #0]
 800dfe4:	3334      	adds	r3, #52	; 0x34
 800dfe6:	681b      	ldr	r3, [r3, #0]
 800dfe8:	f9b7 2000 	ldrsh.w	r2, [r7]
 800dfec:	4611      	mov	r1, r2
 800dfee:	6878      	ldr	r0, [r7, #4]
 800dff0:	4798      	blx	r3
    }
 800dff2:	bf00      	nop
 800dff4:	3708      	adds	r7, #8
 800dff6:	46bd      	mov	sp, r7
 800dff8:	bd80      	pop	{r7, pc}

0800dffa <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800dffa:	b480      	push	{r7}
 800dffc:	b083      	sub	sp, #12
 800dffe:	af00      	add	r7, sp, #0
 800e000:	6078      	str	r0, [r7, #4]
 800e002:	460b      	mov	r3, r1
 800e004:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800e006:	687b      	ldr	r3, [r7, #4]
 800e008:	887a      	ldrh	r2, [r7, #2]
 800e00a:	811a      	strh	r2, [r3, #8]
    }
 800e00c:	bf00      	nop
 800e00e:	370c      	adds	r7, #12
 800e010:	46bd      	mov	sp, r7
 800e012:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e016:	4770      	bx	lr

0800e018 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800e018:	b480      	push	{r7}
 800e01a:	b083      	sub	sp, #12
 800e01c:	af00      	add	r7, sp, #0
 800e01e:	6078      	str	r0, [r7, #4]
 800e020:	460b      	mov	r3, r1
 800e022:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800e024:	687b      	ldr	r3, [r7, #4]
 800e026:	887a      	ldrh	r2, [r7, #2]
 800e028:	815a      	strh	r2, [r3, #10]
    }
 800e02a:	bf00      	nop
 800e02c:	370c      	adds	r7, #12
 800e02e:	46bd      	mov	sp, r7
 800e030:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e034:	4770      	bx	lr

0800e036 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800e036:	b480      	push	{r7}
 800e038:	b083      	sub	sp, #12
 800e03a:	af00      	add	r7, sp, #0
 800e03c:	6078      	str	r0, [r7, #4]
    {
    }
 800e03e:	bf00      	nop
 800e040:	370c      	adds	r7, #12
 800e042:	46bd      	mov	sp, r7
 800e044:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e048:	4770      	bx	lr

0800e04a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800e04a:	b480      	push	{r7}
 800e04c:	b083      	sub	sp, #12
 800e04e:	af00      	add	r7, sp, #0
 800e050:	6078      	str	r0, [r7, #4]
 800e052:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800e054:	bf00      	nop
 800e056:	370c      	adds	r7, #12
 800e058:	46bd      	mov	sp, r7
 800e05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e05e:	4770      	bx	lr

0800e060 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800e060:	b480      	push	{r7}
 800e062:	b083      	sub	sp, #12
 800e064:	af00      	add	r7, sp, #0
 800e066:	6078      	str	r0, [r7, #4]
 800e068:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800e06a:	bf00      	nop
 800e06c:	370c      	adds	r7, #12
 800e06e:	46bd      	mov	sp, r7
 800e070:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e074:	4770      	bx	lr

0800e076 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800e076:	b580      	push	{r7, lr}
 800e078:	b082      	sub	sp, #8
 800e07a:	af00      	add	r7, sp, #0
 800e07c:	6078      	str	r0, [r7, #4]
 800e07e:	460b      	mov	r3, r1
 800e080:	807b      	strh	r3, [r7, #2]
 800e082:	4613      	mov	r3, r2
 800e084:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800e086:	687b      	ldr	r3, [r7, #4]
 800e088:	681b      	ldr	r3, [r3, #0]
 800e08a:	3338      	adds	r3, #56	; 0x38
 800e08c:	681b      	ldr	r3, [r3, #0]
 800e08e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800e092:	4611      	mov	r1, r2
 800e094:	6878      	ldr	r0, [r7, #4]
 800e096:	4798      	blx	r3
        setHeight(height);
 800e098:	687b      	ldr	r3, [r7, #4]
 800e09a:	681b      	ldr	r3, [r3, #0]
 800e09c:	333c      	adds	r3, #60	; 0x3c
 800e09e:	681b      	ldr	r3, [r3, #0]
 800e0a0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800e0a4:	4611      	mov	r1, r2
 800e0a6:	6878      	ldr	r0, [r7, #4]
 800e0a8:	4798      	blx	r3
    }
 800e0aa:	bf00      	nop
 800e0ac:	3708      	adds	r7, #8
 800e0ae:	46bd      	mov	sp, r7
 800e0b0:	bd80      	pop	{r7, pc}

0800e0b2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800e0b2:	b480      	push	{r7}
 800e0b4:	b083      	sub	sp, #12
 800e0b6:	af00      	add	r7, sp, #0
 800e0b8:	6078      	str	r0, [r7, #4]
 800e0ba:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800e0bc:	bf00      	nop
 800e0be:	370c      	adds	r7, #12
 800e0c0:	46bd      	mov	sp, r7
 800e0c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0c6:	4770      	bx	lr

0800e0c8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800e0c8:	b480      	push	{r7}
 800e0ca:	b083      	sub	sp, #12
 800e0cc:	af00      	add	r7, sp, #0
 800e0ce:	6078      	str	r0, [r7, #4]
    {
    }
 800e0d0:	bf00      	nop
 800e0d2:	370c      	adds	r7, #12
 800e0d4:	46bd      	mov	sp, r7
 800e0d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0da:	4770      	bx	lr

0800e0dc <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800e0dc:	b480      	push	{r7}
 800e0de:	b083      	sub	sp, #12
 800e0e0:	af00      	add	r7, sp, #0
 800e0e2:	6078      	str	r0, [r7, #4]
 800e0e4:	460b      	mov	r3, r1
 800e0e6:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800e0e8:	687b      	ldr	r3, [r7, #4]
 800e0ea:	78fa      	ldrb	r2, [r7, #3]
 800e0ec:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800e0f0:	bf00      	nop
 800e0f2:	370c      	adds	r7, #12
 800e0f4:	46bd      	mov	sp, r7
 800e0f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0fa:	4770      	bx	lr

0800e0fc <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800e0fc:	b480      	push	{r7}
 800e0fe:	b083      	sub	sp, #12
 800e100:	af00      	add	r7, sp, #0
 800e102:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800e10a:	4618      	mov	r0, r3
 800e10c:	370c      	adds	r7, #12
 800e10e:	46bd      	mov	sp, r7
 800e110:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e114:	4770      	bx	lr

0800e116 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800e116:	b480      	push	{r7}
 800e118:	b083      	sub	sp, #12
 800e11a:	af00      	add	r7, sp, #0
 800e11c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800e11e:	687b      	ldr	r3, [r7, #4]
 800e120:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800e124:	4618      	mov	r0, r3
 800e126:	370c      	adds	r7, #12
 800e128:	46bd      	mov	sp, r7
 800e12a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e12e:	4770      	bx	lr

0800e130 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800e130:	b580      	push	{r7, lr}
 800e132:	b082      	sub	sp, #8
 800e134:	af00      	add	r7, sp, #0
 800e136:	6078      	str	r0, [r7, #4]
 800e138:	460b      	mov	r3, r1
 800e13a:	807b      	strh	r3, [r7, #2]
 800e13c:	4613      	mov	r3, r2
 800e13e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800e140:	687b      	ldr	r3, [r7, #4]
 800e142:	681b      	ldr	r3, [r3, #0]
 800e144:	3354      	adds	r3, #84	; 0x54
 800e146:	681b      	ldr	r3, [r3, #0]
 800e148:	8879      	ldrh	r1, [r7, #2]
 800e14a:	687a      	ldr	r2, [r7, #4]
 800e14c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800e150:	b292      	uxth	r2, r2
 800e152:	1a8a      	subs	r2, r1, r2
 800e154:	b292      	uxth	r2, r2
 800e156:	b210      	sxth	r0, r2
 800e158:	8839      	ldrh	r1, [r7, #0]
 800e15a:	687a      	ldr	r2, [r7, #4]
 800e15c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800e160:	b292      	uxth	r2, r2
 800e162:	1a8a      	subs	r2, r1, r2
 800e164:	b292      	uxth	r2, r2
 800e166:	b212      	sxth	r2, r2
 800e168:	4601      	mov	r1, r0
 800e16a:	6878      	ldr	r0, [r7, #4]
 800e16c:	4798      	blx	r3
    }
 800e16e:	bf00      	nop
 800e170:	3708      	adds	r7, #8
 800e172:	46bd      	mov	sp, r7
 800e174:	bd80      	pop	{r7, pc}

0800e176 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800e176:	b480      	push	{r7}
 800e178:	b083      	sub	sp, #12
 800e17a:	af00      	add	r7, sp, #0
 800e17c:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800e17e:	687b      	ldr	r3, [r7, #4]
 800e180:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e184:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800e186:	687b      	ldr	r3, [r7, #4]
 800e188:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e18c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800e18e:	687b      	ldr	r3, [r7, #4]
 800e190:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e194:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800e196:	bf00      	nop
 800e198:	370c      	adds	r7, #12
 800e19a:	46bd      	mov	sp, r7
 800e19c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1a0:	4770      	bx	lr

0800e1a2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800e1a2:	b580      	push	{r7, lr}
 800e1a4:	b084      	sub	sp, #16
 800e1a6:	af00      	add	r7, sp, #0
 800e1a8:	60f8      	str	r0, [r7, #12]
 800e1aa:	60b9      	str	r1, [r7, #8]
 800e1ac:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800e1ae:	68f8      	ldr	r0, [r7, #12]
 800e1b0:	f7ff ffe1 	bl	800e176 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800e1b4:	687b      	ldr	r3, [r7, #4]
 800e1b6:	681a      	ldr	r2, [r3, #0]
 800e1b8:	68fb      	ldr	r3, [r7, #12]
 800e1ba:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800e1bc:	687b      	ldr	r3, [r7, #4]
 800e1be:	68fa      	ldr	r2, [r7, #12]
 800e1c0:	601a      	str	r2, [r3, #0]
    }
 800e1c2:	bf00      	nop
 800e1c4:	3710      	adds	r7, #16
 800e1c6:	46bd      	mov	sp, r7
 800e1c8:	bd80      	pop	{r7, pc}
	...

0800e1cc <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800e1cc:	b580      	push	{r7, lr}
 800e1ce:	b082      	sub	sp, #8
 800e1d0:	af00      	add	r7, sp, #0
 800e1d2:	6078      	str	r0, [r7, #4]
    {
 800e1d4:	4a06      	ldr	r2, [pc, #24]	; (800e1f0 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800e1d6:	687b      	ldr	r3, [r7, #4]
 800e1d8:	601a      	str	r2, [r3, #0]
 800e1da:	687b      	ldr	r3, [r7, #4]
 800e1dc:	3304      	adds	r3, #4
 800e1de:	4618      	mov	r0, r3
 800e1e0:	f000 fece 	bl	800ef80 <_ZN8touchgfx9ContainerD1Ev>
    }
 800e1e4:	687b      	ldr	r3, [r7, #4]
 800e1e6:	4618      	mov	r0, r3
 800e1e8:	3708      	adds	r7, #8
 800e1ea:	46bd      	mov	sp, r7
 800e1ec:	bd80      	pop	{r7, pc}
 800e1ee:	bf00      	nop
 800e1f0:	08028fbc 	.word	0x08028fbc

0800e1f4 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800e1f4:	b580      	push	{r7, lr}
 800e1f6:	b082      	sub	sp, #8
 800e1f8:	af00      	add	r7, sp, #0
 800e1fa:	6078      	str	r0, [r7, #4]
    }
 800e1fc:	6878      	ldr	r0, [r7, #4]
 800e1fe:	f7ff ffe5 	bl	800e1cc <_ZN8touchgfx6ScreenD1Ev>
 800e202:	213c      	movs	r1, #60	; 0x3c
 800e204:	6878      	ldr	r0, [r7, #4]
 800e206:	f017 fdfe 	bl	8025e06 <_ZdlPvj>
 800e20a:	687b      	ldr	r3, [r7, #4]
 800e20c:	4618      	mov	r0, r3
 800e20e:	3708      	adds	r7, #8
 800e210:	46bd      	mov	sp, r7
 800e212:	bd80      	pop	{r7, pc}

0800e214 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800e214:	b480      	push	{r7}
 800e216:	b083      	sub	sp, #12
 800e218:	af00      	add	r7, sp, #0
 800e21a:	6078      	str	r0, [r7, #4]
    {
    }
 800e21c:	bf00      	nop
 800e21e:	370c      	adds	r7, #12
 800e220:	46bd      	mov	sp, r7
 800e222:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e226:	4770      	bx	lr

0800e228 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800e228:	b480      	push	{r7}
 800e22a:	b083      	sub	sp, #12
 800e22c:	af00      	add	r7, sp, #0
 800e22e:	6078      	str	r0, [r7, #4]
    {
    }
 800e230:	bf00      	nop
 800e232:	370c      	adds	r7, #12
 800e234:	46bd      	mov	sp, r7
 800e236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e23a:	4770      	bx	lr

0800e23c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800e23c:	b480      	push	{r7}
 800e23e:	b083      	sub	sp, #12
 800e240:	af00      	add	r7, sp, #0
 800e242:	6078      	str	r0, [r7, #4]
    {
    }
 800e244:	bf00      	nop
 800e246:	370c      	adds	r7, #12
 800e248:	46bd      	mov	sp, r7
 800e24a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e24e:	4770      	bx	lr

0800e250 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800e250:	b480      	push	{r7}
 800e252:	b083      	sub	sp, #12
 800e254:	af00      	add	r7, sp, #0
 800e256:	6078      	str	r0, [r7, #4]
    {
    }
 800e258:	bf00      	nop
 800e25a:	370c      	adds	r7, #12
 800e25c:	46bd      	mov	sp, r7
 800e25e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e262:	4770      	bx	lr

0800e264 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800e264:	b480      	push	{r7}
 800e266:	b083      	sub	sp, #12
 800e268:	af00      	add	r7, sp, #0
 800e26a:	6078      	str	r0, [r7, #4]
 800e26c:	460b      	mov	r3, r1
 800e26e:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800e270:	bf00      	nop
 800e272:	370c      	adds	r7, #12
 800e274:	46bd      	mov	sp, r7
 800e276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e27a:	4770      	bx	lr

0800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800e27c:	b580      	push	{r7, lr}
 800e27e:	b082      	sub	sp, #8
 800e280:	af00      	add	r7, sp, #0
 800e282:	6078      	str	r0, [r7, #4]
 800e284:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800e286:	687b      	ldr	r3, [r7, #4]
 800e288:	3304      	adds	r3, #4
 800e28a:	6839      	ldr	r1, [r7, #0]
 800e28c:	4618      	mov	r0, r3
 800e28e:	f003 fa49 	bl	8011724 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800e292:	bf00      	nop
 800e294:	3708      	adds	r7, #8
 800e296:	46bd      	mov	sp, r7
 800e298:	bd80      	pop	{r7, pc}

0800e29a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800e29a:	b580      	push	{r7, lr}
 800e29c:	b084      	sub	sp, #16
 800e29e:	af00      	add	r7, sp, #0
 800e2a0:	60f8      	str	r0, [r7, #12]
 800e2a2:	607b      	str	r3, [r7, #4]
 800e2a4:	460b      	mov	r3, r1
 800e2a6:	817b      	strh	r3, [r7, #10]
 800e2a8:	4613      	mov	r3, r2
 800e2aa:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800e2ac:	68fb      	ldr	r3, [r7, #12]
 800e2ae:	4618      	mov	r0, r3
 800e2b0:	f7ff ff24 	bl	800e0fc <_ZNK8touchgfx8Drawable9isVisibleEv>
 800e2b4:	4603      	mov	r3, r0
 800e2b6:	2b00      	cmp	r3, #0
 800e2b8:	d008      	beq.n	800e2cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800e2ba:	68fb      	ldr	r3, [r7, #12]
 800e2bc:	4618      	mov	r0, r3
 800e2be:	f7ff ff2a 	bl	800e116 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800e2c2:	4603      	mov	r3, r0
 800e2c4:	2b00      	cmp	r3, #0
 800e2c6:	d001      	beq.n	800e2cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800e2c8:	2301      	movs	r3, #1
 800e2ca:	e000      	b.n	800e2ce <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800e2cc:	2300      	movs	r3, #0
 800e2ce:	2b00      	cmp	r3, #0
 800e2d0:	d002      	beq.n	800e2d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800e2d2:	68fa      	ldr	r2, [r7, #12]
 800e2d4:	687b      	ldr	r3, [r7, #4]
 800e2d6:	601a      	str	r2, [r3, #0]
        }
    }
 800e2d8:	bf00      	nop
 800e2da:	3710      	adds	r7, #16
 800e2dc:	46bd      	mov	sp, r7
 800e2de:	bd80      	pop	{r7, pc}

0800e2e0 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800e2e0:	b580      	push	{r7, lr}
 800e2e2:	b082      	sub	sp, #8
 800e2e4:	af00      	add	r7, sp, #0
 800e2e6:	6078      	str	r0, [r7, #4]
 800e2e8:	687b      	ldr	r3, [r7, #4]
 800e2ea:	4618      	mov	r0, r3
 800e2ec:	f7ff fdba 	bl	800de64 <_ZN8touchgfx8DrawableC1Ev>
 800e2f0:	4a03      	ldr	r2, [pc, #12]	; (800e300 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800e2f2:	687b      	ldr	r3, [r7, #4]
 800e2f4:	601a      	str	r2, [r3, #0]
 800e2f6:	687b      	ldr	r3, [r7, #4]
 800e2f8:	4618      	mov	r0, r3
 800e2fa:	3708      	adds	r7, #8
 800e2fc:	46bd      	mov	sp, r7
 800e2fe:	bd80      	pop	{r7, pc}
 800e300:	080282b8 	.word	0x080282b8

0800e304 <_ZN8touchgfx6WidgetD1Ev>:
 800e304:	b580      	push	{r7, lr}
 800e306:	b082      	sub	sp, #8
 800e308:	af00      	add	r7, sp, #0
 800e30a:	6078      	str	r0, [r7, #4]
 800e30c:	4a05      	ldr	r2, [pc, #20]	; (800e324 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800e30e:	687b      	ldr	r3, [r7, #4]
 800e310:	601a      	str	r2, [r3, #0]
 800e312:	687b      	ldr	r3, [r7, #4]
 800e314:	4618      	mov	r0, r3
 800e316:	f7ff fdd5 	bl	800dec4 <_ZN8touchgfx8DrawableD1Ev>
 800e31a:	687b      	ldr	r3, [r7, #4]
 800e31c:	4618      	mov	r0, r3
 800e31e:	3708      	adds	r7, #8
 800e320:	46bd      	mov	sp, r7
 800e322:	bd80      	pop	{r7, pc}
 800e324:	080282b8 	.word	0x080282b8

0800e328 <_ZN8touchgfx6WidgetD0Ev>:
 800e328:	b580      	push	{r7, lr}
 800e32a:	b082      	sub	sp, #8
 800e32c:	af00      	add	r7, sp, #0
 800e32e:	6078      	str	r0, [r7, #4]
 800e330:	6878      	ldr	r0, [r7, #4]
 800e332:	f7ff ffe7 	bl	800e304 <_ZN8touchgfx6WidgetD1Ev>
 800e336:	2128      	movs	r1, #40	; 0x28
 800e338:	6878      	ldr	r0, [r7, #4]
 800e33a:	f017 fd64 	bl	8025e06 <_ZdlPvj>
 800e33e:	687b      	ldr	r3, [r7, #4]
 800e340:	4618      	mov	r0, r3
 800e342:	3708      	adds	r7, #8
 800e344:	46bd      	mov	sp, r7
 800e346:	bd80      	pop	{r7, pc}

0800e348 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800e348:	b580      	push	{r7, lr}
 800e34a:	b082      	sub	sp, #8
 800e34c:	af00      	add	r7, sp, #0
 800e34e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800e350:	687b      	ldr	r3, [r7, #4]
 800e352:	4618      	mov	r0, r3
 800e354:	2326      	movs	r3, #38	; 0x26
 800e356:	461a      	mov	r2, r3
 800e358:	2100      	movs	r1, #0
 800e35a:	f017 ff88 	bl	802626e <memset>
 800e35e:	687b      	ldr	r3, [r7, #4]
 800e360:	4618      	mov	r0, r3
 800e362:	f7ff ffbd 	bl	800e2e0 <_ZN8touchgfx6WidgetC1Ev>
 800e366:	4a09      	ldr	r2, [pc, #36]	; (800e38c <_ZN8touchgfx3BoxC1Ev+0x44>)
 800e368:	687b      	ldr	r3, [r7, #4]
 800e36a:	601a      	str	r2, [r3, #0]
 800e36c:	687b      	ldr	r3, [r7, #4]
 800e36e:	22ff      	movs	r2, #255	; 0xff
 800e370:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800e374:	687b      	ldr	r3, [r7, #4]
 800e376:	3328      	adds	r3, #40	; 0x28
 800e378:	2100      	movs	r1, #0
 800e37a:	4618      	mov	r0, r3
 800e37c:	f7ff fd1c 	bl	800ddb8 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800e380:	687b      	ldr	r3, [r7, #4]
 800e382:	4618      	mov	r0, r3
 800e384:	3708      	adds	r7, #8
 800e386:	46bd      	mov	sp, r7
 800e388:	bd80      	pop	{r7, pc}
 800e38a:	bf00      	nop
 800e38c:	08028c34 	.word	0x08028c34

0800e390 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800e390:	b480      	push	{r7}
 800e392:	b083      	sub	sp, #12
 800e394:	af00      	add	r7, sp, #0
 800e396:	6078      	str	r0, [r7, #4]
 800e398:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	683a      	ldr	r2, [r7, #0]
 800e39e:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800e3a0:	bf00      	nop
 800e3a2:	370c      	adds	r7, #12
 800e3a4:	46bd      	mov	sp, r7
 800e3a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3aa:	4770      	bx	lr

0800e3ac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800e3ac:	b580      	push	{r7, lr}
 800e3ae:	b082      	sub	sp, #8
 800e3b0:	af00      	add	r7, sp, #0
 800e3b2:	6078      	str	r0, [r7, #4]
 800e3b4:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800e3b6:	687b      	ldr	r3, [r7, #4]
 800e3b8:	4618      	mov	r0, r3
 800e3ba:	2326      	movs	r3, #38	; 0x26
 800e3bc:	461a      	mov	r2, r3
 800e3be:	2100      	movs	r1, #0
 800e3c0:	f017 ff55 	bl	802626e <memset>
 800e3c4:	687b      	ldr	r3, [r7, #4]
 800e3c6:	4618      	mov	r0, r3
 800e3c8:	f7ff ff8a 	bl	800e2e0 <_ZN8touchgfx6WidgetC1Ev>
 800e3cc:	4a09      	ldr	r2, [pc, #36]	; (800e3f4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800e3ce:	687b      	ldr	r3, [r7, #4]
 800e3d0:	601a      	str	r2, [r3, #0]
 800e3d2:	687b      	ldr	r3, [r7, #4]
 800e3d4:	683a      	ldr	r2, [r7, #0]
 800e3d6:	8812      	ldrh	r2, [r2, #0]
 800e3d8:	84da      	strh	r2, [r3, #38]	; 0x26
 800e3da:	687b      	ldr	r3, [r7, #4]
 800e3dc:	22ff      	movs	r2, #255	; 0xff
 800e3de:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 800e3e2:	6839      	ldr	r1, [r7, #0]
 800e3e4:	6878      	ldr	r0, [r7, #4]
 800e3e6:	f005 fb01 	bl	80139ec <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800e3ea:	687b      	ldr	r3, [r7, #4]
 800e3ec:	4618      	mov	r0, r3
 800e3ee:	3708      	adds	r7, #8
 800e3f0:	46bd      	mov	sp, r7
 800e3f2:	bd80      	pop	{r7, pc}
 800e3f4:	08028da0 	.word	0x08028da0

0800e3f8 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800e3f8:	b480      	push	{r7}
 800e3fa:	b083      	sub	sp, #12
 800e3fc:	af00      	add	r7, sp, #0
 800e3fe:	6078      	str	r0, [r7, #4]
 800e400:	460b      	mov	r3, r1
 800e402:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800e404:	4a06      	ldr	r2, [pc, #24]	; (800e420 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800e406:	687b      	ldr	r3, [r7, #4]
 800e408:	601a      	str	r2, [r3, #0]
 800e40a:	687b      	ldr	r3, [r7, #4]
 800e40c:	887a      	ldrh	r2, [r7, #2]
 800e40e:	809a      	strh	r2, [r3, #4]
    }
 800e410:	687b      	ldr	r3, [r7, #4]
 800e412:	4618      	mov	r0, r3
 800e414:	370c      	adds	r7, #12
 800e416:	46bd      	mov	sp, r7
 800e418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e41c:	4770      	bx	lr
 800e41e:	bf00      	nop
 800e420:	08027fd0 	.word	0x08027fd0

0800e424 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800e424:	b580      	push	{r7, lr}
 800e426:	b082      	sub	sp, #8
 800e428:	af00      	add	r7, sp, #0
 800e42a:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800e42c:	687b      	ldr	r3, [r7, #4]
 800e42e:	4618      	mov	r0, r3
 800e430:	2326      	movs	r3, #38	; 0x26
 800e432:	461a      	mov	r2, r3
 800e434:	2100      	movs	r1, #0
 800e436:	f017 ff1a 	bl	802626e <memset>
 800e43a:	687b      	ldr	r3, [r7, #4]
 800e43c:	4618      	mov	r0, r3
 800e43e:	f7ff ff4f 	bl	800e2e0 <_ZN8touchgfx6WidgetC1Ev>
 800e442:	4a16      	ldr	r2, [pc, #88]	; (800e49c <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800e444:	687b      	ldr	r3, [r7, #4]
 800e446:	601a      	str	r2, [r3, #0]
 800e448:	687b      	ldr	r3, [r7, #4]
 800e44a:	3328      	adds	r3, #40	; 0x28
 800e44c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e450:	4618      	mov	r0, r3
 800e452:	f7ff ffd1 	bl	800e3f8 <_ZN8touchgfx9TypedTextC1Et>
 800e456:	687b      	ldr	r3, [r7, #4]
 800e458:	3330      	adds	r3, #48	; 0x30
 800e45a:	2100      	movs	r1, #0
 800e45c:	4618      	mov	r0, r3
 800e45e:	f7ff fcab 	bl	800ddb8 <_ZN8touchgfx9colortypeC1Em>
 800e462:	687b      	ldr	r3, [r7, #4]
 800e464:	2200      	movs	r2, #0
 800e466:	869a      	strh	r2, [r3, #52]	; 0x34
 800e468:	687b      	ldr	r3, [r7, #4]
 800e46a:	22ff      	movs	r2, #255	; 0xff
 800e46c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800e470:	687b      	ldr	r3, [r7, #4]
 800e472:	2200      	movs	r2, #0
 800e474:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800e478:	687b      	ldr	r3, [r7, #4]
 800e47a:	2200      	movs	r2, #0
 800e47c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800e480:	687b      	ldr	r3, [r7, #4]
 800e482:	2200      	movs	r2, #0
 800e484:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800e488:	687b      	ldr	r3, [r7, #4]
 800e48a:	333c      	adds	r3, #60	; 0x3c
 800e48c:	4618      	mov	r0, r3
 800e48e:	f000 f8f0 	bl	800e672 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800e492:	687b      	ldr	r3, [r7, #4]
 800e494:	4618      	mov	r0, r3
 800e496:	3708      	adds	r7, #8
 800e498:	46bd      	mov	sp, r7
 800e49a:	bd80      	pop	{r7, pc}
 800e49c:	08028ba4 	.word	0x08028ba4

0800e4a0 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800e4a0:	b590      	push	{r4, r7, lr}
 800e4a2:	b087      	sub	sp, #28
 800e4a4:	af00      	add	r7, sp, #0
 800e4a6:	6178      	str	r0, [r7, #20]
 800e4a8:	460b      	mov	r3, r1
 800e4aa:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800e4ac:	697b      	ldr	r3, [r7, #20]
 800e4ae:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800e4b2:	4611      	mov	r1, r2
 800e4b4:	4618      	mov	r0, r3
 800e4b6:	f7ff fda0 	bl	800dffa <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800e4ba:	697b      	ldr	r3, [r7, #20]
 800e4bc:	681b      	ldr	r3, [r3, #0]
 800e4be:	3384      	adds	r3, #132	; 0x84
 800e4c0:	681b      	ldr	r3, [r3, #0]
 800e4c2:	697c      	ldr	r4, [r7, #20]
 800e4c4:	463a      	mov	r2, r7
 800e4c6:	6979      	ldr	r1, [r7, #20]
 800e4c8:	4610      	mov	r0, r2
 800e4ca:	4798      	blx	r3
 800e4cc:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e4d0:	463a      	mov	r2, r7
 800e4d2:	ca07      	ldmia	r2, {r0, r1, r2}
 800e4d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e4d8:	bf00      	nop
 800e4da:	371c      	adds	r7, #28
 800e4dc:	46bd      	mov	sp, r7
 800e4de:	bd90      	pop	{r4, r7, pc}

0800e4e0 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800e4e0:	b590      	push	{r4, r7, lr}
 800e4e2:	b087      	sub	sp, #28
 800e4e4:	af00      	add	r7, sp, #0
 800e4e6:	6178      	str	r0, [r7, #20]
 800e4e8:	460b      	mov	r3, r1
 800e4ea:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800e4ec:	697b      	ldr	r3, [r7, #20]
 800e4ee:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800e4f2:	4611      	mov	r1, r2
 800e4f4:	4618      	mov	r0, r3
 800e4f6:	f7ff fd8f 	bl	800e018 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800e4fa:	697b      	ldr	r3, [r7, #20]
 800e4fc:	681b      	ldr	r3, [r3, #0]
 800e4fe:	3384      	adds	r3, #132	; 0x84
 800e500:	681b      	ldr	r3, [r3, #0]
 800e502:	697c      	ldr	r4, [r7, #20]
 800e504:	463a      	mov	r2, r7
 800e506:	6979      	ldr	r1, [r7, #20]
 800e508:	4610      	mov	r0, r2
 800e50a:	4798      	blx	r3
 800e50c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800e510:	463a      	mov	r2, r7
 800e512:	ca07      	ldmia	r2, {r0, r1, r2}
 800e514:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800e518:	bf00      	nop
 800e51a:	371c      	adds	r7, #28
 800e51c:	46bd      	mov	sp, r7
 800e51e:	bd90      	pop	{r4, r7, pc}

0800e520 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800e520:	b580      	push	{r7, lr}
 800e522:	b082      	sub	sp, #8
 800e524:	af00      	add	r7, sp, #0
 800e526:	6078      	str	r0, [r7, #4]
 800e528:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800e52a:	6878      	ldr	r0, [r7, #4]
 800e52c:	f7ff fc53 	bl	800ddd6 <_ZN8touchgfx4RectC1Ev>
    }
 800e530:	6878      	ldr	r0, [r7, #4]
 800e532:	3708      	adds	r7, #8
 800e534:	46bd      	mov	sp, r7
 800e536:	bd80      	pop	{r7, pc}

0800e538 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800e538:	b480      	push	{r7}
 800e53a:	b083      	sub	sp, #12
 800e53c:	af00      	add	r7, sp, #0
 800e53e:	6078      	str	r0, [r7, #4]
 800e540:	460b      	mov	r3, r1
 800e542:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800e544:	687b      	ldr	r3, [r7, #4]
 800e546:	78fa      	ldrb	r2, [r7, #3]
 800e548:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800e54c:	bf00      	nop
 800e54e:	370c      	adds	r7, #12
 800e550:	46bd      	mov	sp, r7
 800e552:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e556:	4770      	bx	lr

0800e558 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800e558:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e55a:	b085      	sub	sp, #20
 800e55c:	af00      	add	r7, sp, #0
 800e55e:	6078      	str	r0, [r7, #4]
 800e560:	460b      	mov	r3, r1
 800e562:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800e564:	687e      	ldr	r6, [r7, #4]
 800e566:	687b      	ldr	r3, [r7, #4]
 800e568:	681b      	ldr	r3, [r3, #0]
 800e56a:	3334      	adds	r3, #52	; 0x34
 800e56c:	681c      	ldr	r4, [r3, #0]
 800e56e:	887d      	ldrh	r5, [r7, #2]
 800e570:	6878      	ldr	r0, [r7, #4]
 800e572:	f000 f867 	bl	800e644 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800e576:	4603      	mov	r3, r0
 800e578:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800e57a:	4b1c      	ldr	r3, [pc, #112]	; (800e5ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800e57c:	681b      	ldr	r3, [r3, #0]
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d105      	bne.n	800e58e <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800e582:	4b1b      	ldr	r3, [pc, #108]	; (800e5f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800e584:	4a1b      	ldr	r2, [pc, #108]	; (800e5f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800e586:	216c      	movs	r1, #108	; 0x6c
 800e588:	481b      	ldr	r0, [pc, #108]	; (800e5f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800e58a:	f017 fc6b 	bl	8025e64 <__assert_func>
 800e58e:	68fb      	ldr	r3, [r7, #12]
 800e590:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800e592:	68bb      	ldr	r3, [r7, #8]
 800e594:	889a      	ldrh	r2, [r3, #4]
 800e596:	4b19      	ldr	r3, [pc, #100]	; (800e5fc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800e598:	881b      	ldrh	r3, [r3, #0]
 800e59a:	429a      	cmp	r2, r3
 800e59c:	bf34      	ite	cc
 800e59e:	2301      	movcc	r3, #1
 800e5a0:	2300      	movcs	r3, #0
 800e5a2:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800e5a4:	2b00      	cmp	r3, #0
 800e5a6:	d105      	bne.n	800e5b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800e5a8:	4b15      	ldr	r3, [pc, #84]	; (800e600 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800e5aa:	4a12      	ldr	r2, [pc, #72]	; (800e5f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800e5ac:	216d      	movs	r1, #109	; 0x6d
 800e5ae:	4812      	ldr	r0, [pc, #72]	; (800e5f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800e5b0:	f017 fc58 	bl	8025e64 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800e5b4:	4b13      	ldr	r3, [pc, #76]	; (800e604 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800e5b6:	681a      	ldr	r2, [r3, #0]
 800e5b8:	4b0c      	ldr	r3, [pc, #48]	; (800e5ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800e5ba:	6819      	ldr	r1, [r3, #0]
 800e5bc:	68fb      	ldr	r3, [r7, #12]
 800e5be:	889b      	ldrh	r3, [r3, #4]
 800e5c0:	005b      	lsls	r3, r3, #1
 800e5c2:	440b      	add	r3, r1
 800e5c4:	781b      	ldrb	r3, [r3, #0]
 800e5c6:	009b      	lsls	r3, r3, #2
 800e5c8:	4413      	add	r3, r2
 800e5ca:	681b      	ldr	r3, [r3, #0]
 800e5cc:	681a      	ldr	r2, [r3, #0]
 800e5ce:	3230      	adds	r2, #48	; 0x30
 800e5d0:	6812      	ldr	r2, [r2, #0]
 800e5d2:	4618      	mov	r0, r3
 800e5d4:	4790      	blx	r2
 800e5d6:	4603      	mov	r3, r0
 800e5d8:	1aeb      	subs	r3, r5, r3
 800e5da:	b29b      	uxth	r3, r3
 800e5dc:	b21b      	sxth	r3, r3
 800e5de:	4619      	mov	r1, r3
 800e5e0:	4630      	mov	r0, r6
 800e5e2:	47a0      	blx	r4
    }
 800e5e4:	bf00      	nop
 800e5e6:	3714      	adds	r7, #20
 800e5e8:	46bd      	mov	sp, r7
 800e5ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e5ec:	24004aa0 	.word	0x24004aa0
 800e5f0:	080271f4 	.word	0x080271f4
 800e5f4:	08027238 	.word	0x08027238
 800e5f8:	08027274 	.word	0x08027274
 800e5fc:	24004aa4 	.word	0x24004aa4
 800e600:	080272b8 	.word	0x080272b8
 800e604:	24004aa8 	.word	0x24004aa8

0800e608 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800e608:	b580      	push	{r7, lr}
 800e60a:	b082      	sub	sp, #8
 800e60c:	af00      	add	r7, sp, #0
 800e60e:	6078      	str	r0, [r7, #4]
 800e610:	460b      	mov	r3, r1
 800e612:	807b      	strh	r3, [r7, #2]
 800e614:	4613      	mov	r3, r2
 800e616:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800e618:	687a      	ldr	r2, [r7, #4]
 800e61a:	687b      	ldr	r3, [r7, #4]
 800e61c:	681b      	ldr	r3, [r3, #0]
 800e61e:	3330      	adds	r3, #48	; 0x30
 800e620:	681b      	ldr	r3, [r3, #0]
 800e622:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800e626:	4610      	mov	r0, r2
 800e628:	4798      	blx	r3
        setBaselineY(baselineY);
 800e62a:	687b      	ldr	r3, [r7, #4]
 800e62c:	681b      	ldr	r3, [r3, #0]
 800e62e:	3364      	adds	r3, #100	; 0x64
 800e630:	681b      	ldr	r3, [r3, #0]
 800e632:	f9b7 2000 	ldrsh.w	r2, [r7]
 800e636:	4611      	mov	r1, r2
 800e638:	6878      	ldr	r0, [r7, #4]
 800e63a:	4798      	blx	r3
    }
 800e63c:	bf00      	nop
 800e63e:	3708      	adds	r7, #8
 800e640:	46bd      	mov	sp, r7
 800e642:	bd80      	pop	{r7, pc}

0800e644 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800e644:	b480      	push	{r7}
 800e646:	b083      	sub	sp, #12
 800e648:	af00      	add	r7, sp, #0
 800e64a:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800e64c:	687b      	ldr	r3, [r7, #4]
 800e64e:	3328      	adds	r3, #40	; 0x28
    }
 800e650:	4618      	mov	r0, r3
 800e652:	370c      	adds	r7, #12
 800e654:	46bd      	mov	sp, r7
 800e656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e65a:	4770      	bx	lr

0800e65c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800e65c:	b480      	push	{r7}
 800e65e:	b083      	sub	sp, #12
 800e660:	af00      	add	r7, sp, #0
 800e662:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800e664:	2300      	movs	r3, #0
    }
 800e666:	4618      	mov	r0, r3
 800e668:	370c      	adds	r7, #12
 800e66a:	46bd      	mov	sp, r7
 800e66c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e670:	4770      	bx	lr

0800e672 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800e672:	b580      	push	{r7, lr}
 800e674:	b084      	sub	sp, #16
 800e676:	af02      	add	r7, sp, #8
 800e678:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800e67a:	6878      	ldr	r0, [r7, #4]
 800e67c:	f04f 33ff 	mov.w	r3, #4294967295
 800e680:	9300      	str	r3, [sp, #0]
 800e682:	f04f 33ff 	mov.w	r3, #4294967295
 800e686:	2200      	movs	r2, #0
 800e688:	2100      	movs	r1, #0
 800e68a:	f7ff fbbb 	bl	800de04 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800e68e:	687b      	ldr	r3, [r7, #4]
 800e690:	2200      	movs	r2, #0
 800e692:	609a      	str	r2, [r3, #8]
        {
        }
 800e694:	687b      	ldr	r3, [r7, #4]
 800e696:	4618      	mov	r0, r3
 800e698:	3708      	adds	r7, #8
 800e69a:	46bd      	mov	sp, r7
 800e69c:	bd80      	pop	{r7, pc}
	...

0800e6a0 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800e6a0:	b580      	push	{r7, lr}
 800e6a2:	b082      	sub	sp, #8
 800e6a4:	af00      	add	r7, sp, #0
 800e6a6:	6078      	str	r0, [r7, #4]
 800e6a8:	4a08      	ldr	r2, [pc, #32]	; (800e6cc <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800e6aa:	687b      	ldr	r3, [r7, #4]
 800e6ac:	601a      	str	r2, [r3, #0]
 800e6ae:	687b      	ldr	r3, [r7, #4]
 800e6b0:	3328      	adds	r3, #40	; 0x28
 800e6b2:	4618      	mov	r0, r3
 800e6b4:	f7fe fcfe 	bl	800d0b4 <_ZN8touchgfx9TypedTextD1Ev>
 800e6b8:	687b      	ldr	r3, [r7, #4]
 800e6ba:	4618      	mov	r0, r3
 800e6bc:	f7ff fe22 	bl	800e304 <_ZN8touchgfx6WidgetD1Ev>
 800e6c0:	687b      	ldr	r3, [r7, #4]
 800e6c2:	4618      	mov	r0, r3
 800e6c4:	3708      	adds	r7, #8
 800e6c6:	46bd      	mov	sp, r7
 800e6c8:	bd80      	pop	{r7, pc}
 800e6ca:	bf00      	nop
 800e6cc:	08028ba4 	.word	0x08028ba4

0800e6d0 <_ZN8touchgfx8TextAreaD0Ev>:
 800e6d0:	b580      	push	{r7, lr}
 800e6d2:	b082      	sub	sp, #8
 800e6d4:	af00      	add	r7, sp, #0
 800e6d6:	6078      	str	r0, [r7, #4]
 800e6d8:	6878      	ldr	r0, [r7, #4]
 800e6da:	f7ff ffe1 	bl	800e6a0 <_ZN8touchgfx8TextAreaD1Ev>
 800e6de:	2148      	movs	r1, #72	; 0x48
 800e6e0:	6878      	ldr	r0, [r7, #4]
 800e6e2:	f017 fb90 	bl	8025e06 <_ZdlPvj>
 800e6e6:	687b      	ldr	r3, [r7, #4]
 800e6e8:	4618      	mov	r0, r3
 800e6ea:	3708      	adds	r7, #8
 800e6ec:	46bd      	mov	sp, r7
 800e6ee:	bd80      	pop	{r7, pc}

0800e6f0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800e6f0:	b580      	push	{r7, lr}
 800e6f2:	b082      	sub	sp, #8
 800e6f4:	af00      	add	r7, sp, #0
 800e6f6:	6078      	str	r0, [r7, #4]
        : TextArea()
 800e6f8:	687b      	ldr	r3, [r7, #4]
 800e6fa:	4618      	mov	r0, r3
 800e6fc:	f7ff fe92 	bl	800e424 <_ZN8touchgfx8TextAreaC1Ev>
 800e700:	4a03      	ldr	r2, [pc, #12]	; (800e710 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800e702:	687b      	ldr	r3, [r7, #4]
 800e704:	601a      	str	r2, [r3, #0]
    {
    }
 800e706:	687b      	ldr	r3, [r7, #4]
 800e708:	4618      	mov	r0, r3
 800e70a:	3708      	adds	r7, #8
 800e70c:	46bd      	mov	sp, r7
 800e70e:	bd80      	pop	{r7, pc}
 800e710:	08028d10 	.word	0x08028d10

0800e714 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800e714:	b580      	push	{r7, lr}
 800e716:	b082      	sub	sp, #8
 800e718:	af00      	add	r7, sp, #0
 800e71a:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800e71c:	687b      	ldr	r3, [r7, #4]
 800e71e:	4618      	mov	r0, r3
 800e720:	f7ff fbf0 	bl	800df04 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800e724:	bf00      	nop
 800e726:	3708      	adds	r7, #8
 800e728:	46bd      	mov	sp, r7
 800e72a:	bd80      	pop	{r7, pc}

0800e72c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800e72c:	b580      	push	{r7, lr}
 800e72e:	b082      	sub	sp, #8
 800e730:	af00      	add	r7, sp, #0
 800e732:	6078      	str	r0, [r7, #4]
 800e734:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800e736:	6878      	ldr	r0, [r7, #4]
 800e738:	f7ff ff9b 	bl	800e672 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800e73c:	6878      	ldr	r0, [r7, #4]
 800e73e:	3708      	adds	r7, #8
 800e740:	46bd      	mov	sp, r7
 800e742:	bd80      	pop	{r7, pc}

0800e744 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800e744:	b580      	push	{r7, lr}
 800e746:	b082      	sub	sp, #8
 800e748:	af00      	add	r7, sp, #0
 800e74a:	6078      	str	r0, [r7, #4]
 800e74c:	4a05      	ldr	r2, [pc, #20]	; (800e764 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800e74e:	687b      	ldr	r3, [r7, #4]
 800e750:	601a      	str	r2, [r3, #0]
 800e752:	687b      	ldr	r3, [r7, #4]
 800e754:	4618      	mov	r0, r3
 800e756:	f7ff ffa3 	bl	800e6a0 <_ZN8touchgfx8TextAreaD1Ev>
 800e75a:	687b      	ldr	r3, [r7, #4]
 800e75c:	4618      	mov	r0, r3
 800e75e:	3708      	adds	r7, #8
 800e760:	46bd      	mov	sp, r7
 800e762:	bd80      	pop	{r7, pc}
 800e764:	08028d10 	.word	0x08028d10

0800e768 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800e768:	b580      	push	{r7, lr}
 800e76a:	b082      	sub	sp, #8
 800e76c:	af00      	add	r7, sp, #0
 800e76e:	6078      	str	r0, [r7, #4]
 800e770:	6878      	ldr	r0, [r7, #4]
 800e772:	f7ff ffe7 	bl	800e744 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800e776:	2148      	movs	r1, #72	; 0x48
 800e778:	6878      	ldr	r0, [r7, #4]
 800e77a:	f017 fb44 	bl	8025e06 <_ZdlPvj>
 800e77e:	687b      	ldr	r3, [r7, #4]
 800e780:	4618      	mov	r0, r3
 800e782:	3708      	adds	r7, #8
 800e784:	46bd      	mov	sp, r7
 800e786:	bd80      	pop	{r7, pc}

0800e788 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800e788:	b580      	push	{r7, lr}
 800e78a:	b082      	sub	sp, #8
 800e78c:	af00      	add	r7, sp, #0
 800e78e:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800e790:	687b      	ldr	r3, [r7, #4]
 800e792:	4618      	mov	r0, r3
 800e794:	f7ff ffac 	bl	800e6f0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800e798:	4a05      	ldr	r2, [pc, #20]	; (800e7b0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800e79a:	687b      	ldr	r3, [r7, #4]
 800e79c:	601a      	str	r2, [r3, #0]
 800e79e:	687b      	ldr	r3, [r7, #4]
 800e7a0:	2200      	movs	r2, #0
 800e7a2:	649a      	str	r2, [r3, #72]	; 0x48
    {
    }
 800e7a4:	687b      	ldr	r3, [r7, #4]
 800e7a6:	4618      	mov	r0, r3
 800e7a8:	3708      	adds	r7, #8
 800e7aa:	46bd      	mov	sp, r7
 800e7ac:	bd80      	pop	{r7, pc}
 800e7ae:	bf00      	nop
 800e7b0:	08028228 	.word	0x08028228

0800e7b4 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800e7b4:	b480      	push	{r7}
 800e7b6:	b083      	sub	sp, #12
 800e7b8:	af00      	add	r7, sp, #0
 800e7ba:	6078      	str	r0, [r7, #4]
 800e7bc:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800e7be:	687b      	ldr	r3, [r7, #4]
 800e7c0:	683a      	ldr	r2, [r7, #0]
 800e7c2:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800e7c4:	bf00      	nop
 800e7c6:	370c      	adds	r7, #12
 800e7c8:	46bd      	mov	sp, r7
 800e7ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7ce:	4770      	bx	lr

0800e7d0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800e7d0:	b480      	push	{r7}
 800e7d2:	b083      	sub	sp, #12
 800e7d4:	af00      	add	r7, sp, #0
 800e7d6:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800e7d8:	687b      	ldr	r3, [r7, #4]
 800e7da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800e7dc:	4618      	mov	r0, r3
 800e7de:	370c      	adds	r7, #12
 800e7e0:	46bd      	mov	sp, r7
 800e7e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7e6:	4770      	bx	lr

0800e7e8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800e7e8:	b580      	push	{r7, lr}
 800e7ea:	b082      	sub	sp, #8
 800e7ec:	af00      	add	r7, sp, #0
 800e7ee:	6078      	str	r0, [r7, #4]
 800e7f0:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800e7f2:	6839      	ldr	r1, [r7, #0]
 800e7f4:	6878      	ldr	r0, [r7, #4]
 800e7f6:	f7ff ffdd 	bl	800e7b4 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800e7fa:	bf00      	nop
 800e7fc:	3708      	adds	r7, #8
 800e7fe:	46bd      	mov	sp, r7
 800e800:	bd80      	pop	{r7, pc}
	...

0800e804 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 800e804:	b580      	push	{r7, lr}
 800e806:	b082      	sub	sp, #8
 800e808:	af00      	add	r7, sp, #0
 800e80a:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800e80c:	687b      	ldr	r3, [r7, #4]
 800e80e:	4618      	mov	r0, r3
 800e810:	2326      	movs	r3, #38	; 0x26
 800e812:	461a      	mov	r2, r3
 800e814:	2100      	movs	r1, #0
 800e816:	f017 fd2a 	bl	802626e <memset>
 800e81a:	687b      	ldr	r3, [r7, #4]
 800e81c:	4618      	mov	r0, r3
 800e81e:	f7ff fd5f 	bl	800e2e0 <_ZN8touchgfx6WidgetC1Ev>
 800e822:	4a0a      	ldr	r2, [pc, #40]	; (800e84c <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800e824:	687b      	ldr	r3, [r7, #4]
 800e826:	601a      	str	r2, [r3, #0]
 800e828:	687b      	ldr	r3, [r7, #4]
 800e82a:	2200      	movs	r2, #0
 800e82c:	629a      	str	r2, [r3, #40]	; 0x28
 800e82e:	687b      	ldr	r3, [r7, #4]
 800e830:	2200      	movs	r2, #0
 800e832:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
 800e836:	687b      	ldr	r3, [r7, #4]
 800e838:	2101      	movs	r1, #1
 800e83a:	4618      	mov	r0, r3
 800e83c:	f7ff fc4e 	bl	800e0dc <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800e840:	687b      	ldr	r3, [r7, #4]
 800e842:	4618      	mov	r0, r3
 800e844:	3708      	adds	r7, #8
 800e846:	46bd      	mov	sp, r7
 800e848:	bd80      	pop	{r7, pc}
 800e84a:	bf00      	nop
 800e84c:	08028ac0 	.word	0x08028ac0

0800e850 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800e850:	b480      	push	{r7}
 800e852:	b083      	sub	sp, #12
 800e854:	af00      	add	r7, sp, #0
 800e856:	6078      	str	r0, [r7, #4]
 800e858:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800e85a:	687b      	ldr	r3, [r7, #4]
 800e85c:	683a      	ldr	r2, [r7, #0]
 800e85e:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800e860:	bf00      	nop
 800e862:	370c      	adds	r7, #12
 800e864:	46bd      	mov	sp, r7
 800e866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e86a:	4770      	bx	lr

0800e86c <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800e86c:	b580      	push	{r7, lr}
 800e86e:	b082      	sub	sp, #8
 800e870:	af00      	add	r7, sp, #0
 800e872:	6078      	str	r0, [r7, #4]
 800e874:	4a05      	ldr	r2, [pc, #20]	; (800e88c <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	601a      	str	r2, [r3, #0]
 800e87a:	687b      	ldr	r3, [r7, #4]
 800e87c:	4618      	mov	r0, r3
 800e87e:	f7ff fd41 	bl	800e304 <_ZN8touchgfx6WidgetD1Ev>
 800e882:	687b      	ldr	r3, [r7, #4]
 800e884:	4618      	mov	r0, r3
 800e886:	3708      	adds	r7, #8
 800e888:	46bd      	mov	sp, r7
 800e88a:	bd80      	pop	{r7, pc}
 800e88c:	08028ac0 	.word	0x08028ac0

0800e890 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800e890:	b580      	push	{r7, lr}
 800e892:	b082      	sub	sp, #8
 800e894:	af00      	add	r7, sp, #0
 800e896:	6078      	str	r0, [r7, #4]
 800e898:	6878      	ldr	r0, [r7, #4]
 800e89a:	f7ff ffe7 	bl	800e86c <_ZN8touchgfx14AbstractButtonD1Ev>
 800e89e:	2130      	movs	r1, #48	; 0x30
 800e8a0:	6878      	ldr	r0, [r7, #4]
 800e8a2:	f017 fab0 	bl	8025e06 <_ZdlPvj>
 800e8a6:	687b      	ldr	r3, [r7, #4]
 800e8a8:	4618      	mov	r0, r3
 800e8aa:	3708      	adds	r7, #8
 800e8ac:	46bd      	mov	sp, r7
 800e8ae:	bd80      	pop	{r7, pc}

0800e8b0 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 800e8b0:	b580      	push	{r7, lr}
 800e8b2:	b082      	sub	sp, #8
 800e8b4:	af00      	add	r7, sp, #0
 800e8b6:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800e8b8:	687b      	ldr	r3, [r7, #4]
 800e8ba:	4618      	mov	r0, r3
 800e8bc:	f7ff ffa2 	bl	800e804 <_ZN8touchgfx14AbstractButtonC1Ev>
 800e8c0:	4a0c      	ldr	r2, [pc, #48]	; (800e8f4 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800e8c2:	687b      	ldr	r3, [r7, #4]
 800e8c4:	601a      	str	r2, [r3, #0]
 800e8c6:	687b      	ldr	r3, [r7, #4]
 800e8c8:	332e      	adds	r3, #46	; 0x2e
 800e8ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e8ce:	4618      	mov	r0, r3
 800e8d0:	f7ff fab8 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800e8d4:	687b      	ldr	r3, [r7, #4]
 800e8d6:	3330      	adds	r3, #48	; 0x30
 800e8d8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e8dc:	4618      	mov	r0, r3
 800e8de:	f7ff fab1 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800e8e2:	687b      	ldr	r3, [r7, #4]
 800e8e4:	22ff      	movs	r2, #255	; 0xff
 800e8e6:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
    {
    }
 800e8ea:	687b      	ldr	r3, [r7, #4]
 800e8ec:	4618      	mov	r0, r3
 800e8ee:	3708      	adds	r7, #8
 800e8f0:	46bd      	mov	sp, r7
 800e8f2:	bd80      	pop	{r7, pc}
 800e8f4:	08028c9c 	.word	0x08028c9c

0800e8f8 <_ZN12MainViewBase13increaseValueEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increaseValue()
 800e8f8:	b480      	push	{r7}
 800e8fa:	b083      	sub	sp, #12
 800e8fc:	af00      	add	r7, sp, #0
 800e8fe:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 800e900:	bf00      	nop
 800e902:	370c      	adds	r7, #12
 800e904:	46bd      	mov	sp, r7
 800e906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e90a:	4770      	bx	lr

0800e90c <_ZN12MainViewBase13decreaseValueEv>:
    virtual void decreaseValue()
 800e90c:	b480      	push	{r7}
 800e90e:	b083      	sub	sp, #12
 800e910:	af00      	add	r7, sp, #0
 800e912:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 800e914:	bf00      	nop
 800e916:	370c      	adds	r7, #12
 800e918:	46bd      	mov	sp, r7
 800e91a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e91e:	4770      	bx	lr

0800e920 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 800e920:	b580      	push	{r7, lr}
 800e922:	b082      	sub	sp, #8
 800e924:	af00      	add	r7, sp, #0
 800e926:	6078      	str	r0, [r7, #4]
 800e928:	4a05      	ldr	r2, [pc, #20]	; (800e940 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 800e92a:	687b      	ldr	r3, [r7, #4]
 800e92c:	601a      	str	r2, [r3, #0]
 800e92e:	687b      	ldr	r3, [r7, #4]
 800e930:	4618      	mov	r0, r3
 800e932:	f7ff fc4b 	bl	800e1cc <_ZN8touchgfx6ScreenD1Ev>
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	4618      	mov	r0, r3
 800e93a:	3708      	adds	r7, #8
 800e93c:	46bd      	mov	sp, r7
 800e93e:	bd80      	pop	{r7, pc}
 800e940:	080281dc 	.word	0x080281dc

0800e944 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 800e944:	b580      	push	{r7, lr}
 800e946:	b082      	sub	sp, #8
 800e948:	af00      	add	r7, sp, #0
 800e94a:	6078      	str	r0, [r7, #4]
 800e94c:	6878      	ldr	r0, [r7, #4]
 800e94e:	f7ff ffe7 	bl	800e920 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800e952:	2140      	movs	r1, #64	; 0x40
 800e954:	6878      	ldr	r0, [r7, #4]
 800e956:	f017 fa56 	bl	8025e06 <_ZdlPvj>
 800e95a:	687b      	ldr	r3, [r7, #4]
 800e95c:	4618      	mov	r0, r3
 800e95e:	3708      	adds	r7, #8
 800e960:	46bd      	mov	sp, r7
 800e962:	bd80      	pop	{r7, pc}

0800e964 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 800e964:	b590      	push	{r4, r7, lr}
 800e966:	b0a1      	sub	sp, #132	; 0x84
 800e968:	af02      	add	r7, sp, #8
 800e96a:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 800e96c:	697b      	ldr	r3, [r7, #20]
 800e96e:	4618      	mov	r0, r3
 800e970:	f000 fa5c 	bl	800ee2c <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 800e974:	4a99      	ldr	r2, [pc, #612]	; (800ebdc <_ZN12MainViewBaseC1Ev+0x278>)
 800e976:	697b      	ldr	r3, [r7, #20]
 800e978:	601a      	str	r2, [r3, #0]
 800e97a:	697b      	ldr	r3, [r7, #20]
 800e97c:	3340      	adds	r3, #64	; 0x40
 800e97e:	4618      	mov	r0, r3
 800e980:	f7ff fce2 	bl	800e348 <_ZN8touchgfx3BoxC1Ev>
 800e984:	697b      	ldr	r3, [r7, #20]
 800e986:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800e98a:	f107 0320 	add.w	r3, r7, #32
 800e98e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e992:	4618      	mov	r0, r3
 800e994:	f7ff fa56 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800e998:	f107 0320 	add.w	r3, r7, #32
 800e99c:	4619      	mov	r1, r3
 800e99e:	4620      	mov	r0, r4
 800e9a0:	f004 f978 	bl	8012c94 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800e9a4:	697b      	ldr	r3, [r7, #20]
 800e9a6:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800e9aa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800e9ae:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e9b2:	4618      	mov	r0, r3
 800e9b4:	f7ff fa46 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800e9b8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800e9bc:	4619      	mov	r1, r3
 800e9be:	4620      	mov	r0, r4
 800e9c0:	f7ff fcf4 	bl	800e3ac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800e9c4:	697b      	ldr	r3, [r7, #20]
 800e9c6:	33c4      	adds	r3, #196	; 0xc4
 800e9c8:	4618      	mov	r0, r3
 800e9ca:	f7ff fedd 	bl	800e788 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800e9ce:	697b      	ldr	r3, [r7, #20]
 800e9d0:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800e9d4:	4618      	mov	r0, r3
 800e9d6:	f7ff ff6b 	bl	800e8b0 <_ZN8touchgfx6ButtonC1Ev>
 800e9da:	697b      	ldr	r3, [r7, #20]
 800e9dc:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800e9e0:	4618      	mov	r0, r3
 800e9e2:	f7ff ff65 	bl	800e8b0 <_ZN8touchgfx6ButtonC1Ev>
 800e9e6:	697b      	ldr	r3, [r7, #20]
 800e9e8:	f503 70c0 	add.w	r0, r3, #384	; 0x180
 800e9ec:	4b7c      	ldr	r3, [pc, #496]	; (800ebe0 <_ZN12MainViewBaseC1Ev+0x27c>)
 800e9ee:	62bb      	str	r3, [r7, #40]	; 0x28
 800e9f0:	2300      	movs	r3, #0
 800e9f2:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e9f4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e9f8:	cb0c      	ldmia	r3, {r2, r3}
 800e9fa:	6979      	ldr	r1, [r7, #20]
 800e9fc:	f000 fa3c 	bl	800ee78 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 480);
 800ea00:	697b      	ldr	r3, [r7, #20]
 800ea02:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800ea06:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800ea0a:	9300      	str	r3, [sp, #0]
 800ea0c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ea10:	2200      	movs	r2, #0
 800ea12:	2100      	movs	r1, #0
 800ea14:	f7ff fa94 	bl	800df40 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ea18:	697b      	ldr	r3, [r7, #20]
 800ea1a:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800ea1e:	2300      	movs	r3, #0
 800ea20:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 800ea24:	2300      	movs	r3, #0
 800ea26:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800ea2a:	2300      	movs	r3, #0
 800ea2c:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800ea30:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 800ea34:	041b      	lsls	r3, r3, #16
 800ea36:	461a      	mov	r2, r3
 800ea38:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800ea3c:	021b      	lsls	r3, r3, #8
 800ea3e:	431a      	orrs	r2, r3
 800ea40:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800ea44:	4313      	orrs	r3, r2
 800ea46:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ea4a:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800ea4e:	4611      	mov	r1, r2
 800ea50:	4618      	mov	r0, r3
 800ea52:	f7ff f9b1 	bl	800ddb8 <_ZN8touchgfx9colortypeC1Em>
 800ea56:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800ea58:	4619      	mov	r1, r3
 800ea5a:	4620      	mov	r0, r4
 800ea5c:	f7ff fc98 	bl	800e390 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ea60:	697a      	ldr	r2, [r7, #20]
 800ea62:	697b      	ldr	r3, [r7, #20]
 800ea64:	3340      	adds	r3, #64	; 0x40
 800ea66:	4619      	mov	r1, r3
 800ea68:	4610      	mov	r0, r2
 800ea6a:	f7ff fc07 	bl	800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_A_ID));
 800ea6e:	697b      	ldr	r3, [r7, #20]
 800ea70:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800ea74:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ea78:	2100      	movs	r1, #0
 800ea7a:	4618      	mov	r0, r3
 800ea7c:	f7ff f9e2 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800ea80:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800ea84:	4619      	mov	r1, r3
 800ea86:	4620      	mov	r0, r4
 800ea88:	f004 ffb0 	bl	80139ec <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(0, 0, 320, 480);
 800ea8c:	697b      	ldr	r3, [r7, #20]
 800ea8e:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800ea92:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800ea96:	9300      	str	r3, [sp, #0]
 800ea98:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ea9c:	2200      	movs	r2, #0
 800ea9e:	2100      	movs	r1, #0
 800eaa0:	f7ff fa4e 	bl	800df40 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800eaa4:	697b      	ldr	r3, [r7, #20]
 800eaa6:	336c      	adds	r3, #108	; 0x6c
 800eaa8:	2100      	movs	r1, #0
 800eaaa:	4618      	mov	r0, r3
 800eaac:	f004 f8b5 	bl	8012c1a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    add(scalableImage2);
 800eab0:	697a      	ldr	r2, [r7, #20]
 800eab2:	697b      	ldr	r3, [r7, #20]
 800eab4:	336c      	adds	r3, #108	; 0x6c
 800eab6:	4619      	mov	r1, r3
 800eab8:	4610      	mov	r0, r2
 800eaba:	f7ff fbdf 	bl	800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    counterBackgroundImage.setXY(84, 163);
 800eabe:	697b      	ldr	r3, [r7, #20]
 800eac0:	3398      	adds	r3, #152	; 0x98
 800eac2:	22a3      	movs	r2, #163	; 0xa3
 800eac4:	2154      	movs	r1, #84	; 0x54
 800eac6:	4618      	mov	r0, r3
 800eac8:	f7ff fa79 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
    counterBackgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800eacc:	697b      	ldr	r3, [r7, #20]
 800eace:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800ead2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800ead6:	2103      	movs	r1, #3
 800ead8:	4618      	mov	r0, r3
 800eada:	f7ff f9b3 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800eade:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800eae2:	4619      	mov	r1, r3
 800eae4:	4620      	mov	r0, r4
 800eae6:	f004 ff81 	bl	80139ec <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(counterBackgroundImage);
 800eaea:	697a      	ldr	r2, [r7, #20]
 800eaec:	697b      	ldr	r3, [r7, #20]
 800eaee:	3398      	adds	r3, #152	; 0x98
 800eaf0:	4619      	mov	r1, r3
 800eaf2:	4610      	mov	r0, r2
 800eaf4:	f7ff fbc2 	bl	800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    countTxt.setPosition(84, 191, 152, 89);
 800eaf8:	697b      	ldr	r3, [r7, #20]
 800eafa:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 800eafe:	2359      	movs	r3, #89	; 0x59
 800eb00:	9300      	str	r3, [sp, #0]
 800eb02:	2398      	movs	r3, #152	; 0x98
 800eb04:	22bf      	movs	r2, #191	; 0xbf
 800eb06:	2154      	movs	r1, #84	; 0x54
 800eb08:	f7ff fa1a 	bl	800df40 <_ZN8touchgfx8Drawable11setPositionEssss>
    countTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800eb0c:	697b      	ldr	r3, [r7, #20]
 800eb0e:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
 800eb12:	23ff      	movs	r3, #255	; 0xff
 800eb14:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800eb18:	23ff      	movs	r3, #255	; 0xff
 800eb1a:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800eb1e:	23ff      	movs	r3, #255	; 0xff
 800eb20:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 800eb24:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800eb28:	041b      	lsls	r3, r3, #16
 800eb2a:	461a      	mov	r2, r3
 800eb2c:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800eb30:	021b      	lsls	r3, r3, #8
 800eb32:	431a      	orrs	r2, r3
 800eb34:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800eb38:	4313      	orrs	r3, r2
 800eb3a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800eb3e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800eb42:	4611      	mov	r1, r2
 800eb44:	4618      	mov	r0, r3
 800eb46:	f7ff f937 	bl	800ddb8 <_ZN8touchgfx9colortypeC1Em>
 800eb4a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800eb4c:	66bc      	str	r4, [r7, #104]	; 0x68
 800eb4e:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800eb50:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800eb52:	69fa      	ldr	r2, [r7, #28]
 800eb54:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800eb56:	bf00      	nop
    countTxt.setLinespacing(0);
 800eb58:	697b      	ldr	r3, [r7, #20]
 800eb5a:	33c4      	adds	r3, #196	; 0xc4
 800eb5c:	673b      	str	r3, [r7, #112]	; 0x70
 800eb5e:	2300      	movs	r3, #0
 800eb60:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800eb64:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800eb66:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800eb6a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800eb6c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800eb6e:	681b      	ldr	r3, [r3, #0]
 800eb70:	3384      	adds	r3, #132	; 0x84
 800eb72:	681b      	ldr	r3, [r3, #0]
 800eb74:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800eb76:	463a      	mov	r2, r7
 800eb78:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800eb7a:	4610      	mov	r0, r2
 800eb7c:	4798      	blx	r3
 800eb7e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800eb82:	463a      	mov	r2, r7
 800eb84:	ca07      	ldmia	r2, {r0, r1, r2}
 800eb86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800eb8a:	bf00      	nop
    Unicode::snprintf(countTxtBuffer, COUNTTXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GPQS).getText());
 800eb8c:	697b      	ldr	r3, [r7, #20]
 800eb8e:	f503 74bc 	add.w	r4, r3, #376	; 0x178
 800eb92:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800eb96:	2101      	movs	r1, #1
 800eb98:	4618      	mov	r0, r3
 800eb9a:	f7ff fc2d 	bl	800e3f8 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800eb9e:	4b11      	ldr	r3, [pc, #68]	; (800ebe4 <_ZN12MainViewBaseC1Ev+0x280>)
 800eba0:	681b      	ldr	r3, [r3, #0]
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	d105      	bne.n	800ebb2 <_ZN12MainViewBaseC1Ev+0x24e>
 800eba6:	4b10      	ldr	r3, [pc, #64]	; (800ebe8 <_ZN12MainViewBaseC1Ev+0x284>)
 800eba8:	4a10      	ldr	r2, [pc, #64]	; (800ebec <_ZN12MainViewBaseC1Ev+0x288>)
 800ebaa:	2160      	movs	r1, #96	; 0x60
 800ebac:	4810      	ldr	r0, [pc, #64]	; (800ebf0 <_ZN12MainViewBaseC1Ev+0x28c>)
 800ebae:	f017 f959 	bl	8025e64 <__assert_func>
 800ebb2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ebb6:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800ebb8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800ebba:	889a      	ldrh	r2, [r3, #4]
 800ebbc:	4b0d      	ldr	r3, [pc, #52]	; (800ebf4 <_ZN12MainViewBaseC1Ev+0x290>)
 800ebbe:	881b      	ldrh	r3, [r3, #0]
 800ebc0:	429a      	cmp	r2, r3
 800ebc2:	bf34      	ite	cc
 800ebc4:	2301      	movcc	r3, #1
 800ebc6:	2300      	movcs	r3, #0
 800ebc8:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800ebca:	2b00      	cmp	r3, #0
 800ebcc:	d116      	bne.n	800ebfc <_ZN12MainViewBaseC1Ev+0x298>
 800ebce:	4b0a      	ldr	r3, [pc, #40]	; (800ebf8 <_ZN12MainViewBaseC1Ev+0x294>)
 800ebd0:	4a06      	ldr	r2, [pc, #24]	; (800ebec <_ZN12MainViewBaseC1Ev+0x288>)
 800ebd2:	2161      	movs	r1, #97	; 0x61
 800ebd4:	4806      	ldr	r0, [pc, #24]	; (800ebf0 <_ZN12MainViewBaseC1Ev+0x28c>)
 800ebd6:	f017 f945 	bl	8025e64 <__assert_func>
 800ebda:	bf00      	nop
 800ebdc:	08028188 	.word	0x08028188
 800ebe0:	0800edeb 	.word	0x0800edeb
 800ebe4:	24004aa0 	.word	0x24004aa0
 800ebe8:	080271f4 	.word	0x080271f4
 800ebec:	080272f8 	.word	0x080272f8
 800ebf0:	08027274 	.word	0x08027274
 800ebf4:	24004aa4 	.word	0x24004aa4
 800ebf8:	080272b8 	.word	0x080272b8
        return texts->getText(typedTextId);
 800ebfc:	4b4f      	ldr	r3, [pc, #316]	; (800ed3c <_ZN12MainViewBaseC1Ev+0x3d8>)
 800ebfe:	681b      	ldr	r3, [r3, #0]
 800ec00:	8fba      	ldrh	r2, [r7, #60]	; 0x3c
 800ec02:	4611      	mov	r1, r2
 800ec04:	4618      	mov	r0, r3
 800ec06:	f000 fc4f 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 800ec0a:	4603      	mov	r3, r0
 800ec0c:	bf00      	nop
 800ec0e:	4a4c      	ldr	r2, [pc, #304]	; (800ed40 <_ZN12MainViewBaseC1Ev+0x3dc>)
 800ec10:	2103      	movs	r1, #3
 800ec12:	4620      	mov	r0, r4
 800ec14:	f009 fbf6 	bl	8018404 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ec18:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ec1c:	4618      	mov	r0, r3
 800ec1e:	f7fe fa49 	bl	800d0b4 <_ZN8touchgfx9TypedTextD1Ev>
    countTxt.setWildcard(countTxtBuffer);
 800ec22:	697b      	ldr	r3, [r7, #20]
 800ec24:	f103 02c4 	add.w	r2, r3, #196	; 0xc4
 800ec28:	697b      	ldr	r3, [r7, #20]
 800ec2a:	f503 73bc 	add.w	r3, r3, #376	; 0x178
 800ec2e:	4619      	mov	r1, r3
 800ec30:	4610      	mov	r0, r2
 800ec32:	f7ff fdd9 	bl	800e7e8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    countTxt.setTypedText(touchgfx::TypedText(T_TEXTID1));
 800ec36:	697b      	ldr	r3, [r7, #20]
 800ec38:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
 800ec3c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ec40:	2100      	movs	r1, #0
 800ec42:	4618      	mov	r0, r3
 800ec44:	f7ff fbd8 	bl	800e3f8 <_ZN8touchgfx9TypedTextC1Et>
 800ec48:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ec4c:	4619      	mov	r1, r3
 800ec4e:	4620      	mov	r0, r4
 800ec50:	f004 fd5a 	bl	8013708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ec54:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ec58:	4618      	mov	r0, r3
 800ec5a:	f7fe fa2b 	bl	800d0b4 <_ZN8touchgfx9TypedTextD1Ev>
    add(countTxt);
 800ec5e:	697a      	ldr	r2, [r7, #20]
 800ec60:	697b      	ldr	r3, [r7, #20]
 800ec62:	33c4      	adds	r3, #196	; 0xc4
 800ec64:	4619      	mov	r1, r3
 800ec66:	4610      	mov	r0, r2
 800ec68:	f7ff fb08 	bl	800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonUp.setXY(95, 76);
 800ec6c:	697b      	ldr	r3, [r7, #20]
 800ec6e:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800ec72:	224c      	movs	r2, #76	; 0x4c
 800ec74:	215f      	movs	r1, #95	; 0x5f
 800ec76:	4618      	mov	r0, r3
 800ec78:	f7ff f9a1 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
    buttonUp.setBitmaps(touchgfx::Bitmap(BITMAP_UP_BTN_ID), touchgfx::Bitmap(BITMAP_UP_BTN_PRESSED_ID));
 800ec7c:	697b      	ldr	r3, [r7, #20]
 800ec7e:	f503 7488 	add.w	r4, r3, #272	; 0x110
 800ec82:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec86:	2107      	movs	r1, #7
 800ec88:	4618      	mov	r0, r3
 800ec8a:	f7ff f8db 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800ec8e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800ec92:	2109      	movs	r1, #9
 800ec94:	4618      	mov	r0, r3
 800ec96:	f7ff f8d5 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800ec9a:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 800ec9e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eca2:	4619      	mov	r1, r3
 800eca4:	4620      	mov	r0, r4
 800eca6:	f004 fd81 	bl	80137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonUp.setAction(buttonCallback);
 800ecaa:	697b      	ldr	r3, [r7, #20]
 800ecac:	f503 7288 	add.w	r2, r3, #272	; 0x110
 800ecb0:	697b      	ldr	r3, [r7, #20]
 800ecb2:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800ecb6:	4619      	mov	r1, r3
 800ecb8:	4610      	mov	r0, r2
 800ecba:	f7ff fdc9 	bl	800e850 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonUp);
 800ecbe:	697a      	ldr	r2, [r7, #20]
 800ecc0:	697b      	ldr	r3, [r7, #20]
 800ecc2:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800ecc6:	4619      	mov	r1, r3
 800ecc8:	4610      	mov	r0, r2
 800ecca:	f7ff fad7 	bl	800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonDown.setXY(95, 357);
 800ecce:	697b      	ldr	r3, [r7, #20]
 800ecd0:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ecd4:	f240 1265 	movw	r2, #357	; 0x165
 800ecd8:	215f      	movs	r1, #95	; 0x5f
 800ecda:	4618      	mov	r0, r3
 800ecdc:	f7ff f96f 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
    buttonDown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_BTN_ID), touchgfx::Bitmap(BITMAP_DOWN_BTN_PRESSED_ID));
 800ece0:	697b      	ldr	r3, [r7, #20]
 800ece2:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800ece6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800ecea:	2104      	movs	r1, #4
 800ecec:	4618      	mov	r0, r3
 800ecee:	f7ff f8a9 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800ecf2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800ecf6:	2106      	movs	r1, #6
 800ecf8:	4618      	mov	r0, r3
 800ecfa:	f7ff f8a3 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800ecfe:	f107 0254 	add.w	r2, r7, #84	; 0x54
 800ed02:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800ed06:	4619      	mov	r1, r3
 800ed08:	4620      	mov	r0, r4
 800ed0a:	f004 fd4f 	bl	80137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonDown.setAction(buttonCallback);
 800ed0e:	697b      	ldr	r3, [r7, #20]
 800ed10:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800ed14:	697b      	ldr	r3, [r7, #20]
 800ed16:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800ed1a:	4619      	mov	r1, r3
 800ed1c:	4610      	mov	r0, r2
 800ed1e:	f7ff fd97 	bl	800e850 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonDown);
 800ed22:	697a      	ldr	r2, [r7, #20]
 800ed24:	697b      	ldr	r3, [r7, #20]
 800ed26:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ed2a:	4619      	mov	r1, r3
 800ed2c:	4610      	mov	r0, r2
 800ed2e:	f7ff faa5 	bl	800e27c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ed32:	697b      	ldr	r3, [r7, #20]
 800ed34:	4618      	mov	r0, r3
 800ed36:	377c      	adds	r7, #124	; 0x7c
 800ed38:	46bd      	mov	sp, r7
 800ed3a:	bd90      	pop	{r4, r7, pc}
 800ed3c:	24004aac 	.word	0x24004aac
 800ed40:	08027330 	.word	0x08027330

0800ed44 <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800ed44:	b580      	push	{r7, lr}
 800ed46:	b082      	sub	sp, #8
 800ed48:	af00      	add	r7, sp, #0
 800ed4a:	6078      	str	r0, [r7, #4]
 800ed4c:	4a18      	ldr	r2, [pc, #96]	; (800edb0 <_ZN12MainViewBaseD1Ev+0x6c>)
 800ed4e:	687b      	ldr	r3, [r7, #4]
 800ed50:	601a      	str	r2, [r3, #0]
 800ed52:	687b      	ldr	r3, [r7, #4]
 800ed54:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800ed58:	4618      	mov	r0, r3
 800ed5a:	f000 f8cd 	bl	800eef8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ed5e:	687b      	ldr	r3, [r7, #4]
 800ed60:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ed64:	4618      	mov	r0, r3
 800ed66:	f000 f993 	bl	800f090 <_ZN8touchgfx6ButtonD1Ev>
 800ed6a:	687b      	ldr	r3, [r7, #4]
 800ed6c:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800ed70:	4618      	mov	r0, r3
 800ed72:	f000 f98d 	bl	800f090 <_ZN8touchgfx6ButtonD1Ev>
 800ed76:	687b      	ldr	r3, [r7, #4]
 800ed78:	33c4      	adds	r3, #196	; 0xc4
 800ed7a:	4618      	mov	r0, r3
 800ed7c:	f000 f8de 	bl	800ef3c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ed80:	687b      	ldr	r3, [r7, #4]
 800ed82:	3398      	adds	r3, #152	; 0x98
 800ed84:	4618      	mov	r0, r3
 800ed86:	f000 f93f 	bl	800f008 <_ZN8touchgfx5ImageD1Ev>
 800ed8a:	687b      	ldr	r3, [r7, #4]
 800ed8c:	336c      	adds	r3, #108	; 0x6c
 800ed8e:	4618      	mov	r0, r3
 800ed90:	f000 f95c 	bl	800f04c <_ZN8touchgfx13ScalableImageD1Ev>
 800ed94:	687b      	ldr	r3, [r7, #4]
 800ed96:	3340      	adds	r3, #64	; 0x40
 800ed98:	4618      	mov	r0, r3
 800ed9a:	f000 f913 	bl	800efc4 <_ZN8touchgfx3BoxD1Ev>
 800ed9e:	687b      	ldr	r3, [r7, #4]
 800eda0:	4618      	mov	r0, r3
 800eda2:	f7ff fdbd 	bl	800e920 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
{

}
 800eda6:	687b      	ldr	r3, [r7, #4]
 800eda8:	4618      	mov	r0, r3
 800edaa:	3708      	adds	r7, #8
 800edac:	46bd      	mov	sp, r7
 800edae:	bd80      	pop	{r7, pc}
 800edb0:	08028188 	.word	0x08028188

0800edb4 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800edb4:	b580      	push	{r7, lr}
 800edb6:	b082      	sub	sp, #8
 800edb8:	af00      	add	r7, sp, #0
 800edba:	6078      	str	r0, [r7, #4]
}
 800edbc:	6878      	ldr	r0, [r7, #4]
 800edbe:	f7ff ffc1 	bl	800ed44 <_ZN12MainViewBaseD1Ev>
 800edc2:	f44f 71c8 	mov.w	r1, #400	; 0x190
 800edc6:	6878      	ldr	r0, [r7, #4]
 800edc8:	f017 f81d 	bl	8025e06 <_ZdlPvj>
 800edcc:	687b      	ldr	r3, [r7, #4]
 800edce:	4618      	mov	r0, r3
 800edd0:	3708      	adds	r7, #8
 800edd2:	46bd      	mov	sp, r7
 800edd4:	bd80      	pop	{r7, pc}

0800edd6 <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800edd6:	b480      	push	{r7}
 800edd8:	b083      	sub	sp, #12
 800edda:	af00      	add	r7, sp, #0
 800eddc:	6078      	str	r0, [r7, #4]

}
 800edde:	bf00      	nop
 800ede0:	370c      	adds	r7, #12
 800ede2:	46bd      	mov	sp, r7
 800ede4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ede8:	4770      	bx	lr

0800edea <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800edea:	b580      	push	{r7, lr}
 800edec:	b082      	sub	sp, #8
 800edee:	af00      	add	r7, sp, #0
 800edf0:	6078      	str	r0, [r7, #4]
 800edf2:	6039      	str	r1, [r7, #0]
    if (&src == &buttonUp)
 800edf4:	687b      	ldr	r3, [r7, #4]
 800edf6:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800edfa:	683a      	ldr	r2, [r7, #0]
 800edfc:	429a      	cmp	r2, r3
 800edfe:	d105      	bne.n	800ee0c <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //IncreaseValue
        //When buttonUp clicked call virtual function
        //Call increaseValue
        increaseValue();
 800ee00:	687b      	ldr	r3, [r7, #4]
 800ee02:	681b      	ldr	r3, [r3, #0]
 800ee04:	332c      	adds	r3, #44	; 0x2c
 800ee06:	681b      	ldr	r3, [r3, #0]
 800ee08:	6878      	ldr	r0, [r7, #4]
 800ee0a:	4798      	blx	r3
    }
    if (&src == &buttonDown)
 800ee0c:	687b      	ldr	r3, [r7, #4]
 800ee0e:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ee12:	683a      	ldr	r2, [r7, #0]
 800ee14:	429a      	cmp	r2, r3
 800ee16:	d105      	bne.n	800ee24 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //DecreaseValue
        //When buttonDown clicked call virtual function
        //Call decreaseValue
        decreaseValue();
 800ee18:	687b      	ldr	r3, [r7, #4]
 800ee1a:	681b      	ldr	r3, [r3, #0]
 800ee1c:	3330      	adds	r3, #48	; 0x30
 800ee1e:	681b      	ldr	r3, [r3, #0]
 800ee20:	6878      	ldr	r0, [r7, #4]
 800ee22:	4798      	blx	r3
    }
}
 800ee24:	bf00      	nop
 800ee26:	3708      	adds	r7, #8
 800ee28:	46bd      	mov	sp, r7
 800ee2a:	bd80      	pop	{r7, pc}

0800ee2c <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800ee2c:	b580      	push	{r7, lr}
 800ee2e:	b082      	sub	sp, #8
 800ee30:	af00      	add	r7, sp, #0
 800ee32:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ee34:	687b      	ldr	r3, [r7, #4]
 800ee36:	4618      	mov	r0, r3
 800ee38:	f007 fe60 	bl	8016afc <_ZN8touchgfx6ScreenC1Ev>
 800ee3c:	4a05      	ldr	r2, [pc, #20]	; (800ee54 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800ee3e:	687b      	ldr	r3, [r7, #4]
 800ee40:	601a      	str	r2, [r3, #0]
 800ee42:	687b      	ldr	r3, [r7, #4]
 800ee44:	2200      	movs	r2, #0
 800ee46:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800ee48:	687b      	ldr	r3, [r7, #4]
 800ee4a:	4618      	mov	r0, r3
 800ee4c:	3708      	adds	r7, #8
 800ee4e:	46bd      	mov	sp, r7
 800ee50:	bd80      	pop	{r7, pc}
 800ee52:	bf00      	nop
 800ee54:	080281dc 	.word	0x080281dc

0800ee58 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800ee58:	b480      	push	{r7}
 800ee5a:	b083      	sub	sp, #12
 800ee5c:	af00      	add	r7, sp, #0
 800ee5e:	6078      	str	r0, [r7, #4]
 800ee60:	4a04      	ldr	r2, [pc, #16]	; (800ee74 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800ee62:	687b      	ldr	r3, [r7, #4]
 800ee64:	601a      	str	r2, [r3, #0]
 800ee66:	687b      	ldr	r3, [r7, #4]
 800ee68:	4618      	mov	r0, r3
 800ee6a:	370c      	adds	r7, #12
 800ee6c:	46bd      	mov	sp, r7
 800ee6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee72:	4770      	bx	lr
 800ee74:	08028210 	.word	0x08028210

0800ee78 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800ee78:	b580      	push	{r7, lr}
 800ee7a:	b084      	sub	sp, #16
 800ee7c:	af00      	add	r7, sp, #0
 800ee7e:	60f8      	str	r0, [r7, #12]
 800ee80:	60b9      	str	r1, [r7, #8]
 800ee82:	4639      	mov	r1, r7
 800ee84:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ee88:	68fb      	ldr	r3, [r7, #12]
 800ee8a:	4618      	mov	r0, r3
 800ee8c:	f7ff ffe4 	bl	800ee58 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800ee90:	4a08      	ldr	r2, [pc, #32]	; (800eeb4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800ee92:	68fb      	ldr	r3, [r7, #12]
 800ee94:	601a      	str	r2, [r3, #0]
 800ee96:	68fb      	ldr	r3, [r7, #12]
 800ee98:	68ba      	ldr	r2, [r7, #8]
 800ee9a:	605a      	str	r2, [r3, #4]
 800ee9c:	68fb      	ldr	r3, [r7, #12]
 800ee9e:	3308      	adds	r3, #8
 800eea0:	463a      	mov	r2, r7
 800eea2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800eea6:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800eeaa:	68fb      	ldr	r3, [r7, #12]
 800eeac:	4618      	mov	r0, r3
 800eeae:	3710      	adds	r7, #16
 800eeb0:	46bd      	mov	sp, r7
 800eeb2:	bd80      	pop	{r7, pc}
 800eeb4:	080281c4 	.word	0x080281c4

0800eeb8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800eeb8:	b480      	push	{r7}
 800eeba:	b083      	sub	sp, #12
 800eebc:	af00      	add	r7, sp, #0
 800eebe:	6078      	str	r0, [r7, #4]
    }
 800eec0:	4a04      	ldr	r2, [pc, #16]	; (800eed4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800eec2:	687b      	ldr	r3, [r7, #4]
 800eec4:	601a      	str	r2, [r3, #0]
 800eec6:	687b      	ldr	r3, [r7, #4]
 800eec8:	4618      	mov	r0, r3
 800eeca:	370c      	adds	r7, #12
 800eecc:	46bd      	mov	sp, r7
 800eece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eed2:	4770      	bx	lr
 800eed4:	08028210 	.word	0x08028210

0800eed8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800eed8:	b580      	push	{r7, lr}
 800eeda:	b082      	sub	sp, #8
 800eedc:	af00      	add	r7, sp, #0
 800eede:	6078      	str	r0, [r7, #4]
    }
 800eee0:	6878      	ldr	r0, [r7, #4]
 800eee2:	f7ff ffe9 	bl	800eeb8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800eee6:	2104      	movs	r1, #4
 800eee8:	6878      	ldr	r0, [r7, #4]
 800eeea:	f016 ff8c 	bl	8025e06 <_ZdlPvj>
 800eeee:	687b      	ldr	r3, [r7, #4]
 800eef0:	4618      	mov	r0, r3
 800eef2:	3708      	adds	r7, #8
 800eef4:	46bd      	mov	sp, r7
 800eef6:	bd80      	pop	{r7, pc}

0800eef8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800eef8:	b580      	push	{r7, lr}
 800eefa:	b082      	sub	sp, #8
 800eefc:	af00      	add	r7, sp, #0
 800eefe:	6078      	str	r0, [r7, #4]
 800ef00:	4a05      	ldr	r2, [pc, #20]	; (800ef18 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800ef02:	687b      	ldr	r3, [r7, #4]
 800ef04:	601a      	str	r2, [r3, #0]
 800ef06:	687b      	ldr	r3, [r7, #4]
 800ef08:	4618      	mov	r0, r3
 800ef0a:	f7ff ffd5 	bl	800eeb8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ef0e:	687b      	ldr	r3, [r7, #4]
 800ef10:	4618      	mov	r0, r3
 800ef12:	3708      	adds	r7, #8
 800ef14:	46bd      	mov	sp, r7
 800ef16:	bd80      	pop	{r7, pc}
 800ef18:	080281c4 	.word	0x080281c4

0800ef1c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800ef1c:	b580      	push	{r7, lr}
 800ef1e:	b082      	sub	sp, #8
 800ef20:	af00      	add	r7, sp, #0
 800ef22:	6078      	str	r0, [r7, #4]
 800ef24:	6878      	ldr	r0, [r7, #4]
 800ef26:	f7ff ffe7 	bl	800eef8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ef2a:	2110      	movs	r1, #16
 800ef2c:	6878      	ldr	r0, [r7, #4]
 800ef2e:	f016 ff6a 	bl	8025e06 <_ZdlPvj>
 800ef32:	687b      	ldr	r3, [r7, #4]
 800ef34:	4618      	mov	r0, r3
 800ef36:	3708      	adds	r7, #8
 800ef38:	46bd      	mov	sp, r7
 800ef3a:	bd80      	pop	{r7, pc}

0800ef3c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800ef3c:	b580      	push	{r7, lr}
 800ef3e:	b082      	sub	sp, #8
 800ef40:	af00      	add	r7, sp, #0
 800ef42:	6078      	str	r0, [r7, #4]
 800ef44:	4a05      	ldr	r2, [pc, #20]	; (800ef5c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800ef46:	687b      	ldr	r3, [r7, #4]
 800ef48:	601a      	str	r2, [r3, #0]
 800ef4a:	687b      	ldr	r3, [r7, #4]
 800ef4c:	4618      	mov	r0, r3
 800ef4e:	f7ff fbf9 	bl	800e744 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800ef52:	687b      	ldr	r3, [r7, #4]
 800ef54:	4618      	mov	r0, r3
 800ef56:	3708      	adds	r7, #8
 800ef58:	46bd      	mov	sp, r7
 800ef5a:	bd80      	pop	{r7, pc}
 800ef5c:	08028228 	.word	0x08028228

0800ef60 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800ef60:	b580      	push	{r7, lr}
 800ef62:	b082      	sub	sp, #8
 800ef64:	af00      	add	r7, sp, #0
 800ef66:	6078      	str	r0, [r7, #4]
 800ef68:	6878      	ldr	r0, [r7, #4]
 800ef6a:	f7ff ffe7 	bl	800ef3c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ef6e:	214c      	movs	r1, #76	; 0x4c
 800ef70:	6878      	ldr	r0, [r7, #4]
 800ef72:	f016 ff48 	bl	8025e06 <_ZdlPvj>
 800ef76:	687b      	ldr	r3, [r7, #4]
 800ef78:	4618      	mov	r0, r3
 800ef7a:	3708      	adds	r7, #8
 800ef7c:	46bd      	mov	sp, r7
 800ef7e:	bd80      	pop	{r7, pc}

0800ef80 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800ef80:	b580      	push	{r7, lr}
 800ef82:	b082      	sub	sp, #8
 800ef84:	af00      	add	r7, sp, #0
 800ef86:	6078      	str	r0, [r7, #4]
 800ef88:	4a05      	ldr	r2, [pc, #20]	; (800efa0 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800ef8a:	687b      	ldr	r3, [r7, #4]
 800ef8c:	601a      	str	r2, [r3, #0]
 800ef8e:	687b      	ldr	r3, [r7, #4]
 800ef90:	4618      	mov	r0, r3
 800ef92:	f7fe ff97 	bl	800dec4 <_ZN8touchgfx8DrawableD1Ev>
 800ef96:	687b      	ldr	r3, [r7, #4]
 800ef98:	4618      	mov	r0, r3
 800ef9a:	3708      	adds	r7, #8
 800ef9c:	46bd      	mov	sp, r7
 800ef9e:	bd80      	pop	{r7, pc}
 800efa0:	080288d8 	.word	0x080288d8

0800efa4 <_ZN8touchgfx9ContainerD0Ev>:
 800efa4:	b580      	push	{r7, lr}
 800efa6:	b082      	sub	sp, #8
 800efa8:	af00      	add	r7, sp, #0
 800efaa:	6078      	str	r0, [r7, #4]
 800efac:	6878      	ldr	r0, [r7, #4]
 800efae:	f7ff ffe7 	bl	800ef80 <_ZN8touchgfx9ContainerD1Ev>
 800efb2:	212c      	movs	r1, #44	; 0x2c
 800efb4:	6878      	ldr	r0, [r7, #4]
 800efb6:	f016 ff26 	bl	8025e06 <_ZdlPvj>
 800efba:	687b      	ldr	r3, [r7, #4]
 800efbc:	4618      	mov	r0, r3
 800efbe:	3708      	adds	r7, #8
 800efc0:	46bd      	mov	sp, r7
 800efc2:	bd80      	pop	{r7, pc}

0800efc4 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800efc4:	b580      	push	{r7, lr}
 800efc6:	b082      	sub	sp, #8
 800efc8:	af00      	add	r7, sp, #0
 800efca:	6078      	str	r0, [r7, #4]
 800efcc:	4a05      	ldr	r2, [pc, #20]	; (800efe4 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800efce:	687b      	ldr	r3, [r7, #4]
 800efd0:	601a      	str	r2, [r3, #0]
 800efd2:	687b      	ldr	r3, [r7, #4]
 800efd4:	4618      	mov	r0, r3
 800efd6:	f7ff f995 	bl	800e304 <_ZN8touchgfx6WidgetD1Ev>
 800efda:	687b      	ldr	r3, [r7, #4]
 800efdc:	4618      	mov	r0, r3
 800efde:	3708      	adds	r7, #8
 800efe0:	46bd      	mov	sp, r7
 800efe2:	bd80      	pop	{r7, pc}
 800efe4:	08028c34 	.word	0x08028c34

0800efe8 <_ZN8touchgfx3BoxD0Ev>:
 800efe8:	b580      	push	{r7, lr}
 800efea:	b082      	sub	sp, #8
 800efec:	af00      	add	r7, sp, #0
 800efee:	6078      	str	r0, [r7, #4]
 800eff0:	6878      	ldr	r0, [r7, #4]
 800eff2:	f7ff ffe7 	bl	800efc4 <_ZN8touchgfx3BoxD1Ev>
 800eff6:	212c      	movs	r1, #44	; 0x2c
 800eff8:	6878      	ldr	r0, [r7, #4]
 800effa:	f016 ff04 	bl	8025e06 <_ZdlPvj>
 800effe:	687b      	ldr	r3, [r7, #4]
 800f000:	4618      	mov	r0, r3
 800f002:	3708      	adds	r7, #8
 800f004:	46bd      	mov	sp, r7
 800f006:	bd80      	pop	{r7, pc}

0800f008 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800f008:	b580      	push	{r7, lr}
 800f00a:	b082      	sub	sp, #8
 800f00c:	af00      	add	r7, sp, #0
 800f00e:	6078      	str	r0, [r7, #4]
 800f010:	4a05      	ldr	r2, [pc, #20]	; (800f028 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800f012:	687b      	ldr	r3, [r7, #4]
 800f014:	601a      	str	r2, [r3, #0]
 800f016:	687b      	ldr	r3, [r7, #4]
 800f018:	4618      	mov	r0, r3
 800f01a:	f7ff f973 	bl	800e304 <_ZN8touchgfx6WidgetD1Ev>
 800f01e:	687b      	ldr	r3, [r7, #4]
 800f020:	4618      	mov	r0, r3
 800f022:	3708      	adds	r7, #8
 800f024:	46bd      	mov	sp, r7
 800f026:	bd80      	pop	{r7, pc}
 800f028:	08028da0 	.word	0x08028da0

0800f02c <_ZN8touchgfx5ImageD0Ev>:
 800f02c:	b580      	push	{r7, lr}
 800f02e:	b082      	sub	sp, #8
 800f030:	af00      	add	r7, sp, #0
 800f032:	6078      	str	r0, [r7, #4]
 800f034:	6878      	ldr	r0, [r7, #4]
 800f036:	f7ff ffe7 	bl	800f008 <_ZN8touchgfx5ImageD1Ev>
 800f03a:	212c      	movs	r1, #44	; 0x2c
 800f03c:	6878      	ldr	r0, [r7, #4]
 800f03e:	f016 fee2 	bl	8025e06 <_ZdlPvj>
 800f042:	687b      	ldr	r3, [r7, #4]
 800f044:	4618      	mov	r0, r3
 800f046:	3708      	adds	r7, #8
 800f048:	46bd      	mov	sp, r7
 800f04a:	bd80      	pop	{r7, pc}

0800f04c <_ZN8touchgfx13ScalableImageD1Ev>:
 * algorithm used. The rendering algorithm can be changed dynamically. Please note that
 * scaling images is done at runtime and may require a lot of calculations.
 *
 * @note Note that this widget does not support 1 bit per pixel color depth.
 */
class ScalableImage : public Image
 800f04c:	b580      	push	{r7, lr}
 800f04e:	b082      	sub	sp, #8
 800f050:	af00      	add	r7, sp, #0
 800f052:	6078      	str	r0, [r7, #4]
 800f054:	4a05      	ldr	r2, [pc, #20]	; (800f06c <_ZN8touchgfx13ScalableImageD1Ev+0x20>)
 800f056:	687b      	ldr	r3, [r7, #4]
 800f058:	601a      	str	r2, [r3, #0]
 800f05a:	687b      	ldr	r3, [r7, #4]
 800f05c:	4618      	mov	r0, r3
 800f05e:	f7ff ffd3 	bl	800f008 <_ZN8touchgfx5ImageD1Ev>
 800f062:	687b      	ldr	r3, [r7, #4]
 800f064:	4618      	mov	r0, r3
 800f066:	3708      	adds	r7, #8
 800f068:	46bd      	mov	sp, r7
 800f06a:	bd80      	pop	{r7, pc}
 800f06c:	08028b30 	.word	0x08028b30

0800f070 <_ZN8touchgfx13ScalableImageD0Ev>:
 800f070:	b580      	push	{r7, lr}
 800f072:	b082      	sub	sp, #8
 800f074:	af00      	add	r7, sp, #0
 800f076:	6078      	str	r0, [r7, #4]
 800f078:	6878      	ldr	r0, [r7, #4]
 800f07a:	f7ff ffe7 	bl	800f04c <_ZN8touchgfx13ScalableImageD1Ev>
 800f07e:	212c      	movs	r1, #44	; 0x2c
 800f080:	6878      	ldr	r0, [r7, #4]
 800f082:	f016 fec0 	bl	8025e06 <_ZdlPvj>
 800f086:	687b      	ldr	r3, [r7, #4]
 800f088:	4618      	mov	r0, r3
 800f08a:	3708      	adds	r7, #8
 800f08c:	46bd      	mov	sp, r7
 800f08e:	bd80      	pop	{r7, pc}

0800f090 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 800f090:	b580      	push	{r7, lr}
 800f092:	b082      	sub	sp, #8
 800f094:	af00      	add	r7, sp, #0
 800f096:	6078      	str	r0, [r7, #4]
 800f098:	4a05      	ldr	r2, [pc, #20]	; (800f0b0 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800f09a:	687b      	ldr	r3, [r7, #4]
 800f09c:	601a      	str	r2, [r3, #0]
 800f09e:	687b      	ldr	r3, [r7, #4]
 800f0a0:	4618      	mov	r0, r3
 800f0a2:	f7ff fbe3 	bl	800e86c <_ZN8touchgfx14AbstractButtonD1Ev>
 800f0a6:	687b      	ldr	r3, [r7, #4]
 800f0a8:	4618      	mov	r0, r3
 800f0aa:	3708      	adds	r7, #8
 800f0ac:	46bd      	mov	sp, r7
 800f0ae:	bd80      	pop	{r7, pc}
 800f0b0:	08028c9c 	.word	0x08028c9c

0800f0b4 <_ZN8touchgfx6ButtonD0Ev>:
 800f0b4:	b580      	push	{r7, lr}
 800f0b6:	b082      	sub	sp, #8
 800f0b8:	af00      	add	r7, sp, #0
 800f0ba:	6078      	str	r0, [r7, #4]
 800f0bc:	6878      	ldr	r0, [r7, #4]
 800f0be:	f7ff ffe7 	bl	800f090 <_ZN8touchgfx6ButtonD1Ev>
 800f0c2:	2134      	movs	r1, #52	; 0x34
 800f0c4:	6878      	ldr	r0, [r7, #4]
 800f0c6:	f016 fe9e 	bl	8025e06 <_ZdlPvj>
 800f0ca:	687b      	ldr	r3, [r7, #4]
 800f0cc:	4618      	mov	r0, r3
 800f0ce:	3708      	adds	r7, #8
 800f0d0:	46bd      	mov	sp, r7
 800f0d2:	bd80      	pop	{r7, pc}

0800f0d4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f0d4:	b580      	push	{r7, lr}
 800f0d6:	b082      	sub	sp, #8
 800f0d8:	af00      	add	r7, sp, #0
 800f0da:	6078      	str	r0, [r7, #4]
 800f0dc:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f0de:	687b      	ldr	r3, [r7, #4]
 800f0e0:	685b      	ldr	r3, [r3, #4]
 800f0e2:	687a      	ldr	r2, [r7, #4]
 800f0e4:	68d2      	ldr	r2, [r2, #12]
 800f0e6:	1052      	asrs	r2, r2, #1
 800f0e8:	1898      	adds	r0, r3, r2
 800f0ea:	687b      	ldr	r3, [r7, #4]
 800f0ec:	68db      	ldr	r3, [r3, #12]
 800f0ee:	f003 0301 	and.w	r3, r3, #1
 800f0f2:	2b00      	cmp	r3, #0
 800f0f4:	d102      	bne.n	800f0fc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	689b      	ldr	r3, [r3, #8]
 800f0fa:	e00a      	b.n	800f112 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800f0fc:	687b      	ldr	r3, [r7, #4]
 800f0fe:	685b      	ldr	r3, [r3, #4]
 800f100:	687a      	ldr	r2, [r7, #4]
 800f102:	68d2      	ldr	r2, [r2, #12]
 800f104:	1052      	asrs	r2, r2, #1
 800f106:	4413      	add	r3, r2
 800f108:	681b      	ldr	r3, [r3, #0]
 800f10a:	687a      	ldr	r2, [r7, #4]
 800f10c:	6892      	ldr	r2, [r2, #8]
 800f10e:	4413      	add	r3, r2
 800f110:	681b      	ldr	r3, [r3, #0]
 800f112:	6839      	ldr	r1, [r7, #0]
 800f114:	4798      	blx	r3
    }
 800f116:	bf00      	nop
 800f118:	3708      	adds	r7, #8
 800f11a:	46bd      	mov	sp, r7
 800f11c:	bd80      	pop	{r7, pc}

0800f11e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800f11e:	b480      	push	{r7}
 800f120:	b083      	sub	sp, #12
 800f122:	af00      	add	r7, sp, #0
 800f124:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f126:	687b      	ldr	r3, [r7, #4]
 800f128:	685b      	ldr	r3, [r3, #4]
 800f12a:	2b00      	cmp	r3, #0
 800f12c:	d010      	beq.n	800f150 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f12e:	687b      	ldr	r3, [r7, #4]
 800f130:	689b      	ldr	r3, [r3, #8]
 800f132:	2b00      	cmp	r3, #0
 800f134:	d107      	bne.n	800f146 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f136:	687b      	ldr	r3, [r7, #4]
 800f138:	68db      	ldr	r3, [r3, #12]
 800f13a:	f003 0301 	and.w	r3, r3, #1
 800f13e:	2b00      	cmp	r3, #0
 800f140:	d101      	bne.n	800f146 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800f142:	2301      	movs	r3, #1
 800f144:	e000      	b.n	800f148 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800f146:	2300      	movs	r3, #0
 800f148:	2b01      	cmp	r3, #1
 800f14a:	d001      	beq.n	800f150 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800f14c:	2301      	movs	r3, #1
 800f14e:	e000      	b.n	800f152 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800f150:	2300      	movs	r3, #0
    }
 800f152:	4618      	mov	r0, r3
 800f154:	370c      	adds	r7, #12
 800f156:	46bd      	mov	sp, r7
 800f158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f15c:	4770      	bx	lr
	...

0800f160 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800f160:	b480      	push	{r7}
 800f162:	af00      	add	r7, sp, #0
    return bitmap_database;
 800f164:	4b02      	ldr	r3, [pc, #8]	; (800f170 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800f166:	4618      	mov	r0, r3
 800f168:	46bd      	mov	sp, r7
 800f16a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f16e:	4770      	bx	lr
 800f170:	08028318 	.word	0x08028318

0800f174 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800f174:	b480      	push	{r7}
 800f176:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800f178:	230a      	movs	r3, #10
}
 800f17a:	4618      	mov	r0, r3
 800f17c:	46bd      	mov	sp, r7
 800f17e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f182:	4770      	bx	lr

0800f184 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800f184:	b480      	push	{r7}
 800f186:	b085      	sub	sp, #20
 800f188:	af00      	add	r7, sp, #0
 800f18a:	60f8      	str	r0, [r7, #12]
 800f18c:	460b      	mov	r3, r1
 800f18e:	607a      	str	r2, [r7, #4]
 800f190:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800f192:	2300      	movs	r3, #0
    }
 800f194:	4618      	mov	r0, r3
 800f196:	3714      	adds	r7, #20
 800f198:	46bd      	mov	sp, r7
 800f19a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f19e:	4770      	bx	lr

0800f1a0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800f1a0:	b480      	push	{r7}
 800f1a2:	b083      	sub	sp, #12
 800f1a4:	af00      	add	r7, sp, #0
 800f1a6:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f1a8:	2300      	movs	r3, #0
    }
 800f1aa:	4618      	mov	r0, r3
 800f1ac:	370c      	adds	r7, #12
 800f1ae:	46bd      	mov	sp, r7
 800f1b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1b4:	4770      	bx	lr

0800f1b6 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800f1b6:	b480      	push	{r7}
 800f1b8:	b083      	sub	sp, #12
 800f1ba:	af00      	add	r7, sp, #0
 800f1bc:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f1be:	2300      	movs	r3, #0
    }
 800f1c0:	4618      	mov	r0, r3
 800f1c2:	370c      	adds	r7, #12
 800f1c4:	46bd      	mov	sp, r7
 800f1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1ca:	4770      	bx	lr

0800f1cc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800f1cc:	b480      	push	{r7}
 800f1ce:	b085      	sub	sp, #20
 800f1d0:	af00      	add	r7, sp, #0
 800f1d2:	60f8      	str	r0, [r7, #12]
 800f1d4:	60b9      	str	r1, [r7, #8]
 800f1d6:	4613      	mov	r3, r2
 800f1d8:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800f1da:	4a07      	ldr	r2, [pc, #28]	; (800f1f8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800f1dc:	68fb      	ldr	r3, [r7, #12]
 800f1de:	6013      	str	r3, [r2, #0]
        fonts = f;
 800f1e0:	4a06      	ldr	r2, [pc, #24]	; (800f1fc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800f1e2:	68bb      	ldr	r3, [r7, #8]
 800f1e4:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800f1e6:	4a06      	ldr	r2, [pc, #24]	; (800f200 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800f1e8:	88fb      	ldrh	r3, [r7, #6]
 800f1ea:	8013      	strh	r3, [r2, #0]
    }
 800f1ec:	bf00      	nop
 800f1ee:	3714      	adds	r7, #20
 800f1f0:	46bd      	mov	sp, r7
 800f1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1f6:	4770      	bx	lr
 800f1f8:	24004aa0 	.word	0x24004aa0
 800f1fc:	24004aa8 	.word	0x24004aa8
 800f200:	24004aa4 	.word	0x24004aa4

0800f204 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f204:	b40e      	push	{r1, r2, r3}
 800f206:	b580      	push	{r7, lr}
 800f208:	b085      	sub	sp, #20
 800f20a:	af00      	add	r7, sp, #0
 800f20c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800f20e:	f107 0320 	add.w	r3, r7, #32
 800f212:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800f214:	68bb      	ldr	r3, [r7, #8]
 800f216:	69fa      	ldr	r2, [r7, #28]
 800f218:	2100      	movs	r1, #0
 800f21a:	6878      	ldr	r0, [r7, #4]
 800f21c:	f007 f882 	bl	8016324 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f220:	4603      	mov	r3, r0
 800f222:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f224:	89fb      	ldrh	r3, [r7, #14]
}
 800f226:	4618      	mov	r0, r3
 800f228:	3714      	adds	r7, #20
 800f22a:	46bd      	mov	sp, r7
 800f22c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f230:	b003      	add	sp, #12
 800f232:	4770      	bx	lr

0800f234 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f234:	b40c      	push	{r2, r3}
 800f236:	b580      	push	{r7, lr}
 800f238:	b084      	sub	sp, #16
 800f23a:	af00      	add	r7, sp, #0
 800f23c:	6078      	str	r0, [r7, #4]
 800f23e:	460b      	mov	r3, r1
 800f240:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800f242:	f107 031c 	add.w	r3, r7, #28
 800f246:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800f248:	78f9      	ldrb	r1, [r7, #3]
 800f24a:	68bb      	ldr	r3, [r7, #8]
 800f24c:	69ba      	ldr	r2, [r7, #24]
 800f24e:	6878      	ldr	r0, [r7, #4]
 800f250:	f007 f868 	bl	8016324 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f254:	4603      	mov	r3, r0
 800f256:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f258:	89fb      	ldrh	r3, [r7, #14]
}
 800f25a:	4618      	mov	r0, r3
 800f25c:	3710      	adds	r7, #16
 800f25e:	46bd      	mov	sp, r7
 800f260:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f264:	b002      	add	sp, #8
 800f266:	4770      	bx	lr

0800f268 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800f268:	b580      	push	{r7, lr}
 800f26a:	b08a      	sub	sp, #40	; 0x28
 800f26c:	af00      	add	r7, sp, #0
 800f26e:	6078      	str	r0, [r7, #4]
 800f270:	460b      	mov	r3, r1
 800f272:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800f274:	687b      	ldr	r3, [r7, #4]
 800f276:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f278:	2b00      	cmp	r3, #0
 800f27a:	d016      	beq.n	800f2aa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f27c:	687b      	ldr	r3, [r7, #4]
 800f27e:	3322      	adds	r3, #34	; 0x22
 800f280:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800f282:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f284:	8adb      	ldrh	r3, [r3, #22]
 800f286:	2b00      	cmp	r3, #0
 800f288:	d105      	bne.n	800f296 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800f28a:	4b43      	ldr	r3, [pc, #268]	; (800f398 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f28c:	4a43      	ldr	r2, [pc, #268]	; (800f39c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f28e:	21c5      	movs	r1, #197	; 0xc5
 800f290:	4843      	ldr	r0, [pc, #268]	; (800f3a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f292:	f016 fde7 	bl	8025e64 <__assert_func>
            return buffer[pos];
 800f296:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f298:	8a9b      	ldrh	r3, [r3, #20]
 800f29a:	461a      	mov	r2, r3
 800f29c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f29e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800f2a2:	2b00      	cmp	r3, #0
 800f2a4:	d001      	beq.n	800f2aa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f2a6:	2301      	movs	r3, #1
 800f2a8:	e000      	b.n	800f2ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800f2aa:	2300      	movs	r3, #0
 800f2ac:	2b00      	cmp	r3, #0
 800f2ae:	d06a      	beq.n	800f386 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800f2b0:	6878      	ldr	r0, [r7, #4]
 800f2b2:	f008 faff 	bl	80178b4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	3322      	adds	r3, #34	; 0x22
 800f2ba:	623b      	str	r3, [r7, #32]
 800f2bc:	2301      	movs	r3, #1
 800f2be:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800f2c0:	6a3b      	ldr	r3, [r7, #32]
 800f2c2:	8adb      	ldrh	r3, [r3, #22]
 800f2c4:	8bfa      	ldrh	r2, [r7, #30]
 800f2c6:	429a      	cmp	r2, r3
 800f2c8:	d305      	bcc.n	800f2d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800f2ca:	4b36      	ldr	r3, [pc, #216]	; (800f3a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800f2cc:	4a36      	ldr	r2, [pc, #216]	; (800f3a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800f2ce:	21cb      	movs	r1, #203	; 0xcb
 800f2d0:	4833      	ldr	r0, [pc, #204]	; (800f3a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f2d2:	f016 fdc7 	bl	8025e64 <__assert_func>
            const uint16_t index = pos + offset;
 800f2d6:	6a3b      	ldr	r3, [r7, #32]
 800f2d8:	8a9a      	ldrh	r2, [r3, #20]
 800f2da:	8bfb      	ldrh	r3, [r7, #30]
 800f2dc:	4413      	add	r3, r2
 800f2de:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800f2e0:	8bbb      	ldrh	r3, [r7, #28]
 800f2e2:	2b09      	cmp	r3, #9
 800f2e4:	d801      	bhi.n	800f2ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800f2e6:	8bbb      	ldrh	r3, [r7, #28]
 800f2e8:	e001      	b.n	800f2ee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800f2ea:	8bbb      	ldrh	r3, [r7, #28]
 800f2ec:	3b0a      	subs	r3, #10
 800f2ee:	6a3a      	ldr	r2, [r7, #32]
 800f2f0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800f2f4:	f640 123f 	movw	r2, #2367	; 0x93f
 800f2f8:	4293      	cmp	r3, r2
 800f2fa:	bf0c      	ite	eq
 800f2fc:	2301      	moveq	r3, #1
 800f2fe:	2300      	movne	r3, #0
 800f300:	b2db      	uxtb	r3, r3
 800f302:	2b00      	cmp	r3, #0
 800f304:	d03f      	beq.n	800f386 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800f306:	687b      	ldr	r3, [r7, #4]
 800f308:	3322      	adds	r3, #34	; 0x22
 800f30a:	687a      	ldr	r2, [r7, #4]
 800f30c:	3222      	adds	r2, #34	; 0x22
 800f30e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800f310:	68ba      	ldr	r2, [r7, #8]
 800f312:	8ad2      	ldrh	r2, [r2, #22]
 800f314:	2a00      	cmp	r2, #0
 800f316:	d105      	bne.n	800f324 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800f318:	4b1f      	ldr	r3, [pc, #124]	; (800f398 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f31a:	4a20      	ldr	r2, [pc, #128]	; (800f39c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f31c:	21c5      	movs	r1, #197	; 0xc5
 800f31e:	4820      	ldr	r0, [pc, #128]	; (800f3a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f320:	f016 fda0 	bl	8025e64 <__assert_func>
            return buffer[pos];
 800f324:	68ba      	ldr	r2, [r7, #8]
 800f326:	8a92      	ldrh	r2, [r2, #20]
 800f328:	4611      	mov	r1, r2
 800f32a:	68ba      	ldr	r2, [r7, #8]
 800f32c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800f330:	613b      	str	r3, [r7, #16]
 800f332:	4613      	mov	r3, r2
 800f334:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800f336:	693b      	ldr	r3, [r7, #16]
 800f338:	8adb      	ldrh	r3, [r3, #22]
 800f33a:	2b01      	cmp	r3, #1
 800f33c:	d806      	bhi.n	800f34c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800f33e:	4b1b      	ldr	r3, [pc, #108]	; (800f3ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800f340:	4a1b      	ldr	r2, [pc, #108]	; (800f3b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800f342:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800f346:	4816      	ldr	r0, [pc, #88]	; (800f3a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f348:	f016 fd8c 	bl	8025e64 <__assert_func>
            const uint16_t index = pos + 1;
 800f34c:	693b      	ldr	r3, [r7, #16]
 800f34e:	8a9b      	ldrh	r3, [r3, #20]
 800f350:	3301      	adds	r3, #1
 800f352:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800f354:	89bb      	ldrh	r3, [r7, #12]
 800f356:	2b09      	cmp	r3, #9
 800f358:	d801      	bhi.n	800f35e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800f35a:	89bb      	ldrh	r3, [r7, #12]
 800f35c:	e000      	b.n	800f360 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800f35e:	2300      	movs	r3, #0
 800f360:	693a      	ldr	r2, [r7, #16]
 800f362:	89f9      	ldrh	r1, [r7, #14]
 800f364:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800f368:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800f36a:	687b      	ldr	r3, [r7, #4]
 800f36c:	3322      	adds	r3, #34	; 0x22
 800f36e:	61bb      	str	r3, [r7, #24]
 800f370:	f640 133f 	movw	r3, #2367	; 0x93f
 800f374:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800f376:	69bb      	ldr	r3, [r7, #24]
 800f378:	8a9b      	ldrh	r3, [r3, #20]
 800f37a:	4619      	mov	r1, r3
 800f37c:	69bb      	ldr	r3, [r7, #24]
 800f37e:	8afa      	ldrh	r2, [r7, #22]
 800f380:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800f384:	bf00      	nop
        }
    }
    return getNextChar();
 800f386:	6878      	ldr	r0, [r7, #4]
 800f388:	f008 f996 	bl	80176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f38c:	4603      	mov	r3, r0
}
 800f38e:	4618      	mov	r0, r3
 800f390:	3728      	adds	r7, #40	; 0x28
 800f392:	46bd      	mov	sp, r7
 800f394:	bd80      	pop	{r7, pc}
 800f396:	bf00      	nop
 800f398:	08027334 	.word	0x08027334
 800f39c:	08027340 	.word	0x08027340
 800f3a0:	080273ec 	.word	0x080273ec
 800f3a4:	08027434 	.word	0x08027434
 800f3a8:	08027444 	.word	0x08027444
 800f3ac:	08027518 	.word	0x08027518
 800f3b0:	08027524 	.word	0x08027524

0800f3b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800f3b4:	b580      	push	{r7, lr}
 800f3b6:	b082      	sub	sp, #8
 800f3b8:	af00      	add	r7, sp, #0
 800f3ba:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800f3bc:	6878      	ldr	r0, [r7, #4]
 800f3be:	f008 f944 	bl	801764a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800f3c2:	bf00      	nop
 800f3c4:	3708      	adds	r7, #8
 800f3c6:	46bd      	mov	sp, r7
 800f3c8:	bd80      	pop	{r7, pc}

0800f3ca <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800f3ca:	b580      	push	{r7, lr}
 800f3cc:	b088      	sub	sp, #32
 800f3ce:	af02      	add	r7, sp, #8
 800f3d0:	60f8      	str	r0, [r7, #12]
 800f3d2:	1d38      	adds	r0, r7, #4
 800f3d4:	e880 0006 	stmia.w	r0, {r1, r2}
 800f3d8:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800f3da:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800f3de:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800f3e0:	1d39      	adds	r1, r7, #4
 800f3e2:	697b      	ldr	r3, [r7, #20]
 800f3e4:	9301      	str	r3, [sp, #4]
 800f3e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f3e8:	9300      	str	r3, [sp, #0]
 800f3ea:	6a3b      	ldr	r3, [r7, #32]
 800f3ec:	683a      	ldr	r2, [r7, #0]
 800f3ee:	68f8      	ldr	r0, [r7, #12]
 800f3f0:	f005 fbd6 	bl	8014ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800f3f4:	bf00      	nop
 800f3f6:	3718      	adds	r7, #24
 800f3f8:	46bd      	mov	sp, r7
 800f3fa:	bd80      	pop	{r7, pc}

0800f3fc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800f3fc:	b590      	push	{r4, r7, lr}
 800f3fe:	b085      	sub	sp, #20
 800f400:	af00      	add	r7, sp, #0
 800f402:	4603      	mov	r3, r0
 800f404:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800f406:	2300      	movs	r3, #0
 800f408:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800f40a:	88fb      	ldrh	r3, [r7, #6]
 800f40c:	2b00      	cmp	r3, #0
 800f40e:	d127      	bne.n	800f460 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800f410:	88fb      	ldrh	r3, [r7, #6]
 800f412:	4a1e      	ldr	r2, [pc, #120]	; (800f48c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800f414:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f418:	2b00      	cmp	r3, #0
 800f41a:	d016      	beq.n	800f44a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800f41c:	88fb      	ldrh	r3, [r7, #6]
 800f41e:	4a1b      	ldr	r2, [pc, #108]	; (800f48c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800f420:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f424:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800f426:	68bb      	ldr	r3, [r7, #8]
 800f428:	681b      	ldr	r3, [r3, #0]
 800f42a:	68ba      	ldr	r2, [r7, #8]
 800f42c:	4413      	add	r3, r2
 800f42e:	4a18      	ldr	r2, [pc, #96]	; (800f490 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800f430:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800f432:	68bb      	ldr	r3, [r7, #8]
 800f434:	685b      	ldr	r3, [r3, #4]
 800f436:	68ba      	ldr	r2, [r7, #8]
 800f438:	4413      	add	r3, r2
 800f43a:	4a16      	ldr	r2, [pc, #88]	; (800f494 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800f43c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800f43e:	68bb      	ldr	r3, [r7, #8]
 800f440:	689b      	ldr	r3, [r3, #8]
 800f442:	68ba      	ldr	r2, [r7, #8]
 800f444:	4413      	add	r3, r2
 800f446:	60fb      	str	r3, [r7, #12]
 800f448:	e00a      	b.n	800f460 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800f44a:	4b11      	ldr	r3, [pc, #68]	; (800f490 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800f44c:	4a12      	ldr	r2, [pc, #72]	; (800f498 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800f44e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800f450:	4a12      	ldr	r2, [pc, #72]	; (800f49c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800f452:	4b10      	ldr	r3, [pc, #64]	; (800f494 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800f454:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800f456:	88fb      	ldrh	r3, [r7, #6]
 800f458:	4a11      	ldr	r2, [pc, #68]	; (800f4a0 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800f45a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f45e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800f460:	68fb      	ldr	r3, [r7, #12]
 800f462:	2b00      	cmp	r3, #0
 800f464:	d00d      	beq.n	800f482 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800f466:	4a0f      	ldr	r2, [pc, #60]	; (800f4a4 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800f468:	88fb      	ldrh	r3, [r7, #6]
 800f46a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800f46c:	f000 f83e 	bl	800f4ec <_ZN17TypedTextDatabase8getFontsEv>
 800f470:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800f472:	f000 f833 	bl	800f4dc <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800f476:	4603      	mov	r3, r0
 800f478:	461a      	mov	r2, r3
 800f47a:	4621      	mov	r1, r4
 800f47c:	68f8      	ldr	r0, [r7, #12]
 800f47e:	f7ff fea5 	bl	800f1cc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800f482:	bf00      	nop
 800f484:	3714      	adds	r7, #20
 800f486:	46bd      	mov	sp, r7
 800f488:	bd90      	pop	{r4, r7, pc}
 800f48a:	bf00      	nop
 800f48c:	240023b4 	.word	0x240023b4
 800f490:	240023bc 	.word	0x240023bc
 800f494:	240023c0 	.word	0x240023c0
 800f498:	0802bc14 	.word	0x0802bc14
 800f49c:	0802bc0c 	.word	0x0802bc0c
 800f4a0:	0802bc20 	.word	0x0802bc20
 800f4a4:	240023b8 	.word	0x240023b8

0800f4a8 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800f4a8:	b480      	push	{r7}
 800f4aa:	b083      	sub	sp, #12
 800f4ac:	af00      	add	r7, sp, #0
 800f4ae:	6078      	str	r0, [r7, #4]
 800f4b0:	460b      	mov	r3, r1
 800f4b2:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800f4b4:	4b07      	ldr	r3, [pc, #28]	; (800f4d4 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800f4b6:	681a      	ldr	r2, [r3, #0]
 800f4b8:	4b07      	ldr	r3, [pc, #28]	; (800f4d8 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800f4ba:	6819      	ldr	r1, [r3, #0]
 800f4bc:	887b      	ldrh	r3, [r7, #2]
 800f4be:	009b      	lsls	r3, r3, #2
 800f4c0:	440b      	add	r3, r1
 800f4c2:	681b      	ldr	r3, [r3, #0]
 800f4c4:	005b      	lsls	r3, r3, #1
 800f4c6:	4413      	add	r3, r2
}
 800f4c8:	4618      	mov	r0, r3
 800f4ca:	370c      	adds	r7, #12
 800f4cc:	46bd      	mov	sp, r7
 800f4ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4d2:	4770      	bx	lr
 800f4d4:	240023bc 	.word	0x240023bc
 800f4d8:	240023c0 	.word	0x240023c0

0800f4dc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800f4dc:	b480      	push	{r7}
 800f4de:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800f4e0:	2302      	movs	r3, #2
}
 800f4e2:	4618      	mov	r0, r3
 800f4e4:	46bd      	mov	sp, r7
 800f4e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4ea:	4770      	bx	lr

0800f4ec <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800f4ec:	b480      	push	{r7}
 800f4ee:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800f4f0:	4b02      	ldr	r3, [pc, #8]	; (800f4fc <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800f4f2:	4618      	mov	r0, r3
 800f4f4:	46bd      	mov	sp, r7
 800f4f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4fa:	4770      	bx	lr
 800f4fc:	240023c4 	.word	0x240023c4

0800f500 <_Z41__static_initialization_and_destruction_0ii>:
    case 0:
        touchgfx_fonts[0] = &(getFont_Asap_Regular_80_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800f500:	b580      	push	{r7, lr}
 800f502:	b082      	sub	sp, #8
 800f504:	af00      	add	r7, sp, #0
 800f506:	6078      	str	r0, [r7, #4]
 800f508:	6039      	str	r1, [r7, #0]
 800f50a:	687b      	ldr	r3, [r7, #4]
 800f50c:	2b01      	cmp	r3, #1
 800f50e:	d109      	bne.n	800f524 <_Z41__static_initialization_and_destruction_0ii+0x24>
 800f510:	683b      	ldr	r3, [r7, #0]
 800f512:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f516:	4293      	cmp	r3, r2
 800f518:	d104      	bne.n	800f524 <_Z41__static_initialization_and_destruction_0ii+0x24>
    &(getFont_Asap_Regular_80_4bpp())
 800f51a:	f7fd fead 	bl	800d278 <_Z28getFont_Asap_Regular_80_4bppv>
 800f51e:	4603      	mov	r3, r0
};
 800f520:	4a02      	ldr	r2, [pc, #8]	; (800f52c <_Z41__static_initialization_and_destruction_0ii+0x2c>)
 800f522:	6013      	str	r3, [r2, #0]
} // namespace TypedTextDatabase
 800f524:	bf00      	nop
 800f526:	3708      	adds	r7, #8
 800f528:	46bd      	mov	sp, r7
 800f52a:	bd80      	pop	{r7, pc}
 800f52c:	240023c4 	.word	0x240023c4

0800f530 <_GLOBAL__sub_I_touchgfx_fonts>:
 800f530:	b580      	push	{r7, lr}
 800f532:	af00      	add	r7, sp, #0
 800f534:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f538:	2001      	movs	r0, #1
 800f53a:	f7ff ffe1 	bl	800f500 <_Z41__static_initialization_and_destruction_0ii>
 800f53e:	bd80      	pop	{r7, pc}

0800f540 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800f540:	b580      	push	{r7, lr}
 800f542:	b082      	sub	sp, #8
 800f544:	af00      	add	r7, sp, #0
 800f546:	6078      	str	r0, [r7, #4]
 800f548:	4a05      	ldr	r2, [pc, #20]	; (800f560 <_ZN19FrontendApplicationD1Ev+0x20>)
 800f54a:	687b      	ldr	r3, [r7, #4]
 800f54c:	601a      	str	r2, [r3, #0]
 800f54e:	687b      	ldr	r3, [r7, #4]
 800f550:	4618      	mov	r0, r3
 800f552:	f7fe f8f1 	bl	800d738 <_ZN23FrontendApplicationBaseD1Ev>
 800f556:	687b      	ldr	r3, [r7, #4]
 800f558:	4618      	mov	r0, r3
 800f55a:	3708      	adds	r7, #8
 800f55c:	46bd      	mov	sp, r7
 800f55e:	bd80      	pop	{r7, pc}
 800f560:	08028444 	.word	0x08028444

0800f564 <_ZN19FrontendApplicationD0Ev>:
 800f564:	b580      	push	{r7, lr}
 800f566:	b082      	sub	sp, #8
 800f568:	af00      	add	r7, sp, #0
 800f56a:	6078      	str	r0, [r7, #4]
 800f56c:	6878      	ldr	r0, [r7, #4]
 800f56e:	f7ff ffe7 	bl	800f540 <_ZN19FrontendApplicationD1Ev>
 800f572:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800f576:	6878      	ldr	r0, [r7, #4]
 800f578:	f016 fc45 	bl	8025e06 <_ZdlPvj>
 800f57c:	687b      	ldr	r3, [r7, #4]
 800f57e:	4618      	mov	r0, r3
 800f580:	3708      	adds	r7, #8
 800f582:	46bd      	mov	sp, r7
 800f584:	bd80      	pop	{r7, pc}

0800f586 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800f586:	b580      	push	{r7, lr}
 800f588:	b082      	sub	sp, #8
 800f58a:	af00      	add	r7, sp, #0
 800f58c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800f58e:	687b      	ldr	r3, [r7, #4]
 800f590:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800f594:	4618      	mov	r0, r3
 800f596:	f000 fa39 	bl	800fa0c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800f59a:	687b      	ldr	r3, [r7, #4]
 800f59c:	4618      	mov	r0, r3
 800f59e:	f005 fff5 	bl	801558c <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800f5a2:	bf00      	nop
 800f5a4:	3708      	adds	r7, #8
 800f5a6:	46bd      	mov	sp, r7
 800f5a8:	bd80      	pop	{r7, pc}
	...

0800f5ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800f5ac:	b580      	push	{r7, lr}
 800f5ae:	b084      	sub	sp, #16
 800f5b0:	af00      	add	r7, sp, #0
 800f5b2:	60f8      	str	r0, [r7, #12]
 800f5b4:	60b9      	str	r1, [r7, #8]
 800f5b6:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800f5b8:	68fb      	ldr	r3, [r7, #12]
 800f5ba:	687a      	ldr	r2, [r7, #4]
 800f5bc:	68b9      	ldr	r1, [r7, #8]
 800f5be:	4618      	mov	r0, r3
 800f5c0:	f7fe f90a 	bl	800d7d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800f5c4:	4a03      	ldr	r2, [pc, #12]	; (800f5d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800f5c6:	68fb      	ldr	r3, [r7, #12]
 800f5c8:	601a      	str	r2, [r3, #0]
{
}
 800f5ca:	68fb      	ldr	r3, [r7, #12]
 800f5cc:	4618      	mov	r0, r3
 800f5ce:	3710      	adds	r7, #16
 800f5d0:	46bd      	mov	sp, r7
 800f5d2:	bd80      	pop	{r7, pc}
 800f5d4:	08028444 	.word	0x08028444

0800f5d8 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800f5d8:	b480      	push	{r7}
 800f5da:	b083      	sub	sp, #12
 800f5dc:	af00      	add	r7, sp, #0
 800f5de:	6078      	str	r0, [r7, #4]
    {
    }
 800f5e0:	bf00      	nop
 800f5e2:	370c      	adds	r7, #12
 800f5e4:	46bd      	mov	sp, r7
 800f5e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5ea:	4770      	bx	lr

0800f5ec <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800f5ec:	b480      	push	{r7}
 800f5ee:	b083      	sub	sp, #12
 800f5f0:	af00      	add	r7, sp, #0
 800f5f2:	6078      	str	r0, [r7, #4]
    {
    }
 800f5f4:	bf00      	nop
 800f5f6:	370c      	adds	r7, #12
 800f5f8:	46bd      	mov	sp, r7
 800f5fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5fe:	4770      	bx	lr

0800f600 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800f600:	b480      	push	{r7}
 800f602:	b083      	sub	sp, #12
 800f604:	af00      	add	r7, sp, #0
 800f606:	6078      	str	r0, [r7, #4]
    {
 800f608:	4a04      	ldr	r2, [pc, #16]	; (800f61c <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800f60a:	687b      	ldr	r3, [r7, #4]
 800f60c:	601a      	str	r2, [r3, #0]
    }
 800f60e:	687b      	ldr	r3, [r7, #4]
 800f610:	4618      	mov	r0, r3
 800f612:	370c      	adds	r7, #12
 800f614:	46bd      	mov	sp, r7
 800f616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f61a:	4770      	bx	lr
 800f61c:	080284d0 	.word	0x080284d0

0800f620 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800f620:	b580      	push	{r7, lr}
 800f622:	b082      	sub	sp, #8
 800f624:	af00      	add	r7, sp, #0
 800f626:	6078      	str	r0, [r7, #4]
    }
 800f628:	6878      	ldr	r0, [r7, #4]
 800f62a:	f7ff ffe9 	bl	800f600 <_ZN8touchgfx9PresenterD1Ev>
 800f62e:	2104      	movs	r1, #4
 800f630:	6878      	ldr	r0, [r7, #4]
 800f632:	f016 fbe8 	bl	8025e06 <_ZdlPvj>
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	4618      	mov	r0, r3
 800f63a:	3708      	adds	r7, #8
 800f63c:	46bd      	mov	sp, r7
 800f63e:	bd80      	pop	{r7, pc}

0800f640 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800f640:	b480      	push	{r7}
 800f642:	b083      	sub	sp, #12
 800f644:	af00      	add	r7, sp, #0
 800f646:	6078      	str	r0, [r7, #4]
    {
 800f648:	4a04      	ldr	r2, [pc, #16]	; (800f65c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800f64a:	687b      	ldr	r3, [r7, #4]
 800f64c:	601a      	str	r2, [r3, #0]
    }
 800f64e:	687b      	ldr	r3, [r7, #4]
 800f650:	4618      	mov	r0, r3
 800f652:	370c      	adds	r7, #12
 800f654:	46bd      	mov	sp, r7
 800f656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f65a:	4770      	bx	lr
 800f65c:	080284d0 	.word	0x080284d0

0800f660 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800f660:	b480      	push	{r7}
 800f662:	b083      	sub	sp, #12
 800f664:	af00      	add	r7, sp, #0
 800f666:	6078      	str	r0, [r7, #4]
 800f668:	4a06      	ldr	r2, [pc, #24]	; (800f684 <_ZN13ModelListenerC1Ev+0x24>)
 800f66a:	687b      	ldr	r3, [r7, #4]
 800f66c:	601a      	str	r2, [r3, #0]
 800f66e:	687b      	ldr	r3, [r7, #4]
 800f670:	2200      	movs	r2, #0
 800f672:	605a      	str	r2, [r3, #4]
 800f674:	687b      	ldr	r3, [r7, #4]
 800f676:	4618      	mov	r0, r3
 800f678:	370c      	adds	r7, #12
 800f67a:	46bd      	mov	sp, r7
 800f67c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f680:	4770      	bx	lr
 800f682:	bf00      	nop
 800f684:	080284c0 	.word	0x080284c0

0800f688 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800f688:	b480      	push	{r7}
 800f68a:	b083      	sub	sp, #12
 800f68c:	af00      	add	r7, sp, #0
 800f68e:	6078      	str	r0, [r7, #4]
 800f690:	4a04      	ldr	r2, [pc, #16]	; (800f6a4 <_ZN13ModelListenerD1Ev+0x1c>)
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	601a      	str	r2, [r3, #0]
 800f696:	687b      	ldr	r3, [r7, #4]
 800f698:	4618      	mov	r0, r3
 800f69a:	370c      	adds	r7, #12
 800f69c:	46bd      	mov	sp, r7
 800f69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6a2:	4770      	bx	lr
 800f6a4:	080284c0 	.word	0x080284c0

0800f6a8 <_ZN13ModelListenerD0Ev>:
 800f6a8:	b580      	push	{r7, lr}
 800f6aa:	b082      	sub	sp, #8
 800f6ac:	af00      	add	r7, sp, #0
 800f6ae:	6078      	str	r0, [r7, #4]
 800f6b0:	6878      	ldr	r0, [r7, #4]
 800f6b2:	f7ff ffe9 	bl	800f688 <_ZN13ModelListenerD1Ev>
 800f6b6:	2108      	movs	r1, #8
 800f6b8:	6878      	ldr	r0, [r7, #4]
 800f6ba:	f016 fba4 	bl	8025e06 <_ZdlPvj>
 800f6be:	687b      	ldr	r3, [r7, #4]
 800f6c0:	4618      	mov	r0, r3
 800f6c2:	3708      	adds	r7, #8
 800f6c4:	46bd      	mov	sp, r7
 800f6c6:	bd80      	pop	{r7, pc}

0800f6c8 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800f6c8:	b580      	push	{r7, lr}
 800f6ca:	b082      	sub	sp, #8
 800f6cc:	af00      	add	r7, sp, #0
 800f6ce:	6078      	str	r0, [r7, #4]
 800f6d0:	4a09      	ldr	r2, [pc, #36]	; (800f6f8 <_ZN13MainPresenterD1Ev+0x30>)
 800f6d2:	687b      	ldr	r3, [r7, #4]
 800f6d4:	601a      	str	r2, [r3, #0]
 800f6d6:	4a09      	ldr	r2, [pc, #36]	; (800f6fc <_ZN13MainPresenterD1Ev+0x34>)
 800f6d8:	687b      	ldr	r3, [r7, #4]
 800f6da:	605a      	str	r2, [r3, #4]
 800f6dc:	687b      	ldr	r3, [r7, #4]
 800f6de:	3304      	adds	r3, #4
 800f6e0:	4618      	mov	r0, r3
 800f6e2:	f7ff ffd1 	bl	800f688 <_ZN13ModelListenerD1Ev>
 800f6e6:	687b      	ldr	r3, [r7, #4]
 800f6e8:	4618      	mov	r0, r3
 800f6ea:	f7ff ff89 	bl	800f600 <_ZN8touchgfx9PresenterD1Ev>
 800f6ee:	687b      	ldr	r3, [r7, #4]
 800f6f0:	4618      	mov	r0, r3
 800f6f2:	3708      	adds	r7, #8
 800f6f4:	46bd      	mov	sp, r7
 800f6f6:	bd80      	pop	{r7, pc}
 800f6f8:	08028498 	.word	0x08028498
 800f6fc:	080284b0 	.word	0x080284b0

0800f700 <_ZThn4_N13MainPresenterD1Ev>:
 800f700:	f1a0 0004 	sub.w	r0, r0, #4
 800f704:	e7e0      	b.n	800f6c8 <_ZN13MainPresenterD1Ev>
 800f706:	bf00      	nop

0800f708 <_ZN13MainPresenterD0Ev>:
 800f708:	b580      	push	{r7, lr}
 800f70a:	b082      	sub	sp, #8
 800f70c:	af00      	add	r7, sp, #0
 800f70e:	6078      	str	r0, [r7, #4]
 800f710:	6878      	ldr	r0, [r7, #4]
 800f712:	f7ff ffd9 	bl	800f6c8 <_ZN13MainPresenterD1Ev>
 800f716:	2110      	movs	r1, #16
 800f718:	6878      	ldr	r0, [r7, #4]
 800f71a:	f016 fb74 	bl	8025e06 <_ZdlPvj>
 800f71e:	687b      	ldr	r3, [r7, #4]
 800f720:	4618      	mov	r0, r3
 800f722:	3708      	adds	r7, #8
 800f724:	46bd      	mov	sp, r7
 800f726:	bd80      	pop	{r7, pc}

0800f728 <_ZThn4_N13MainPresenterD0Ev>:
 800f728:	f1a0 0004 	sub.w	r0, r0, #4
 800f72c:	e7ec      	b.n	800f708 <_ZN13MainPresenterD0Ev>
	...

0800f730 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800f730:	b580      	push	{r7, lr}
 800f732:	b082      	sub	sp, #8
 800f734:	af00      	add	r7, sp, #0
 800f736:	6078      	str	r0, [r7, #4]
 800f738:	6039      	str	r1, [r7, #0]
    : view(v)
 800f73a:	687b      	ldr	r3, [r7, #4]
 800f73c:	4618      	mov	r0, r3
 800f73e:	f7ff ff7f 	bl	800f640 <_ZN8touchgfx9PresenterC1Ev>
 800f742:	687b      	ldr	r3, [r7, #4]
 800f744:	3304      	adds	r3, #4
 800f746:	4618      	mov	r0, r3
 800f748:	f7ff ff8a 	bl	800f660 <_ZN13ModelListenerC1Ev>
 800f74c:	4a06      	ldr	r2, [pc, #24]	; (800f768 <_ZN13MainPresenterC1ER8MainView+0x38>)
 800f74e:	687b      	ldr	r3, [r7, #4]
 800f750:	601a      	str	r2, [r3, #0]
 800f752:	4a06      	ldr	r2, [pc, #24]	; (800f76c <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800f754:	687b      	ldr	r3, [r7, #4]
 800f756:	605a      	str	r2, [r3, #4]
 800f758:	687b      	ldr	r3, [r7, #4]
 800f75a:	683a      	ldr	r2, [r7, #0]
 800f75c:	60da      	str	r2, [r3, #12]
{
}
 800f75e:	687b      	ldr	r3, [r7, #4]
 800f760:	4618      	mov	r0, r3
 800f762:	3708      	adds	r7, #8
 800f764:	46bd      	mov	sp, r7
 800f766:	bd80      	pop	{r7, pc}
 800f768:	08028498 	.word	0x08028498
 800f76c:	080284b0 	.word	0x080284b0

0800f770 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800f770:	b480      	push	{r7}
 800f772:	b083      	sub	sp, #12
 800f774:	af00      	add	r7, sp, #0
 800f776:	6078      	str	r0, [r7, #4]
}
 800f778:	bf00      	nop
 800f77a:	370c      	adds	r7, #12
 800f77c:	46bd      	mov	sp, r7
 800f77e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f782:	4770      	bx	lr

0800f784 <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800f784:	b480      	push	{r7}
 800f786:	b083      	sub	sp, #12
 800f788:	af00      	add	r7, sp, #0
 800f78a:	6078      	str	r0, [r7, #4]
}
 800f78c:	bf00      	nop
 800f78e:	370c      	adds	r7, #12
 800f790:	46bd      	mov	sp, r7
 800f792:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f796:	4770      	bx	lr

0800f798 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800f798:	b580      	push	{r7, lr}
 800f79a:	b082      	sub	sp, #8
 800f79c:	af00      	add	r7, sp, #0
 800f79e:	6078      	str	r0, [r7, #4]
 800f7a0:	4a05      	ldr	r2, [pc, #20]	; (800f7b8 <_ZN8MainViewD1Ev+0x20>)
 800f7a2:	687b      	ldr	r3, [r7, #4]
 800f7a4:	601a      	str	r2, [r3, #0]
 800f7a6:	687b      	ldr	r3, [r7, #4]
 800f7a8:	4618      	mov	r0, r3
 800f7aa:	f7ff facb 	bl	800ed44 <_ZN12MainViewBaseD1Ev>
 800f7ae:	687b      	ldr	r3, [r7, #4]
 800f7b0:	4618      	mov	r0, r3
 800f7b2:	3708      	adds	r7, #8
 800f7b4:	46bd      	mov	sp, r7
 800f7b6:	bd80      	pop	{r7, pc}
 800f7b8:	080284e8 	.word	0x080284e8

0800f7bc <_ZN8MainViewD0Ev>:
 800f7bc:	b580      	push	{r7, lr}
 800f7be:	b082      	sub	sp, #8
 800f7c0:	af00      	add	r7, sp, #0
 800f7c2:	6078      	str	r0, [r7, #4]
 800f7c4:	6878      	ldr	r0, [r7, #4]
 800f7c6:	f7ff ffe7 	bl	800f798 <_ZN8MainViewD1Ev>
 800f7ca:	f44f 71ca 	mov.w	r1, #404	; 0x194
 800f7ce:	6878      	ldr	r0, [r7, #4]
 800f7d0:	f016 fb19 	bl	8025e06 <_ZdlPvj>
 800f7d4:	687b      	ldr	r3, [r7, #4]
 800f7d6:	4618      	mov	r0, r3
 800f7d8:	3708      	adds	r7, #8
 800f7da:	46bd      	mov	sp, r7
 800f7dc:	bd80      	pop	{r7, pc}
	...

0800f7e0 <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800f7e0:	b580      	push	{r7, lr}
 800f7e2:	b082      	sub	sp, #8
 800f7e4:	af00      	add	r7, sp, #0
 800f7e6:	6078      	str	r0, [r7, #4]
 800f7e8:	687b      	ldr	r3, [r7, #4]
 800f7ea:	4618      	mov	r0, r3
 800f7ec:	f7ff f8ba 	bl	800e964 <_ZN12MainViewBaseC1Ev>
 800f7f0:	4a05      	ldr	r2, [pc, #20]	; (800f808 <_ZN8MainViewC1Ev+0x28>)
 800f7f2:	687b      	ldr	r3, [r7, #4]
 800f7f4:	601a      	str	r2, [r3, #0]
 800f7f6:	687b      	ldr	r3, [r7, #4]
 800f7f8:	2200      	movs	r2, #0
 800f7fa:	f883 2190 	strb.w	r2, [r3, #400]	; 0x190
 800f7fe:	687b      	ldr	r3, [r7, #4]
 800f800:	4618      	mov	r0, r3
 800f802:	3708      	adds	r7, #8
 800f804:	46bd      	mov	sp, r7
 800f806:	bd80      	pop	{r7, pc}
 800f808:	080284e8 	.word	0x080284e8

0800f80c <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800f80c:	b580      	push	{r7, lr}
 800f80e:	b082      	sub	sp, #8
 800f810:	af00      	add	r7, sp, #0
 800f812:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800f814:	6878      	ldr	r0, [r7, #4]
 800f816:	f000 f841 	bl	800f89c <_ZN8MainView17updateGFXElementsEv>
}
 800f81a:	bf00      	nop
 800f81c:	3708      	adds	r7, #8
 800f81e:	46bd      	mov	sp, r7
 800f820:	bd80      	pop	{r7, pc}

0800f822 <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800f822:	b580      	push	{r7, lr}
 800f824:	b082      	sub	sp, #8
 800f826:	af00      	add	r7, sp, #0
 800f828:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800f82a:	687b      	ldr	r3, [r7, #4]
 800f82c:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800f830:	1c5a      	adds	r2, r3, #1
 800f832:	b2d1      	uxtb	r1, r2
 800f834:	687a      	ldr	r2, [r7, #4]
 800f836:	f882 1190 	strb.w	r1, [r2, #400]	; 0x190
 800f83a:	2b2a      	cmp	r3, #42	; 0x2a
 800f83c:	d804      	bhi.n	800f848 <_ZN8MainView13increaseValueEv+0x26>
 800f83e:	687b      	ldr	r3, [r7, #4]
 800f840:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 800f844:	781a      	ldrb	r2, [r3, #0]
 800f846:	e000      	b.n	800f84a <_ZN8MainView13increaseValueEv+0x28>
 800f848:	222a      	movs	r2, #42	; 0x2a
 800f84a:	687b      	ldr	r3, [r7, #4]
 800f84c:	f883 2190 	strb.w	r2, [r3, #400]	; 0x190
    updateGFXElements();
 800f850:	6878      	ldr	r0, [r7, #4]
 800f852:	f000 f823 	bl	800f89c <_ZN8MainView17updateGFXElementsEv>
}
 800f856:	bf00      	nop
 800f858:	3708      	adds	r7, #8
 800f85a:	46bd      	mov	sp, r7
 800f85c:	bd80      	pop	{r7, pc}

0800f85e <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800f85e:	b580      	push	{r7, lr}
 800f860:	b082      	sub	sp, #8
 800f862:	af00      	add	r7, sp, #0
 800f864:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800f866:	687b      	ldr	r3, [r7, #4]
 800f868:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800f86c:	1e5a      	subs	r2, r3, #1
 800f86e:	b2d1      	uxtb	r1, r2
 800f870:	687a      	ldr	r2, [r7, #4]
 800f872:	f882 1190 	strb.w	r1, [r2, #400]	; 0x190
 800f876:	2b00      	cmp	r3, #0
 800f878:	d004      	beq.n	800f884 <_ZN8MainView13decreaseValueEv+0x26>
 800f87a:	687b      	ldr	r3, [r7, #4]
 800f87c:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 800f880:	781a      	ldrb	r2, [r3, #0]
 800f882:	e000      	b.n	800f886 <_ZN8MainView13decreaseValueEv+0x28>
 800f884:	2200      	movs	r2, #0
 800f886:	687b      	ldr	r3, [r7, #4]
 800f888:	f883 2190 	strb.w	r2, [r3, #400]	; 0x190
    updateGFXElements();
 800f88c:	6878      	ldr	r0, [r7, #4]
 800f88e:	f000 f805 	bl	800f89c <_ZN8MainView17updateGFXElementsEv>
}
 800f892:	bf00      	nop
 800f894:	3708      	adds	r7, #8
 800f896:	46bd      	mov	sp, r7
 800f898:	bd80      	pop	{r7, pc}
	...

0800f89c <_ZN8MainView17updateGFXElementsEv>:

void MainView::updateGFXElements()
{
 800f89c:	b590      	push	{r4, r7, lr}
 800f89e:	b08b      	sub	sp, #44	; 0x2c
 800f8a0:	af00      	add	r7, sp, #0
 800f8a2:	6078      	str	r0, [r7, #4]
    //Counter text area GFX uptade.
    Unicode::snprintf(countTxtBuffer, 3, "%d", count);
 800f8a4:	687b      	ldr	r3, [r7, #4]
 800f8a6:	f503 70bc 	add.w	r0, r3, #376	; 0x178
 800f8aa:	687b      	ldr	r3, [r7, #4]
 800f8ac:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800f8b0:	4a4e      	ldr	r2, [pc, #312]	; (800f9ec <_ZN8MainView17updateGFXElementsEv+0x150>)
 800f8b2:	2103      	movs	r1, #3
 800f8b4:	f008 fda6 	bl	8018404 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    //Button GFX update and touchable.
    if (count < UPPER_LIMIT)
 800f8b8:	687b      	ldr	r3, [r7, #4]
 800f8ba:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800f8be:	2b29      	cmp	r3, #41	; 0x29
 800f8c0:	d81e      	bhi.n	800f900 <_ZN8MainView17updateGFXElementsEv+0x64>
    {
        buttonUp.setBitmaps(Bitmap(BITMAP_UP_BTN_ID), Bitmap(BITMAP_UP_BTN_PRESSED_ID));
 800f8c2:	687b      	ldr	r3, [r7, #4]
 800f8c4:	f503 7488 	add.w	r4, r3, #272	; 0x110
 800f8c8:	f107 0308 	add.w	r3, r7, #8
 800f8cc:	2107      	movs	r1, #7
 800f8ce:	4618      	mov	r0, r3
 800f8d0:	f7fe fab8 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f8d4:	f107 030c 	add.w	r3, r7, #12
 800f8d8:	2109      	movs	r1, #9
 800f8da:	4618      	mov	r0, r3
 800f8dc:	f7fe fab2 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f8e0:	f107 020c 	add.w	r2, r7, #12
 800f8e4:	f107 0308 	add.w	r3, r7, #8
 800f8e8:	4619      	mov	r1, r3
 800f8ea:	4620      	mov	r0, r4
 800f8ec:	f003 ff5e 	bl	80137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        buttonUp.setTouchable(true);
 800f8f0:	687b      	ldr	r3, [r7, #4]
 800f8f2:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800f8f6:	2101      	movs	r1, #1
 800f8f8:	4618      	mov	r0, r3
 800f8fa:	f7fe fbef 	bl	800e0dc <_ZN8touchgfx8Drawable12setTouchableEb>
 800f8fe:	e01d      	b.n	800f93c <_ZN8MainView17updateGFXElementsEv+0xa0>
    }
    else
    {
        buttonUp.setBitmaps(Bitmap(BITMAP_UP_BTN_DISABLED_ID), Bitmap(BITMAP_UP_BTN_DISABLED_ID));
 800f900:	687b      	ldr	r3, [r7, #4]
 800f902:	f503 7488 	add.w	r4, r3, #272	; 0x110
 800f906:	f107 0310 	add.w	r3, r7, #16
 800f90a:	2108      	movs	r1, #8
 800f90c:	4618      	mov	r0, r3
 800f90e:	f7fe fa99 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f912:	f107 0314 	add.w	r3, r7, #20
 800f916:	2108      	movs	r1, #8
 800f918:	4618      	mov	r0, r3
 800f91a:	f7fe fa93 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f91e:	f107 0214 	add.w	r2, r7, #20
 800f922:	f107 0310 	add.w	r3, r7, #16
 800f926:	4619      	mov	r1, r3
 800f928:	4620      	mov	r0, r4
 800f92a:	f003 ff3f 	bl	80137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        buttonUp.setTouchable(false);
 800f92e:	687b      	ldr	r3, [r7, #4]
 800f930:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800f934:	2100      	movs	r1, #0
 800f936:	4618      	mov	r0, r3
 800f938:	f7fe fbd0 	bl	800e0dc <_ZN8touchgfx8Drawable12setTouchableEb>
    }
    if (count > LOWER_LIMIT)
 800f93c:	687b      	ldr	r3, [r7, #4]
 800f93e:	f893 3190 	ldrb.w	r3, [r3, #400]	; 0x190
 800f942:	2b00      	cmp	r3, #0
 800f944:	d01e      	beq.n	800f984 <_ZN8MainView17updateGFXElementsEv+0xe8>
    {
        buttonDown.setBitmaps(Bitmap(BITMAP_DOWN_BTN_ID), Bitmap(BITMAP_DOWN_BTN_PRESSED_ID));
 800f946:	687b      	ldr	r3, [r7, #4]
 800f948:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800f94c:	f107 0318 	add.w	r3, r7, #24
 800f950:	2104      	movs	r1, #4
 800f952:	4618      	mov	r0, r3
 800f954:	f7fe fa76 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f958:	f107 031c 	add.w	r3, r7, #28
 800f95c:	2106      	movs	r1, #6
 800f95e:	4618      	mov	r0, r3
 800f960:	f7fe fa70 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f964:	f107 021c 	add.w	r2, r7, #28
 800f968:	f107 0318 	add.w	r3, r7, #24
 800f96c:	4619      	mov	r1, r3
 800f96e:	4620      	mov	r0, r4
 800f970:	f003 ff1c 	bl	80137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        buttonDown.setTouchable(true);
 800f974:	687b      	ldr	r3, [r7, #4]
 800f976:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800f97a:	2101      	movs	r1, #1
 800f97c:	4618      	mov	r0, r3
 800f97e:	f7fe fbad 	bl	800e0dc <_ZN8touchgfx8Drawable12setTouchableEb>
 800f982:	e01d      	b.n	800f9c0 <_ZN8MainView17updateGFXElementsEv+0x124>
    }
    else
    {
        buttonDown.setBitmaps(Bitmap(BITMAP_DOWN_BTN_DISABLED_ID), Bitmap(BITMAP_DOWN_BTN_DISABLED_ID));
 800f984:	687b      	ldr	r3, [r7, #4]
 800f986:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800f98a:	f107 0320 	add.w	r3, r7, #32
 800f98e:	2105      	movs	r1, #5
 800f990:	4618      	mov	r0, r3
 800f992:	f7fe fa57 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f996:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800f99a:	2105      	movs	r1, #5
 800f99c:	4618      	mov	r0, r3
 800f99e:	f7fe fa51 	bl	800de44 <_ZN8touchgfx6BitmapC1Et>
 800f9a2:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800f9a6:	f107 0320 	add.w	r3, r7, #32
 800f9aa:	4619      	mov	r1, r3
 800f9ac:	4620      	mov	r0, r4
 800f9ae:	f003 fefd 	bl	80137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        buttonDown.setTouchable(false);
 800f9b2:	687b      	ldr	r3, [r7, #4]
 800f9b4:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800f9b8:	2100      	movs	r1, #0
 800f9ba:	4618      	mov	r0, r3
 800f9bc:	f7fe fb8e 	bl	800e0dc <_ZN8touchgfx8Drawable12setTouchableEb>
    }
    // Invalidate all GFX area, which will result in it being redrawn in next tick.
    countTxt.invalidate();
 800f9c0:	687b      	ldr	r3, [r7, #4]
 800f9c2:	33c4      	adds	r3, #196	; 0xc4
 800f9c4:	4618      	mov	r0, r3
 800f9c6:	f006 fdd8 	bl	801657a <_ZNK8touchgfx8Drawable10invalidateEv>
    buttonUp.invalidate();
 800f9ca:	687b      	ldr	r3, [r7, #4]
 800f9cc:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800f9d0:	4618      	mov	r0, r3
 800f9d2:	f006 fdd2 	bl	801657a <_ZNK8touchgfx8Drawable10invalidateEv>
    buttonDown.invalidate();
 800f9d6:	687b      	ldr	r3, [r7, #4]
 800f9d8:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800f9dc:	4618      	mov	r0, r3
 800f9de:	f006 fdcc 	bl	801657a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800f9e2:	bf00      	nop
 800f9e4:	372c      	adds	r7, #44	; 0x2c
 800f9e6:	46bd      	mov	sp, r7
 800f9e8:	bd90      	pop	{r4, r7, pc}
 800f9ea:	bf00      	nop
 800f9ec:	080275d8 	.word	0x080275d8

0800f9f0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800f9f0:	b480      	push	{r7}
 800f9f2:	b083      	sub	sp, #12
 800f9f4:	af00      	add	r7, sp, #0
 800f9f6:	6078      	str	r0, [r7, #4]
 800f9f8:	687b      	ldr	r3, [r7, #4]
 800f9fa:	2200      	movs	r2, #0
 800f9fc:	601a      	str	r2, [r3, #0]
{
}
 800f9fe:	687b      	ldr	r3, [r7, #4]
 800fa00:	4618      	mov	r0, r3
 800fa02:	370c      	adds	r7, #12
 800fa04:	46bd      	mov	sp, r7
 800fa06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa0a:	4770      	bx	lr

0800fa0c <_ZN5Model4tickEv>:

void Model::tick()
{
 800fa0c:	b480      	push	{r7}
 800fa0e:	b083      	sub	sp, #12
 800fa10:	af00      	add	r7, sp, #0
 800fa12:	6078      	str	r0, [r7, #4]
}
 800fa14:	bf00      	nop
 800fa16:	370c      	adds	r7, #12
 800fa18:	46bd      	mov	sp, r7
 800fa1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa1e:	4770      	bx	lr

0800fa20 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800fa20:	b480      	push	{r7}
 800fa22:	b083      	sub	sp, #12
 800fa24:	af00      	add	r7, sp, #0
 800fa26:	6078      	str	r0, [r7, #4]
    {
 800fa28:	4a04      	ldr	r2, [pc, #16]	; (800fa3c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800fa2a:	687b      	ldr	r3, [r7, #4]
 800fa2c:	601a      	str	r2, [r3, #0]
    }
 800fa2e:	687b      	ldr	r3, [r7, #4]
 800fa30:	4618      	mov	r0, r3
 800fa32:	370c      	adds	r7, #12
 800fa34:	46bd      	mov	sp, r7
 800fa36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa3a:	4770      	bx	lr
 800fa3c:	0802853c 	.word	0x0802853c

0800fa40 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800fa40:	b580      	push	{r7, lr}
 800fa42:	b082      	sub	sp, #8
 800fa44:	af00      	add	r7, sp, #0
 800fa46:	6078      	str	r0, [r7, #4]
    }
 800fa48:	6878      	ldr	r0, [r7, #4]
 800fa4a:	f7ff ffe9 	bl	800fa20 <_ZN8touchgfx15TouchControllerD1Ev>
 800fa4e:	2104      	movs	r1, #4
 800fa50:	6878      	ldr	r0, [r7, #4]
 800fa52:	f016 f9d8 	bl	8025e06 <_ZdlPvj>
 800fa56:	687b      	ldr	r3, [r7, #4]
 800fa58:	4618      	mov	r0, r3
 800fa5a:	3708      	adds	r7, #8
 800fa5c:	46bd      	mov	sp, r7
 800fa5e:	bd80      	pop	{r7, pc}

0800fa60 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>
#include "main.h"
void STM32TouchController::init()
{
 800fa60:	b480      	push	{r7}
 800fa62:	b083      	sub	sp, #12
 800fa64:	af00      	add	r7, sp, #0
 800fa66:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800fa68:	bf00      	nop
 800fa6a:	370c      	adds	r7, #12
 800fa6c:	46bd      	mov	sp, r7
 800fa6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa72:	4770      	bx	lr

0800fa74 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800fa74:	b580      	push	{r7, lr}
 800fa76:	b084      	sub	sp, #16
 800fa78:	af00      	add	r7, sp, #0
 800fa7a:	60f8      	str	r0, [r7, #12]
 800fa7c:	60b9      	str	r1, [r7, #8]
 800fa7e:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
	return ((bool) Touch_TouchGFXSampleTouch(&x, &y));
 800fa80:	6879      	ldr	r1, [r7, #4]
 800fa82:	68b8      	ldr	r0, [r7, #8]
 800fa84:	f7f2 fcf8 	bl	8002478 <Touch_TouchGFXSampleTouch>
 800fa88:	4603      	mov	r3, r0
 800fa8a:	2b00      	cmp	r3, #0
 800fa8c:	bf14      	ite	ne
 800fa8e:	2301      	movne	r3, #1
 800fa90:	2300      	moveq	r3, #0
 800fa92:	b2db      	uxtb	r3, r3
}
 800fa94:	4618      	mov	r0, r3
 800fa96:	3710      	adds	r7, #16
 800fa98:	46bd      	mov	sp, r7
 800fa9a:	bd80      	pop	{r7, pc}

0800fa9c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800fa9c:	b580      	push	{r7, lr}
 800fa9e:	b082      	sub	sp, #8
 800faa0:	af00      	add	r7, sp, #0
 800faa2:	6078      	str	r0, [r7, #4]
 800faa4:	4a05      	ldr	r2, [pc, #20]	; (800fabc <_ZN20STM32TouchControllerD1Ev+0x20>)
 800faa6:	687b      	ldr	r3, [r7, #4]
 800faa8:	601a      	str	r2, [r3, #0]
 800faaa:	687b      	ldr	r3, [r7, #4]
 800faac:	4618      	mov	r0, r3
 800faae:	f7ff ffb7 	bl	800fa20 <_ZN8touchgfx15TouchControllerD1Ev>
 800fab2:	687b      	ldr	r3, [r7, #4]
 800fab4:	4618      	mov	r0, r3
 800fab6:	3708      	adds	r7, #8
 800fab8:	46bd      	mov	sp, r7
 800faba:	bd80      	pop	{r7, pc}
 800fabc:	08028524 	.word	0x08028524

0800fac0 <_ZN20STM32TouchControllerD0Ev>:
 800fac0:	b580      	push	{r7, lr}
 800fac2:	b082      	sub	sp, #8
 800fac4:	af00      	add	r7, sp, #0
 800fac6:	6078      	str	r0, [r7, #4]
 800fac8:	6878      	ldr	r0, [r7, #4]
 800faca:	f7ff ffe7 	bl	800fa9c <_ZN20STM32TouchControllerD1Ev>
 800face:	2104      	movs	r1, #4
 800fad0:	6878      	ldr	r0, [r7, #4]
 800fad2:	f016 f998 	bl	8025e06 <_ZdlPvj>
 800fad6:	687b      	ldr	r3, [r7, #4]
 800fad8:	4618      	mov	r0, r3
 800fada:	3708      	adds	r7, #8
 800fadc:	46bd      	mov	sp, r7
 800fade:	bd80      	pop	{r7, pc}

0800fae0 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800fae0:	b480      	push	{r7}
 800fae2:	af00      	add	r7, sp, #0

}
 800fae4:	bf00      	nop
 800fae6:	46bd      	mov	sp, r7
 800fae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faec:	4770      	bx	lr
	...

0800faf0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800faf0:	b480      	push	{r7}
 800faf2:	b083      	sub	sp, #12
 800faf4:	af00      	add	r7, sp, #0
 800faf6:	4603      	mov	r3, r0
 800faf8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800fafa:	79fb      	ldrb	r3, [r7, #7]
 800fafc:	2b03      	cmp	r3, #3
 800fafe:	d80c      	bhi.n	800fb1a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800fb00:	a201      	add	r2, pc, #4	; (adr r2, 800fb08 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800fb02:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fb06:	bf00      	nop
 800fb08:	0800fb19 	.word	0x0800fb19
 800fb0c:	0800fb19 	.word	0x0800fb19
 800fb10:	0800fb19 	.word	0x0800fb19
 800fb14:	0800fb19 	.word	0x0800fb19
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800fb18:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800fb1a:	bf00      	nop
 800fb1c:	370c      	adds	r7, #12
 800fb1e:	46bd      	mov	sp, r7
 800fb20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb24:	4770      	bx	lr
 800fb26:	bf00      	nop

0800fb28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800fb28:	b480      	push	{r7}
 800fb2a:	b083      	sub	sp, #12
 800fb2c:	af00      	add	r7, sp, #0
 800fb2e:	4603      	mov	r3, r0
 800fb30:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800fb32:	79fb      	ldrb	r3, [r7, #7]
 800fb34:	2b03      	cmp	r3, #3
 800fb36:	d80c      	bhi.n	800fb52 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800fb38:	a201      	add	r2, pc, #4	; (adr r2, 800fb40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800fb3a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fb3e:	bf00      	nop
 800fb40:	0800fb51 	.word	0x0800fb51
 800fb44:	0800fb51 	.word	0x0800fb51
 800fb48:	0800fb51 	.word	0x0800fb51
 800fb4c:	0800fb51 	.word	0x0800fb51
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800fb50:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800fb52:	bf00      	nop
 800fb54:	370c      	adds	r7, #12
 800fb56:	46bd      	mov	sp, r7
 800fb58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb5c:	4770      	bx	lr
 800fb5e:	bf00      	nop

0800fb60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800fb60:	b480      	push	{r7}
 800fb62:	b083      	sub	sp, #12
 800fb64:	af00      	add	r7, sp, #0
 800fb66:	4603      	mov	r3, r0
 800fb68:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800fb6a:	79fb      	ldrb	r3, [r7, #7]
 800fb6c:	2b03      	cmp	r3, #3
 800fb6e:	d80c      	bhi.n	800fb8a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800fb70:	a201      	add	r2, pc, #4	; (adr r2, 800fb78 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800fb72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fb76:	bf00      	nop
 800fb78:	0800fb89 	.word	0x0800fb89
 800fb7c:	0800fb89 	.word	0x0800fb89
 800fb80:	0800fb89 	.word	0x0800fb89
 800fb84:	0800fb89 	.word	0x0800fb89
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800fb88:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800fb8a:	bf00      	nop
 800fb8c:	370c      	adds	r7, #12
 800fb8e:	46bd      	mov	sp, r7
 800fb90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb94:	4770      	bx	lr
 800fb96:	bf00      	nop

0800fb98 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800fb98:	b480      	push	{r7}
 800fb9a:	b083      	sub	sp, #12
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	6078      	str	r0, [r7, #4]
    {
 800fba0:	4a04      	ldr	r2, [pc, #16]	; (800fbb4 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800fba2:	687b      	ldr	r3, [r7, #4]
 800fba4:	601a      	str	r2, [r3, #0]
    }
 800fba6:	687b      	ldr	r3, [r7, #4]
 800fba8:	4618      	mov	r0, r3
 800fbaa:	370c      	adds	r7, #12
 800fbac:	46bd      	mov	sp, r7
 800fbae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbb2:	4770      	bx	lr
 800fbb4:	08028974 	.word	0x08028974

0800fbb8 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800fbb8:	b580      	push	{r7, lr}
 800fbba:	b082      	sub	sp, #8
 800fbbc:	af00      	add	r7, sp, #0
 800fbbe:	6078      	str	r0, [r7, #4]
    }
 800fbc0:	6878      	ldr	r0, [r7, #4]
 800fbc2:	f7ff ffe9 	bl	800fb98 <_ZN8touchgfx3HALD1Ev>
 800fbc6:	217c      	movs	r1, #124	; 0x7c
 800fbc8:	6878      	ldr	r0, [r7, #4]
 800fbca:	f016 f91c 	bl	8025e06 <_ZdlPvj>
 800fbce:	687b      	ldr	r3, [r7, #4]
 800fbd0:	4618      	mov	r0, r3
 800fbd2:	3708      	adds	r7, #8
 800fbd4:	46bd      	mov	sp, r7
 800fbd6:	bd80      	pop	{r7, pc}

0800fbd8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800fbd8:	b480      	push	{r7}
 800fbda:	b083      	sub	sp, #12
 800fbdc:	af00      	add	r7, sp, #0
 800fbde:	6078      	str	r0, [r7, #4]
 800fbe0:	460b      	mov	r3, r1
 800fbe2:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	78fa      	ldrb	r2, [r7, #3]
 800fbe8:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	2201      	movs	r2, #1
 800fbf0:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800fbf4:	bf00      	nop
 800fbf6:	370c      	adds	r7, #12
 800fbf8:	46bd      	mov	sp, r7
 800fbfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbfe:	4770      	bx	lr

0800fc00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800fc00:	b580      	push	{r7, lr}
 800fc02:	b082      	sub	sp, #8
 800fc04:	af00      	add	r7, sp, #0
 800fc06:	6078      	str	r0, [r7, #4]
 800fc08:	460b      	mov	r3, r1
 800fc0a:	807b      	strh	r3, [r7, #2]
 800fc0c:	4613      	mov	r3, r2
 800fc0e:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800fc10:	4b0c      	ldr	r3, [pc, #48]	; (800fc44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800fc12:	881b      	ldrh	r3, [r3, #0]
 800fc14:	887a      	ldrh	r2, [r7, #2]
 800fc16:	429a      	cmp	r2, r3
 800fc18:	d304      	bcc.n	800fc24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800fc1a:	4b0b      	ldr	r3, [pc, #44]	; (800fc48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800fc1c:	881b      	ldrh	r3, [r3, #0]
 800fc1e:	883a      	ldrh	r2, [r7, #0]
 800fc20:	429a      	cmp	r2, r3
 800fc22:	d205      	bcs.n	800fc30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800fc24:	4b09      	ldr	r3, [pc, #36]	; (800fc4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800fc26:	4a0a      	ldr	r2, [pc, #40]	; (800fc50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800fc28:	219e      	movs	r1, #158	; 0x9e
 800fc2a:	480a      	ldr	r0, [pc, #40]	; (800fc54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800fc2c:	f016 f91a 	bl	8025e64 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800fc30:	4a09      	ldr	r2, [pc, #36]	; (800fc58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800fc32:	887b      	ldrh	r3, [r7, #2]
 800fc34:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800fc36:	4a09      	ldr	r2, [pc, #36]	; (800fc5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800fc38:	883b      	ldrh	r3, [r7, #0]
 800fc3a:	8013      	strh	r3, [r2, #0]
    }
 800fc3c:	bf00      	nop
 800fc3e:	3708      	adds	r7, #8
 800fc40:	46bd      	mov	sp, r7
 800fc42:	bd80      	pop	{r7, pc}
 800fc44:	24004a44 	.word	0x24004a44
 800fc48:	24004a46 	.word	0x24004a46
 800fc4c:	080275dc 	.word	0x080275dc
 800fc50:	08027640 	.word	0x08027640
 800fc54:	08027684 	.word	0x08027684
 800fc58:	24004a4a 	.word	0x24004a4a
 800fc5c:	24004a4c 	.word	0x24004a4c

0800fc60 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800fc60:	b580      	push	{r7, lr}
 800fc62:	b082      	sub	sp, #8
 800fc64:	af00      	add	r7, sp, #0
 800fc66:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800fc68:	687b      	ldr	r3, [r7, #4]
 800fc6a:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800fc6e:	2b00      	cmp	r3, #0
 800fc70:	d009      	beq.n	800fc86 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800fc72:	687b      	ldr	r3, [r7, #4]
 800fc74:	685a      	ldr	r2, [r3, #4]
 800fc76:	687b      	ldr	r3, [r7, #4]
 800fc78:	685b      	ldr	r3, [r3, #4]
 800fc7a:	681b      	ldr	r3, [r3, #0]
 800fc7c:	681b      	ldr	r3, [r3, #0]
 800fc7e:	4610      	mov	r0, r2
 800fc80:	4798      	blx	r3
 800fc82:	4603      	mov	r3, r0
 800fc84:	e000      	b.n	800fc88 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800fc86:	2300      	movs	r3, #0
    }
 800fc88:	4618      	mov	r0, r3
 800fc8a:	3708      	adds	r7, #8
 800fc8c:	46bd      	mov	sp, r7
 800fc8e:	bd80      	pop	{r7, pc}

0800fc90 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800fc90:	b580      	push	{r7, lr}
 800fc92:	b082      	sub	sp, #8
 800fc94:	af00      	add	r7, sp, #0
 800fc96:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800fc98:	6878      	ldr	r0, [r7, #4]
 800fc9a:	f002 fe3b 	bl	8012914 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800fc9e:	687b      	ldr	r3, [r7, #4]
 800fca0:	681b      	ldr	r3, [r3, #0]
 800fca2:	33ac      	adds	r3, #172	; 0xac
 800fca4:	681b      	ldr	r3, [r3, #0]
 800fca6:	6878      	ldr	r0, [r7, #4]
 800fca8:	4798      	blx	r3
    }
 800fcaa:	bf00      	nop
 800fcac:	3708      	adds	r7, #8
 800fcae:	46bd      	mov	sp, r7
 800fcb0:	bd80      	pop	{r7, pc}

0800fcb2 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800fcb2:	b480      	push	{r7}
 800fcb4:	b083      	sub	sp, #12
 800fcb6:	af00      	add	r7, sp, #0
 800fcb8:	6078      	str	r0, [r7, #4]
 800fcba:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800fcbc:	2300      	movs	r3, #0
    }
 800fcbe:	4618      	mov	r0, r3
 800fcc0:	370c      	adds	r7, #12
 800fcc2:	46bd      	mov	sp, r7
 800fcc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcc8:	4770      	bx	lr
	...

0800fccc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800fccc:	b580      	push	{r7, lr}
 800fcce:	b084      	sub	sp, #16
 800fcd0:	af00      	add	r7, sp, #0
 800fcd2:	60f8      	str	r0, [r7, #12]
 800fcd4:	60b9      	str	r1, [r7, #8]
 800fcd6:	607a      	str	r2, [r7, #4]
 800fcd8:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800fcda:	68bb      	ldr	r3, [r7, #8]
 800fcdc:	2b00      	cmp	r3, #0
 800fcde:	d106      	bne.n	800fcee <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800fce0:	4b0f      	ldr	r3, [pc, #60]	; (800fd20 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800fce2:	4a10      	ldr	r2, [pc, #64]	; (800fd24 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800fce4:	f240 21d2 	movw	r1, #722	; 0x2d2
 800fce8:	480f      	ldr	r0, [pc, #60]	; (800fd28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800fcea:	f016 f8bb 	bl	8025e64 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800fcee:	68fb      	ldr	r3, [r7, #12]
 800fcf0:	68ba      	ldr	r2, [r7, #8]
 800fcf2:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800fcf4:	68fb      	ldr	r3, [r7, #12]
 800fcf6:	687a      	ldr	r2, [r7, #4]
 800fcf8:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800fcfa:	687b      	ldr	r3, [r7, #4]
 800fcfc:	2b00      	cmp	r3, #0
 800fcfe:	bf14      	ite	ne
 800fd00:	2301      	movne	r3, #1
 800fd02:	2300      	moveq	r3, #0
 800fd04:	b2da      	uxtb	r2, r3
 800fd06:	4b09      	ldr	r3, [pc, #36]	; (800fd2c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800fd08:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800fd0a:	68fb      	ldr	r3, [r7, #12]
 800fd0c:	681b      	ldr	r3, [r3, #0]
 800fd0e:	338c      	adds	r3, #140	; 0x8c
 800fd10:	681b      	ldr	r3, [r3, #0]
 800fd12:	6839      	ldr	r1, [r7, #0]
 800fd14:	68f8      	ldr	r0, [r7, #12]
 800fd16:	4798      	blx	r3
    }
 800fd18:	bf00      	nop
 800fd1a:	3710      	adds	r7, #16
 800fd1c:	46bd      	mov	sp, r7
 800fd1e:	bd80      	pop	{r7, pc}
 800fd20:	080276c8 	.word	0x080276c8
 800fd24:	08027700 	.word	0x08027700
 800fd28:	08027684 	.word	0x08027684
 800fd2c:	24004a4e 	.word	0x24004a4e

0800fd30 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800fd30:	b480      	push	{r7}
 800fd32:	b083      	sub	sp, #12
 800fd34:	af00      	add	r7, sp, #0
 800fd36:	6078      	str	r0, [r7, #4]
 800fd38:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800fd3a:	687b      	ldr	r3, [r7, #4]
 800fd3c:	683a      	ldr	r2, [r7, #0]
 800fd3e:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800fd40:	683b      	ldr	r3, [r7, #0]
 800fd42:	2b00      	cmp	r3, #0
 800fd44:	bf14      	ite	ne
 800fd46:	2301      	movne	r3, #1
 800fd48:	2300      	moveq	r3, #0
 800fd4a:	b2da      	uxtb	r2, r3
 800fd4c:	4b03      	ldr	r3, [pc, #12]	; (800fd5c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800fd4e:	701a      	strb	r2, [r3, #0]
    }
 800fd50:	bf00      	nop
 800fd52:	370c      	adds	r7, #12
 800fd54:	46bd      	mov	sp, r7
 800fd56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd5a:	4770      	bx	lr
 800fd5c:	24004a4f 	.word	0x24004a4f

0800fd60 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800fd60:	b480      	push	{r7}
 800fd62:	b083      	sub	sp, #12
 800fd64:	af00      	add	r7, sp, #0
 800fd66:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800fd68:	2300      	movs	r3, #0
    }
 800fd6a:	4618      	mov	r0, r3
 800fd6c:	370c      	adds	r7, #12
 800fd6e:	46bd      	mov	sp, r7
 800fd70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd74:	4770      	bx	lr

0800fd76 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800fd76:	b580      	push	{r7, lr}
 800fd78:	b082      	sub	sp, #8
 800fd7a:	af00      	add	r7, sp, #0
 800fd7c:	6078      	str	r0, [r7, #4]
 800fd7e:	460b      	mov	r3, r1
 800fd80:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800fd82:	687b      	ldr	r3, [r7, #4]
 800fd84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fd86:	2b00      	cmp	r3, #0
 800fd88:	d004      	beq.n	800fd94 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800fd8a:	687b      	ldr	r3, [r7, #4]
 800fd8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fd8e:	887a      	ldrh	r2, [r7, #2]
 800fd90:	4610      	mov	r0, r2
 800fd92:	4798      	blx	r3
        }
    }
 800fd94:	bf00      	nop
 800fd96:	3708      	adds	r7, #8
 800fd98:	46bd      	mov	sp, r7
 800fd9a:	bd80      	pop	{r7, pc}

0800fd9c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800fd9c:	b480      	push	{r7}
 800fd9e:	b083      	sub	sp, #12
 800fda0:	af00      	add	r7, sp, #0
 800fda2:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800fda4:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800fda8:	4618      	mov	r0, r3
 800fdaa:	370c      	adds	r7, #12
 800fdac:	46bd      	mov	sp, r7
 800fdae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdb2:	4770      	bx	lr

0800fdb4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800fdb4:	b580      	push	{r7, lr}
 800fdb6:	b082      	sub	sp, #8
 800fdb8:	af00      	add	r7, sp, #0
 800fdba:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800fdbc:	687b      	ldr	r3, [r7, #4]
 800fdbe:	685a      	ldr	r2, [r3, #4]
 800fdc0:	687b      	ldr	r3, [r7, #4]
 800fdc2:	685b      	ldr	r3, [r3, #4]
 800fdc4:	681b      	ldr	r3, [r3, #0]
 800fdc6:	3318      	adds	r3, #24
 800fdc8:	681b      	ldr	r3, [r3, #0]
 800fdca:	4610      	mov	r0, r2
 800fdcc:	4798      	blx	r3
 800fdce:	4603      	mov	r3, r0
    }
 800fdd0:	4618      	mov	r0, r3
 800fdd2:	3708      	adds	r7, #8
 800fdd4:	46bd      	mov	sp, r7
 800fdd6:	bd80      	pop	{r7, pc}

0800fdd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800fdd8:	b480      	push	{r7}
 800fdda:	b085      	sub	sp, #20
 800fddc:	af00      	add	r7, sp, #0
 800fdde:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800fde0:	687b      	ldr	r3, [r7, #4]
 800fde2:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800fde6:	687b      	ldr	r3, [r7, #4]
 800fde8:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800fdec:	429a      	cmp	r2, r3
 800fdee:	d011      	beq.n	800fe14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800fdf0:	4b14      	ldr	r3, [pc, #80]	; (800fe44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800fdf2:	781b      	ldrb	r3, [r3, #0]
 800fdf4:	2b00      	cmp	r3, #0
 800fdf6:	d11e      	bne.n	800fe36 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800fdf8:	4b13      	ldr	r3, [pc, #76]	; (800fe48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fdfa:	881b      	ldrh	r3, [r3, #0]
 800fdfc:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800fdfe:	4b13      	ldr	r3, [pc, #76]	; (800fe4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fe00:	881a      	ldrh	r2, [r3, #0]
 800fe02:	4b11      	ldr	r3, [pc, #68]	; (800fe48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fe04:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800fe06:	4a11      	ldr	r2, [pc, #68]	; (800fe4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fe08:	89bb      	ldrh	r3, [r7, #12]
 800fe0a:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800fe0c:	4b0d      	ldr	r3, [pc, #52]	; (800fe44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800fe0e:	2201      	movs	r2, #1
 800fe10:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800fe12:	e010      	b.n	800fe36 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800fe14:	4b0b      	ldr	r3, [pc, #44]	; (800fe44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800fe16:	781b      	ldrb	r3, [r3, #0]
 800fe18:	2b00      	cmp	r3, #0
 800fe1a:	d00c      	beq.n	800fe36 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800fe1c:	4b0a      	ldr	r3, [pc, #40]	; (800fe48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fe1e:	881b      	ldrh	r3, [r3, #0]
 800fe20:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800fe22:	4b0a      	ldr	r3, [pc, #40]	; (800fe4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fe24:	881a      	ldrh	r2, [r3, #0]
 800fe26:	4b08      	ldr	r3, [pc, #32]	; (800fe48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800fe28:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800fe2a:	4a08      	ldr	r2, [pc, #32]	; (800fe4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800fe2c:	89fb      	ldrh	r3, [r7, #14]
 800fe2e:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800fe30:	4b04      	ldr	r3, [pc, #16]	; (800fe44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800fe32:	2200      	movs	r2, #0
 800fe34:	701a      	strb	r2, [r3, #0]
    }
 800fe36:	bf00      	nop
 800fe38:	3714      	adds	r7, #20
 800fe3a:	46bd      	mov	sp, r7
 800fe3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe40:	4770      	bx	lr
 800fe42:	bf00      	nop
 800fe44:	24004a48 	.word	0x24004a48
 800fe48:	24004a46 	.word	0x24004a46
 800fe4c:	24004a44 	.word	0x24004a44

0800fe50 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800fe50:	b580      	push	{r7, lr}
 800fe52:	b082      	sub	sp, #8
 800fe54:	af00      	add	r7, sp, #0
 800fe56:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800fe58:	687b      	ldr	r3, [r7, #4]
 800fe5a:	4618      	mov	r0, r3
 800fe5c:	f001 ffb7 	bl	8011dce <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800fe60:	bf00      	nop
 800fe62:	3708      	adds	r7, #8
 800fe64:	46bd      	mov	sp, r7
 800fe66:	bd80      	pop	{r7, pc}

0800fe68 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800fe68:	b580      	push	{r7, lr}
 800fe6a:	b082      	sub	sp, #8
 800fe6c:	af00      	add	r7, sp, #0
 800fe6e:	6078      	str	r0, [r7, #4]
 800fe70:	4a05      	ldr	r2, [pc, #20]	; (800fe88 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800fe72:	687b      	ldr	r3, [r7, #4]
 800fe74:	601a      	str	r2, [r3, #0]
 800fe76:	687b      	ldr	r3, [r7, #4]
 800fe78:	4618      	mov	r0, r3
 800fe7a:	f7ff fe8d 	bl	800fb98 <_ZN8touchgfx3HALD1Ev>
 800fe7e:	687b      	ldr	r3, [r7, #4]
 800fe80:	4618      	mov	r0, r3
 800fe82:	3708      	adds	r7, #8
 800fe84:	46bd      	mov	sp, r7
 800fe86:	bd80      	pop	{r7, pc}
 800fe88:	080287a0 	.word	0x080287a0

0800fe8c <_ZN20TouchGFXGeneratedHALD0Ev>:
 800fe8c:	b580      	push	{r7, lr}
 800fe8e:	b082      	sub	sp, #8
 800fe90:	af00      	add	r7, sp, #0
 800fe92:	6078      	str	r0, [r7, #4]
 800fe94:	6878      	ldr	r0, [r7, #4]
 800fe96:	f7ff ffe7 	bl	800fe68 <_ZN20TouchGFXGeneratedHALD1Ev>
 800fe9a:	217c      	movs	r1, #124	; 0x7c
 800fe9c:	6878      	ldr	r0, [r7, #4]
 800fe9e:	f015 ffb2 	bl	8025e06 <_ZdlPvj>
 800fea2:	687b      	ldr	r3, [r7, #4]
 800fea4:	4618      	mov	r0, r3
 800fea6:	3708      	adds	r7, #8
 800fea8:	46bd      	mov	sp, r7
 800feaa:	bd80      	pop	{r7, pc}

0800feac <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800feac:	b580      	push	{r7, lr}
 800feae:	b082      	sub	sp, #8
 800feb0:	af00      	add	r7, sp, #0
 800feb2:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800feb4:	687b      	ldr	r3, [r7, #4]
 800feb6:	4618      	mov	r0, r3
 800feb8:	f7ff ffca 	bl	800fe50 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800febc:	bf00      	nop
 800febe:	3708      	adds	r7, #8
 800fec0:	46bd      	mov	sp, r7
 800fec2:	bd80      	pop	{r7, pc}

0800fec4 <_ZN11TouchGFXHAL10initializeEv>:
 *
 */
#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800fec4:	b580      	push	{r7, lr}
 800fec6:	b082      	sub	sp, #8
 800fec8:	af00      	add	r7, sp, #0
 800feca:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800fecc:	687b      	ldr	r3, [r7, #4]
 800fece:	4618      	mov	r0, r3
 800fed0:	f000 ffcc 	bl	8010e6c <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800fed4:	bf00      	nop
 800fed6:	3708      	adds	r7, #8
 800fed8:	46bd      	mov	sp, r7
 800feda:	bd80      	pop	{r7, pc}

0800fedc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800fedc:	b580      	push	{r7, lr}
 800fede:	b082      	sub	sp, #8
 800fee0:	af00      	add	r7, sp, #0
 800fee2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800fee4:	687b      	ldr	r3, [r7, #4]
 800fee6:	4618      	mov	r0, r3
 800fee8:	f001 f835 	bl	8010f56 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800feec:	4603      	mov	r3, r0
}
 800feee:	4618      	mov	r0, r3
 800fef0:	3708      	adds	r7, #8
 800fef2:	46bd      	mov	sp, r7
 800fef4:	bd80      	pop	{r7, pc}

0800fef6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800fef6:	b580      	push	{r7, lr}
 800fef8:	b082      	sub	sp, #8
 800fefa:	af00      	add	r7, sp, #0
 800fefc:	6078      	str	r0, [r7, #4]
 800fefe:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800ff00:	687b      	ldr	r3, [r7, #4]
 800ff02:	6839      	ldr	r1, [r7, #0]
 800ff04:	4618      	mov	r0, r3
 800ff06:	f001 f831 	bl	8010f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800ff0a:	bf00      	nop
 800ff0c:	3708      	adds	r7, #8
 800ff0e:	46bd      	mov	sp, r7
 800ff10:	bd80      	pop	{r7, pc}

0800ff12 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ff12:	b580      	push	{r7, lr}
 800ff14:	b082      	sub	sp, #8
 800ff16:	af00      	add	r7, sp, #0
 800ff18:	6078      	str	r0, [r7, #4]
 800ff1a:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800ff1c:	687b      	ldr	r3, [r7, #4]
 800ff1e:	6839      	ldr	r1, [r7, #0]
 800ff20:	4618      	mov	r0, r3
 800ff22:	f001 f82e 	bl	8010f82 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800ff26:	bf00      	nop
 800ff28:	3708      	adds	r7, #8
 800ff2a:	46bd      	mov	sp, r7
 800ff2c:	bd80      	pop	{r7, pc}

0800ff2e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800ff2e:	b580      	push	{r7, lr}
 800ff30:	b084      	sub	sp, #16
 800ff32:	af00      	add	r7, sp, #0
 800ff34:	60f8      	str	r0, [r7, #12]
 800ff36:	60b9      	str	r1, [r7, #8]
 800ff38:	607a      	str	r2, [r7, #4]
 800ff3a:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800ff3c:	68f8      	ldr	r0, [r7, #12]
 800ff3e:	683b      	ldr	r3, [r7, #0]
 800ff40:	687a      	ldr	r2, [r7, #4]
 800ff42:	68b9      	ldr	r1, [r7, #8]
 800ff44:	f001 f82d 	bl	8010fa2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800ff48:	4603      	mov	r3, r0
}
 800ff4a:	4618      	mov	r0, r3
 800ff4c:	3710      	adds	r7, #16
 800ff4e:	46bd      	mov	sp, r7
 800ff50:	bd80      	pop	{r7, pc}

0800ff52 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800ff52:	b580      	push	{r7, lr}
 800ff54:	b082      	sub	sp, #8
 800ff56:	af00      	add	r7, sp, #0
 800ff58:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800ff5a:	687b      	ldr	r3, [r7, #4]
 800ff5c:	4618      	mov	r0, r3
 800ff5e:	f000 ffb5 	bl	8010ecc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800ff62:	bf00      	nop
 800ff64:	3708      	adds	r7, #8
 800ff66:	46bd      	mov	sp, r7
 800ff68:	bd80      	pop	{r7, pc}

0800ff6a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800ff6a:	b580      	push	{r7, lr}
 800ff6c:	b082      	sub	sp, #8
 800ff6e:	af00      	add	r7, sp, #0
 800ff70:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800ff72:	687b      	ldr	r3, [r7, #4]
 800ff74:	4618      	mov	r0, r3
 800ff76:	f000 ffb3 	bl	8010ee0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800ff7a:	bf00      	nop
 800ff7c:	3708      	adds	r7, #8
 800ff7e:	46bd      	mov	sp, r7
 800ff80:	bd80      	pop	{r7, pc}

0800ff82 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800ff82:	b580      	push	{r7, lr}
 800ff84:	b082      	sub	sp, #8
 800ff86:	af00      	add	r7, sp, #0
 800ff88:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800ff8a:	687b      	ldr	r3, [r7, #4]
 800ff8c:	4618      	mov	r0, r3
 800ff8e:	f000 ffb1 	bl	8010ef4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800ff92:	bf00      	nop
 800ff94:	3708      	adds	r7, #8
 800ff96:	46bd      	mov	sp, r7
 800ff98:	bd80      	pop	{r7, pc}

0800ff9a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800ff9a:	b580      	push	{r7, lr}
 800ff9c:	b082      	sub	sp, #8
 800ff9e:	af00      	add	r7, sp, #0
 800ffa0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800ffa2:	687b      	ldr	r3, [r7, #4]
 800ffa4:	4618      	mov	r0, r3
 800ffa6:	f000 ffaf 	bl	8010f08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800ffaa:	bf00      	nop
 800ffac:	3708      	adds	r7, #8
 800ffae:	46bd      	mov	sp, r7
 800ffb0:	bd80      	pop	{r7, pc}

0800ffb2 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800ffb2:	b580      	push	{r7, lr}
 800ffb4:	b082      	sub	sp, #8
 800ffb6:	af00      	add	r7, sp, #0
 800ffb8:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800ffba:	687b      	ldr	r3, [r7, #4]
 800ffbc:	4618      	mov	r0, r3
 800ffbe:	f000 ffad 	bl	8010f1c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800ffc2:	4603      	mov	r3, r0
}
 800ffc4:	4618      	mov	r0, r3
 800ffc6:	3708      	adds	r7, #8
 800ffc8:	46bd      	mov	sp, r7
 800ffca:	bd80      	pop	{r7, pc}

0800ffcc <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800ffcc:	b580      	push	{r7, lr}
 800ffce:	b082      	sub	sp, #8
 800ffd0:	af00      	add	r7, sp, #0
 800ffd2:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800ffd4:	687b      	ldr	r3, [r7, #4]
 800ffd6:	4618      	mov	r0, r3
 800ffd8:	f000 ffad 	bl	8010f36 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800ffdc:	bf00      	nop
 800ffde:	3708      	adds	r7, #8
 800ffe0:	46bd      	mov	sp, r7
 800ffe2:	bd80      	pop	{r7, pc}

0800ffe4 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800ffe4:	b580      	push	{r7, lr}
 800ffe6:	b082      	sub	sp, #8
 800ffe8:	af00      	add	r7, sp, #0
 800ffea:	6078      	str	r0, [r7, #4]
 800ffec:	4a05      	ldr	r2, [pc, #20]	; (8010004 <_ZN11TouchGFXHALD1Ev+0x20>)
 800ffee:	687b      	ldr	r3, [r7, #4]
 800fff0:	601a      	str	r2, [r3, #0]
 800fff2:	687b      	ldr	r3, [r7, #4]
 800fff4:	4618      	mov	r0, r3
 800fff6:	f7ff ff37 	bl	800fe68 <_ZN20TouchGFXGeneratedHALD1Ev>
 800fffa:	687b      	ldr	r3, [r7, #4]
 800fffc:	4618      	mov	r0, r3
 800fffe:	3708      	adds	r7, #8
 8010000:	46bd      	mov	sp, r7
 8010002:	bd80      	pop	{r7, pc}
 8010004:	08028554 	.word	0x08028554

08010008 <_ZN11TouchGFXHALD0Ev>:
 8010008:	b580      	push	{r7, lr}
 801000a:	b082      	sub	sp, #8
 801000c:	af00      	add	r7, sp, #0
 801000e:	6078      	str	r0, [r7, #4]
 8010010:	6878      	ldr	r0, [r7, #4]
 8010012:	f7ff ffe7 	bl	800ffe4 <_ZN11TouchGFXHALD1Ev>
 8010016:	217c      	movs	r1, #124	; 0x7c
 8010018:	6878      	ldr	r0, [r7, #4]
 801001a:	f015 fef4 	bl	8025e06 <_ZdlPvj>
 801001e:	687b      	ldr	r3, [r7, #4]
 8010020:	4618      	mov	r0, r3
 8010022:	3708      	adds	r7, #8
 8010024:	46bd      	mov	sp, r7
 8010026:	bd80      	pop	{r7, pc}

08010028 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 8010028:	b480      	push	{r7}
 801002a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 801002c:	4b05      	ldr	r3, [pc, #20]	; (8010044 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 801002e:	2200      	movs	r2, #0
 8010030:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 8010032:	4b05      	ldr	r3, [pc, #20]	; (8010048 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8010034:	2200      	movs	r2, #0
 8010036:	601a      	str	r2, [r3, #0]
}
 8010038:	bf00      	nop
 801003a:	46bd      	mov	sp, r7
 801003c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010040:	4770      	bx	lr
 8010042:	bf00      	nop
 8010044:	240023c8 	.word	0x240023c8
 8010048:	240023cc 	.word	0x240023cc

0801004c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 801004c:	b480      	push	{r7}
 801004e:	af00      	add	r7, sp, #0
    while (fb_sem);
 8010050:	bf00      	nop
 8010052:	4b08      	ldr	r3, [pc, #32]	; (8010074 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010054:	681b      	ldr	r3, [r3, #0]
 8010056:	2b00      	cmp	r3, #0
 8010058:	bf14      	ite	ne
 801005a:	2301      	movne	r3, #1
 801005c:	2300      	moveq	r3, #0
 801005e:	b2db      	uxtb	r3, r3
 8010060:	2b00      	cmp	r3, #0
 8010062:	d1f6      	bne.n	8010052 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 8010064:	4b03      	ldr	r3, [pc, #12]	; (8010074 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010066:	2201      	movs	r2, #1
 8010068:	601a      	str	r2, [r3, #0]
}
 801006a:	bf00      	nop
 801006c:	46bd      	mov	sp, r7
 801006e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010072:	4770      	bx	lr
 8010074:	240023c8 	.word	0x240023c8

08010078 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8010078:	b480      	push	{r7}
 801007a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 801007c:	4b03      	ldr	r3, [pc, #12]	; (801008c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 801007e:	2200      	movs	r2, #0
 8010080:	601a      	str	r2, [r3, #0]
}
 8010082:	bf00      	nop
 8010084:	46bd      	mov	sp, r7
 8010086:	f85d 7b04 	ldr.w	r7, [sp], #4
 801008a:	4770      	bx	lr
 801008c:	240023c8 	.word	0x240023c8

08010090 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 8010090:	b480      	push	{r7}
 8010092:	af00      	add	r7, sp, #0
    fb_sem = 1;
 8010094:	4b03      	ldr	r3, [pc, #12]	; (80100a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 8010096:	2201      	movs	r2, #1
 8010098:	601a      	str	r2, [r3, #0]
}
 801009a:	bf00      	nop
 801009c:	46bd      	mov	sp, r7
 801009e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100a2:	4770      	bx	lr
 80100a4:	240023c8 	.word	0x240023c8

080100a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80100a8:	b480      	push	{r7}
 80100aa:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80100ac:	4b03      	ldr	r3, [pc, #12]	; (80100bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 80100ae:	2200      	movs	r2, #0
 80100b0:	601a      	str	r2, [r3, #0]
}
 80100b2:	bf00      	nop
 80100b4:	46bd      	mov	sp, r7
 80100b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100ba:	4770      	bx	lr
 80100bc:	240023c8 	.word	0x240023c8

080100c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 80100c0:	b480      	push	{r7}
 80100c2:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 80100c4:	4b03      	ldr	r3, [pc, #12]	; (80100d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80100c6:	2201      	movs	r2, #1
 80100c8:	601a      	str	r2, [r3, #0]
}
 80100ca:	bf00      	nop
 80100cc:	46bd      	mov	sp, r7
 80100ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100d2:	4770      	bx	lr
 80100d4:	240023cc 	.word	0x240023cc

080100d8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 80100d8:	b480      	push	{r7}
 80100da:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 80100dc:	4b03      	ldr	r3, [pc, #12]	; (80100ec <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 80100de:	2200      	movs	r2, #0
 80100e0:	601a      	str	r2, [r3, #0]
}
 80100e2:	bf00      	nop
 80100e4:	46bd      	mov	sp, r7
 80100e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80100ea:	4770      	bx	lr
 80100ec:	240023cc 	.word	0x240023cc

080100f0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 80100f0:	b480      	push	{r7}
 80100f2:	af00      	add	r7, sp, #0
    return vsync_sem;
 80100f4:	4b05      	ldr	r3, [pc, #20]	; (801010c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 80100f6:	681b      	ldr	r3, [r3, #0]
 80100f8:	2b00      	cmp	r3, #0
 80100fa:	bf14      	ite	ne
 80100fc:	2301      	movne	r3, #1
 80100fe:	2300      	moveq	r3, #0
 8010100:	b2db      	uxtb	r3, r3
}
 8010102:	4618      	mov	r0, r3
 8010104:	46bd      	mov	sp, r7
 8010106:	f85d 7b04 	ldr.w	r7, [sp], #4
 801010a:	4770      	bx	lr
 801010c:	240023cc 	.word	0x240023cc

08010110 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8010110:	b580      	push	{r7, lr}
 8010112:	af00      	add	r7, sp, #0
    if (vsync_sem)
 8010114:	4b0a      	ldr	r3, [pc, #40]	; (8010140 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010116:	681b      	ldr	r3, [r3, #0]
 8010118:	2b00      	cmp	r3, #0
 801011a:	bf14      	ite	ne
 801011c:	2301      	movne	r3, #1
 801011e:	2300      	moveq	r3, #0
 8010120:	b2db      	uxtb	r3, r3
 8010122:	2b00      	cmp	r3, #0
 8010124:	d00a      	beq.n	801013c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 8010126:	4b06      	ldr	r3, [pc, #24]	; (8010140 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010128:	2200      	movs	r2, #0
 801012a:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 801012c:	f7fd f9ba 	bl	800d4a4 <_ZN8touchgfx3HAL11getInstanceEv>
 8010130:	4603      	mov	r3, r0
 8010132:	681a      	ldr	r2, [r3, #0]
 8010134:	3270      	adds	r2, #112	; 0x70
 8010136:	6812      	ldr	r2, [r2, #0]
 8010138:	4618      	mov	r0, r3
 801013a:	4790      	blx	r2
    }
}
 801013c:	bf00      	nop
 801013e:	bd80      	pop	{r7, pc}
 8010140:	240023cc 	.word	0x240023cc

08010144 <_ZN8touchgfx10OSWrappers9taskYieldEv>:
 * system to change to another task of similar priority. When
 * running without an operating system, the implementation can run
 * a very short task and return.
 */
void OSWrappers::taskYield()
{
 8010144:	b480      	push	{r7}
 8010146:	af00      	add	r7, sp, #0

}
 8010148:	bf00      	nop
 801014a:	46bd      	mov	sp, r7
 801014c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010150:	4770      	bx	lr

08010152 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 8010152:	b480      	push	{r7}
 8010154:	b083      	sub	sp, #12
 8010156:	af00      	add	r7, sp, #0
 8010158:	6078      	str	r0, [r7, #4]
        : color(0)
 801015a:	687b      	ldr	r3, [r7, #4]
 801015c:	2200      	movs	r2, #0
 801015e:	601a      	str	r2, [r3, #0]
    }
 8010160:	687b      	ldr	r3, [r7, #4]
 8010162:	4618      	mov	r0, r3
 8010164:	370c      	adds	r7, #12
 8010166:	46bd      	mov	sp, r7
 8010168:	f85d 7b04 	ldr.w	r7, [sp], #4
 801016c:	4770      	bx	lr
	...

08010170 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 8010170:	b480      	push	{r7}
 8010172:	b083      	sub	sp, #12
 8010174:	af00      	add	r7, sp, #0
 8010176:	6078      	str	r0, [r7, #4]
    {
 8010178:	4a04      	ldr	r2, [pc, #16]	; (801018c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 801017a:	687b      	ldr	r3, [r7, #4]
 801017c:	601a      	str	r2, [r3, #0]
    }
 801017e:	687b      	ldr	r3, [r7, #4]
 8010180:	4618      	mov	r0, r3
 8010182:	370c      	adds	r7, #12
 8010184:	46bd      	mov	sp, r7
 8010186:	f85d 7b04 	ldr.w	r7, [sp], #4
 801018a:	4770      	bx	lr
 801018c:	0802867c 	.word	0x0802867c

08010190 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8010190:	b580      	push	{r7, lr}
 8010192:	b082      	sub	sp, #8
 8010194:	af00      	add	r7, sp, #0
 8010196:	6078      	str	r0, [r7, #4]
    }
 8010198:	6878      	ldr	r0, [r7, #4]
 801019a:	f7ff ffe9 	bl	8010170 <_ZN8touchgfx9DMA_QueueD1Ev>
 801019e:	2104      	movs	r1, #4
 80101a0:	6878      	ldr	r0, [r7, #4]
 80101a2:	f015 fe30 	bl	8025e06 <_ZdlPvj>
 80101a6:	687b      	ldr	r3, [r7, #4]
 80101a8:	4618      	mov	r0, r3
 80101aa:	3708      	adds	r7, #8
 80101ac:	46bd      	mov	sp, r7
 80101ae:	bd80      	pop	{r7, pc}

080101b0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 80101b0:	b480      	push	{r7}
 80101b2:	b083      	sub	sp, #12
 80101b4:	af00      	add	r7, sp, #0
 80101b6:	6078      	str	r0, [r7, #4]
    {
    }
 80101b8:	bf00      	nop
 80101ba:	370c      	adds	r7, #12
 80101bc:	46bd      	mov	sp, r7
 80101be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101c2:	4770      	bx	lr

080101c4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 80101c4:	b480      	push	{r7}
 80101c6:	b083      	sub	sp, #12
 80101c8:	af00      	add	r7, sp, #0
 80101ca:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 80101cc:	2300      	movs	r3, #0
    }
 80101ce:	4618      	mov	r0, r3
 80101d0:	370c      	adds	r7, #12
 80101d2:	46bd      	mov	sp, r7
 80101d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101d8:	4770      	bx	lr
	...

080101dc <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 80101dc:	b480      	push	{r7}
 80101de:	b083      	sub	sp, #12
 80101e0:	af00      	add	r7, sp, #0
 80101e2:	6078      	str	r0, [r7, #4]
    {
 80101e4:	4a04      	ldr	r2, [pc, #16]	; (80101f8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 80101e6:	687b      	ldr	r3, [r7, #4]
 80101e8:	601a      	str	r2, [r3, #0]
    }
 80101ea:	687b      	ldr	r3, [r7, #4]
 80101ec:	4618      	mov	r0, r3
 80101ee:	370c      	adds	r7, #12
 80101f0:	46bd      	mov	sp, r7
 80101f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101f6:	4770      	bx	lr
 80101f8:	08028a4c 	.word	0x08028a4c

080101fc <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 80101fc:	b580      	push	{r7, lr}
 80101fe:	b082      	sub	sp, #8
 8010200:	af00      	add	r7, sp, #0
 8010202:	6078      	str	r0, [r7, #4]
    }
 8010204:	6878      	ldr	r0, [r7, #4]
 8010206:	f7ff ffe9 	bl	80101dc <_ZN8touchgfx13DMA_InterfaceD1Ev>
 801020a:	210c      	movs	r1, #12
 801020c:	6878      	ldr	r0, [r7, #4]
 801020e:	f015 fdfa 	bl	8025e06 <_ZdlPvj>
 8010212:	687b      	ldr	r3, [r7, #4]
 8010214:	4618      	mov	r0, r3
 8010216:	3708      	adds	r7, #8
 8010218:	46bd      	mov	sp, r7
 801021a:	bd80      	pop	{r7, pc}

0801021c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 801021c:	b480      	push	{r7}
 801021e:	b083      	sub	sp, #12
 8010220:	af00      	add	r7, sp, #0
 8010222:	6078      	str	r0, [r7, #4]
 8010224:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8010226:	4a09      	ldr	r2, [pc, #36]	; (801024c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8010228:	687b      	ldr	r3, [r7, #4]
 801022a:	601a      	str	r2, [r3, #0]
 801022c:	687b      	ldr	r3, [r7, #4]
 801022e:	683a      	ldr	r2, [r7, #0]
 8010230:	605a      	str	r2, [r3, #4]
 8010232:	687b      	ldr	r3, [r7, #4]
 8010234:	2200      	movs	r2, #0
 8010236:	721a      	strb	r2, [r3, #8]
 8010238:	687b      	ldr	r3, [r7, #4]
 801023a:	2200      	movs	r2, #0
 801023c:	725a      	strb	r2, [r3, #9]
    {
    }
 801023e:	687b      	ldr	r3, [r7, #4]
 8010240:	4618      	mov	r0, r3
 8010242:	370c      	adds	r7, #12
 8010244:	46bd      	mov	sp, r7
 8010246:	f85d 7b04 	ldr.w	r7, [sp], #4
 801024a:	4770      	bx	lr
 801024c:	08028a4c 	.word	0x08028a4c

08010250 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 8010250:	b480      	push	{r7}
 8010252:	b083      	sub	sp, #12
 8010254:	af00      	add	r7, sp, #0
 8010256:	6078      	str	r0, [r7, #4]
    {
    }
 8010258:	bf00      	nop
 801025a:	370c      	adds	r7, #12
 801025c:	46bd      	mov	sp, r7
 801025e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010262:	4770      	bx	lr

08010264 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 8010264:	b480      	push	{r7}
 8010266:	b083      	sub	sp, #12
 8010268:	af00      	add	r7, sp, #0
 801026a:	6078      	str	r0, [r7, #4]
    {
    }
 801026c:	bf00      	nop
 801026e:	370c      	adds	r7, #12
 8010270:	46bd      	mov	sp, r7
 8010272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010276:	4770      	bx	lr

08010278 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 8010278:	b580      	push	{r7, lr}
 801027a:	b082      	sub	sp, #8
 801027c:	af00      	add	r7, sp, #0
 801027e:	6078      	str	r0, [r7, #4]
 8010280:	687b      	ldr	r3, [r7, #4]
 8010282:	330c      	adds	r3, #12
 8010284:	4618      	mov	r0, r3
 8010286:	f7ff ff64 	bl	8010152 <_ZN8touchgfx9colortypeC1Ev>
 801028a:	687b      	ldr	r3, [r7, #4]
 801028c:	4618      	mov	r0, r3
 801028e:	3708      	adds	r7, #8
 8010290:	46bd      	mov	sp, r7
 8010292:	bd80      	pop	{r7, pc}

08010294 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 8010294:	b580      	push	{r7, lr}
 8010296:	b082      	sub	sp, #8
 8010298:	af00      	add	r7, sp, #0
 801029a:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 801029c:	687a      	ldr	r2, [r7, #4]
 801029e:	687b      	ldr	r3, [r7, #4]
 80102a0:	330c      	adds	r3, #12
 80102a2:	4619      	mov	r1, r3
 80102a4:	4610      	mov	r0, r2
 80102a6:	f7ff ffb9 	bl	801021c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 80102aa:	4a0b      	ldr	r2, [pc, #44]	; (80102d8 <_ZN8STM32DMAC1Ev+0x44>)
 80102ac:	687b      	ldr	r3, [r7, #4]
 80102ae:	601a      	str	r2, [r3, #0]
 80102b0:	687b      	ldr	r3, [r7, #4]
 80102b2:	f103 000c 	add.w	r0, r3, #12
 80102b6:	687b      	ldr	r3, [r7, #4]
 80102b8:	3320      	adds	r3, #32
 80102ba:	2201      	movs	r2, #1
 80102bc:	4619      	mov	r1, r3
 80102be:	f002 fc63 	bl	8012b88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80102c2:	687b      	ldr	r3, [r7, #4]
 80102c4:	3320      	adds	r3, #32
 80102c6:	4618      	mov	r0, r3
 80102c8:	f7ff ffd6 	bl	8010278 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 80102cc:	687b      	ldr	r3, [r7, #4]
 80102ce:	4618      	mov	r0, r3
 80102d0:	3708      	adds	r7, #8
 80102d2:	46bd      	mov	sp, r7
 80102d4:	bd80      	pop	{r7, pc}
 80102d6:	bf00      	nop
 80102d8:	0802862c 	.word	0x0802862c

080102dc <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 80102dc:	b480      	push	{r7}
 80102de:	b083      	sub	sp, #12
 80102e0:	af00      	add	r7, sp, #0
 80102e2:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 80102e4:	2300      	movs	r3, #0
}
 80102e6:	4618      	mov	r0, r3
 80102e8:	370c      	adds	r7, #12
 80102ea:	46bd      	mov	sp, r7
 80102ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102f0:	4770      	bx	lr
	...

080102f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80102f4:	b580      	push	{r7, lr}
 80102f6:	b082      	sub	sp, #8
 80102f8:	af00      	add	r7, sp, #0
 80102fa:	6078      	str	r0, [r7, #4]
 80102fc:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 80102fe:	4b03      	ldr	r3, [pc, #12]	; (801030c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8010300:	4a03      	ldr	r2, [pc, #12]	; (8010310 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 8010302:	2122      	movs	r1, #34	; 0x22
 8010304:	4803      	ldr	r0, [pc, #12]	; (8010314 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 8010306:	f015 fdad 	bl	8025e64 <__assert_func>
 801030a:	bf00      	nop
 801030c:	08027750 	.word	0x08027750
 8010310:	08027774 	.word	0x08027774
 8010314:	080277b4 	.word	0x080277b4

08010318 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8010318:	b580      	push	{r7, lr}
 801031a:	b082      	sub	sp, #8
 801031c:	af00      	add	r7, sp, #0
 801031e:	6078      	str	r0, [r7, #4]
 8010320:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 8010322:	4b03      	ldr	r3, [pc, #12]	; (8010330 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8010324:	4a03      	ldr	r2, [pc, #12]	; (8010334 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 8010326:	2127      	movs	r1, #39	; 0x27
 8010328:	4803      	ldr	r0, [pc, #12]	; (8010338 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 801032a:	f015 fd9b 	bl	8025e64 <__assert_func>
 801032e:	bf00      	nop
 8010330:	08027750 	.word	0x08027750
 8010334:	080277e0 	.word	0x080277e0
 8010338:	080277b4 	.word	0x080277b4

0801033c <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 801033c:	b580      	push	{r7, lr}
 801033e:	b082      	sub	sp, #8
 8010340:	af00      	add	r7, sp, #0
 8010342:	6078      	str	r0, [r7, #4]
 8010344:	4a08      	ldr	r2, [pc, #32]	; (8010368 <_ZN8STM32DMAD1Ev+0x2c>)
 8010346:	687b      	ldr	r3, [r7, #4]
 8010348:	601a      	str	r2, [r3, #0]
 801034a:	687b      	ldr	r3, [r7, #4]
 801034c:	330c      	adds	r3, #12
 801034e:	4618      	mov	r0, r3
 8010350:	f000 f81c 	bl	801038c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8010354:	687b      	ldr	r3, [r7, #4]
 8010356:	4618      	mov	r0, r3
 8010358:	f7ff ff40 	bl	80101dc <_ZN8touchgfx13DMA_InterfaceD1Ev>
 801035c:	687b      	ldr	r3, [r7, #4]
 801035e:	4618      	mov	r0, r3
 8010360:	3708      	adds	r7, #8
 8010362:	46bd      	mov	sp, r7
 8010364:	bd80      	pop	{r7, pc}
 8010366:	bf00      	nop
 8010368:	0802862c 	.word	0x0802862c

0801036c <_ZN8STM32DMAD0Ev>:
 801036c:	b580      	push	{r7, lr}
 801036e:	b082      	sub	sp, #8
 8010370:	af00      	add	r7, sp, #0
 8010372:	6078      	str	r0, [r7, #4]
 8010374:	6878      	ldr	r0, [r7, #4]
 8010376:	f7ff ffe1 	bl	801033c <_ZN8STM32DMAD1Ev>
 801037a:	2144      	movs	r1, #68	; 0x44
 801037c:	6878      	ldr	r0, [r7, #4]
 801037e:	f015 fd42 	bl	8025e06 <_ZdlPvj>
 8010382:	687b      	ldr	r3, [r7, #4]
 8010384:	4618      	mov	r0, r3
 8010386:	3708      	adds	r7, #8
 8010388:	46bd      	mov	sp, r7
 801038a:	bd80      	pop	{r7, pc}

0801038c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 801038c:	b580      	push	{r7, lr}
 801038e:	b082      	sub	sp, #8
 8010390:	af00      	add	r7, sp, #0
 8010392:	6078      	str	r0, [r7, #4]
 8010394:	4a05      	ldr	r2, [pc, #20]	; (80103ac <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8010396:	687b      	ldr	r3, [r7, #4]
 8010398:	601a      	str	r2, [r3, #0]
 801039a:	687b      	ldr	r3, [r7, #4]
 801039c:	4618      	mov	r0, r3
 801039e:	f7ff fee7 	bl	8010170 <_ZN8touchgfx9DMA_QueueD1Ev>
 80103a2:	687b      	ldr	r3, [r7, #4]
 80103a4:	4618      	mov	r0, r3
 80103a6:	3708      	adds	r7, #8
 80103a8:	46bd      	mov	sp, r7
 80103aa:	bd80      	pop	{r7, pc}
 80103ac:	08028a9c 	.word	0x08028a9c

080103b0 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80103b0:	b580      	push	{r7, lr}
 80103b2:	b082      	sub	sp, #8
 80103b4:	af00      	add	r7, sp, #0
 80103b6:	6078      	str	r0, [r7, #4]
 80103b8:	6878      	ldr	r0, [r7, #4]
 80103ba:	f7ff ffe7 	bl	801038c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80103be:	2114      	movs	r1, #20
 80103c0:	6878      	ldr	r0, [r7, #4]
 80103c2:	f015 fd20 	bl	8025e06 <_ZdlPvj>
 80103c6:	687b      	ldr	r3, [r7, #4]
 80103c8:	4618      	mov	r0, r3
 80103ca:	3708      	adds	r7, #8
 80103cc:	46bd      	mov	sp, r7
 80103ce:	bd80      	pop	{r7, pc}

080103d0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 80103d0:	b480      	push	{r7}
 80103d2:	b083      	sub	sp, #12
 80103d4:	af00      	add	r7, sp, #0
 80103d6:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 80103d8:	4a04      	ldr	r2, [pc, #16]	; (80103ec <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 80103da:	687b      	ldr	r3, [r7, #4]
 80103dc:	6013      	str	r3, [r2, #0]
    }
 80103de:	bf00      	nop
 80103e0:	370c      	adds	r7, #12
 80103e2:	46bd      	mov	sp, r7
 80103e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103e8:	4770      	bx	lr
 80103ea:	bf00      	nop
 80103ec:	24004aac 	.word	0x24004aac

080103f0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 80103f0:	b480      	push	{r7}
 80103f2:	b085      	sub	sp, #20
 80103f4:	af00      	add	r7, sp, #0
 80103f6:	60f8      	str	r0, [r7, #12]
 80103f8:	60b9      	str	r1, [r7, #8]
 80103fa:	607a      	str	r2, [r7, #4]
 80103fc:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80103fe:	4a0b      	ldr	r2, [pc, #44]	; (801042c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010400:	68fb      	ldr	r3, [r7, #12]
 8010402:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8010404:	68fb      	ldr	r3, [r7, #12]
 8010406:	68ba      	ldr	r2, [r7, #8]
 8010408:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 801040a:	68fb      	ldr	r3, [r7, #12]
 801040c:	687a      	ldr	r2, [r7, #4]
 801040e:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8010410:	68fb      	ldr	r3, [r7, #12]
 8010412:	683a      	ldr	r2, [r7, #0]
 8010414:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 8010416:	68fb      	ldr	r3, [r7, #12]
 8010418:	69ba      	ldr	r2, [r7, #24]
 801041a:	611a      	str	r2, [r3, #16]
    {
    }
 801041c:	68fb      	ldr	r3, [r7, #12]
 801041e:	4618      	mov	r0, r3
 8010420:	3714      	adds	r7, #20
 8010422:	46bd      	mov	sp, r7
 8010424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010428:	4770      	bx	lr
 801042a:	bf00      	nop
 801042c:	08028764 	.word	0x08028764

08010430 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010430:	b480      	push	{r7}
 8010432:	b083      	sub	sp, #12
 8010434:	af00      	add	r7, sp, #0
 8010436:	6078      	str	r0, [r7, #4]
    {
 8010438:	4a04      	ldr	r2, [pc, #16]	; (801044c <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 801043a:	687b      	ldr	r3, [r7, #4]
 801043c:	601a      	str	r2, [r3, #0]
    }
 801043e:	687b      	ldr	r3, [r7, #4]
 8010440:	4618      	mov	r0, r3
 8010442:	370c      	adds	r7, #12
 8010444:	46bd      	mov	sp, r7
 8010446:	f85d 7b04 	ldr.w	r7, [sp], #4
 801044a:	4770      	bx	lr
 801044c:	08028764 	.word	0x08028764

08010450 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8010450:	b580      	push	{r7, lr}
 8010452:	b082      	sub	sp, #8
 8010454:	af00      	add	r7, sp, #0
 8010456:	6078      	str	r0, [r7, #4]
    }
 8010458:	6878      	ldr	r0, [r7, #4]
 801045a:	f7ff ffe9 	bl	8010430 <_ZN8touchgfx7MVPHeapD1Ev>
 801045e:	2114      	movs	r1, #20
 8010460:	6878      	ldr	r0, [r7, #4]
 8010462:	f015 fcd0 	bl	8025e06 <_ZdlPvj>
 8010466:	687b      	ldr	r3, [r7, #4]
 8010468:	4618      	mov	r0, r3
 801046a:	3708      	adds	r7, #8
 801046c:	46bd      	mov	sp, r7
 801046e:	bd80      	pop	{r7, pc}

08010470 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8010470:	b480      	push	{r7}
 8010472:	b083      	sub	sp, #12
 8010474:	af00      	add	r7, sp, #0
 8010476:	6078      	str	r0, [r7, #4]
    {
 8010478:	4a04      	ldr	r2, [pc, #16]	; (801048c <_ZN8touchgfx3LCDD1Ev+0x1c>)
 801047a:	687b      	ldr	r3, [r7, #4]
 801047c:	601a      	str	r2, [r3, #0]
    }
 801047e:	687b      	ldr	r3, [r7, #4]
 8010480:	4618      	mov	r0, r3
 8010482:	370c      	adds	r7, #12
 8010484:	46bd      	mov	sp, r7
 8010486:	f85d 7b04 	ldr.w	r7, [sp], #4
 801048a:	4770      	bx	lr
 801048c:	08028e0c 	.word	0x08028e0c

08010490 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8010490:	b580      	push	{r7, lr}
 8010492:	b082      	sub	sp, #8
 8010494:	af00      	add	r7, sp, #0
 8010496:	6078      	str	r0, [r7, #4]
    }
 8010498:	6878      	ldr	r0, [r7, #4]
 801049a:	f7ff ffe9 	bl	8010470 <_ZN8touchgfx3LCDD1Ev>
 801049e:	2108      	movs	r1, #8
 80104a0:	6878      	ldr	r0, [r7, #4]
 80104a2:	f015 fcb0 	bl	8025e06 <_ZdlPvj>
 80104a6:	687b      	ldr	r3, [r7, #4]
 80104a8:	4618      	mov	r0, r3
 80104aa:	3708      	adds	r7, #8
 80104ac:	46bd      	mov	sp, r7
 80104ae:	bd80      	pop	{r7, pc}

080104b0 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 80104b0:	b480      	push	{r7}
 80104b2:	b083      	sub	sp, #12
 80104b4:	af00      	add	r7, sp, #0
 80104b6:	6078      	str	r0, [r7, #4]
            : startX(0),
 80104b8:	687b      	ldr	r3, [r7, #4]
 80104ba:	2200      	movs	r2, #0
 80104bc:	801a      	strh	r2, [r3, #0]
              startY(0),
 80104be:	687b      	ldr	r3, [r7, #4]
 80104c0:	2200      	movs	r2, #0
 80104c2:	805a      	strh	r2, [r3, #2]
              downX(0),
 80104c4:	687b      	ldr	r3, [r7, #4]
 80104c6:	2200      	movs	r2, #0
 80104c8:	809a      	strh	r2, [r3, #4]
              downY(0),
 80104ca:	687b      	ldr	r3, [r7, #4]
 80104cc:	2200      	movs	r2, #0
 80104ce:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 80104d0:	687b      	ldr	r3, [r7, #4]
 80104d2:	2200      	movs	r2, #0
 80104d4:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 80104d6:	687b      	ldr	r3, [r7, #4]
 80104d8:	2200      	movs	r2, #0
 80104da:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 80104dc:	687b      	ldr	r3, [r7, #4]
 80104de:	2200      	movs	r2, #0
 80104e0:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 80104e2:	687b      	ldr	r3, [r7, #4]
 80104e4:	2200      	movs	r2, #0
 80104e6:	739a      	strb	r2, [r3, #14]
        {
        }
 80104e8:	687b      	ldr	r3, [r7, #4]
 80104ea:	4618      	mov	r0, r3
 80104ec:	370c      	adds	r7, #12
 80104ee:	46bd      	mov	sp, r7
 80104f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104f4:	4770      	bx	lr

080104f6 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 80104f6:	b580      	push	{r7, lr}
 80104f8:	b082      	sub	sp, #8
 80104fa:	af00      	add	r7, sp, #0
 80104fc:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 80104fe:	687b      	ldr	r3, [r7, #4]
 8010500:	4618      	mov	r0, r3
 8010502:	f7ff ffd5 	bl	80104b0 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8010506:	687b      	ldr	r3, [r7, #4]
 8010508:	2200      	movs	r2, #0
 801050a:	611a      	str	r2, [r3, #16]
 801050c:	687b      	ldr	r3, [r7, #4]
 801050e:	2200      	movs	r2, #0
 8010510:	829a      	strh	r2, [r3, #20]
    {
    }
 8010512:	687b      	ldr	r3, [r7, #4]
 8010514:	4618      	mov	r0, r3
 8010516:	3708      	adds	r7, #8
 8010518:	46bd      	mov	sp, r7
 801051a:	bd80      	pop	{r7, pc}

0801051c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 801051c:	b580      	push	{r7, lr}
 801051e:	b084      	sub	sp, #16
 8010520:	af00      	add	r7, sp, #0
 8010522:	60f8      	str	r0, [r7, #12]
 8010524:	60b9      	str	r1, [r7, #8]
 8010526:	607a      	str	r2, [r7, #4]
 8010528:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 801052a:	4a55      	ldr	r2, [pc, #340]	; (8010680 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 801052c:	68fb      	ldr	r3, [r7, #12]
 801052e:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8010530:	68fb      	ldr	r3, [r7, #12]
 8010532:	68ba      	ldr	r2, [r7, #8]
 8010534:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 8010536:	68fb      	ldr	r3, [r7, #12]
 8010538:	687a      	ldr	r2, [r7, #4]
 801053a:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 801053c:	68fb      	ldr	r3, [r7, #12]
 801053e:	683a      	ldr	r2, [r7, #0]
 8010540:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 8010542:	68fb      	ldr	r3, [r7, #12]
 8010544:	2200      	movs	r2, #0
 8010546:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8010548:	68fb      	ldr	r3, [r7, #12]
 801054a:	2200      	movs	r2, #0
 801054c:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 801054e:	68fb      	ldr	r3, [r7, #12]
 8010550:	2200      	movs	r2, #0
 8010552:	619a      	str	r2, [r3, #24]
          gestures(),
 8010554:	68fb      	ldr	r3, [r7, #12]
 8010556:	331c      	adds	r3, #28
 8010558:	4618      	mov	r0, r3
 801055a:	f7ff ffcc 	bl	80104f6 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 801055e:	68fb      	ldr	r3, [r7, #12]
 8010560:	2200      	movs	r2, #0
 8010562:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 8010566:	68fb      	ldr	r3, [r7, #12]
 8010568:	2200      	movs	r2, #0
 801056a:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 801056c:	68fb      	ldr	r3, [r7, #12]
 801056e:	2200      	movs	r2, #0
 8010570:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 8010572:	68fb      	ldr	r3, [r7, #12]
 8010574:	2200      	movs	r2, #0
 8010576:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 8010578:	68fb      	ldr	r3, [r7, #12]
 801057a:	2200      	movs	r2, #0
 801057c:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 801057e:	68fb      	ldr	r3, [r7, #12]
 8010580:	2200      	movs	r2, #0
 8010582:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 8010586:	68fb      	ldr	r3, [r7, #12]
 8010588:	2201      	movs	r2, #1
 801058a:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 801058e:	68fb      	ldr	r3, [r7, #12]
 8010590:	2200      	movs	r2, #0
 8010592:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 8010596:	68fb      	ldr	r3, [r7, #12]
 8010598:	2200      	movs	r2, #0
 801059a:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 801059e:	68fb      	ldr	r3, [r7, #12]
 80105a0:	2200      	movs	r2, #0
 80105a2:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 80105a4:	68fb      	ldr	r3, [r7, #12]
 80105a6:	3350      	adds	r3, #80	; 0x50
 80105a8:	4618      	mov	r0, r3
 80105aa:	f7fd fc14 	bl	800ddd6 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 80105ae:	68fb      	ldr	r3, [r7, #12]
 80105b0:	2200      	movs	r2, #0
 80105b2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 80105b6:	68fb      	ldr	r3, [r7, #12]
 80105b8:	2200      	movs	r2, #0
 80105ba:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 80105bc:	68fb      	ldr	r3, [r7, #12]
 80105be:	2200      	movs	r2, #0
 80105c0:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 80105c2:	68fb      	ldr	r3, [r7, #12]
 80105c4:	2200      	movs	r2, #0
 80105c6:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 80105c8:	68fb      	ldr	r3, [r7, #12]
 80105ca:	2201      	movs	r2, #1
 80105cc:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 80105d0:	68fb      	ldr	r3, [r7, #12]
 80105d2:	2200      	movs	r2, #0
 80105d4:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 80105d8:	68fb      	ldr	r3, [r7, #12]
 80105da:	2200      	movs	r2, #0
 80105dc:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 80105e0:	68fb      	ldr	r3, [r7, #12]
 80105e2:	2201      	movs	r2, #1
 80105e4:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 80105e8:	68fb      	ldr	r3, [r7, #12]
 80105ea:	2200      	movs	r2, #0
 80105ec:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 80105f0:	68fb      	ldr	r3, [r7, #12]
 80105f2:	2200      	movs	r2, #0
 80105f4:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 80105f8:	68fb      	ldr	r3, [r7, #12]
 80105fa:	2200      	movs	r2, #0
 80105fc:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 8010600:	68fb      	ldr	r3, [r7, #12]
 8010602:	2200      	movs	r2, #0
 8010604:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 8010608:	68fb      	ldr	r3, [r7, #12]
 801060a:	2200      	movs	r2, #0
 801060c:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 8010610:	68fb      	ldr	r3, [r7, #12]
 8010612:	2200      	movs	r2, #0
 8010614:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8010616:	68fb      	ldr	r3, [r7, #12]
 8010618:	2200      	movs	r2, #0
 801061a:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 801061e:	68fb      	ldr	r3, [r7, #12]
 8010620:	2200      	movs	r2, #0
 8010622:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 8010626:	68fb      	ldr	r3, [r7, #12]
 8010628:	2201      	movs	r2, #1
 801062a:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 801062e:	68fb      	ldr	r3, [r7, #12]
 8010630:	2201      	movs	r2, #1
 8010632:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 8010636:	4a13      	ldr	r2, [pc, #76]	; (8010684 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8010638:	68fb      	ldr	r3, [r7, #12]
 801063a:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 801063c:	4a12      	ldr	r2, [pc, #72]	; (8010688 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 801063e:	8b3b      	ldrh	r3, [r7, #24]
 8010640:	8013      	strh	r3, [r2, #0]
 8010642:	4b11      	ldr	r3, [pc, #68]	; (8010688 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010644:	881a      	ldrh	r2, [r3, #0]
 8010646:	4b11      	ldr	r3, [pc, #68]	; (801068c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8010648:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 801064a:	4a11      	ldr	r2, [pc, #68]	; (8010690 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 801064c:	8bbb      	ldrh	r3, [r7, #28]
 801064e:	8013      	strh	r3, [r2, #0]
 8010650:	4b0f      	ldr	r3, [pc, #60]	; (8010690 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010652:	881a      	ldrh	r2, [r3, #0]
 8010654:	4b0f      	ldr	r3, [pc, #60]	; (8010694 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 8010656:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8010658:	4b0f      	ldr	r3, [pc, #60]	; (8010698 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 801065a:	2200      	movs	r2, #0
 801065c:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 801065e:	8b3a      	ldrh	r2, [r7, #24]
 8010660:	8bbb      	ldrh	r3, [r7, #28]
 8010662:	429a      	cmp	r2, r3
 8010664:	bf34      	ite	cc
 8010666:	2301      	movcc	r3, #1
 8010668:	2300      	movcs	r3, #0
 801066a:	b2db      	uxtb	r3, r3
 801066c:	461a      	mov	r2, r3
 801066e:	68fb      	ldr	r3, [r7, #12]
 8010670:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8010674:	68fb      	ldr	r3, [r7, #12]
 8010676:	4618      	mov	r0, r3
 8010678:	3710      	adds	r7, #16
 801067a:	46bd      	mov	sp, r7
 801067c:	bd80      	pop	{r7, pc}
 801067e:	bf00      	nop
 8010680:	08028974 	.word	0x08028974
 8010684:	24004a50 	.word	0x24004a50
 8010688:	24004a44 	.word	0x24004a44
 801068c:	24004a4a 	.word	0x24004a4a
 8010690:	24004a46 	.word	0x24004a46
 8010694:	24004a4c 	.word	0x24004a4c
 8010698:	24004a48 	.word	0x24004a48

0801069c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 801069c:	b580      	push	{r7, lr}
 801069e:	b082      	sub	sp, #8
 80106a0:	af00      	add	r7, sp, #0
 80106a2:	6078      	str	r0, [r7, #4]
 80106a4:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 80106a6:	683b      	ldr	r3, [r7, #0]
 80106a8:	4618      	mov	r0, r3
 80106aa:	f7fd f8f7 	bl	800d89c <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 80106ae:	bf00      	nop
 80106b0:	3708      	adds	r7, #8
 80106b2:	46bd      	mov	sp, r7
 80106b4:	bd80      	pop	{r7, pc}
	...

080106b8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80106b8:	b580      	push	{r7, lr}
 80106ba:	b086      	sub	sp, #24
 80106bc:	af02      	add	r7, sp, #8
 80106be:	60f8      	str	r0, [r7, #12]
 80106c0:	60b9      	str	r1, [r7, #8]
 80106c2:	607a      	str	r2, [r7, #4]
 80106c4:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80106c6:	68f8      	ldr	r0, [r7, #12]
 80106c8:	69bb      	ldr	r3, [r7, #24]
 80106ca:	9300      	str	r3, [sp, #0]
 80106cc:	683b      	ldr	r3, [r7, #0]
 80106ce:	687a      	ldr	r2, [r7, #4]
 80106d0:	68b9      	ldr	r1, [r7, #8]
 80106d2:	f7ff fe8d 	bl	80103f0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 80106d6:	4a04      	ldr	r2, [pc, #16]	; (80106e8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 80106d8:	68fb      	ldr	r3, [r7, #12]
 80106da:	601a      	str	r2, [r3, #0]
    {

    }
 80106dc:	68fb      	ldr	r3, [r7, #12]
 80106de:	4618      	mov	r0, r3
 80106e0:	3710      	adds	r7, #16
 80106e2:	46bd      	mov	sp, r7
 80106e4:	bd80      	pop	{r7, pc}
 80106e6:	bf00      	nop
 80106e8:	08028750 	.word	0x08028750

080106ec <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80106ec:	b580      	push	{r7, lr}
 80106ee:	af00      	add	r7, sp, #0
 80106f0:	4801      	ldr	r0, [pc, #4]	; (80106f8 <__tcf_0+0xc>)
 80106f2:	f000 f969 	bl	80109c8 <_ZN12FrontendHeapD1Ev>
 80106f6:	bd80      	pop	{r7, pc}
 80106f8:	240023d0 	.word	0x240023d0

080106fc <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 80106fc:	b580      	push	{r7, lr}
 80106fe:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8010700:	4b11      	ldr	r3, [pc, #68]	; (8010748 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010702:	681b      	ldr	r3, [r3, #0]
 8010704:	f3bf 8f5b 	dmb	ish
 8010708:	f003 0301 	and.w	r3, r3, #1
 801070c:	2b00      	cmp	r3, #0
 801070e:	bf0c      	ite	eq
 8010710:	2301      	moveq	r3, #1
 8010712:	2300      	movne	r3, #0
 8010714:	b2db      	uxtb	r3, r3
 8010716:	2b00      	cmp	r3, #0
 8010718:	d013      	beq.n	8010742 <_ZN12FrontendHeap11getInstanceEv+0x46>
 801071a:	480b      	ldr	r0, [pc, #44]	; (8010748 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801071c:	f015 fb75 	bl	8025e0a <__cxa_guard_acquire>
 8010720:	4603      	mov	r3, r0
 8010722:	2b00      	cmp	r3, #0
 8010724:	bf14      	ite	ne
 8010726:	2301      	movne	r3, #1
 8010728:	2300      	moveq	r3, #0
 801072a:	b2db      	uxtb	r3, r3
 801072c:	2b00      	cmp	r3, #0
 801072e:	d008      	beq.n	8010742 <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010730:	4806      	ldr	r0, [pc, #24]	; (801074c <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8010732:	f000 f867 	bl	8010804 <_ZN12FrontendHeapC1Ev>
 8010736:	4806      	ldr	r0, [pc, #24]	; (8010750 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8010738:	f015 fbb2 	bl	8025ea0 <atexit>
 801073c:	4802      	ldr	r0, [pc, #8]	; (8010748 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801073e:	f015 fb70 	bl	8025e22 <__cxa_guard_release>
        return instance;
 8010742:	4b02      	ldr	r3, [pc, #8]	; (801074c <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8010744:	4618      	mov	r0, r3
 8010746:	bd80      	pop	{r7, pc}
 8010748:	2400270c 	.word	0x2400270c
 801074c:	240023d0 	.word	0x240023d0
 8010750:	080106ed 	.word	0x080106ed

08010754 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8010754:	b580      	push	{r7, lr}
 8010756:	b082      	sub	sp, #8
 8010758:	af00      	add	r7, sp, #0
 801075a:	6078      	str	r0, [r7, #4]
 801075c:	4a05      	ldr	r2, [pc, #20]	; (8010774 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 801075e:	687b      	ldr	r3, [r7, #4]
 8010760:	601a      	str	r2, [r3, #0]
 8010762:	687b      	ldr	r3, [r7, #4]
 8010764:	4618      	mov	r0, r3
 8010766:	f7ff fe63 	bl	8010430 <_ZN8touchgfx7MVPHeapD1Ev>
 801076a:	687b      	ldr	r3, [r7, #4]
 801076c:	4618      	mov	r0, r3
 801076e:	3708      	adds	r7, #8
 8010770:	46bd      	mov	sp, r7
 8010772:	bd80      	pop	{r7, pc}
 8010774:	08028750 	.word	0x08028750

08010778 <_ZN16FrontendHeapBaseD0Ev>:
 8010778:	b580      	push	{r7, lr}
 801077a:	b082      	sub	sp, #8
 801077c:	af00      	add	r7, sp, #0
 801077e:	6078      	str	r0, [r7, #4]
 8010780:	6878      	ldr	r0, [r7, #4]
 8010782:	f7ff ffe7 	bl	8010754 <_ZN16FrontendHeapBaseD1Ev>
 8010786:	2114      	movs	r1, #20
 8010788:	6878      	ldr	r0, [r7, #4]
 801078a:	f015 fb3c 	bl	8025e06 <_ZdlPvj>
 801078e:	687b      	ldr	r3, [r7, #4]
 8010790:	4618      	mov	r0, r3
 8010792:	3708      	adds	r7, #8
 8010794:	46bd      	mov	sp, r7
 8010796:	bd80      	pop	{r7, pc}

08010798 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 8010798:	b580      	push	{r7, lr}
 801079a:	b082      	sub	sp, #8
 801079c:	af00      	add	r7, sp, #0
 801079e:	6078      	str	r0, [r7, #4]
 80107a0:	687b      	ldr	r3, [r7, #4]
 80107a2:	4618      	mov	r0, r3
 80107a4:	f000 ffaa 	bl	80116fc <_ZN8touchgfx17AbstractPartitionC1Ev>
 80107a8:	4a03      	ldr	r2, [pc, #12]	; (80107b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80107aa:	687b      	ldr	r3, [r7, #4]
 80107ac:	601a      	str	r2, [r3, #0]
 80107ae:	687b      	ldr	r3, [r7, #4]
 80107b0:	4618      	mov	r0, r3
 80107b2:	3708      	adds	r7, #8
 80107b4:	46bd      	mov	sp, r7
 80107b6:	bd80      	pop	{r7, pc}
 80107b8:	0802871c 	.word	0x0802871c

080107bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80107bc:	b580      	push	{r7, lr}
 80107be:	b082      	sub	sp, #8
 80107c0:	af00      	add	r7, sp, #0
 80107c2:	6078      	str	r0, [r7, #4]
 80107c4:	687b      	ldr	r3, [r7, #4]
 80107c6:	4618      	mov	r0, r3
 80107c8:	f000 ff98 	bl	80116fc <_ZN8touchgfx17AbstractPartitionC1Ev>
 80107cc:	4a03      	ldr	r2, [pc, #12]	; (80107dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80107ce:	687b      	ldr	r3, [r7, #4]
 80107d0:	601a      	str	r2, [r3, #0]
 80107d2:	687b      	ldr	r3, [r7, #4]
 80107d4:	4618      	mov	r0, r3
 80107d6:	3708      	adds	r7, #8
 80107d8:	46bd      	mov	sp, r7
 80107da:	bd80      	pop	{r7, pc}
 80107dc:	080286e8 	.word	0x080286e8

080107e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80107e0:	b580      	push	{r7, lr}
 80107e2:	b082      	sub	sp, #8
 80107e4:	af00      	add	r7, sp, #0
 80107e6:	6078      	str	r0, [r7, #4]
 80107e8:	687b      	ldr	r3, [r7, #4]
 80107ea:	4618      	mov	r0, r3
 80107ec:	f000 ff86 	bl	80116fc <_ZN8touchgfx17AbstractPartitionC1Ev>
 80107f0:	4a03      	ldr	r2, [pc, #12]	; (8010800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80107f2:	687b      	ldr	r3, [r7, #4]
 80107f4:	601a      	str	r2, [r3, #0]
 80107f6:	687b      	ldr	r3, [r7, #4]
 80107f8:	4618      	mov	r0, r3
 80107fa:	3708      	adds	r7, #8
 80107fc:	46bd      	mov	sp, r7
 80107fe:	bd80      	pop	{r7, pc}
 8010800:	080286b4 	.word	0x080286b4

08010804 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010804:	b590      	push	{r4, r7, lr}
 8010806:	b085      	sub	sp, #20
 8010808:	af02      	add	r7, sp, #8
 801080a:	6078      	str	r0, [r7, #4]
        app(model, *this)
 801080c:	6878      	ldr	r0, [r7, #4]
 801080e:	687b      	ldr	r3, [r7, #4]
 8010810:	f103 0114 	add.w	r1, r3, #20
 8010814:	687b      	ldr	r3, [r7, #4]
 8010816:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 801081a:	687b      	ldr	r3, [r7, #4]
 801081c:	f503 74e4 	add.w	r4, r3, #456	; 0x1c8
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010820:	687b      	ldr	r3, [r7, #4]
 8010822:	f503 73ee 	add.w	r3, r3, #476	; 0x1dc
        app(model, *this)
 8010826:	9300      	str	r3, [sp, #0]
 8010828:	4623      	mov	r3, r4
 801082a:	f7ff ff45 	bl	80106b8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 801082e:	4a18      	ldr	r2, [pc, #96]	; (8010890 <_ZN12FrontendHeapC1Ev+0x8c>)
 8010830:	687b      	ldr	r3, [r7, #4]
 8010832:	601a      	str	r2, [r3, #0]
 8010834:	687b      	ldr	r3, [r7, #4]
 8010836:	3314      	adds	r3, #20
 8010838:	4618      	mov	r0, r3
 801083a:	f7ff ffad 	bl	8010798 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 801083e:	687b      	ldr	r3, [r7, #4]
 8010840:	332c      	adds	r3, #44	; 0x2c
 8010842:	4618      	mov	r0, r3
 8010844:	f7ff ffba 	bl	80107bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010848:	687b      	ldr	r3, [r7, #4]
 801084a:	f503 73e4 	add.w	r3, r3, #456	; 0x1c8
 801084e:	4618      	mov	r0, r3
 8010850:	f7ff ffc6 	bl	80107e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010854:	687b      	ldr	r3, [r7, #4]
 8010856:	f503 70ee 	add.w	r0, r3, #476	; 0x1dc
 801085a:	687b      	ldr	r3, [r7, #4]
 801085c:	f503 734e 	add.w	r3, r3, #824	; 0x338
 8010860:	687a      	ldr	r2, [r7, #4]
 8010862:	4619      	mov	r1, r3
 8010864:	f7fe fea2 	bl	800f5ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8010868:	687b      	ldr	r3, [r7, #4]
 801086a:	f503 734e 	add.w	r3, r3, #824	; 0x338
 801086e:	4618      	mov	r0, r3
 8010870:	f7ff f8be 	bl	800f9f0 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 8010874:	687a      	ldr	r2, [r7, #4]
 8010876:	687b      	ldr	r3, [r7, #4]
 8010878:	f503 73ee 	add.w	r3, r3, #476	; 0x1dc
 801087c:	4619      	mov	r1, r3
 801087e:	4610      	mov	r0, r2
 8010880:	f7ff ff0c 	bl	801069c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8010884:	687b      	ldr	r3, [r7, #4]
 8010886:	4618      	mov	r0, r3
 8010888:	370c      	adds	r7, #12
 801088a:	46bd      	mov	sp, r7
 801088c:	bd90      	pop	{r4, r7, pc}
 801088e:	bf00      	nop
 8010890:	080286a0 	.word	0x080286a0

08010894 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8010894:	b580      	push	{r7, lr}
 8010896:	b086      	sub	sp, #24
 8010898:	af02      	add	r7, sp, #8
 801089a:	60f8      	str	r0, [r7, #12]
 801089c:	60b9      	str	r1, [r7, #8]
 801089e:	607a      	str	r2, [r7, #4]
 80108a0:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 80108a2:	68f8      	ldr	r0, [r7, #12]
 80108a4:	8bbb      	ldrh	r3, [r7, #28]
 80108a6:	9301      	str	r3, [sp, #4]
 80108a8:	8b3b      	ldrh	r3, [r7, #24]
 80108aa:	9300      	str	r3, [sp, #0]
 80108ac:	683b      	ldr	r3, [r7, #0]
 80108ae:	687a      	ldr	r2, [r7, #4]
 80108b0:	68b9      	ldr	r1, [r7, #8]
 80108b2:	f7ff fe33 	bl	801051c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 80108b6:	4a04      	ldr	r2, [pc, #16]	; (80108c8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80108b8:	68fb      	ldr	r3, [r7, #12]
 80108ba:	601a      	str	r2, [r3, #0]
    }
 80108bc:	68fb      	ldr	r3, [r7, #12]
 80108be:	4618      	mov	r0, r3
 80108c0:	3710      	adds	r7, #16
 80108c2:	46bd      	mov	sp, r7
 80108c4:	bd80      	pop	{r7, pc}
 80108c6:	bf00      	nop
 80108c8:	080287a0 	.word	0x080287a0

080108cc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80108cc:	b580      	push	{r7, lr}
 80108ce:	b086      	sub	sp, #24
 80108d0:	af02      	add	r7, sp, #8
 80108d2:	60f8      	str	r0, [r7, #12]
 80108d4:	60b9      	str	r1, [r7, #8]
 80108d6:	607a      	str	r2, [r7, #4]
 80108d8:	603b      	str	r3, [r7, #0]
 80108da:	68f8      	ldr	r0, [r7, #12]
 80108dc:	8bbb      	ldrh	r3, [r7, #28]
 80108de:	9301      	str	r3, [sp, #4]
 80108e0:	8b3b      	ldrh	r3, [r7, #24]
 80108e2:	9300      	str	r3, [sp, #0]
 80108e4:	683b      	ldr	r3, [r7, #0]
 80108e6:	687a      	ldr	r2, [r7, #4]
 80108e8:	68b9      	ldr	r1, [r7, #8]
 80108ea:	f7ff ffd3 	bl	8010894 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 80108ee:	4a04      	ldr	r2, [pc, #16]	; (8010900 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80108f0:	68fb      	ldr	r3, [r7, #12]
 80108f2:	601a      	str	r2, [r3, #0]
    }
 80108f4:	68fb      	ldr	r3, [r7, #12]
 80108f6:	4618      	mov	r0, r3
 80108f8:	3710      	adds	r7, #16
 80108fa:	46bd      	mov	sp, r7
 80108fc:	bd80      	pop	{r7, pc}
 80108fe:	bf00      	nop
 8010900:	08028554 	.word	0x08028554

08010904 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8010904:	b480      	push	{r7}
 8010906:	b083      	sub	sp, #12
 8010908:	af00      	add	r7, sp, #0
 801090a:	6078      	str	r0, [r7, #4]
 801090c:	4a04      	ldr	r2, [pc, #16]	; (8010920 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 801090e:	687b      	ldr	r3, [r7, #4]
 8010910:	601a      	str	r2, [r3, #0]
 8010912:	687b      	ldr	r3, [r7, #4]
 8010914:	4618      	mov	r0, r3
 8010916:	370c      	adds	r7, #12
 8010918:	46bd      	mov	sp, r7
 801091a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801091e:	4770      	bx	lr
 8010920:	0802853c 	.word	0x0802853c

08010924 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8010924:	b580      	push	{r7, lr}
 8010926:	b082      	sub	sp, #8
 8010928:	af00      	add	r7, sp, #0
 801092a:	6078      	str	r0, [r7, #4]
 801092c:	687b      	ldr	r3, [r7, #4]
 801092e:	4618      	mov	r0, r3
 8010930:	f7ff ffe8 	bl	8010904 <_ZN8touchgfx15TouchControllerC1Ev>
 8010934:	4a03      	ldr	r2, [pc, #12]	; (8010944 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8010936:	687b      	ldr	r3, [r7, #4]
 8010938:	601a      	str	r2, [r3, #0]
 801093a:	687b      	ldr	r3, [r7, #4]
 801093c:	4618      	mov	r0, r3
 801093e:	3708      	adds	r7, #8
 8010940:	46bd      	mov	sp, r7
 8010942:	bd80      	pop	{r7, pc}
 8010944:	08028524 	.word	0x08028524

08010948 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 8010948:	b590      	push	{r4, r7, lr}
 801094a:	b085      	sub	sp, #20
 801094c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 801094e:	f7fe fc07 	bl	800f160 <_ZN14BitmapDatabase11getInstanceEv>
 8010952:	4604      	mov	r4, r0
 8010954:	f7fe fc0e 	bl	800f174 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8010958:	4603      	mov	r3, r0
 801095a:	4619      	mov	r1, r3
 801095c:	2300      	movs	r3, #0
 801095e:	9300      	str	r3, [sp, #0]
 8010960:	2300      	movs	r3, #0
 8010962:	2200      	movs	r2, #0
 8010964:	4620      	mov	r0, r4
 8010966:	f007 fdf3 	bl	8018550 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 801096a:	4809      	ldr	r0, [pc, #36]	; (8010990 <touchgfx_init+0x48>)
 801096c:	f7ff fd30 	bl	80103d0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8010970:	2000      	movs	r0, #0
 8010972:	f7fe fd43 	bl	800f3fc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8010976:	4807      	ldr	r0, [pc, #28]	; (8010994 <touchgfx_init+0x4c>)
 8010978:	f007 fd52 	bl	8018420 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 801097c:	f7ff febe 	bl	80106fc <_ZN12FrontendHeap11getInstanceEv>
 8010980:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8010982:	4805      	ldr	r0, [pc, #20]	; (8010998 <touchgfx_init+0x50>)
 8010984:	f7ff fa9e 	bl	800fec4 <_ZN11TouchGFXHAL10initializeEv>
}
 8010988:	bf00      	nop
 801098a:	370c      	adds	r7, #12
 801098c:	46bd      	mov	sp, r7
 801098e:	bd90      	pop	{r4, r7, pc}
 8010990:	240027dc 	.word	0x240027dc
 8010994:	24000018 	.word	0x24000018
 8010998:	240027e0 	.word	0x240027e0

0801099c <touchgfx_components_init>:

void touchgfx_components_init()
{
 801099c:	b480      	push	{r7}
 801099e:	af00      	add	r7, sp, #0
}
 80109a0:	bf00      	nop
 80109a2:	46bd      	mov	sp, r7
 80109a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109a8:	4770      	bx	lr
	...

080109ac <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 80109ac:	b580      	push	{r7, lr}
 80109ae:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 80109b0:	f7ff fb9e 	bl	80100f0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 80109b4:	4603      	mov	r3, r0
 80109b6:	2b00      	cmp	r3, #0
 80109b8:	d002      	beq.n	80109c0 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 80109ba:	4802      	ldr	r0, [pc, #8]	; (80109c4 <touchgfx_taskEntry+0x18>)
 80109bc:	f7ff f968 	bl	800fc90 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 80109c0:	bf00      	nop
 80109c2:	bd80      	pop	{r7, pc}
 80109c4:	240027e0 	.word	0x240027e0

080109c8 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 80109c8:	b580      	push	{r7, lr}
 80109ca:	b082      	sub	sp, #8
 80109cc:	af00      	add	r7, sp, #0
 80109ce:	6078      	str	r0, [r7, #4]
 80109d0:	4a10      	ldr	r2, [pc, #64]	; (8010a14 <_ZN12FrontendHeapD1Ev+0x4c>)
 80109d2:	687b      	ldr	r3, [r7, #4]
 80109d4:	601a      	str	r2, [r3, #0]
 80109d6:	687b      	ldr	r3, [r7, #4]
 80109d8:	f503 73ee 	add.w	r3, r3, #476	; 0x1dc
 80109dc:	4618      	mov	r0, r3
 80109de:	f7fe fdaf 	bl	800f540 <_ZN19FrontendApplicationD1Ev>
 80109e2:	687b      	ldr	r3, [r7, #4]
 80109e4:	f503 73e4 	add.w	r3, r3, #456	; 0x1c8
 80109e8:	4618      	mov	r0, r3
 80109ea:	f000 f827 	bl	8010a3c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80109ee:	687b      	ldr	r3, [r7, #4]
 80109f0:	332c      	adds	r3, #44	; 0x2c
 80109f2:	4618      	mov	r0, r3
 80109f4:	f000 f844 	bl	8010a80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80109f8:	687b      	ldr	r3, [r7, #4]
 80109fa:	3314      	adds	r3, #20
 80109fc:	4618      	mov	r0, r3
 80109fe:	f000 f863 	bl	8010ac8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010a02:	687b      	ldr	r3, [r7, #4]
 8010a04:	4618      	mov	r0, r3
 8010a06:	f7ff fea5 	bl	8010754 <_ZN16FrontendHeapBaseD1Ev>
 8010a0a:	687b      	ldr	r3, [r7, #4]
 8010a0c:	4618      	mov	r0, r3
 8010a0e:	3708      	adds	r7, #8
 8010a10:	46bd      	mov	sp, r7
 8010a12:	bd80      	pop	{r7, pc}
 8010a14:	080286a0 	.word	0x080286a0

08010a18 <_ZN12FrontendHeapD0Ev>:
 8010a18:	b580      	push	{r7, lr}
 8010a1a:	b082      	sub	sp, #8
 8010a1c:	af00      	add	r7, sp, #0
 8010a1e:	6078      	str	r0, [r7, #4]
 8010a20:	6878      	ldr	r0, [r7, #4]
 8010a22:	f7ff ffd1 	bl	80109c8 <_ZN12FrontendHeapD1Ev>
 8010a26:	f44f 714f 	mov.w	r1, #828	; 0x33c
 8010a2a:	6878      	ldr	r0, [r7, #4]
 8010a2c:	f015 f9eb 	bl	8025e06 <_ZdlPvj>
 8010a30:	687b      	ldr	r3, [r7, #4]
 8010a32:	4618      	mov	r0, r3
 8010a34:	3708      	adds	r7, #8
 8010a36:	46bd      	mov	sp, r7
 8010a38:	bd80      	pop	{r7, pc}
	...

08010a3c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010a3c:	b580      	push	{r7, lr}
 8010a3e:	b082      	sub	sp, #8
 8010a40:	af00      	add	r7, sp, #0
 8010a42:	6078      	str	r0, [r7, #4]
 8010a44:	4a05      	ldr	r2, [pc, #20]	; (8010a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010a46:	687b      	ldr	r3, [r7, #4]
 8010a48:	601a      	str	r2, [r3, #0]
 8010a4a:	687b      	ldr	r3, [r7, #4]
 8010a4c:	4618      	mov	r0, r3
 8010a4e:	f000 fe54 	bl	80116fa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010a52:	687b      	ldr	r3, [r7, #4]
 8010a54:	4618      	mov	r0, r3
 8010a56:	3708      	adds	r7, #8
 8010a58:	46bd      	mov	sp, r7
 8010a5a:	bd80      	pop	{r7, pc}
 8010a5c:	080286b4 	.word	0x080286b4

08010a60 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010a60:	b580      	push	{r7, lr}
 8010a62:	b082      	sub	sp, #8
 8010a64:	af00      	add	r7, sp, #0
 8010a66:	6078      	str	r0, [r7, #4]
 8010a68:	6878      	ldr	r0, [r7, #4]
 8010a6a:	f7ff ffe7 	bl	8010a3c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010a6e:	2114      	movs	r1, #20
 8010a70:	6878      	ldr	r0, [r7, #4]
 8010a72:	f015 f9c8 	bl	8025e06 <_ZdlPvj>
 8010a76:	687b      	ldr	r3, [r7, #4]
 8010a78:	4618      	mov	r0, r3
 8010a7a:	3708      	adds	r7, #8
 8010a7c:	46bd      	mov	sp, r7
 8010a7e:	bd80      	pop	{r7, pc}

08010a80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010a80:	b580      	push	{r7, lr}
 8010a82:	b082      	sub	sp, #8
 8010a84:	af00      	add	r7, sp, #0
 8010a86:	6078      	str	r0, [r7, #4]
 8010a88:	4a05      	ldr	r2, [pc, #20]	; (8010aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010a8a:	687b      	ldr	r3, [r7, #4]
 8010a8c:	601a      	str	r2, [r3, #0]
 8010a8e:	687b      	ldr	r3, [r7, #4]
 8010a90:	4618      	mov	r0, r3
 8010a92:	f000 fe32 	bl	80116fa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010a96:	687b      	ldr	r3, [r7, #4]
 8010a98:	4618      	mov	r0, r3
 8010a9a:	3708      	adds	r7, #8
 8010a9c:	46bd      	mov	sp, r7
 8010a9e:	bd80      	pop	{r7, pc}
 8010aa0:	080286e8 	.word	0x080286e8

08010aa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010aa4:	b580      	push	{r7, lr}
 8010aa6:	b082      	sub	sp, #8
 8010aa8:	af00      	add	r7, sp, #0
 8010aaa:	6078      	str	r0, [r7, #4]
 8010aac:	6878      	ldr	r0, [r7, #4]
 8010aae:	f7ff ffe7 	bl	8010a80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010ab2:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 8010ab6:	6878      	ldr	r0, [r7, #4]
 8010ab8:	f015 f9a5 	bl	8025e06 <_ZdlPvj>
 8010abc:	687b      	ldr	r3, [r7, #4]
 8010abe:	4618      	mov	r0, r3
 8010ac0:	3708      	adds	r7, #8
 8010ac2:	46bd      	mov	sp, r7
 8010ac4:	bd80      	pop	{r7, pc}
	...

08010ac8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010ac8:	b580      	push	{r7, lr}
 8010aca:	b082      	sub	sp, #8
 8010acc:	af00      	add	r7, sp, #0
 8010ace:	6078      	str	r0, [r7, #4]
 8010ad0:	4a05      	ldr	r2, [pc, #20]	; (8010ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010ad2:	687b      	ldr	r3, [r7, #4]
 8010ad4:	601a      	str	r2, [r3, #0]
 8010ad6:	687b      	ldr	r3, [r7, #4]
 8010ad8:	4618      	mov	r0, r3
 8010ada:	f000 fe0e 	bl	80116fa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010ade:	687b      	ldr	r3, [r7, #4]
 8010ae0:	4618      	mov	r0, r3
 8010ae2:	3708      	adds	r7, #8
 8010ae4:	46bd      	mov	sp, r7
 8010ae6:	bd80      	pop	{r7, pc}
 8010ae8:	0802871c 	.word	0x0802871c

08010aec <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010aec:	b580      	push	{r7, lr}
 8010aee:	b082      	sub	sp, #8
 8010af0:	af00      	add	r7, sp, #0
 8010af2:	6078      	str	r0, [r7, #4]
 8010af4:	6878      	ldr	r0, [r7, #4]
 8010af6:	f7ff ffe7 	bl	8010ac8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010afa:	2118      	movs	r1, #24
 8010afc:	6878      	ldr	r0, [r7, #4]
 8010afe:	f015 f982 	bl	8025e06 <_ZdlPvj>
 8010b02:	687b      	ldr	r3, [r7, #4]
 8010b04:	4618      	mov	r0, r3
 8010b06:	3708      	adds	r7, #8
 8010b08:	46bd      	mov	sp, r7
 8010b0a:	bd80      	pop	{r7, pc}

08010b0c <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8010b0c:	b580      	push	{r7, lr}
 8010b0e:	b082      	sub	sp, #8
 8010b10:	af00      	add	r7, sp, #0
 8010b12:	6078      	str	r0, [r7, #4]
 8010b14:	4a05      	ldr	r2, [pc, #20]	; (8010b2c <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8010b16:	687b      	ldr	r3, [r7, #4]
 8010b18:	601a      	str	r2, [r3, #0]
 8010b1a:	687b      	ldr	r3, [r7, #4]
 8010b1c:	4618      	mov	r0, r3
 8010b1e:	f7ff fca7 	bl	8010470 <_ZN8touchgfx3LCDD1Ev>
 8010b22:	687b      	ldr	r3, [r7, #4]
 8010b24:	4618      	mov	r0, r3
 8010b26:	3708      	adds	r7, #8
 8010b28:	46bd      	mov	sp, r7
 8010b2a:	bd80      	pop	{r7, pc}
 8010b2c:	08029274 	.word	0x08029274

08010b30 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010b30:	b580      	push	{r7, lr}
 8010b32:	b082      	sub	sp, #8
 8010b34:	af00      	add	r7, sp, #0
 8010b36:	6078      	str	r0, [r7, #4]
 8010b38:	6878      	ldr	r0, [r7, #4]
 8010b3a:	f7ff ffe7 	bl	8010b0c <_ZN8touchgfx8LCD16bppD1Ev>
 8010b3e:	2184      	movs	r1, #132	; 0x84
 8010b40:	6878      	ldr	r0, [r7, #4]
 8010b42:	f015 f960 	bl	8025e06 <_ZdlPvj>
 8010b46:	687b      	ldr	r3, [r7, #4]
 8010b48:	4618      	mov	r0, r3
 8010b4a:	3708      	adds	r7, #8
 8010b4c:	46bd      	mov	sp, r7
 8010b4e:	bd80      	pop	{r7, pc}

08010b50 <_Z41__static_initialization_and_destruction_0ii>:
 8010b50:	b580      	push	{r7, lr}
 8010b52:	b084      	sub	sp, #16
 8010b54:	af02      	add	r7, sp, #8
 8010b56:	6078      	str	r0, [r7, #4]
 8010b58:	6039      	str	r1, [r7, #0]
 8010b5a:	687b      	ldr	r3, [r7, #4]
 8010b5c:	2b01      	cmp	r3, #1
 8010b5e:	d119      	bne.n	8010b94 <_Z41__static_initialization_and_destruction_0ii+0x44>
 8010b60:	683b      	ldr	r3, [r7, #0]
 8010b62:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010b66:	4293      	cmp	r3, r2
 8010b68:	d114      	bne.n	8010b94 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 8010b6a:	4818      	ldr	r0, [pc, #96]	; (8010bcc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010b6c:	f7ff feda 	bl	8010924 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 8010b70:	4817      	ldr	r0, [pc, #92]	; (8010bd0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010b72:	f7ff fb8f 	bl	8010294 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8010b76:	4817      	ldr	r0, [pc, #92]	; (8010bd4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010b78:	f00b ffbc 	bl	801caf4 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 8010b7c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8010b80:	9301      	str	r3, [sp, #4]
 8010b82:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8010b86:	9300      	str	r3, [sp, #0]
 8010b88:	4b10      	ldr	r3, [pc, #64]	; (8010bcc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010b8a:	4a12      	ldr	r2, [pc, #72]	; (8010bd4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010b8c:	4910      	ldr	r1, [pc, #64]	; (8010bd0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010b8e:	4812      	ldr	r0, [pc, #72]	; (8010bd8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8010b90:	f7ff fe9c 	bl	80108cc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010b94:	687b      	ldr	r3, [r7, #4]
 8010b96:	2b00      	cmp	r3, #0
 8010b98:	d113      	bne.n	8010bc2 <_Z41__static_initialization_and_destruction_0ii+0x72>
 8010b9a:	683b      	ldr	r3, [r7, #0]
 8010b9c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010ba0:	4293      	cmp	r3, r2
 8010ba2:	d10e      	bne.n	8010bc2 <_Z41__static_initialization_and_destruction_0ii+0x72>
 8010ba4:	480c      	ldr	r0, [pc, #48]	; (8010bd8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8010ba6:	f7ff fa1d 	bl	800ffe4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8010baa:	480c      	ldr	r0, [pc, #48]	; (8010bdc <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 8010bac:	f7fc f98e 	bl	800cecc <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8010bb0:	4808      	ldr	r0, [pc, #32]	; (8010bd4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010bb2:	f7ff ffab 	bl	8010b0c <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 8010bb6:	4806      	ldr	r0, [pc, #24]	; (8010bd0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010bb8:	f7ff fbc0 	bl	801033c <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8010bbc:	4803      	ldr	r0, [pc, #12]	; (8010bcc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010bbe:	f7fe ff6d 	bl	800fa9c <_ZN20STM32TouchControllerD1Ev>
}
 8010bc2:	bf00      	nop
 8010bc4:	3708      	adds	r7, #8
 8010bc6:	46bd      	mov	sp, r7
 8010bc8:	bd80      	pop	{r7, pc}
 8010bca:	bf00      	nop
 8010bcc:	24002710 	.word	0x24002710
 8010bd0:	24002714 	.word	0x24002714
 8010bd4:	24002758 	.word	0x24002758
 8010bd8:	240027e0 	.word	0x240027e0
 8010bdc:	24000018 	.word	0x24000018

08010be0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8010be0:	b480      	push	{r7}
 8010be2:	b083      	sub	sp, #12
 8010be4:	af00      	add	r7, sp, #0
 8010be6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8010be8:	2301      	movs	r3, #1
    }
 8010bea:	4618      	mov	r0, r3
 8010bec:	370c      	adds	r7, #12
 8010bee:	46bd      	mov	sp, r7
 8010bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bf4:	4770      	bx	lr

08010bf6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 8010bf6:	b480      	push	{r7}
 8010bf8:	b083      	sub	sp, #12
 8010bfa:	af00      	add	r7, sp, #0
 8010bfc:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8010bfe:	230c      	movs	r3, #12
    }
 8010c00:	4618      	mov	r0, r3
 8010c02:	370c      	adds	r7, #12
 8010c04:	46bd      	mov	sp, r7
 8010c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c0a:	4770      	bx	lr

08010c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8010c0c:	b480      	push	{r7}
 8010c0e:	b083      	sub	sp, #12
 8010c10:	af00      	add	r7, sp, #0
 8010c12:	6078      	str	r0, [r7, #4]
 8010c14:	460b      	mov	r3, r1
 8010c16:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010c18:	887a      	ldrh	r2, [r7, #2]
 8010c1a:	4613      	mov	r3, r2
 8010c1c:	005b      	lsls	r3, r3, #1
 8010c1e:	4413      	add	r3, r2
 8010c20:	009b      	lsls	r3, r3, #2
 8010c22:	3308      	adds	r3, #8
 8010c24:	687a      	ldr	r2, [r7, #4]
 8010c26:	4413      	add	r3, r2
    }
 8010c28:	4618      	mov	r0, r3
 8010c2a:	370c      	adds	r7, #12
 8010c2c:	46bd      	mov	sp, r7
 8010c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c32:	4770      	bx	lr

08010c34 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8010c34:	b480      	push	{r7}
 8010c36:	b083      	sub	sp, #12
 8010c38:	af00      	add	r7, sp, #0
 8010c3a:	6078      	str	r0, [r7, #4]
 8010c3c:	460b      	mov	r3, r1
 8010c3e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010c40:	887a      	ldrh	r2, [r7, #2]
 8010c42:	4613      	mov	r3, r2
 8010c44:	005b      	lsls	r3, r3, #1
 8010c46:	4413      	add	r3, r2
 8010c48:	009b      	lsls	r3, r3, #2
 8010c4a:	3308      	adds	r3, #8
 8010c4c:	687a      	ldr	r2, [r7, #4]
 8010c4e:	4413      	add	r3, r2
    }
 8010c50:	4618      	mov	r0, r3
 8010c52:	370c      	adds	r7, #12
 8010c54:	46bd      	mov	sp, r7
 8010c56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c5a:	4770      	bx	lr

08010c5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010c5c:	b480      	push	{r7}
 8010c5e:	b083      	sub	sp, #12
 8010c60:	af00      	add	r7, sp, #0
 8010c62:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010c64:	2301      	movs	r3, #1
    }
 8010c66:	4618      	mov	r0, r3
 8010c68:	370c      	adds	r7, #12
 8010c6a:	46bd      	mov	sp, r7
 8010c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c70:	4770      	bx	lr

08010c72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010c72:	b480      	push	{r7}
 8010c74:	b083      	sub	sp, #12
 8010c76:	af00      	add	r7, sp, #0
 8010c78:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010c7a:	f44f 73ca 	mov.w	r3, #404	; 0x194
    }
 8010c7e:	4618      	mov	r0, r3
 8010c80:	370c      	adds	r7, #12
 8010c82:	46bd      	mov	sp, r7
 8010c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c88:	4770      	bx	lr

08010c8a <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010c8a:	b480      	push	{r7}
 8010c8c:	b083      	sub	sp, #12
 8010c8e:	af00      	add	r7, sp, #0
 8010c90:	6078      	str	r0, [r7, #4]
 8010c92:	460b      	mov	r3, r1
 8010c94:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010c96:	887b      	ldrh	r3, [r7, #2]
 8010c98:	f44f 72ca 	mov.w	r2, #404	; 0x194
 8010c9c:	fb02 f303 	mul.w	r3, r2, r3
 8010ca0:	3308      	adds	r3, #8
 8010ca2:	687a      	ldr	r2, [r7, #4]
 8010ca4:	4413      	add	r3, r2
    }
 8010ca6:	4618      	mov	r0, r3
 8010ca8:	370c      	adds	r7, #12
 8010caa:	46bd      	mov	sp, r7
 8010cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cb0:	4770      	bx	lr

08010cb2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010cb2:	b480      	push	{r7}
 8010cb4:	b083      	sub	sp, #12
 8010cb6:	af00      	add	r7, sp, #0
 8010cb8:	6078      	str	r0, [r7, #4]
 8010cba:	460b      	mov	r3, r1
 8010cbc:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010cbe:	887b      	ldrh	r3, [r7, #2]
 8010cc0:	f44f 72ca 	mov.w	r2, #404	; 0x194
 8010cc4:	fb02 f303 	mul.w	r3, r2, r3
 8010cc8:	3308      	adds	r3, #8
 8010cca:	687a      	ldr	r2, [r7, #4]
 8010ccc:	4413      	add	r3, r2
    }
 8010cce:	4618      	mov	r0, r3
 8010cd0:	370c      	adds	r7, #12
 8010cd2:	46bd      	mov	sp, r7
 8010cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cd8:	4770      	bx	lr

08010cda <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010cda:	b480      	push	{r7}
 8010cdc:	b083      	sub	sp, #12
 8010cde:	af00      	add	r7, sp, #0
 8010ce0:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010ce2:	2301      	movs	r3, #1
    }
 8010ce4:	4618      	mov	r0, r3
 8010ce6:	370c      	adds	r7, #12
 8010ce8:	46bd      	mov	sp, r7
 8010cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cee:	4770      	bx	lr

08010cf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010cf0:	b480      	push	{r7}
 8010cf2:	b083      	sub	sp, #12
 8010cf4:	af00      	add	r7, sp, #0
 8010cf6:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010cf8:	2310      	movs	r3, #16
    }
 8010cfa:	4618      	mov	r0, r3
 8010cfc:	370c      	adds	r7, #12
 8010cfe:	46bd      	mov	sp, r7
 8010d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d04:	4770      	bx	lr

08010d06 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010d06:	b480      	push	{r7}
 8010d08:	b083      	sub	sp, #12
 8010d0a:	af00      	add	r7, sp, #0
 8010d0c:	6078      	str	r0, [r7, #4]
 8010d0e:	460b      	mov	r3, r1
 8010d10:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010d12:	887b      	ldrh	r3, [r7, #2]
 8010d14:	011b      	lsls	r3, r3, #4
 8010d16:	3308      	adds	r3, #8
 8010d18:	687a      	ldr	r2, [r7, #4]
 8010d1a:	4413      	add	r3, r2
    }
 8010d1c:	4618      	mov	r0, r3
 8010d1e:	370c      	adds	r7, #12
 8010d20:	46bd      	mov	sp, r7
 8010d22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d26:	4770      	bx	lr

08010d28 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010d28:	b480      	push	{r7}
 8010d2a:	b083      	sub	sp, #12
 8010d2c:	af00      	add	r7, sp, #0
 8010d2e:	6078      	str	r0, [r7, #4]
 8010d30:	460b      	mov	r3, r1
 8010d32:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010d34:	887b      	ldrh	r3, [r7, #2]
 8010d36:	011b      	lsls	r3, r3, #4
 8010d38:	3308      	adds	r3, #8
 8010d3a:	687a      	ldr	r2, [r7, #4]
 8010d3c:	4413      	add	r3, r2
    }
 8010d3e:	4618      	mov	r0, r3
 8010d40:	370c      	adds	r7, #12
 8010d42:	46bd      	mov	sp, r7
 8010d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d48:	4770      	bx	lr

08010d4a <_GLOBAL__sub_I_touchgfx_init>:
 8010d4a:	b580      	push	{r7, lr}
 8010d4c:	af00      	add	r7, sp, #0
 8010d4e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010d52:	2001      	movs	r0, #1
 8010d54:	f7ff fefc 	bl	8010b50 <_Z41__static_initialization_and_destruction_0ii>
 8010d58:	bd80      	pop	{r7, pc}

08010d5a <_GLOBAL__sub_D_touchgfx_init>:
 8010d5a:	b580      	push	{r7, lr}
 8010d5c:	af00      	add	r7, sp, #0
 8010d5e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010d62:	2000      	movs	r0, #0
 8010d64:	f7ff fef4 	bl	8010b50 <_Z41__static_initialization_and_destruction_0ii>
 8010d68:	bd80      	pop	{r7, pc}
	...

08010d6c <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 8010d6c:	b480      	push	{r7}
 8010d6e:	b083      	sub	sp, #12
 8010d70:	af00      	add	r7, sp, #0
 8010d72:	6078      	str	r0, [r7, #4]
    {
 8010d74:	4a04      	ldr	r2, [pc, #16]	; (8010d88 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 8010d76:	687b      	ldr	r3, [r7, #4]
 8010d78:	601a      	str	r2, [r3, #0]
    }
 8010d7a:	687b      	ldr	r3, [r7, #4]
 8010d7c:	4618      	mov	r0, r3
 8010d7e:	370c      	adds	r7, #12
 8010d80:	46bd      	mov	sp, r7
 8010d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d86:	4770      	bx	lr
 8010d88:	08028878 	.word	0x08028878

08010d8c <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 8010d8c:	b580      	push	{r7, lr}
 8010d8e:	b082      	sub	sp, #8
 8010d90:	af00      	add	r7, sp, #0
 8010d92:	6078      	str	r0, [r7, #4]
    }
 8010d94:	6878      	ldr	r0, [r7, #4]
 8010d96:	f7ff ffe9 	bl	8010d6c <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8010d9a:	2104      	movs	r1, #4
 8010d9c:	6878      	ldr	r0, [r7, #4]
 8010d9e:	f015 f832 	bl	8025e06 <_ZdlPvj>
 8010da2:	687b      	ldr	r3, [r7, #4]
 8010da4:	4618      	mov	r0, r3
 8010da6:	3708      	adds	r7, #8
 8010da8:	46bd      	mov	sp, r7
 8010daa:	bd80      	pop	{r7, pc}

08010dac <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8010dac:	b480      	push	{r7}
 8010dae:	b083      	sub	sp, #12
 8010db0:	af00      	add	r7, sp, #0
 8010db2:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8010db4:	687b      	ldr	r3, [r7, #4]
 8010db6:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8010dba:	3301      	adds	r3, #1
 8010dbc:	b2da      	uxtb	r2, r3
 8010dbe:	687b      	ldr	r3, [r7, #4]
 8010dc0:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 8010dc4:	bf00      	nop
 8010dc6:	370c      	adds	r7, #12
 8010dc8:	46bd      	mov	sp, r7
 8010dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dce:	4770      	bx	lr

08010dd0 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 8010dd0:	b480      	push	{r7}
 8010dd2:	b083      	sub	sp, #12
 8010dd4:	af00      	add	r7, sp, #0
 8010dd6:	6078      	str	r0, [r7, #4]
 8010dd8:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 8010dda:	687b      	ldr	r3, [r7, #4]
 8010ddc:	683a      	ldr	r2, [r7, #0]
 8010dde:	619a      	str	r2, [r3, #24]
    }
 8010de0:	bf00      	nop
 8010de2:	370c      	adds	r7, #12
 8010de4:	46bd      	mov	sp, r7
 8010de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dea:	4770      	bx	lr

08010dec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 8010dec:	b580      	push	{r7, lr}
 8010dee:	b082      	sub	sp, #8
 8010df0:	af00      	add	r7, sp, #0
 8010df2:	6078      	str	r0, [r7, #4]
 8010df4:	460b      	mov	r3, r1
 8010df6:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 8010df8:	78fb      	ldrb	r3, [r7, #3]
 8010dfa:	2b00      	cmp	r3, #0
 8010dfc:	d002      	beq.n	8010e04 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 8010dfe:	78fb      	ldrb	r3, [r7, #3]
 8010e00:	2b02      	cmp	r3, #2
 8010e02:	d105      	bne.n	8010e10 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 8010e04:	687b      	ldr	r3, [r7, #4]
 8010e06:	78fa      	ldrb	r2, [r7, #3]
 8010e08:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 8010e0c:	2301      	movs	r3, #1
 8010e0e:	e027      	b.n	8010e60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 8010e10:	78fb      	ldrb	r3, [r7, #3]
 8010e12:	2b01      	cmp	r3, #1
 8010e14:	d123      	bne.n	8010e5e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 8010e16:	687b      	ldr	r3, [r7, #4]
 8010e18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e1a:	2b00      	cmp	r3, #0
 8010e1c:	d014      	beq.n	8010e48 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8010e1e:	687b      	ldr	r3, [r7, #4]
 8010e20:	681b      	ldr	r3, [r3, #0]
 8010e22:	339c      	adds	r3, #156	; 0x9c
 8010e24:	681b      	ldr	r3, [r3, #0]
 8010e26:	6878      	ldr	r0, [r7, #4]
 8010e28:	4798      	blx	r3
 8010e2a:	4603      	mov	r3, r0
 8010e2c:	461a      	mov	r2, r3
 8010e2e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010e32:	429a      	cmp	r2, r3
 8010e34:	d008      	beq.n	8010e48 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8010e36:	4b0c      	ldr	r3, [pc, #48]	; (8010e68 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 8010e38:	781b      	ldrb	r3, [r3, #0]
 8010e3a:	f083 0301 	eor.w	r3, r3, #1
 8010e3e:	b2db      	uxtb	r3, r3
 8010e40:	2b00      	cmp	r3, #0
 8010e42:	d001      	beq.n	8010e48 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8010e44:	2301      	movs	r3, #1
 8010e46:	e000      	b.n	8010e4a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 8010e48:	2300      	movs	r3, #0
 8010e4a:	2b00      	cmp	r3, #0
 8010e4c:	d005      	beq.n	8010e5a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 8010e4e:	687b      	ldr	r3, [r7, #4]
 8010e50:	78fa      	ldrb	r2, [r7, #3]
 8010e52:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 8010e56:	2301      	movs	r3, #1
 8010e58:	e002      	b.n	8010e60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 8010e5a:	2300      	movs	r3, #0
 8010e5c:	e000      	b.n	8010e60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 8010e5e:	2300      	movs	r3, #0
    }
 8010e60:	4618      	mov	r0, r3
 8010e62:	3708      	adds	r7, #8
 8010e64:	46bd      	mov	sp, r7
 8010e66:	bd80      	pop	{r7, pc}
 8010e68:	24004a4e 	.word	0x24004a4e

08010e6c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 8010e6c:	b5b0      	push	{r4, r5, r7, lr}
 8010e6e:	b082      	sub	sp, #8
 8010e70:	af00      	add	r7, sp, #0
 8010e72:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8010e74:	687b      	ldr	r3, [r7, #4]
 8010e76:	4618      	mov	r0, r3
 8010e78:	f000 ffff 	bl	8011e7a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8010e7c:	687d      	ldr	r5, [r7, #4]
 8010e7e:	687b      	ldr	r3, [r7, #4]
 8010e80:	681b      	ldr	r3, [r3, #0]
 8010e82:	3364      	adds	r3, #100	; 0x64
 8010e84:	681c      	ldr	r4, [r3, #0]
 8010e86:	f004 faff 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 8010e8a:	4603      	mov	r3, r0
 8010e8c:	4619      	mov	r1, r3
 8010e8e:	4628      	mov	r0, r5
 8010e90:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 8010e92:	687b      	ldr	r3, [r7, #4]
 8010e94:	681b      	ldr	r3, [r3, #0]
 8010e96:	3380      	adds	r3, #128	; 0x80
 8010e98:	681b      	ldr	r3, [r3, #0]
 8010e9a:	6878      	ldr	r0, [r7, #4]
 8010e9c:	4798      	blx	r3
    enableInterrupts();
 8010e9e:	687b      	ldr	r3, [r7, #4]
 8010ea0:	681b      	ldr	r3, [r3, #0]
 8010ea2:	3378      	adds	r3, #120	; 0x78
 8010ea4:	681b      	ldr	r3, [r3, #0]
 8010ea6:	6878      	ldr	r0, [r7, #4]
 8010ea8:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 8010eaa:	687b      	ldr	r3, [r7, #4]
 8010eac:	4906      	ldr	r1, [pc, #24]	; (8010ec8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 8010eae:	4618      	mov	r0, r3
 8010eb0:	f7ff ff8e 	bl	8010dd0 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 8010eb4:	687b      	ldr	r3, [r7, #4]
 8010eb6:	2102      	movs	r1, #2
 8010eb8:	4618      	mov	r0, r3
 8010eba:	f7ff ff97 	bl	8010dec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 8010ebe:	bf00      	nop
 8010ec0:	3708      	adds	r7, #8
 8010ec2:	46bd      	mov	sp, r7
 8010ec4:	bdb0      	pop	{r4, r5, r7, pc}
 8010ec6:	bf00      	nop
 8010ec8:	2400285c 	.word	0x2400285c

08010ecc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8010ecc:	b480      	push	{r7}
 8010ece:	b083      	sub	sp, #12
 8010ed0:	af00      	add	r7, sp, #0
 8010ed2:	6078      	str	r0, [r7, #4]
}
 8010ed4:	bf00      	nop
 8010ed6:	370c      	adds	r7, #12
 8010ed8:	46bd      	mov	sp, r7
 8010eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ede:	4770      	bx	lr

08010ee0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8010ee0:	b480      	push	{r7}
 8010ee2:	b083      	sub	sp, #12
 8010ee4:	af00      	add	r7, sp, #0
 8010ee6:	6078      	str	r0, [r7, #4]
}
 8010ee8:	bf00      	nop
 8010eea:	370c      	adds	r7, #12
 8010eec:	46bd      	mov	sp, r7
 8010eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ef2:	4770      	bx	lr

08010ef4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8010ef4:	b480      	push	{r7}
 8010ef6:	b083      	sub	sp, #12
 8010ef8:	af00      	add	r7, sp, #0
 8010efa:	6078      	str	r0, [r7, #4]
}
 8010efc:	bf00      	nop
 8010efe:	370c      	adds	r7, #12
 8010f00:	46bd      	mov	sp, r7
 8010f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f06:	4770      	bx	lr

08010f08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8010f08:	b480      	push	{r7}
 8010f0a:	b083      	sub	sp, #12
 8010f0c:	af00      	add	r7, sp, #0
 8010f0e:	6078      	str	r0, [r7, #4]
}
 8010f10:	bf00      	nop
 8010f12:	370c      	adds	r7, #12
 8010f14:	46bd      	mov	sp, r7
 8010f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f1a:	4770      	bx	lr

08010f1c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8010f1c:	b580      	push	{r7, lr}
 8010f1e:	b082      	sub	sp, #8
 8010f20:	af00      	add	r7, sp, #0
 8010f22:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 8010f24:	687b      	ldr	r3, [r7, #4]
 8010f26:	4618      	mov	r0, r3
 8010f28:	f000 ff8e 	bl	8011e48 <_ZN8touchgfx3HAL10beginFrameEv>
 8010f2c:	4603      	mov	r3, r0
}
 8010f2e:	4618      	mov	r0, r3
 8010f30:	3708      	adds	r7, #8
 8010f32:	46bd      	mov	sp, r7
 8010f34:	bd80      	pop	{r7, pc}

08010f36 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 8010f36:	b580      	push	{r7, lr}
 8010f38:	b082      	sub	sp, #8
 8010f3a:	af00      	add	r7, sp, #0
 8010f3c:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    PartialFrameBufferManager::transmitRemainingBlocks();
 8010f3e:	f000 fe73 	bl	8011c28 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv>
    HAL::endFrame();
 8010f42:	687b      	ldr	r3, [r7, #4]
 8010f44:	4618      	mov	r0, r3
 8010f46:	f000 ff8b 	bl	8011e60 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8010f4a:	f7ff f8c5 	bl	80100d8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8010f4e:	bf00      	nop
 8010f50:	3708      	adds	r7, #8
 8010f52:	46bd      	mov	sp, r7
 8010f54:	bd80      	pop	{r7, pc}

08010f56 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8010f56:	b480      	push	{r7}
 8010f58:	b083      	sub	sp, #12
 8010f5a:	af00      	add	r7, sp, #0
 8010f5c:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 8010f5e:	2300      	movs	r3, #0
}
 8010f60:	4618      	mov	r0, r3
 8010f62:	370c      	adds	r7, #12
 8010f64:	46bd      	mov	sp, r7
 8010f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f6a:	4770      	bx	lr

08010f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8010f6c:	b480      	push	{r7}
 8010f6e:	b083      	sub	sp, #12
 8010f70:	af00      	add	r7, sp, #0
 8010f72:	6078      	str	r0, [r7, #4]
 8010f74:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 8010f76:	bf00      	nop
 8010f78:	370c      	adds	r7, #12
 8010f7a:	46bd      	mov	sp, r7
 8010f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f80:	4770      	bx	lr

08010f82 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8010f82:	b580      	push	{r7, lr}
 8010f84:	b082      	sub	sp, #8
 8010f86:	af00      	add	r7, sp, #0
 8010f88:	6078      	str	r0, [r7, #4]
 8010f8a:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 8010f8c:	687b      	ldr	r3, [r7, #4]
 8010f8e:	6839      	ldr	r1, [r7, #0]
 8010f90:	4618      	mov	r0, r3
 8010f92:	f000 ff22 	bl	8011dda <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Try transmitting a block
    PartialFrameBufferManager::tryTransmitBlock();
 8010f96:	f000 fe8f 	bl	8011cb8 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv>
}
 8010f9a:	bf00      	nop
 8010f9c:	3708      	adds	r7, #8
 8010f9e:	46bd      	mov	sp, r7
 8010fa0:	bd80      	pop	{r7, pc}

08010fa2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8010fa2:	b580      	push	{r7, lr}
 8010fa4:	b084      	sub	sp, #16
 8010fa6:	af00      	add	r7, sp, #0
 8010fa8:	60f8      	str	r0, [r7, #12]
 8010faa:	60b9      	str	r1, [r7, #8]
 8010fac:	607a      	str	r2, [r7, #4]
 8010fae:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8010fb0:	68f8      	ldr	r0, [r7, #12]
 8010fb2:	683b      	ldr	r3, [r7, #0]
 8010fb4:	687a      	ldr	r2, [r7, #4]
 8010fb6:	68b9      	ldr	r1, [r7, #8]
 8010fb8:	f001 f881 	bl	80120be <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8010fbc:	4603      	mov	r3, r0
}
 8010fbe:	4618      	mov	r0, r3
 8010fc0:	3710      	adds	r7, #16
 8010fc2:	46bd      	mov	sp, r7
 8010fc4:	bd80      	pop	{r7, pc}
	...

08010fc8 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 8010fc8:	b480      	push	{r7}
 8010fca:	b087      	sub	sp, #28
 8010fcc:	af00      	add	r7, sp, #0
 8010fce:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8010fd0:	4b25      	ldr	r3, [pc, #148]	; (8011068 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 8010fd2:	695b      	ldr	r3, [r3, #20]
 8010fd4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8010fd8:	2b00      	cmp	r3, #0
 8010fda:	bf14      	ite	ne
 8010fdc:	2301      	movne	r3, #1
 8010fde:	2300      	moveq	r3, #0
 8010fe0:	b2db      	uxtb	r3, r3
 8010fe2:	2b00      	cmp	r3, #0
 8010fe4:	d03a      	beq.n	801105c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8010fe6:	4b20      	ldr	r3, [pc, #128]	; (8011068 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 8010fe8:	2200      	movs	r2, #0
 8010fea:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8010fee:	f3bf 8f4f 	dsb	sy
}
 8010ff2:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 8010ff4:	4b1c      	ldr	r3, [pc, #112]	; (8011068 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 8010ff6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010ffa:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8010ffc:	697b      	ldr	r3, [r7, #20]
 8010ffe:	0b5b      	lsrs	r3, r3, #13
 8011000:	f3c3 030e 	ubfx	r3, r3, #0, #15
 8011004:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8011006:	697b      	ldr	r3, [r7, #20]
 8011008:	08db      	lsrs	r3, r3, #3
 801100a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 801100e:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8011010:	693b      	ldr	r3, [r7, #16]
 8011012:	015a      	lsls	r2, r3, #5
 8011014:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 8011018:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 801101a:	68fa      	ldr	r2, [r7, #12]
 801101c:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 801101e:	4912      	ldr	r1, [pc, #72]	; (8011068 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 8011020:	4313      	orrs	r3, r2
 8011022:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8011026:	68fb      	ldr	r3, [r7, #12]
 8011028:	1e5a      	subs	r2, r3, #1
 801102a:	60fa      	str	r2, [r7, #12]
 801102c:	2b00      	cmp	r3, #0
 801102e:	bf14      	ite	ne
 8011030:	2301      	movne	r3, #1
 8011032:	2300      	moveq	r3, #0
 8011034:	b2db      	uxtb	r3, r3
 8011036:	2b00      	cmp	r3, #0
 8011038:	d1ea      	bne.n	8011010 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 801103a:	693b      	ldr	r3, [r7, #16]
 801103c:	1e5a      	subs	r2, r3, #1
 801103e:	613a      	str	r2, [r7, #16]
 8011040:	2b00      	cmp	r3, #0
 8011042:	bf14      	ite	ne
 8011044:	2301      	movne	r3, #1
 8011046:	2300      	moveq	r3, #0
 8011048:	b2db      	uxtb	r3, r3
 801104a:	2b00      	cmp	r3, #0
 801104c:	d1db      	bne.n	8011006 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 801104e:	f3bf 8f4f 	dsb	sy
}
 8011052:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8011054:	f3bf 8f6f 	isb	sy
}
 8011058:	bf00      	nop
}
 801105a:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 801105c:	bf00      	nop
 801105e:	371c      	adds	r7, #28
 8011060:	46bd      	mov	sp, r7
 8011062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011066:	4770      	bx	lr
 8011068:	e000ed00 	.word	0xe000ed00

0801106c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 801106c:	b480      	push	{r7}
 801106e:	b087      	sub	sp, #28
 8011070:	af00      	add	r7, sp, #0
 8011072:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8011074:	4b25      	ldr	r3, [pc, #148]	; (801110c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 8011076:	695b      	ldr	r3, [r3, #20]
 8011078:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801107c:	2b00      	cmp	r3, #0
 801107e:	bf14      	ite	ne
 8011080:	2301      	movne	r3, #1
 8011082:	2300      	moveq	r3, #0
 8011084:	b2db      	uxtb	r3, r3
 8011086:	2b00      	cmp	r3, #0
 8011088:	d03a      	beq.n	8011100 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 801108a:	4b20      	ldr	r3, [pc, #128]	; (801110c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 801108c:	2200      	movs	r2, #0
 801108e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8011092:	f3bf 8f4f 	dsb	sy
}
 8011096:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 8011098:	4b1c      	ldr	r3, [pc, #112]	; (801110c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 801109a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801109e:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80110a0:	697b      	ldr	r3, [r7, #20]
 80110a2:	0b5b      	lsrs	r3, r3, #13
 80110a4:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80110a8:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80110aa:	697b      	ldr	r3, [r7, #20]
 80110ac:	08db      	lsrs	r3, r3, #3
 80110ae:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80110b2:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80110b4:	693b      	ldr	r3, [r7, #16]
 80110b6:	015a      	lsls	r2, r3, #5
 80110b8:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 80110bc:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 80110be:	68fa      	ldr	r2, [r7, #12]
 80110c0:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80110c2:	4912      	ldr	r1, [pc, #72]	; (801110c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 80110c4:	4313      	orrs	r3, r2
 80110c6:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 80110ca:	68fb      	ldr	r3, [r7, #12]
 80110cc:	1e5a      	subs	r2, r3, #1
 80110ce:	60fa      	str	r2, [r7, #12]
 80110d0:	2b00      	cmp	r3, #0
 80110d2:	bf14      	ite	ne
 80110d4:	2301      	movne	r3, #1
 80110d6:	2300      	moveq	r3, #0
 80110d8:	b2db      	uxtb	r3, r3
 80110da:	2b00      	cmp	r3, #0
 80110dc:	d1ea      	bne.n	80110b4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 80110de:	693b      	ldr	r3, [r7, #16]
 80110e0:	1e5a      	subs	r2, r3, #1
 80110e2:	613a      	str	r2, [r7, #16]
 80110e4:	2b00      	cmp	r3, #0
 80110e6:	bf14      	ite	ne
 80110e8:	2301      	movne	r3, #1
 80110ea:	2300      	moveq	r3, #0
 80110ec:	b2db      	uxtb	r3, r3
 80110ee:	2b00      	cmp	r3, #0
 80110f0:	d1db      	bne.n	80110aa <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 80110f2:	f3bf 8f4f 	dsb	sy
}
 80110f6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80110f8:	f3bf 8f6f 	isb	sy
}
 80110fc:	bf00      	nop
}
 80110fe:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 8011100:	bf00      	nop
 8011102:	371c      	adds	r7, #28
 8011104:	46bd      	mov	sp, r7
 8011106:	f85d 7b04 	ldr.w	r7, [sp], #4
 801110a:	4770      	bx	lr
 801110c:	e000ed00 	.word	0xe000ed00

08011110 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 8011110:	b480      	push	{r7}
 8011112:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 8011114:	bf00      	nop
 8011116:	46bd      	mov	sp, r7
 8011118:	f85d 7b04 	ldr.w	r7, [sp], #4
 801111c:	4770      	bx	lr

0801111e <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 801111e:	b480      	push	{r7}
 8011120:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 8011122:	bf00      	nop
 8011124:	46bd      	mov	sp, r7
 8011126:	f85d 7b04 	ldr.w	r7, [sp], #4
 801112a:	4770      	bx	lr

0801112c <_ZN8touchgfx14transmitActiveEv>:

/**
 * Check if a Frame Buffer Block is beeing transmitted.
 */
int transmitActive()
{
 801112c:	b580      	push	{r7, lr}
 801112e:	af00      	add	r7, sp, #0
    return touchgfxDisplayDriverTransmitActive();
 8011130:	f7f0 ffc2 	bl	80020b8 <touchgfxDisplayDriverTransmitActive>
 8011134:	4603      	mov	r3, r0
}
 8011136:	4618      	mov	r0, r3
 8011138:	bd80      	pop	{r7, pc}

0801113a <_ZN8touchgfx19shouldTransferBlockEt>:

/**
 * Check if a Frame Buffer Block ending at bottom should be transferred.
 */
int shouldTransferBlock(uint16_t bottom)
{
 801113a:	b480      	push	{r7}
 801113c:	b083      	sub	sp, #12
 801113e:	af00      	add	r7, sp, #0
 8011140:	4603      	mov	r3, r0
 8011142:	80fb      	strh	r3, [r7, #6]
    //return touchgfxDisplayDriverShouldTransferBlock(bottom);
}
 8011144:	bf00      	nop
 8011146:	4618      	mov	r0, r3
 8011148:	370c      	adds	r7, #12
 801114a:	46bd      	mov	sp, r7
 801114c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011150:	4770      	bx	lr

08011152 <_ZN8touchgfx13transmitBlockEPKhtttt>:

/**
 * Transmit a Frame Buffer Block.
 */
void transmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 8011152:	b580      	push	{r7, lr}
 8011154:	b086      	sub	sp, #24
 8011156:	af02      	add	r7, sp, #8
 8011158:	60f8      	str	r0, [r7, #12]
 801115a:	4608      	mov	r0, r1
 801115c:	4611      	mov	r1, r2
 801115e:	461a      	mov	r2, r3
 8011160:	4603      	mov	r3, r0
 8011162:	817b      	strh	r3, [r7, #10]
 8011164:	460b      	mov	r3, r1
 8011166:	813b      	strh	r3, [r7, #8]
 8011168:	4613      	mov	r3, r2
 801116a:	80fb      	strh	r3, [r7, #6]
    touchgfxDisplayDriverTransmitBlock(pixels, x, y, w, h);
 801116c:	88f8      	ldrh	r0, [r7, #6]
 801116e:	893a      	ldrh	r2, [r7, #8]
 8011170:	8979      	ldrh	r1, [r7, #10]
 8011172:	8b3b      	ldrh	r3, [r7, #24]
 8011174:	9300      	str	r3, [sp, #0]
 8011176:	4603      	mov	r3, r0
 8011178:	68f8      	ldr	r0, [r7, #12]
 801117a:	f7f0 ffaf 	bl	80020dc <touchgfxDisplayDriverTransmitBlock>
}
 801117e:	bf00      	nop
 8011180:	3710      	adds	r7, #16
 8011182:	46bd      	mov	sp, r7
 8011184:	bd80      	pop	{r7, pc}

08011186 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8011186:	b580      	push	{r7, lr}
 8011188:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    PartialFrameBufferManager::tryTransmitBlockFromIRQ();
 801118a:	f000 fddf 	bl	8011d4c <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv>
}
 801118e:	bf00      	nop
 8011190:	bd80      	pop	{r7, pc}

08011192 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8011192:	b580      	push	{r7, lr}
 8011194:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8011196:	f7fc f985 	bl	800d4a4 <_ZN8touchgfx3HAL11getInstanceEv>
 801119a:	4603      	mov	r3, r0
 801119c:	4618      	mov	r0, r3
 801119e:	f7ff fe05 	bl	8010dac <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 80111a2:	f7fe ff8d 	bl	80100c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 80111a6:	bf00      	nop
 80111a8:	bd80      	pop	{r7, pc}
	...

080111ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 80111ac:	b480      	push	{r7}
 80111ae:	b083      	sub	sp, #12
 80111b0:	af00      	add	r7, sp, #0
 80111b2:	6078      	str	r0, [r7, #4]
 80111b4:	4a04      	ldr	r2, [pc, #16]	; (80111c8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 80111b6:	687b      	ldr	r3, [r7, #4]
 80111b8:	601a      	str	r2, [r3, #0]
 80111ba:	687b      	ldr	r3, [r7, #4]
 80111bc:	4618      	mov	r0, r3
 80111be:	370c      	adds	r7, #12
 80111c0:	46bd      	mov	sp, r7
 80111c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111c6:	4770      	bx	lr
 80111c8:	08028878 	.word	0x08028878

080111cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 80111cc:	b5b0      	push	{r4, r5, r7, lr}
 80111ce:	b084      	sub	sp, #16
 80111d0:	af00      	add	r7, sp, #0
 80111d2:	6078      	str	r0, [r7, #4]
    {
 80111d4:	687b      	ldr	r3, [r7, #4]
 80111d6:	4618      	mov	r0, r3
 80111d8:	f7ff ffe8 	bl	80111ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 80111dc:	4a1a      	ldr	r2, [pc, #104]	; (8011248 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 80111de:	687b      	ldr	r3, [r7, #4]
 80111e0:	601a      	str	r2, [r3, #0]
 80111e2:	687a      	ldr	r2, [r7, #4]
 80111e4:	f242 13c8 	movw	r3, #8648	; 0x21c8
 80111e8:	4413      	add	r3, r2
 80111ea:	2402      	movs	r4, #2
 80111ec:	461d      	mov	r5, r3
 80111ee:	e004      	b.n	80111fa <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 80111f0:	4628      	mov	r0, r5
 80111f2:	f7fc fdf0 	bl	800ddd6 <_ZN8touchgfx4RectC1Ev>
 80111f6:	3508      	adds	r5, #8
 80111f8:	3c01      	subs	r4, #1
 80111fa:	2c00      	cmp	r4, #0
 80111fc:	daf8      	bge.n	80111f0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 80111fe:	687b      	ldr	r3, [r7, #4]
 8011200:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011204:	461a      	mov	r2, r3
 8011206:	f04f 33ff 	mov.w	r3, #4294967295
 801120a:	f8c2 31e0 	str.w	r3, [r2, #480]	; 0x1e0
        drawingBlock = -1;
 801120e:	687b      	ldr	r3, [r7, #4]
 8011210:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011214:	461a      	mov	r2, r3
 8011216:	f04f 33ff 	mov.w	r3, #4294967295
 801121a:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 801121e:	2300      	movs	r3, #0
 8011220:	60fb      	str	r3, [r7, #12]
 8011222:	e008      	b.n	8011236 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 8011224:	687a      	ldr	r2, [r7, #4]
 8011226:	68fb      	ldr	r3, [r7, #12]
 8011228:	4413      	add	r3, r2
 801122a:	3304      	adds	r3, #4
 801122c:	2200      	movs	r2, #0
 801122e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 8011230:	68fb      	ldr	r3, [r7, #12]
 8011232:	3301      	adds	r3, #1
 8011234:	60fb      	str	r3, [r7, #12]
 8011236:	68fb      	ldr	r3, [r7, #12]
 8011238:	2b02      	cmp	r3, #2
 801123a:	d9f3      	bls.n	8011224 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 801123c:	687b      	ldr	r3, [r7, #4]
 801123e:	4618      	mov	r0, r3
 8011240:	3710      	adds	r7, #16
 8011242:	46bd      	mov	sp, r7
 8011244:	bdb0      	pop	{r4, r5, r7, pc}
 8011246:	bf00      	nop
 8011248:	08028774 	.word	0x08028774

0801124c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 801124c:	b580      	push	{r7, lr}
 801124e:	b082      	sub	sp, #8
 8011250:	af00      	add	r7, sp, #0
 8011252:	6078      	str	r0, [r7, #4]
 8011254:	4a05      	ldr	r2, [pc, #20]	; (801126c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 8011256:	687b      	ldr	r3, [r7, #4]
 8011258:	601a      	str	r2, [r3, #0]
 801125a:	687b      	ldr	r3, [r7, #4]
 801125c:	4618      	mov	r0, r3
 801125e:	f7ff fd85 	bl	8010d6c <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8011262:	687b      	ldr	r3, [r7, #4]
 8011264:	4618      	mov	r0, r3
 8011266:	3708      	adds	r7, #8
 8011268:	46bd      	mov	sp, r7
 801126a:	bd80      	pop	{r7, pc}
 801126c:	08028774 	.word	0x08028774

08011270 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 8011270:	b580      	push	{r7, lr}
 8011272:	b082      	sub	sp, #8
 8011274:	af00      	add	r7, sp, #0
 8011276:	6078      	str	r0, [r7, #4]
 8011278:	6878      	ldr	r0, [r7, #4]
 801127a:	f7ff ffe7 	bl	801124c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 801127e:	f242 11e8 	movw	r1, #8680	; 0x21e8
 8011282:	6878      	ldr	r0, [r7, #4]
 8011284:	f014 fdbf 	bl	8025e06 <_ZdlPvj>
 8011288:	687b      	ldr	r3, [r7, #4]
 801128a:	4618      	mov	r0, r3
 801128c:	3708      	adds	r7, #8
 801128e:	46bd      	mov	sp, r7
 8011290:	bd80      	pop	{r7, pc}
	...

08011294 <_Z41__static_initialization_and_destruction_0ii>:
 8011294:	b580      	push	{r7, lr}
 8011296:	b082      	sub	sp, #8
 8011298:	af00      	add	r7, sp, #0
 801129a:	6078      	str	r0, [r7, #4]
 801129c:	6039      	str	r1, [r7, #0]
 801129e:	687b      	ldr	r3, [r7, #4]
 80112a0:	2b01      	cmp	r3, #1
 80112a2:	d107      	bne.n	80112b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 80112a4:	683b      	ldr	r3, [r7, #0]
 80112a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80112aa:	4293      	cmp	r3, r2
 80112ac:	d102      	bne.n	80112b4 <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 80112ae:	4809      	ldr	r0, [pc, #36]	; (80112d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80112b0:	f7ff ff8c 	bl	80111cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 80112b4:	687b      	ldr	r3, [r7, #4]
 80112b6:	2b00      	cmp	r3, #0
 80112b8:	d107      	bne.n	80112ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80112ba:	683b      	ldr	r3, [r7, #0]
 80112bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80112c0:	4293      	cmp	r3, r2
 80112c2:	d102      	bne.n	80112ca <_Z41__static_initialization_and_destruction_0ii+0x36>
 80112c4:	4803      	ldr	r0, [pc, #12]	; (80112d4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80112c6:	f7ff ffc1 	bl	801124c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 80112ca:	bf00      	nop
 80112cc:	3708      	adds	r7, #8
 80112ce:	46bd      	mov	sp, r7
 80112d0:	bd80      	pop	{r7, pc}
 80112d2:	bf00      	nop
 80112d4:	2400285c 	.word	0x2400285c

080112d8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 80112d8:	b580      	push	{r7, lr}
 80112da:	b086      	sub	sp, #24
 80112dc:	af00      	add	r7, sp, #0
 80112de:	60f8      	str	r0, [r7, #12]
 80112e0:	4608      	mov	r0, r1
 80112e2:	4611      	mov	r1, r2
 80112e4:	461a      	mov	r2, r3
 80112e6:	4603      	mov	r3, r0
 80112e8:	817b      	strh	r3, [r7, #10]
 80112ea:	460b      	mov	r3, r1
 80112ec:	813b      	strh	r3, [r7, #8]
 80112ee:	4613      	mov	r3, r2
 80112f0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80112f2:	68fb      	ldr	r3, [r7, #12]
 80112f4:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80112f8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80112fc:	3301      	adds	r3, #1
 80112fe:	68fa      	ldr	r2, [r7, #12]
 8011300:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8011304:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
        if (drawingBlock == blocks)
 8011308:	68fb      	ldr	r3, [r7, #12]
 801130a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801130e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011312:	2b03      	cmp	r3, #3
 8011314:	d109      	bne.n	801132a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8011316:	68fb      	ldr	r3, [r7, #12]
 8011318:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801131c:	461a      	mov	r2, r3
 801131e:	2300      	movs	r3, #0
 8011320:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 8011324:	e001      	b.n	801132a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 8011326:	f7ff fef3 	bl	8011110 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 801132a:	68fb      	ldr	r3, [r7, #12]
 801132c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011330:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011334:	68fa      	ldr	r2, [r7, #12]
 8011336:	4413      	add	r3, r2
 8011338:	791b      	ldrb	r3, [r3, #4]
 801133a:	b2db      	uxtb	r3, r3
 801133c:	2b00      	cmp	r3, #0
 801133e:	bf14      	ite	ne
 8011340:	2301      	movne	r3, #1
 8011342:	2300      	moveq	r3, #0
 8011344:	b2db      	uxtb	r3, r3
 8011346:	2b00      	cmp	r3, #0
 8011348:	d1ed      	bne.n	8011326 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 801134a:	68fb      	ldr	r3, [r7, #12]
 801134c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011350:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011354:	68fa      	ldr	r2, [r7, #12]
 8011356:	4413      	add	r3, r2
 8011358:	791b      	ldrb	r3, [r3, #4]
 801135a:	b2db      	uxtb	r3, r3
 801135c:	2b00      	cmp	r3, #0
 801135e:	d005      	beq.n	801136c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8011360:	4b38      	ldr	r3, [pc, #224]	; (8011444 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 8011362:	4a39      	ldr	r2, [pc, #228]	; (8011448 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8011364:	21aa      	movs	r1, #170	; 0xaa
 8011366:	4839      	ldr	r0, [pc, #228]	; (801144c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8011368:	f014 fd7c 	bl	8025e64 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 801136c:	68fb      	ldr	r3, [r7, #12]
 801136e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011372:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011376:	68fa      	ldr	r2, [r7, #12]
 8011378:	4413      	add	r3, r2
 801137a:	2201      	movs	r2, #1
 801137c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 801137e:	88fb      	ldrh	r3, [r7, #6]
 8011380:	005b      	lsls	r3, r3, #1
 8011382:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8011384:	697b      	ldr	r3, [r7, #20]
 8011386:	f44f 6234 	mov.w	r2, #2880	; 0xb40
 801138a:	fbb2 f3f3 	udiv	r3, r2, r3
 801138e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8011390:	68fb      	ldr	r3, [r7, #12]
 8011392:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011396:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 801139a:	f44f 6234 	mov.w	r2, #2880	; 0xb40
 801139e:	fb02 f303 	mul.w	r3, r2, r3
 80113a2:	3308      	adds	r3, #8
 80113a4:	68fa      	ldr	r2, [r7, #12]
 80113a6:	441a      	add	r2, r3
 80113a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80113aa:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 80113ac:	68fb      	ldr	r3, [r7, #12]
 80113ae:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80113b2:	f8d3 21e4 	ldr.w	r2, [r3, #484]	; 0x1e4
 80113b6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80113ba:	68fb      	ldr	r3, [r7, #12]
 80113bc:	f202 4239 	addw	r2, r2, #1081	; 0x439
 80113c0:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 80113c4:	68fb      	ldr	r3, [r7, #12]
 80113c6:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80113ca:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80113ce:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 80113d2:	68fa      	ldr	r2, [r7, #12]
 80113d4:	f203 4339 	addw	r3, r3, #1081	; 0x439
 80113d8:	00db      	lsls	r3, r3, #3
 80113da:	4413      	add	r3, r2
 80113dc:	460a      	mov	r2, r1
 80113de:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 80113e0:	68fb      	ldr	r3, [r7, #12]
 80113e2:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80113e6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80113ea:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 80113ee:	68fa      	ldr	r2, [r7, #12]
 80113f0:	f203 4339 	addw	r3, r3, #1081	; 0x439
 80113f4:	00db      	lsls	r3, r3, #3
 80113f6:	4413      	add	r3, r2
 80113f8:	460a      	mov	r2, r1
 80113fa:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 80113fc:	8c3a      	ldrh	r2, [r7, #32]
 80113fe:	693b      	ldr	r3, [r7, #16]
 8011400:	429a      	cmp	r2, r3
 8011402:	bfa8      	it	ge
 8011404:	461a      	movge	r2, r3
 8011406:	68fb      	ldr	r3, [r7, #12]
 8011408:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801140c:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011410:	b211      	sxth	r1, r2
 8011412:	68fa      	ldr	r2, [r7, #12]
 8011414:	f203 4339 	addw	r3, r3, #1081	; 0x439
 8011418:	00db      	lsls	r3, r3, #3
 801141a:	4413      	add	r3, r2
 801141c:	460a      	mov	r2, r1
 801141e:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 8011420:	68fb      	ldr	r3, [r7, #12]
 8011422:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011426:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 801142a:	68fa      	ldr	r2, [r7, #12]
 801142c:	f203 4339 	addw	r3, r3, #1081	; 0x439
 8011430:	00db      	lsls	r3, r3, #3
 8011432:	4413      	add	r3, r2
 8011434:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8011438:	b29b      	uxth	r3, r3
    }
 801143a:	4618      	mov	r0, r3
 801143c:	3718      	adds	r7, #24
 801143e:	46bd      	mov	sp, r7
 8011440:	bd80      	pop	{r7, pc}
 8011442:	bf00      	nop
 8011444:	08027994 	.word	0x08027994
 8011448:	080279b4 	.word	0x080279b4
 801144c:	08027ae8 	.word	0x08027ae8

08011450 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8011450:	b580      	push	{r7, lr}
 8011452:	b082      	sub	sp, #8
 8011454:	af00      	add	r7, sp, #0
 8011456:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8011458:	687b      	ldr	r3, [r7, #4]
 801145a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801145e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011462:	687a      	ldr	r2, [r7, #4]
 8011464:	4413      	add	r3, r2
 8011466:	791b      	ldrb	r3, [r3, #4]
 8011468:	b2db      	uxtb	r3, r3
 801146a:	2b01      	cmp	r3, #1
 801146c:	d005      	beq.n	801147a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 801146e:	4b0a      	ldr	r3, [pc, #40]	; (8011498 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 8011470:	4a0a      	ldr	r2, [pc, #40]	; (801149c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8011472:	21b9      	movs	r1, #185	; 0xb9
 8011474:	480a      	ldr	r0, [pc, #40]	; (80114a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8011476:	f014 fcf5 	bl	8025e64 <__assert_func>
        state[drawingBlock] = DRAWN;
 801147a:	687b      	ldr	r3, [r7, #4]
 801147c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011480:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011484:	687a      	ldr	r2, [r7, #4]
 8011486:	4413      	add	r3, r2
 8011488:	2202      	movs	r2, #2
 801148a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 801148c:	f7ff fe47 	bl	801111e <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8011490:	bf00      	nop
 8011492:	3708      	adds	r7, #8
 8011494:	46bd      	mov	sp, r7
 8011496:	bd80      	pop	{r7, pc}
 8011498:	08027b3c 	.word	0x08027b3c
 801149c:	08027b60 	.word	0x08027b60
 80114a0:	08027ae8 	.word	0x08027ae8

080114a4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 80114a4:	b480      	push	{r7}
 80114a6:	b085      	sub	sp, #20
 80114a8:	af00      	add	r7, sp, #0
 80114aa:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 80114ac:	2300      	movs	r3, #0
 80114ae:	60fb      	str	r3, [r7, #12]
 80114b0:	e011      	b.n	80114d6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 80114b2:	687a      	ldr	r2, [r7, #4]
 80114b4:	68fb      	ldr	r3, [r7, #12]
 80114b6:	4413      	add	r3, r2
 80114b8:	3304      	adds	r3, #4
 80114ba:	781b      	ldrb	r3, [r3, #0]
 80114bc:	b2db      	uxtb	r3, r3
 80114be:	2b02      	cmp	r3, #2
 80114c0:	bf0c      	ite	eq
 80114c2:	2301      	moveq	r3, #1
 80114c4:	2300      	movne	r3, #0
 80114c6:	b2db      	uxtb	r3, r3
 80114c8:	2b00      	cmp	r3, #0
 80114ca:	d001      	beq.n	80114d0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 80114cc:	2301      	movs	r3, #1
 80114ce:	e006      	b.n	80114de <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 80114d0:	68fb      	ldr	r3, [r7, #12]
 80114d2:	3301      	adds	r3, #1
 80114d4:	60fb      	str	r3, [r7, #12]
 80114d6:	68fb      	ldr	r3, [r7, #12]
 80114d8:	2b02      	cmp	r3, #2
 80114da:	d9ea      	bls.n	80114b2 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 80114dc:	2300      	movs	r3, #0
    }
 80114de:	4618      	mov	r0, r3
 80114e0:	3714      	adds	r7, #20
 80114e2:	46bd      	mov	sp, r7
 80114e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114e8:	4770      	bx	lr
	...

080114ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80114ec:	b580      	push	{r7, lr}
 80114ee:	b082      	sub	sp, #8
 80114f0:	af00      	add	r7, sp, #0
 80114f2:	6078      	str	r0, [r7, #4]
 80114f4:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 80114f6:	687b      	ldr	r3, [r7, #4]
 80114f8:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80114fc:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011500:	3301      	adds	r3, #1
 8011502:	687a      	ldr	r2, [r7, #4]
 8011504:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8011508:	f8c2 31e0 	str.w	r3, [r2, #480]	; 0x1e0
        if (sendingBlock == blocks)
 801150c:	687b      	ldr	r3, [r7, #4]
 801150e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011512:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011516:	2b03      	cmp	r3, #3
 8011518:	d106      	bne.n	8011528 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 801151a:	687b      	ldr	r3, [r7, #4]
 801151c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011520:	461a      	mov	r2, r3
 8011522:	2300      	movs	r3, #0
 8011524:	f8c2 31e0 	str.w	r3, [r2, #480]	; 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 8011528:	687b      	ldr	r3, [r7, #4]
 801152a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801152e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011532:	687a      	ldr	r2, [r7, #4]
 8011534:	4413      	add	r3, r2
 8011536:	791b      	ldrb	r3, [r3, #4]
 8011538:	b2db      	uxtb	r3, r3
 801153a:	2b02      	cmp	r3, #2
 801153c:	d005      	beq.n	801154a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 801153e:	4b16      	ldr	r3, [pc, #88]	; (8011598 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8011540:	4a16      	ldr	r2, [pc, #88]	; (801159c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 8011542:	21dd      	movs	r1, #221	; 0xdd
 8011544:	4816      	ldr	r0, [pc, #88]	; (80115a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8011546:	f014 fc8d 	bl	8025e64 <__assert_func>
        rect = blockRect[sendingBlock];
 801154a:	687b      	ldr	r3, [r7, #4]
 801154c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011550:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011554:	683a      	ldr	r2, [r7, #0]
 8011556:	6879      	ldr	r1, [r7, #4]
 8011558:	f203 4339 	addw	r3, r3, #1081	; 0x439
 801155c:	00db      	lsls	r3, r3, #3
 801155e:	440b      	add	r3, r1
 8011560:	cb03      	ldmia	r3!, {r0, r1}
 8011562:	6010      	str	r0, [r2, #0]
 8011564:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8011566:	687b      	ldr	r3, [r7, #4]
 8011568:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801156c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011570:	687a      	ldr	r2, [r7, #4]
 8011572:	4413      	add	r3, r2
 8011574:	2203      	movs	r2, #3
 8011576:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8011578:	687b      	ldr	r3, [r7, #4]
 801157a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801157e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011582:	f44f 6234 	mov.w	r2, #2880	; 0xb40
 8011586:	fb02 f303 	mul.w	r3, r2, r3
 801158a:	3308      	adds	r3, #8
 801158c:	687a      	ldr	r2, [r7, #4]
 801158e:	4413      	add	r3, r2
    }
 8011590:	4618      	mov	r0, r3
 8011592:	3708      	adds	r7, #8
 8011594:	46bd      	mov	sp, r7
 8011596:	bd80      	pop	{r7, pc}
 8011598:	08027c34 	.word	0x08027c34
 801159c:	08027c54 	.word	0x08027c54
 80115a0:	08027ae8 	.word	0x08027ae8

080115a4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 80115a4:	b580      	push	{r7, lr}
 80115a6:	b084      	sub	sp, #16
 80115a8:	af00      	add	r7, sp, #0
 80115aa:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 80115ac:	687b      	ldr	r3, [r7, #4]
 80115ae:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80115b2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 80115b6:	3301      	adds	r3, #1
 80115b8:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 80115ba:	68fb      	ldr	r3, [r7, #12]
 80115bc:	2b03      	cmp	r3, #3
 80115be:	d101      	bne.n	80115c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 80115c0:	2300      	movs	r3, #0
 80115c2:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 80115c4:	687a      	ldr	r2, [r7, #4]
 80115c6:	68fb      	ldr	r3, [r7, #12]
 80115c8:	4413      	add	r3, r2
 80115ca:	3304      	adds	r3, #4
 80115cc:	781b      	ldrb	r3, [r3, #0]
 80115ce:	b2db      	uxtb	r3, r3
 80115d0:	2b02      	cmp	r3, #2
 80115d2:	d005      	beq.n	80115e0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 80115d4:	4b07      	ldr	r3, [pc, #28]	; (80115f4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 80115d6:	4a08      	ldr	r2, [pc, #32]	; (80115f8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 80115d8:	21ea      	movs	r1, #234	; 0xea
 80115da:	4808      	ldr	r0, [pc, #32]	; (80115fc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 80115dc:	f014 fc42 	bl	8025e64 <__assert_func>
        return blockRect[nextSendingBlock];
 80115e0:	68fb      	ldr	r3, [r7, #12]
 80115e2:	f203 4339 	addw	r3, r3, #1081	; 0x439
 80115e6:	00db      	lsls	r3, r3, #3
 80115e8:	687a      	ldr	r2, [r7, #4]
 80115ea:	4413      	add	r3, r2
    }
 80115ec:	4618      	mov	r0, r3
 80115ee:	3710      	adds	r7, #16
 80115f0:	46bd      	mov	sp, r7
 80115f2:	bd80      	pop	{r7, pc}
 80115f4:	08027d54 	.word	0x08027d54
 80115f8:	08027d78 	.word	0x08027d78
 80115fc:	08027ae8 	.word	0x08027ae8

08011600 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8011600:	b480      	push	{r7}
 8011602:	b085      	sub	sp, #20
 8011604:	af00      	add	r7, sp, #0
 8011606:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8011608:	687b      	ldr	r3, [r7, #4]
 801160a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 801160e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8011612:	3301      	adds	r3, #1
 8011614:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8011616:	68fb      	ldr	r3, [r7, #12]
 8011618:	2b03      	cmp	r3, #3
 801161a:	d101      	bne.n	8011620 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 801161c:	2300      	movs	r3, #0
 801161e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 8011620:	687a      	ldr	r2, [r7, #4]
 8011622:	68fb      	ldr	r3, [r7, #12]
 8011624:	4413      	add	r3, r2
 8011626:	3304      	adds	r3, #4
 8011628:	781b      	ldrb	r3, [r3, #0]
 801162a:	b2db      	uxtb	r3, r3
 801162c:	2b00      	cmp	r3, #0
 801162e:	bf0c      	ite	eq
 8011630:	2301      	moveq	r3, #1
 8011632:	2300      	movne	r3, #0
 8011634:	b2db      	uxtb	r3, r3
    }
 8011636:	4618      	mov	r0, r3
 8011638:	3714      	adds	r7, #20
 801163a:	46bd      	mov	sp, r7
 801163c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011640:	4770      	bx	lr
	...

08011644 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8011644:	b580      	push	{r7, lr}
 8011646:	b082      	sub	sp, #8
 8011648:	af00      	add	r7, sp, #0
 801164a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 801164c:	687b      	ldr	r3, [r7, #4]
 801164e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011652:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011656:	687a      	ldr	r2, [r7, #4]
 8011658:	4413      	add	r3, r2
 801165a:	791b      	ldrb	r3, [r3, #4]
 801165c:	b2db      	uxtb	r3, r3
 801165e:	2b03      	cmp	r3, #3
 8011660:	d005      	beq.n	801166e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 8011662:	4b09      	ldr	r3, [pc, #36]	; (8011688 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8011664:	4a09      	ldr	r2, [pc, #36]	; (801168c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8011666:	21ff      	movs	r1, #255	; 0xff
 8011668:	4809      	ldr	r0, [pc, #36]	; (8011690 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 801166a:	f014 fbfb 	bl	8025e64 <__assert_func>
        state[sendingBlock] = EMPTY;
 801166e:	687b      	ldr	r3, [r7, #4]
 8011670:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011674:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8011678:	687a      	ldr	r2, [r7, #4]
 801167a:	4413      	add	r3, r2
 801167c:	2200      	movs	r2, #0
 801167e:	711a      	strb	r2, [r3, #4]
    }
 8011680:	bf00      	nop
 8011682:	3708      	adds	r7, #8
 8011684:	46bd      	mov	sp, r7
 8011686:	bd80      	pop	{r7, pc}
 8011688:	08027e58 	.word	0x08027e58
 801168c:	08027e78 	.word	0x08027e78
 8011690:	08027ae8 	.word	0x08027ae8

08011694 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8011694:	b580      	push	{r7, lr}
 8011696:	af00      	add	r7, sp, #0
 8011698:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801169c:	2001      	movs	r0, #1
 801169e:	f7ff fdf9 	bl	8011294 <_Z41__static_initialization_and_destruction_0ii>
 80116a2:	bd80      	pop	{r7, pc}

080116a4 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 80116a4:	b580      	push	{r7, lr}
 80116a6:	af00      	add	r7, sp, #0
 80116a8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80116ac:	2000      	movs	r0, #0
 80116ae:	f7ff fdf1 	bl	8011294 <_Z41__static_initialization_and_destruction_0ii>
 80116b2:	bd80      	pop	{r7, pc}

080116b4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80116b4:	8880      	ldrh	r0, [r0, #4]
 80116b6:	4770      	bx	lr

080116b8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80116b8:	b570      	push	{r4, r5, r6, lr}
 80116ba:	6803      	ldr	r3, [r0, #0]
 80116bc:	460c      	mov	r4, r1
 80116be:	2100      	movs	r1, #0
 80116c0:	4605      	mov	r5, r0
 80116c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116c4:	4798      	blx	r3
 80116c6:	4606      	mov	r6, r0
 80116c8:	682b      	ldr	r3, [r5, #0]
 80116ca:	4628      	mov	r0, r5
 80116cc:	1ba4      	subs	r4, r4, r6
 80116ce:	6a1b      	ldr	r3, [r3, #32]
 80116d0:	b2a4      	uxth	r4, r4
 80116d2:	4798      	blx	r3
 80116d4:	fbb4 f0f0 	udiv	r0, r4, r0
 80116d8:	bd70      	pop	{r4, r5, r6, pc}

080116da <_ZN8touchgfx17AbstractPartition5clearEv>:
 80116da:	2300      	movs	r3, #0
 80116dc:	8083      	strh	r3, [r0, #4]
 80116de:	4770      	bx	lr

080116e0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80116e0:	b510      	push	{r4, lr}
 80116e2:	6803      	ldr	r3, [r0, #0]
 80116e4:	4604      	mov	r4, r0
 80116e6:	8881      	ldrh	r1, [r0, #4]
 80116e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116ea:	4798      	blx	r3
 80116ec:	88a3      	ldrh	r3, [r4, #4]
 80116ee:	3301      	adds	r3, #1
 80116f0:	80a3      	strh	r3, [r4, #4]
 80116f2:	bd10      	pop	{r4, pc}

080116f4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80116f4:	6803      	ldr	r3, [r0, #0]
 80116f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116f8:	4718      	bx	r3

080116fa <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80116fa:	4770      	bx	lr

080116fc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80116fc:	4a02      	ldr	r2, [pc, #8]	; (8011708 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80116fe:	6002      	str	r2, [r0, #0]
 8011700:	2200      	movs	r2, #0
 8011702:	8082      	strh	r2, [r0, #4]
 8011704:	4770      	bx	lr
 8011706:	bf00      	nop
 8011708:	080288a4 	.word	0x080288a4

0801170c <_ZN8touchgfx9Container13getFirstChildEv>:
 801170c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801170e:	4770      	bx	lr

08011710 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8011710:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011712:	2000      	movs	r0, #0
 8011714:	b12b      	cbz	r3, 8011722 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011716:	b920      	cbnz	r0, 8011722 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011718:	1a5a      	subs	r2, r3, r1
 801171a:	699b      	ldr	r3, [r3, #24]
 801171c:	4250      	negs	r0, r2
 801171e:	4150      	adcs	r0, r2
 8011720:	e7f8      	b.n	8011714 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8011722:	4770      	bx	lr

08011724 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8011724:	2300      	movs	r3, #0
 8011726:	6148      	str	r0, [r1, #20]
 8011728:	618b      	str	r3, [r1, #24]
 801172a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801172c:	b913      	cbnz	r3, 8011734 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801172e:	6281      	str	r1, [r0, #40]	; 0x28
 8011730:	4770      	bx	lr
 8011732:	4613      	mov	r3, r2
 8011734:	699a      	ldr	r2, [r3, #24]
 8011736:	2a00      	cmp	r2, #0
 8011738:	d1fb      	bne.n	8011732 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 801173a:	6199      	str	r1, [r3, #24]
 801173c:	4770      	bx	lr

0801173e <_ZN8touchgfx9Container9removeAllEv>:
 801173e:	2200      	movs	r2, #0
 8011740:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011742:	b123      	cbz	r3, 801174e <_ZN8touchgfx9Container9removeAllEv+0x10>
 8011744:	6999      	ldr	r1, [r3, #24]
 8011746:	6281      	str	r1, [r0, #40]	; 0x28
 8011748:	e9c3 2205 	strd	r2, r2, [r3, #20]
 801174c:	e7f8      	b.n	8011740 <_ZN8touchgfx9Container9removeAllEv+0x2>
 801174e:	4770      	bx	lr

08011750 <_ZN8touchgfx9Container6unlinkEv>:
 8011750:	2300      	movs	r3, #0
 8011752:	6283      	str	r3, [r0, #40]	; 0x28
 8011754:	4770      	bx	lr

08011756 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8011756:	2200      	movs	r2, #0
 8011758:	8002      	strh	r2, [r0, #0]
 801175a:	8042      	strh	r2, [r0, #2]
 801175c:	8082      	strh	r2, [r0, #4]
 801175e:	80c2      	strh	r2, [r0, #6]
 8011760:	4770      	bx	lr

08011762 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8011762:	b570      	push	{r4, r5, r6, lr}
 8011764:	460d      	mov	r5, r1
 8011766:	4616      	mov	r6, r2
 8011768:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801176a:	b13c      	cbz	r4, 801177c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 801176c:	6823      	ldr	r3, [r4, #0]
 801176e:	4620      	mov	r0, r4
 8011770:	4632      	mov	r2, r6
 8011772:	4629      	mov	r1, r5
 8011774:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011776:	4798      	blx	r3
 8011778:	69a4      	ldr	r4, [r4, #24]
 801177a:	e7f6      	b.n	801176a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 801177c:	bd70      	pop	{r4, r5, r6, pc}

0801177e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801177e:	b538      	push	{r3, r4, r5, lr}
 8011780:	460d      	mov	r5, r1
 8011782:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011784:	b134      	cbz	r4, 8011794 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8011786:	682b      	ldr	r3, [r5, #0]
 8011788:	4621      	mov	r1, r4
 801178a:	4628      	mov	r0, r5
 801178c:	689b      	ldr	r3, [r3, #8]
 801178e:	4798      	blx	r3
 8011790:	69a4      	ldr	r4, [r4, #24]
 8011792:	e7f7      	b.n	8011784 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011794:	bd38      	pop	{r3, r4, r5, pc}

08011796 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8011796:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011798:	b19b      	cbz	r3, 80117c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801179a:	428b      	cmp	r3, r1
 801179c:	d109      	bne.n	80117b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801179e:	699a      	ldr	r2, [r3, #24]
 80117a0:	2100      	movs	r1, #0
 80117a2:	6159      	str	r1, [r3, #20]
 80117a4:	6282      	str	r2, [r0, #40]	; 0x28
 80117a6:	b902      	cbnz	r2, 80117aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80117a8:	4770      	bx	lr
 80117aa:	6199      	str	r1, [r3, #24]
 80117ac:	4770      	bx	lr
 80117ae:	4613      	mov	r3, r2
 80117b0:	b13a      	cbz	r2, 80117c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80117b2:	699a      	ldr	r2, [r3, #24]
 80117b4:	428a      	cmp	r2, r1
 80117b6:	d1fa      	bne.n	80117ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80117b8:	698a      	ldr	r2, [r1, #24]
 80117ba:	619a      	str	r2, [r3, #24]
 80117bc:	2300      	movs	r3, #0
 80117be:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80117c2:	4770      	bx	lr

080117c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80117c4:	b410      	push	{r4}
 80117c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117c8:	4604      	mov	r4, r0
 80117ca:	b92b      	cbnz	r3, 80117d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80117cc:	6803      	ldr	r3, [r0, #0]
 80117ce:	4611      	mov	r1, r2
 80117d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80117d4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80117d6:	4718      	bx	r3
 80117d8:	b941      	cbnz	r1, 80117ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80117da:	6193      	str	r3, [r2, #24]
 80117dc:	6282      	str	r2, [r0, #40]	; 0x28
 80117de:	6154      	str	r4, [r2, #20]
 80117e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80117e4:	4770      	bx	lr
 80117e6:	4603      	mov	r3, r0
 80117e8:	2800      	cmp	r0, #0
 80117ea:	d0f9      	beq.n	80117e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80117ec:	4299      	cmp	r1, r3
 80117ee:	6998      	ldr	r0, [r3, #24]
 80117f0:	d1f9      	bne.n	80117e6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80117f2:	6190      	str	r0, [r2, #24]
 80117f4:	618a      	str	r2, [r1, #24]
 80117f6:	e7f2      	b.n	80117de <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080117f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80117f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117fc:	461f      	mov	r7, r3
 80117fe:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8011802:	460d      	mov	r5, r1
 8011804:	4616      	mov	r6, r2
 8011806:	b103      	cbz	r3, 801180a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8011808:	6038      	str	r0, [r7, #0]
 801180a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801180c:	b314      	cbz	r4, 8011854 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801180e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011812:	b1eb      	cbz	r3, 8011850 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011814:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011818:	428d      	cmp	r5, r1
 801181a:	db19      	blt.n	8011850 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801181c:	b289      	uxth	r1, r1
 801181e:	8923      	ldrh	r3, [r4, #8]
 8011820:	440b      	add	r3, r1
 8011822:	b21b      	sxth	r3, r3
 8011824:	429d      	cmp	r5, r3
 8011826:	da13      	bge.n	8011850 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011828:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801182c:	4296      	cmp	r6, r2
 801182e:	db0f      	blt.n	8011850 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011830:	b292      	uxth	r2, r2
 8011832:	8963      	ldrh	r3, [r4, #10]
 8011834:	4413      	add	r3, r2
 8011836:	b21b      	sxth	r3, r3
 8011838:	429e      	cmp	r6, r3
 801183a:	da09      	bge.n	8011850 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801183c:	6823      	ldr	r3, [r4, #0]
 801183e:	1ab2      	subs	r2, r6, r2
 8011840:	1a69      	subs	r1, r5, r1
 8011842:	4620      	mov	r0, r4
 8011844:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8011848:	b212      	sxth	r2, r2
 801184a:	463b      	mov	r3, r7
 801184c:	b209      	sxth	r1, r1
 801184e:	47c0      	blx	r8
 8011850:	69a4      	ldr	r4, [r4, #24]
 8011852:	e7db      	b.n	801180c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8011854:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011858 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8011858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801185c:	4c6d      	ldr	r4, [pc, #436]	; (8011a14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 801185e:	b0a1      	sub	sp, #132	; 0x84
 8011860:	4606      	mov	r6, r0
 8011862:	6824      	ldr	r4, [r4, #0]
 8011864:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8011866:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 801186a:	2400      	movs	r4, #0
 801186c:	9303      	str	r3, [sp, #12]
 801186e:	802c      	strh	r4, [r5, #0]
 8011870:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8011872:	802c      	strh	r4, [r5, #0]
 8011874:	601c      	str	r4, [r3, #0]
 8011876:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801187a:	f7ff ffbd 	bl	80117f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801187e:	f1b9 0f03 	cmp.w	r9, #3
 8011882:	f340 80c1 	ble.w	8011a08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 8011886:	4631      	mov	r1, r6
 8011888:	a80c      	add	r0, sp, #48	; 0x30
 801188a:	f004 ff11 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801188e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8011892:	9306      	str	r3, [sp, #24]
 8011894:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011898:	9307      	str	r3, [sp, #28]
 801189a:	9b03      	ldr	r3, [sp, #12]
 801189c:	f8d3 a000 	ldr.w	sl, [r3]
 80118a0:	f1ba 0f00 	cmp.w	sl, #0
 80118a4:	f000 80b3 	beq.w	8011a0e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 80118a8:	4651      	mov	r1, sl
 80118aa:	a810      	add	r0, sp, #64	; 0x40
 80118ac:	f004 ff00 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118b0:	2002      	movs	r0, #2
 80118b2:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80118b6:	9b01      	ldr	r3, [sp, #4]
 80118b8:	9a06      	ldr	r2, [sp, #24]
 80118ba:	fb91 f1f0 	sdiv	r1, r1, r0
 80118be:	189d      	adds	r5, r3, r2
 80118c0:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80118c4:	9a07      	ldr	r2, [sp, #28]
 80118c6:	4419      	add	r1, r3
 80118c8:	9b02      	ldr	r3, [sp, #8]
 80118ca:	4413      	add	r3, r2
 80118cc:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80118d0:	1a6d      	subs	r5, r5, r1
 80118d2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80118d6:	fb92 f2f0 	sdiv	r2, r2, r0
 80118da:	440a      	add	r2, r1
 80118dc:	1a9b      	subs	r3, r3, r2
 80118de:	435b      	muls	r3, r3
 80118e0:	fb05 3505 	mla	r5, r5, r5, r3
 80118e4:	4f4c      	ldr	r7, [pc, #304]	; (8011a18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80118e6:	ac10      	add	r4, sp, #64	; 0x40
 80118e8:	f1b9 0f0c 	cmp.w	r9, #12
 80118ec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80118ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80118f0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80118f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80118f4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80118f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80118f8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80118fc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8011900:	f04f 0303 	mov.w	r3, #3
 8011904:	bfd8      	it	le
 8011906:	f109 32ff 	addle.w	r2, r9, #4294967295
 801190a:	f04f 0400 	mov.w	r4, #0
 801190e:	f8cd 9000 	str.w	r9, [sp]
 8011912:	bfcc      	ite	gt
 8011914:	4698      	movgt	r8, r3
 8011916:	fb92 f8f3 	sdivle	r8, r2, r3
 801191a:	1c63      	adds	r3, r4, #1
 801191c:	aa10      	add	r2, sp, #64	; 0x40
 801191e:	f004 0401 	and.w	r4, r4, #1
 8011922:	f04f 0b00 	mov.w	fp, #0
 8011926:	9308      	str	r3, [sp, #32]
 8011928:	9b00      	ldr	r3, [sp, #0]
 801192a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 801192e:	fb93 f3f8 	sdiv	r3, r3, r8
 8011932:	3404      	adds	r4, #4
 8011934:	b29b      	uxth	r3, r3
 8011936:	9304      	str	r3, [sp, #16]
 8011938:	9a04      	ldr	r2, [sp, #16]
 801193a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801193e:	fb13 f302 	smulbb	r3, r3, r2
 8011942:	9a01      	ldr	r2, [sp, #4]
 8011944:	b29b      	uxth	r3, r3
 8011946:	1899      	adds	r1, r3, r2
 8011948:	9305      	str	r3, [sp, #20]
 801194a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801194e:	b209      	sxth	r1, r1
 8011950:	4299      	cmp	r1, r3
 8011952:	db4d      	blt.n	80119f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011954:	8932      	ldrh	r2, [r6, #8]
 8011956:	4413      	add	r3, r2
 8011958:	b21b      	sxth	r3, r3
 801195a:	4299      	cmp	r1, r3
 801195c:	da48      	bge.n	80119f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801195e:	9b04      	ldr	r3, [sp, #16]
 8011960:	6827      	ldr	r7, [r4, #0]
 8011962:	fb17 f703 	smulbb	r7, r7, r3
 8011966:	9b02      	ldr	r3, [sp, #8]
 8011968:	b2bf      	uxth	r7, r7
 801196a:	18fa      	adds	r2, r7, r3
 801196c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011970:	b212      	sxth	r2, r2
 8011972:	429a      	cmp	r2, r3
 8011974:	db3c      	blt.n	80119f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011976:	8970      	ldrh	r0, [r6, #10]
 8011978:	4403      	add	r3, r0
 801197a:	b21b      	sxth	r3, r3
 801197c:	429a      	cmp	r2, r3
 801197e:	da37      	bge.n	80119f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011980:	2300      	movs	r3, #0
 8011982:	4630      	mov	r0, r6
 8011984:	930b      	str	r3, [sp, #44]	; 0x2c
 8011986:	ab0b      	add	r3, sp, #44	; 0x2c
 8011988:	f7ff ff36 	bl	80117f8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801198c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801198e:	b37a      	cbz	r2, 80119f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011990:	4552      	cmp	r2, sl
 8011992:	d02d      	beq.n	80119f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011994:	4611      	mov	r1, r2
 8011996:	a80e      	add	r0, sp, #56	; 0x38
 8011998:	9209      	str	r2, [sp, #36]	; 0x24
 801199a:	f004 fe89 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801199e:	f04f 0e02 	mov.w	lr, #2
 80119a2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80119a6:	9a06      	ldr	r2, [sp, #24]
 80119a8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80119ac:	9b01      	ldr	r3, [sp, #4]
 80119ae:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80119b2:	4413      	add	r3, r2
 80119b4:	9a07      	ldr	r2, [sp, #28]
 80119b6:	fb91 f1fe 	sdiv	r1, r1, lr
 80119ba:	fb9c fcfe 	sdiv	ip, ip, lr
 80119be:	4401      	add	r1, r0
 80119c0:	1a58      	subs	r0, r3, r1
 80119c2:	9b02      	ldr	r3, [sp, #8]
 80119c4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80119c8:	4413      	add	r3, r2
 80119ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80119cc:	448c      	add	ip, r1
 80119ce:	eba3 030c 	sub.w	r3, r3, ip
 80119d2:	435b      	muls	r3, r3
 80119d4:	fb00 3300 	mla	r3, r0, r0, r3
 80119d8:	42ab      	cmp	r3, r5
 80119da:	d208      	bcs.n	80119ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80119dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80119de:	461d      	mov	r5, r3
 80119e0:	9803      	ldr	r0, [sp, #12]
 80119e2:	6001      	str	r1, [r0, #0]
 80119e4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80119e6:	9805      	ldr	r0, [sp, #20]
 80119e8:	8008      	strh	r0, [r1, #0]
 80119ea:	992b      	ldr	r1, [sp, #172]	; 0xac
 80119ec:	800f      	strh	r7, [r1, #0]
 80119ee:	4692      	mov	sl, r2
 80119f0:	f10b 0b01 	add.w	fp, fp, #1
 80119f4:	3408      	adds	r4, #8
 80119f6:	f1bb 0f04 	cmp.w	fp, #4
 80119fa:	d19d      	bne.n	8011938 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80119fc:	9b00      	ldr	r3, [sp, #0]
 80119fe:	9c08      	ldr	r4, [sp, #32]
 8011a00:	444b      	add	r3, r9
 8011a02:	4544      	cmp	r4, r8
 8011a04:	9300      	str	r3, [sp, #0]
 8011a06:	d188      	bne.n	801191a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8011a08:	b021      	add	sp, #132	; 0x84
 8011a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a0e:	f04f 35ff 	mov.w	r5, #4294967295
 8011a12:	e767      	b.n	80118e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8011a14:	24004a50 	.word	0x24004a50
 8011a18:	08027f48 	.word	0x08027f48

08011a1c <_ZN8touchgfx4RectaNERKS0_>:
 8011a1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a20:	f9b1 7000 	ldrsh.w	r7, [r1]
 8011a24:	888c      	ldrh	r4, [r1, #4]
 8011a26:	f9b0 9000 	ldrsh.w	r9, [r0]
 8011a2a:	443c      	add	r4, r7
 8011a2c:	b2a4      	uxth	r4, r4
 8011a2e:	fa0f f884 	sxth.w	r8, r4
 8011a32:	45c1      	cmp	r9, r8
 8011a34:	da2f      	bge.n	8011a96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011a36:	8882      	ldrh	r2, [r0, #4]
 8011a38:	444a      	add	r2, r9
 8011a3a:	b292      	uxth	r2, r2
 8011a3c:	fa0f fe82 	sxth.w	lr, r2
 8011a40:	4577      	cmp	r7, lr
 8011a42:	da28      	bge.n	8011a96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011a44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8011a48:	88cb      	ldrh	r3, [r1, #6]
 8011a4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8011a4e:	442b      	add	r3, r5
 8011a50:	b21b      	sxth	r3, r3
 8011a52:	429e      	cmp	r6, r3
 8011a54:	da1f      	bge.n	8011a96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011a56:	88c3      	ldrh	r3, [r0, #6]
 8011a58:	4433      	add	r3, r6
 8011a5a:	b29b      	uxth	r3, r3
 8011a5c:	fa0f fc83 	sxth.w	ip, r3
 8011a60:	4565      	cmp	r5, ip
 8011a62:	da18      	bge.n	8011a96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011a64:	454f      	cmp	r7, r9
 8011a66:	bfb8      	it	lt
 8011a68:	464f      	movlt	r7, r9
 8011a6a:	42b5      	cmp	r5, r6
 8011a6c:	bfb8      	it	lt
 8011a6e:	4635      	movlt	r5, r6
 8011a70:	45f0      	cmp	r8, lr
 8011a72:	bfd8      	it	le
 8011a74:	4622      	movle	r2, r4
 8011a76:	1bd2      	subs	r2, r2, r7
 8011a78:	8082      	strh	r2, [r0, #4]
 8011a7a:	884a      	ldrh	r2, [r1, #2]
 8011a7c:	88c9      	ldrh	r1, [r1, #6]
 8011a7e:	8007      	strh	r7, [r0, #0]
 8011a80:	440a      	add	r2, r1
 8011a82:	8045      	strh	r5, [r0, #2]
 8011a84:	b292      	uxth	r2, r2
 8011a86:	b211      	sxth	r1, r2
 8011a88:	458c      	cmp	ip, r1
 8011a8a:	bfa8      	it	ge
 8011a8c:	4613      	movge	r3, r2
 8011a8e:	1b5b      	subs	r3, r3, r5
 8011a90:	80c3      	strh	r3, [r0, #6]
 8011a92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a96:	2300      	movs	r3, #0
 8011a98:	8003      	strh	r3, [r0, #0]
 8011a9a:	8043      	strh	r3, [r0, #2]
 8011a9c:	8083      	strh	r3, [r0, #4]
 8011a9e:	80c3      	strh	r3, [r0, #6]
 8011aa0:	e7f7      	b.n	8011a92 <_ZN8touchgfx4RectaNERKS0_+0x76>

08011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8011aa2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011aa6:	2b00      	cmp	r3, #0
 8011aa8:	dd06      	ble.n	8011ab8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8011aaa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8011aae:	2800      	cmp	r0, #0
 8011ab0:	bfcc      	ite	gt
 8011ab2:	2000      	movgt	r0, #0
 8011ab4:	2001      	movle	r0, #1
 8011ab6:	4770      	bx	lr
 8011ab8:	2001      	movs	r0, #1
 8011aba:	4770      	bx	lr

08011abc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8011abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ac0:	2300      	movs	r3, #0
 8011ac2:	4604      	mov	r4, r0
 8011ac4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011ac6:	8003      	strh	r3, [r0, #0]
 8011ac8:	8043      	strh	r3, [r0, #2]
 8011aca:	8083      	strh	r3, [r0, #4]
 8011acc:	80c3      	strh	r3, [r0, #6]
 8011ace:	2d00      	cmp	r5, #0
 8011ad0:	d040      	beq.n	8011b54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8011ad2:	1d28      	adds	r0, r5, #4
 8011ad4:	f7ff ffe5 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011ad8:	b988      	cbnz	r0, 8011afe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011ada:	4620      	mov	r0, r4
 8011adc:	f7ff ffe1 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011ae0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011ae4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011ae8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8011aec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8011af0:	b138      	cbz	r0, 8011b02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8011af2:	8022      	strh	r2, [r4, #0]
 8011af4:	8063      	strh	r3, [r4, #2]
 8011af6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8011afa:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011afe:	69ad      	ldr	r5, [r5, #24]
 8011b00:	e7e5      	b.n	8011ace <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8011b02:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011b06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011b0a:	4290      	cmp	r0, r2
 8011b0c:	4607      	mov	r7, r0
 8011b0e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8011b12:	460e      	mov	r6, r1
 8011b14:	bfa8      	it	ge
 8011b16:	4617      	movge	r7, r2
 8011b18:	4299      	cmp	r1, r3
 8011b1a:	4472      	add	r2, lr
 8011b1c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8011b20:	bfa8      	it	ge
 8011b22:	461e      	movge	r6, r3
 8011b24:	4440      	add	r0, r8
 8011b26:	4471      	add	r1, lr
 8011b28:	4463      	add	r3, ip
 8011b2a:	b200      	sxth	r0, r0
 8011b2c:	8027      	strh	r7, [r4, #0]
 8011b2e:	b212      	sxth	r2, r2
 8011b30:	8066      	strh	r6, [r4, #2]
 8011b32:	b209      	sxth	r1, r1
 8011b34:	b21b      	sxth	r3, r3
 8011b36:	4290      	cmp	r0, r2
 8011b38:	bfac      	ite	ge
 8011b3a:	ebc7 0200 	rsbge	r2, r7, r0
 8011b3e:	ebc7 0202 	rsblt	r2, r7, r2
 8011b42:	4299      	cmp	r1, r3
 8011b44:	bfac      	ite	ge
 8011b46:	ebc6 0301 	rsbge	r3, r6, r1
 8011b4a:	ebc6 0303 	rsblt	r3, r6, r3
 8011b4e:	80a2      	strh	r2, [r4, #4]
 8011b50:	80e3      	strh	r3, [r4, #6]
 8011b52:	e7d4      	b.n	8011afe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011b54:	4620      	mov	r0, r4
 8011b56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011b5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8011b5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011b5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011b62:	b383      	cbz	r3, 8011bc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011b64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011b66:	b374      	cbz	r4, 8011bc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011b68:	f9b1 5000 	ldrsh.w	r5, [r1]
 8011b6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8011b70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8011b74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8011b78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011b7c:	b303      	cbz	r3, 8011bc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011b7e:	4668      	mov	r0, sp
 8011b80:	1d21      	adds	r1, r4, #4
 8011b82:	f8ad 5000 	strh.w	r5, [sp]
 8011b86:	f8ad 6002 	strh.w	r6, [sp, #2]
 8011b8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011b8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8011b92:	f7ff ff43 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8011b96:	4668      	mov	r0, sp
 8011b98:	f7ff ff83 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b9c:	b980      	cbnz	r0, 8011bc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011b9e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011ba2:	4669      	mov	r1, sp
 8011ba4:	88a2      	ldrh	r2, [r4, #4]
 8011ba6:	4620      	mov	r0, r4
 8011ba8:	1a9b      	subs	r3, r3, r2
 8011baa:	88e2      	ldrh	r2, [r4, #6]
 8011bac:	f8ad 3000 	strh.w	r3, [sp]
 8011bb0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011bb4:	1a9b      	subs	r3, r3, r2
 8011bb6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011bba:	6823      	ldr	r3, [r4, #0]
 8011bbc:	689b      	ldr	r3, [r3, #8]
 8011bbe:	4798      	blx	r3
 8011bc0:	69a4      	ldr	r4, [r4, #24]
 8011bc2:	2c00      	cmp	r4, #0
 8011bc4:	d1d8      	bne.n	8011b78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8011bc6:	b002      	add	sp, #8
 8011bc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011bcc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8011bcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011bce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011bd2:	460d      	mov	r5, r1
 8011bd4:	4616      	mov	r6, r2
 8011bd6:	b323      	cbz	r3, 8011c22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011bd8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011bda:	b314      	cbz	r4, 8011c22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011bdc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011be0:	b1eb      	cbz	r3, 8011c1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011be2:	6828      	ldr	r0, [r5, #0]
 8011be4:	466b      	mov	r3, sp
 8011be6:	6869      	ldr	r1, [r5, #4]
 8011be8:	c303      	stmia	r3!, {r0, r1}
 8011bea:	4668      	mov	r0, sp
 8011bec:	1d21      	adds	r1, r4, #4
 8011bee:	f7ff ff15 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8011bf2:	4668      	mov	r0, sp
 8011bf4:	f7ff ff55 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011bf8:	b988      	cbnz	r0, 8011c1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011bfa:	f8bd 3000 	ldrh.w	r3, [sp]
 8011bfe:	4669      	mov	r1, sp
 8011c00:	88a2      	ldrh	r2, [r4, #4]
 8011c02:	4620      	mov	r0, r4
 8011c04:	1a9b      	subs	r3, r3, r2
 8011c06:	88e2      	ldrh	r2, [r4, #6]
 8011c08:	f8ad 3000 	strh.w	r3, [sp]
 8011c0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011c10:	1a9b      	subs	r3, r3, r2
 8011c12:	4632      	mov	r2, r6
 8011c14:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011c18:	6823      	ldr	r3, [r4, #0]
 8011c1a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011c1c:	4798      	blx	r3
 8011c1e:	69a4      	ldr	r4, [r4, #24]
 8011c20:	e7db      	b.n	8011bda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8011c22:	b002      	add	sp, #8
 8011c24:	bd70      	pop	{r4, r5, r6, pc}
	...

08011c28 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv>:
 8011c28:	4b22      	ldr	r3, [pc, #136]	; (8011cb4 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x8c>)
 8011c2a:	b530      	push	{r4, r5, lr}
 8011c2c:	681b      	ldr	r3, [r3, #0]
 8011c2e:	b085      	sub	sp, #20
 8011c30:	699c      	ldr	r4, [r3, #24]
 8011c32:	f7ff fa7b 	bl	801112c <_ZN8touchgfx14transmitActiveEv>
 8011c36:	b110      	cbz	r0, 8011c3e <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x16>
 8011c38:	f7fe fa84 	bl	8010144 <_ZN8touchgfx10OSWrappers9taskYieldEv>
 8011c3c:	e7f9      	b.n	8011c32 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0xa>
 8011c3e:	6823      	ldr	r3, [r4, #0]
 8011c40:	4620      	mov	r0, r4
 8011c42:	689b      	ldr	r3, [r3, #8]
 8011c44:	4798      	blx	r3
 8011c46:	2800      	cmp	r0, #0
 8011c48:	d031      	beq.n	8011cae <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x86>
 8011c4a:	6823      	ldr	r3, [r4, #0]
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	691b      	ldr	r3, [r3, #16]
 8011c50:	4798      	blx	r3
 8011c52:	4602      	mov	r2, r0
 8011c54:	ab02      	add	r3, sp, #8
 8011c56:	6800      	ldr	r0, [r0, #0]
 8011c58:	6851      	ldr	r1, [r2, #4]
 8011c5a:	c303      	stmia	r3!, {r0, r1}
 8011c5c:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 8011c60:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011c64:	4418      	add	r0, r3
 8011c66:	b280      	uxth	r0, r0
 8011c68:	f7ff fa67 	bl	801113a <_ZN8touchgfx19shouldTransferBlockEt>
 8011c6c:	b910      	cbnz	r0, 8011c74 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x4c>
 8011c6e:	f7fe fa69 	bl	8010144 <_ZN8touchgfx10OSWrappers9taskYieldEv>
 8011c72:	e7f3      	b.n	8011c5c <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x34>
 8011c74:	6823      	ldr	r3, [r4, #0]
 8011c76:	a902      	add	r1, sp, #8
 8011c78:	4620      	mov	r0, r4
 8011c7a:	68db      	ldr	r3, [r3, #12]
 8011c7c:	4798      	blx	r3
 8011c7e:	f8bd 500e 	ldrh.w	r5, [sp, #14]
 8011c82:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011c86:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011c8a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011c8e:	9500      	str	r5, [sp, #0]
 8011c90:	f7ff fa5f 	bl	8011152 <_ZN8touchgfx13transmitBlockEPKhtttt>
 8011c94:	6823      	ldr	r3, [r4, #0]
 8011c96:	4620      	mov	r0, r4
 8011c98:	689b      	ldr	r3, [r3, #8]
 8011c9a:	4798      	blx	r3
 8011c9c:	2800      	cmp	r0, #0
 8011c9e:	d0ce      	beq.n	8011c3e <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x16>
 8011ca0:	f7ff fa44 	bl	801112c <_ZN8touchgfx14transmitActiveEv>
 8011ca4:	2800      	cmp	r0, #0
 8011ca6:	d0ca      	beq.n	8011c3e <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x16>
 8011ca8:	f7fe fa4c 	bl	8010144 <_ZN8touchgfx10OSWrappers9taskYieldEv>
 8011cac:	e7f8      	b.n	8011ca0 <_ZN8touchgfx25PartialFrameBufferManager23transmitRemainingBlocksEv+0x78>
 8011cae:	b005      	add	sp, #20
 8011cb0:	bd30      	pop	{r4, r5, pc}
 8011cb2:	bf00      	nop
 8011cb4:	24004a50 	.word	0x24004a50

08011cb8 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv>:
 8011cb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011cba:	4b23      	ldr	r3, [pc, #140]	; (8011d48 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x90>)
 8011cbc:	681b      	ldr	r3, [r3, #0]
 8011cbe:	699c      	ldr	r4, [r3, #24]
 8011cc0:	6823      	ldr	r3, [r4, #0]
 8011cc2:	4620      	mov	r0, r4
 8011cc4:	685b      	ldr	r3, [r3, #4]
 8011cc6:	4798      	blx	r3
 8011cc8:	f7ff fa30 	bl	801112c <_ZN8touchgfx14transmitActiveEv>
 8011ccc:	bb30      	cbnz	r0, 8011d1c <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x64>
 8011cce:	6823      	ldr	r3, [r4, #0]
 8011cd0:	4620      	mov	r0, r4
 8011cd2:	689b      	ldr	r3, [r3, #8]
 8011cd4:	4798      	blx	r3
 8011cd6:	b308      	cbz	r0, 8011d1c <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x64>
 8011cd8:	6823      	ldr	r3, [r4, #0]
 8011cda:	4620      	mov	r0, r4
 8011cdc:	691b      	ldr	r3, [r3, #16]
 8011cde:	4798      	blx	r3
 8011ce0:	4602      	mov	r2, r0
 8011ce2:	ab02      	add	r3, sp, #8
 8011ce4:	6800      	ldr	r0, [r0, #0]
 8011ce6:	6851      	ldr	r1, [r2, #4]
 8011ce8:	c303      	stmia	r3!, {r0, r1}
 8011cea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011cee:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8011cf2:	4418      	add	r0, r3
 8011cf4:	b280      	uxth	r0, r0
 8011cf6:	f7ff fa20 	bl	801113a <_ZN8touchgfx19shouldTransferBlockEt>
 8011cfa:	6823      	ldr	r3, [r4, #0]
 8011cfc:	b180      	cbz	r0, 8011d20 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x68>
 8011cfe:	68db      	ldr	r3, [r3, #12]
 8011d00:	a902      	add	r1, sp, #8
 8011d02:	4620      	mov	r0, r4
 8011d04:	4798      	blx	r3
 8011d06:	f8bd 400e 	ldrh.w	r4, [sp, #14]
 8011d0a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011d0e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011d12:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011d16:	9400      	str	r4, [sp, #0]
 8011d18:	f7ff fa1b 	bl	8011152 <_ZN8touchgfx13transmitBlockEPKhtttt>
 8011d1c:	b004      	add	sp, #16
 8011d1e:	bd10      	pop	{r4, pc}
 8011d20:	695b      	ldr	r3, [r3, #20]
 8011d22:	4620      	mov	r0, r4
 8011d24:	4798      	blx	r3
 8011d26:	2800      	cmp	r0, #0
 8011d28:	d1f8      	bne.n	8011d1c <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x64>
 8011d2a:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 8011d2e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011d32:	4418      	add	r0, r3
 8011d34:	b280      	uxth	r0, r0
 8011d36:	f7ff fa00 	bl	801113a <_ZN8touchgfx19shouldTransferBlockEt>
 8011d3a:	b910      	cbnz	r0, 8011d42 <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x8a>
 8011d3c:	f7fe fa02 	bl	8010144 <_ZN8touchgfx10OSWrappers9taskYieldEv>
 8011d40:	e7f3      	b.n	8011d2a <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x72>
 8011d42:	6823      	ldr	r3, [r4, #0]
 8011d44:	e7db      	b.n	8011cfe <_ZN8touchgfx25PartialFrameBufferManager16tryTransmitBlockEv+0x46>
 8011d46:	bf00      	nop
 8011d48:	24004a50 	.word	0x24004a50

08011d4c <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv>:
 8011d4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011d4e:	4b18      	ldr	r3, [pc, #96]	; (8011db0 <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv+0x64>)
 8011d50:	681b      	ldr	r3, [r3, #0]
 8011d52:	699c      	ldr	r4, [r3, #24]
 8011d54:	6823      	ldr	r3, [r4, #0]
 8011d56:	4620      	mov	r0, r4
 8011d58:	699b      	ldr	r3, [r3, #24]
 8011d5a:	4798      	blx	r3
 8011d5c:	6823      	ldr	r3, [r4, #0]
 8011d5e:	4620      	mov	r0, r4
 8011d60:	689b      	ldr	r3, [r3, #8]
 8011d62:	4798      	blx	r3
 8011d64:	b308      	cbz	r0, 8011daa <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv+0x5e>
 8011d66:	6823      	ldr	r3, [r4, #0]
 8011d68:	4620      	mov	r0, r4
 8011d6a:	691b      	ldr	r3, [r3, #16]
 8011d6c:	4798      	blx	r3
 8011d6e:	4602      	mov	r2, r0
 8011d70:	ab02      	add	r3, sp, #8
 8011d72:	6800      	ldr	r0, [r0, #0]
 8011d74:	6851      	ldr	r1, [r2, #4]
 8011d76:	c303      	stmia	r3!, {r0, r1}
 8011d78:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 8011d7c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011d80:	4418      	add	r0, r3
 8011d82:	b280      	uxth	r0, r0
 8011d84:	f7ff f9d9 	bl	801113a <_ZN8touchgfx19shouldTransferBlockEt>
 8011d88:	b178      	cbz	r0, 8011daa <_ZN8touchgfx25PartialFrameBufferManager23tryTransmitBlockFromIRQEv+0x5e>
 8011d8a:	6823      	ldr	r3, [r4, #0]
 8011d8c:	a902      	add	r1, sp, #8
 8011d8e:	4620      	mov	r0, r4
 8011d90:	68db      	ldr	r3, [r3, #12]
 8011d92:	4798      	blx	r3
 8011d94:	f8bd 400e 	ldrh.w	r4, [sp, #14]
 8011d98:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011d9c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011da0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011da4:	9400      	str	r4, [sp, #0]
 8011da6:	f7ff f9d4 	bl	8011152 <_ZN8touchgfx13transmitBlockEPKhtttt>
 8011daa:	b004      	add	sp, #16
 8011dac:	bd10      	pop	{r4, pc}
 8011dae:	bf00      	nop
 8011db0:	24004a50 	.word	0x24004a50

08011db4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 8011db4:	4770      	bx	lr

08011db6 <_ZN8touchgfx3HAL10FlushCacheEv>:
 8011db6:	4770      	bx	lr

08011db8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8011db8:	6803      	ldr	r3, [r0, #0]
 8011dba:	b513      	push	{r0, r1, r4, lr}
 8011dbc:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011dc0:	2300      	movs	r3, #0
 8011dc2:	e9cd 3300 	strd	r3, r3, [sp]
 8011dc6:	466b      	mov	r3, sp
 8011dc8:	47a0      	blx	r4
 8011dca:	b002      	add	sp, #8
 8011dcc:	bd10      	pop	{r4, pc}

08011dce <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011dce:	2301      	movs	r3, #1
 8011dd0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011dd4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011dd8:	4770      	bx	lr

08011dda <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8011dda:	2301      	movs	r3, #1
 8011ddc:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011de0:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011de4:	4770      	bx	lr

08011de6 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8011de6:	6843      	ldr	r3, [r0, #4]
 8011de8:	2201      	movs	r2, #1
 8011dea:	725a      	strb	r2, [r3, #9]
 8011dec:	6840      	ldr	r0, [r0, #4]
 8011dee:	6803      	ldr	r3, [r0, #0]
 8011df0:	691b      	ldr	r3, [r3, #16]
 8011df2:	4718      	bx	r3

08011df4 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011df4:	6840      	ldr	r0, [r0, #4]
 8011df6:	6803      	ldr	r3, [r0, #0]
 8011df8:	689b      	ldr	r3, [r3, #8]
 8011dfa:	4718      	bx	r3

08011dfc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011dfc:	b530      	push	{r4, r5, lr}
 8011dfe:	b08b      	sub	sp, #44	; 0x2c
 8011e00:	6804      	ldr	r4, [r0, #0]
 8011e02:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8011e06:	9509      	str	r5, [sp, #36]	; 0x24
 8011e08:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011e0c:	9508      	str	r5, [sp, #32]
 8011e0e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011e12:	9507      	str	r5, [sp, #28]
 8011e14:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8011e18:	9506      	str	r5, [sp, #24]
 8011e1a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011e1e:	9505      	str	r5, [sp, #20]
 8011e20:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011e24:	9504      	str	r5, [sp, #16]
 8011e26:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8011e2a:	9503      	str	r5, [sp, #12]
 8011e2c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011e30:	9502      	str	r5, [sp, #8]
 8011e32:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8011e36:	e9cd 3500 	strd	r3, r5, [sp]
 8011e3a:	4613      	mov	r3, r2
 8011e3c:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011e3e:	2200      	movs	r2, #0
 8011e40:	47a0      	blx	r4
 8011e42:	b00b      	add	sp, #44	; 0x2c
 8011e44:	bd30      	pop	{r4, r5, pc}
	...

08011e48 <_ZN8touchgfx3HAL10beginFrameEv>:
 8011e48:	4b04      	ldr	r3, [pc, #16]	; (8011e5c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8011e4a:	781b      	ldrb	r3, [r3, #0]
 8011e4c:	b123      	cbz	r3, 8011e58 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011e4e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8011e52:	f080 0001 	eor.w	r0, r0, #1
 8011e56:	4770      	bx	lr
 8011e58:	2001      	movs	r0, #1
 8011e5a:	4770      	bx	lr
 8011e5c:	24004a4e 	.word	0x24004a4e

08011e60 <_ZN8touchgfx3HAL8endFrameEv>:
 8011e60:	b510      	push	{r4, lr}
 8011e62:	4604      	mov	r4, r0
 8011e64:	6840      	ldr	r0, [r0, #4]
 8011e66:	6803      	ldr	r3, [r0, #0]
 8011e68:	689b      	ldr	r3, [r3, #8]
 8011e6a:	4798      	blx	r3
 8011e6c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8011e70:	b113      	cbz	r3, 8011e78 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8011e72:	2301      	movs	r3, #1
 8011e74:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011e78:	bd10      	pop	{r4, pc}

08011e7a <_ZN8touchgfx3HAL10initializeEv>:
 8011e7a:	b510      	push	{r4, lr}
 8011e7c:	4604      	mov	r4, r0
 8011e7e:	f7fe f8d3 	bl	8010028 <_ZN8touchgfx10OSWrappers10initializeEv>
 8011e82:	f7fd fe2d 	bl	800fae0 <_ZN8touchgfx4GPIO4initEv>
 8011e86:	6860      	ldr	r0, [r4, #4]
 8011e88:	6803      	ldr	r3, [r0, #0]
 8011e8a:	68db      	ldr	r3, [r3, #12]
 8011e8c:	4798      	blx	r3
 8011e8e:	68e0      	ldr	r0, [r4, #12]
 8011e90:	6803      	ldr	r3, [r0, #0]
 8011e92:	689b      	ldr	r3, [r3, #8]
 8011e94:	4798      	blx	r3
 8011e96:	6823      	ldr	r3, [r4, #0]
 8011e98:	4620      	mov	r0, r4
 8011e9a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011e9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ea0:	4718      	bx	r3

08011ea2 <_ZN8touchgfx3HAL9taskEntryEv>:
 8011ea2:	b508      	push	{r3, lr}
 8011ea4:	6803      	ldr	r3, [r0, #0]
 8011ea6:	4604      	mov	r4, r0
 8011ea8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011eac:	4798      	blx	r3
 8011eae:	6823      	ldr	r3, [r4, #0]
 8011eb0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011eb2:	4620      	mov	r0, r4
 8011eb4:	4798      	blx	r3
 8011eb6:	f7fe f92b 	bl	8010110 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8011eba:	6823      	ldr	r3, [r4, #0]
 8011ebc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011ebe:	e7f8      	b.n	8011eb2 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08011ec0 <_ZN8touchgfx3HAL4tickEv>:
 8011ec0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011ec2:	6803      	ldr	r3, [r0, #0]
 8011ec4:	4604      	mov	r4, r0
 8011ec6:	4d5b      	ldr	r5, [pc, #364]	; (8012034 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8011ec8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011ecc:	4798      	blx	r3
 8011ece:	2800      	cmp	r0, #0
 8011ed0:	f000 8095 	beq.w	8011ffe <_ZN8touchgfx3HAL4tickEv+0x13e>
 8011ed4:	2001      	movs	r0, #1
 8011ed6:	2600      	movs	r6, #0
 8011ed8:	f7fd fe0a 	bl	800faf0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011edc:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011ee0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011ee4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011ee8:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8011eec:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011ef0:	b133      	cbz	r3, 8011f00 <_ZN8touchgfx3HAL4tickEv+0x40>
 8011ef2:	6823      	ldr	r3, [r4, #0]
 8011ef4:	4620      	mov	r0, r4
 8011ef6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011efa:	4798      	blx	r3
 8011efc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011f00:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8011f04:	2601      	movs	r6, #1
 8011f06:	6862      	ldr	r2, [r4, #4]
 8011f08:	f083 0301 	eor.w	r3, r3, #1
 8011f0c:	702e      	strb	r6, [r5, #0]
 8011f0e:	7253      	strb	r3, [r2, #9]
 8011f10:	f003 faba 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 8011f14:	6803      	ldr	r3, [r0, #0]
 8011f16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011f18:	4798      	blx	r3
 8011f1a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011f1e:	b90b      	cbnz	r3, 8011f24 <_ZN8touchgfx3HAL4tickEv+0x64>
 8011f20:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8011f24:	f003 fab0 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 8011f28:	6803      	ldr	r3, [r0, #0]
 8011f2a:	695b      	ldr	r3, [r3, #20]
 8011f2c:	4798      	blx	r3
 8011f2e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011f30:	6803      	ldr	r3, [r0, #0]
 8011f32:	691b      	ldr	r3, [r3, #16]
 8011f34:	4798      	blx	r3
 8011f36:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011f3a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011f3e:	3b01      	subs	r3, #1
 8011f40:	b2db      	uxtb	r3, r3
 8011f42:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011f46:	b10a      	cbz	r2, 8011f4c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011f48:	2b00      	cmp	r3, #0
 8011f4a:	d1eb      	bne.n	8011f24 <_ZN8touchgfx3HAL4tickEv+0x64>
 8011f4c:	4a3a      	ldr	r2, [pc, #232]	; (8012038 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011f4e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8011f52:	7813      	ldrb	r3, [r2, #0]
 8011f54:	3301      	adds	r3, #1
 8011f56:	b25b      	sxtb	r3, r3
 8011f58:	4299      	cmp	r1, r3
 8011f5a:	7013      	strb	r3, [r2, #0]
 8011f5c:	dc10      	bgt.n	8011f80 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011f5e:	2300      	movs	r3, #0
 8011f60:	68e0      	ldr	r0, [r4, #12]
 8011f62:	a902      	add	r1, sp, #8
 8011f64:	7013      	strb	r3, [r2, #0]
 8011f66:	aa03      	add	r2, sp, #12
 8011f68:	6803      	ldr	r3, [r0, #0]
 8011f6a:	68db      	ldr	r3, [r3, #12]
 8011f6c:	4798      	blx	r3
 8011f6e:	6823      	ldr	r3, [r4, #0]
 8011f70:	2800      	cmp	r0, #0
 8011f72:	d050      	beq.n	8012016 <_ZN8touchgfx3HAL4tickEv+0x156>
 8011f74:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011f78:	4620      	mov	r0, r4
 8011f7a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011f7e:	4798      	blx	r3
 8011f80:	2300      	movs	r3, #0
 8011f82:	6960      	ldr	r0, [r4, #20]
 8011f84:	f88d 3007 	strb.w	r3, [sp, #7]
 8011f88:	b158      	cbz	r0, 8011fa2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011f8a:	6803      	ldr	r3, [r0, #0]
 8011f8c:	f10d 0107 	add.w	r1, sp, #7
 8011f90:	68db      	ldr	r3, [r3, #12]
 8011f92:	4798      	blx	r3
 8011f94:	b128      	cbz	r0, 8011fa2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011f96:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011f98:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011f9c:	6803      	ldr	r3, [r0, #0]
 8011f9e:	68db      	ldr	r3, [r3, #12]
 8011fa0:	4798      	blx	r3
 8011fa2:	f104 001c 	add.w	r0, r4, #28
 8011fa6:	f013 fe79 	bl	8025c9c <_ZN8touchgfx8Gestures4tickEv>
 8011faa:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011fae:	b30b      	cbz	r3, 8011ff4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8011fb0:	6920      	ldr	r0, [r4, #16]
 8011fb2:	6803      	ldr	r3, [r0, #0]
 8011fb4:	691b      	ldr	r3, [r3, #16]
 8011fb6:	4798      	blx	r3
 8011fb8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011fba:	4606      	mov	r6, r0
 8011fbc:	b903      	cbnz	r3, 8011fc0 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011fbe:	6760      	str	r0, [r4, #116]	; 0x74
 8011fc0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011fc2:	4a1e      	ldr	r2, [pc, #120]	; (801203c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011fc4:	1af3      	subs	r3, r6, r3
 8011fc6:	4293      	cmp	r3, r2
 8011fc8:	d914      	bls.n	8011ff4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8011fca:	6920      	ldr	r0, [r4, #16]
 8011fcc:	6803      	ldr	r3, [r0, #0]
 8011fce:	699b      	ldr	r3, [r3, #24]
 8011fd0:	4798      	blx	r3
 8011fd2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011fd4:	2264      	movs	r2, #100	; 0x64
 8011fd6:	1af3      	subs	r3, r6, r3
 8011fd8:	fbb3 f3f2 	udiv	r3, r3, r2
 8011fdc:	fbb0 f0f3 	udiv	r0, r0, r3
 8011fe0:	2800      	cmp	r0, #0
 8011fe2:	dc1d      	bgt.n	8012020 <_ZN8touchgfx3HAL4tickEv+0x160>
 8011fe4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011fe8:	6920      	ldr	r0, [r4, #16]
 8011fea:	2100      	movs	r1, #0
 8011fec:	6803      	ldr	r3, [r0, #0]
 8011fee:	69db      	ldr	r3, [r3, #28]
 8011ff0:	4798      	blx	r3
 8011ff2:	6766      	str	r6, [r4, #116]	; 0x74
 8011ff4:	f003 fa48 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 8011ff8:	6803      	ldr	r3, [r0, #0]
 8011ffa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011ffc:	4798      	blx	r3
 8011ffe:	6823      	ldr	r3, [r4, #0]
 8012000:	4620      	mov	r0, r4
 8012002:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012006:	4798      	blx	r3
 8012008:	2001      	movs	r0, #1
 801200a:	f7fd fd8d 	bl	800fb28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801200e:	2300      	movs	r3, #0
 8012010:	702b      	strb	r3, [r5, #0]
 8012012:	b004      	add	sp, #16
 8012014:	bd70      	pop	{r4, r5, r6, pc}
 8012016:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801201a:	4620      	mov	r0, r4
 801201c:	4798      	blx	r3
 801201e:	e7af      	b.n	8011f80 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012020:	2863      	cmp	r0, #99	; 0x63
 8012022:	bfcb      	itete	gt
 8012024:	2300      	movgt	r3, #0
 8012026:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801202a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 801202e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8012032:	e7d9      	b.n	8011fe8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8012034:	24004a54 	.word	0x24004a54
 8012038:	24004a55 	.word	0x24004a55
 801203c:	05f5e100 	.word	0x05f5e100

08012040 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012040:	b510      	push	{r4, lr}
 8012042:	4604      	mov	r4, r0
 8012044:	f7fe f818 	bl	8010078 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8012048:	2200      	movs	r2, #0
 801204a:	6863      	ldr	r3, [r4, #4]
 801204c:	729a      	strb	r2, [r3, #10]
 801204e:	bd10      	pop	{r4, pc}

08012050 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8012050:	65c1      	str	r1, [r0, #92]	; 0x5c
 8012052:	301c      	adds	r0, #28
 8012054:	f013 be20 	b.w	8025c98 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012058 <_ZN8touchgfx3HAL5touchEll>:
 8012058:	b530      	push	{r4, r5, lr}
 801205a:	b087      	sub	sp, #28
 801205c:	4604      	mov	r4, r0
 801205e:	a804      	add	r0, sp, #16
 8012060:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8012064:	f002 ffe6 	bl	8015034 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8012068:	9b04      	ldr	r3, [sp, #16]
 801206a:	a906      	add	r1, sp, #24
 801206c:	a803      	add	r0, sp, #12
 801206e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012072:	9b05      	ldr	r3, [sp, #20]
 8012074:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8012078:	f003 f82e 	bl	80150d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801207c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8012080:	f104 001c 	add.w	r0, r4, #28
 8012084:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012088:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801208c:	b189      	cbz	r1, 80120b2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801208e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8012092:	9300      	str	r3, [sp, #0]
 8012094:	4613      	mov	r3, r2
 8012096:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 801209a:	462a      	mov	r2, r5
 801209c:	f013 fe0c 	bl	8025cb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80120a0:	b128      	cbz	r0, 80120ae <_ZN8touchgfx3HAL5touchEll+0x56>
 80120a2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80120a6:	6623      	str	r3, [r4, #96]	; 0x60
 80120a8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80120ac:	6663      	str	r3, [r4, #100]	; 0x64
 80120ae:	b007      	add	sp, #28
 80120b0:	bd30      	pop	{r4, r5, pc}
 80120b2:	f013 fe41 	bl	8025d38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80120b6:	2301      	movs	r3, #1
 80120b8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80120bc:	e7f1      	b.n	80120a2 <_ZN8touchgfx3HAL5touchEll+0x4a>

080120be <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80120be:	b510      	push	{r4, lr}
 80120c0:	2b00      	cmp	r3, #0
 80120c2:	d046      	beq.n	8012152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80120c4:	ea81 0002 	eor.w	r0, r1, r2
 80120c8:	07c4      	lsls	r4, r0, #31
 80120ca:	d508      	bpl.n	80120de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80120cc:	440b      	add	r3, r1
 80120ce:	3a01      	subs	r2, #1
 80120d0:	428b      	cmp	r3, r1
 80120d2:	d93e      	bls.n	8012152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80120d4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80120d8:	f801 0b01 	strb.w	r0, [r1], #1
 80120dc:	e7f8      	b.n	80120d0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80120de:	07d0      	lsls	r0, r2, #31
 80120e0:	bf42      	ittt	mi
 80120e2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80120e6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80120ea:	f801 0b01 	strbmi.w	r0, [r1], #1
 80120ee:	2b01      	cmp	r3, #1
 80120f0:	d911      	bls.n	8012116 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80120f2:	ea81 0402 	eor.w	r4, r1, r2
 80120f6:	4610      	mov	r0, r2
 80120f8:	07a4      	lsls	r4, r4, #30
 80120fa:	d022      	beq.n	8012142 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80120fc:	f023 0401 	bic.w	r4, r3, #1
 8012100:	440c      	add	r4, r1
 8012102:	428c      	cmp	r4, r1
 8012104:	4602      	mov	r2, r0
 8012106:	d904      	bls.n	8012112 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012108:	8812      	ldrh	r2, [r2, #0]
 801210a:	3002      	adds	r0, #2
 801210c:	f821 2b02 	strh.w	r2, [r1], #2
 8012110:	e7f7      	b.n	8012102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8012112:	f003 0301 	and.w	r3, r3, #1
 8012116:	f023 0003 	bic.w	r0, r3, #3
 801211a:	4408      	add	r0, r1
 801211c:	4288      	cmp	r0, r1
 801211e:	4614      	mov	r4, r2
 8012120:	d904      	bls.n	801212c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8012122:	6824      	ldr	r4, [r4, #0]
 8012124:	3204      	adds	r2, #4
 8012126:	f841 4b04 	str.w	r4, [r1], #4
 801212a:	e7f7      	b.n	801211c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 801212c:	f003 0303 	and.w	r3, r3, #3
 8012130:	3a01      	subs	r2, #1
 8012132:	440b      	add	r3, r1
 8012134:	428b      	cmp	r3, r1
 8012136:	d90c      	bls.n	8012152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012138:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801213c:	f801 0b01 	strb.w	r0, [r1], #1
 8012140:	e7f8      	b.n	8012134 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8012142:	0790      	lsls	r0, r2, #30
 8012144:	d0e7      	beq.n	8012116 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012146:	f832 0b02 	ldrh.w	r0, [r2], #2
 801214a:	3b02      	subs	r3, #2
 801214c:	f821 0b02 	strh.w	r0, [r1], #2
 8012150:	e7e1      	b.n	8012116 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012152:	2001      	movs	r0, #1
 8012154:	bd10      	pop	{r4, pc}

08012156 <_ZN8touchgfx3HAL7noTouchEv>:
 8012156:	b510      	push	{r4, lr}
 8012158:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801215c:	4604      	mov	r4, r0
 801215e:	b153      	cbz	r3, 8012176 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8012160:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8012164:	2101      	movs	r1, #1
 8012166:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 801216a:	301c      	adds	r0, #28
 801216c:	f013 fde4 	bl	8025d38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012170:	2300      	movs	r3, #0
 8012172:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8012176:	bd10      	pop	{r4, pc}

08012178 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8012178:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801217c:	b085      	sub	sp, #20
 801217e:	4604      	mov	r4, r0
 8012180:	2000      	movs	r0, #0
 8012182:	4699      	mov	r9, r3
 8012184:	ad04      	add	r5, sp, #16
 8012186:	460f      	mov	r7, r1
 8012188:	4690      	mov	r8, r2
 801218a:	f845 0d04 	str.w	r0, [r5, #-4]!
 801218e:	69a0      	ldr	r0, [r4, #24]
 8012190:	6806      	ldr	r6, [r0, #0]
 8012192:	9501      	str	r5, [sp, #4]
 8012194:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8012198:	9500      	str	r5, [sp, #0]
 801219a:	6835      	ldr	r5, [r6, #0]
 801219c:	47a8      	blx	r5
 801219e:	4d10      	ldr	r5, [pc, #64]	; (80121e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80121a0:	4606      	mov	r6, r0
 80121a2:	f8a5 9000 	strh.w	r9, [r5]
 80121a6:	f7fb f989 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 80121aa:	6803      	ldr	r3, [r0, #0]
 80121ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121ae:	4798      	blx	r3
 80121b0:	b128      	cbz	r0, 80121be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80121b2:	2801      	cmp	r0, #1
 80121b4:	d00b      	beq.n	80121ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80121b6:	4630      	mov	r0, r6
 80121b8:	b005      	add	sp, #20
 80121ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80121be:	882b      	ldrh	r3, [r5, #0]
 80121c0:	fb08 7203 	mla	r2, r8, r3, r7
 80121c4:	9b03      	ldr	r3, [sp, #12]
 80121c6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80121ca:	63e3      	str	r3, [r4, #60]	; 0x3c
 80121cc:	e7f3      	b.n	80121b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80121ce:	882a      	ldrh	r2, [r5, #0]
 80121d0:	9b03      	ldr	r3, [sp, #12]
 80121d2:	fb08 7202 	mla	r2, r8, r2, r7
 80121d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80121da:	1a9a      	subs	r2, r3, r2
 80121dc:	63e2      	str	r2, [r4, #60]	; 0x3c
 80121de:	e7ea      	b.n	80121b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80121e0:	24004a4a 	.word	0x24004a4a

080121e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80121e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80121e6:	b08b      	sub	sp, #44	; 0x2c
 80121e8:	4617      	mov	r7, r2
 80121ea:	4604      	mov	r4, r0
 80121ec:	460e      	mov	r6, r1
 80121ee:	461d      	mov	r5, r3
 80121f0:	f7fb f964 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 80121f4:	6803      	ldr	r3, [r0, #0]
 80121f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121f8:	4798      	blx	r3
 80121fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80121fe:	9007      	str	r0, [sp, #28]
 8012200:	4631      	mov	r1, r6
 8012202:	6822      	ldr	r2, [r4, #0]
 8012204:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012208:	4b0c      	ldr	r3, [pc, #48]	; (801223c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801220a:	4620      	mov	r0, r4
 801220c:	881b      	ldrh	r3, [r3, #0]
 801220e:	9306      	str	r3, [sp, #24]
 8012210:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012214:	9305      	str	r3, [sp, #20]
 8012216:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801221a:	9304      	str	r3, [sp, #16]
 801221c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012220:	9303      	str	r3, [sp, #12]
 8012222:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012226:	9302      	str	r3, [sp, #8]
 8012228:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801222c:	e9cd 5300 	strd	r5, r3, [sp]
 8012230:	463b      	mov	r3, r7
 8012232:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8012234:	2200      	movs	r2, #0
 8012236:	47a8      	blx	r5
 8012238:	b00b      	add	sp, #44	; 0x2c
 801223a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801223c:	24004a4a 	.word	0x24004a4a

08012240 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8012240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012244:	4698      	mov	r8, r3
 8012246:	6803      	ldr	r3, [r0, #0]
 8012248:	b08b      	sub	sp, #44	; 0x2c
 801224a:	4617      	mov	r7, r2
 801224c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801224e:	460e      	mov	r6, r1
 8012250:	4b13      	ldr	r3, [pc, #76]	; (80122a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8012252:	4604      	mov	r4, r0
 8012254:	f8b3 9000 	ldrh.w	r9, [r3]
 8012258:	f7fb f930 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 801225c:	6803      	ldr	r3, [r0, #0]
 801225e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012260:	4798      	blx	r3
 8012262:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012266:	2200      	movs	r2, #0
 8012268:	4631      	mov	r1, r6
 801226a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801226e:	2302      	movs	r3, #2
 8012270:	4620      	mov	r0, r4
 8012272:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8012276:	2301      	movs	r3, #1
 8012278:	9305      	str	r3, [sp, #20]
 801227a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801227e:	9304      	str	r3, [sp, #16]
 8012280:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012284:	9303      	str	r3, [sp, #12]
 8012286:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801228a:	9302      	str	r3, [sp, #8]
 801228c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012290:	e9cd 8300 	strd	r8, r3, [sp]
 8012294:	463b      	mov	r3, r7
 8012296:	47a8      	blx	r5
 8012298:	b00b      	add	sp, #44	; 0x2c
 801229a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801229e:	bf00      	nop
 80122a0:	24004a4a 	.word	0x24004a4a

080122a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80122a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80122a8:	4698      	mov	r8, r3
 80122aa:	6803      	ldr	r3, [r0, #0]
 80122ac:	b087      	sub	sp, #28
 80122ae:	460e      	mov	r6, r1
 80122b0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80122b2:	4617      	mov	r7, r2
 80122b4:	4b0f      	ldr	r3, [pc, #60]	; (80122f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80122b6:	4604      	mov	r4, r0
 80122b8:	f8b3 9000 	ldrh.w	r9, [r3]
 80122bc:	f7fb f8fe 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 80122c0:	6803      	ldr	r3, [r0, #0]
 80122c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80122c4:	4798      	blx	r3
 80122c6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80122ca:	463a      	mov	r2, r7
 80122cc:	4631      	mov	r1, r6
 80122ce:	f8cd 900c 	str.w	r9, [sp, #12]
 80122d2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80122d6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80122da:	4620      	mov	r0, r4
 80122dc:	9302      	str	r3, [sp, #8]
 80122de:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80122e2:	9301      	str	r3, [sp, #4]
 80122e4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80122e8:	9300      	str	r3, [sp, #0]
 80122ea:	4643      	mov	r3, r8
 80122ec:	47a8      	blx	r5
 80122ee:	b007      	add	sp, #28
 80122f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80122f4:	24004a4a 	.word	0x24004a4a

080122f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80122f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122fc:	4604      	mov	r4, r0
 80122fe:	b08f      	sub	sp, #60	; 0x3c
 8012300:	4610      	mov	r0, r2
 8012302:	460d      	mov	r5, r1
 8012304:	4691      	mov	r9, r2
 8012306:	461e      	mov	r6, r3
 8012308:	f006 f8a2 	bl	8018450 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801230c:	2800      	cmp	r0, #0
 801230e:	f000 809d 	beq.w	801244c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8012312:	6823      	ldr	r3, [r4, #0]
 8012314:	4620      	mov	r0, r4
 8012316:	f8df b198 	ldr.w	fp, [pc, #408]	; 80124b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 801231a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801231e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012320:	4798      	blx	r3
 8012322:	6823      	ldr	r3, [r4, #0]
 8012324:	4620      	mov	r0, r4
 8012326:	f8df a18c 	ldr.w	sl, [pc, #396]	; 80124b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801232a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801232c:	4798      	blx	r3
 801232e:	f8bb 3000 	ldrh.w	r3, [fp]
 8012332:	4f5c      	ldr	r7, [pc, #368]	; (80124a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012334:	9301      	str	r3, [sp, #4]
 8012336:	f8ba 3000 	ldrh.w	r3, [sl]
 801233a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801233e:	4640      	mov	r0, r8
 8012340:	9302      	str	r3, [sp, #8]
 8012342:	883b      	ldrh	r3, [r7, #0]
 8012344:	9303      	str	r3, [sp, #12]
 8012346:	4b58      	ldr	r3, [pc, #352]	; (80124a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012348:	881a      	ldrh	r2, [r3, #0]
 801234a:	9305      	str	r3, [sp, #20]
 801234c:	9204      	str	r2, [sp, #16]
 801234e:	f006 f913 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012352:	8038      	strh	r0, [r7, #0]
 8012354:	4640      	mov	r0, r8
 8012356:	f006 f943 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801235a:	9b05      	ldr	r3, [sp, #20]
 801235c:	b280      	uxth	r0, r0
 801235e:	8018      	strh	r0, [r3, #0]
 8012360:	4b52      	ldr	r3, [pc, #328]	; (80124ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8012362:	781b      	ldrb	r3, [r3, #0]
 8012364:	2b00      	cmp	r3, #0
 8012366:	d174      	bne.n	8012452 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8012368:	883b      	ldrh	r3, [r7, #0]
 801236a:	f8aa 0000 	strh.w	r0, [sl]
 801236e:	f8ab 3000 	strh.w	r3, [fp]
 8012372:	4648      	mov	r0, r9
 8012374:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8012378:	f006 f86a 	bl	8018450 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801237c:	2200      	movs	r2, #0
 801237e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8012382:	4611      	mov	r1, r2
 8012384:	4628      	mov	r0, r5
 8012386:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801238a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801238e:	f7fb fe16 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
 8012392:	2301      	movs	r3, #1
 8012394:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8012398:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801239c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80123a0:	2b00      	cmp	r3, #0
 80123a2:	dd5c      	ble.n	801245e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80123a4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80123a8:	2b00      	cmp	r3, #0
 80123aa:	dd58      	ble.n	801245e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80123ac:	462a      	mov	r2, r5
 80123ae:	ab0a      	add	r3, sp, #40	; 0x28
 80123b0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80123b4:	6851      	ldr	r1, [r2, #4]
 80123b6:	c303      	stmia	r3!, {r0, r1}
 80123b8:	4631      	mov	r1, r6
 80123ba:	a80a      	add	r0, sp, #40	; 0x28
 80123bc:	f7ff fb2e 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 80123c0:	4b38      	ldr	r3, [pc, #224]	; (80124a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80123c2:	2100      	movs	r1, #0
 80123c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80123c8:	4b37      	ldr	r3, [pc, #220]	; (80124a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80123ca:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80123ce:	aa0a      	add	r2, sp, #40	; 0x28
 80123d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80123d4:	910c      	str	r1, [sp, #48]	; 0x30
 80123d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80123da:	ab08      	add	r3, sp, #32
 80123dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80123e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80123e4:	4618      	mov	r0, r3
 80123e6:	a90c      	add	r1, sp, #48	; 0x30
 80123e8:	f7ff fb18 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 80123ec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80123ee:	2b00      	cmp	r3, #0
 80123f0:	d13c      	bne.n	801246c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80123f2:	2000      	movs	r0, #0
 80123f4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80123f8:	2600      	movs	r6, #0
 80123fa:	696b      	ldr	r3, [r5, #20]
 80123fc:	a908      	add	r1, sp, #32
 80123fe:	682a      	ldr	r2, [r5, #0]
 8012400:	4628      	mov	r0, r5
 8012402:	9305      	str	r3, [sp, #20]
 8012404:	616e      	str	r6, [r5, #20]
 8012406:	6892      	ldr	r2, [r2, #8]
 8012408:	4790      	blx	r2
 801240a:	9b05      	ldr	r3, [sp, #20]
 801240c:	4652      	mov	r2, sl
 801240e:	4649      	mov	r1, r9
 8012410:	616b      	str	r3, [r5, #20]
 8012412:	4628      	mov	r0, r5
 8012414:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8012418:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801241c:	f7fb fdcf 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
 8012420:	9a01      	ldr	r2, [sp, #4]
 8012422:	4b23      	ldr	r3, [pc, #140]	; (80124b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8012424:	4620      	mov	r0, r4
 8012426:	801a      	strh	r2, [r3, #0]
 8012428:	9a02      	ldr	r2, [sp, #8]
 801242a:	4b22      	ldr	r3, [pc, #136]	; (80124b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 801242c:	801a      	strh	r2, [r3, #0]
 801242e:	9a03      	ldr	r2, [sp, #12]
 8012430:	4b1c      	ldr	r3, [pc, #112]	; (80124a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012432:	801a      	strh	r2, [r3, #0]
 8012434:	4b1c      	ldr	r3, [pc, #112]	; (80124a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012436:	9a04      	ldr	r2, [sp, #16]
 8012438:	801a      	strh	r2, [r3, #0]
 801243a:	6823      	ldr	r3, [r4, #0]
 801243c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8012440:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012442:	4798      	blx	r3
 8012444:	6823      	ldr	r3, [r4, #0]
 8012446:	4620      	mov	r0, r4
 8012448:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801244a:	4798      	blx	r3
 801244c:	b00f      	add	sp, #60	; 0x3c
 801244e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012452:	883b      	ldrh	r3, [r7, #0]
 8012454:	f8ab 0000 	strh.w	r0, [fp]
 8012458:	f8aa 3000 	strh.w	r3, [sl]
 801245c:	e789      	b.n	8012372 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801245e:	462a      	mov	r2, r5
 8012460:	ab0a      	add	r3, sp, #40	; 0x28
 8012462:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012466:	6851      	ldr	r1, [r2, #4]
 8012468:	c303      	stmia	r3!, {r0, r1}
 801246a:	e7a9      	b.n	80123c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801246c:	a807      	add	r0, sp, #28
 801246e:	f006 f9f3 	bl	8018858 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012472:	4606      	mov	r6, r0
 8012474:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8012476:	6803      	ldr	r3, [r0, #0]
 8012478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801247a:	4798      	blx	r3
 801247c:	4286      	cmp	r6, r0
 801247e:	d1b8      	bne.n	80123f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012480:	f7fb f81c 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 8012484:	6803      	ldr	r3, [r0, #0]
 8012486:	4606      	mov	r6, r0
 8012488:	a807      	add	r0, sp, #28
 801248a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801248c:	9305      	str	r3, [sp, #20]
 801248e:	f006 f9e3 	bl	8018858 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012492:	9b05      	ldr	r3, [sp, #20]
 8012494:	4601      	mov	r1, r0
 8012496:	4630      	mov	r0, r6
 8012498:	4798      	blx	r3
 801249a:	f080 0001 	eor.w	r0, r0, #1
 801249e:	b2c0      	uxtb	r0, r0
 80124a0:	e7a8      	b.n	80123f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80124a2:	bf00      	nop
 80124a4:	24004a44 	.word	0x24004a44
 80124a8:	24004a46 	.word	0x24004a46
 80124ac:	24004a48 	.word	0x24004a48
 80124b0:	24004a4a 	.word	0x24004a4a
 80124b4:	24004a4c 	.word	0x24004a4c

080124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80124b8:	4b07      	ldr	r3, [pc, #28]	; (80124d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80124ba:	b510      	push	{r4, lr}
 80124bc:	781b      	ldrb	r3, [r3, #0]
 80124be:	4604      	mov	r4, r0
 80124c0:	b13b      	cbz	r3, 80124d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80124c2:	6803      	ldr	r3, [r0, #0]
 80124c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80124c6:	4798      	blx	r3
 80124c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80124ca:	4283      	cmp	r3, r0
 80124cc:	d101      	bne.n	80124d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80124ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80124d0:	bd10      	pop	{r4, pc}
 80124d2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80124d4:	e7fc      	b.n	80124d0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80124d6:	bf00      	nop
 80124d8:	24004a4e 	.word	0x24004a4e

080124dc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80124dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124e0:	461d      	mov	r5, r3
 80124e2:	b08a      	sub	sp, #40	; 0x28
 80124e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80124e8:	4690      	mov	r8, r2
 80124ea:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80124ee:	2400      	movs	r4, #0
 80124f0:	4607      	mov	r7, r0
 80124f2:	fb06 8505 	mla	r5, r6, r5, r8
 80124f6:	9404      	str	r4, [sp, #16]
 80124f8:	f88d 4020 	strb.w	r4, [sp, #32]
 80124fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012500:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012504:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012508:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801250c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012510:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012514:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012518:	f7ff ffce 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801251c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012520:	6878      	ldr	r0, [r7, #4]
 8012522:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012526:	a901      	add	r1, sp, #4
 8012528:	9505      	str	r5, [sp, #20]
 801252a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801252e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012532:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012536:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 801253a:	6803      	ldr	r3, [r0, #0]
 801253c:	685b      	ldr	r3, [r3, #4]
 801253e:	4798      	blx	r3
 8012540:	b00a      	add	sp, #40	; 0x28
 8012542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012546 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012546:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801254a:	b08b      	sub	sp, #44	; 0x2c
 801254c:	2400      	movs	r4, #0
 801254e:	4691      	mov	r9, r2
 8012550:	461d      	mov	r5, r3
 8012552:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012556:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801255a:	4688      	mov	r8, r1
 801255c:	4607      	mov	r7, r0
 801255e:	9404      	str	r4, [sp, #16]
 8012560:	fb06 9505 	mla	r5, r6, r5, r9
 8012564:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012568:	f7ff ffa6 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801256c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012570:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012574:	6878      	ldr	r0, [r7, #4]
 8012576:	f8ad 3018 	strh.w	r3, [sp, #24]
 801257a:	a901      	add	r1, sp, #4
 801257c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012580:	9505      	str	r5, [sp, #20]
 8012582:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012586:	f8ad 401c 	strh.w	r4, [sp, #28]
 801258a:	f8ad 601e 	strh.w	r6, [sp, #30]
 801258e:	f8cd 8010 	str.w	r8, [sp, #16]
 8012592:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012596:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801259a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801259e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80125a2:	6803      	ldr	r3, [r0, #0]
 80125a4:	685b      	ldr	r3, [r3, #4]
 80125a6:	4798      	blx	r3
 80125a8:	b00b      	add	sp, #44	; 0x2c
 80125aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080125b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80125b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125b4:	b08a      	sub	sp, #40	; 0x28
 80125b6:	4698      	mov	r8, r3
 80125b8:	2300      	movs	r3, #0
 80125ba:	4606      	mov	r6, r0
 80125bc:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80125c0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80125c4:	2d0b      	cmp	r5, #11
 80125c6:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80125ca:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80125ce:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80125d2:	9304      	str	r3, [sp, #16]
 80125d4:	d137      	bne.n	8012646 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 80125d6:	2380      	movs	r3, #128	; 0x80
 80125d8:	f88d 0020 	strb.w	r0, [sp, #32]
 80125dc:	4630      	mov	r0, r6
 80125de:	9203      	str	r2, [sp, #12]
 80125e0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80125e4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80125e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80125ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80125f0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80125f4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80125f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80125fc:	f7ff ff5c 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012600:	2c0b      	cmp	r4, #11
 8012602:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012606:	f8ad 701e 	strh.w	r7, [sp, #30]
 801260a:	bf94      	ite	ls
 801260c:	4b19      	ldrls	r3, [pc, #100]	; (8012674 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801260e:	2100      	movhi	r1, #0
 8012610:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8012614:	bf98      	it	ls
 8012616:	5d19      	ldrbls	r1, [r3, r4]
 8012618:	fb02 8307 	mla	r3, r2, r7, r8
 801261c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012620:	10c9      	asrs	r1, r1, #3
 8012622:	fb01 0003 	mla	r0, r1, r3, r0
 8012626:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801262a:	a901      	add	r1, sp, #4
 801262c:	9005      	str	r0, [sp, #20]
 801262e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012632:	2300      	movs	r3, #0
 8012634:	6870      	ldr	r0, [r6, #4]
 8012636:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801263a:	6803      	ldr	r3, [r0, #0]
 801263c:	685b      	ldr	r3, [r3, #4]
 801263e:	4798      	blx	r3
 8012640:	b00a      	add	sp, #40	; 0x28
 8012642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012646:	2d02      	cmp	r5, #2
 8012648:	d109      	bne.n	801265e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 801264a:	28ff      	cmp	r0, #255	; 0xff
 801264c:	d105      	bne.n	801265a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 801264e:	f1bc 0f00 	cmp.w	ip, #0
 8012652:	bf14      	ite	ne
 8012654:	2340      	movne	r3, #64	; 0x40
 8012656:	2320      	moveq	r3, #32
 8012658:	e7be      	b.n	80125d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801265a:	2340      	movs	r3, #64	; 0x40
 801265c:	e7bc      	b.n	80125d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801265e:	28ff      	cmp	r0, #255	; 0xff
 8012660:	d105      	bne.n	801266e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 8012662:	f1bc 0f00 	cmp.w	ip, #0
 8012666:	bf14      	ite	ne
 8012668:	2304      	movne	r3, #4
 801266a:	2301      	moveq	r3, #1
 801266c:	e7b4      	b.n	80125d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801266e:	2304      	movs	r3, #4
 8012670:	e7b2      	b.n	80125d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012672:	bf00      	nop
 8012674:	08028960 	.word	0x08028960

08012678 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801267c:	b08b      	sub	sp, #44	; 0x2c
 801267e:	461d      	mov	r5, r3
 8012680:	2400      	movs	r4, #0
 8012682:	4688      	mov	r8, r1
 8012684:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8012688:	4693      	mov	fp, r2
 801268a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 801268e:	4607      	mov	r7, r0
 8012690:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012694:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8012698:	9404      	str	r4, [sp, #16]
 801269a:	bf14      	ite	ne
 801269c:	2308      	movne	r3, #8
 801269e:	2302      	moveq	r3, #2
 80126a0:	fb05 b50a 	mla	r5, r5, sl, fp
 80126a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80126a8:	f7ff ff06 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80126ac:	2e0b      	cmp	r6, #11
 80126ae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80126b2:	a901      	add	r1, sp, #4
 80126b4:	bf98      	it	ls
 80126b6:	4b13      	ldrls	r3, [pc, #76]	; (8012704 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80126b8:	f8ad a01e 	strh.w	sl, [sp, #30]
 80126bc:	bf98      	it	ls
 80126be:	5d9c      	ldrbls	r4, [r3, r6]
 80126c0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80126c4:	10e4      	asrs	r4, r4, #3
 80126c6:	f8cd 8010 	str.w	r8, [sp, #16]
 80126ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 80126ce:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80126d2:	fb04 0405 	mla	r4, r4, r5, r0
 80126d6:	6878      	ldr	r0, [r7, #4]
 80126d8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80126dc:	2300      	movs	r3, #0
 80126de:	9405      	str	r4, [sp, #20]
 80126e0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80126e4:	f88d 9020 	strb.w	r9, [sp, #32]
 80126e8:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80126ec:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80126f0:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80126f4:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80126f8:	6803      	ldr	r3, [r0, #0]
 80126fa:	685b      	ldr	r3, [r3, #4]
 80126fc:	4798      	blx	r3
 80126fe:	b00b      	add	sp, #44	; 0x2c
 8012700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012704:	08028960 	.word	0x08028960

08012708 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801270c:	461e      	mov	r6, r3
 801270e:	4b0a      	ldr	r3, [pc, #40]	; (8012738 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012710:	460f      	mov	r7, r1
 8012712:	4690      	mov	r8, r2
 8012714:	881d      	ldrh	r5, [r3, #0]
 8012716:	f7fa fed1 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 801271a:	6803      	ldr	r3, [r0, #0]
 801271c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801271e:	4798      	blx	r3
 8012720:	280b      	cmp	r0, #11
 8012722:	bf96      	itet	ls
 8012724:	4b05      	ldrls	r3, [pc, #20]	; (801273c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012726:	2400      	movhi	r4, #0
 8012728:	5c1c      	ldrbls	r4, [r3, r0]
 801272a:	fb08 7005 	mla	r0, r8, r5, r7
 801272e:	10e4      	asrs	r4, r4, #3
 8012730:	fb04 6000 	mla	r0, r4, r0, r6
 8012734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012738:	24004a4a 	.word	0x24004a4a
 801273c:	08028960 	.word	0x08028960

08012740 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012742:	b08b      	sub	sp, #44	; 0x2c
 8012744:	461f      	mov	r7, r3
 8012746:	4604      	mov	r4, r0
 8012748:	4616      	mov	r6, r2
 801274a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801274e:	2500      	movs	r5, #0
 8012750:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012754:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012758:	9504      	str	r5, [sp, #16]
 801275a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801275e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012762:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012766:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801276a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801276e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012772:	f88d 3020 	strb.w	r3, [sp, #32]
 8012776:	f7ff fe9f 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801277a:	463a      	mov	r2, r7
 801277c:	4631      	mov	r1, r6
 801277e:	4603      	mov	r3, r0
 8012780:	4620      	mov	r0, r4
 8012782:	f7ff ffc1 	bl	8012708 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012786:	4b0e      	ldr	r3, [pc, #56]	; (80127c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8012788:	9005      	str	r0, [sp, #20]
 801278a:	881b      	ldrh	r3, [r3, #0]
 801278c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012790:	f7fa fe94 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 8012794:	6803      	ldr	r3, [r0, #0]
 8012796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012798:	4798      	blx	r3
 801279a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801279c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80127a0:	a901      	add	r1, sp, #4
 80127a2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80127a6:	9304      	str	r3, [sp, #16]
 80127a8:	6860      	ldr	r0, [r4, #4]
 80127aa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80127ae:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80127b2:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80127b6:	6803      	ldr	r3, [r0, #0]
 80127b8:	685b      	ldr	r3, [r3, #4]
 80127ba:	4798      	blx	r3
 80127bc:	b00b      	add	sp, #44	; 0x2c
 80127be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127c0:	24004a4a 	.word	0x24004a4a

080127c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80127c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80127c6:	b08d      	sub	sp, #52	; 0x34
 80127c8:	2501      	movs	r5, #1
 80127ca:	4604      	mov	r4, r0
 80127cc:	466b      	mov	r3, sp
 80127ce:	9503      	str	r5, [sp, #12]
 80127d0:	e883 0006 	stmia.w	r3, {r1, r2}
 80127d4:	2300      	movs	r3, #0
 80127d6:	f8bd 6000 	ldrh.w	r6, [sp]
 80127da:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80127de:	9306      	str	r3, [sp, #24]
 80127e0:	6803      	ldr	r3, [r0, #0]
 80127e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80127e4:	4798      	blx	r3
 80127e6:	463a      	mov	r2, r7
 80127e8:	4631      	mov	r1, r6
 80127ea:	4603      	mov	r3, r0
 80127ec:	4620      	mov	r0, r4
 80127ee:	f7ff ff8b 	bl	8012708 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80127f2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80127f4:	9004      	str	r0, [sp, #16]
 80127f6:	9307      	str	r3, [sp, #28]
 80127f8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80127fc:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012800:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012804:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012808:	4b0e      	ldr	r3, [pc, #56]	; (8012844 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 801280a:	881b      	ldrh	r3, [r3, #0]
 801280c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012810:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012814:	f7fa fe52 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 8012818:	6803      	ldr	r3, [r0, #0]
 801281a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801281c:	4798      	blx	r3
 801281e:	23ff      	movs	r3, #255	; 0xff
 8012820:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012824:	a903      	add	r1, sp, #12
 8012826:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801282a:	6860      	ldr	r0, [r4, #4]
 801282c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012830:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012834:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012838:	6803      	ldr	r3, [r0, #0]
 801283a:	685b      	ldr	r3, [r3, #4]
 801283c:	4798      	blx	r3
 801283e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012840:	b00d      	add	sp, #52	; 0x34
 8012842:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012844:	24004a4a 	.word	0x24004a4a

08012848 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801284c:	b08c      	sub	sp, #48	; 0x30
 801284e:	461e      	mov	r6, r3
 8012850:	2300      	movs	r3, #0
 8012852:	4604      	mov	r4, r0
 8012854:	466d      	mov	r5, sp
 8012856:	9306      	str	r3, [sp, #24]
 8012858:	6803      	ldr	r3, [r0, #0]
 801285a:	e885 0006 	stmia.w	r5, {r1, r2}
 801285e:	2501      	movs	r5, #1
 8012860:	f8bd 7000 	ldrh.w	r7, [sp]
 8012864:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8012868:	9503      	str	r5, [sp, #12]
 801286a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801286c:	4798      	blx	r3
 801286e:	4642      	mov	r2, r8
 8012870:	4639      	mov	r1, r7
 8012872:	4603      	mov	r3, r0
 8012874:	4620      	mov	r0, r4
 8012876:	f7ff ff47 	bl	8012708 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801287a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801287e:	9004      	str	r0, [sp, #16]
 8012880:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012884:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012888:	9607      	str	r6, [sp, #28]
 801288a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801288e:	4b10      	ldr	r3, [pc, #64]	; (80128d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8012890:	881b      	ldrh	r3, [r3, #0]
 8012892:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012896:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012898:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801289c:	f7fa fe0e 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 80128a0:	6803      	ldr	r3, [r0, #0]
 80128a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128a4:	4798      	blx	r3
 80128a6:	23ff      	movs	r3, #255	; 0xff
 80128a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80128ac:	a903      	add	r1, sp, #12
 80128ae:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80128b2:	6860      	ldr	r0, [r4, #4]
 80128b4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80128b8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80128bc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80128c0:	6803      	ldr	r3, [r0, #0]
 80128c2:	685b      	ldr	r3, [r3, #4]
 80128c4:	4798      	blx	r3
 80128c6:	4630      	mov	r0, r6
 80128c8:	b00c      	add	sp, #48	; 0x30
 80128ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80128ce:	bf00      	nop
 80128d0:	24004a4a 	.word	0x24004a4a

080128d4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80128d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128d6:	b085      	sub	sp, #20
 80128d8:	4605      	mov	r5, r0
 80128da:	ac02      	add	r4, sp, #8
 80128dc:	e884 0006 	stmia.w	r4, {r1, r2}
 80128e0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80128e4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80128e8:	f7ff fde6 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80128ec:	4631      	mov	r1, r6
 80128ee:	4603      	mov	r3, r0
 80128f0:	463a      	mov	r2, r7
 80128f2:	4628      	mov	r0, r5
 80128f4:	f7ff ff08 	bl	8012708 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80128f8:	4a05      	ldr	r2, [pc, #20]	; (8012910 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80128fa:	682b      	ldr	r3, [r5, #0]
 80128fc:	8812      	ldrh	r2, [r2, #0]
 80128fe:	9200      	str	r2, [sp, #0]
 8012900:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8012902:	4603      	mov	r3, r0
 8012904:	4628      	mov	r0, r5
 8012906:	e894 0006 	ldmia.w	r4, {r1, r2}
 801290a:	47b0      	blx	r6
 801290c:	b005      	add	sp, #20
 801290e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012910:	24004a4a 	.word	0x24004a4a

08012914 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8012914:	b570      	push	{r4, r5, r6, lr}
 8012916:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801291a:	4604      	mov	r4, r0
 801291c:	b19b      	cbz	r3, 8012946 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801291e:	2002      	movs	r0, #2
 8012920:	f7fd f91e 	bl	800fb60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8012924:	2300      	movs	r3, #0
 8012926:	4620      	mov	r0, r4
 8012928:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801292c:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012930:	6823      	ldr	r3, [r4, #0]
 8012932:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8012936:	f7ff fdbf 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801293a:	4601      	mov	r1, r0
 801293c:	4620      	mov	r0, r4
 801293e:	462b      	mov	r3, r5
 8012940:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012944:	4718      	bx	r3
 8012946:	bd70      	pop	{r4, r5, r6, pc}

08012948 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012948:	b538      	push	{r3, r4, r5, lr}
 801294a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801294e:	4604      	mov	r4, r0
 8012950:	460d      	mov	r5, r1
 8012952:	428b      	cmp	r3, r1
 8012954:	d006      	beq.n	8012964 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8012956:	6803      	ldr	r3, [r0, #0]
 8012958:	b929      	cbnz	r1, 8012966 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801295a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801295e:	4798      	blx	r3
 8012960:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8012964:	bd38      	pop	{r3, r4, r5, pc}
 8012966:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801296a:	e7f8      	b.n	801295e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801296c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801296c:	4b0d      	ldr	r3, [pc, #52]	; (80129a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801296e:	b510      	push	{r4, lr}
 8012970:	781b      	ldrb	r3, [r3, #0]
 8012972:	4604      	mov	r4, r0
 8012974:	b95b      	cbnz	r3, 801298e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012976:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801297a:	2b02      	cmp	r3, #2
 801297c:	d007      	beq.n	801298e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801297e:	6840      	ldr	r0, [r0, #4]
 8012980:	f000 f90e 	bl	8012ba0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8012984:	b118      	cbz	r0, 801298e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012986:	6862      	ldr	r2, [r4, #4]
 8012988:	7a53      	ldrb	r3, [r2, #9]
 801298a:	2b00      	cmp	r3, #0
 801298c:	d0fc      	beq.n	8012988 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801298e:	f7fd fb5d 	bl	801004c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012992:	4620      	mov	r0, r4
 8012994:	2100      	movs	r1, #0
 8012996:	f7ff ffd7 	bl	8012948 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801299a:	4620      	mov	r0, r4
 801299c:	f7ff fd8c 	bl	80124b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80129a0:	bd10      	pop	{r4, pc}
 80129a2:	bf00      	nop
 80129a4:	24004a4e 	.word	0x24004a4e

080129a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
 80129a8:	6803      	ldr	r3, [r0, #0]
 80129aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80129ac:	4718      	bx	r3

080129ae <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80129ae:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80129b2:	1a13      	subs	r3, r2, r0
 80129b4:	4258      	negs	r0, r3
 80129b6:	4158      	adcs	r0, r3
 80129b8:	4770      	bx	lr

080129ba <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80129ba:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80129be:	1a9b      	subs	r3, r3, r2
 80129c0:	2b00      	cmp	r3, #0
 80129c2:	bfdc      	itt	le
 80129c4:	6882      	ldrle	r2, [r0, #8]
 80129c6:	189b      	addle	r3, r3, r2
 80129c8:	2b01      	cmp	r3, #1
 80129ca:	bfcc      	ite	gt
 80129cc:	2000      	movgt	r0, #0
 80129ce:	2001      	movle	r0, #1
 80129d0:	4770      	bx	lr

080129d2 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80129d2:	6902      	ldr	r2, [r0, #16]
 80129d4:	6843      	ldr	r3, [r0, #4]
 80129d6:	2024      	movs	r0, #36	; 0x24
 80129d8:	fb00 3002 	mla	r0, r0, r2, r3
 80129dc:	4770      	bx	lr

080129de <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80129de:	6803      	ldr	r3, [r0, #0]
 80129e0:	691b      	ldr	r3, [r3, #16]
 80129e2:	4718      	bx	r3

080129e4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80129e4:	2301      	movs	r3, #1
 80129e6:	b570      	push	{r4, r5, r6, lr}
 80129e8:	7203      	strb	r3, [r0, #8]
 80129ea:	4604      	mov	r4, r0
 80129ec:	6840      	ldr	r0, [r0, #4]
 80129ee:	6803      	ldr	r3, [r0, #0]
 80129f0:	699b      	ldr	r3, [r3, #24]
 80129f2:	4798      	blx	r3
 80129f4:	6803      	ldr	r3, [r0, #0]
 80129f6:	4605      	mov	r5, r0
 80129f8:	2b40      	cmp	r3, #64	; 0x40
 80129fa:	d00c      	beq.n	8012a16 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80129fc:	d810      	bhi.n	8012a20 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80129fe:	2b04      	cmp	r3, #4
 8012a00:	d01d      	beq.n	8012a3e <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012a02:	d804      	bhi.n	8012a0e <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8012a04:	2b01      	cmp	r3, #1
 8012a06:	d006      	beq.n	8012a16 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012a08:	2b02      	cmp	r3, #2
 8012a0a:	d02c      	beq.n	8012a66 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012a0c:	bd70      	pop	{r4, r5, r6, pc}
 8012a0e:	2b08      	cmp	r3, #8
 8012a10:	d01d      	beq.n	8012a4e <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012a12:	2b20      	cmp	r3, #32
 8012a14:	d1fa      	bne.n	8012a0c <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8012a16:	6823      	ldr	r3, [r4, #0]
 8012a18:	4620      	mov	r0, r4
 8012a1a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012a1c:	4798      	blx	r3
 8012a1e:	e013      	b.n	8012a48 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012a20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8012a24:	d0f7      	beq.n	8012a16 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012a26:	d804      	bhi.n	8012a32 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8012a28:	2b80      	cmp	r3, #128	; 0x80
 8012a2a:	d0f4      	beq.n	8012a16 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012a2c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012a30:	e7f0      	b.n	8012a14 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012a32:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8012a36:	d0ee      	beq.n	8012a16 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012a38:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012a3c:	e7e5      	b.n	8012a0a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012a3e:	6823      	ldr	r3, [r4, #0]
 8012a40:	7f01      	ldrb	r1, [r0, #28]
 8012a42:	4620      	mov	r0, r4
 8012a44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a46:	4798      	blx	r3
 8012a48:	6823      	ldr	r3, [r4, #0]
 8012a4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012a4c:	e006      	b.n	8012a5c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8012a4e:	6823      	ldr	r3, [r4, #0]
 8012a50:	7f01      	ldrb	r1, [r0, #28]
 8012a52:	4620      	mov	r0, r4
 8012a54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a56:	4798      	blx	r3
 8012a58:	6823      	ldr	r3, [r4, #0]
 8012a5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a5c:	4629      	mov	r1, r5
 8012a5e:	4620      	mov	r0, r4
 8012a60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a64:	4718      	bx	r3
 8012a66:	6823      	ldr	r3, [r4, #0]
 8012a68:	4620      	mov	r0, r4
 8012a6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012a6c:	4798      	blx	r3
 8012a6e:	e7f3      	b.n	8012a58 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08012a70 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8012a70:	4770      	bx	lr

08012a72 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8012a72:	4770      	bx	lr

08012a74 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8012a74:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8012a78:	b510      	push	{r4, lr}
 8012a7a:	1ad2      	subs	r2, r2, r3
 8012a7c:	2a00      	cmp	r2, #0
 8012a7e:	bfdc      	itt	le
 8012a80:	6884      	ldrle	r4, [r0, #8]
 8012a82:	1912      	addle	r2, r2, r4
 8012a84:	2a01      	cmp	r2, #1
 8012a86:	dd16      	ble.n	8012ab6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8012a88:	6842      	ldr	r2, [r0, #4]
 8012a8a:	2424      	movs	r4, #36	; 0x24
 8012a8c:	fb04 2303 	mla	r3, r4, r3, r2
 8012a90:	f101 0220 	add.w	r2, r1, #32
 8012a94:	f851 4b04 	ldr.w	r4, [r1], #4
 8012a98:	4291      	cmp	r1, r2
 8012a9a:	f843 4b04 	str.w	r4, [r3], #4
 8012a9e:	d1f9      	bne.n	8012a94 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8012aa0:	780a      	ldrb	r2, [r1, #0]
 8012aa2:	701a      	strb	r2, [r3, #0]
 8012aa4:	68c3      	ldr	r3, [r0, #12]
 8012aa6:	6882      	ldr	r2, [r0, #8]
 8012aa8:	f3bf 8f5b 	dmb	ish
 8012aac:	3301      	adds	r3, #1
 8012aae:	429a      	cmp	r2, r3
 8012ab0:	bfd8      	it	le
 8012ab2:	1a9b      	suble	r3, r3, r2
 8012ab4:	60c3      	str	r3, [r0, #12]
 8012ab6:	bd10      	pop	{r4, pc}

08012ab8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012ab8:	6903      	ldr	r3, [r0, #16]
 8012aba:	6882      	ldr	r2, [r0, #8]
 8012abc:	f3bf 8f5b 	dmb	ish
 8012ac0:	3301      	adds	r3, #1
 8012ac2:	429a      	cmp	r2, r3
 8012ac4:	bfd8      	it	le
 8012ac6:	1a9b      	suble	r3, r3, r2
 8012ac8:	6103      	str	r3, [r0, #16]
 8012aca:	4770      	bx	lr

08012acc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012acc:	b570      	push	{r4, r5, r6, lr}
 8012ace:	4604      	mov	r4, r0
 8012ad0:	460e      	mov	r6, r1
 8012ad2:	6860      	ldr	r0, [r4, #4]
 8012ad4:	6803      	ldr	r3, [r0, #0]
 8012ad6:	685b      	ldr	r3, [r3, #4]
 8012ad8:	4798      	blx	r3
 8012ada:	2800      	cmp	r0, #0
 8012adc:	d1f9      	bne.n	8012ad2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012ade:	4d0d      	ldr	r5, [pc, #52]	; (8012b14 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012ae0:	6828      	ldr	r0, [r5, #0]
 8012ae2:	6803      	ldr	r3, [r0, #0]
 8012ae4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012ae6:	4798      	blx	r3
 8012ae8:	f7fd fad2 	bl	8010090 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012aec:	6828      	ldr	r0, [r5, #0]
 8012aee:	2101      	movs	r1, #1
 8012af0:	f7ff ff2a 	bl	8012948 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012af4:	6860      	ldr	r0, [r4, #4]
 8012af6:	4631      	mov	r1, r6
 8012af8:	6803      	ldr	r3, [r0, #0]
 8012afa:	689b      	ldr	r3, [r3, #8]
 8012afc:	4798      	blx	r3
 8012afe:	6823      	ldr	r3, [r4, #0]
 8012b00:	4620      	mov	r0, r4
 8012b02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b04:	4798      	blx	r3
 8012b06:	6828      	ldr	r0, [r5, #0]
 8012b08:	6803      	ldr	r3, [r0, #0]
 8012b0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b0e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012b10:	4718      	bx	r3
 8012b12:	bf00      	nop
 8012b14:	24004a50 	.word	0x24004a50

08012b18 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012b18:	b508      	push	{r3, lr}
 8012b1a:	f7fd fa97 	bl	801004c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012b1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012b22:	f7fd baa9 	b.w	8010078 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08012b26 <_ZN8touchgfx13DMA_Interface5startEv>:
 8012b26:	b510      	push	{r4, lr}
 8012b28:	4604      	mov	r4, r0
 8012b2a:	6840      	ldr	r0, [r0, #4]
 8012b2c:	6803      	ldr	r3, [r0, #0]
 8012b2e:	681b      	ldr	r3, [r3, #0]
 8012b30:	4798      	blx	r3
 8012b32:	b948      	cbnz	r0, 8012b48 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012b34:	7a63      	ldrb	r3, [r4, #9]
 8012b36:	b13b      	cbz	r3, 8012b48 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012b38:	7a23      	ldrb	r3, [r4, #8]
 8012b3a:	b92b      	cbnz	r3, 8012b48 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012b3c:	6823      	ldr	r3, [r4, #0]
 8012b3e:	4620      	mov	r0, r4
 8012b40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012b42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b46:	4718      	bx	r3
 8012b48:	bd10      	pop	{r4, pc}

08012b4a <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8012b4a:	b570      	push	{r4, r5, r6, lr}
 8012b4c:	4604      	mov	r4, r0
 8012b4e:	6840      	ldr	r0, [r0, #4]
 8012b50:	6803      	ldr	r3, [r0, #0]
 8012b52:	681b      	ldr	r3, [r3, #0]
 8012b54:	4798      	blx	r3
 8012b56:	4605      	mov	r5, r0
 8012b58:	b930      	cbnz	r0, 8012b68 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8012b5a:	7a23      	ldrb	r3, [r4, #8]
 8012b5c:	b123      	cbz	r3, 8012b68 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8012b5e:	6860      	ldr	r0, [r4, #4]
 8012b60:	6803      	ldr	r3, [r0, #0]
 8012b62:	695b      	ldr	r3, [r3, #20]
 8012b64:	4798      	blx	r3
 8012b66:	7225      	strb	r5, [r4, #8]
 8012b68:	6860      	ldr	r0, [r4, #4]
 8012b6a:	6803      	ldr	r3, [r0, #0]
 8012b6c:	681b      	ldr	r3, [r3, #0]
 8012b6e:	4798      	blx	r3
 8012b70:	b928      	cbnz	r0, 8012b7e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8012b72:	6823      	ldr	r3, [r4, #0]
 8012b74:	4620      	mov	r0, r4
 8012b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012b78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b7c:	4718      	bx	r3
 8012b7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b82:	f7fd ba91 	b.w	80100a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08012b88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8012b88:	b510      	push	{r4, lr}
 8012b8a:	6082      	str	r2, [r0, #8]
 8012b8c:	2200      	movs	r2, #0
 8012b8e:	4c03      	ldr	r4, [pc, #12]	; (8012b9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8012b90:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8012b94:	e9c0 4100 	strd	r4, r1, [r0]
 8012b98:	bd10      	pop	{r4, pc}
 8012b9a:	bf00      	nop
 8012b9c:	08028a9c 	.word	0x08028a9c

08012ba0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012ba0:	6840      	ldr	r0, [r0, #4]
 8012ba2:	6803      	ldr	r3, [r0, #0]
 8012ba4:	681b      	ldr	r3, [r3, #0]
 8012ba6:	4718      	bx	r3

08012ba8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012ba8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012bac:	4770      	bx	lr

08012bae <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012bae:	b510      	push	{r4, lr}
 8012bb0:	4604      	mov	r4, r0
 8012bb2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012bb4:	b150      	cbz	r0, 8012bcc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012bb6:	6803      	ldr	r3, [r0, #0]
 8012bb8:	68db      	ldr	r3, [r3, #12]
 8012bba:	4798      	blx	r3
 8012bbc:	b130      	cbz	r0, 8012bcc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012bbe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012bc0:	4621      	mov	r1, r4
 8012bc2:	6803      	ldr	r3, [r0, #0]
 8012bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bc8:	689b      	ldr	r3, [r3, #8]
 8012bca:	4718      	bx	r3
 8012bcc:	bd10      	pop	{r4, pc}

08012bce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8012bce:	790b      	ldrb	r3, [r1, #4]
 8012bd0:	2b00      	cmp	r3, #0
 8012bd2:	bf0c      	ite	eq
 8012bd4:	2301      	moveq	r3, #1
 8012bd6:	2300      	movne	r3, #0
 8012bd8:	b570      	push	{r4, r5, r6, lr}
 8012bda:	4604      	mov	r4, r0
 8012bdc:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8012be0:	460e      	mov	r6, r1
 8012be2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012be6:	d109      	bne.n	8012bfc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8012be8:	b14d      	cbz	r5, 8012bfe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8012bea:	7933      	ldrb	r3, [r6, #4]
 8012bec:	2b01      	cmp	r3, #1
 8012bee:	d10c      	bne.n	8012c0a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8012bf0:	6823      	ldr	r3, [r4, #0]
 8012bf2:	4620      	mov	r0, r4
 8012bf4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012bf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012bfa:	4718      	bx	r3
 8012bfc:	b12d      	cbz	r5, 8012c0a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8012bfe:	6823      	ldr	r3, [r4, #0]
 8012c00:	4620      	mov	r0, r4
 8012c02:	695b      	ldr	r3, [r3, #20]
 8012c04:	4798      	blx	r3
 8012c06:	2d00      	cmp	r5, #0
 8012c08:	d1ef      	bne.n	8012bea <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8012c0a:	bd70      	pop	{r4, r5, r6, pc}

08012c0c <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012c0c:	b508      	push	{r3, lr}
 8012c0e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8012c12:	b10b      	cbz	r3, 8012c18 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 8012c14:	f7fb f976 	bl	800df04 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012c18:	bd08      	pop	{r3, pc}

08012c1a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 8012c1a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012c1e:	4770      	bx	lr

08012c20 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8012c20:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8012c24:	4770      	bx	lr

08012c26 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8012c26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c28:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012c2c:	b085      	sub	sp, #20
 8012c2e:	4604      	mov	r4, r0
 8012c30:	460d      	mov	r5, r1
 8012c32:	2bff      	cmp	r3, #255	; 0xff
 8012c34:	d128      	bne.n	8012c88 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8012c36:	f101 0626 	add.w	r6, r1, #38	; 0x26
 8012c3a:	4668      	mov	r0, sp
 8012c3c:	4631      	mov	r1, r6
 8012c3e:	f005 fd03 	bl	8018648 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012c42:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 8012c46:	4630      	mov	r0, r6
 8012c48:	f005 fc96 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012c4c:	4287      	cmp	r7, r0
 8012c4e:	d11b      	bne.n	8012c88 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8012c50:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8012c54:	4630      	mov	r0, r6
 8012c56:	f005 fcc3 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012c5a:	4287      	cmp	r7, r0
 8012c5c:	d114      	bne.n	8012c88 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8012c5e:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8012c62:	2100      	movs	r1, #0
 8012c64:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8012c68:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012c6c:	466b      	mov	r3, sp
 8012c6e:	9102      	str	r1, [sp, #8]
 8012c70:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012c74:	cb03      	ldmia	r3!, {r0, r1}
 8012c76:	6020      	str	r0, [r4, #0]
 8012c78:	4620      	mov	r0, r4
 8012c7a:	6061      	str	r1, [r4, #4]
 8012c7c:	4619      	mov	r1, r3
 8012c7e:	f7fe fecd 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8012c82:	4620      	mov	r0, r4
 8012c84:	b005      	add	sp, #20
 8012c86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c88:	2300      	movs	r3, #0
 8012c8a:	8023      	strh	r3, [r4, #0]
 8012c8c:	8063      	strh	r3, [r4, #2]
 8012c8e:	80a3      	strh	r3, [r4, #4]
 8012c90:	80e3      	strh	r3, [r4, #6]
 8012c92:	e7f6      	b.n	8012c82 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

08012c94 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8012c94:	b538      	push	{r3, r4, r5, lr}
 8012c96:	2300      	movs	r3, #0
 8012c98:	2501      	movs	r5, #1
 8012c9a:	4604      	mov	r4, r0
 8012c9c:	8083      	strh	r3, [r0, #4]
 8012c9e:	80c3      	strh	r3, [r0, #6]
 8012ca0:	8103      	strh	r3, [r0, #8]
 8012ca2:	8143      	strh	r3, [r0, #10]
 8012ca4:	8183      	strh	r3, [r0, #12]
 8012ca6:	81c3      	strh	r3, [r0, #14]
 8012ca8:	8203      	strh	r3, [r0, #16]
 8012caa:	8243      	strh	r3, [r0, #18]
 8012cac:	61c3      	str	r3, [r0, #28]
 8012cae:	8403      	strh	r3, [r0, #32]
 8012cb0:	8443      	strh	r3, [r0, #34]	; 0x22
 8012cb2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8012cb6:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 8012cba:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012cbe:	4b07      	ldr	r3, [pc, #28]	; (8012cdc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 8012cc0:	6003      	str	r3, [r0, #0]
 8012cc2:	880b      	ldrh	r3, [r1, #0]
 8012cc4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012cc6:	23ff      	movs	r3, #255	; 0xff
 8012cc8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012ccc:	f000 fe8e 	bl	80139ec <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012cd0:	4b03      	ldr	r3, [pc, #12]	; (8012ce0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8012cd2:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8012cd6:	4620      	mov	r0, r4
 8012cd8:	6023      	str	r3, [r4, #0]
 8012cda:	bd38      	pop	{r3, r4, r5, pc}
 8012cdc:	08028da0 	.word	0x08028da0
 8012ce0:	08028b30 	.word	0x08028b30

08012ce4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8012ce4:	4603      	mov	r3, r0
 8012ce6:	3026      	adds	r0, #38	; 0x26
 8012ce8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8012cec:	b90b      	cbnz	r3, 8012cf2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8012cee:	f003 bd83 	b.w	80167f8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8012cf2:	f003 bd91 	b.w	8016818 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08012cf8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8012cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cfc:	4604      	mov	r4, r0
 8012cfe:	b0b3      	sub	sp, #204	; 0xcc
 8012d00:	469b      	mov	fp, r3
 8012d02:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8012d06:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012d0a:	2500      	movs	r5, #0
 8012d0c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8012d10:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 8012d14:	ab11      	add	r3, sp, #68	; 0x44
 8012d16:	9206      	str	r2, [sp, #24]
 8012d18:	4618      	mov	r0, r3
 8012d1a:	9511      	str	r5, [sp, #68]	; 0x44
 8012d1c:	9307      	str	r3, [sp, #28]
 8012d1e:	ad13      	add	r5, sp, #76	; 0x4c
 8012d20:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 8012d24:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 8012d28:	f7fe fe78 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8012d2c:	9b07      	ldr	r3, [sp, #28]
 8012d2e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012d32:	e885 0003 	stmia.w	r5, {r0, r1}
 8012d36:	6821      	ldr	r1, [r4, #0]
 8012d38:	4620      	mov	r0, r4
 8012d3a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8012d3c:	4629      	mov	r1, r5
 8012d3e:	47b0      	blx	r6
 8012d40:	4621      	mov	r1, r4
 8012d42:	a815      	add	r0, sp, #84	; 0x54
 8012d44:	1d26      	adds	r6, r4, #4
 8012d46:	f003 fcb3 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012d4a:	a815      	add	r0, sp, #84	; 0x54
 8012d4c:	f002 f9f2 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d50:	9b07      	ldr	r3, [sp, #28]
 8012d52:	4631      	mov	r1, r6
 8012d54:	4618      	mov	r0, r3
 8012d56:	f002 fa31 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d5a:	4628      	mov	r0, r5
 8012d5c:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8012d60:	f002 f9e8 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d64:	4628      	mov	r0, r5
 8012d66:	f005 fcf3 	bl	8018750 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012d6a:	9007      	str	r0, [sp, #28]
 8012d6c:	2800      	cmp	r0, #0
 8012d6e:	f000 80ce 	beq.w	8012f0e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 8012d72:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012d76:	a809      	add	r0, sp, #36	; 0x24
 8012d78:	f8db 1000 	ldr.w	r1, [fp]
 8012d7c:	920c      	str	r2, [sp, #48]	; 0x30
 8012d7e:	f8da 2000 	ldr.w	r2, [sl]
 8012d82:	9109      	str	r1, [sp, #36]	; 0x24
 8012d84:	920d      	str	r2, [sp, #52]	; 0x34
 8012d86:	f8da 2004 	ldr.w	r2, [sl, #4]
 8012d8a:	f8db 1004 	ldr.w	r1, [fp, #4]
 8012d8e:	920e      	str	r2, [sp, #56]	; 0x38
 8012d90:	f8da 2008 	ldr.w	r2, [sl, #8]
 8012d94:	910a      	str	r1, [sp, #40]	; 0x28
 8012d96:	920f      	str	r2, [sp, #60]	; 0x3c
 8012d98:	f8db 1008 	ldr.w	r1, [fp, #8]
 8012d9c:	f8da 200c 	ldr.w	r2, [sl, #12]
 8012da0:	910b      	str	r1, [sp, #44]	; 0x2c
 8012da2:	a90d      	add	r1, sp, #52	; 0x34
 8012da4:	9210      	str	r2, [sp, #64]	; 0x40
 8012da6:	4632      	mov	r2, r6
 8012da8:	f002 f9ec 	bl	8015184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012dac:	4632      	mov	r2, r6
 8012dae:	a90e      	add	r1, sp, #56	; 0x38
 8012db0:	a80a      	add	r0, sp, #40	; 0x28
 8012db2:	f002 f9e7 	bl	8015184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012db6:	4632      	mov	r2, r6
 8012db8:	a90f      	add	r1, sp, #60	; 0x3c
 8012dba:	a80b      	add	r0, sp, #44	; 0x2c
 8012dbc:	f002 f9e2 	bl	8015184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012dc0:	4632      	mov	r2, r6
 8012dc2:	a910      	add	r1, sp, #64	; 0x40
 8012dc4:	a80c      	add	r0, sp, #48	; 0x30
 8012dc6:	f002 f9dd 	bl	8015184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8012dca:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8012dce:	ed97 3a00 	vldr	s6, [r7]
 8012dd2:	eef0 6a67 	vmov.f32	s13, s15
 8012dd6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8012dda:	edd7 4a01 	vldr	s9, [r7, #4]
 8012dde:	eeb0 7a67 	vmov.f32	s14, s15
 8012de2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8012de6:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8012dea:	ed99 2a00 	vldr	s4, [r9]
 8012dee:	eeb0 6a67 	vmov.f32	s12, s15
 8012df2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8012df6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8012dfa:	edd8 2a00 	vldr	s5, [r8]
 8012dfe:	edd9 3a01 	vldr	s7, [r9, #4]
 8012e02:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012e06:	ed98 4a01 	vldr	s8, [r8, #4]
 8012e0a:	ed99 5a02 	vldr	s10, [r9, #8]
 8012e0e:	edd8 5a02 	vldr	s11, [r8, #8]
 8012e12:	ee16 6a10 	vmov	r6, s12
 8012e16:	eeb0 6a67 	vmov.f32	s12, s15
 8012e1a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8012e1e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8012e22:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012e26:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8012e2a:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8012e2e:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 8012e32:	ee16 0a10 	vmov	r0, s12
 8012e36:	eeb0 6a67 	vmov.f32	s12, s15
 8012e3a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8012e3e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 8012e42:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012e46:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 8012e4a:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8012e4e:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 8012e52:	ee16 1a10 	vmov	r1, s12
 8012e56:	eeb0 6a67 	vmov.f32	s12, s15
 8012e5a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8012e5e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 8012e62:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012e66:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 8012e6a:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8012e6e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8012e72:	68ff      	ldr	r7, [r7, #12]
 8012e74:	ee16 2a10 	vmov	r2, s12
 8012e78:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8012e7c:	9624      	str	r6, [sp, #144]	; 0x90
 8012e7e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8012e82:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8012e86:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8012e8a:	4628      	mov	r0, r5
 8012e8c:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 8012e90:	9b06      	ldr	r3, [sp, #24]
 8012e92:	922d      	str	r2, [sp, #180]	; 0xb4
 8012e94:	4a1f      	ldr	r2, [pc, #124]	; (8012f14 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 8012e96:	9317      	str	r3, [sp, #92]	; 0x5c
 8012e98:	8812      	ldrh	r2, [r2, #0]
 8012e9a:	9b07      	ldr	r3, [sp, #28]
 8012e9c:	9218      	str	r2, [sp, #96]	; 0x60
 8012e9e:	9319      	str	r3, [sp, #100]	; 0x64
 8012ea0:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 8012ea4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8012ea8:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8012eac:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8012eb0:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8012eb4:	9731      	str	r7, [sp, #196]	; 0xc4
 8012eb6:	f005 fc7b 	bl	80187b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8012eba:	901a      	str	r0, [sp, #104]	; 0x68
 8012ebc:	4628      	mov	r0, r5
 8012ebe:	f005 fb5b 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ec2:	901b      	str	r0, [sp, #108]	; 0x6c
 8012ec4:	4628      	mov	r0, r5
 8012ec6:	f005 fb8b 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012eca:	901c      	str	r0, [sp, #112]	; 0x70
 8012ecc:	4628      	mov	r0, r5
 8012ece:	f005 fb53 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ed2:	4b11      	ldr	r3, [pc, #68]	; (8012f18 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 8012ed4:	901d      	str	r0, [sp, #116]	; 0x74
 8012ed6:	681b      	ldr	r3, [r3, #0]
 8012ed8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012edc:	b10a      	cbz	r2, 8012ee2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 8012ede:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8012ee0:	b905      	cbnz	r5, 8012ee4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 8012ee2:	689d      	ldr	r5, [r3, #8]
 8012ee4:	682b      	ldr	r3, [r5, #0]
 8012ee6:	4620      	mov	r0, r4
 8012ee8:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 8012eea:	f7ff fefb 	bl	8012ce4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 8012eee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012ef2:	aa1e      	add	r2, sp, #120	; 0x78
 8012ef4:	a917      	add	r1, sp, #92	; 0x5c
 8012ef6:	9304      	str	r3, [sp, #16]
 8012ef8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012efc:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8012f00:	ab13      	add	r3, sp, #76	; 0x4c
 8012f02:	4628      	mov	r0, r5
 8012f04:	9301      	str	r3, [sp, #4]
 8012f06:	ab15      	add	r3, sp, #84	; 0x54
 8012f08:	9300      	str	r3, [sp, #0]
 8012f0a:	ab19      	add	r3, sp, #100	; 0x64
 8012f0c:	47b0      	blx	r6
 8012f0e:	b033      	add	sp, #204	; 0xcc
 8012f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f14:	24004a4a 	.word	0x24004a4a
 8012f18:	24004a50 	.word	0x24004a50

08012f1c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8012f1c:	b570      	push	{r4, r5, r6, lr}
 8012f1e:	ed2d 8b04 	vpush	{d8-d9}
 8012f22:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8012f26:	b098      	sub	sp, #96	; 0x60
 8012f28:	4604      	mov	r4, r0
 8012f2a:	460e      	mov	r6, r1
 8012f2c:	2b00      	cmp	r3, #0
 8012f2e:	d065      	beq.n	8012ffc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 8012f30:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012f34:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8012f38:	ed9f 8a37 	vldr	s16, [pc, #220]	; 8013018 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 8012f3c:	ee09 3a10 	vmov	s18, r3
 8012f40:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012f44:	4628      	mov	r0, r5
 8012f46:	ee08 3a90 	vmov	s17, r3
 8012f4a:	4b34      	ldr	r3, [pc, #208]	; (801301c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8012f4c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8012f50:	930c      	str	r3, [sp, #48]	; 0x30
 8012f52:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8012f56:	930d      	str	r3, [sp, #52]	; 0x34
 8012f58:	930e      	str	r3, [sp, #56]	; 0x38
 8012f5a:	ee39 9a08 	vadd.f32	s18, s18, s16
 8012f5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8012f60:	f005 fb0a 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012f64:	ee07 0a90 	vmov	s15, r0
 8012f68:	4628      	mov	r0, r5
 8012f6a:	ee78 8a88 	vadd.f32	s17, s17, s16
 8012f6e:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 8012f72:	f005 fb35 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012f76:	4b2a      	ldr	r3, [pc, #168]	; (8013020 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 8012f78:	ee07 0a90 	vmov	s15, r0
 8012f7c:	781b      	ldrb	r3, [r3, #0]
 8012f7e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012f82:	eef0 7a48 	vmov.f32	s15, s16
 8012f86:	2b01      	cmp	r3, #1
 8012f88:	d13c      	bne.n	8013004 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 8012f8a:	eef0 6a69 	vmov.f32	s13, s19
 8012f8e:	ee19 3a90 	vmov	r3, s19
 8012f92:	eeb0 6a47 	vmov.f32	s12, s14
 8012f96:	eef0 5a47 	vmov.f32	s11, s14
 8012f9a:	eef0 9a48 	vmov.f32	s19, s16
 8012f9e:	eeb0 7a48 	vmov.f32	s14, s16
 8012fa2:	9314      	str	r3, [sp, #80]	; 0x50
 8012fa4:	ab14      	add	r3, sp, #80	; 0x50
 8012fa6:	2200      	movs	r2, #0
 8012fa8:	4631      	mov	r1, r6
 8012faa:	9303      	str	r3, [sp, #12]
 8012fac:	ab10      	add	r3, sp, #64	; 0x40
 8012fae:	4620      	mov	r0, r4
 8012fb0:	edcd 7a04 	vstr	s15, [sp, #16]
 8012fb4:	9302      	str	r3, [sp, #8]
 8012fb6:	ab0c      	add	r3, sp, #48	; 0x30
 8012fb8:	ed8d 9a05 	vstr	s18, [sp, #20]
 8012fbc:	9301      	str	r3, [sp, #4]
 8012fbe:	ab08      	add	r3, sp, #32
 8012fc0:	ed8d 9a06 	vstr	s18, [sp, #24]
 8012fc4:	9300      	str	r3, [sp, #0]
 8012fc6:	ab04      	add	r3, sp, #16
 8012fc8:	edcd 7a07 	vstr	s15, [sp, #28]
 8012fcc:	edcd 7a08 	vstr	s15, [sp, #32]
 8012fd0:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 8012fd4:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 8012fd8:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 8012fdc:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8012fe0:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 8012fe4:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 8012fe8:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8012fec:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8012ff0:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 8012ff4:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 8012ff8:	f7ff fe7e 	bl	8012cf8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8012ffc:	b018      	add	sp, #96	; 0x60
 8012ffe:	ecbd 8b04 	vpop	{d8-d9}
 8013002:	bd70      	pop	{r4, r5, r6, pc}
 8013004:	eef0 6a47 	vmov.f32	s13, s14
 8013008:	ee18 3a10 	vmov	r3, s16
 801300c:	eef0 5a69 	vmov.f32	s11, s19
 8013010:	eeb0 6a48 	vmov.f32	s12, s16
 8013014:	e7c5      	b.n	8012fa2 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 8013016:	bf00      	nop
 8013018:	00000000 	.word	0x00000000
 801301c:	42c80000 	.word	0x42c80000
 8013020:	24004a48 	.word	0x24004a48

08013024 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013024:	2000      	movs	r0, #0
 8013026:	4770      	bx	lr

08013028 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8013028:	4b07      	ldr	r3, [pc, #28]	; (8013048 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801302a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801302c:	881b      	ldrh	r3, [r3, #0]
 801302e:	4293      	cmp	r3, r2
 8013030:	bf81      	itttt	hi
 8013032:	4b06      	ldrhi	r3, [pc, #24]	; (801304c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013034:	681b      	ldrhi	r3, [r3, #0]
 8013036:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801303a:	7858      	ldrbhi	r0, [r3, #1]
 801303c:	bf8c      	ite	hi
 801303e:	f000 0003 	andhi.w	r0, r0, #3
 8013042:	2000      	movls	r0, #0
 8013044:	4770      	bx	lr
 8013046:	bf00      	nop
 8013048:	24004aa4 	.word	0x24004aa4
 801304c:	24004aa0 	.word	0x24004aa0

08013050 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013050:	4b11      	ldr	r3, [pc, #68]	; (8013098 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8013052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013056:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013058:	4604      	mov	r4, r0
 801305a:	881b      	ldrh	r3, [r3, #0]
 801305c:	428b      	cmp	r3, r1
 801305e:	d918      	bls.n	8013092 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8013060:	6803      	ldr	r3, [r0, #0]
 8013062:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8013064:	4b0d      	ldr	r3, [pc, #52]	; (801309c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8013066:	6818      	ldr	r0, [r3, #0]
 8013068:	f7fc fa1e 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 801306c:	6823      	ldr	r3, [r4, #0]
 801306e:	4606      	mov	r6, r0
 8013070:	4620      	mov	r0, r4
 8013072:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013074:	4798      	blx	r3
 8013076:	6823      	ldr	r3, [r4, #0]
 8013078:	4607      	mov	r7, r0
 801307a:	4620      	mov	r0, r4
 801307c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013080:	4798      	blx	r3
 8013082:	463a      	mov	r2, r7
 8013084:	4603      	mov	r3, r0
 8013086:	4631      	mov	r1, r6
 8013088:	4620      	mov	r0, r4
 801308a:	46ac      	mov	ip, r5
 801308c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013090:	4760      	bx	ip
 8013092:	2000      	movs	r0, #0
 8013094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013098:	24004aa4 	.word	0x24004aa4
 801309c:	24004aac 	.word	0x24004aac

080130a0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80130a0:	4b18      	ldr	r3, [pc, #96]	; (8013104 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80130a2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80130a6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80130a8:	4604      	mov	r4, r0
 80130aa:	881b      	ldrh	r3, [r3, #0]
 80130ac:	428b      	cmp	r3, r1
 80130ae:	d926      	bls.n	80130fe <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80130b0:	4b15      	ldr	r3, [pc, #84]	; (8013108 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80130b2:	681b      	ldr	r3, [r3, #0]
 80130b4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80130b8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80130bc:	4b13      	ldr	r3, [pc, #76]	; (801310c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80130be:	7855      	ldrb	r5, [r2, #1]
 80130c0:	681b      	ldr	r3, [r3, #0]
 80130c2:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80130c6:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80130ca:	6833      	ldr	r3, [r6, #0]
 80130cc:	69df      	ldr	r7, [r3, #28]
 80130ce:	4b10      	ldr	r3, [pc, #64]	; (8013110 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80130d0:	6818      	ldr	r0, [r3, #0]
 80130d2:	f7fc f9e9 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 80130d6:	6823      	ldr	r3, [r4, #0]
 80130d8:	4680      	mov	r8, r0
 80130da:	4620      	mov	r0, r4
 80130dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80130de:	4798      	blx	r3
 80130e0:	6823      	ldr	r3, [r4, #0]
 80130e2:	4681      	mov	r9, r0
 80130e4:	4620      	mov	r0, r4
 80130e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130ea:	4798      	blx	r3
 80130ec:	464b      	mov	r3, r9
 80130ee:	9000      	str	r0, [sp, #0]
 80130f0:	4642      	mov	r2, r8
 80130f2:	4629      	mov	r1, r5
 80130f4:	4630      	mov	r0, r6
 80130f6:	47b8      	blx	r7
 80130f8:	b003      	add	sp, #12
 80130fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80130fe:	2000      	movs	r0, #0
 8013100:	e7fa      	b.n	80130f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8013102:	bf00      	nop
 8013104:	24004aa4 	.word	0x24004aa4
 8013108:	24004aa0 	.word	0x24004aa0
 801310c:	24004aa8 	.word	0x24004aa8
 8013110:	24004aac 	.word	0x24004aac

08013114 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8013114:	b40e      	push	{r1, r2, r3}
 8013116:	4b30      	ldr	r3, [pc, #192]	; (80131d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013118:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801311c:	881a      	ldrh	r2, [r3, #0]
 801311e:	b09d      	sub	sp, #116	; 0x74
 8013120:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013122:	4604      	mov	r4, r0
 8013124:	429a      	cmp	r2, r3
 8013126:	d954      	bls.n	80131d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013128:	aa26      	add	r2, sp, #152	; 0x98
 801312a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80131dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801312e:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80131e0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8013132:	9202      	str	r2, [sp, #8]
 8013134:	f8d9 2000 	ldr.w	r2, [r9]
 8013138:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801313c:	f8d8 3000 	ldr.w	r3, [r8]
 8013140:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013144:	682b      	ldr	r3, [r5, #0]
 8013146:	4628      	mov	r0, r5
 8013148:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801314a:	4798      	blx	r3
 801314c:	4606      	mov	r6, r0
 801314e:	b207      	sxth	r7, r0
 8013150:	a803      	add	r0, sp, #12
 8013152:	f003 fe85 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 8013156:	682b      	ldr	r3, [r5, #0]
 8013158:	4628      	mov	r0, r5
 801315a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801315c:	4798      	blx	r3
 801315e:	682b      	ldr	r3, [r5, #0]
 8013160:	4682      	mov	sl, r0
 8013162:	4628      	mov	r0, r5
 8013164:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013166:	4798      	blx	r3
 8013168:	4653      	mov	r3, sl
 801316a:	9000      	str	r0, [sp, #0]
 801316c:	a803      	add	r0, sp, #12
 801316e:	9a02      	ldr	r2, [sp, #8]
 8013170:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013172:	f003 fed0 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013176:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013178:	f8d9 3000 	ldr.w	r3, [r9]
 801317c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8013180:	8925      	ldrh	r5, [r4, #8]
 8013182:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8013186:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801318a:	eba5 050c 	sub.w	r5, r5, ip
 801318e:	784a      	ldrb	r2, [r1, #1]
 8013190:	f8d8 3000 	ldr.w	r3, [r8]
 8013194:	b22d      	sxth	r5, r5
 8013196:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 801319a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801319e:	9500      	str	r5, [sp, #0]
 80131a0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80131a4:	a803      	add	r0, sp, #12
 80131a6:	f001 fccb 	bl	8014b40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80131aa:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80131ae:	b203      	sxth	r3, r0
 80131b0:	18b9      	adds	r1, r7, r2
 80131b2:	2900      	cmp	r1, #0
 80131b4:	dd0b      	ble.n	80131ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80131b6:	3b01      	subs	r3, #1
 80131b8:	fb13 f302 	smulbb	r3, r3, r2
 80131bc:	fb16 3300 	smlabb	r3, r6, r0, r3
 80131c0:	b21f      	sxth	r7, r3
 80131c2:	4638      	mov	r0, r7
 80131c4:	b01d      	add	sp, #116	; 0x74
 80131c6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80131ca:	b003      	add	sp, #12
 80131cc:	4770      	bx	lr
 80131ce:	2b00      	cmp	r3, #0
 80131d0:	dcf7      	bgt.n	80131c2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80131d2:	2700      	movs	r7, #0
 80131d4:	e7f5      	b.n	80131c2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80131d6:	bf00      	nop
 80131d8:	24004aa4 	.word	0x24004aa4
 80131dc:	24004aa0 	.word	0x24004aa0
 80131e0:	24004aa8 	.word	0x24004aa8

080131e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80131e4:	4bbd      	ldr	r3, [pc, #756]	; (80134dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80131e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131ea:	460c      	mov	r4, r1
 80131ec:	881b      	ldrh	r3, [r3, #0]
 80131ee:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80131f0:	b0a9      	sub	sp, #164	; 0xa4
 80131f2:	4680      	mov	r8, r0
 80131f4:	428b      	cmp	r3, r1
 80131f6:	d809      	bhi.n	801320c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80131f8:	2300      	movs	r3, #0
 80131fa:	f04f 32ff 	mov.w	r2, #4294967295
 80131fe:	6083      	str	r3, [r0, #8]
 8013200:	e9c0 3200 	strd	r3, r2, [r0]
 8013204:	4640      	mov	r0, r8
 8013206:	b029      	add	sp, #164	; 0xa4
 8013208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801320c:	4eb4      	ldr	r6, [pc, #720]	; (80134e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801320e:	6833      	ldr	r3, [r6, #0]
 8013210:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8013214:	4bb3      	ldr	r3, [pc, #716]	; (80134e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8013216:	681b      	ldr	r3, [r3, #0]
 8013218:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801321c:	4bb2      	ldr	r3, [pc, #712]	; (80134e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801321e:	6818      	ldr	r0, [r3, #0]
 8013220:	f7fc f942 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 8013224:	682b      	ldr	r3, [r5, #0]
 8013226:	4681      	mov	r9, r0
 8013228:	4628      	mov	r0, r5
 801322a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801322c:	4798      	blx	r3
 801322e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8013230:	b203      	sxth	r3, r0
 8013232:	4682      	mov	sl, r0
 8013234:	4407      	add	r7, r0
 8013236:	a80f      	add	r0, sp, #60	; 0x3c
 8013238:	9304      	str	r3, [sp, #16]
 801323a:	b2bb      	uxth	r3, r7
 801323c:	9303      	str	r3, [sp, #12]
 801323e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013242:	2b00      	cmp	r3, #0
 8013244:	f040 80a5 	bne.w	8013392 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 8013248:	f003 fe0a 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 801324c:	682b      	ldr	r3, [r5, #0]
 801324e:	4628      	mov	r0, r5
 8013250:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013252:	4798      	blx	r3
 8013254:	682b      	ldr	r3, [r5, #0]
 8013256:	4606      	mov	r6, r0
 8013258:	4628      	mov	r0, r5
 801325a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801325c:	4798      	blx	r3
 801325e:	6823      	ldr	r3, [r4, #0]
 8013260:	4607      	mov	r7, r0
 8013262:	4620      	mov	r0, r4
 8013264:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013266:	4798      	blx	r3
 8013268:	6823      	ldr	r3, [r4, #0]
 801326a:	4683      	mov	fp, r0
 801326c:	4620      	mov	r0, r4
 801326e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013272:	4798      	blx	r3
 8013274:	463b      	mov	r3, r7
 8013276:	4649      	mov	r1, r9
 8013278:	4632      	mov	r2, r6
 801327a:	2600      	movs	r6, #0
 801327c:	e9cd b000 	strd	fp, r0, [sp]
 8013280:	a80f      	add	r0, sp, #60	; 0x3c
 8013282:	4637      	mov	r7, r6
 8013284:	f003 fe5c 	bl	8016f40 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8013288:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801328c:	f8df b250 	ldr.w	fp, [pc, #592]	; 80134e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8013290:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013294:	bf0c      	ite	eq
 8013296:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801329a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801329e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80132a0:	4629      	mov	r1, r5
 80132a2:	f8db 3000 	ldr.w	r3, [fp]
 80132a6:	a80f      	add	r0, sp, #60	; 0x3c
 80132a8:	3701      	adds	r7, #1
 80132aa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80132ae:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80132b2:	b2bf      	uxth	r7, r7
 80132b4:	785b      	ldrb	r3, [r3, #1]
 80132b6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80132ba:	f001 f95c 	bl	8014576 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80132be:	9b03      	ldr	r3, [sp, #12]
 80132c0:	4286      	cmp	r6, r0
 80132c2:	eba9 0903 	sub.w	r9, r9, r3
 80132c6:	bfb8      	it	lt
 80132c8:	4606      	movlt	r6, r0
 80132ca:	a80f      	add	r0, sp, #60	; 0x3c
 80132cc:	fa0f f989 	sxth.w	r9, r9
 80132d0:	b236      	sxth	r6, r6
 80132d2:	f003 fdec 	bl	8016eae <_ZN8touchgfx12TextProvider11endOfStringEv>
 80132d6:	b918      	cbnz	r0, 80132e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80132d8:	7a2b      	ldrb	r3, [r5, #8]
 80132da:	444b      	add	r3, r9
 80132dc:	2b00      	cmp	r3, #0
 80132de:	dcde      	bgt.n	801329e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 80132e0:	9b03      	ldr	r3, [sp, #12]
 80132e2:	4620      	mov	r0, r4
 80132e4:	9a04      	ldr	r2, [sp, #16]
 80132e6:	fb13 f707 	smulbb	r7, r3, r7
 80132ea:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80132ec:	f895 9009 	ldrb.w	r9, [r5, #9]
 80132f0:	1aff      	subs	r7, r7, r3
 80132f2:	b2bf      	uxth	r7, r7
 80132f4:	b23b      	sxth	r3, r7
 80132f6:	429a      	cmp	r2, r3
 80132f8:	bfa8      	it	ge
 80132fa:	4657      	movge	r7, sl
 80132fc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013300:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013304:	6823      	ldr	r3, [r4, #0]
 8013306:	444f      	add	r7, r9
 8013308:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801330a:	bf08      	it	eq
 801330c:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8013310:	fa1f f987 	uxth.w	r9, r7
 8013314:	bf18      	it	ne
 8013316:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801331a:	4798      	blx	r3
 801331c:	2801      	cmp	r0, #1
 801331e:	fa0f f789 	sxth.w	r7, r9
 8013322:	b2b3      	uxth	r3, r6
 8013324:	f000 80e2 	beq.w	80134ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013328:	2802      	cmp	r0, #2
 801332a:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 801332e:	f000 80e3 	beq.w	80134f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8013332:	7aea      	ldrb	r2, [r5, #11]
 8013334:	b236      	sxth	r6, r6
 8013336:	7b2d      	ldrb	r5, [r5, #12]
 8013338:	1ab6      	subs	r6, r6, r2
 801333a:	442a      	add	r2, r5
 801333c:	fa1f fa86 	uxth.w	sl, r6
 8013340:	4413      	add	r3, r2
 8013342:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8013346:	fa0f fb8a 	sxth.w	fp, sl
 801334a:	b29b      	uxth	r3, r3
 801334c:	2a02      	cmp	r2, #2
 801334e:	b21e      	sxth	r6, r3
 8013350:	f000 80d6 	beq.w	8013500 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8013354:	2a03      	cmp	r2, #3
 8013356:	f000 80de 	beq.w	8013516 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801335a:	2a01      	cmp	r2, #1
 801335c:	f040 80e6 	bne.w	801352c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8013360:	8925      	ldrh	r5, [r4, #8]
 8013362:	4633      	mov	r3, r6
 8013364:	463e      	mov	r6, r7
 8013366:	eba5 0909 	sub.w	r9, r5, r9
 801336a:	461f      	mov	r7, r3
 801336c:	465d      	mov	r5, fp
 801336e:	fa0f fb89 	sxth.w	fp, r9
 8013372:	4b5d      	ldr	r3, [pc, #372]	; (80134e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013374:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013376:	6818      	ldr	r0, [r3, #0]
 8013378:	f7fc f896 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 801337c:	f8a8 b000 	strh.w	fp, [r8]
 8013380:	f8a8 5002 	strh.w	r5, [r8, #2]
 8013384:	f8a8 6004 	strh.w	r6, [r8, #4]
 8013388:	f8a8 7006 	strh.w	r7, [r8, #6]
 801338c:	f8c8 0008 	str.w	r0, [r8, #8]
 8013390:	e738      	b.n	8013204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8013392:	f003 fd65 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 8013396:	682b      	ldr	r3, [r5, #0]
 8013398:	4628      	mov	r0, r5
 801339a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801339c:	4798      	blx	r3
 801339e:	682b      	ldr	r3, [r5, #0]
 80133a0:	4607      	mov	r7, r0
 80133a2:	4628      	mov	r0, r5
 80133a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80133a6:	4798      	blx	r3
 80133a8:	6823      	ldr	r3, [r4, #0]
 80133aa:	4683      	mov	fp, r0
 80133ac:	4620      	mov	r0, r4
 80133ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80133b0:	4798      	blx	r3
 80133b2:	6822      	ldr	r2, [r4, #0]
 80133b4:	9005      	str	r0, [sp, #20]
 80133b6:	4620      	mov	r0, r4
 80133b8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80133bc:	4790      	blx	r2
 80133be:	9b05      	ldr	r3, [sp, #20]
 80133c0:	463a      	mov	r2, r7
 80133c2:	4649      	mov	r1, r9
 80133c4:	9001      	str	r0, [sp, #4]
 80133c6:	a80f      	add	r0, sp, #60	; 0x3c
 80133c8:	9300      	str	r3, [sp, #0]
 80133ca:	465b      	mov	r3, fp
 80133cc:	f003 fdb8 	bl	8016f40 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80133d0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80133d4:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80133d8:	af0f      	add	r7, sp, #60	; 0x3c
 80133da:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80133de:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80133e2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80133e4:	bf0a      	itet	eq
 80133e6:	464a      	moveq	r2, r9
 80133e8:	461a      	movne	r2, r3
 80133ea:	4699      	moveq	r9, r3
 80133ec:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80133f0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80133f4:	1ad2      	subs	r2, r2, r3
 80133f6:	6833      	ldr	r3, [r6, #0]
 80133f8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80133fc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013400:	7859      	ldrb	r1, [r3, #1]
 8013402:	2300      	movs	r3, #0
 8013404:	9707      	str	r7, [sp, #28]
 8013406:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801340a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801340e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013412:	f88d 1020 	strb.w	r1, [sp, #32]
 8013416:	9509      	str	r5, [sp, #36]	; 0x24
 8013418:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801341c:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8013420:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8013424:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013428:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801342c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013430:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8013434:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013438:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801343c:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8013440:	b350      	cbz	r0, 8013498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8013442:	682b      	ldr	r3, [r5, #0]
 8013444:	4628      	mov	r0, r5
 8013446:	695b      	ldr	r3, [r3, #20]
 8013448:	4798      	blx	r3
 801344a:	4607      	mov	r7, r0
 801344c:	b320      	cbz	r0, 8013498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 801344e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013450:	4639      	mov	r1, r7
 8013452:	6803      	ldr	r3, [r0, #0]
 8013454:	68db      	ldr	r3, [r3, #12]
 8013456:	4798      	blx	r3
 8013458:	4606      	mov	r6, r0
 801345a:	b1e8      	cbz	r0, 8013498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 801345c:	7b43      	ldrb	r3, [r0, #13]
 801345e:	7a82      	ldrb	r2, [r0, #10]
 8013460:	005b      	lsls	r3, r3, #1
 8013462:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013466:	4313      	orrs	r3, r2
 8013468:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801346c:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8013470:	2b06      	cmp	r3, #6
 8013472:	d111      	bne.n	8013498 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8013474:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013476:	4632      	mov	r2, r6
 8013478:	4639      	mov	r1, r7
 801347a:	6803      	ldr	r3, [r0, #0]
 801347c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801347e:	4798      	blx	r3
 8013480:	7b73      	ldrb	r3, [r6, #13]
 8013482:	005b      	lsls	r3, r3, #1
 8013484:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013488:	7ab3      	ldrb	r3, [r6, #10]
 801348a:	4313      	orrs	r3, r2
 801348c:	4418      	add	r0, r3
 801348e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013492:	4418      	add	r0, r3
 8013494:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8013498:	2600      	movs	r6, #0
 801349a:	4637      	mov	r7, r6
 801349c:	a806      	add	r0, sp, #24
 801349e:	3701      	adds	r7, #1
 80134a0:	f001 fa4b 	bl	801493a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80134a4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80134a8:	9b03      	ldr	r3, [sp, #12]
 80134aa:	b2bf      	uxth	r7, r7
 80134ac:	4286      	cmp	r6, r0
 80134ae:	eba9 0903 	sub.w	r9, r9, r3
 80134b2:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80134b6:	bfb8      	it	lt
 80134b8:	4606      	movlt	r6, r0
 80134ba:	fa0f f989 	sxth.w	r9, r9
 80134be:	b236      	sxth	r6, r6
 80134c0:	2b00      	cmp	r3, #0
 80134c2:	f43f af0d 	beq.w	80132e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80134c6:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80134ca:	2b00      	cmp	r3, #0
 80134cc:	f47f af08 	bne.w	80132e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80134d0:	7a2b      	ldrb	r3, [r5, #8]
 80134d2:	444b      	add	r3, r9
 80134d4:	2b00      	cmp	r3, #0
 80134d6:	dce1      	bgt.n	801349c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 80134d8:	e702      	b.n	80132e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80134da:	bf00      	nop
 80134dc:	24004aa4 	.word	0x24004aa4
 80134e0:	24004aa0 	.word	0x24004aa0
 80134e4:	24004aa8 	.word	0x24004aa8
 80134e8:	24004aac 	.word	0x24004aac
 80134ec:	ebaa 0606 	sub.w	r6, sl, r6
 80134f0:	2002      	movs	r0, #2
 80134f2:	fb96 f6f0 	sdiv	r6, r6, r0
 80134f6:	e71c      	b.n	8013332 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 80134f8:	441e      	add	r6, r3
 80134fa:	ebaa 0606 	sub.w	r6, sl, r6
 80134fe:	e718      	b.n	8013332 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8013500:	8925      	ldrh	r5, [r4, #8]
 8013502:	1aed      	subs	r5, r5, r3
 8013504:	eba5 050a 	sub.w	r5, r5, sl
 8013508:	fa0f fb85 	sxth.w	fp, r5
 801350c:	8965      	ldrh	r5, [r4, #10]
 801350e:	eba5 0509 	sub.w	r5, r5, r9
 8013512:	b22d      	sxth	r5, r5
 8013514:	e72d      	b.n	8013372 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8013516:	8965      	ldrh	r5, [r4, #10]
 8013518:	f04f 0b00 	mov.w	fp, #0
 801351c:	1aed      	subs	r5, r5, r3
 801351e:	4633      	mov	r3, r6
 8013520:	463e      	mov	r6, r7
 8013522:	eba5 050a 	sub.w	r5, r5, sl
 8013526:	461f      	mov	r7, r3
 8013528:	b22d      	sxth	r5, r5
 801352a:	e722      	b.n	8013372 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 801352c:	2500      	movs	r5, #0
 801352e:	e720      	b.n	8013372 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

08013530 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013530:	b513      	push	{r0, r1, r4, lr}
 8013532:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8013536:	4604      	mov	r4, r0
 8013538:	b1fb      	cbz	r3, 801357a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801353a:	4b16      	ldr	r3, [pc, #88]	; (8013594 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801353c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801353e:	881b      	ldrh	r3, [r3, #0]
 8013540:	428b      	cmp	r3, r1
 8013542:	d91a      	bls.n	801357a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013544:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013548:	2b00      	cmp	r3, #0
 801354a:	dd16      	ble.n	801357a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801354c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013550:	2b00      	cmp	r3, #0
 8013552:	dd12      	ble.n	801357a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013554:	4b10      	ldr	r3, [pc, #64]	; (8013598 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8013556:	6818      	ldr	r0, [r3, #0]
 8013558:	f7fb ffa6 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 801355c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8013560:	6822      	ldr	r2, [r4, #0]
 8013562:	2b00      	cmp	r3, #0
 8013564:	db06      	blt.n	8013574 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013566:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801356a:	2b00      	cmp	r3, #0
 801356c:	db02      	blt.n	8013574 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801356e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013570:	4298      	cmp	r0, r3
 8013572:	d004      	beq.n	801357e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8013574:	6953      	ldr	r3, [r2, #20]
 8013576:	4620      	mov	r0, r4
 8013578:	4798      	blx	r3
 801357a:	b002      	add	sp, #8
 801357c:	bd10      	pop	{r4, pc}
 801357e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8013582:	466b      	mov	r3, sp
 8013584:	6912      	ldr	r2, [r2, #16]
 8013586:	c903      	ldmia	r1, {r0, r1}
 8013588:	e883 0003 	stmia.w	r3, {r0, r1}
 801358c:	4619      	mov	r1, r3
 801358e:	4620      	mov	r0, r4
 8013590:	4790      	blx	r2
 8013592:	e7f2      	b.n	801357a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013594:	24004aa4 	.word	0x24004aa4
 8013598:	24004aac 	.word	0x24004aac

0801359c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801359c:	4b45      	ldr	r3, [pc, #276]	; (80136b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801359e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80135a4:	b08e      	sub	sp, #56	; 0x38
 80135a6:	881b      	ldrh	r3, [r3, #0]
 80135a8:	4604      	mov	r4, r0
 80135aa:	4293      	cmp	r3, r2
 80135ac:	d97e      	bls.n	80136ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80135ae:	6808      	ldr	r0, [r1, #0]
 80135b0:	ab05      	add	r3, sp, #20
 80135b2:	6849      	ldr	r1, [r1, #4]
 80135b4:	4d40      	ldr	r5, [pc, #256]	; (80136b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80135b6:	c303      	stmia	r3!, {r0, r1}
 80135b8:	4611      	mov	r1, r2
 80135ba:	6828      	ldr	r0, [r5, #0]
 80135bc:	f7fb ff74 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 80135c0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80135c4:	2b00      	cmp	r3, #0
 80135c6:	db11      	blt.n	80135ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80135c8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80135cc:	2b00      	cmp	r3, #0
 80135ce:	db0d      	blt.n	80135ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80135d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80135d2:	4298      	cmp	r0, r3
 80135d4:	d10a      	bne.n	80135ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80135d6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80135da:	ab09      	add	r3, sp, #36	; 0x24
 80135dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80135e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80135e4:	4619      	mov	r1, r3
 80135e6:	a805      	add	r0, sp, #20
 80135e8:	f7fe fa18 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 80135ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80135f0:	2b00      	cmp	r3, #0
 80135f2:	dd5b      	ble.n	80136ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80135f4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80135f8:	2b00      	cmp	r3, #0
 80135fa:	dd57      	ble.n	80136ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80135fc:	4f2f      	ldr	r7, [pc, #188]	; (80136bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80135fe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013600:	683b      	ldr	r3, [r7, #0]
 8013602:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8013606:	4b2e      	ldr	r3, [pc, #184]	; (80136c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013608:	681b      	ldr	r3, [r3, #0]
 801360a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801360e:	2e00      	cmp	r6, #0
 8013610:	d04c      	beq.n	80136ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013612:	6823      	ldr	r3, [r4, #0]
 8013614:	4620      	mov	r0, r4
 8013616:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 801361a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801361c:	4798      	blx	r3
 801361e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013620:	683b      	ldr	r3, [r7, #0]
 8013622:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8013626:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801362a:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801362e:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013632:	785b      	ldrb	r3, [r3, #1]
 8013634:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013638:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801363c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801363e:	9609      	str	r6, [sp, #36]	; 0x24
 8013640:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8013644:	4b1f      	ldr	r3, [pc, #124]	; (80136c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8013646:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801364a:	681b      	ldr	r3, [r3, #0]
 801364c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8013650:	910b      	str	r1, [sp, #44]	; 0x2c
 8013652:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8013656:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801365a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801365e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8013662:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013666:	b10a      	cbz	r2, 801366c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8013668:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801366a:	b906      	cbnz	r6, 801366e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801366c:	689e      	ldr	r6, [r3, #8]
 801366e:	af07      	add	r7, sp, #28
 8013670:	4621      	mov	r1, r4
 8013672:	4638      	mov	r0, r7
 8013674:	f003 f81c 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013678:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801367a:	6828      	ldr	r0, [r5, #0]
 801367c:	f7fb ff14 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 8013680:	6823      	ldr	r3, [r4, #0]
 8013682:	4605      	mov	r5, r0
 8013684:	4620      	mov	r0, r4
 8013686:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013688:	4798      	blx	r3
 801368a:	6823      	ldr	r3, [r4, #0]
 801368c:	4680      	mov	r8, r0
 801368e:	4620      	mov	r0, r4
 8013690:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013694:	4798      	blx	r3
 8013696:	ab09      	add	r3, sp, #36	; 0x24
 8013698:	9501      	str	r5, [sp, #4]
 801369a:	9300      	str	r3, [sp, #0]
 801369c:	ab05      	add	r3, sp, #20
 801369e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80136a2:	4630      	mov	r0, r6
 80136a4:	e897 0006 	ldmia.w	r7, {r1, r2}
 80136a8:	f7fb fe8f 	bl	800f3ca <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80136ac:	b00e      	add	sp, #56	; 0x38
 80136ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80136b2:	bf00      	nop
 80136b4:	24004aa4 	.word	0x24004aa4
 80136b8:	24004aac 	.word	0x24004aac
 80136bc:	24004aa0 	.word	0x24004aa0
 80136c0:	24004aa8 	.word	0x24004aa8
 80136c4:	24004a50 	.word	0x24004a50

080136c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80136c8:	b538      	push	{r3, r4, r5, lr}
 80136ca:	4b0e      	ldr	r3, [pc, #56]	; (8013704 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80136cc:	4604      	mov	r4, r0
 80136ce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80136d0:	881b      	ldrh	r3, [r3, #0]
 80136d2:	429a      	cmp	r2, r3
 80136d4:	d214      	bcs.n	8013700 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80136d6:	6803      	ldr	r3, [r0, #0]
 80136d8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80136da:	4798      	blx	r3
 80136dc:	6823      	ldr	r3, [r4, #0]
 80136de:	4605      	mov	r5, r0
 80136e0:	4620      	mov	r0, r4
 80136e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80136e4:	4798      	blx	r3
 80136e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80136ea:	b22d      	sxth	r5, r5
 80136ec:	4601      	mov	r1, r0
 80136ee:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80136f2:	bf06      	itte	eq
 80136f4:	4602      	moveq	r2, r0
 80136f6:	4629      	moveq	r1, r5
 80136f8:	462a      	movne	r2, r5
 80136fa:	4620      	mov	r0, r4
 80136fc:	f7fa fcbb 	bl	800e076 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013700:	bd38      	pop	{r3, r4, r5, pc}
 8013702:	bf00      	nop
 8013704:	24004aa4 	.word	0x24004aa4

08013708 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013708:	b530      	push	{r4, r5, lr}
 801370a:	888b      	ldrh	r3, [r1, #4]
 801370c:	b085      	sub	sp, #20
 801370e:	4604      	mov	r4, r0
 8013710:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013712:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013716:	b923      	cbnz	r3, 8013722 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013718:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801371c:	b90b      	cbnz	r3, 8013722 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801371e:	f7ff ffd3 	bl	80136c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8013722:	6823      	ldr	r3, [r4, #0]
 8013724:	466d      	mov	r5, sp
 8013726:	4621      	mov	r1, r4
 8013728:	343c      	adds	r4, #60	; 0x3c
 801372a:	4628      	mov	r0, r5
 801372c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013730:	4798      	blx	r3
 8013732:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8013736:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801373a:	b005      	add	sp, #20
 801373c:	bd30      	pop	{r4, r5, pc}

0801373e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801373e:	2300      	movs	r3, #0
 8013740:	8083      	strh	r3, [r0, #4]
 8013742:	80c3      	strh	r3, [r0, #6]
 8013744:	8003      	strh	r3, [r0, #0]
 8013746:	8043      	strh	r3, [r0, #2]
 8013748:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801374c:	2bff      	cmp	r3, #255	; 0xff
 801374e:	bf01      	itttt	eq
 8013750:	890b      	ldrheq	r3, [r1, #8]
 8013752:	8083      	strheq	r3, [r0, #4]
 8013754:	894b      	ldrheq	r3, [r1, #10]
 8013756:	80c3      	strheq	r3, [r0, #6]
 8013758:	4770      	bx	lr
	...

0801375c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801375c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801375e:	4604      	mov	r4, r0
 8013760:	466b      	mov	r3, sp
 8013762:	6808      	ldr	r0, [r1, #0]
 8013764:	6849      	ldr	r1, [r1, #4]
 8013766:	c303      	stmia	r3!, {r0, r1}
 8013768:	6823      	ldr	r3, [r4, #0]
 801376a:	4669      	mov	r1, sp
 801376c:	4620      	mov	r0, r4
 801376e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013770:	4798      	blx	r3
 8013772:	4b08      	ldr	r3, [pc, #32]	; (8013794 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013774:	681b      	ldr	r3, [r3, #0]
 8013776:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801377a:	b10a      	cbz	r2, 8013780 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801377c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801377e:	b900      	cbnz	r0, 8013782 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013780:	6898      	ldr	r0, [r3, #8]
 8013782:	6803      	ldr	r3, [r0, #0]
 8013784:	4669      	mov	r1, sp
 8013786:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8013788:	6a1d      	ldr	r5, [r3, #32]
 801378a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801378e:	47a8      	blx	r5
 8013790:	b003      	add	sp, #12
 8013792:	bd30      	pop	{r4, r5, pc}
 8013794:	24004a50 	.word	0x24004a50

08013798 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013798:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801379c:	b12a      	cbz	r2, 80137aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801379e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80137a2:	b112      	cbz	r2, 80137aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80137a4:	6803      	ldr	r3, [r0, #0]
 80137a6:	695b      	ldr	r3, [r3, #20]
 80137a8:	4718      	bx	r3
 80137aa:	4770      	bx	lr

080137ac <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80137ac:	b570      	push	{r4, r5, r6, lr}
 80137ae:	880b      	ldrh	r3, [r1, #0]
 80137b0:	4605      	mov	r5, r0
 80137b2:	4604      	mov	r4, r0
 80137b4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80137b6:	8813      	ldrh	r3, [r2, #0]
 80137b8:	f825 3f30 	strh.w	r3, [r5, #48]!
 80137bc:	4628      	mov	r0, r5
 80137be:	f004 fedb 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80137c2:	4606      	mov	r6, r0
 80137c4:	4628      	mov	r0, r5
 80137c6:	f004 ff0b 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80137ca:	6823      	ldr	r3, [r4, #0]
 80137cc:	4605      	mov	r5, r0
 80137ce:	4631      	mov	r1, r6
 80137d0:	4620      	mov	r0, r4
 80137d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80137d4:	4798      	blx	r3
 80137d6:	6823      	ldr	r3, [r4, #0]
 80137d8:	4629      	mov	r1, r5
 80137da:	4620      	mov	r0, r4
 80137dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80137de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80137e2:	4718      	bx	r3

080137e4 <_ZNK8touchgfx6Button12getSolidRectEv>:
 80137e4:	b510      	push	{r4, lr}
 80137e6:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80137ea:	4604      	mov	r4, r0
 80137ec:	2bff      	cmp	r3, #255	; 0xff
 80137ee:	d006      	beq.n	80137fe <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80137f0:	2300      	movs	r3, #0
 80137f2:	8003      	strh	r3, [r0, #0]
 80137f4:	8043      	strh	r3, [r0, #2]
 80137f6:	8083      	strh	r3, [r0, #4]
 80137f8:	80c3      	strh	r3, [r0, #6]
 80137fa:	4620      	mov	r0, r4
 80137fc:	bd10      	pop	{r4, pc}
 80137fe:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013802:	b11b      	cbz	r3, 801380c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013804:	3130      	adds	r1, #48	; 0x30
 8013806:	f004 ff1f 	bl	8018648 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801380a:	e7f6      	b.n	80137fa <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801380c:	312e      	adds	r1, #46	; 0x2e
 801380e:	e7fa      	b.n	8013806 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08013810 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013810:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013814:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013818:	b08a      	sub	sp, #40	; 0x28
 801381a:	4604      	mov	r4, r0
 801381c:	4688      	mov	r8, r1
 801381e:	2b00      	cmp	r3, #0
 8013820:	d066      	beq.n	80138f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013822:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013824:	a805      	add	r0, sp, #20
 8013826:	f8ad 3014 	strh.w	r3, [sp, #20]
 801382a:	f004 fea5 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801382e:	4607      	mov	r7, r0
 8013830:	a805      	add	r0, sp, #20
 8013832:	f004 fed5 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013836:	f9b8 6000 	ldrsh.w	r6, [r8]
 801383a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801383e:	2300      	movs	r3, #0
 8013840:	4432      	add	r2, r6
 8013842:	9306      	str	r3, [sp, #24]
 8013844:	b292      	uxth	r2, r2
 8013846:	fa0f fc82 	sxth.w	ip, r2
 801384a:	459c      	cmp	ip, r3
 801384c:	dd52      	ble.n	80138f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801384e:	42b7      	cmp	r7, r6
 8013850:	dd50      	ble.n	80138f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013852:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013856:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801385a:	442b      	add	r3, r5
 801385c:	b29b      	uxth	r3, r3
 801385e:	b219      	sxth	r1, r3
 8013860:	2900      	cmp	r1, #0
 8013862:	dd47      	ble.n	80138f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013864:	42a8      	cmp	r0, r5
 8013866:	dd45      	ble.n	80138f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013868:	4567      	cmp	r7, ip
 801386a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801386e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013872:	bfb8      	it	lt
 8013874:	b2ba      	uxthlt	r2, r7
 8013876:	4288      	cmp	r0, r1
 8013878:	f8ad 6018 	strh.w	r6, [sp, #24]
 801387c:	bfb8      	it	lt
 801387e:	b283      	uxthlt	r3, r0
 8013880:	1b92      	subs	r2, r2, r6
 8013882:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013886:	1b5b      	subs	r3, r3, r5
 8013888:	f8ad 201c 	strh.w	r2, [sp, #28]
 801388c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013890:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013894:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013898:	429a      	cmp	r2, r3
 801389a:	d026      	beq.n	80138ea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801389c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80138a0:	2b00      	cmp	r3, #0
 80138a2:	dd22      	ble.n	80138ea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80138a4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80138a8:	2b00      	cmp	r3, #0
 80138aa:	dd1e      	ble.n	80138ea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80138ac:	2300      	movs	r3, #0
 80138ae:	a908      	add	r1, sp, #32
 80138b0:	4620      	mov	r0, r4
 80138b2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80138b6:	6823      	ldr	r3, [r4, #0]
 80138b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138ba:	4798      	blx	r3
 80138bc:	4b0f      	ldr	r3, [pc, #60]	; (80138fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80138be:	681b      	ldr	r3, [r3, #0]
 80138c0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80138c4:	b10a      	cbz	r2, 80138ca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80138c6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80138c8:	b900      	cbnz	r0, 80138cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80138ca:	6898      	ldr	r0, [r3, #8]
 80138cc:	2501      	movs	r5, #1
 80138ce:	6801      	ldr	r1, [r0, #0]
 80138d0:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80138d4:	9502      	str	r5, [sp, #8]
 80138d6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80138da:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80138de:	9401      	str	r4, [sp, #4]
 80138e0:	ac06      	add	r4, sp, #24
 80138e2:	9400      	str	r4, [sp, #0]
 80138e4:	688c      	ldr	r4, [r1, #8]
 80138e6:	a905      	add	r1, sp, #20
 80138e8:	47a0      	blx	r4
 80138ea:	b00a      	add	sp, #40	; 0x28
 80138ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80138f0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80138f2:	e797      	b.n	8013824 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80138f4:	2300      	movs	r3, #0
 80138f6:	9307      	str	r3, [sp, #28]
 80138f8:	e7ca      	b.n	8013890 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80138fa:	bf00      	nop
 80138fc:	24004a50 	.word	0x24004a50

08013900 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013900:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013904:	b12a      	cbz	r2, 8013912 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013906:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801390a:	b112      	cbz	r2, 8013912 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801390c:	6803      	ldr	r3, [r0, #0]
 801390e:	695b      	ldr	r3, [r3, #20]
 8013910:	4718      	bx	r3
 8013912:	4770      	bx	lr

08013914 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013914:	4b30      	ldr	r3, [pc, #192]	; (80139d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013916:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801391a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801391c:	b08d      	sub	sp, #52	; 0x34
 801391e:	881b      	ldrh	r3, [r3, #0]
 8013920:	4604      	mov	r4, r0
 8013922:	460f      	mov	r7, r1
 8013924:	4293      	cmp	r3, r2
 8013926:	d954      	bls.n	80139d2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013928:	4b2c      	ldr	r3, [pc, #176]	; (80139dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 801392a:	6819      	ldr	r1, [r3, #0]
 801392c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013930:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013934:	4a2a      	ldr	r2, [pc, #168]	; (80139e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013936:	6812      	ldr	r2, [r2, #0]
 8013938:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801393c:	2900      	cmp	r1, #0
 801393e:	d048      	beq.n	80139d2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013940:	785a      	ldrb	r2, [r3, #1]
 8013942:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013946:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801394a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801394e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013952:	4b24      	ldr	r3, [pc, #144]	; (80139e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013954:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013958:	681a      	ldr	r2, [r3, #0]
 801395a:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801395e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013962:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013966:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013968:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801396c:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013970:	9107      	str	r1, [sp, #28]
 8013972:	f88d 8020 	strb.w	r8, [sp, #32]
 8013976:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801397a:	9609      	str	r6, [sp, #36]	; 0x24
 801397c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013980:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013984:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013988:	b10b      	cbz	r3, 801398e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801398a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801398c:	b905      	cbnz	r5, 8013990 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801398e:	6895      	ldr	r5, [r2, #8]
 8013990:	ae05      	add	r6, sp, #20
 8013992:	4621      	mov	r1, r4
 8013994:	4630      	mov	r0, r6
 8013996:	f002 fe8b 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801399a:	4b13      	ldr	r3, [pc, #76]	; (80139e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801399c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801399e:	6818      	ldr	r0, [r3, #0]
 80139a0:	f7fb fd82 	bl	800f4a8 <_ZNK8touchgfx5Texts7getTextEt>
 80139a4:	6823      	ldr	r3, [r4, #0]
 80139a6:	4680      	mov	r8, r0
 80139a8:	4620      	mov	r0, r4
 80139aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80139ac:	4798      	blx	r3
 80139ae:	6823      	ldr	r3, [r4, #0]
 80139b0:	4681      	mov	r9, r0
 80139b2:	4620      	mov	r0, r4
 80139b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80139b8:	4798      	blx	r3
 80139ba:	ab07      	add	r3, sp, #28
 80139bc:	f8cd 8004 	str.w	r8, [sp, #4]
 80139c0:	9300      	str	r3, [sp, #0]
 80139c2:	463b      	mov	r3, r7
 80139c4:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80139c8:	4628      	mov	r0, r5
 80139ca:	e896 0006 	ldmia.w	r6, {r1, r2}
 80139ce:	f7fb fcfc 	bl	800f3ca <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80139d2:	b00d      	add	sp, #52	; 0x34
 80139d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139d8:	24004aa4 	.word	0x24004aa4
 80139dc:	24004aa0 	.word	0x24004aa0
 80139e0:	24004aa8 	.word	0x24004aa8
 80139e4:	24004a50 	.word	0x24004a50
 80139e8:	24004aac 	.word	0x24004aac

080139ec <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80139ec:	b570      	push	{r4, r5, r6, lr}
 80139ee:	880b      	ldrh	r3, [r1, #0]
 80139f0:	460d      	mov	r5, r1
 80139f2:	4604      	mov	r4, r0
 80139f4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80139f6:	4608      	mov	r0, r1
 80139f8:	f004 fdbe 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80139fc:	4606      	mov	r6, r0
 80139fe:	4628      	mov	r0, r5
 8013a00:	f004 fdee 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a04:	6823      	ldr	r3, [r4, #0]
 8013a06:	4605      	mov	r5, r0
 8013a08:	4631      	mov	r1, r6
 8013a0a:	4620      	mov	r0, r4
 8013a0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013a0e:	4798      	blx	r3
 8013a10:	6823      	ldr	r3, [r4, #0]
 8013a12:	4629      	mov	r1, r5
 8013a14:	4620      	mov	r0, r4
 8013a16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013a18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a1c:	4718      	bx	r3

08013a1e <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013a1e:	b510      	push	{r4, lr}
 8013a20:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013a24:	4604      	mov	r4, r0
 8013a26:	2bff      	cmp	r3, #255	; 0xff
 8013a28:	d006      	beq.n	8013a38 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013a2a:	2300      	movs	r3, #0
 8013a2c:	8003      	strh	r3, [r0, #0]
 8013a2e:	8043      	strh	r3, [r0, #2]
 8013a30:	8083      	strh	r3, [r0, #4]
 8013a32:	80c3      	strh	r3, [r0, #6]
 8013a34:	4620      	mov	r0, r4
 8013a36:	bd10      	pop	{r4, pc}
 8013a38:	3126      	adds	r1, #38	; 0x26
 8013a3a:	f004 fe05 	bl	8018648 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a3e:	e7f9      	b.n	8013a34 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013a40 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a44:	4604      	mov	r4, r0
 8013a46:	b088      	sub	sp, #32
 8013a48:	2500      	movs	r5, #0
 8013a4a:	460f      	mov	r7, r1
 8013a4c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013a50:	a904      	add	r1, sp, #16
 8013a52:	4606      	mov	r6, r0
 8013a54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a56:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013a5a:	4798      	blx	r3
 8013a5c:	4620      	mov	r0, r4
 8013a5e:	f004 fd8b 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a62:	4680      	mov	r8, r0
 8013a64:	4620      	mov	r0, r4
 8013a66:	f004 fdbb 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a6a:	9506      	str	r5, [sp, #24]
 8013a6c:	ad06      	add	r5, sp, #24
 8013a6e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013a72:	4639      	mov	r1, r7
 8013a74:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013a78:	4628      	mov	r0, r5
 8013a7a:	f7fd ffcf 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8013a7e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013a82:	2b00      	cmp	r3, #0
 8013a84:	dd19      	ble.n	8013aba <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013a86:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013a8a:	2b00      	cmp	r3, #0
 8013a8c:	dd15      	ble.n	8013aba <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013a8e:	4b0c      	ldr	r3, [pc, #48]	; (8013ac0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013a90:	681b      	ldr	r3, [r3, #0]
 8013a92:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013a96:	b10a      	cbz	r2, 8013a9c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013a98:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013a9a:	b900      	cbnz	r0, 8013a9e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013a9c:	6898      	ldr	r0, [r3, #8]
 8013a9e:	2701      	movs	r7, #1
 8013aa0:	6801      	ldr	r1, [r0, #0]
 8013aa2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013aa6:	9702      	str	r7, [sp, #8]
 8013aa8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013aac:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013ab0:	e9cd 5600 	strd	r5, r6, [sp]
 8013ab4:	688d      	ldr	r5, [r1, #8]
 8013ab6:	4621      	mov	r1, r4
 8013ab8:	47a8      	blx	r5
 8013aba:	b008      	add	sp, #32
 8013abc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ac0:	24004a50 	.word	0x24004a50

08013ac4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013ac4:	b510      	push	{r4, lr}
 8013ac6:	6803      	ldr	r3, [r0, #0]
 8013ac8:	460c      	mov	r4, r1
 8013aca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013acc:	4798      	blx	r3
 8013ace:	1b03      	subs	r3, r0, r4
 8013ad0:	4258      	negs	r0, r3
 8013ad2:	4158      	adcs	r0, r3
 8013ad4:	bd10      	pop	{r4, pc}
	...

08013ad8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8013ad8:	4b01      	ldr	r3, [pc, #4]	; (8013ae0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8013ada:	6019      	str	r1, [r3, #0]
 8013adc:	4770      	bx	lr
 8013ade:	bf00      	nop
 8013ae0:	24004a58 	.word	0x24004a58

08013ae4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ae8:	4696      	mov	lr, r2
 8013aea:	b097      	sub	sp, #92	; 0x5c
 8013aec:	4605      	mov	r5, r0
 8013aee:	4614      	mov	r4, r2
 8013af0:	460e      	mov	r6, r1
 8013af2:	461f      	mov	r7, r3
 8013af4:	f10d 0c1c 	add.w	ip, sp, #28
 8013af8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013afc:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013b00:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013b04:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b08:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b0c:	f8de 3000 	ldr.w	r3, [lr]
 8013b10:	f104 0e14 	add.w	lr, r4, #20
 8013b14:	f8cc 3000 	str.w	r3, [ip]
 8013b18:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013b1c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b20:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b24:	f8de 3000 	ldr.w	r3, [lr]
 8013b28:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013b2c:	f8cc 3000 	str.w	r3, [ip]
 8013b30:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013b34:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b38:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b3c:	f8de 3000 	ldr.w	r3, [lr]
 8013b40:	4631      	mov	r1, r6
 8013b42:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013b44:	4628      	mov	r0, r5
 8013b46:	f8cc 3000 	str.w	r3, [ip]
 8013b4a:	682b      	ldr	r3, [r5, #0]
 8013b4c:	9201      	str	r2, [sp, #4]
 8013b4e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013b50:	f8cd 8008 	str.w	r8, [sp, #8]
 8013b54:	9200      	str	r2, [sp, #0]
 8013b56:	aa07      	add	r2, sp, #28
 8013b58:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013b5c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8013b60:	463b      	mov	r3, r7
 8013b62:	47d8      	blx	fp
 8013b64:	46a6      	mov	lr, r4
 8013b66:	f10d 0c1c 	add.w	ip, sp, #28
 8013b6a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b6e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b72:	f8de 3000 	ldr.w	r3, [lr]
 8013b76:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013b7a:	343c      	adds	r4, #60	; 0x3c
 8013b7c:	f8cc 3000 	str.w	r3, [ip]
 8013b80:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013b84:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b88:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b8c:	f8de 3000 	ldr.w	r3, [lr]
 8013b90:	f8cc 3000 	str.w	r3, [ip]
 8013b94:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013b98:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013b9a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b9e:	6823      	ldr	r3, [r4, #0]
 8013ba0:	4631      	mov	r1, r6
 8013ba2:	4628      	mov	r0, r5
 8013ba4:	f8cc 3000 	str.w	r3, [ip]
 8013ba8:	682b      	ldr	r3, [r5, #0]
 8013baa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013bae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013bb0:	f8cd 8008 	str.w	r8, [sp, #8]
 8013bb4:	9201      	str	r2, [sp, #4]
 8013bb6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013bb8:	9200      	str	r2, [sp, #0]
 8013bba:	aa07      	add	r2, sp, #28
 8013bbc:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8013bbe:	463b      	mov	r3, r7
 8013bc0:	47a0      	blx	r4
 8013bc2:	b017      	add	sp, #92	; 0x5c
 8013bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013bc8 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013bc8:	2000      	movs	r0, #0
 8013bca:	4770      	bx	lr

08013bcc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bd0:	b08d      	sub	sp, #52	; 0x34
 8013bd2:	4688      	mov	r8, r1
 8013bd4:	f8d3 c000 	ldr.w	ip, [r3]
 8013bd8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013bda:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013bde:	680f      	ldr	r7, [r1, #0]
 8013be0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013be4:	eba7 070c 	sub.w	r7, r7, ip
 8013be8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013bec:	edd3 6a07 	vldr	s13, [r3, #28]
 8013bf0:	42bc      	cmp	r4, r7
 8013bf2:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013bf4:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013bf8:	bfa8      	it	ge
 8013bfa:	463c      	movge	r4, r7
 8013bfc:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013c00:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013c04:	ee07 4a90 	vmov	s15, r4
 8013c08:	eb09 0e0c 	add.w	lr, r9, ip
 8013c0c:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013c10:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013c14:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013c18:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013c1c:	4571      	cmp	r1, lr
 8013c1e:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013c22:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013c26:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013c2a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013c2e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013c32:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013c36:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013c3a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013c3e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013c42:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013c46:	f340 808c 	ble.w	8013d62 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8013c4a:	eba1 060e 	sub.w	r6, r1, lr
 8013c4e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013c52:	ee07 5a10 	vmov	s14, r5
 8013c56:	2d00      	cmp	r5, #0
 8013c58:	fb04 6615 	mls	r6, r4, r5, r6
 8013c5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c60:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013c64:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013c68:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013c6c:	dd12      	ble.n	8013c94 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 8013c6e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013c72:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013c76:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013c7a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013c7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c82:	bf14      	ite	ne
 8013c84:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013c88:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013c8c:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013c90:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013c94:	fb05 f204 	mul.w	r2, r5, r4
 8013c98:	1abf      	subs	r7, r7, r2
 8013c9a:	4494      	add	ip, r2
 8013c9c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013ca0:	4411      	add	r1, r2
 8013ca2:	eb09 020c 	add.w	r2, r9, ip
 8013ca6:	b209      	sxth	r1, r1
 8013ca8:	443a      	add	r2, r7
 8013caa:	428a      	cmp	r2, r1
 8013cac:	bfc4      	itt	gt
 8013cae:	eba1 0209 	subgt.w	r2, r1, r9
 8013cb2:	eba2 070c 	subgt.w	r7, r2, ip
 8013cb6:	2f00      	cmp	r7, #0
 8013cb8:	dd50      	ble.n	8013d5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 8013cba:	fb97 f1f4 	sdiv	r1, r7, r4
 8013cbe:	fb04 7211 	mls	r2, r4, r1, r7
 8013cc2:	b90a      	cbnz	r2, 8013cc8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8013cc4:	3901      	subs	r1, #1
 8013cc6:	4622      	mov	r2, r4
 8013cc8:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013ccc:	6840      	ldr	r0, [r0, #4]
 8013cce:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013cd2:	44b6      	add	lr, r6
 8013cd4:	f8d0 a000 	ldr.w	sl, [r0]
 8013cd8:	2900      	cmp	r1, #0
 8013cda:	bfcc      	ite	gt
 8013cdc:	46a1      	movgt	r9, r4
 8013cde:	4691      	movle	r9, r2
 8013ce0:	900b      	str	r0, [sp, #44]	; 0x2c
 8013ce2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013ce4:	fb04 e505 	mla	r5, r4, r5, lr
 8013ce8:	eef0 6a42 	vmov.f32	s13, s4
 8013cec:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013cf0:	9008      	str	r0, [sp, #32]
 8013cf2:	eeb0 7a61 	vmov.f32	s14, s3
 8013cf6:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013cf8:	695b      	ldr	r3, [r3, #20]
 8013cfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013cfe:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013d02:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013d06:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013d08:	445b      	add	r3, fp
 8013d0a:	9307      	str	r3, [sp, #28]
 8013d0c:	ee16 3a90 	vmov	r3, s13
 8013d10:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013d14:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013d18:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013d1c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013d20:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013d24:	ee17 7a90 	vmov	r7, s15
 8013d28:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013d2c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013d30:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013d34:	ee17 ca90 	vmov	ip, s15
 8013d38:	fb9c fcf4 	sdiv	ip, ip, r4
 8013d3c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013d40:	9302      	str	r3, [sp, #8]
 8013d42:	ee17 3a10 	vmov	r3, s14
 8013d46:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013d4a:	fb07 3706 	mla	r7, r7, r6, r3
 8013d4e:	eba9 0306 	sub.w	r3, r9, r6
 8013d52:	e9cd 4700 	strd	r4, r7, [sp]
 8013d56:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013d5a:	47a0      	blx	r4
 8013d5c:	b00d      	add	sp, #52	; 0x34
 8013d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d62:	2500      	movs	r5, #0
 8013d64:	462e      	mov	r6, r5
 8013d66:	e799      	b.n	8013c9c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08013d68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d6c:	b0db      	sub	sp, #364	; 0x16c
 8013d6e:	461d      	mov	r5, r3
 8013d70:	4614      	mov	r4, r2
 8013d72:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013d76:	910f      	str	r1, [sp, #60]	; 0x3c
 8013d78:	4629      	mov	r1, r5
 8013d7a:	930a      	str	r3, [sp, #40]	; 0x28
 8013d7c:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013d80:	9009      	str	r0, [sp, #36]	; 0x24
 8013d82:	930b      	str	r3, [sp, #44]	; 0x2c
 8013d84:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013d88:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013d8c:	9310      	str	r3, [sp, #64]	; 0x40
 8013d8e:	6803      	ldr	r3, [r0, #0]
 8013d90:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013d92:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013d96:	47b8      	blx	r7
 8013d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d9a:	6058      	str	r0, [r3, #4]
 8013d9c:	2800      	cmp	r0, #0
 8013d9e:	f000 83a1 	beq.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013da2:	682b      	ldr	r3, [r5, #0]
 8013da4:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013da8:	ed94 7a02 	vldr	s14, [r4, #8]
 8013dac:	9314      	str	r3, [sp, #80]	; 0x50
 8013dae:	686b      	ldr	r3, [r5, #4]
 8013db0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013db4:	9315      	str	r3, [sp, #84]	; 0x54
 8013db6:	4bc1      	ldr	r3, [pc, #772]	; (80140bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013db8:	7819      	ldrb	r1, [r3, #0]
 8013dba:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013dbe:	2900      	cmp	r1, #0
 8013dc0:	bf16      	itet	ne
 8013dc2:	4619      	movne	r1, r3
 8013dc4:	4611      	moveq	r1, r2
 8013dc6:	4613      	movne	r3, r2
 8013dc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013dcc:	9116      	str	r1, [sp, #88]	; 0x58
 8013dce:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013dd2:	f240 8387 	bls.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dd6:	ed94 7a07 	vldr	s14, [r4, #28]
 8013dda:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013dde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013de2:	f240 837f 	bls.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013de6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013dea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013dee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013df2:	f240 8377 	bls.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013df6:	6822      	ldr	r2, [r4, #0]
 8013df8:	4bb1      	ldr	r3, [pc, #708]	; (80140c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013dfa:	429a      	cmp	r2, r3
 8013dfc:	f2c0 8372 	blt.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e00:	49b0      	ldr	r1, [pc, #704]	; (80140c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013e02:	6963      	ldr	r3, [r4, #20]
 8013e04:	428a      	cmp	r2, r1
 8013e06:	f300 836d 	bgt.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e0a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013e0e:	48ae      	ldr	r0, [pc, #696]	; (80140c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013e10:	33ff      	adds	r3, #255	; 0xff
 8013e12:	4283      	cmp	r3, r0
 8013e14:	f200 8366 	bhi.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e18:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013e1a:	4dac      	ldr	r5, [pc, #688]	; (80140cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013e1c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013e20:	33ff      	adds	r3, #255	; 0xff
 8013e22:	42ab      	cmp	r3, r5
 8013e24:	f200 835e 	bhi.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e28:	6862      	ldr	r2, [r4, #4]
 8013e2a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013e2e:	33ff      	adds	r3, #255	; 0xff
 8013e30:	4283      	cmp	r3, r0
 8013e32:	f200 8357 	bhi.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e36:	69a1      	ldr	r1, [r4, #24]
 8013e38:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013e3c:	33ff      	adds	r3, #255	; 0xff
 8013e3e:	4283      	cmp	r3, r0
 8013e40:	f200 8350 	bhi.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013e46:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013e4a:	30ff      	adds	r0, #255	; 0xff
 8013e4c:	42a8      	cmp	r0, r5
 8013e4e:	f200 8349 	bhi.w	80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e52:	428a      	cmp	r2, r1
 8013e54:	f280 8110 	bge.w	8014078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013e58:	429a      	cmp	r2, r3
 8013e5a:	f300 8119 	bgt.w	8014090 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013e5e:	4299      	cmp	r1, r3
 8013e60:	f280 811d 	bge.w	801409e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013e64:	2502      	movs	r5, #2
 8013e66:	2701      	movs	r7, #1
 8013e68:	46a9      	mov	r9, r5
 8013e6a:	46b8      	mov	r8, r7
 8013e6c:	f04f 0a00 	mov.w	sl, #0
 8013e70:	4621      	mov	r1, r4
 8013e72:	a849      	add	r0, sp, #292	; 0x124
 8013e74:	f003 fd3e 	bl	80178f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013e78:	4622      	mov	r2, r4
 8013e7a:	4653      	mov	r3, sl
 8013e7c:	a949      	add	r1, sp, #292	; 0x124
 8013e7e:	f8cd 9000 	str.w	r9, [sp]
 8013e82:	a819      	add	r0, sp, #100	; 0x64
 8013e84:	f003 fe66 	bl	8017b54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013e88:	4622      	mov	r2, r4
 8013e8a:	4653      	mov	r3, sl
 8013e8c:	a949      	add	r1, sp, #292	; 0x124
 8013e8e:	f8cd 8000 	str.w	r8, [sp]
 8013e92:	a829      	add	r0, sp, #164	; 0xa4
 8013e94:	f003 fe5e 	bl	8017b54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013e98:	4643      	mov	r3, r8
 8013e9a:	4622      	mov	r2, r4
 8013e9c:	a949      	add	r1, sp, #292	; 0x124
 8013e9e:	f8cd 9000 	str.w	r9, [sp]
 8013ea2:	a839      	add	r0, sp, #228	; 0xe4
 8013ea4:	f003 fe56 	bl	8017b54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013ea8:	42af      	cmp	r7, r5
 8013eaa:	af12      	add	r7, sp, #72	; 0x48
 8013eac:	bfb7      	itett	lt
 8013eae:	2300      	movlt	r3, #0
 8013eb0:	2301      	movge	r3, #1
 8013eb2:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013eb4:	ac19      	addlt	r4, sp, #100	; 0x64
 8013eb6:	bfb1      	iteee	lt
 8013eb8:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013eba:	ad19      	addge	r5, sp, #100	; 0x64
 8013ebc:	930e      	strge	r3, [sp, #56]	; 0x38
 8013ebe:	ac29      	addge	r4, sp, #164	; 0xa4
 8013ec0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ec2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013ec6:	e887 0003 	stmia.w	r7, {r0, r1}
 8013eca:	b928      	cbnz	r0, 8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013ecc:	4b80      	ldr	r3, [pc, #512]	; (80140d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013ece:	6818      	ldr	r0, [r3, #0]
 8013ed0:	6803      	ldr	r3, [r0, #0]
 8013ed2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013ed4:	4798      	blx	r3
 8013ed6:	6038      	str	r0, [r7, #0]
 8013ed8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013eda:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013ede:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013ee2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013ee4:	930c      	str	r3, [sp, #48]	; 0x30
 8013ee6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ee8:	6963      	ldr	r3, [r4, #20]
 8013eea:	440b      	add	r3, r1
 8013eec:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013ef0:	4408      	add	r0, r1
 8013ef2:	b200      	sxth	r0, r0
 8013ef4:	4283      	cmp	r3, r0
 8013ef6:	900d      	str	r0, [sp, #52]	; 0x34
 8013ef8:	f280 80dd 	bge.w	80140b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013efc:	428b      	cmp	r3, r1
 8013efe:	da08      	bge.n	8013f12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013f00:	2a00      	cmp	r2, #0
 8013f02:	dd06      	ble.n	8013f12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013f04:	1acb      	subs	r3, r1, r3
 8013f06:	429a      	cmp	r2, r3
 8013f08:	f2c0 80e4 	blt.w	80140d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013f0c:	2b00      	cmp	r3, #0
 8013f0e:	f300 80e2 	bgt.w	80140d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013f12:	6967      	ldr	r7, [r4, #20]
 8013f14:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013f18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f1a:	443b      	add	r3, r7
 8013f1c:	461f      	mov	r7, r3
 8013f1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f20:	1bdf      	subs	r7, r3, r7
 8013f22:	4297      	cmp	r7, r2
 8013f24:	bfa8      	it	ge
 8013f26:	4617      	movge	r7, r2
 8013f28:	2f00      	cmp	r7, #0
 8013f2a:	f340 8166 	ble.w	80141fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013f2e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f30:	6829      	ldr	r1, [r5, #0]
 8013f32:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f36:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013f3a:	4411      	add	r1, r2
 8013f3c:	6820      	ldr	r0, [r4, #0]
 8013f3e:	4299      	cmp	r1, r3
 8013f40:	dd1a      	ble.n	8013f78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013f42:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013f46:	4402      	add	r2, r0
 8013f48:	440b      	add	r3, r1
 8013f4a:	b21b      	sxth	r3, r3
 8013f4c:	429a      	cmp	r2, r3
 8013f4e:	dc13      	bgt.n	8013f78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013f50:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f52:	a912      	add	r1, sp, #72	; 0x48
 8013f54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f56:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013f58:	681b      	ldr	r3, [r3, #0]
 8013f5a:	9206      	str	r2, [sp, #24]
 8013f5c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013f5e:	9500      	str	r5, [sp, #0]
 8013f60:	9205      	str	r2, [sp, #20]
 8013f62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013f64:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013f68:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013f6a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013f6e:	aa49      	add	r2, sp, #292	; 0x124
 8013f70:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013f74:	4623      	mov	r3, r4
 8013f76:	47c8      	blx	r9
 8013f78:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013f7c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013f80:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013f84:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013f88:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013f8c:	68a1      	ldr	r1, [r4, #8]
 8013f8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013f92:	ed94 6a08 	vldr	s12, [r4, #32]
 8013f96:	edd4 6a07 	vldr	s13, [r4, #28]
 8013f9a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013f9e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013fa2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013fa6:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013faa:	edc4 6a07 	vstr	s13, [r4, #28]
 8013fae:	441a      	add	r2, r3
 8013fb0:	6963      	ldr	r3, [r4, #20]
 8013fb2:	3301      	adds	r3, #1
 8013fb4:	6022      	str	r2, [r4, #0]
 8013fb6:	6163      	str	r3, [r4, #20]
 8013fb8:	69a3      	ldr	r3, [r4, #24]
 8013fba:	3b01      	subs	r3, #1
 8013fbc:	61a3      	str	r3, [r4, #24]
 8013fbe:	6923      	ldr	r3, [r4, #16]
 8013fc0:	440b      	add	r3, r1
 8013fc2:	68e1      	ldr	r1, [r4, #12]
 8013fc4:	428b      	cmp	r3, r1
 8013fc6:	6123      	str	r3, [r4, #16]
 8013fc8:	db15      	blt.n	8013ff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013fca:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013fce:	3201      	adds	r2, #1
 8013fd0:	1a5b      	subs	r3, r3, r1
 8013fd2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013fd6:	6022      	str	r2, [r4, #0]
 8013fd8:	6123      	str	r3, [r4, #16]
 8013fda:	edc4 6a07 	vstr	s13, [r4, #28]
 8013fde:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013fe2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013fe6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013fea:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013fee:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013ff2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013ff6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013ffa:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013ffe:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014002:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014006:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801400a:	68a9      	ldr	r1, [r5, #8]
 801400c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014010:	ed95 6a08 	vldr	s12, [r5, #32]
 8014014:	edd5 6a07 	vldr	s13, [r5, #28]
 8014018:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801401c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014020:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014024:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014028:	edc5 6a07 	vstr	s13, [r5, #28]
 801402c:	441a      	add	r2, r3
 801402e:	696b      	ldr	r3, [r5, #20]
 8014030:	3301      	adds	r3, #1
 8014032:	602a      	str	r2, [r5, #0]
 8014034:	616b      	str	r3, [r5, #20]
 8014036:	69ab      	ldr	r3, [r5, #24]
 8014038:	3b01      	subs	r3, #1
 801403a:	61ab      	str	r3, [r5, #24]
 801403c:	692b      	ldr	r3, [r5, #16]
 801403e:	440b      	add	r3, r1
 8014040:	68e9      	ldr	r1, [r5, #12]
 8014042:	428b      	cmp	r3, r1
 8014044:	612b      	str	r3, [r5, #16]
 8014046:	db15      	blt.n	8014074 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8014048:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801404c:	3201      	adds	r2, #1
 801404e:	1a5b      	subs	r3, r3, r1
 8014050:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014054:	602a      	str	r2, [r5, #0]
 8014056:	612b      	str	r3, [r5, #16]
 8014058:	edc5 6a07 	vstr	s13, [r5, #28]
 801405c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014060:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014064:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014068:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801406c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014070:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014074:	3f01      	subs	r7, #1
 8014076:	e757      	b.n	8013f28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8014078:	4299      	cmp	r1, r3
 801407a:	dc13      	bgt.n	80140a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801407c:	429a      	cmp	r2, r3
 801407e:	da14      	bge.n	80140aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014080:	2502      	movs	r5, #2
 8014082:	2703      	movs	r7, #3
 8014084:	f04f 0800 	mov.w	r8, #0
 8014088:	46a9      	mov	r9, r5
 801408a:	f04f 0a01 	mov.w	sl, #1
 801408e:	e6ef      	b.n	8013e70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014090:	2501      	movs	r5, #1
 8014092:	2700      	movs	r7, #0
 8014094:	46a9      	mov	r9, r5
 8014096:	46b8      	mov	r8, r7
 8014098:	f04f 0a02 	mov.w	sl, #2
 801409c:	e6e8      	b.n	8013e70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801409e:	2501      	movs	r5, #1
 80140a0:	2702      	movs	r7, #2
 80140a2:	e6e1      	b.n	8013e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80140a4:	2500      	movs	r5, #0
 80140a6:	2701      	movs	r7, #1
 80140a8:	e7f4      	b.n	8014094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80140aa:	2702      	movs	r7, #2
 80140ac:	2503      	movs	r5, #3
 80140ae:	f04f 0900 	mov.w	r9, #0
 80140b2:	46b8      	mov	r8, r7
 80140b4:	e7e9      	b.n	801408a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80140b6:	4613      	mov	r3, r2
 80140b8:	e728      	b.n	8013f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80140ba:	bf00      	nop
 80140bc:	24004a48 	.word	0x24004a48
 80140c0:	fffd8f01 	.word	0xfffd8f01
 80140c4:	00027100 	.word	0x00027100
 80140c8:	0004e1ff 	.word	0x0004e1ff
 80140cc:	0004e1fe 	.word	0x0004e1fe
 80140d0:	24004a50 	.word	0x24004a50
 80140d4:	4613      	mov	r3, r2
 80140d6:	992b      	ldr	r1, [sp, #172]	; 0xac
 80140d8:	469e      	mov	lr, r3
 80140da:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80140dc:	469c      	mov	ip, r3
 80140de:	9111      	str	r1, [sp, #68]	; 0x44
 80140e0:	f04f 0900 	mov.w	r9, #0
 80140e4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80140e8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80140ec:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80140f0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80140f4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80140f8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80140fc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014100:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014104:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8014108:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801410c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014110:	f1bc 0f00 	cmp.w	ip, #0
 8014114:	d147      	bne.n	80141a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8014116:	eb03 0c07 	add.w	ip, r3, r7
 801411a:	1ad7      	subs	r7, r2, r3
 801411c:	f1b9 0f00 	cmp.w	r9, #0
 8014120:	d009      	beq.n	8014136 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014122:	9029      	str	r0, [sp, #164]	; 0xa4
 8014124:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014128:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 801412c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014130:	912d      	str	r1, [sp, #180]	; 0xb4
 8014132:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8014136:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014138:	f04f 0800 	mov.w	r8, #0
 801413c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014140:	9111      	str	r1, [sp, #68]	; 0x44
 8014142:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014146:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801414a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801414e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014152:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014156:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801415a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801415e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014162:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014166:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801416a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801416e:	f1be 0f00 	cmp.w	lr, #0
 8014172:	d031      	beq.n	80141d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014174:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014176:	4450      	add	r0, sl
 8014178:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801417c:	4431      	add	r1, r6
 801417e:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014182:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014186:	4549      	cmp	r1, r9
 8014188:	db08      	blt.n	801419c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801418a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801418e:	3001      	adds	r0, #1
 8014190:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014194:	eba1 0109 	sub.w	r1, r1, r9
 8014198:	ee37 7a06 	vadd.f32	s14, s14, s12
 801419c:	f10e 3eff 	add.w	lr, lr, #4294967295
 80141a0:	f04f 0801 	mov.w	r8, #1
 80141a4:	e7e3      	b.n	801416e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80141a6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80141a8:	4450      	add	r0, sl
 80141aa:	ee37 7a24 	vadd.f32	s14, s14, s9
 80141ae:	4431      	add	r1, r6
 80141b0:	ee77 7a84 	vadd.f32	s15, s15, s8
 80141b4:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80141b8:	4541      	cmp	r1, r8
 80141ba:	db08      	blt.n	80141ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80141bc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80141c0:	3001      	adds	r0, #1
 80141c2:	ee37 7a25 	vadd.f32	s14, s14, s11
 80141c6:	eba1 0108 	sub.w	r1, r1, r8
 80141ca:	ee77 7a86 	vadd.f32	s15, s15, s12
 80141ce:	f10c 3cff 	add.w	ip, ip, #4294967295
 80141d2:	f04f 0901 	mov.w	r9, #1
 80141d6:	e79b      	b.n	8014110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80141d8:	449c      	add	ip, r3
 80141da:	1aff      	subs	r7, r7, r3
 80141dc:	f1b8 0f00 	cmp.w	r8, #0
 80141e0:	d009      	beq.n	80141f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80141e2:	9019      	str	r0, [sp, #100]	; 0x64
 80141e4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80141e8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80141ec:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80141f0:	911d      	str	r1, [sp, #116]	; 0x74
 80141f2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80141f6:	1ad2      	subs	r2, r2, r3
 80141f8:	e68b      	b.n	8013f12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80141fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80141fc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80141fe:	2b00      	cmp	r3, #0
 8014200:	f000 80d1 	beq.w	80143a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014204:	ad19      	add	r5, sp, #100	; 0x64
 8014206:	ac39      	add	r4, sp, #228	; 0xe4
 8014208:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801420a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801420e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014212:	930c      	str	r3, [sp, #48]	; 0x30
 8014214:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014216:	6963      	ldr	r3, [r4, #20]
 8014218:	440b      	add	r3, r1
 801421a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801421e:	4408      	add	r0, r1
 8014220:	b200      	sxth	r0, r0
 8014222:	4283      	cmp	r3, r0
 8014224:	900d      	str	r0, [sp, #52]	; 0x34
 8014226:	f280 80c1 	bge.w	80143ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801422a:	428b      	cmp	r3, r1
 801422c:	da08      	bge.n	8014240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801422e:	2a00      	cmp	r2, #0
 8014230:	dd06      	ble.n	8014240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014232:	1acb      	subs	r3, r1, r3
 8014234:	429a      	cmp	r2, r3
 8014236:	f2c0 80bb 	blt.w	80143b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801423a:	2b00      	cmp	r3, #0
 801423c:	f300 80b9 	bgt.w	80143b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014240:	6967      	ldr	r7, [r4, #20]
 8014242:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014246:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014248:	443b      	add	r3, r7
 801424a:	461f      	mov	r7, r3
 801424c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801424e:	1bdf      	subs	r7, r3, r7
 8014250:	4297      	cmp	r7, r2
 8014252:	bfa8      	it	ge
 8014254:	4617      	movge	r7, r2
 8014256:	2f00      	cmp	r7, #0
 8014258:	f340 813c 	ble.w	80144d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801425c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801425e:	6829      	ldr	r1, [r5, #0]
 8014260:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014264:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014268:	4411      	add	r1, r2
 801426a:	6820      	ldr	r0, [r4, #0]
 801426c:	4299      	cmp	r1, r3
 801426e:	dd1a      	ble.n	80142a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014270:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014274:	4402      	add	r2, r0
 8014276:	440b      	add	r3, r1
 8014278:	b21b      	sxth	r3, r3
 801427a:	429a      	cmp	r2, r3
 801427c:	dc13      	bgt.n	80142a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801427e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014280:	a912      	add	r1, sp, #72	; 0x48
 8014282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014284:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014286:	681b      	ldr	r3, [r3, #0]
 8014288:	9206      	str	r2, [sp, #24]
 801428a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801428c:	9500      	str	r5, [sp, #0]
 801428e:	9205      	str	r2, [sp, #20]
 8014290:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014292:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014296:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014298:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801429c:	aa49      	add	r2, sp, #292	; 0x124
 801429e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80142a2:	4623      	mov	r3, r4
 80142a4:	47c8      	blx	r9
 80142a6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80142aa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80142ae:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80142b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80142b6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80142ba:	68a1      	ldr	r1, [r4, #8]
 80142bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80142c0:	ed94 6a08 	vldr	s12, [r4, #32]
 80142c4:	edd4 6a07 	vldr	s13, [r4, #28]
 80142c8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80142cc:	ee76 6a86 	vadd.f32	s13, s13, s12
 80142d0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80142d4:	e9d4 2300 	ldrd	r2, r3, [r4]
 80142d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80142dc:	441a      	add	r2, r3
 80142de:	6963      	ldr	r3, [r4, #20]
 80142e0:	3301      	adds	r3, #1
 80142e2:	6022      	str	r2, [r4, #0]
 80142e4:	6163      	str	r3, [r4, #20]
 80142e6:	69a3      	ldr	r3, [r4, #24]
 80142e8:	3b01      	subs	r3, #1
 80142ea:	61a3      	str	r3, [r4, #24]
 80142ec:	6923      	ldr	r3, [r4, #16]
 80142ee:	440b      	add	r3, r1
 80142f0:	68e1      	ldr	r1, [r4, #12]
 80142f2:	428b      	cmp	r3, r1
 80142f4:	6123      	str	r3, [r4, #16]
 80142f6:	db15      	blt.n	8014324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80142f8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80142fc:	3201      	adds	r2, #1
 80142fe:	1a5b      	subs	r3, r3, r1
 8014300:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014304:	6022      	str	r2, [r4, #0]
 8014306:	6123      	str	r3, [r4, #16]
 8014308:	edc4 6a07 	vstr	s13, [r4, #28]
 801430c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014310:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014314:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014318:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801431c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014320:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014324:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014328:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801432c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014330:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014334:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014338:	68a9      	ldr	r1, [r5, #8]
 801433a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801433e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014342:	edd5 6a07 	vldr	s13, [r5, #28]
 8014346:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801434a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801434e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014352:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014356:	edc5 6a07 	vstr	s13, [r5, #28]
 801435a:	441a      	add	r2, r3
 801435c:	696b      	ldr	r3, [r5, #20]
 801435e:	3301      	adds	r3, #1
 8014360:	602a      	str	r2, [r5, #0]
 8014362:	616b      	str	r3, [r5, #20]
 8014364:	69ab      	ldr	r3, [r5, #24]
 8014366:	3b01      	subs	r3, #1
 8014368:	61ab      	str	r3, [r5, #24]
 801436a:	692b      	ldr	r3, [r5, #16]
 801436c:	440b      	add	r3, r1
 801436e:	68e9      	ldr	r1, [r5, #12]
 8014370:	428b      	cmp	r3, r1
 8014372:	612b      	str	r3, [r5, #16]
 8014374:	db15      	blt.n	80143a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014376:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801437a:	3201      	adds	r2, #1
 801437c:	1a5b      	subs	r3, r3, r1
 801437e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014382:	602a      	str	r2, [r5, #0]
 8014384:	612b      	str	r3, [r5, #16]
 8014386:	edc5 6a07 	vstr	s13, [r5, #28]
 801438a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801438e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014392:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014396:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801439a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801439e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80143a2:	3f01      	subs	r7, #1
 80143a4:	e757      	b.n	8014256 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80143a6:	ad39      	add	r5, sp, #228	; 0xe4
 80143a8:	ac19      	add	r4, sp, #100	; 0x64
 80143aa:	e72d      	b.n	8014208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80143ac:	4613      	mov	r3, r2
 80143ae:	e744      	b.n	801423a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80143b0:	4613      	mov	r3, r2
 80143b2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80143b4:	469e      	mov	lr, r3
 80143b6:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80143ba:	461f      	mov	r7, r3
 80143bc:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80143c0:	f04f 0900 	mov.w	r9, #0
 80143c4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80143c8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80143cc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80143d0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80143d4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80143d8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80143da:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80143de:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80143e2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80143e6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80143ea:	960e      	str	r6, [sp, #56]	; 0x38
 80143ec:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80143f0:	2f00      	cmp	r7, #0
 80143f2:	d146      	bne.n	8014482 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80143f4:	449c      	add	ip, r3
 80143f6:	1ad7      	subs	r7, r2, r3
 80143f8:	f1b9 0f00 	cmp.w	r9, #0
 80143fc:	d009      	beq.n	8014412 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80143fe:	9039      	str	r0, [sp, #228]	; 0xe4
 8014400:	913d      	str	r1, [sp, #244]	; 0xf4
 8014402:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014406:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801440a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801440e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014412:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014414:	f04f 0800 	mov.w	r8, #0
 8014418:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801441c:	910e      	str	r1, [sp, #56]	; 0x38
 801441e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014422:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014426:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801442a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801442e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014432:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014436:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801443a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801443e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014442:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014446:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801444a:	f1be 0f00 	cmp.w	lr, #0
 801444e:	d030      	beq.n	80144b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014450:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014452:	4450      	add	r0, sl
 8014454:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014458:	4431      	add	r1, r6
 801445a:	ee37 7a04 	vadd.f32	s14, s14, s8
 801445e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014462:	4549      	cmp	r1, r9
 8014464:	db08      	blt.n	8014478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014466:	ee77 7a85 	vadd.f32	s15, s15, s10
 801446a:	3001      	adds	r0, #1
 801446c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014470:	eba1 0109 	sub.w	r1, r1, r9
 8014474:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014478:	f10e 3eff 	add.w	lr, lr, #4294967295
 801447c:	f04f 0801 	mov.w	r8, #1
 8014480:	e7e3      	b.n	801444a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014482:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014484:	4450      	add	r0, sl
 8014486:	ee37 7a24 	vadd.f32	s14, s14, s9
 801448a:	4431      	add	r1, r6
 801448c:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014490:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014494:	4541      	cmp	r1, r8
 8014496:	db08      	blt.n	80144aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014498:	ee76 6a85 	vadd.f32	s13, s13, s10
 801449c:	3001      	adds	r0, #1
 801449e:	ee37 7a25 	vadd.f32	s14, s14, s11
 80144a2:	eba1 0108 	sub.w	r1, r1, r8
 80144a6:	ee77 7a86 	vadd.f32	s15, s15, s12
 80144aa:	3f01      	subs	r7, #1
 80144ac:	f04f 0901 	mov.w	r9, #1
 80144b0:	e79e      	b.n	80143f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80144b2:	449c      	add	ip, r3
 80144b4:	1aff      	subs	r7, r7, r3
 80144b6:	f1b8 0f00 	cmp.w	r8, #0
 80144ba:	d009      	beq.n	80144d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80144bc:	9019      	str	r0, [sp, #100]	; 0x64
 80144be:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80144c2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80144c6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80144ca:	911d      	str	r1, [sp, #116]	; 0x74
 80144cc:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80144d0:	1ad2      	subs	r2, r2, r3
 80144d2:	e6b5      	b.n	8014240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80144d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80144d6:	681b      	ldr	r3, [r3, #0]
 80144d8:	b923      	cbnz	r3, 80144e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144da:	4b04      	ldr	r3, [pc, #16]	; (80144ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80144dc:	6818      	ldr	r0, [r3, #0]
 80144de:	6803      	ldr	r3, [r0, #0]
 80144e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80144e2:	4798      	blx	r3
 80144e4:	b05b      	add	sp, #364	; 0x16c
 80144e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144ea:	bf00      	nop
 80144ec:	24004a50 	.word	0x24004a50

080144f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80144f0:	b570      	push	{r4, r5, r6, lr}
 80144f2:	4604      	mov	r4, r0
 80144f4:	2500      	movs	r5, #0
 80144f6:	9805      	ldr	r0, [sp, #20]
 80144f8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80144fc:	6061      	str	r1, [r4, #4]
 80144fe:	8263      	strh	r3, [r4, #18]
 8014500:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014504:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014508:	8025      	strh	r5, [r4, #0]
 801450a:	7221      	strb	r1, [r4, #8]
 801450c:	7266      	strb	r6, [r4, #9]
 801450e:	60e0      	str	r0, [r4, #12]
 8014510:	8222      	strh	r2, [r4, #16]
 8014512:	82a3      	strh	r3, [r4, #20]
 8014514:	82e5      	strh	r5, [r4, #22]
 8014516:	8325      	strh	r5, [r4, #24]
 8014518:	8365      	strh	r5, [r4, #26]
 801451a:	83a5      	strh	r5, [r4, #28]
 801451c:	83e5      	strh	r5, [r4, #30]
 801451e:	8425      	strh	r5, [r4, #32]
 8014520:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014524:	b32e      	cbz	r6, 8014572 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014526:	6803      	ldr	r3, [r0, #0]
 8014528:	695b      	ldr	r3, [r3, #20]
 801452a:	4798      	blx	r3
 801452c:	4606      	mov	r6, r0
 801452e:	b300      	cbz	r0, 8014572 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014530:	68e0      	ldr	r0, [r4, #12]
 8014532:	4631      	mov	r1, r6
 8014534:	6803      	ldr	r3, [r0, #0]
 8014536:	68db      	ldr	r3, [r3, #12]
 8014538:	4798      	blx	r3
 801453a:	4605      	mov	r5, r0
 801453c:	b1c8      	cbz	r0, 8014572 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801453e:	7b43      	ldrb	r3, [r0, #13]
 8014540:	7a82      	ldrb	r2, [r0, #10]
 8014542:	005b      	lsls	r3, r3, #1
 8014544:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014548:	4313      	orrs	r3, r2
 801454a:	8423      	strh	r3, [r4, #32]
 801454c:	7a63      	ldrb	r3, [r4, #9]
 801454e:	2b06      	cmp	r3, #6
 8014550:	d10f      	bne.n	8014572 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014552:	68e0      	ldr	r0, [r4, #12]
 8014554:	462a      	mov	r2, r5
 8014556:	4631      	mov	r1, r6
 8014558:	6803      	ldr	r3, [r0, #0]
 801455a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801455c:	4798      	blx	r3
 801455e:	7b6b      	ldrb	r3, [r5, #13]
 8014560:	005b      	lsls	r3, r3, #1
 8014562:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014566:	7aab      	ldrb	r3, [r5, #10]
 8014568:	4313      	orrs	r3, r2
 801456a:	4418      	add	r0, r3
 801456c:	8c23      	ldrh	r3, [r4, #32]
 801456e:	4418      	add	r0, r3
 8014570:	8420      	strh	r0, [r4, #32]
 8014572:	4620      	mov	r0, r4
 8014574:	bd70      	pop	{r4, r5, r6, pc}

08014576 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014576:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801457a:	2400      	movs	r4, #0
 801457c:	b085      	sub	sp, #20
 801457e:	4681      	mov	r9, r0
 8014580:	4688      	mov	r8, r1
 8014582:	4692      	mov	sl, r2
 8014584:	469b      	mov	fp, r3
 8014586:	4627      	mov	r7, r4
 8014588:	4625      	mov	r5, r4
 801458a:	4626      	mov	r6, r4
 801458c:	4554      	cmp	r4, sl
 801458e:	da2a      	bge.n	80145e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014590:	2300      	movs	r3, #0
 8014592:	9303      	str	r3, [sp, #12]
 8014594:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014598:	429d      	cmp	r5, r3
 801459a:	d004      	beq.n	80145a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801459c:	f242 030b 	movw	r3, #8203	; 0x200b
 80145a0:	429d      	cmp	r5, r3
 80145a2:	bf18      	it	ne
 80145a4:	462f      	movne	r7, r5
 80145a6:	ab03      	add	r3, sp, #12
 80145a8:	4642      	mov	r2, r8
 80145aa:	4659      	mov	r1, fp
 80145ac:	4648      	mov	r0, r9
 80145ae:	f002 ffb7 	bl	8017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80145b2:	4605      	mov	r5, r0
 80145b4:	b1b8      	cbz	r0, 80145e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80145b6:	280a      	cmp	r0, #10
 80145b8:	d015      	beq.n	80145e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80145ba:	9a03      	ldr	r2, [sp, #12]
 80145bc:	b18a      	cbz	r2, 80145e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80145be:	7b50      	ldrb	r0, [r2, #13]
 80145c0:	4639      	mov	r1, r7
 80145c2:	7a93      	ldrb	r3, [r2, #10]
 80145c4:	0040      	lsls	r0, r0, #1
 80145c6:	8895      	ldrh	r5, [r2, #4]
 80145c8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80145cc:	4303      	orrs	r3, r0
 80145ce:	4640      	mov	r0, r8
 80145d0:	9301      	str	r3, [sp, #4]
 80145d2:	f8d8 3000 	ldr.w	r3, [r8]
 80145d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80145d8:	4798      	blx	r3
 80145da:	9b01      	ldr	r3, [sp, #4]
 80145dc:	4418      	add	r0, r3
 80145de:	4406      	add	r6, r0
 80145e0:	b2b6      	uxth	r6, r6
 80145e2:	3401      	adds	r4, #1
 80145e4:	e7d2      	b.n	801458c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80145e6:	4630      	mov	r0, r6
 80145e8:	b005      	add	sp, #20
 80145ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080145ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80145ee:	2a02      	cmp	r2, #2
 80145f0:	b530      	push	{r4, r5, lr}
 80145f2:	d011      	beq.n	8014618 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80145f4:	2a03      	cmp	r2, #3
 80145f6:	d01c      	beq.n	8014632 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80145f8:	2a01      	cmp	r2, #1
 80145fa:	d10c      	bne.n	8014616 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80145fc:	888b      	ldrh	r3, [r1, #4]
 80145fe:	8801      	ldrh	r1, [r0, #0]
 8014600:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014604:	1a5b      	subs	r3, r3, r1
 8014606:	8844      	ldrh	r4, [r0, #2]
 8014608:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801460c:	1a9b      	subs	r3, r3, r2
 801460e:	8004      	strh	r4, [r0, #0]
 8014610:	8081      	strh	r1, [r0, #4]
 8014612:	8043      	strh	r3, [r0, #2]
 8014614:	80c2      	strh	r2, [r0, #6]
 8014616:	bd30      	pop	{r4, r5, pc}
 8014618:	88cb      	ldrh	r3, [r1, #6]
 801461a:	8842      	ldrh	r2, [r0, #2]
 801461c:	1a9b      	subs	r3, r3, r2
 801461e:	88c2      	ldrh	r2, [r0, #6]
 8014620:	1a9b      	subs	r3, r3, r2
 8014622:	888a      	ldrh	r2, [r1, #4]
 8014624:	8801      	ldrh	r1, [r0, #0]
 8014626:	8043      	strh	r3, [r0, #2]
 8014628:	1a52      	subs	r2, r2, r1
 801462a:	8881      	ldrh	r1, [r0, #4]
 801462c:	1a52      	subs	r2, r2, r1
 801462e:	8002      	strh	r2, [r0, #0]
 8014630:	e7f1      	b.n	8014616 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014632:	88cb      	ldrh	r3, [r1, #6]
 8014634:	8841      	ldrh	r1, [r0, #2]
 8014636:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801463a:	1a5b      	subs	r3, r3, r1
 801463c:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014640:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014644:	1a9b      	subs	r3, r3, r2
 8014646:	8045      	strh	r5, [r0, #2]
 8014648:	8082      	strh	r2, [r0, #4]
 801464a:	8003      	strh	r3, [r0, #0]
 801464c:	80c4      	strh	r4, [r0, #6]
 801464e:	e7e2      	b.n	8014616 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014650 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014654:	b09f      	sub	sp, #124	; 0x7c
 8014656:	9116      	str	r1, [sp, #88]	; 0x58
 8014658:	9317      	str	r3, [sp, #92]	; 0x5c
 801465a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801465c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801465e:	8809      	ldrh	r1, [r1, #0]
 8014660:	889b      	ldrh	r3, [r3, #4]
 8014662:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014666:	440b      	add	r3, r1
 8014668:	9212      	str	r2, [sp, #72]	; 0x48
 801466a:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801466e:	b21b      	sxth	r3, r3
 8014670:	9011      	str	r0, [sp, #68]	; 0x44
 8014672:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014676:	9310      	str	r3, [sp, #64]	; 0x40
 8014678:	f8d8 3000 	ldr.w	r3, [r8]
 801467c:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014680:	7b19      	ldrb	r1, [r3, #12]
 8014682:	7adb      	ldrb	r3, [r3, #11]
 8014684:	9114      	str	r1, [sp, #80]	; 0x50
 8014686:	9315      	str	r3, [sp, #84]	; 0x54
 8014688:	2a00      	cmp	r2, #0
 801468a:	d06a      	beq.n	8014762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801468c:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014690:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014692:	2b06      	cmp	r3, #6
 8014694:	bf14      	ite	ne
 8014696:	2301      	movne	r3, #1
 8014698:	2302      	moveq	r3, #2
 801469a:	4413      	add	r3, r2
 801469c:	f04f 0900 	mov.w	r9, #0
 80146a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80146a2:	464c      	mov	r4, r9
 80146a4:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80146a8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80146ac:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80146b0:	4293      	cmp	r3, r2
 80146b2:	f280 808f 	bge.w	80147d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80146b6:	2300      	movs	r3, #0
 80146b8:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80146bc:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80146c0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80146c4:	429c      	cmp	r4, r3
 80146c6:	d006      	beq.n	80146d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80146c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146ca:	f242 020b 	movw	r2, #8203	; 0x200b
 80146ce:	4294      	cmp	r4, r2
 80146d0:	bf18      	it	ne
 80146d2:	4623      	movne	r3, r4
 80146d4:	930d      	str	r3, [sp, #52]	; 0x34
 80146d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80146d8:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80146da:	f8d8 2000 	ldr.w	r2, [r8]
 80146de:	428b      	cmp	r3, r1
 80146e0:	db41      	blt.n	8014766 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80146e2:	6813      	ldr	r3, [r2, #0]
 80146e4:	4610      	mov	r0, r2
 80146e6:	695b      	ldr	r3, [r3, #20]
 80146e8:	4798      	blx	r3
 80146ea:	4604      	mov	r4, r0
 80146ec:	f8d8 0000 	ldr.w	r0, [r8]
 80146f0:	aa1d      	add	r2, sp, #116	; 0x74
 80146f2:	4621      	mov	r1, r4
 80146f4:	6803      	ldr	r3, [r0, #0]
 80146f6:	689d      	ldr	r5, [r3, #8]
 80146f8:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80146fc:	47a8      	blx	r5
 80146fe:	901c      	str	r0, [sp, #112]	; 0x70
 8014700:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014704:	429c      	cmp	r4, r3
 8014706:	f000 80ec 	beq.w	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 801470a:	f242 030b 	movw	r3, #8203	; 0x200b
 801470e:	429c      	cmp	r4, r3
 8014710:	f000 80e7 	beq.w	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014714:	2c00      	cmp	r4, #0
 8014716:	f000 80f9 	beq.w	801490c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 801471a:	2c0a      	cmp	r4, #10
 801471c:	d060      	beq.n	80147e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801471e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014720:	b36a      	cbz	r2, 801477e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014722:	8894      	ldrh	r4, [r2, #4]
 8014724:	f1bb 0f00 	cmp.w	fp, #0
 8014728:	d03b      	beq.n	80147a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801472a:	f892 900d 	ldrb.w	r9, [r2, #13]
 801472e:	f1bb 0f01 	cmp.w	fp, #1
 8014732:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014736:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801473a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801473e:	ea49 0903 	orr.w	r9, r9, r3
 8014742:	d134      	bne.n	80147ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014744:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014746:	eba6 0609 	sub.w	r6, r6, r9
 801474a:	2b00      	cmp	r3, #0
 801474c:	d14f      	bne.n	80147ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801474e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014750:	eb09 0306 	add.w	r3, r9, r6
 8014754:	4413      	add	r3, r2
 8014756:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014758:	f9b2 2000 	ldrsh.w	r2, [r2]
 801475c:	4293      	cmp	r3, r2
 801475e:	da51      	bge.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014760:	e038      	b.n	80147d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014762:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014764:	e79a      	b.n	801469c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014766:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801476a:	4659      	mov	r1, fp
 801476c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801476e:	9301      	str	r3, [sp, #4]
 8014770:	ab1d      	add	r3, sp, #116	; 0x74
 8014772:	9300      	str	r3, [sp, #0]
 8014774:	ab1c      	add	r3, sp, #112	; 0x70
 8014776:	f002 ff1c 	bl	80175b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801477a:	4604      	mov	r4, r0
 801477c:	e7c0      	b.n	8014700 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801477e:	f8d8 0000 	ldr.w	r0, [r8]
 8014782:	6803      	ldr	r3, [r0, #0]
 8014784:	691b      	ldr	r3, [r3, #16]
 8014786:	4798      	blx	r3
 8014788:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801478c:	4298      	cmp	r0, r3
 801478e:	f000 80a8 	beq.w	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014792:	f242 030b 	movw	r3, #8203	; 0x200b
 8014796:	4298      	cmp	r0, r3
 8014798:	f000 80a3 	beq.w	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 801479c:	f1bb 0f00 	cmp.w	fp, #0
 80147a0:	d100      	bne.n	80147a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80147a2:	444e      	add	r6, r9
 80147a4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80147a6:	2a00      	cmp	r2, #0
 80147a8:	d1bf      	bne.n	801472a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80147aa:	4691      	mov	r9, r2
 80147ac:	e099      	b.n	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80147ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147b0:	2b00      	cmp	r3, #0
 80147b2:	f000 80ad 	beq.w	8014910 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 80147b6:	f1bb 0f00 	cmp.w	fp, #0
 80147ba:	d118      	bne.n	80147ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80147bc:	f8d8 0000 	ldr.w	r0, [r8]
 80147c0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80147c2:	6803      	ldr	r3, [r0, #0]
 80147c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80147c6:	4798      	blx	r3
 80147c8:	4406      	add	r6, r0
 80147ca:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80147cc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80147ce:	1af3      	subs	r3, r6, r3
 80147d0:	4293      	cmp	r3, r2
 80147d2:	dd17      	ble.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80147d4:	2c00      	cmp	r4, #0
 80147d6:	f000 8099 	beq.w	801490c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 80147da:	2c0a      	cmp	r4, #10
 80147dc:	f040 8087 	bne.w	80148ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80147e0:	240a      	movs	r4, #10
 80147e2:	fab4 f084 	clz	r0, r4
 80147e6:	0940      	lsrs	r0, r0, #5
 80147e8:	b01f      	add	sp, #124	; 0x7c
 80147ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147ee:	f8d8 0000 	ldr.w	r0, [r8]
 80147f2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80147f4:	6803      	ldr	r3, [r0, #0]
 80147f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80147f8:	4798      	blx	r3
 80147fa:	f1bb 0f01 	cmp.w	fp, #1
 80147fe:	eba6 0600 	sub.w	r6, r6, r0
 8014802:	d0a4      	beq.n	801474e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014804:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014806:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014808:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801480c:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014810:	7b43      	ldrb	r3, [r0, #13]
 8014812:	4431      	add	r1, r6
 8014814:	015b      	lsls	r3, r3, #5
 8014816:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801481a:	7983      	ldrb	r3, [r0, #6]
 801481c:	4313      	orrs	r3, r2
 801481e:	440b      	add	r3, r1
 8014820:	42bb      	cmp	r3, r7
 8014822:	db5e      	blt.n	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014824:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014826:	4299      	cmp	r1, r3
 8014828:	da5b      	bge.n	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 801482a:	f8d8 0000 	ldr.w	r0, [r8]
 801482e:	42b7      	cmp	r7, r6
 8014830:	6803      	ldr	r3, [r0, #0]
 8014832:	bfcc      	ite	gt
 8014834:	1bbf      	subgt	r7, r7, r6
 8014836:	2700      	movle	r7, #0
 8014838:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801483a:	bfc8      	it	gt
 801483c:	b2bf      	uxthgt	r7, r7
 801483e:	4798      	blx	r3
 8014840:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014842:	7b5a      	ldrb	r2, [r3, #13]
 8014844:	00d1      	lsls	r1, r2, #3
 8014846:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801484a:	7a19      	ldrb	r1, [r3, #8]
 801484c:	4329      	orrs	r1, r5
 801484e:	0655      	lsls	r5, r2, #25
 8014850:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014852:	bf48      	it	mi
 8014854:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014858:	4405      	add	r5, r0
 801485a:	bf48      	it	mi
 801485c:	b209      	sxthmi	r1, r1
 801485e:	1a6d      	subs	r5, r5, r1
 8014860:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014862:	b2ad      	uxth	r5, r5
 8014864:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014868:	fa0f fa85 	sxth.w	sl, r5
 801486c:	4551      	cmp	r1, sl
 801486e:	dd3c      	ble.n	80148ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8014870:	0112      	lsls	r2, r2, #4
 8014872:	79d8      	ldrb	r0, [r3, #7]
 8014874:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014878:	4302      	orrs	r2, r0
 801487a:	4492      	add	sl, r2
 801487c:	4551      	cmp	r1, sl
 801487e:	dc30      	bgt.n	80148e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8014880:	1b4d      	subs	r5, r1, r5
 8014882:	468a      	mov	sl, r1
 8014884:	b22d      	sxth	r5, r5
 8014886:	9319      	str	r3, [sp, #100]	; 0x64
 8014888:	b2ad      	uxth	r5, r5
 801488a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801488c:	f8d8 0000 	ldr.w	r0, [r8]
 8014890:	681a      	ldr	r2, [r3, #0]
 8014892:	6801      	ldr	r1, [r0, #0]
 8014894:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014896:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014898:	9313      	str	r3, [sp, #76]	; 0x4c
 801489a:	9218      	str	r2, [sp, #96]	; 0x60
 801489c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801489e:	4788      	blx	r1
 80148a0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80148a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80148a6:	910b      	str	r1, [sp, #44]	; 0x2c
 80148a8:	f898 100e 	ldrb.w	r1, [r8, #14]
 80148ac:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80148ae:	910a      	str	r1, [sp, #40]	; 0x28
 80148b0:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80148b4:	9109      	str	r1, [sp, #36]	; 0x24
 80148b6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80148ba:	9305      	str	r3, [sp, #20]
 80148bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80148be:	9206      	str	r2, [sp, #24]
 80148c0:	9304      	str	r3, [sp, #16]
 80148c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80148c4:	f8cd a004 	str.w	sl, [sp, #4]
 80148c8:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80148cc:	4437      	add	r7, r6
 80148ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80148d0:	b23f      	sxth	r7, r7
 80148d2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80148d6:	9700      	str	r7, [sp, #0]
 80148d8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80148da:	681a      	ldr	r2, [r3, #0]
 80148dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80148de:	685b      	ldr	r3, [r3, #4]
 80148e0:	47a8      	blx	r5
 80148e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148e4:	3301      	adds	r3, #1
 80148e6:	930e      	str	r3, [sp, #56]	; 0x38
 80148e8:	e6e0      	b.n	80146ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80148ea:	2500      	movs	r5, #0
 80148ec:	e7cb      	b.n	8014886 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 80148ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80148f0:	3501      	adds	r5, #1
 80148f2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80148f4:	429d      	cmp	r5, r3
 80148f6:	f6bf af74 	bge.w	80147e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80148fa:	4659      	mov	r1, fp
 80148fc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80148fe:	f7fa fcb3 	bl	800f268 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014902:	4604      	mov	r4, r0
 8014904:	b110      	cbz	r0, 801490c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8014906:	280a      	cmp	r0, #10
 8014908:	d1f2      	bne.n	80148f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 801490a:	e769      	b.n	80147e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801490c:	2400      	movs	r4, #0
 801490e:	e768      	b.n	80147e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014910:	f1bb 0f00 	cmp.w	fp, #0
 8014914:	f43f af59 	beq.w	80147ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014918:	e774      	b.n	8014804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801491a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801491a:	b530      	push	{r4, r5, lr}
 801491c:	8ac4      	ldrh	r4, [r0, #22]
 801491e:	8b45      	ldrh	r5, [r0, #26]
 8014920:	8343      	strh	r3, [r0, #26]
 8014922:	442c      	add	r4, r5
 8014924:	1ae4      	subs	r4, r4, r3
 8014926:	8b83      	ldrh	r3, [r0, #28]
 8014928:	82c4      	strh	r4, [r0, #22]
 801492a:	8b04      	ldrh	r4, [r0, #24]
 801492c:	4422      	add	r2, r4
 801492e:	440c      	add	r4, r1
 8014930:	1a59      	subs	r1, r3, r1
 8014932:	83c2      	strh	r2, [r0, #30]
 8014934:	8304      	strh	r4, [r0, #24]
 8014936:	8381      	strh	r1, [r0, #28]
 8014938:	bd30      	pop	{r4, r5, pc}

0801493a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801493a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801493e:	4604      	mov	r4, r0
 8014940:	8a47      	ldrh	r7, [r0, #18]
 8014942:	68c0      	ldr	r0, [r0, #12]
 8014944:	b085      	sub	sp, #20
 8014946:	6803      	ldr	r3, [r0, #0]
 8014948:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801494a:	4798      	blx	r3
 801494c:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014950:	7a63      	ldrb	r3, [r4, #9]
 8014952:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014956:	3b01      	subs	r3, #1
 8014958:	42b7      	cmp	r7, r6
 801495a:	bfac      	ite	ge
 801495c:	f04f 0900 	movge.w	r9, #0
 8014960:	f04f 0901 	movlt.w	r9, #1
 8014964:	2b05      	cmp	r3, #5
 8014966:	d804      	bhi.n	8014972 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 8014968:	e8df f003 	tbb	[pc, r3]
 801496c:	470f0854 	.word	0x470f0854
 8014970:	4c4c      	.short	0x4c4c
 8014972:	2500      	movs	r5, #0
 8014974:	46a9      	mov	r9, r5
 8014976:	462e      	mov	r6, r5
 8014978:	462f      	mov	r7, r5
 801497a:	e00e      	b.n	801499a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801497c:	42b7      	cmp	r7, r6
 801497e:	f04f 0500 	mov.w	r5, #0
 8014982:	bfb4      	ite	lt
 8014984:	2600      	movlt	r6, #0
 8014986:	2601      	movge	r6, #1
 8014988:	e7f6      	b.n	8014978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 801498a:	42b7      	cmp	r7, r6
 801498c:	464d      	mov	r5, r9
 801498e:	f04f 0900 	mov.w	r9, #0
 8014992:	bfb4      	ite	lt
 8014994:	2600      	movlt	r6, #0
 8014996:	2601      	movge	r6, #1
 8014998:	464f      	mov	r7, r9
 801499a:	f04f 0800 	mov.w	r8, #0
 801499e:	f8a4 8016 	strh.w	r8, [r4, #22]
 80149a2:	f8a4 8018 	strh.w	r8, [r4, #24]
 80149a6:	f8cd 8004 	str.w	r8, [sp, #4]
 80149aa:	2300      	movs	r3, #0
 80149ac:	9303      	str	r3, [sp, #12]
 80149ae:	8823      	ldrh	r3, [r4, #0]
 80149b0:	2b20      	cmp	r3, #32
 80149b2:	d033      	beq.n	8014a1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 80149b4:	f242 010b 	movw	r1, #8203	; 0x200b
 80149b8:	1a5a      	subs	r2, r3, r1
 80149ba:	f1d2 0a00 	rsbs	sl, r2, #0
 80149be:	eb4a 0a02 	adc.w	sl, sl, r2
 80149c2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80149c6:	4293      	cmp	r3, r2
 80149c8:	d008      	beq.n	80149dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 80149ca:	428b      	cmp	r3, r1
 80149cc:	9a01      	ldr	r2, [sp, #4]
 80149ce:	bf0e      	itee	eq
 80149d0:	f04f 0a01 	moveq.w	sl, #1
 80149d4:	461a      	movne	r2, r3
 80149d6:	f04f 0a00 	movne.w	sl, #0
 80149da:	9201      	str	r2, [sp, #4]
 80149dc:	ab03      	add	r3, sp, #12
 80149de:	68e2      	ldr	r2, [r4, #12]
 80149e0:	7a21      	ldrb	r1, [r4, #8]
 80149e2:	6860      	ldr	r0, [r4, #4]
 80149e4:	f002 fd9c 	bl	8017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80149e8:	8020      	strh	r0, [r4, #0]
 80149ea:	b9d8      	cbnz	r0, 8014a24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 80149ec:	8ba2      	ldrh	r2, [r4, #28]
 80149ee:	2300      	movs	r3, #0
 80149f0:	4611      	mov	r1, r2
 80149f2:	4620      	mov	r0, r4
 80149f4:	f7ff ff91 	bl	801491a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80149f8:	e06e      	b.n	8014ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 80149fa:	2500      	movs	r5, #0
 80149fc:	2701      	movs	r7, #1
 80149fe:	46a9      	mov	r9, r5
 8014a00:	462e      	mov	r6, r5
 8014a02:	e7ca      	b.n	801499a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014a04:	42b7      	cmp	r7, r6
 8014a06:	f04f 0500 	mov.w	r5, #0
 8014a0a:	bfb4      	ite	lt
 8014a0c:	2700      	movlt	r7, #0
 8014a0e:	2701      	movge	r7, #1
 8014a10:	462e      	mov	r6, r5
 8014a12:	e7c2      	b.n	801499a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014a14:	2500      	movs	r5, #0
 8014a16:	2601      	movs	r6, #1
 8014a18:	46a9      	mov	r9, r5
 8014a1a:	e7ad      	b.n	8014978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8014a1c:	9301      	str	r3, [sp, #4]
 8014a1e:	f04f 0a01 	mov.w	sl, #1
 8014a22:	e7db      	b.n	80149dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8014a24:	8b63      	ldrh	r3, [r4, #26]
 8014a26:	280a      	cmp	r0, #10
 8014a28:	f103 0301 	add.w	r3, r3, #1
 8014a2c:	8363      	strh	r3, [r4, #26]
 8014a2e:	d0dd      	beq.n	80149ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 8014a30:	9a03      	ldr	r2, [sp, #12]
 8014a32:	bb62      	cbnz	r2, 8014a8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8014a34:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014a38:	4298      	cmp	r0, r3
 8014a3a:	d003      	beq.n	8014a44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8014a3c:	f242 030b 	movw	r3, #8203	; 0x200b
 8014a40:	4298      	cmp	r0, r3
 8014a42:	d1b2      	bne.n	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a44:	8823      	ldrh	r3, [r4, #0]
 8014a46:	8ba1      	ldrh	r1, [r4, #28]
 8014a48:	2b20      	cmp	r3, #32
 8014a4a:	d003      	beq.n	8014a54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8014a4c:	f242 000b 	movw	r0, #8203	; 0x200b
 8014a50:	4283      	cmp	r3, r0
 8014a52:	d131      	bne.n	8014ab8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8014a54:	f1ba 0f00 	cmp.w	sl, #0
 8014a58:	bf0a      	itet	eq
 8014a5a:	4688      	moveq	r8, r1
 8014a5c:	4650      	movne	r0, sl
 8014a5e:	2001      	moveq	r0, #1
 8014a60:	440a      	add	r2, r1
 8014a62:	8b23      	ldrh	r3, [r4, #24]
 8014a64:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8014a68:	b292      	uxth	r2, r2
 8014a6a:	83a2      	strh	r2, [r4, #28]
 8014a6c:	4413      	add	r3, r2
 8014a6e:	f1b9 0f00 	cmp.w	r9, #0
 8014a72:	d102      	bne.n	8014a7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8014a74:	2d00      	cmp	r5, #0
 8014a76:	d042      	beq.n	8014afe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 8014a78:	b300      	cbz	r0, 8014abc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 8014a7a:	8c21      	ldrh	r1, [r4, #32]
 8014a7c:	4419      	add	r1, r3
 8014a7e:	458c      	cmp	ip, r1
 8014a80:	da37      	bge.n	8014af2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8014a82:	8ae1      	ldrh	r1, [r4, #22]
 8014a84:	2900      	cmp	r1, #0
 8014a86:	d034      	beq.n	8014af2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8014a88:	4563      	cmp	r3, ip
 8014a8a:	dd8e      	ble.n	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a8c:	e01d      	b.n	8014aca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8014a8e:	8893      	ldrh	r3, [r2, #4]
 8014a90:	9901      	ldr	r1, [sp, #4]
 8014a92:	8023      	strh	r3, [r4, #0]
 8014a94:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8014a98:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014a9c:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014aa0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014aa4:	ea4b 0b00 	orr.w	fp, fp, r0
 8014aa8:	68e0      	ldr	r0, [r4, #12]
 8014aaa:	6803      	ldr	r3, [r0, #0]
 8014aac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014aae:	4798      	blx	r3
 8014ab0:	eb0b 0200 	add.w	r2, fp, r0
 8014ab4:	b292      	uxth	r2, r2
 8014ab6:	e7c5      	b.n	8014a44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8014ab8:	2000      	movs	r0, #0
 8014aba:	e7d1      	b.n	8014a60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8014abc:	4563      	cmp	r3, ip
 8014abe:	f77f af74 	ble.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014ac2:	8ae3      	ldrh	r3, [r4, #22]
 8014ac4:	2b00      	cmp	r3, #0
 8014ac6:	f43f af70 	beq.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014aca:	2301      	movs	r3, #1
 8014acc:	8c22      	ldrh	r2, [r4, #32]
 8014ace:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014ad2:	8be3      	ldrh	r3, [r4, #30]
 8014ad4:	4413      	add	r3, r2
 8014ad6:	83e3      	strh	r3, [r4, #30]
 8014ad8:	68e0      	ldr	r0, [r4, #12]
 8014ada:	6803      	ldr	r3, [r0, #0]
 8014adc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014ade:	4798      	blx	r3
 8014ae0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014ae4:	4418      	add	r0, r3
 8014ae6:	8a63      	ldrh	r3, [r4, #18]
 8014ae8:	1a18      	subs	r0, r3, r0
 8014aea:	8260      	strh	r0, [r4, #18]
 8014aec:	b005      	add	sp, #20
 8014aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014af2:	2300      	movs	r3, #0
 8014af4:	4611      	mov	r1, r2
 8014af6:	4620      	mov	r0, r4
 8014af8:	f7ff ff0f 	bl	801491a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014afc:	e755      	b.n	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014afe:	4563      	cmp	r3, ip
 8014b00:	dd14      	ble.n	8014b2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8014b02:	b117      	cbz	r7, 8014b0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8014b04:	2301      	movs	r3, #1
 8014b06:	460a      	mov	r2, r1
 8014b08:	e772      	b.n	80149f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8014b0a:	2e00      	cmp	r6, #0
 8014b0c:	f43f af4d 	beq.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b10:	2800      	cmp	r0, #0
 8014b12:	f47f af4a 	bne.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b16:	f1ba 0f00 	cmp.w	sl, #0
 8014b1a:	d002      	beq.n	8014b22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8014b1c:	2301      	movs	r3, #1
 8014b1e:	4642      	mov	r2, r8
 8014b20:	e767      	b.n	80149f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014b22:	8ae3      	ldrh	r3, [r4, #22]
 8014b24:	2b00      	cmp	r3, #0
 8014b26:	f43f af40 	beq.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b2a:	e7d5      	b.n	8014ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8014b2c:	2800      	cmp	r0, #0
 8014b2e:	f47f af3c 	bne.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b32:	f1ba 0f00 	cmp.w	sl, #0
 8014b36:	f43f af38 	beq.w	80149aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b3a:	2301      	movs	r3, #1
 8014b3c:	4642      	mov	r2, r8
 8014b3e:	e7da      	b.n	8014af6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

08014b40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b42:	4605      	mov	r5, r0
 8014b44:	b08f      	sub	sp, #60	; 0x3c
 8014b46:	4617      	mov	r7, r2
 8014b48:	461c      	mov	r4, r3
 8014b4a:	460e      	mov	r6, r1
 8014b4c:	b1d1      	cbz	r1, 8014b84 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014b4e:	681b      	ldr	r3, [r3, #0]
 8014b50:	4620      	mov	r0, r4
 8014b52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b54:	4798      	blx	r3
 8014b56:	4240      	negs	r0, r0
 8014b58:	9603      	str	r6, [sp, #12]
 8014b5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014b5e:	b200      	sxth	r0, r0
 8014b60:	9700      	str	r7, [sp, #0]
 8014b62:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014b66:	4629      	mov	r1, r5
 8014b68:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014b6c:	2401      	movs	r4, #1
 8014b6e:	a805      	add	r0, sp, #20
 8014b70:	f7ff fcbe 	bl	80144f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014b74:	a805      	add	r0, sp, #20
 8014b76:	f7ff fee0 	bl	801493a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014b7a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014b7e:	b163      	cbz	r3, 8014b9a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014b80:	3401      	adds	r4, #1
 8014b82:	e7f7      	b.n	8014b74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014b84:	2401      	movs	r4, #1
 8014b86:	f002 fd97 	bl	80176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014b8a:	280a      	cmp	r0, #10
 8014b8c:	4628      	mov	r0, r5
 8014b8e:	bf08      	it	eq
 8014b90:	3401      	addeq	r4, #1
 8014b92:	f002 fd91 	bl	80176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014b96:	2800      	cmp	r0, #0
 8014b98:	d1f7      	bne.n	8014b8a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8014b9a:	b2a0      	uxth	r0, r4
 8014b9c:	b00f      	add	sp, #60	; 0x3c
 8014b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ba4:	b0e3      	sub	sp, #396	; 0x18c
 8014ba6:	461c      	mov	r4, r3
 8014ba8:	4683      	mov	fp, r0
 8014baa:	4688      	mov	r8, r1
 8014bac:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8014bae:	2b00      	cmp	r3, #0
 8014bb0:	f000 8112 	beq.w	8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014bb4:	6823      	ldr	r3, [r4, #0]
 8014bb6:	2b00      	cmp	r3, #0
 8014bb8:	f000 810e 	beq.w	8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014bbc:	7ba3      	ldrb	r3, [r4, #14]
 8014bbe:	2b00      	cmp	r3, #0
 8014bc0:	f000 810a 	beq.w	8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014bc4:	ad0a      	add	r5, sp, #40	; 0x28
 8014bc6:	6810      	ldr	r0, [r2, #0]
 8014bc8:	6851      	ldr	r1, [r2, #4]
 8014bca:	462b      	mov	r3, r5
 8014bcc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014bd0:	c303      	stmia	r3!, {r0, r1}
 8014bd2:	2100      	movs	r1, #0
 8014bd4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014bd8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014bdc:	4628      	mov	r0, r5
 8014bde:	910c      	str	r1, [sp, #48]	; 0x30
 8014be0:	a90c      	add	r1, sp, #48	; 0x30
 8014be2:	79a2      	ldrb	r2, [r4, #6]
 8014be4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014be8:	f7ff fd01 	bl	80145ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014bec:	a90c      	add	r1, sp, #48	; 0x30
 8014bee:	79a2      	ldrb	r2, [r4, #6]
 8014bf0:	4608      	mov	r0, r1
 8014bf2:	f7ff fcfc 	bl	80145ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014bf6:	a817      	add	r0, sp, #92	; 0x5c
 8014bf8:	f002 f932 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 8014bfc:	6820      	ldr	r0, [r4, #0]
 8014bfe:	6803      	ldr	r3, [r0, #0]
 8014c00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014c02:	4798      	blx	r3
 8014c04:	4606      	mov	r6, r0
 8014c06:	6820      	ldr	r0, [r4, #0]
 8014c08:	6803      	ldr	r3, [r0, #0]
 8014c0a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014c0c:	4798      	blx	r3
 8014c0e:	4633      	mov	r3, r6
 8014c10:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014c12:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014c14:	9000      	str	r0, [sp, #0]
 8014c16:	a817      	add	r0, sp, #92	; 0x5c
 8014c18:	f002 f97d 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014c1c:	6820      	ldr	r0, [r4, #0]
 8014c1e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014c22:	6803      	ldr	r3, [r0, #0]
 8014c24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014c26:	4798      	blx	r3
 8014c28:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014c2c:	6823      	ldr	r3, [r4, #0]
 8014c2e:	4607      	mov	r7, r0
 8014c30:	4406      	add	r6, r0
 8014c32:	a830      	add	r0, sp, #192	; 0xc0
 8014c34:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014c38:	f002 f912 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 8014c3c:	7c23      	ldrb	r3, [r4, #16]
 8014c3e:	b17b      	cbz	r3, 8014c60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014c40:	6820      	ldr	r0, [r4, #0]
 8014c42:	6803      	ldr	r3, [r0, #0]
 8014c44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014c46:	4798      	blx	r3
 8014c48:	9009      	str	r0, [sp, #36]	; 0x24
 8014c4a:	6820      	ldr	r0, [r4, #0]
 8014c4c:	6802      	ldr	r2, [r0, #0]
 8014c4e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014c50:	4790      	blx	r2
 8014c52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c54:	9000      	str	r0, [sp, #0]
 8014c56:	a830      	add	r0, sp, #192	; 0xc0
 8014c58:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014c5a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014c5c:	f002 f95b 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014c60:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014c64:	a80e      	add	r0, sp, #56	; 0x38
 8014c66:	7be2      	ldrb	r2, [r4, #15]
 8014c68:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014c6c:	1a8a      	subs	r2, r1, r2
 8014c6e:	7c21      	ldrb	r1, [r4, #16]
 8014c70:	9103      	str	r1, [sp, #12]
 8014c72:	b292      	uxth	r2, r2
 8014c74:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014c78:	9102      	str	r1, [sp, #8]
 8014c7a:	6821      	ldr	r1, [r4, #0]
 8014c7c:	9101      	str	r1, [sp, #4]
 8014c7e:	7961      	ldrb	r1, [r4, #5]
 8014c80:	9100      	str	r1, [sp, #0]
 8014c82:	a930      	add	r1, sp, #192	; 0xc0
 8014c84:	f7ff fc34 	bl	80144f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014c88:	2e00      	cmp	r6, #0
 8014c8a:	dc5b      	bgt.n	8014d44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014c8c:	af17      	add	r7, sp, #92	; 0x5c
 8014c8e:	f04f 0900 	mov.w	r9, #0
 8014c92:	7c23      	ldrb	r3, [r4, #16]
 8014c94:	2b00      	cmp	r3, #0
 8014c96:	f000 80b1 	beq.w	8014dfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014c9a:	a80e      	add	r0, sp, #56	; 0x38
 8014c9c:	f7ff fe4d 	bl	801493a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014ca0:	f1ba 0f00 	cmp.w	sl, #0
 8014ca4:	f000 80a5 	beq.w	8014df2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014ca8:	7c23      	ldrb	r3, [r4, #16]
 8014caa:	2264      	movs	r2, #100	; 0x64
 8014cac:	4639      	mov	r1, r7
 8014cae:	a849      	add	r0, sp, #292	; 0x124
 8014cb0:	9309      	str	r3, [sp, #36]	; 0x24
 8014cb2:	f011 fbac 	bl	802640e <memcpy>
 8014cb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014cb8:	2b00      	cmp	r3, #0
 8014cba:	f000 80a7 	beq.w	8014e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014cbe:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014cc2:	7922      	ldrb	r2, [r4, #4]
 8014cc4:	2a01      	cmp	r2, #1
 8014cc6:	f040 808a 	bne.w	8014dde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014cca:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014cce:	1ac0      	subs	r0, r0, r3
 8014cd0:	2302      	movs	r3, #2
 8014cd2:	fb90 f0f3 	sdiv	r0, r0, r3
 8014cd6:	b200      	sxth	r0, r0
 8014cd8:	7c23      	ldrb	r3, [r4, #16]
 8014cda:	2b00      	cmp	r3, #0
 8014cdc:	f000 808b 	beq.w	8014df6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014ce0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014ce4:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014ce8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014cec:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014cf0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014cf4:	2100      	movs	r1, #0
 8014cf6:	4410      	add	r0, r2
 8014cf8:	4642      	mov	r2, r8
 8014cfa:	b200      	sxth	r0, r0
 8014cfc:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014d00:	9000      	str	r0, [sp, #0]
 8014d02:	4658      	mov	r0, fp
 8014d04:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014d08:	f7ff fca2 	bl	8014650 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014d0c:	2800      	cmp	r0, #0
 8014d0e:	d163      	bne.n	8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d10:	b2b2      	uxth	r2, r6
 8014d12:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014d16:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014d1a:	4413      	add	r3, r2
 8014d1c:	1a8a      	subs	r2, r1, r2
 8014d1e:	b21b      	sxth	r3, r3
 8014d20:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014d24:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014d28:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014d2c:	2a00      	cmp	r2, #0
 8014d2e:	d153      	bne.n	8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d30:	6822      	ldr	r2, [r4, #0]
 8014d32:	8869      	ldrh	r1, [r5, #2]
 8014d34:	7a12      	ldrb	r2, [r2, #8]
 8014d36:	1a9b      	subs	r3, r3, r2
 8014d38:	88ea      	ldrh	r2, [r5, #6]
 8014d3a:	440a      	add	r2, r1
 8014d3c:	b212      	sxth	r2, r2
 8014d3e:	4293      	cmp	r3, r2
 8014d40:	dda7      	ble.n	8014c92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014d42:	e049      	b.n	8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d44:	7c23      	ldrb	r3, [r4, #16]
 8014d46:	444f      	add	r7, r9
 8014d48:	b1c3      	cbz	r3, 8014d7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014d4a:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014d4e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014d52:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014d56:	443b      	add	r3, r7
 8014d58:	4293      	cmp	r3, r2
 8014d5a:	da97      	bge.n	8014c8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014d5c:	a80e      	add	r0, sp, #56	; 0x38
 8014d5e:	f7ff fdec 	bl	801493a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014d62:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014d66:	3b01      	subs	r3, #1
 8014d68:	b29b      	uxth	r3, r3
 8014d6a:	454b      	cmp	r3, r9
 8014d6c:	9309      	str	r3, [sp, #36]	; 0x24
 8014d6e:	d021      	beq.n	8014db4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014d70:	7961      	ldrb	r1, [r4, #5]
 8014d72:	a817      	add	r0, sp, #92	; 0x5c
 8014d74:	f7fa fa78 	bl	800f268 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014d78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d7a:	e7f4      	b.n	8014d66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014d7c:	fa1f f986 	uxth.w	r9, r6
 8014d80:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014d84:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014d88:	443b      	add	r3, r7
 8014d8a:	4293      	cmp	r3, r2
 8014d8c:	f6bf af7e 	bge.w	8014c8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014d90:	a817      	add	r0, sp, #92	; 0x5c
 8014d92:	f002 fc91 	bl	80176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014d96:	b1f8      	cbz	r0, 8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d98:	280a      	cmp	r0, #10
 8014d9a:	d1f1      	bne.n	8014d80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014d9c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014da0:	444b      	add	r3, r9
 8014da2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014da6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014daa:	eba3 0309 	sub.w	r3, r3, r9
 8014dae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014db2:	e7e5      	b.n	8014d80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014db4:	b2b3      	uxth	r3, r6
 8014db6:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014dba:	441a      	add	r2, r3
 8014dbc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014dc0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014dc4:	1ad3      	subs	r3, r2, r3
 8014dc6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014dca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014dce:	b11b      	cbz	r3, 8014dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014dd0:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014dd4:	2b00      	cmp	r3, #0
 8014dd6:	d0ba      	beq.n	8014d4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014dd8:	b063      	add	sp, #396	; 0x18c
 8014dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dde:	2a02      	cmp	r2, #2
 8014de0:	d105      	bne.n	8014dee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014de2:	7be2      	ldrb	r2, [r4, #15]
 8014de4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014de8:	1a80      	subs	r0, r0, r2
 8014dea:	1ac0      	subs	r0, r0, r3
 8014dec:	e773      	b.n	8014cd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014dee:	2000      	movs	r0, #0
 8014df0:	e772      	b.n	8014cd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014df2:	7be0      	ldrb	r0, [r4, #15]
 8014df4:	e770      	b.n	8014cd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014df6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014dfa:	e773      	b.n	8014ce4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014dfc:	f1ba 0f00 	cmp.w	sl, #0
 8014e00:	d0f7      	beq.n	8014df2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014e02:	2264      	movs	r2, #100	; 0x64
 8014e04:	4639      	mov	r1, r7
 8014e06:	a849      	add	r0, sp, #292	; 0x124
 8014e08:	f011 fb01 	bl	802640e <memcpy>
 8014e0c:	2300      	movs	r3, #0
 8014e0e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014e12:	6821      	ldr	r1, [r4, #0]
 8014e14:	a849      	add	r0, sp, #292	; 0x124
 8014e16:	f7ff fbae 	bl	8014576 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014e1a:	b203      	sxth	r3, r0
 8014e1c:	e751      	b.n	8014cc2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014e1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014e1e:	2b03      	cmp	r3, #3
 8014e20:	d818      	bhi.n	8014e54 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014e22:	e8df f003 	tbb	[pc, r3]
 8014e26:	0602      	.short	0x0602
 8014e28:	130d      	.short	0x130d
 8014e2a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014e2e:	1850      	adds	r0, r2, r1
 8014e30:	4770      	bx	lr
 8014e32:	8803      	ldrh	r3, [r0, #0]
 8014e34:	8880      	ldrh	r0, [r0, #4]
 8014e36:	4418      	add	r0, r3
 8014e38:	b200      	sxth	r0, r0
 8014e3a:	1a80      	subs	r0, r0, r2
 8014e3c:	3801      	subs	r0, #1
 8014e3e:	4770      	bx	lr
 8014e40:	8803      	ldrh	r3, [r0, #0]
 8014e42:	8880      	ldrh	r0, [r0, #4]
 8014e44:	4418      	add	r0, r3
 8014e46:	b200      	sxth	r0, r0
 8014e48:	1a40      	subs	r0, r0, r1
 8014e4a:	e7f7      	b.n	8014e3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014e4c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014e50:	4410      	add	r0, r2
 8014e52:	4770      	bx	lr
 8014e54:	2000      	movs	r0, #0
 8014e56:	4770      	bx	lr

08014e58 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014e58:	2b03      	cmp	r3, #3
 8014e5a:	d817      	bhi.n	8014e8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014e5c:	e8df f003 	tbb	[pc, r3]
 8014e60:	10090602 	.word	0x10090602
 8014e64:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014e68:	1850      	adds	r0, r2, r1
 8014e6a:	4770      	bx	lr
 8014e6c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014e70:	e7fa      	b.n	8014e68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014e72:	8843      	ldrh	r3, [r0, #2]
 8014e74:	88c0      	ldrh	r0, [r0, #6]
 8014e76:	4418      	add	r0, r3
 8014e78:	b200      	sxth	r0, r0
 8014e7a:	1a80      	subs	r0, r0, r2
 8014e7c:	3801      	subs	r0, #1
 8014e7e:	4770      	bx	lr
 8014e80:	8843      	ldrh	r3, [r0, #2]
 8014e82:	88c0      	ldrh	r0, [r0, #6]
 8014e84:	4418      	add	r0, r3
 8014e86:	b200      	sxth	r0, r0
 8014e88:	1a40      	subs	r0, r0, r1
 8014e8a:	e7f7      	b.n	8014e7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014e8c:	2000      	movs	r0, #0
 8014e8e:	4770      	bx	lr

08014e90 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014e90:	4b01      	ldr	r3, [pc, #4]	; (8014e98 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014e92:	2200      	movs	r2, #0
 8014e94:	601a      	str	r2, [r3, #0]
 8014e96:	4770      	bx	lr
 8014e98:	24004a58 	.word	0x24004a58

08014e9c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014e9c:	4603      	mov	r3, r0
 8014e9e:	b1c8      	cbz	r0, 8014ed4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014ea0:	0c02      	lsrs	r2, r0, #16
 8014ea2:	0412      	lsls	r2, r2, #16
 8014ea4:	b9a2      	cbnz	r2, 8014ed0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014ea6:	0403      	lsls	r3, r0, #16
 8014ea8:	2010      	movs	r0, #16
 8014eaa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014eae:	bf04      	itt	eq
 8014eb0:	021b      	lsleq	r3, r3, #8
 8014eb2:	3008      	addeq	r0, #8
 8014eb4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014eb8:	bf04      	itt	eq
 8014eba:	011b      	lsleq	r3, r3, #4
 8014ebc:	3004      	addeq	r0, #4
 8014ebe:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014ec2:	bf04      	itt	eq
 8014ec4:	009b      	lsleq	r3, r3, #2
 8014ec6:	3002      	addeq	r0, #2
 8014ec8:	2b00      	cmp	r3, #0
 8014eca:	db04      	blt.n	8014ed6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014ecc:	3001      	adds	r0, #1
 8014ece:	4770      	bx	lr
 8014ed0:	2000      	movs	r0, #0
 8014ed2:	e7ea      	b.n	8014eaa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014ed4:	2020      	movs	r0, #32
 8014ed6:	4770      	bx	lr

08014ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014edc:	b087      	sub	sp, #28
 8014ede:	460d      	mov	r5, r1
 8014ee0:	4616      	mov	r6, r2
 8014ee2:	4698      	mov	r8, r3
 8014ee4:	4601      	mov	r1, r0
 8014ee6:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014eea:	b120      	cbz	r0, 8014ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014eec:	b11a      	cbz	r2, 8014ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014eee:	2d1f      	cmp	r5, #31
 8014ef0:	d801      	bhi.n	8014ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014ef2:	2b1f      	cmp	r3, #31
 8014ef4:	d904      	bls.n	8014f00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014ef6:	2000      	movs	r0, #0
 8014ef8:	6038      	str	r0, [r7, #0]
 8014efa:	b007      	add	sp, #28
 8014efc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f00:	b97d      	cbnz	r5, 8014f22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014f02:	b143      	cbz	r3, 8014f16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014f04:	4602      	mov	r2, r0
 8014f06:	462b      	mov	r3, r5
 8014f08:	4641      	mov	r1, r8
 8014f0a:	4630      	mov	r0, r6
 8014f0c:	e9cd 4700 	strd	r4, r7, [sp]
 8014f10:	f7ff ffe2 	bl	8014ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014f14:	e7f1      	b.n	8014efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014f16:	f04f 33ff 	mov.w	r3, #4294967295
 8014f1a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014f1e:	603b      	str	r3, [r7, #0]
 8014f20:	e7eb      	b.n	8014efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014f22:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014f26:	d106      	bne.n	8014f36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014f28:	4346      	muls	r6, r0
 8014f2a:	fbb6 f0f4 	udiv	r0, r6, r4
 8014f2e:	fb04 6610 	mls	r6, r4, r0, r6
 8014f32:	603e      	str	r6, [r7, #0]
 8014f34:	e7e1      	b.n	8014efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014f36:	2201      	movs	r2, #1
 8014f38:	fa00 fb05 	lsl.w	fp, r0, r5
 8014f3c:	40aa      	lsls	r2, r5
 8014f3e:	fbbb f9f4 	udiv	r9, fp, r4
 8014f42:	3a01      	subs	r2, #1
 8014f44:	fb0a f309 	mul.w	r3, sl, r9
 8014f48:	fb04 b919 	mls	r9, r4, r9, fp
 8014f4c:	4016      	ands	r6, r2
 8014f4e:	9303      	str	r3, [sp, #12]
 8014f50:	4630      	mov	r0, r6
 8014f52:	f7ff ffa3 	bl	8014e9c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014f56:	462b      	mov	r3, r5
 8014f58:	460a      	mov	r2, r1
 8014f5a:	4601      	mov	r1, r0
 8014f5c:	4630      	mov	r0, r6
 8014f5e:	e9cd 4700 	strd	r4, r7, [sp]
 8014f62:	f7ff ffb9 	bl	8014ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014f66:	4606      	mov	r6, r0
 8014f68:	4648      	mov	r0, r9
 8014f6a:	eb05 0108 	add.w	r1, r5, r8
 8014f6e:	f7ff ff95 	bl	8014e9c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014f72:	ab05      	add	r3, sp, #20
 8014f74:	464a      	mov	r2, r9
 8014f76:	e9cd 4300 	strd	r4, r3, [sp]
 8014f7a:	4603      	mov	r3, r0
 8014f7c:	4650      	mov	r0, sl
 8014f7e:	f7ff ffab 	bl	8014ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014f82:	6839      	ldr	r1, [r7, #0]
 8014f84:	9a05      	ldr	r2, [sp, #20]
 8014f86:	9b03      	ldr	r3, [sp, #12]
 8014f88:	4411      	add	r1, r2
 8014f8a:	fbb1 f2f4 	udiv	r2, r1, r4
 8014f8e:	18d3      	adds	r3, r2, r3
 8014f90:	fb04 1412 	mls	r4, r4, r2, r1
 8014f94:	441e      	add	r6, r3
 8014f96:	603c      	str	r4, [r7, #0]
 8014f98:	4430      	add	r0, r6
 8014f9a:	e7ae      	b.n	8014efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014f9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014fa0:	b085      	sub	sp, #20
 8014fa2:	f1b0 0900 	subs.w	r9, r0, #0
 8014fa6:	461d      	mov	r5, r3
 8014fa8:	4617      	mov	r7, r2
 8014faa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014fac:	bfbb      	ittet	lt
 8014fae:	f1c9 0900 	rsblt	r9, r9, #0
 8014fb2:	f04f 36ff 	movlt.w	r6, #4294967295
 8014fb6:	2601      	movge	r6, #1
 8014fb8:	6823      	ldrlt	r3, [r4, #0]
 8014fba:	bfbc      	itt	lt
 8014fbc:	425b      	neglt	r3, r3
 8014fbe:	6023      	strlt	r3, [r4, #0]
 8014fc0:	2a00      	cmp	r2, #0
 8014fc2:	da04      	bge.n	8014fce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014fc4:	6823      	ldr	r3, [r4, #0]
 8014fc6:	4257      	negs	r7, r2
 8014fc8:	4276      	negs	r6, r6
 8014fca:	425b      	negs	r3, r3
 8014fcc:	6023      	str	r3, [r4, #0]
 8014fce:	2d00      	cmp	r5, #0
 8014fd0:	4638      	mov	r0, r7
 8014fd2:	bfba      	itte	lt
 8014fd4:	426d      	neglt	r5, r5
 8014fd6:	f04f 38ff 	movlt.w	r8, #4294967295
 8014fda:	f04f 0801 	movge.w	r8, #1
 8014fde:	f7ff ff5d 	bl	8014e9c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014fe2:	ab03      	add	r3, sp, #12
 8014fe4:	463a      	mov	r2, r7
 8014fe6:	e9cd 5300 	strd	r5, r3, [sp]
 8014fea:	4603      	mov	r3, r0
 8014fec:	4648      	mov	r0, r9
 8014fee:	f7ff ff73 	bl	8014ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014ff2:	6823      	ldr	r3, [r4, #0]
 8014ff4:	9a03      	ldr	r2, [sp, #12]
 8014ff6:	4546      	cmp	r6, r8
 8014ff8:	441a      	add	r2, r3
 8014ffa:	fb92 f3f5 	sdiv	r3, r2, r5
 8014ffe:	4418      	add	r0, r3
 8015000:	fb05 2313 	mls	r3, r5, r3, r2
 8015004:	bf18      	it	ne
 8015006:	4240      	negne	r0, r0
 8015008:	1c72      	adds	r2, r6, #1
 801500a:	6023      	str	r3, [r4, #0]
 801500c:	d105      	bne.n	801501a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801500e:	2b00      	cmp	r3, #0
 8015010:	f1c3 0200 	rsb	r2, r3, #0
 8015014:	db0b      	blt.n	801502e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015016:	6022      	str	r2, [r4, #0]
 8015018:	e006      	b.n	8015028 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801501a:	2e01      	cmp	r6, #1
 801501c:	d104      	bne.n	8015028 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801501e:	2b00      	cmp	r3, #0
 8015020:	da02      	bge.n	8015028 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015022:	442b      	add	r3, r5
 8015024:	3801      	subs	r0, #1
 8015026:	6023      	str	r3, [r4, #0]
 8015028:	b005      	add	sp, #20
 801502a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801502e:	3801      	subs	r0, #1
 8015030:	1b52      	subs	r2, r2, r5
 8015032:	e7f0      	b.n	8015016 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015034 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015034:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8015038:	4c1c      	ldr	r4, [pc, #112]	; (80150ac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801503a:	4605      	mov	r5, r0
 801503c:	6807      	ldr	r7, [r0, #0]
 801503e:	69a3      	ldr	r3, [r4, #24]
 8015040:	b92b      	cbnz	r3, 801504e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015042:	6840      	ldr	r0, [r0, #4]
 8015044:	e9c5 7000 	strd	r7, r0, [r5]
 8015048:	b004      	add	sp, #16
 801504a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801504e:	f04f 0802 	mov.w	r8, #2
 8015052:	68a2      	ldr	r2, [r4, #8]
 8015054:	ae04      	add	r6, sp, #16
 8015056:	6820      	ldr	r0, [r4, #0]
 8015058:	fb93 f1f8 	sdiv	r1, r3, r8
 801505c:	440a      	add	r2, r1
 801505e:	69e1      	ldr	r1, [r4, #28]
 8015060:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015064:	463a      	mov	r2, r7
 8015066:	9600      	str	r6, [sp, #0]
 8015068:	f7ff ff98 	bl	8014f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801506c:	69a3      	ldr	r3, [r4, #24]
 801506e:	4607      	mov	r7, r0
 8015070:	686a      	ldr	r2, [r5, #4]
 8015072:	6a21      	ldr	r1, [r4, #32]
 8015074:	9600      	str	r6, [sp, #0]
 8015076:	6860      	ldr	r0, [r4, #4]
 8015078:	f7ff ff90 	bl	8014f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801507c:	69a3      	ldr	r3, [r4, #24]
 801507e:	6962      	ldr	r2, [r4, #20]
 8015080:	4407      	add	r7, r0
 8015082:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8015084:	9600      	str	r6, [sp, #0]
 8015086:	68e0      	ldr	r0, [r4, #12]
 8015088:	fb93 f8f8 	sdiv	r8, r3, r8
 801508c:	4442      	add	r2, r8
 801508e:	9203      	str	r2, [sp, #12]
 8015090:	682a      	ldr	r2, [r5, #0]
 8015092:	f7ff ff83 	bl	8014f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015096:	4680      	mov	r8, r0
 8015098:	9600      	str	r6, [sp, #0]
 801509a:	69a3      	ldr	r3, [r4, #24]
 801509c:	686a      	ldr	r2, [r5, #4]
 801509e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80150a0:	6920      	ldr	r0, [r4, #16]
 80150a2:	f7ff ff7b 	bl	8014f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80150a6:	4440      	add	r0, r8
 80150a8:	e7cc      	b.n	8015044 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80150aa:	bf00      	nop
 80150ac:	24004a5c 	.word	0x24004a5c

080150b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80150b0:	4b07      	ldr	r3, [pc, #28]	; (80150d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80150b2:	781b      	ldrb	r3, [r3, #0]
 80150b4:	2b01      	cmp	r3, #1
 80150b6:	d109      	bne.n	80150cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80150b8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80150bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80150c0:	8003      	strh	r3, [r0, #0]
 80150c2:	4b04      	ldr	r3, [pc, #16]	; (80150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80150c4:	881b      	ldrh	r3, [r3, #0]
 80150c6:	3b01      	subs	r3, #1
 80150c8:	1a9b      	subs	r3, r3, r2
 80150ca:	800b      	strh	r3, [r1, #0]
 80150cc:	4770      	bx	lr
 80150ce:	bf00      	nop
 80150d0:	24004a48 	.word	0x24004a48
 80150d4:	24004a44 	.word	0x24004a44

080150d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80150d8:	4b07      	ldr	r3, [pc, #28]	; (80150f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80150da:	b510      	push	{r4, lr}
 80150dc:	781b      	ldrb	r3, [r3, #0]
 80150de:	2b01      	cmp	r3, #1
 80150e0:	d108      	bne.n	80150f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80150e2:	4b06      	ldr	r3, [pc, #24]	; (80150fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80150e4:	880c      	ldrh	r4, [r1, #0]
 80150e6:	881b      	ldrh	r3, [r3, #0]
 80150e8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80150ec:	3b01      	subs	r3, #1
 80150ee:	1b1b      	subs	r3, r3, r4
 80150f0:	8003      	strh	r3, [r0, #0]
 80150f2:	800a      	strh	r2, [r1, #0]
 80150f4:	bd10      	pop	{r4, pc}
 80150f6:	bf00      	nop
 80150f8:	24004a48 	.word	0x24004a48
 80150fc:	24004a44 	.word	0x24004a44

08015100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015100:	4b0a      	ldr	r3, [pc, #40]	; (801512c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015102:	b510      	push	{r4, lr}
 8015104:	781b      	ldrb	r3, [r3, #0]
 8015106:	2b01      	cmp	r3, #1
 8015108:	d10e      	bne.n	8015128 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801510a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801510e:	8843      	ldrh	r3, [r0, #2]
 8015110:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015114:	18ca      	adds	r2, r1, r3
 8015116:	4b06      	ldr	r3, [pc, #24]	; (8015130 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015118:	8044      	strh	r4, [r0, #2]
 801511a:	881b      	ldrh	r3, [r3, #0]
 801511c:	1a9b      	subs	r3, r3, r2
 801511e:	8003      	strh	r3, [r0, #0]
 8015120:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015124:	8081      	strh	r1, [r0, #4]
 8015126:	80c3      	strh	r3, [r0, #6]
 8015128:	bd10      	pop	{r4, pc}
 801512a:	bf00      	nop
 801512c:	24004a48 	.word	0x24004a48
 8015130:	24004a44 	.word	0x24004a44

08015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015134:	4b08      	ldr	r3, [pc, #32]	; (8015158 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8015136:	781b      	ldrb	r3, [r3, #0]
 8015138:	2b01      	cmp	r3, #1
 801513a:	d10c      	bne.n	8015156 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801513c:	8803      	ldrh	r3, [r0, #0]
 801513e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015142:	8842      	ldrh	r2, [r0, #2]
 8015144:	8002      	strh	r2, [r0, #0]
 8015146:	185a      	adds	r2, r3, r1
 8015148:	4b04      	ldr	r3, [pc, #16]	; (801515c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801514a:	881b      	ldrh	r3, [r3, #0]
 801514c:	1a9b      	subs	r3, r3, r2
 801514e:	8043      	strh	r3, [r0, #2]
 8015150:	88c3      	ldrh	r3, [r0, #6]
 8015152:	80c1      	strh	r1, [r0, #6]
 8015154:	8083      	strh	r3, [r0, #4]
 8015156:	4770      	bx	lr
 8015158:	24004a48 	.word	0x24004a48
 801515c:	24004a44 	.word	0x24004a44

08015160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015160:	4b07      	ldr	r3, [pc, #28]	; (8015180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015162:	b510      	push	{r4, lr}
 8015164:	781b      	ldrb	r3, [r3, #0]
 8015166:	2b01      	cmp	r3, #1
 8015168:	d108      	bne.n	801517c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801516a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801516e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015172:	8003      	strh	r3, [r0, #0]
 8015174:	8893      	ldrh	r3, [r2, #4]
 8015176:	3b01      	subs	r3, #1
 8015178:	1b1b      	subs	r3, r3, r4
 801517a:	800b      	strh	r3, [r1, #0]
 801517c:	bd10      	pop	{r4, pc}
 801517e:	bf00      	nop
 8015180:	24004a48 	.word	0x24004a48

08015184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015184:	4b0b      	ldr	r3, [pc, #44]	; (80151b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8015186:	781b      	ldrb	r3, [r3, #0]
 8015188:	2b01      	cmp	r3, #1
 801518a:	d111      	bne.n	80151b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 801518c:	680b      	ldr	r3, [r1, #0]
 801518e:	ed90 7a00 	vldr	s14, [r0]
 8015192:	6003      	str	r3, [r0, #0]
 8015194:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8015198:	eddf 6a07 	vldr	s13, [pc, #28]	; 80151b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801519c:	ee07 3a90 	vmov	s15, r3
 80151a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80151a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80151a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80151ac:	edc1 7a00 	vstr	s15, [r1]
 80151b0:	4770      	bx	lr
 80151b2:	bf00      	nop
 80151b4:	24004a48 	.word	0x24004a48
 80151b8:	38d1b717 	.word	0x38d1b717

080151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80151bc:	4b0a      	ldr	r3, [pc, #40]	; (80151e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80151be:	460a      	mov	r2, r1
 80151c0:	b510      	push	{r4, lr}
 80151c2:	781b      	ldrb	r3, [r3, #0]
 80151c4:	2b01      	cmp	r3, #1
 80151c6:	d10d      	bne.n	80151e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80151c8:	8881      	ldrh	r1, [r0, #4]
 80151ca:	8803      	ldrh	r3, [r0, #0]
 80151cc:	440b      	add	r3, r1
 80151ce:	4601      	mov	r1, r0
 80151d0:	3b01      	subs	r3, #1
 80151d2:	f821 3b02 	strh.w	r3, [r1], #2
 80151d6:	f7ff ffc3 	bl	8015160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80151da:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80151de:	88c2      	ldrh	r2, [r0, #6]
 80151e0:	80c3      	strh	r3, [r0, #6]
 80151e2:	8082      	strh	r2, [r0, #4]
 80151e4:	bd10      	pop	{r4, pc}
 80151e6:	bf00      	nop
 80151e8:	24004a48 	.word	0x24004a48

080151ec <_ZN8touchgfx11Application13requestRedrawEv>:
 80151ec:	4b06      	ldr	r3, [pc, #24]	; (8015208 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80151ee:	2100      	movs	r1, #0
 80151f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151f4:	4b05      	ldr	r3, [pc, #20]	; (801520c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80151f6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80151fa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80151fe:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8015202:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015206:	4770      	bx	lr
 8015208:	24004a44 	.word	0x24004a44
 801520c:	24004a46 	.word	0x24004a46

08015210 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015210:	4b03      	ldr	r3, [pc, #12]	; (8015220 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015212:	6818      	ldr	r0, [r3, #0]
 8015214:	b110      	cbz	r0, 801521c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015216:	6803      	ldr	r3, [r0, #0]
 8015218:	699b      	ldr	r3, [r3, #24]
 801521a:	4718      	bx	r3
 801521c:	4770      	bx	lr
 801521e:	bf00      	nop
 8015220:	24004a8c 	.word	0x24004a8c

08015224 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015224:	4770      	bx	lr
	...

08015228 <_ZN8touchgfx11Application4drawEv>:
 8015228:	4b09      	ldr	r3, [pc, #36]	; (8015250 <_ZN8touchgfx11Application4drawEv+0x28>)
 801522a:	b507      	push	{r0, r1, r2, lr}
 801522c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015230:	2100      	movs	r1, #0
 8015232:	4b08      	ldr	r3, [pc, #32]	; (8015254 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015234:	9100      	str	r1, [sp, #0]
 8015236:	4669      	mov	r1, sp
 8015238:	f9b3 3000 	ldrsh.w	r3, [r3]
 801523c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015240:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015244:	6803      	ldr	r3, [r0, #0]
 8015246:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015248:	4798      	blx	r3
 801524a:	b003      	add	sp, #12
 801524c:	f85d fb04 	ldr.w	pc, [sp], #4
 8015250:	24004a44 	.word	0x24004a44
 8015254:	24004a46 	.word	0x24004a46

08015258 <_ZN8touchgfx11Application10invalidateEv>:
 8015258:	4b09      	ldr	r3, [pc, #36]	; (8015280 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801525a:	b082      	sub	sp, #8
 801525c:	2100      	movs	r1, #0
 801525e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015262:	4b08      	ldr	r3, [pc, #32]	; (8015284 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015264:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015268:	aa02      	add	r2, sp, #8
 801526a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801526e:	9100      	str	r1, [sp, #0]
 8015270:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015274:	6803      	ldr	r3, [r0, #0]
 8015276:	e912 0006 	ldmdb	r2, {r1, r2}
 801527a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801527c:	b002      	add	sp, #8
 801527e:	4718      	bx	r3
 8015280:	24004a44 	.word	0x24004a44
 8015284:	24004a46 	.word	0x24004a46

08015288 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015288:	4b03      	ldr	r3, [pc, #12]	; (8015298 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801528a:	6818      	ldr	r0, [r3, #0]
 801528c:	b110      	cbz	r0, 8015294 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801528e:	6803      	ldr	r3, [r0, #0]
 8015290:	69db      	ldr	r3, [r3, #28]
 8015292:	4718      	bx	r3
 8015294:	4770      	bx	lr
 8015296:	bf00      	nop
 8015298:	24004a8c 	.word	0x24004a8c

0801529c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801529c:	4b03      	ldr	r3, [pc, #12]	; (80152ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801529e:	6818      	ldr	r0, [r3, #0]
 80152a0:	b110      	cbz	r0, 80152a8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80152a2:	6803      	ldr	r3, [r0, #0]
 80152a4:	6a1b      	ldr	r3, [r3, #32]
 80152a6:	4718      	bx	r3
 80152a8:	4770      	bx	lr
 80152aa:	bf00      	nop
 80152ac:	24004a8c 	.word	0x24004a8c

080152b0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80152b0:	2300      	movs	r3, #0
 80152b2:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80152b6:	4770      	bx	lr

080152b8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80152b8:	4b03      	ldr	r3, [pc, #12]	; (80152c8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80152ba:	6818      	ldr	r0, [r3, #0]
 80152bc:	b110      	cbz	r0, 80152c4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80152be:	6803      	ldr	r3, [r0, #0]
 80152c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80152c2:	4718      	bx	r3
 80152c4:	4770      	bx	lr
 80152c6:	bf00      	nop
 80152c8:	24004a8c 	.word	0x24004a8c

080152cc <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80152cc:	b510      	push	{r4, lr}
 80152ce:	f9b1 4000 	ldrsh.w	r4, [r1]
 80152d2:	888a      	ldrh	r2, [r1, #4]
 80152d4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80152d8:	4422      	add	r2, r4
 80152da:	b212      	sxth	r2, r2
 80152dc:	4293      	cmp	r3, r2
 80152de:	da15      	bge.n	801530c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80152e0:	8882      	ldrh	r2, [r0, #4]
 80152e2:	4413      	add	r3, r2
 80152e4:	b21b      	sxth	r3, r3
 80152e6:	429c      	cmp	r4, r3
 80152e8:	da10      	bge.n	801530c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80152ea:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80152ee:	88c9      	ldrh	r1, [r1, #6]
 80152f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80152f4:	4419      	add	r1, r3
 80152f6:	b209      	sxth	r1, r1
 80152f8:	428a      	cmp	r2, r1
 80152fa:	da07      	bge.n	801530c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80152fc:	88c0      	ldrh	r0, [r0, #6]
 80152fe:	4410      	add	r0, r2
 8015300:	b200      	sxth	r0, r0
 8015302:	4283      	cmp	r3, r0
 8015304:	bfac      	ite	ge
 8015306:	2000      	movge	r0, #0
 8015308:	2001      	movlt	r0, #1
 801530a:	bd10      	pop	{r4, pc}
 801530c:	2000      	movs	r0, #0
 801530e:	e7fc      	b.n	801530a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015310 <_ZN8touchgfx4Rect10restrictToEss>:
 8015310:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015314:	2b00      	cmp	r3, #0
 8015316:	b510      	push	{r4, lr}
 8015318:	da04      	bge.n	8015324 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801531a:	8884      	ldrh	r4, [r0, #4]
 801531c:	4423      	add	r3, r4
 801531e:	8083      	strh	r3, [r0, #4]
 8015320:	2300      	movs	r3, #0
 8015322:	8003      	strh	r3, [r0, #0]
 8015324:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015328:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801532c:	1b09      	subs	r1, r1, r4
 801532e:	428b      	cmp	r3, r1
 8015330:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015334:	bfc8      	it	gt
 8015336:	8081      	strhgt	r1, [r0, #4]
 8015338:	2b00      	cmp	r3, #0
 801533a:	da04      	bge.n	8015346 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801533c:	88c1      	ldrh	r1, [r0, #6]
 801533e:	440b      	add	r3, r1
 8015340:	80c3      	strh	r3, [r0, #6]
 8015342:	2300      	movs	r3, #0
 8015344:	8043      	strh	r3, [r0, #2]
 8015346:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801534a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801534e:	1a52      	subs	r2, r2, r1
 8015350:	4293      	cmp	r3, r2
 8015352:	bfc8      	it	gt
 8015354:	80c2      	strhgt	r2, [r0, #6]
 8015356:	bd10      	pop	{r4, pc}

08015358 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015358:	4b10      	ldr	r3, [pc, #64]	; (801539c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801535a:	b510      	push	{r4, lr}
 801535c:	460c      	mov	r4, r1
 801535e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015362:	4b0f      	ldr	r3, [pc, #60]	; (80153a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015364:	4620      	mov	r0, r4
 8015366:	f9b3 1000 	ldrsh.w	r1, [r3]
 801536a:	f7ff ffd1 	bl	8015310 <_ZN8touchgfx4Rect10restrictToEss>
 801536e:	4b0d      	ldr	r3, [pc, #52]	; (80153a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015370:	6818      	ldr	r0, [r3, #0]
 8015372:	b190      	cbz	r0, 801539a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015374:	6803      	ldr	r3, [r0, #0]
 8015376:	4621      	mov	r1, r4
 8015378:	689b      	ldr	r3, [r3, #8]
 801537a:	4798      	blx	r3
 801537c:	4b0a      	ldr	r3, [pc, #40]	; (80153a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801537e:	6818      	ldr	r0, [r3, #0]
 8015380:	b118      	cbz	r0, 801538a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015382:	6803      	ldr	r3, [r0, #0]
 8015384:	4621      	mov	r1, r4
 8015386:	689b      	ldr	r3, [r3, #8]
 8015388:	4798      	blx	r3
 801538a:	4b08      	ldr	r3, [pc, #32]	; (80153ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801538c:	4621      	mov	r1, r4
 801538e:	6818      	ldr	r0, [r3, #0]
 8015390:	6803      	ldr	r3, [r0, #0]
 8015392:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015396:	69db      	ldr	r3, [r3, #28]
 8015398:	4718      	bx	r3
 801539a:	bd10      	pop	{r4, pc}
 801539c:	24004a46 	.word	0x24004a46
 80153a0:	24004a44 	.word	0x24004a44
 80153a4:	24004a8c 	.word	0x24004a8c
 80153a8:	24004a88 	.word	0x24004a88
 80153ac:	24004a50 	.word	0x24004a50

080153b0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80153b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153b2:	4606      	mov	r6, r0
 80153b4:	4608      	mov	r0, r1
 80153b6:	460f      	mov	r7, r1
 80153b8:	f7fc fb73 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80153bc:	b9e8      	cbnz	r0, 80153fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153be:	f9b7 5000 	ldrsh.w	r5, [r7]
 80153c2:	f9b6 4000 	ldrsh.w	r4, [r6]
 80153c6:	42a5      	cmp	r5, r4
 80153c8:	db17      	blt.n	80153fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153ca:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80153ce:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80153d2:	429a      	cmp	r2, r3
 80153d4:	db11      	blt.n	80153fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153d6:	88b9      	ldrh	r1, [r7, #4]
 80153d8:	440d      	add	r5, r1
 80153da:	88b1      	ldrh	r1, [r6, #4]
 80153dc:	440c      	add	r4, r1
 80153de:	b22d      	sxth	r5, r5
 80153e0:	b224      	sxth	r4, r4
 80153e2:	42a5      	cmp	r5, r4
 80153e4:	dc09      	bgt.n	80153fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153e6:	88f8      	ldrh	r0, [r7, #6]
 80153e8:	4410      	add	r0, r2
 80153ea:	88f2      	ldrh	r2, [r6, #6]
 80153ec:	4413      	add	r3, r2
 80153ee:	b200      	sxth	r0, r0
 80153f0:	b21b      	sxth	r3, r3
 80153f2:	4298      	cmp	r0, r3
 80153f4:	bfcc      	ite	gt
 80153f6:	2000      	movgt	r0, #0
 80153f8:	2001      	movle	r0, #1
 80153fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080153fc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80153fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153fe:	4604      	mov	r4, r0
 8015400:	4608      	mov	r0, r1
 8015402:	460d      	mov	r5, r1
 8015404:	f7fc fb4d 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015408:	b978      	cbnz	r0, 801542a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801540a:	4620      	mov	r0, r4
 801540c:	f7fc fb49 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015410:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015414:	b150      	cbz	r0, 801542c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015416:	8026      	strh	r6, [r4, #0]
 8015418:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801541c:	8063      	strh	r3, [r4, #2]
 801541e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015422:	80a3      	strh	r3, [r4, #4]
 8015424:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015428:	80e3      	strh	r3, [r4, #6]
 801542a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801542c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015430:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015434:	42b1      	cmp	r1, r6
 8015436:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801543a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801543e:	460f      	mov	r7, r1
 8015440:	88ed      	ldrh	r5, [r5, #6]
 8015442:	bfa8      	it	ge
 8015444:	4637      	movge	r7, r6
 8015446:	4293      	cmp	r3, r2
 8015448:	4618      	mov	r0, r3
 801544a:	4466      	add	r6, ip
 801544c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015450:	bfa8      	it	ge
 8015452:	4610      	movge	r0, r2
 8015454:	442a      	add	r2, r5
 8015456:	88e5      	ldrh	r5, [r4, #6]
 8015458:	4461      	add	r1, ip
 801545a:	b236      	sxth	r6, r6
 801545c:	8027      	strh	r7, [r4, #0]
 801545e:	442b      	add	r3, r5
 8015460:	b209      	sxth	r1, r1
 8015462:	b212      	sxth	r2, r2
 8015464:	8060      	strh	r0, [r4, #2]
 8015466:	b21b      	sxth	r3, r3
 8015468:	428e      	cmp	r6, r1
 801546a:	bfac      	ite	ge
 801546c:	ebc7 0106 	rsbge	r1, r7, r6
 8015470:	ebc7 0101 	rsblt	r1, r7, r1
 8015474:	429a      	cmp	r2, r3
 8015476:	bfac      	ite	ge
 8015478:	ebc0 0202 	rsbge	r2, r0, r2
 801547c:	ebc0 0203 	rsblt	r2, r0, r3
 8015480:	80a1      	strh	r1, [r4, #4]
 8015482:	80e2      	strh	r2, [r4, #6]
 8015484:	e7d1      	b.n	801542a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015488 <_ZN8touchgfx11Application11getInstanceEv>:
 8015488:	4b01      	ldr	r3, [pc, #4]	; (8015490 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801548a:	6818      	ldr	r0, [r3, #0]
 801548c:	4770      	bx	lr
 801548e:	bf00      	nop
 8015490:	24004a9c 	.word	0x24004a9c

08015494 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015494:	2300      	movs	r3, #0
 8015496:	b510      	push	{r4, lr}
 8015498:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 801549c:	4604      	mov	r4, r0
 801549e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80154a2:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80154a6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80154aa:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80154ae:	429a      	cmp	r2, r3
 80154b0:	d90e      	bls.n	80154d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80154b2:	18e2      	adds	r2, r4, r3
 80154b4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80154b8:	b122      	cbz	r2, 80154c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80154ba:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80154be:	6803      	ldr	r3, [r0, #0]
 80154c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80154c2:	4798      	blx	r3
 80154c4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80154c8:	3301      	adds	r3, #1
 80154ca:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80154ce:	e7ea      	b.n	80154a6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80154d0:	bd10      	pop	{r4, pc}

080154d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80154d2:	2300      	movs	r3, #0
 80154d4:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80154d8:	30a4      	adds	r0, #164	; 0xa4
 80154da:	f820 3c24 	strh.w	r3, [r0, #-36]
 80154de:	f802 3b01 	strb.w	r3, [r2], #1
 80154e2:	4282      	cmp	r2, r0
 80154e4:	d1fb      	bne.n	80154de <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80154e6:	4770      	bx	lr

080154e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80154e8:	b570      	push	{r4, r5, r6, lr}
 80154ea:	4c0b      	ldr	r4, [pc, #44]	; (8015518 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80154ec:	4605      	mov	r5, r0
 80154ee:	460e      	mov	r6, r1
 80154f0:	6820      	ldr	r0, [r4, #0]
 80154f2:	b110      	cbz	r0, 80154fa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80154f4:	6803      	ldr	r3, [r0, #0]
 80154f6:	695b      	ldr	r3, [r3, #20]
 80154f8:	4798      	blx	r3
 80154fa:	1d28      	adds	r0, r5, #4
 80154fc:	f7ff ffe9 	bl	80154d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015500:	6026      	str	r6, [r4, #0]
 8015502:	6833      	ldr	r3, [r6, #0]
 8015504:	4630      	mov	r0, r6
 8015506:	68db      	ldr	r3, [r3, #12]
 8015508:	4798      	blx	r3
 801550a:	682b      	ldr	r3, [r5, #0]
 801550c:	4628      	mov	r0, r5
 801550e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015510:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015514:	4718      	bx	r3
 8015516:	bf00      	nop
 8015518:	24004a8c 	.word	0x24004a8c

0801551c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801551c:	2300      	movs	r3, #0
 801551e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015522:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015526:	461a      	mov	r2, r3
 8015528:	b5f0      	push	{r4, r5, r6, r7, lr}
 801552a:	461c      	mov	r4, r3
 801552c:	461d      	mov	r5, r3
 801552e:	459c      	cmp	ip, r3
 8015530:	dd1a      	ble.n	8015568 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015532:	18c6      	adds	r6, r0, r3
 8015534:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015538:	b16e      	cbz	r6, 8015556 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801553a:	429a      	cmp	r2, r3
 801553c:	d008      	beq.n	8015550 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801553e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015542:	fa1f fe82 	uxth.w	lr, r2
 8015546:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801554a:	1887      	adds	r7, r0, r2
 801554c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015550:	3201      	adds	r2, #1
 8015552:	3301      	adds	r3, #1
 8015554:	e7eb      	b.n	801552e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015556:	4299      	cmp	r1, r3
 8015558:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 801555c:	bfa8      	it	ge
 801555e:	3501      	addge	r5, #1
 8015560:	429e      	cmp	r6, r3
 8015562:	bfc8      	it	gt
 8015564:	3401      	addgt	r4, #1
 8015566:	e7f4      	b.n	8015552 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015568:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 801556c:	1b49      	subs	r1, r1, r5
 801556e:	1b1b      	subs	r3, r3, r4
 8015570:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015574:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015578:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801557c:	4293      	cmp	r3, r2
 801557e:	dd03      	ble.n	8015588 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015580:	3b01      	subs	r3, #1
 8015582:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015586:	e7f7      	b.n	8015578 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015588:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801558c <_ZN8touchgfx11Application15handleTickEventEv>:
 801558c:	b570      	push	{r4, r5, r6, lr}
 801558e:	4d16      	ldr	r5, [pc, #88]	; (80155e8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015590:	4604      	mov	r4, r0
 8015592:	6828      	ldr	r0, [r5, #0]
 8015594:	b140      	cbz	r0, 80155a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015596:	7a03      	ldrb	r3, [r0, #8]
 8015598:	b933      	cbnz	r3, 80155a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801559a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801559e:	6803      	ldr	r3, [r0, #0]
 80155a0:	689b      	ldr	r3, [r3, #8]
 80155a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80155a6:	4718      	bx	r3
 80155a8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80155ac:	4e0f      	ldr	r6, [pc, #60]	; (80155ec <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80155ae:	b973      	cbnz	r3, 80155ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80155b0:	b168      	cbz	r0, 80155ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80155b2:	7a03      	ldrb	r3, [r0, #8]
 80155b4:	b15b      	cbz	r3, 80155ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80155b6:	6830      	ldr	r0, [r6, #0]
 80155b8:	b110      	cbz	r0, 80155c0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80155ba:	6803      	ldr	r3, [r0, #0]
 80155bc:	691b      	ldr	r3, [r3, #16]
 80155be:	4798      	blx	r3
 80155c0:	6828      	ldr	r0, [r5, #0]
 80155c2:	6803      	ldr	r3, [r0, #0]
 80155c4:	68db      	ldr	r3, [r3, #12]
 80155c6:	4798      	blx	r3
 80155c8:	2301      	movs	r3, #1
 80155ca:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80155ce:	3404      	adds	r4, #4
 80155d0:	4620      	mov	r0, r4
 80155d2:	f7ff ff5f 	bl	8015494 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80155d6:	4620      	mov	r0, r4
 80155d8:	f7ff ffa0 	bl	801551c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80155dc:	6830      	ldr	r0, [r6, #0]
 80155de:	b110      	cbz	r0, 80155e6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80155e0:	6803      	ldr	r3, [r0, #0]
 80155e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80155e4:	e7dd      	b.n	80155a2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80155e6:	bd70      	pop	{r4, r5, r6, pc}
 80155e8:	24004a90 	.word	0x24004a90
 80155ec:	24004a8c 	.word	0x24004a8c

080155f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80155f0:	4603      	mov	r3, r0
 80155f2:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80155f6:	2200      	movs	r2, #0
 80155f8:	801a      	strh	r2, [r3, #0]
 80155fa:	3308      	adds	r3, #8
 80155fc:	f823 2c06 	strh.w	r2, [r3, #-6]
 8015600:	f823 2c04 	strh.w	r2, [r3, #-4]
 8015604:	f823 2c02 	strh.w	r2, [r3, #-2]
 8015608:	428b      	cmp	r3, r1
 801560a:	d1f5      	bne.n	80155f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801560c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015610:	4770      	bx	lr
	...

08015614 <_ZN8touchgfx11ApplicationC1Ev>:
 8015614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015616:	4b1d      	ldr	r3, [pc, #116]	; (801568c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015618:	4606      	mov	r6, r0
 801561a:	4604      	mov	r4, r0
 801561c:	2500      	movs	r5, #0
 801561e:	f846 3b04 	str.w	r3, [r6], #4
 8015622:	22a8      	movs	r2, #168	; 0xa8
 8015624:	2100      	movs	r1, #0
 8015626:	4630      	mov	r0, r6
 8015628:	f010 fe21 	bl	802626e <memset>
 801562c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015630:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015634:	4f16      	ldr	r7, [pc, #88]	; (8015690 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015636:	f7ff ffdb 	bl	80155f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801563a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 801563e:	f7ff ffd7 	bl	80155f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015642:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015646:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801564a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 801564e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015652:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015656:	490f      	ldr	r1, [pc, #60]	; (8015694 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015658:	480f      	ldr	r0, [pc, #60]	; (8015698 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801565a:	f010 facb 	bl	8025bf4 <CRC_Lock>
 801565e:	4b0f      	ldr	r3, [pc, #60]	; (801569c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015660:	b158      	cbz	r0, 801567a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015662:	801d      	strh	r5, [r3, #0]
 8015664:	2300      	movs	r3, #0
 8015666:	4a0e      	ldr	r2, [pc, #56]	; (80156a0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015668:	4630      	mov	r0, r6
 801566a:	6013      	str	r3, [r2, #0]
 801566c:	4a0d      	ldr	r2, [pc, #52]	; (80156a4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801566e:	603b      	str	r3, [r7, #0]
 8015670:	6013      	str	r3, [r2, #0]
 8015672:	f7ff ff2e 	bl	80154d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015676:	4620      	mov	r0, r4
 8015678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801567a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801567e:	2002      	movs	r0, #2
 8015680:	801a      	strh	r2, [r3, #0]
 8015682:	6038      	str	r0, [r7, #0]
 8015684:	f001 fa72 	bl	8016b6c <_ZN8touchgfx6Screen4drawEv>
 8015688:	e7ec      	b.n	8015664 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801568a:	bf00      	nop
 801568c:	08028e64 	.word	0x08028e64
 8015690:	24004a8c 	.word	0x24004a8c
 8015694:	b5e8b5cd 	.word	0xb5e8b5cd
 8015698:	f407a5c2 	.word	0xf407a5c2
 801569c:	2400001c 	.word	0x2400001c
 80156a0:	24004a9c 	.word	0x24004a9c
 80156a4:	24004a90 	.word	0x24004a90

080156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80156a8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80156ac:	3b01      	subs	r3, #1
 80156ae:	b29b      	uxth	r3, r3
 80156b0:	428b      	cmp	r3, r1
 80156b2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80156b6:	b510      	push	{r4, lr}
 80156b8:	d908      	bls.n	80156cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80156ba:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80156be:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80156c2:	681a      	ldr	r2, [r3, #0]
 80156c4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80156c8:	685a      	ldr	r2, [r3, #4]
 80156ca:	6062      	str	r2, [r4, #4]
 80156cc:	bd10      	pop	{r4, pc}
	...

080156d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80156d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156d4:	b08f      	sub	sp, #60	; 0x3c
 80156d6:	4b8f      	ldr	r3, [pc, #572]	; (8015914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80156d8:	4683      	mov	fp, r0
 80156da:	ac0a      	add	r4, sp, #40	; 0x28
 80156dc:	e884 0006 	stmia.w	r4, {r1, r2}
 80156e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80156e4:	4620      	mov	r0, r4
 80156e6:	4b8c      	ldr	r3, [pc, #560]	; (8015918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80156e8:	f9b3 1000 	ldrsh.w	r1, [r3]
 80156ec:	f7ff fe10 	bl	8015310 <_ZN8touchgfx4Rect10restrictToEss>
 80156f0:	4620      	mov	r0, r4
 80156f2:	f7fc f9d6 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80156f6:	2800      	cmp	r0, #0
 80156f8:	d16a      	bne.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80156fa:	9403      	str	r4, [sp, #12]
 80156fc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015700:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015704:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015708:	9301      	str	r3, [sp, #4]
 801570a:	35a4      	adds	r5, #164	; 0xa4
 801570c:	b15c      	cbz	r4, 8015726 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801570e:	4629      	mov	r1, r5
 8015710:	9803      	ldr	r0, [sp, #12]
 8015712:	f7ff fe4d 	bl	80153b0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015716:	3c01      	subs	r4, #1
 8015718:	b118      	cbz	r0, 8015722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801571a:	b2a1      	uxth	r1, r4
 801571c:	9801      	ldr	r0, [sp, #4]
 801571e:	f7ff ffc3 	bl	80156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015722:	3d08      	subs	r5, #8
 8015724:	e7f2      	b.n	801570c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015726:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801572a:	f10a 33ff 	add.w	r3, sl, #4294967295
 801572e:	f8cd a010 	str.w	sl, [sp, #16]
 8015732:	9302      	str	r3, [sp, #8]
 8015734:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015738:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 801573c:	9306      	str	r3, [sp, #24]
 801573e:	445c      	add	r4, fp
 8015740:	2500      	movs	r5, #0
 8015742:	4626      	mov	r6, r4
 8015744:	f8cd a014 	str.w	sl, [sp, #20]
 8015748:	462f      	mov	r7, r5
 801574a:	9b05      	ldr	r3, [sp, #20]
 801574c:	2b00      	cmp	r3, #0
 801574e:	d073      	beq.n	8015838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015750:	9903      	ldr	r1, [sp, #12]
 8015752:	4630      	mov	r0, r6
 8015754:	f7ff fdba 	bl	80152cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015758:	b350      	cbz	r0, 80157b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801575a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801575e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015762:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8015766:	45e6      	cmp	lr, ip
 8015768:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801576c:	db33      	blt.n	80157d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801576e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015772:	88b3      	ldrh	r3, [r6, #4]
 8015774:	4472      	add	r2, lr
 8015776:	4463      	add	r3, ip
 8015778:	b212      	sxth	r2, r2
 801577a:	b21b      	sxth	r3, r3
 801577c:	429a      	cmp	r2, r3
 801577e:	dc2a      	bgt.n	80157d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015780:	fa1f f289 	uxth.w	r2, r9
 8015784:	88f3      	ldrh	r3, [r6, #6]
 8015786:	45c8      	cmp	r8, r9
 8015788:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801578c:	4413      	add	r3, r2
 801578e:	fa1f fc88 	uxth.w	ip, r8
 8015792:	b29b      	uxth	r3, r3
 8015794:	fa0f fe83 	sxth.w	lr, r3
 8015798:	db0f      	blt.n	80157ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801579a:	eba3 030c 	sub.w	r3, r3, ip
 801579e:	1ac9      	subs	r1, r1, r3
 80157a0:	b209      	sxth	r1, r1
 80157a2:	2900      	cmp	r1, #0
 80157a4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80157a8:	dd12      	ble.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80157aa:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80157ae:	4605      	mov	r5, r0
 80157b0:	9b05      	ldr	r3, [sp, #20]
 80157b2:	3e08      	subs	r6, #8
 80157b4:	3b01      	subs	r3, #1
 80157b6:	9305      	str	r3, [sp, #20]
 80157b8:	e7c7      	b.n	801574a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80157ba:	4461      	add	r1, ip
 80157bc:	b209      	sxth	r1, r1
 80157be:	4571      	cmp	r1, lr
 80157c0:	dc38      	bgt.n	8015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80157c2:	eba2 020c 	sub.w	r2, r2, ip
 80157c6:	b212      	sxth	r2, r2
 80157c8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80157cc:	2a00      	cmp	r2, #0
 80157ce:	dcee      	bgt.n	80157ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80157d0:	b00f      	add	sp, #60	; 0x3c
 80157d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157d6:	45c8      	cmp	r8, r9
 80157d8:	db2c      	blt.n	8015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80157da:	88f3      	ldrh	r3, [r6, #6]
 80157dc:	4499      	add	r9, r3
 80157de:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80157e2:	4498      	add	r8, r3
 80157e4:	fa0f f989 	sxth.w	r9, r9
 80157e8:	fa0f f888 	sxth.w	r8, r8
 80157ec:	45c1      	cmp	r9, r8
 80157ee:	db21      	blt.n	8015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80157f0:	fa1f f28c 	uxth.w	r2, ip
 80157f4:	88b3      	ldrh	r3, [r6, #4]
 80157f6:	45e6      	cmp	lr, ip
 80157f8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80157fc:	4413      	add	r3, r2
 80157fe:	fa1f f88e 	uxth.w	r8, lr
 8015802:	b29b      	uxth	r3, r3
 8015804:	fa0f f983 	sxth.w	r9, r3
 8015808:	db0a      	blt.n	8015820 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801580a:	eba3 0308 	sub.w	r3, r3, r8
 801580e:	1ac9      	subs	r1, r1, r3
 8015810:	b209      	sxth	r1, r1
 8015812:	2900      	cmp	r1, #0
 8015814:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015818:	ddda      	ble.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801581a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801581e:	e7c6      	b.n	80157ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015820:	4441      	add	r1, r8
 8015822:	b209      	sxth	r1, r1
 8015824:	4549      	cmp	r1, r9
 8015826:	dc05      	bgt.n	8015834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015828:	eba2 0208 	sub.w	r2, r2, r8
 801582c:	b212      	sxth	r2, r2
 801582e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015832:	e7cb      	b.n	80157cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015834:	4607      	mov	r7, r0
 8015836:	e7bb      	b.n	80157b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015838:	2d00      	cmp	r5, #0
 801583a:	d181      	bne.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 801583c:	2f00      	cmp	r7, #0
 801583e:	f000 81dd 	beq.w	8015bfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015842:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8015846:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801584a:	b2b3      	uxth	r3, r6
 801584c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015850:	9305      	str	r3, [sp, #20]
 8015852:	9a05      	ldr	r2, [sp, #20]
 8015854:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015858:	4413      	add	r3, r2
 801585a:	b2ba      	uxth	r2, r7
 801585c:	4492      	add	sl, r2
 801585e:	b29b      	uxth	r3, r3
 8015860:	fa1f fa8a 	uxth.w	sl, sl
 8015864:	fa0f f883 	sxth.w	r8, r3
 8015868:	fa0f f98a 	sxth.w	r9, sl
 801586c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015870:	9b04      	ldr	r3, [sp, #16]
 8015872:	2b00      	cmp	r3, #0
 8015874:	d052      	beq.n	801591c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8015876:	9903      	ldr	r1, [sp, #12]
 8015878:	4620      	mov	r0, r4
 801587a:	f7ff fd27 	bl	80152cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 801587e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015882:	b1c0      	cbz	r0, 80158b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015884:	f9b4 e000 	ldrsh.w	lr, [r4]
 8015888:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801588c:	4576      	cmp	r6, lr
 801588e:	dc22      	bgt.n	80158d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015890:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015894:	44f4      	add	ip, lr
 8015896:	fa0f fc8c 	sxth.w	ip, ip
 801589a:	45e0      	cmp	r8, ip
 801589c:	db1b      	blt.n	80158d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801589e:	428f      	cmp	r7, r1
 80158a0:	fa1f fc81 	uxth.w	ip, r1
 80158a4:	88e1      	ldrh	r1, [r4, #6]
 80158a6:	dc0d      	bgt.n	80158c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80158a8:	ebaa 0c0c 	sub.w	ip, sl, ip
 80158ac:	f8a4 9002 	strh.w	r9, [r4, #2]
 80158b0:	eba1 010c 	sub.w	r1, r1, ip
 80158b4:	80e1      	strh	r1, [r4, #6]
 80158b6:	4628      	mov	r0, r5
 80158b8:	9904      	ldr	r1, [sp, #16]
 80158ba:	3c08      	subs	r4, #8
 80158bc:	4605      	mov	r5, r0
 80158be:	3901      	subs	r1, #1
 80158c0:	9104      	str	r1, [sp, #16]
 80158c2:	e7d3      	b.n	801586c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80158c4:	4461      	add	r1, ip
 80158c6:	b209      	sxth	r1, r1
 80158c8:	4549      	cmp	r1, r9
 80158ca:	dcf5      	bgt.n	80158b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80158cc:	eba2 0c0c 	sub.w	ip, r2, ip
 80158d0:	f8a4 c006 	strh.w	ip, [r4, #6]
 80158d4:	e7ef      	b.n	80158b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80158d6:	428f      	cmp	r7, r1
 80158d8:	dcee      	bgt.n	80158b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80158da:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80158de:	4461      	add	r1, ip
 80158e0:	b209      	sxth	r1, r1
 80158e2:	4589      	cmp	r9, r1
 80158e4:	dbe8      	blt.n	80158b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80158e6:	4576      	cmp	r6, lr
 80158e8:	fa1f fc8e 	uxth.w	ip, lr
 80158ec:	88a1      	ldrh	r1, [r4, #4]
 80158ee:	dc07      	bgt.n	8015900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80158f0:	eba3 0c0c 	sub.w	ip, r3, ip
 80158f4:	f8a4 8000 	strh.w	r8, [r4]
 80158f8:	eba1 010c 	sub.w	r1, r1, ip
 80158fc:	80a1      	strh	r1, [r4, #4]
 80158fe:	e7da      	b.n	80158b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015900:	4461      	add	r1, ip
 8015902:	b209      	sxth	r1, r1
 8015904:	4588      	cmp	r8, r1
 8015906:	dbd7      	blt.n	80158b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015908:	9905      	ldr	r1, [sp, #20]
 801590a:	eba1 0c0c 	sub.w	ip, r1, ip
 801590e:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015912:	e7d0      	b.n	80158b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015914:	24004a46 	.word	0x24004a46
 8015918:	24004a44 	.word	0x24004a44
 801591c:	2d00      	cmp	r5, #0
 801591e:	f000 816d 	beq.w	8015bfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015922:	9b06      	ldr	r3, [sp, #24]
 8015924:	445b      	add	r3, fp
 8015926:	461c      	mov	r4, r3
 8015928:	9b02      	ldr	r3, [sp, #8]
 801592a:	3301      	adds	r3, #1
 801592c:	f000 8166 	beq.w	8015bfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015930:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015934:	9803      	ldr	r0, [sp, #12]
 8015936:	4629      	mov	r1, r5
 8015938:	f7ff fd3a 	bl	80153b0 <_ZNK8touchgfx4Rect8includesERKS0_>
 801593c:	b120      	cbz	r0, 8015948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801593e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015942:	9801      	ldr	r0, [sp, #4]
 8015944:	f7ff feb0 	bl	80156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015948:	9903      	ldr	r1, [sp, #12]
 801594a:	4628      	mov	r0, r5
 801594c:	f7ff fcbe 	bl	80152cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015950:	2800      	cmp	r0, #0
 8015952:	f000 809c 	beq.w	8015a8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015956:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801595a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801595e:	fa1f f189 	uxth.w	r1, r9
 8015962:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015966:	9309      	str	r3, [sp, #36]	; 0x24
 8015968:	eb01 0c03 	add.w	ip, r1, r3
 801596c:	b283      	uxth	r3, r0
 801596e:	4548      	cmp	r0, r9
 8015970:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8015974:	fa1f fa8c 	uxth.w	sl, ip
 8015978:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801597c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015980:	eb03 050c 	add.w	r5, r3, ip
 8015984:	b2ad      	uxth	r5, r5
 8015986:	9505      	str	r5, [sp, #20]
 8015988:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801598c:	9504      	str	r5, [sp, #16]
 801598e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015992:	f340 8099 	ble.w	8015ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8015996:	1a5b      	subs	r3, r3, r1
 8015998:	4596      	cmp	lr, r2
 801599a:	fa0f f08a 	sxth.w	r0, sl
 801599e:	b29b      	uxth	r3, r3
 80159a0:	b21e      	sxth	r6, r3
 80159a2:	dd2e      	ble.n	8015a02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80159a4:	9f02      	ldr	r7, [sp, #8]
 80159a6:	fa1f fe8e 	uxth.w	lr, lr
 80159aa:	b292      	uxth	r2, r2
 80159ac:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80159b0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80159b4:	9f04      	ldr	r7, [sp, #16]
 80159b6:	ebae 0102 	sub.w	r1, lr, r2
 80159ba:	44a6      	add	lr, r4
 80159bc:	1a3f      	subs	r7, r7, r0
 80159be:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80159c2:	b289      	uxth	r1, r1
 80159c4:	4402      	add	r2, r0
 80159c6:	fa0f fe8e 	sxth.w	lr, lr
 80159ca:	b20d      	sxth	r5, r1
 80159cc:	b212      	sxth	r2, r2
 80159ce:	436f      	muls	r7, r5
 80159d0:	ebae 0202 	sub.w	r2, lr, r2
 80159d4:	4372      	muls	r2, r6
 80159d6:	4297      	cmp	r7, r2
 80159d8:	db09      	blt.n	80159ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80159da:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80159de:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80159e2:	449c      	add	ip, r3
 80159e4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80159e8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80159ec:	e686      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80159ee:	4421      	add	r1, r4
 80159f0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80159f4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80159f8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80159fc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015a00:	e67c      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a02:	9f04      	ldr	r7, [sp, #16]
 8015a04:	42b8      	cmp	r0, r7
 8015a06:	da27      	bge.n	8015a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8015a08:	9902      	ldr	r1, [sp, #8]
 8015a0a:	1a3f      	subs	r7, r7, r0
 8015a0c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015a10:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015a14:	eb05 010e 	add.w	r1, r5, lr
 8015a18:	fa1f f881 	uxth.w	r8, r1
 8015a1c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015a20:	4411      	add	r1, r2
 8015a22:	fa0f f988 	sxth.w	r9, r8
 8015a26:	eba2 020e 	sub.w	r2, r2, lr
 8015a2a:	eba1 0108 	sub.w	r1, r1, r8
 8015a2e:	4372      	muls	r2, r6
 8015a30:	b289      	uxth	r1, r1
 8015a32:	fa0f f881 	sxth.w	r8, r1
 8015a36:	fb08 f707 	mul.w	r7, r8, r7
 8015a3a:	42ba      	cmp	r2, r7
 8015a3c:	dc06      	bgt.n	8015a4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015a3e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015a42:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015a46:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015a4a:	e7ca      	b.n	80159e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015a4c:	4429      	add	r1, r5
 8015a4e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015a52:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015a56:	e651      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a58:	9805      	ldr	r0, [sp, #20]
 8015a5a:	2d06      	cmp	r5, #6
 8015a5c:	ebaa 0000 	sub.w	r0, sl, r0
 8015a60:	b280      	uxth	r0, r0
 8015a62:	fa0f fe80 	sxth.w	lr, r0
 8015a66:	d817      	bhi.n	8015a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8015a68:	9b04      	ldr	r3, [sp, #16]
 8015a6a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015a6e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015a72:	1c6b      	adds	r3, r5, #1
 8015a74:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8015a78:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015a7c:	9b01      	ldr	r3, [sp, #4]
 8015a7e:	9801      	ldr	r0, [sp, #4]
 8015a80:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015a84:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015a88:	805a      	strh	r2, [r3, #2]
 8015a8a:	809e      	strh	r6, [r3, #4]
 8015a8c:	80d9      	strh	r1, [r3, #6]
 8015a8e:	9b02      	ldr	r3, [sp, #8]
 8015a90:	3c08      	subs	r4, #8
 8015a92:	3b01      	subs	r3, #1
 8015a94:	9302      	str	r3, [sp, #8]
 8015a96:	e747      	b.n	8015928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015a98:	9a02      	ldr	r2, [sp, #8]
 8015a9a:	45b6      	cmp	lr, r6
 8015a9c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015aa0:	db0d      	blt.n	8015abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015aa2:	449c      	add	ip, r3
 8015aa4:	445a      	add	r2, fp
 8015aa6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015aaa:	fa1f fc8c 	uxth.w	ip, ip
 8015aae:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015ab2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015ab6:	448c      	add	ip, r1
 8015ab8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8015abc:	e61e      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015abe:	445a      	add	r2, fp
 8015ac0:	4484      	add	ip, r0
 8015ac2:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8015ac6:	e78f      	b.n	80159e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015ac8:	fa1f f18e 	uxth.w	r1, lr
 8015acc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015ad0:	b293      	uxth	r3, r2
 8015ad2:	4596      	cmp	lr, r2
 8015ad4:	eb01 0806 	add.w	r8, r1, r6
 8015ad8:	9306      	str	r3, [sp, #24]
 8015ada:	fa1f f888 	uxth.w	r8, r8
 8015ade:	9f06      	ldr	r7, [sp, #24]
 8015ae0:	fa0f f388 	sxth.w	r3, r8
 8015ae4:	9307      	str	r3, [sp, #28]
 8015ae6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015aea:	443b      	add	r3, r7
 8015aec:	b29b      	uxth	r3, r3
 8015aee:	9308      	str	r3, [sp, #32]
 8015af0:	da24      	bge.n	8015b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015af2:	9905      	ldr	r1, [sp, #20]
 8015af4:	eba3 0308 	sub.w	r3, r3, r8
 8015af8:	eba2 020e 	sub.w	r2, r2, lr
 8015afc:	eba9 0000 	sub.w	r0, r9, r0
 8015b00:	ebaa 0401 	sub.w	r4, sl, r1
 8015b04:	b29b      	uxth	r3, r3
 8015b06:	b2a4      	uxth	r4, r4
 8015b08:	b219      	sxth	r1, r3
 8015b0a:	b225      	sxth	r5, r4
 8015b0c:	4348      	muls	r0, r1
 8015b0e:	436a      	muls	r2, r5
 8015b10:	4282      	cmp	r2, r0
 8015b12:	9a02      	ldr	r2, [sp, #8]
 8015b14:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015b18:	445a      	add	r2, fp
 8015b1a:	dc06      	bgt.n	8015b2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015b1c:	9b07      	ldr	r3, [sp, #28]
 8015b1e:	44a4      	add	ip, r4
 8015b20:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015b24:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015b28:	e75e      	b.n	80159e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015b2a:	9904      	ldr	r1, [sp, #16]
 8015b2c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015b30:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015b34:	4433      	add	r3, r6
 8015b36:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015b3a:	e5df      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015b3c:	9f06      	ldr	r7, [sp, #24]
 8015b3e:	9b04      	ldr	r3, [sp, #16]
 8015b40:	1bc9      	subs	r1, r1, r7
 8015b42:	fa0f f78a 	sxth.w	r7, sl
 8015b46:	b289      	uxth	r1, r1
 8015b48:	429f      	cmp	r7, r3
 8015b4a:	fa0f fe81 	sxth.w	lr, r1
 8015b4e:	dd23      	ble.n	8015b98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015b50:	9a05      	ldr	r2, [sp, #20]
 8015b52:	eba9 0000 	sub.w	r0, r9, r0
 8015b56:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015b5a:	ebaa 0202 	sub.w	r2, sl, r2
 8015b5e:	9d07      	ldr	r5, [sp, #28]
 8015b60:	fb0e f000 	mul.w	r0, lr, r0
 8015b64:	b292      	uxth	r2, r2
 8015b66:	eba5 0a03 	sub.w	sl, r5, r3
 8015b6a:	9b02      	ldr	r3, [sp, #8]
 8015b6c:	b214      	sxth	r4, r2
 8015b6e:	00db      	lsls	r3, r3, #3
 8015b70:	fb04 fa0a 	mul.w	sl, r4, sl
 8015b74:	445b      	add	r3, fp
 8015b76:	4550      	cmp	r0, sl
 8015b78:	db03      	blt.n	8015b82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015b7a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015b7e:	4494      	add	ip, r2
 8015b80:	e732      	b.n	80159e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015b82:	9a04      	ldr	r2, [sp, #16]
 8015b84:	4431      	add	r1, r6
 8015b86:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015b8a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015b8e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015b92:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015b96:	e75c      	b.n	8015a52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015b98:	9b08      	ldr	r3, [sp, #32]
 8015b9a:	2d06      	cmp	r5, #6
 8015b9c:	eba3 0308 	sub.w	r3, r3, r8
 8015ba0:	b29b      	uxth	r3, r3
 8015ba2:	b218      	sxth	r0, r3
 8015ba4:	d813      	bhi.n	8015bce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015ba6:	9b07      	ldr	r3, [sp, #28]
 8015ba8:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015bac:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015bb0:	1c6b      	adds	r3, r5, #1
 8015bb2:	9901      	ldr	r1, [sp, #4]
 8015bb4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015bb8:	9b01      	ldr	r3, [sp, #4]
 8015bba:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015bbe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015bc2:	805a      	strh	r2, [r3, #2]
 8015bc4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015bc6:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015bca:	809a      	strh	r2, [r3, #4]
 8015bcc:	e75f      	b.n	8015a8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015bce:	9c02      	ldr	r4, [sp, #8]
 8015bd0:	4570      	cmp	r0, lr
 8015bd2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015bd6:	db0d      	blt.n	8015bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015bd8:	4431      	add	r1, r6
 8015bda:	9b06      	ldr	r3, [sp, #24]
 8015bdc:	445c      	add	r4, fp
 8015bde:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015be2:	b289      	uxth	r1, r1
 8015be4:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015be8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015bec:	4419      	add	r1, r3
 8015bee:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015bf2:	e583      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015bf4:	445c      	add	r4, fp
 8015bf6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015bfa:	e79b      	b.n	8015b34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015bfc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015c00:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015c04:	1e65      	subs	r5, r4, #1
 8015c06:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015c0a:	b2ad      	uxth	r5, r5
 8015c0c:	42b5      	cmp	r5, r6
 8015c0e:	d044      	beq.n	8015c9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015c10:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015c14:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015c18:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015c1c:	4282      	cmp	r2, r0
 8015c1e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015c22:	d11f      	bne.n	8015c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015c24:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015c28:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015c2c:	459c      	cmp	ip, r3
 8015c2e:	d119      	bne.n	8015c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015c30:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015c34:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015c38:	19d8      	adds	r0, r3, r7
 8015c3a:	b200      	sxth	r0, r0
 8015c3c:	4288      	cmp	r0, r1
 8015c3e:	d109      	bne.n	8015c54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015c40:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015c44:	4413      	add	r3, r2
 8015c46:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015c4a:	4629      	mov	r1, r5
 8015c4c:	9801      	ldr	r0, [sp, #4]
 8015c4e:	f7ff fd2b 	bl	80156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015c52:	e003      	b.n	8015c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c54:	4411      	add	r1, r2
 8015c56:	b209      	sxth	r1, r1
 8015c58:	42b9      	cmp	r1, r7
 8015c5a:	d0f3      	beq.n	8015c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015c5c:	3d01      	subs	r5, #1
 8015c5e:	3c08      	subs	r4, #8
 8015c60:	b2ad      	uxth	r5, r5
 8015c62:	e7d3      	b.n	8015c0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015c64:	42b9      	cmp	r1, r7
 8015c66:	d1f9      	bne.n	8015c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c68:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015c6c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015c70:	4299      	cmp	r1, r3
 8015c72:	d1f3      	bne.n	8015c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c74:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015c78:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015c7c:	181f      	adds	r7, r3, r0
 8015c7e:	b23f      	sxth	r7, r7
 8015c80:	42ba      	cmp	r2, r7
 8015c82:	d105      	bne.n	8015c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015c84:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015c88:	440b      	add	r3, r1
 8015c8a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015c8e:	e7dc      	b.n	8015c4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015c90:	440a      	add	r2, r1
 8015c92:	b212      	sxth	r2, r2
 8015c94:	4290      	cmp	r0, r2
 8015c96:	d1e1      	bne.n	8015c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015c98:	e7f6      	b.n	8015c88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015c9a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015c9e:	2e07      	cmp	r6, #7
 8015ca0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015ca4:	d812      	bhi.n	8015ccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015ca6:	1c75      	adds	r5, r6, #1
 8015ca8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015cac:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015cb0:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015cb4:	9d01      	ldr	r5, [sp, #4]
 8015cb6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015cba:	442c      	add	r4, r5
 8015cbc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015cc0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015cc4:	8061      	strh	r1, [r4, #2]
 8015cc6:	80a2      	strh	r2, [r4, #4]
 8015cc8:	80e3      	strh	r3, [r4, #6]
 8015cca:	e581      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015ccc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015cd0:	3e01      	subs	r6, #1
 8015cd2:	445c      	add	r4, fp
 8015cd4:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015cd8:	f04f 37ff 	mov.w	r7, #4294967295
 8015cdc:	2500      	movs	r5, #0
 8015cde:	9305      	str	r3, [sp, #20]
 8015ce0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015ce4:	1e72      	subs	r2, r6, #1
 8015ce6:	9302      	str	r3, [sp, #8]
 8015ce8:	4691      	mov	r9, r2
 8015cea:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015cee:	9304      	str	r3, [sp, #16]
 8015cf0:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015cf4:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015cf8:	6818      	ldr	r0, [r3, #0]
 8015cfa:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015cfe:	9207      	str	r2, [sp, #28]
 8015d00:	bf16      	itet	ne
 8015d02:	9905      	ldrne	r1, [sp, #20]
 8015d04:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015d08:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015d0c:	9306      	str	r3, [sp, #24]
 8015d0e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015d12:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015d16:	fb18 f801 	smulbb	r8, r8, r1
 8015d1a:	6859      	ldr	r1, [r3, #4]
 8015d1c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015d20:	4671      	mov	r1, lr
 8015d22:	a80c      	add	r0, sp, #48	; 0x30
 8015d24:	f7ff fb6a 	bl	80153fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015d28:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015d2c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015d30:	f04f 0c08 	mov.w	ip, #8
 8015d34:	9b04      	ldr	r3, [sp, #16]
 8015d36:	9a02      	ldr	r2, [sp, #8]
 8015d38:	fb10 f001 	smulbb	r0, r0, r1
 8015d3c:	fb02 8803 	mla	r8, r2, r3, r8
 8015d40:	eba0 0108 	sub.w	r1, r0, r8
 8015d44:	fb90 f0fc 	sdiv	r0, r0, ip
 8015d48:	4288      	cmp	r0, r1
 8015d4a:	dc20      	bgt.n	8015d8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8015d4c:	4551      	cmp	r1, sl
 8015d4e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015d52:	da03      	bge.n	8015d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8015d54:	b1d9      	cbz	r1, 8015d8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8015d56:	468a      	mov	sl, r1
 8015d58:	464f      	mov	r7, r9
 8015d5a:	4635      	mov	r5, r6
 8015d5c:	f109 39ff 	add.w	r9, r9, #4294967295
 8015d60:	f119 0f02 	cmn.w	r9, #2
 8015d64:	d1c6      	bne.n	8015cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015d66:	4616      	mov	r6, r2
 8015d68:	3201      	adds	r2, #1
 8015d6a:	f1a4 0408 	sub.w	r4, r4, #8
 8015d6e:	d1b7      	bne.n	8015ce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015d70:	9b01      	ldr	r3, [sp, #4]
 8015d72:	b2ac      	uxth	r4, r5
 8015d74:	00ed      	lsls	r5, r5, #3
 8015d76:	1958      	adds	r0, r3, r5
 8015d78:	1c7b      	adds	r3, r7, #1
 8015d7a:	d10b      	bne.n	8015d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8015d7c:	4601      	mov	r1, r0
 8015d7e:	9803      	ldr	r0, [sp, #12]
 8015d80:	f7ff fb3c 	bl	80153fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015d84:	4621      	mov	r1, r4
 8015d86:	9801      	ldr	r0, [sp, #4]
 8015d88:	f7ff fc8e 	bl	80156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015d8c:	e4b6      	b.n	80156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015d8e:	464f      	mov	r7, r9
 8015d90:	4635      	mov	r5, r6
 8015d92:	e7ed      	b.n	8015d70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8015d94:	9b01      	ldr	r3, [sp, #4]
 8015d96:	00ff      	lsls	r7, r7, #3
 8015d98:	445d      	add	r5, fp
 8015d9a:	19d9      	adds	r1, r3, r7
 8015d9c:	445f      	add	r7, fp
 8015d9e:	f7ff fb2d 	bl	80153fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015da2:	9b03      	ldr	r3, [sp, #12]
 8015da4:	cb03      	ldmia	r3!, {r0, r1}
 8015da6:	9b03      	ldr	r3, [sp, #12]
 8015da8:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015dac:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015db0:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015db4:	6869      	ldr	r1, [r5, #4]
 8015db6:	c303      	stmia	r3!, {r0, r1}
 8015db8:	e7e4      	b.n	8015d84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8015dba:	bf00      	nop

08015dbc <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dc0:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015dc4:	b09b      	sub	sp, #108	; 0x6c
 8015dc6:	4604      	mov	r4, r0
 8015dc8:	4630      	mov	r0, r6
 8015dca:	f7fb fe6a 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015dce:	4605      	mov	r5, r0
 8015dd0:	b948      	cbnz	r0, 8015de6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015dd2:	6823      	ldr	r3, [r4, #0]
 8015dd4:	4620      	mov	r0, r4
 8015dd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015dd8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015ddc:	4798      	blx	r3
 8015dde:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015de2:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015de6:	4bc5      	ldr	r3, [pc, #788]	; (80160fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8015de8:	681b      	ldr	r3, [r3, #0]
 8015dea:	2b00      	cmp	r3, #0
 8015dec:	d03f      	beq.n	8015e6e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015dee:	4dc4      	ldr	r5, [pc, #784]	; (8016100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015df0:	4628      	mov	r0, r5
 8015df2:	f7fb fe56 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015df6:	4606      	mov	r6, r0
 8015df8:	2800      	cmp	r0, #0
 8015dfa:	d138      	bne.n	8015e6e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015dfc:	4628      	mov	r0, r5
 8015dfe:	f7ff f97f 	bl	8015100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015e02:	6823      	ldr	r3, [r4, #0]
 8015e04:	6829      	ldr	r1, [r5, #0]
 8015e06:	4620      	mov	r0, r4
 8015e08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015e0a:	686a      	ldr	r2, [r5, #4]
 8015e0c:	4798      	blx	r3
 8015e0e:	802e      	strh	r6, [r5, #0]
 8015e10:	806e      	strh	r6, [r5, #2]
 8015e12:	80ae      	strh	r6, [r5, #4]
 8015e14:	80ee      	strh	r6, [r5, #6]
 8015e16:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015e1a:	4dba      	ldr	r5, [pc, #744]	; (8016104 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015e1c:	4640      	mov	r0, r8
 8015e1e:	f7ff fbe7 	bl	80155f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015e22:	882e      	ldrh	r6, [r5, #0]
 8015e24:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015e28:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015e2c:	4633      	mov	r3, r6
 8015e2e:	42bb      	cmp	r3, r7
 8015e30:	d224      	bcs.n	8015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015e32:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015e36:	2907      	cmp	r1, #7
 8015e38:	d816      	bhi.n	8015e68 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015e3a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015e3e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015e42:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015e46:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015e4a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015e4e:	1c4a      	adds	r2, r1, #1
 8015e50:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015e54:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015e58:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015e5c:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015e60:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015e64:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015e68:	3301      	adds	r3, #1
 8015e6a:	b29b      	uxth	r3, r3
 8015e6c:	e7df      	b.n	8015e2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015e6e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015e72:	2b00      	cmp	r3, #0
 8015e74:	d1cf      	bne.n	8015e16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015e76:	b01b      	add	sp, #108	; 0x6c
 8015e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e7c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015e80:	42b3      	cmp	r3, r6
 8015e82:	d90c      	bls.n	8015e9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015e84:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015e88:	6822      	ldr	r2, [r4, #0]
 8015e8a:	3601      	adds	r6, #1
 8015e8c:	4620      	mov	r0, r4
 8015e8e:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015e90:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015e94:	b2b6      	uxth	r6, r6
 8015e96:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015e9a:	47b8      	blx	r7
 8015e9c:	e7ee      	b.n	8015e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015e9e:	4a9a      	ldr	r2, [pc, #616]	; (8016108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015ea0:	6813      	ldr	r3, [r2, #0]
 8015ea2:	4691      	mov	r9, r2
 8015ea4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015ea8:	2b01      	cmp	r3, #1
 8015eaa:	f040 80e0 	bne.w	801606e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8015eae:	8829      	ldrh	r1, [r5, #0]
 8015eb0:	2600      	movs	r6, #0
 8015eb2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015eb6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015eba:	33ae      	adds	r3, #174	; 0xae
 8015ebc:	428f      	cmp	r7, r1
 8015ebe:	f103 0308 	add.w	r3, r3, #8
 8015ec2:	dd0a      	ble.n	8015eda <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015ec4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015ec8:	3101      	adds	r1, #1
 8015eca:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015ece:	4402      	add	r2, r0
 8015ed0:	b212      	sxth	r2, r2
 8015ed2:	4296      	cmp	r6, r2
 8015ed4:	bfb8      	it	lt
 8015ed6:	4616      	movlt	r6, r2
 8015ed8:	e7f0      	b.n	8015ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015eda:	4b8c      	ldr	r3, [pc, #560]	; (801610c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015edc:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8016108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8015ee0:	881b      	ldrh	r3, [r3, #0]
 8015ee2:	2b0f      	cmp	r3, #15
 8015ee4:	bf8c      	ite	hi
 8015ee6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015eea:	f04f 0b01 	movls.w	fp, #1
 8015eee:	2300      	movs	r3, #0
 8015ef0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015ef4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015ef8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015efc:	4b82      	ldr	r3, [pc, #520]	; (8016108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015efe:	4438      	add	r0, r7
 8015f00:	b207      	sxth	r7, r0
 8015f02:	6818      	ldr	r0, [r3, #0]
 8015f04:	42b7      	cmp	r7, r6
 8015f06:	6803      	ldr	r3, [r0, #0]
 8015f08:	f280 8083 	bge.w	8016012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8015f0c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015f10:	4798      	blx	r3
 8015f12:	eb07 030b 	add.w	r3, r7, fp
 8015f16:	4298      	cmp	r0, r3
 8015f18:	da07      	bge.n	8015f2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015f1a:	42b0      	cmp	r0, r6
 8015f1c:	da05      	bge.n	8015f2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015f1e:	4287      	cmp	r7, r0
 8015f20:	dd6c      	ble.n	8015ffc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8015f22:	2f00      	cmp	r7, #0
 8015f24:	dd6a      	ble.n	8015ffc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8015f26:	4630      	mov	r0, r6
 8015f28:	e004      	b.n	8015f34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8015f2a:	4287      	cmp	r7, r0
 8015f2c:	dcfb      	bgt.n	8015f26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 8015f2e:	42b0      	cmp	r0, r6
 8015f30:	bfa8      	it	ge
 8015f32:	4630      	movge	r0, r6
 8015f34:	4b76      	ldr	r3, [pc, #472]	; (8016110 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015f36:	1bc0      	subs	r0, r0, r7
 8015f38:	2200      	movs	r2, #0
 8015f3a:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015f3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015f42:	882f      	ldrh	r7, [r5, #0]
 8015f44:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015f48:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015f4c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015f50:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015f54:	42bb      	cmp	r3, r7
 8015f56:	d9cd      	bls.n	8015ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8015f58:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015f5c:	ab07      	add	r3, sp, #28
 8015f5e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015f62:	6851      	ldr	r1, [r2, #4]
 8015f64:	c303      	stmia	r3!, {r0, r1}
 8015f66:	a905      	add	r1, sp, #20
 8015f68:	a807      	add	r0, sp, #28
 8015f6a:	f7ff f9af 	bl	80152cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f6e:	2800      	cmp	r0, #0
 8015f70:	d04c      	beq.n	801600c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8015f72:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015f76:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015f7a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015f7e:	4686      	mov	lr, r0
 8015f80:	4290      	cmp	r0, r2
 8015f82:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015f86:	4450      	add	r0, sl
 8015f88:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015f8c:	bfb8      	it	lt
 8015f8e:	4696      	movlt	lr, r2
 8015f90:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015f94:	4452      	add	r2, sl
 8015f96:	b280      	uxth	r0, r0
 8015f98:	4299      	cmp	r1, r3
 8015f9a:	468c      	mov	ip, r1
 8015f9c:	b292      	uxth	r2, r2
 8015f9e:	9302      	str	r3, [sp, #8]
 8015fa0:	bfb8      	it	lt
 8015fa2:	469c      	movlt	ip, r3
 8015fa4:	b203      	sxth	r3, r0
 8015fa6:	fa0f fa82 	sxth.w	sl, r2
 8015faa:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015fae:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015fb2:	4553      	cmp	r3, sl
 8015fb4:	bfb8      	it	lt
 8015fb6:	4602      	movlt	r2, r0
 8015fb8:	9b02      	ldr	r3, [sp, #8]
 8015fba:	eba2 020e 	sub.w	r2, r2, lr
 8015fbe:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015fc2:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015fc6:	4411      	add	r1, r2
 8015fc8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015fcc:	4413      	add	r3, r2
 8015fce:	b289      	uxth	r1, r1
 8015fd0:	b29b      	uxth	r3, r3
 8015fd2:	b208      	sxth	r0, r1
 8015fd4:	b21a      	sxth	r2, r3
 8015fd6:	4290      	cmp	r0, r2
 8015fd8:	bfb8      	it	lt
 8015fda:	460b      	movlt	r3, r1
 8015fdc:	eba3 030c 	sub.w	r3, r3, ip
 8015fe0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015fe4:	a807      	add	r0, sp, #28
 8015fe6:	f7fb fd5c 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015fea:	b920      	cbnz	r0, 8015ff6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8015fec:	6823      	ldr	r3, [r4, #0]
 8015fee:	a907      	add	r1, sp, #28
 8015ff0:	4620      	mov	r0, r4
 8015ff2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015ff4:	4798      	blx	r3
 8015ff6:	3701      	adds	r7, #1
 8015ff8:	b2bf      	uxth	r7, r7
 8015ffa:	e7a9      	b.n	8015f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8015ffc:	f8d9 0000 	ldr.w	r0, [r9]
 8016000:	2101      	movs	r1, #1
 8016002:	6803      	ldr	r3, [r0, #0]
 8016004:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016008:	4798      	blx	r3
 801600a:	e773      	b.n	8015ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 801600c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016010:	e7e8      	b.n	8015fe4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8016012:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016014:	4798      	blx	r3
 8016016:	4b3f      	ldr	r3, [pc, #252]	; (8016114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016018:	781b      	ldrb	r3, [r3, #0]
 801601a:	2b00      	cmp	r3, #0
 801601c:	f43f af2b 	beq.w	8015e76 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016020:	2300      	movs	r3, #0
 8016022:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016026:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801602a:	882b      	ldrh	r3, [r5, #0]
 801602c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016030:	42ab      	cmp	r3, r5
 8016032:	f4bf af20 	bcs.w	8015e76 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016036:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 801603a:	2907      	cmp	r1, #7
 801603c:	d814      	bhi.n	8016068 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 801603e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8016042:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8016046:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 801604a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 801604e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8016052:	1c4a      	adds	r2, r1, #1
 8016054:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016058:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801605c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016060:	f8a2 c002 	strh.w	ip, [r2, #2]
 8016064:	8097      	strh	r7, [r2, #4]
 8016066:	80d6      	strh	r6, [r2, #6]
 8016068:	3301      	adds	r3, #1
 801606a:	b29b      	uxth	r3, r3
 801606c:	e7e0      	b.n	8016030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 801606e:	2b02      	cmp	r3, #2
 8016070:	f040 8133 	bne.w	80162da <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8016074:	4b28      	ldr	r3, [pc, #160]	; (8016118 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016076:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 801607a:	781b      	ldrb	r3, [r3, #0]
 801607c:	2b01      	cmp	r3, #1
 801607e:	f000 8098 	beq.w	80161b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8016082:	882a      	ldrh	r2, [r5, #0]
 8016084:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016088:	3201      	adds	r2, #1
 801608a:	b292      	uxth	r2, r2
 801608c:	2900      	cmp	r1, #0
 801608e:	d0c2      	beq.n	8016016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016090:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8016094:	4694      	mov	ip, r2
 8016096:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 801609a:	f04f 0900 	mov.w	r9, #0
 801609e:	441e      	add	r6, r3
 80160a0:	b236      	sxth	r6, r6
 80160a2:	fa1f f38c 	uxth.w	r3, ip
 80160a6:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80160aa:	4299      	cmp	r1, r3
 80160ac:	f240 80be 	bls.w	801622c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 80160b0:	4427      	add	r7, r4
 80160b2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80160b6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80160ba:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80160be:	4283      	cmp	r3, r0
 80160c0:	f340 80a0 	ble.w	8016204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 80160c4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80160c8:	46e1      	mov	r9, ip
 80160ca:	4406      	add	r6, r0
 80160cc:	b236      	sxth	r6, r6
 80160ce:	429e      	cmp	r6, r3
 80160d0:	bfa8      	it	ge
 80160d2:	461e      	movge	r6, r3
 80160d4:	f10c 0c01 	add.w	ip, ip, #1
 80160d8:	e7e3      	b.n	80160a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 80160da:	d10a      	bne.n	80160f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 80160dc:	4562      	cmp	r2, ip
 80160de:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80160e2:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80160e6:	bfb8      	it	lt
 80160e8:	4662      	movlt	r2, ip
 80160ea:	4288      	cmp	r0, r1
 80160ec:	bfb8      	it	lt
 80160ee:	461f      	movlt	r7, r3
 80160f0:	e086      	b.n	8016200 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80160f2:	428a      	cmp	r2, r1
 80160f4:	bfb8      	it	lt
 80160f6:	460a      	movlt	r2, r1
 80160f8:	e082      	b.n	8016200 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80160fa:	bf00      	nop
 80160fc:	24004a88 	.word	0x24004a88
 8016100:	24004a94 	.word	0x24004a94
 8016104:	2400001c 	.word	0x2400001c
 8016108:	24004a50 	.word	0x24004a50
 801610c:	24004a46 	.word	0x24004a46
 8016110:	24004a44 	.word	0x24004a44
 8016114:	24004a4e 	.word	0x24004a4e
 8016118:	24004a48 	.word	0x24004a48
 801611c:	19a1      	adds	r1, r4, r6
 801611e:	ab07      	add	r3, sp, #28
 8016120:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016124:	6849      	ldr	r1, [r1, #4]
 8016126:	c303      	stmia	r3!, {r0, r1}
 8016128:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801612c:	a807      	add	r0, sp, #28
 801612e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016132:	2b13      	cmp	r3, #19
 8016134:	440b      	add	r3, r1
 8016136:	bfd8      	it	le
 8016138:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801613c:	1a9b      	subs	r3, r3, r2
 801613e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016142:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016146:	f7fe fff5 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801614a:	a807      	add	r0, sp, #28
 801614c:	f7fb fca9 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016150:	bb78      	cbnz	r0, 80161b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8016152:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016156:	4426      	add	r6, r4
 8016158:	f8d9 0000 	ldr.w	r0, [r9]
 801615c:	f1bc 0f14 	cmp.w	ip, #20
 8016160:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016164:	f8d0 e000 	ldr.w	lr, [r0]
 8016168:	bfa8      	it	ge
 801616a:	f04f 0c14 	movge.w	ip, #20
 801616e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016172:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016176:	fa1f fc8c 	uxth.w	ip, ip
 801617a:	f8cd c000 	str.w	ip, [sp]
 801617e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016182:	47d8      	blx	fp
 8016184:	4683      	mov	fp, r0
 8016186:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801618a:	a807      	add	r0, sp, #28
 801618c:	f7fe ffb8 	bl	8015100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016190:	6823      	ldr	r3, [r4, #0]
 8016192:	4620      	mov	r0, r4
 8016194:	a907      	add	r1, sp, #28
 8016196:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016198:	4798      	blx	r3
 801619a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801619e:	eba0 000b 	sub.w	r0, r0, fp
 80161a2:	b200      	sxth	r0, r0
 80161a4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80161a8:	b918      	cbnz	r0, 80161b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80161aa:	b2b9      	uxth	r1, r7
 80161ac:	4650      	mov	r0, sl
 80161ae:	f7ff fa7b 	bl	80156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80161b2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80161b6:	f1bb 0f00 	cmp.w	fp, #0
 80161ba:	f43f af2c 	beq.w	8016016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80161be:	882b      	ldrh	r3, [r5, #0]
 80161c0:	2700      	movs	r7, #0
 80161c2:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80161c6:	3301      	adds	r3, #1
 80161c8:	b29b      	uxth	r3, r3
 80161ca:	b299      	uxth	r1, r3
 80161cc:	00fe      	lsls	r6, r7, #3
 80161ce:	458b      	cmp	fp, r1
 80161d0:	d9a4      	bls.n	801611c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 80161d2:	4426      	add	r6, r4
 80161d4:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80161d8:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80161dc:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80161e0:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80161e4:	4408      	add	r0, r1
 80161e6:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80161ea:	4461      	add	r1, ip
 80161ec:	b200      	sxth	r0, r0
 80161ee:	b209      	sxth	r1, r1
 80161f0:	4288      	cmp	r0, r1
 80161f2:	f6bf af72 	bge.w	80160da <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 80161f6:	4584      	cmp	ip, r0
 80161f8:	4662      	mov	r2, ip
 80161fa:	461f      	mov	r7, r3
 80161fc:	bfb8      	it	lt
 80161fe:	4602      	movlt	r2, r0
 8016200:	3301      	adds	r3, #1
 8016202:	e7e2      	b.n	80161ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8016204:	d10e      	bne.n	8016224 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8016206:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 801620a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801620e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016212:	4473      	add	r3, lr
 8016214:	b21b      	sxth	r3, r3
 8016216:	429e      	cmp	r6, r3
 8016218:	bfa8      	it	ge
 801621a:	461e      	movge	r6, r3
 801621c:	4287      	cmp	r7, r0
 801621e:	bfb8      	it	lt
 8016220:	46e1      	movlt	r9, ip
 8016222:	e757      	b.n	80160d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8016224:	4286      	cmp	r6, r0
 8016226:	bfa8      	it	ge
 8016228:	4606      	movge	r6, r0
 801622a:	e753      	b.n	80160d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801622c:	eb0a 0007 	add.w	r0, sl, r7
 8016230:	4427      	add	r7, r4
 8016232:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016236:	f1bb 0f13 	cmp.w	fp, #19
 801623a:	bfdc      	itt	le
 801623c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016240:	445e      	addle	r6, fp
 8016242:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016246:	bfd8      	it	le
 8016248:	b236      	sxthle	r6, r6
 801624a:	f7fb fc2a 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801624e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016252:	2800      	cmp	r0, #0
 8016254:	f47f af1a 	bne.w	801608c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8016258:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 801625c:	fa1f fb8b 	uxth.w	fp, fp
 8016260:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016264:	1ab6      	subs	r6, r6, r2
 8016266:	4829      	ldr	r0, [pc, #164]	; (801630c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8016268:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801626c:	2e14      	cmp	r6, #20
 801626e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016272:	6800      	ldr	r0, [r0, #0]
 8016274:	bfa8      	it	ge
 8016276:	2614      	movge	r6, #20
 8016278:	f8ad 101c 	strh.w	r1, [sp, #28]
 801627c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016280:	b289      	uxth	r1, r1
 8016282:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016286:	b2b6      	uxth	r6, r6
 8016288:	f8d0 c000 	ldr.w	ip, [r0]
 801628c:	b292      	uxth	r2, r2
 801628e:	455e      	cmp	r6, fp
 8016290:	bf94      	ite	ls
 8016292:	9600      	strls	r6, [sp, #0]
 8016294:	f8cd b000 	strhi.w	fp, [sp]
 8016298:	b29b      	uxth	r3, r3
 801629a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801629e:	47b0      	blx	r6
 80162a0:	6823      	ldr	r3, [r4, #0]
 80162a2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80162a6:	a907      	add	r1, sp, #28
 80162a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80162aa:	4620      	mov	r0, r4
 80162ac:	4798      	blx	r3
 80162ae:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80162b2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80162b6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80162ba:	1a5b      	subs	r3, r3, r1
 80162bc:	440a      	add	r2, r1
 80162be:	b21b      	sxth	r3, r3
 80162c0:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80162c4:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80162c8:	2b00      	cmp	r3, #0
 80162ca:	f47f aeda 	bne.w	8016082 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80162ce:	fa1f f189 	uxth.w	r1, r9
 80162d2:	4650      	mov	r0, sl
 80162d4:	f7ff f9e8 	bl	80156a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80162d8:	e6d3      	b.n	8016082 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80162da:	882e      	ldrh	r6, [r5, #0]
 80162dc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80162e0:	42b3      	cmp	r3, r6
 80162e2:	f67f ae98 	bls.w	8016016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80162e6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80162ea:	ab07      	add	r3, sp, #28
 80162ec:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80162f0:	6851      	ldr	r1, [r2, #4]
 80162f2:	c303      	stmia	r3!, {r0, r1}
 80162f4:	a807      	add	r0, sp, #28
 80162f6:	f7fb fbd4 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80162fa:	b920      	cbnz	r0, 8016306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 80162fc:	6823      	ldr	r3, [r4, #0]
 80162fe:	a907      	add	r1, sp, #28
 8016300:	4620      	mov	r0, r4
 8016302:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016304:	4798      	blx	r3
 8016306:	3601      	adds	r6, #1
 8016308:	b2b6      	uxth	r6, r6
 801630a:	e7e7      	b.n	80162dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 801630c:	24004a50 	.word	0x24004a50

08016310 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016310:	4b03      	ldr	r3, [pc, #12]	; (8016320 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016312:	2200      	movs	r2, #0
 8016314:	801a      	strh	r2, [r3, #0]
 8016316:	805a      	strh	r2, [r3, #2]
 8016318:	809a      	strh	r2, [r3, #4]
 801631a:	80da      	strh	r2, [r3, #6]
 801631c:	4770      	bx	lr
 801631e:	bf00      	nop
 8016320:	24004a94 	.word	0x24004a94

08016324 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016328:	b09d      	sub	sp, #116	; 0x74
 801632a:	4606      	mov	r6, r0
 801632c:	4614      	mov	r4, r2
 801632e:	468a      	mov	sl, r1
 8016330:	a803      	add	r0, sp, #12
 8016332:	461d      	mov	r5, r3
 8016334:	f000 fd94 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 8016338:	6833      	ldr	r3, [r6, #0]
 801633a:	4630      	mov	r0, r6
 801633c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016340:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016342:	4798      	blx	r3
 8016344:	6833      	ldr	r3, [r6, #0]
 8016346:	4607      	mov	r7, r0
 8016348:	4630      	mov	r0, r6
 801634a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801634c:	4798      	blx	r3
 801634e:	462a      	mov	r2, r5
 8016350:	2500      	movs	r5, #0
 8016352:	4621      	mov	r1, r4
 8016354:	9000      	str	r0, [sp, #0]
 8016356:	463b      	mov	r3, r7
 8016358:	462c      	mov	r4, r5
 801635a:	46a9      	mov	r9, r5
 801635c:	46a8      	mov	r8, r5
 801635e:	a803      	add	r0, sp, #12
 8016360:	f000 fdd9 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016364:	2300      	movs	r3, #0
 8016366:	9302      	str	r3, [sp, #8]
 8016368:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801636c:	429c      	cmp	r4, r3
 801636e:	d002      	beq.n	8016376 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016370:	455c      	cmp	r4, fp
 8016372:	bf18      	it	ne
 8016374:	4625      	movne	r5, r4
 8016376:	ab02      	add	r3, sp, #8
 8016378:	4632      	mov	r2, r6
 801637a:	4651      	mov	r1, sl
 801637c:	a803      	add	r0, sp, #12
 801637e:	f001 f8cf 	bl	8017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016382:	4604      	mov	r4, r0
 8016384:	b108      	cbz	r0, 801638a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016386:	280a      	cmp	r0, #10
 8016388:	d10a      	bne.n	80163a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801638a:	45c1      	cmp	r9, r8
 801638c:	bf38      	it	cc
 801638e:	46c1      	movcc	r9, r8
 8016390:	f04f 0800 	mov.w	r8, #0
 8016394:	2c00      	cmp	r4, #0
 8016396:	d1e5      	bne.n	8016364 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016398:	4648      	mov	r0, r9
 801639a:	b01d      	add	sp, #116	; 0x74
 801639c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163a0:	9a02      	ldr	r2, [sp, #8]
 80163a2:	2a00      	cmp	r2, #0
 80163a4:	d0de      	beq.n	8016364 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80163a6:	7b57      	ldrb	r7, [r2, #13]
 80163a8:	4629      	mov	r1, r5
 80163aa:	6833      	ldr	r3, [r6, #0]
 80163ac:	007f      	lsls	r7, r7, #1
 80163ae:	8894      	ldrh	r4, [r2, #4]
 80163b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80163b2:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80163b6:	7a97      	ldrb	r7, [r2, #10]
 80163b8:	4307      	orrs	r7, r0
 80163ba:	4630      	mov	r0, r6
 80163bc:	4798      	blx	r3
 80163be:	4438      	add	r0, r7
 80163c0:	4480      	add	r8, r0
 80163c2:	fa1f f888 	uxth.w	r8, r8
 80163c6:	e7e5      	b.n	8016394 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080163c8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80163c8:	b508      	push	{r3, lr}
 80163ca:	6803      	ldr	r3, [r0, #0]
 80163cc:	68db      	ldr	r3, [r3, #12]
 80163ce:	4798      	blx	r3
 80163d0:	b128      	cbz	r0, 80163de <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80163d2:	7b43      	ldrb	r3, [r0, #13]
 80163d4:	7a80      	ldrb	r0, [r0, #10]
 80163d6:	005b      	lsls	r3, r3, #1
 80163d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80163dc:	4318      	orrs	r0, r3
 80163de:	bd08      	pop	{r3, pc}

080163e0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80163e0:	b40e      	push	{r1, r2, r3}
 80163e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80163e4:	b09e      	sub	sp, #120	; 0x78
 80163e6:	4605      	mov	r5, r0
 80163e8:	ab23      	add	r3, sp, #140	; 0x8c
 80163ea:	a805      	add	r0, sp, #20
 80163ec:	f853 4b04 	ldr.w	r4, [r3], #4
 80163f0:	9303      	str	r3, [sp, #12]
 80163f2:	f000 fd35 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 80163f6:	682b      	ldr	r3, [r5, #0]
 80163f8:	4628      	mov	r0, r5
 80163fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80163fc:	4798      	blx	r3
 80163fe:	682b      	ldr	r3, [r5, #0]
 8016400:	4606      	mov	r6, r0
 8016402:	4628      	mov	r0, r5
 8016404:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016406:	4798      	blx	r3
 8016408:	4633      	mov	r3, r6
 801640a:	4621      	mov	r1, r4
 801640c:	ae1e      	add	r6, sp, #120	; 0x78
 801640e:	2400      	movs	r4, #0
 8016410:	9000      	str	r0, [sp, #0]
 8016412:	9a03      	ldr	r2, [sp, #12]
 8016414:	a805      	add	r0, sp, #20
 8016416:	f000 fd7e 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801641a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801641e:	462a      	mov	r2, r5
 8016420:	4633      	mov	r3, r6
 8016422:	4621      	mov	r1, r4
 8016424:	a805      	add	r0, sp, #20
 8016426:	f001 f87b 	bl	8017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801642a:	b300      	cbz	r0, 801646e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 801642c:	280a      	cmp	r0, #10
 801642e:	d01a      	beq.n	8016466 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8016430:	9f04      	ldr	r7, [sp, #16]
 8016432:	b1c7      	cbz	r7, 8016466 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8016434:	7b78      	ldrb	r0, [r7, #13]
 8016436:	7a3b      	ldrb	r3, [r7, #8]
 8016438:	00c1      	lsls	r1, r0, #3
 801643a:	88ea      	ldrh	r2, [r5, #6]
 801643c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016440:	4319      	orrs	r1, r3
 8016442:	0643      	lsls	r3, r0, #25
 8016444:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8016448:	bf48      	it	mi
 801644a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801644e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016452:	bf48      	it	mi
 8016454:	b219      	sxthmi	r1, r3
 8016456:	79fb      	ldrb	r3, [r7, #7]
 8016458:	4303      	orrs	r3, r0
 801645a:	4413      	add	r3, r2
 801645c:	1a5b      	subs	r3, r3, r1
 801645e:	b21b      	sxth	r3, r3
 8016460:	429c      	cmp	r4, r3
 8016462:	bfb8      	it	lt
 8016464:	461c      	movlt	r4, r3
 8016466:	4633      	mov	r3, r6
 8016468:	462a      	mov	r2, r5
 801646a:	2100      	movs	r1, #0
 801646c:	e7da      	b.n	8016424 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801646e:	b2a0      	uxth	r0, r4
 8016470:	b01e      	add	sp, #120	; 0x78
 8016472:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016476:	b003      	add	sp, #12
 8016478:	4770      	bx	lr

0801647a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801647a:	7a43      	ldrb	r3, [r0, #9]
 801647c:	8880      	ldrh	r0, [r0, #4]
 801647e:	4418      	add	r0, r3
 8016480:	b280      	uxth	r0, r0
 8016482:	4770      	bx	lr

08016484 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016484:	6803      	ldr	r3, [r0, #0]
 8016486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016488:	4718      	bx	r3

0801648a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801648a:	b40e      	push	{r1, r2, r3}
 801648c:	b570      	push	{r4, r5, r6, lr}
 801648e:	b09d      	sub	sp, #116	; 0x74
 8016490:	4604      	mov	r4, r0
 8016492:	ab21      	add	r3, sp, #132	; 0x84
 8016494:	a803      	add	r0, sp, #12
 8016496:	f853 5b04 	ldr.w	r5, [r3], #4
 801649a:	9302      	str	r3, [sp, #8]
 801649c:	f000 fce0 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 80164a0:	6823      	ldr	r3, [r4, #0]
 80164a2:	4620      	mov	r0, r4
 80164a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80164a6:	4798      	blx	r3
 80164a8:	6823      	ldr	r3, [r4, #0]
 80164aa:	4606      	mov	r6, r0
 80164ac:	4620      	mov	r0, r4
 80164ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80164b0:	2401      	movs	r4, #1
 80164b2:	4798      	blx	r3
 80164b4:	4633      	mov	r3, r6
 80164b6:	9000      	str	r0, [sp, #0]
 80164b8:	4629      	mov	r1, r5
 80164ba:	9a02      	ldr	r2, [sp, #8]
 80164bc:	a803      	add	r0, sp, #12
 80164be:	f000 fd2a 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80164c2:	a803      	add	r0, sp, #12
 80164c4:	f001 f8f8 	bl	80176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80164c8:	b2a3      	uxth	r3, r4
 80164ca:	b138      	cbz	r0, 80164dc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80164cc:	280a      	cmp	r0, #10
 80164ce:	a803      	add	r0, sp, #12
 80164d0:	bf04      	itt	eq
 80164d2:	3301      	addeq	r3, #1
 80164d4:	b21c      	sxtheq	r4, r3
 80164d6:	f001 f8ef 	bl	80176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80164da:	e7f5      	b.n	80164c8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80164dc:	4618      	mov	r0, r3
 80164de:	b01d      	add	sp, #116	; 0x74
 80164e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80164e4:	b003      	add	sp, #12
 80164e6:	4770      	bx	lr

080164e8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80164e8:	b40e      	push	{r1, r2, r3}
 80164ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164ec:	b09e      	sub	sp, #120	; 0x78
 80164ee:	4604      	mov	r4, r0
 80164f0:	ab23      	add	r3, sp, #140	; 0x8c
 80164f2:	a805      	add	r0, sp, #20
 80164f4:	f853 5b04 	ldr.w	r5, [r3], #4
 80164f8:	9303      	str	r3, [sp, #12]
 80164fa:	f000 fcb1 	bl	8016e60 <_ZN8touchgfx12TextProviderC1Ev>
 80164fe:	6823      	ldr	r3, [r4, #0]
 8016500:	4620      	mov	r0, r4
 8016502:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016504:	4798      	blx	r3
 8016506:	6823      	ldr	r3, [r4, #0]
 8016508:	4606      	mov	r6, r0
 801650a:	4620      	mov	r0, r4
 801650c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801650e:	4798      	blx	r3
 8016510:	4633      	mov	r3, r6
 8016512:	4629      	mov	r1, r5
 8016514:	9000      	str	r0, [sp, #0]
 8016516:	9a03      	ldr	r2, [sp, #12]
 8016518:	a805      	add	r0, sp, #20
 801651a:	f000 fcfc 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801651e:	ad1e      	add	r5, sp, #120	; 0x78
 8016520:	2100      	movs	r1, #0
 8016522:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016526:	4622      	mov	r2, r4
 8016528:	a805      	add	r0, sp, #20
 801652a:	f845 1d68 	str.w	r1, [r5, #-104]!
 801652e:	462b      	mov	r3, r5
 8016530:	f000 fff6 	bl	8017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016534:	b1d8      	cbz	r0, 801656e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016536:	280a      	cmp	r0, #10
 8016538:	d012      	beq.n	8016560 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801653a:	9804      	ldr	r0, [sp, #16]
 801653c:	b180      	cbz	r0, 8016560 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801653e:	7b47      	ldrb	r7, [r0, #13]
 8016540:	88e2      	ldrh	r2, [r4, #6]
 8016542:	00fb      	lsls	r3, r7, #3
 8016544:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016548:	7a03      	ldrb	r3, [r0, #8]
 801654a:	430b      	orrs	r3, r1
 801654c:	0679      	lsls	r1, r7, #25
 801654e:	bf44      	itt	mi
 8016550:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016554:	b21b      	sxthmi	r3, r3
 8016556:	1ad3      	subs	r3, r2, r3
 8016558:	b21b      	sxth	r3, r3
 801655a:	429e      	cmp	r6, r3
 801655c:	bfa8      	it	ge
 801655e:	461e      	movge	r6, r3
 8016560:	462b      	mov	r3, r5
 8016562:	4622      	mov	r2, r4
 8016564:	2100      	movs	r1, #0
 8016566:	a805      	add	r0, sp, #20
 8016568:	f000 ffda 	bl	8017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801656c:	e7e2      	b.n	8016534 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801656e:	4630      	mov	r0, r6
 8016570:	b01e      	add	sp, #120	; 0x78
 8016572:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016576:	b003      	add	sp, #12
 8016578:	4770      	bx	lr

0801657a <_ZNK8touchgfx8Drawable10invalidateEv>:
 801657a:	b513      	push	{r0, r1, r4, lr}
 801657c:	6803      	ldr	r3, [r0, #0]
 801657e:	2400      	movs	r4, #0
 8016580:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016584:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016588:	f8ad 1004 	strh.w	r1, [sp, #4]
 801658c:	4669      	mov	r1, sp
 801658e:	691b      	ldr	r3, [r3, #16]
 8016590:	9400      	str	r4, [sp, #0]
 8016592:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016596:	4798      	blx	r3
 8016598:	b002      	add	sp, #8
 801659a:	bd10      	pop	{r4, pc}

0801659c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801659c:	b538      	push	{r3, r4, r5, lr}
 801659e:	680b      	ldr	r3, [r1, #0]
 80165a0:	460c      	mov	r4, r1
 80165a2:	4605      	mov	r5, r0
 80165a4:	68db      	ldr	r3, [r3, #12]
 80165a6:	4798      	blx	r3
 80165a8:	6823      	ldr	r3, [r4, #0]
 80165aa:	4620      	mov	r0, r4
 80165ac:	4629      	mov	r1, r5
 80165ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165b0:	4798      	blx	r3
 80165b2:	4628      	mov	r0, r5
 80165b4:	bd38      	pop	{r3, r4, r5, pc}

080165b6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80165b6:	b410      	push	{r4}
 80165b8:	880a      	ldrh	r2, [r1, #0]
 80165ba:	8884      	ldrh	r4, [r0, #4]
 80165bc:	4422      	add	r2, r4
 80165be:	800a      	strh	r2, [r1, #0]
 80165c0:	884a      	ldrh	r2, [r1, #2]
 80165c2:	88c4      	ldrh	r4, [r0, #6]
 80165c4:	4422      	add	r2, r4
 80165c6:	804a      	strh	r2, [r1, #2]
 80165c8:	6940      	ldr	r0, [r0, #20]
 80165ca:	b120      	cbz	r0, 80165d6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80165cc:	6803      	ldr	r3, [r0, #0]
 80165ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80165d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165d4:	4718      	bx	r3
 80165d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80165da:	4770      	bx	lr

080165dc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80165dc:	b570      	push	{r4, r5, r6, lr}
 80165de:	8882      	ldrh	r2, [r0, #4]
 80165e0:	460c      	mov	r4, r1
 80165e2:	880b      	ldrh	r3, [r1, #0]
 80165e4:	4605      	mov	r5, r0
 80165e6:	4413      	add	r3, r2
 80165e8:	800b      	strh	r3, [r1, #0]
 80165ea:	884b      	ldrh	r3, [r1, #2]
 80165ec:	88c2      	ldrh	r2, [r0, #6]
 80165ee:	4413      	add	r3, r2
 80165f0:	804b      	strh	r3, [r1, #2]
 80165f2:	1d01      	adds	r1, r0, #4
 80165f4:	4620      	mov	r0, r4
 80165f6:	f7fb fa11 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 80165fa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80165fe:	2b00      	cmp	r3, #0
 8016600:	dd0b      	ble.n	801661a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016602:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016606:	2b00      	cmp	r3, #0
 8016608:	dd07      	ble.n	801661a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801660a:	6968      	ldr	r0, [r5, #20]
 801660c:	b128      	cbz	r0, 801661a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801660e:	6803      	ldr	r3, [r0, #0]
 8016610:	4621      	mov	r1, r4
 8016612:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016614:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016618:	4718      	bx	r3
 801661a:	bd70      	pop	{r4, r5, r6, pc}

0801661c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801661c:	b570      	push	{r4, r5, r6, lr}
 801661e:	8882      	ldrh	r2, [r0, #4]
 8016620:	460c      	mov	r4, r1
 8016622:	880b      	ldrh	r3, [r1, #0]
 8016624:	4605      	mov	r5, r0
 8016626:	4413      	add	r3, r2
 8016628:	800b      	strh	r3, [r1, #0]
 801662a:	884b      	ldrh	r3, [r1, #2]
 801662c:	88c2      	ldrh	r2, [r0, #6]
 801662e:	4413      	add	r3, r2
 8016630:	804b      	strh	r3, [r1, #2]
 8016632:	1d01      	adds	r1, r0, #4
 8016634:	4620      	mov	r0, r4
 8016636:	f7fb f9f1 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 801663a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801663e:	2b00      	cmp	r3, #0
 8016640:	dd19      	ble.n	8016676 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016642:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016646:	2b00      	cmp	r3, #0
 8016648:	dd15      	ble.n	8016676 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801664a:	6968      	ldr	r0, [r5, #20]
 801664c:	b128      	cbz	r0, 801665a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801664e:	6803      	ldr	r3, [r0, #0]
 8016650:	4621      	mov	r1, r4
 8016652:	691b      	ldr	r3, [r3, #16]
 8016654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016658:	4718      	bx	r3
 801665a:	4b07      	ldr	r3, [pc, #28]	; (8016678 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801665c:	681b      	ldr	r3, [r3, #0]
 801665e:	3304      	adds	r3, #4
 8016660:	429d      	cmp	r5, r3
 8016662:	d108      	bne.n	8016676 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016664:	f7fe ff10 	bl	8015488 <_ZN8touchgfx11Application11getInstanceEv>
 8016668:	6803      	ldr	r3, [r0, #0]
 801666a:	6821      	ldr	r1, [r4, #0]
 801666c:	6862      	ldr	r2, [r4, #4]
 801666e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016674:	4718      	bx	r3
 8016676:	bd70      	pop	{r4, r5, r6, pc}
 8016678:	24004a8c 	.word	0x24004a8c

0801667c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801667c:	b570      	push	{r4, r5, r6, lr}
 801667e:	4604      	mov	r4, r0
 8016680:	4616      	mov	r6, r2
 8016682:	460d      	mov	r5, r1
 8016684:	b901      	cbnz	r1, 8016688 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016686:	b192      	cbz	r2, 80166ae <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016688:	6823      	ldr	r3, [r4, #0]
 801668a:	4620      	mov	r0, r4
 801668c:	699b      	ldr	r3, [r3, #24]
 801668e:	4798      	blx	r3
 8016690:	88e2      	ldrh	r2, [r4, #6]
 8016692:	88a1      	ldrh	r1, [r4, #4]
 8016694:	4620      	mov	r0, r4
 8016696:	4432      	add	r2, r6
 8016698:	4429      	add	r1, r5
 801669a:	b212      	sxth	r2, r2
 801669c:	b209      	sxth	r1, r1
 801669e:	f7f7 fc8e 	bl	800dfbe <_ZN8touchgfx8Drawable5setXYEss>
 80166a2:	6823      	ldr	r3, [r4, #0]
 80166a4:	4620      	mov	r0, r4
 80166a6:	699b      	ldr	r3, [r3, #24]
 80166a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80166ac:	4718      	bx	r3
 80166ae:	bd70      	pop	{r4, r5, r6, pc}

080166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80166b0:	b510      	push	{r4, lr}
 80166b2:	2300      	movs	r3, #0
 80166b4:	4604      	mov	r4, r0
 80166b6:	4608      	mov	r0, r1
 80166b8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80166bc:	8023      	strh	r3, [r4, #0]
 80166be:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80166c2:	8063      	strh	r3, [r4, #2]
 80166c4:	6803      	ldr	r3, [r0, #0]
 80166c6:	80a1      	strh	r1, [r4, #4]
 80166c8:	4621      	mov	r1, r4
 80166ca:	80e2      	strh	r2, [r4, #6]
 80166cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80166ce:	4798      	blx	r3
 80166d0:	4620      	mov	r0, r4
 80166d2:	bd10      	pop	{r4, pc}

080166d4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80166d4:	b530      	push	{r4, r5, lr}
 80166d6:	8083      	strh	r3, [r0, #4]
 80166d8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80166dc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80166e0:	80c3      	strh	r3, [r0, #6]
 80166e2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80166e6:	6141      	str	r1, [r0, #20]
 80166e8:	7203      	strb	r3, [r0, #8]
 80166ea:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80166ee:	8302      	strh	r2, [r0, #24]
 80166f0:	7243      	strb	r3, [r0, #9]
 80166f2:	7a83      	ldrb	r3, [r0, #10]
 80166f4:	f365 0306 	bfi	r3, r5, #0, #7
 80166f8:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80166fc:	f365 13c7 	bfi	r3, r5, #7, #1
 8016700:	7283      	strb	r3, [r0, #10]
 8016702:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016706:	72c3      	strb	r3, [r0, #11]
 8016708:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801670c:	7303      	strb	r3, [r0, #12]
 801670e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016712:	81c3      	strh	r3, [r0, #14]
 8016714:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016718:	8203      	strh	r3, [r0, #16]
 801671a:	4b01      	ldr	r3, [pc, #4]	; (8016720 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801671c:	6003      	str	r3, [r0, #0]
 801671e:	bd30      	pop	{r4, r5, pc}
 8016720:	08028f20 	.word	0x08028f20

08016724 <_ZNK8touchgfx9ConstFont4findEt>:
 8016724:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016726:	6944      	ldr	r4, [r0, #20]
 8016728:	b3bc      	cbz	r4, 801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801672a:	88a3      	ldrh	r3, [r4, #4]
 801672c:	8b02      	ldrh	r2, [r0, #24]
 801672e:	1acb      	subs	r3, r1, r3
 8016730:	f102 32ff 	add.w	r2, r2, #4294967295
 8016734:	d431      	bmi.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016736:	4293      	cmp	r3, r2
 8016738:	dd0c      	ble.n	8016754 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801673a:	230e      	movs	r3, #14
 801673c:	fb03 4302 	mla	r3, r3, r2, r4
 8016740:	889b      	ldrh	r3, [r3, #4]
 8016742:	1a5b      	subs	r3, r3, r1
 8016744:	1ad3      	subs	r3, r2, r3
 8016746:	429a      	cmp	r2, r3
 8016748:	db27      	blt.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801674a:	2b00      	cmp	r3, #0
 801674c:	bfbc      	itt	lt
 801674e:	2302      	movlt	r3, #2
 8016750:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016754:	2500      	movs	r5, #0
 8016756:	260e      	movs	r6, #14
 8016758:	4295      	cmp	r5, r2
 801675a:	dc1e      	bgt.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801675c:	fb06 4003 	mla	r0, r6, r3, r4
 8016760:	8887      	ldrh	r7, [r0, #4]
 8016762:	42b9      	cmp	r1, r7
 8016764:	d01a      	beq.n	801679c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016766:	d20d      	bcs.n	8016784 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016768:	1e5a      	subs	r2, r3, #1
 801676a:	4295      	cmp	r5, r2
 801676c:	dc15      	bgt.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801676e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016772:	1a5b      	subs	r3, r3, r1
 8016774:	1ad3      	subs	r3, r2, r3
 8016776:	429a      	cmp	r2, r3
 8016778:	db0f      	blt.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801677a:	429d      	cmp	r5, r3
 801677c:	ddec      	ble.n	8016758 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801677e:	1953      	adds	r3, r2, r5
 8016780:	105b      	asrs	r3, r3, #1
 8016782:	e7e9      	b.n	8016758 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016784:	1c5d      	adds	r5, r3, #1
 8016786:	42aa      	cmp	r2, r5
 8016788:	db07      	blt.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801678a:	8a43      	ldrh	r3, [r0, #18]
 801678c:	1acb      	subs	r3, r1, r3
 801678e:	442b      	add	r3, r5
 8016790:	429d      	cmp	r5, r3
 8016792:	dc02      	bgt.n	801679a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016794:	429a      	cmp	r2, r3
 8016796:	dadf      	bge.n	8016758 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016798:	e7f1      	b.n	801677e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801679a:	2000      	movs	r0, #0
 801679c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801679e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801679e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167a0:	4604      	mov	r4, r0
 80167a2:	4617      	mov	r7, r2
 80167a4:	461e      	mov	r6, r3
 80167a6:	b911      	cbnz	r1, 80167ae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80167a8:	2500      	movs	r5, #0
 80167aa:	4628      	mov	r0, r5
 80167ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80167ae:	290a      	cmp	r1, #10
 80167b0:	d0fa      	beq.n	80167a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167b2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80167b6:	4291      	cmp	r1, r2
 80167b8:	d0f6      	beq.n	80167a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167ba:	f242 020b 	movw	r2, #8203	; 0x200b
 80167be:	4291      	cmp	r1, r2
 80167c0:	d0f2      	beq.n	80167a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167c2:	f7ff ffaf 	bl	8016724 <_ZNK8touchgfx9ConstFont4findEt>
 80167c6:	4605      	mov	r5, r0
 80167c8:	b950      	cbnz	r0, 80167e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80167ca:	6823      	ldr	r3, [r4, #0]
 80167cc:	4620      	mov	r0, r4
 80167ce:	691b      	ldr	r3, [r3, #16]
 80167d0:	4798      	blx	r3
 80167d2:	4601      	mov	r1, r0
 80167d4:	4620      	mov	r0, r4
 80167d6:	f7ff ffa5 	bl	8016724 <_ZNK8touchgfx9ConstFont4findEt>
 80167da:	4605      	mov	r5, r0
 80167dc:	2800      	cmp	r0, #0
 80167de:	d0e3      	beq.n	80167a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80167e0:	6823      	ldr	r3, [r4, #0]
 80167e2:	4629      	mov	r1, r5
 80167e4:	4620      	mov	r0, r4
 80167e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80167e8:	4798      	blx	r3
 80167ea:	6038      	str	r0, [r7, #0]
 80167ec:	6823      	ldr	r3, [r4, #0]
 80167ee:	4620      	mov	r0, r4
 80167f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80167f2:	4798      	blx	r3
 80167f4:	7030      	strb	r0, [r6, #0]
 80167f6:	e7d8      	b.n	80167aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080167f8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80167f8:	b538      	push	{r3, r4, r5, lr}
 80167fa:	4605      	mov	r5, r0
 80167fc:	f002 f82c 	bl	8018858 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016800:	4604      	mov	r4, r0
 8016802:	4628      	mov	r0, r5
 8016804:	f001 ff6c 	bl	80186e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016808:	2800      	cmp	r0, #0
 801680a:	bf14      	ite	ne
 801680c:	2002      	movne	r0, #2
 801680e:	2000      	moveq	r0, #0
 8016810:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016814:	b280      	uxth	r0, r0
 8016816:	bd38      	pop	{r3, r4, r5, pc}

08016818 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016818:	b538      	push	{r3, r4, r5, lr}
 801681a:	4605      	mov	r5, r0
 801681c:	f002 f81c 	bl	8018858 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016820:	4604      	mov	r4, r0
 8016822:	4628      	mov	r0, r5
 8016824:	f001 ff5c 	bl	80186e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016828:	2800      	cmp	r0, #0
 801682a:	bf14      	ite	ne
 801682c:	2002      	movne	r0, #2
 801682e:	2000      	moveq	r0, #0
 8016830:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016834:	f040 0001 	orr.w	r0, r0, #1
 8016838:	b280      	uxth	r0, r0
 801683a:	bd38      	pop	{r3, r4, r5, pc}

0801683c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801683c:	2000      	movs	r0, #0
 801683e:	4770      	bx	lr

08016840 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016840:	2001      	movs	r0, #1
 8016842:	4770      	bx	lr

08016844 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016844:	2002      	movs	r0, #2
 8016846:	4770      	bx	lr

08016848 <_ZN8touchgfx12GestureEventD1Ev>:
 8016848:	4770      	bx	lr

0801684a <_ZN8touchgfx9DragEventD1Ev>:
 801684a:	4770      	bx	lr

0801684c <_ZN8touchgfx10ClickEventD1Ev>:
 801684c:	4770      	bx	lr

0801684e <_ZN8touchgfx10ClickEventD0Ev>:
 801684e:	b510      	push	{r4, lr}
 8016850:	4604      	mov	r4, r0
 8016852:	210c      	movs	r1, #12
 8016854:	f00f fad7 	bl	8025e06 <_ZdlPvj>
 8016858:	4620      	mov	r0, r4
 801685a:	bd10      	pop	{r4, pc}

0801685c <_ZN8touchgfx9DragEventD0Ev>:
 801685c:	b510      	push	{r4, lr}
 801685e:	4604      	mov	r4, r0
 8016860:	2110      	movs	r1, #16
 8016862:	f00f fad0 	bl	8025e06 <_ZdlPvj>
 8016866:	4620      	mov	r0, r4
 8016868:	bd10      	pop	{r4, pc}

0801686a <_ZN8touchgfx12GestureEventD0Ev>:
 801686a:	b510      	push	{r4, lr}
 801686c:	4604      	mov	r4, r0
 801686e:	210c      	movs	r1, #12
 8016870:	f00f fac9 	bl	8025e06 <_ZdlPvj>
 8016874:	4620      	mov	r0, r4
 8016876:	bd10      	pop	{r4, pc}

08016878 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016878:	b530      	push	{r4, r5, lr}
 801687a:	460d      	mov	r5, r1
 801687c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801687e:	b087      	sub	sp, #28
 8016880:	4604      	mov	r4, r0
 8016882:	b301      	cbz	r1, 80168c6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016884:	a801      	add	r0, sp, #4
 8016886:	f7ff ff13 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801688a:	892a      	ldrh	r2, [r5, #8]
 801688c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016890:	7928      	ldrb	r0, [r5, #4]
 8016892:	1ad2      	subs	r2, r2, r3
 8016894:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016896:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801689a:	441a      	add	r2, r3
 801689c:	896b      	ldrh	r3, [r5, #10]
 801689e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80168a2:	f88d 0010 	strb.w	r0, [sp, #16]
 80168a6:	1b5b      	subs	r3, r3, r5
 80168a8:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80168aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80168ac:	442b      	add	r3, r5
 80168ae:	4d07      	ldr	r5, [pc, #28]	; (80168cc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80168b0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80168b4:	a903      	add	r1, sp, #12
 80168b6:	9503      	str	r5, [sp, #12]
 80168b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80168bc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80168c0:	6803      	ldr	r3, [r0, #0]
 80168c2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80168c4:	4798      	blx	r3
 80168c6:	b007      	add	sp, #28
 80168c8:	bd30      	pop	{r4, r5, pc}
 80168ca:	bf00      	nop
 80168cc:	08028fa8 	.word	0x08028fa8

080168d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80168d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80168d4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80168d6:	b08a      	sub	sp, #40	; 0x28
 80168d8:	4604      	mov	r4, r0
 80168da:	460d      	mov	r5, r1
 80168dc:	b113      	cbz	r3, 80168e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80168de:	790b      	ldrb	r3, [r1, #4]
 80168e0:	2b00      	cmp	r3, #0
 80168e2:	d044      	beq.n	801696e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80168e4:	f104 0804 	add.w	r8, r4, #4
 80168e8:	a803      	add	r0, sp, #12
 80168ea:	4641      	mov	r1, r8
 80168ec:	f7ff fee0 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80168f0:	792b      	ldrb	r3, [r5, #4]
 80168f2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80168f6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80168fa:	b983      	cbnz	r3, 801691e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80168fc:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016900:	892a      	ldrh	r2, [r5, #8]
 8016902:	88e9      	ldrh	r1, [r5, #6]
 8016904:	4640      	mov	r0, r8
 8016906:	1b92      	subs	r2, r2, r6
 8016908:	9301      	str	r3, [sp, #4]
 801690a:	1bc9      	subs	r1, r1, r7
 801690c:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016910:	b212      	sxth	r2, r2
 8016912:	9300      	str	r3, [sp, #0]
 8016914:	b209      	sxth	r1, r1
 8016916:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801691a:	f7fa ff9d 	bl	8011858 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801691e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016920:	b329      	cbz	r1, 801696e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016922:	a805      	add	r0, sp, #20
 8016924:	f7ff fec4 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016928:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801692c:	792b      	ldrb	r3, [r5, #4]
 801692e:	a907      	add	r1, sp, #28
 8016930:	1abf      	subs	r7, r7, r2
 8016932:	88ea      	ldrh	r2, [r5, #6]
 8016934:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016936:	4417      	add	r7, r2
 8016938:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801693a:	f88d 3020 	strb.w	r3, [sp, #32]
 801693e:	4417      	add	r7, r2
 8016940:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016944:	1ab6      	subs	r6, r6, r2
 8016946:	892a      	ldrh	r2, [r5, #8]
 8016948:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801694c:	4416      	add	r6, r2
 801694e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016950:	4416      	add	r6, r2
 8016952:	4a08      	ldr	r2, [pc, #32]	; (8016974 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016954:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016958:	2600      	movs	r6, #0
 801695a:	9207      	str	r2, [sp, #28]
 801695c:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016960:	6803      	ldr	r3, [r0, #0]
 8016962:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016964:	4798      	blx	r3
 8016966:	792b      	ldrb	r3, [r5, #4]
 8016968:	b10b      	cbz	r3, 801696e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801696a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801696e:	b00a      	add	sp, #40	; 0x28
 8016970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016974:	08028f80 	.word	0x08028f80

08016978 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801697c:	460c      	mov	r4, r1
 801697e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016980:	b088      	sub	sp, #32
 8016982:	4605      	mov	r5, r0
 8016984:	2900      	cmp	r1, #0
 8016986:	d06d      	beq.n	8016a64 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016988:	4668      	mov	r0, sp
 801698a:	f7ff fe91 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801698e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016990:	88e3      	ldrh	r3, [r4, #6]
 8016992:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016996:	440b      	add	r3, r1
 8016998:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801699c:	b21b      	sxth	r3, r3
 801699e:	4543      	cmp	r3, r8
 80169a0:	db31      	blt.n	8016a06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80169a2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80169a6:	44c4      	add	ip, r8
 80169a8:	fa0f fc8c 	sxth.w	ip, ip
 80169ac:	4563      	cmp	r3, ip
 80169ae:	da2a      	bge.n	8016a06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80169b0:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80169b2:	8926      	ldrh	r6, [r4, #8]
 80169b4:	4416      	add	r6, r2
 80169b6:	b236      	sxth	r6, r6
 80169b8:	42be      	cmp	r6, r7
 80169ba:	db24      	blt.n	8016a06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80169bc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80169c0:	4438      	add	r0, r7
 80169c2:	b200      	sxth	r0, r0
 80169c4:	4286      	cmp	r6, r0
 80169c6:	da1e      	bge.n	8016a06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80169c8:	8963      	ldrh	r3, [r4, #10]
 80169ca:	4419      	add	r1, r3
 80169cc:	b209      	sxth	r1, r1
 80169ce:	4541      	cmp	r1, r8
 80169d0:	db08      	blt.n	80169e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80169d2:	4561      	cmp	r1, ip
 80169d4:	da06      	bge.n	80169e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80169d6:	89a3      	ldrh	r3, [r4, #12]
 80169d8:	441a      	add	r2, r3
 80169da:	b212      	sxth	r2, r2
 80169dc:	42ba      	cmp	r2, r7
 80169de:	db01      	blt.n	80169e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80169e0:	4282      	cmp	r2, r0
 80169e2:	db10      	blt.n	8016a06 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80169e4:	4b21      	ldr	r3, [pc, #132]	; (8016a6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80169e6:	a904      	add	r1, sp, #16
 80169e8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80169ea:	9304      	str	r3, [sp, #16]
 80169ec:	2302      	movs	r3, #2
 80169ee:	f88d 3014 	strb.w	r3, [sp, #20]
 80169f2:	2300      	movs	r3, #0
 80169f4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80169f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80169fc:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016a00:	6803      	ldr	r3, [r0, #0]
 8016a02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a04:	4798      	blx	r3
 8016a06:	1d29      	adds	r1, r5, #4
 8016a08:	a802      	add	r0, sp, #8
 8016a0a:	f7ff fe51 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a0e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016a12:	88e0      	ldrh	r0, [r4, #6]
 8016a14:	eba3 0808 	sub.w	r8, r3, r8
 8016a18:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016a1c:	7921      	ldrb	r1, [r4, #4]
 8016a1e:	fa1f f888 	uxth.w	r8, r8
 8016a22:	1bdf      	subs	r7, r3, r7
 8016a24:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016a28:	b2bb      	uxth	r3, r7
 8016a2a:	4440      	add	r0, r8
 8016a2c:	8922      	ldrh	r2, [r4, #8]
 8016a2e:	8967      	ldrh	r7, [r4, #10]
 8016a30:	4460      	add	r0, ip
 8016a32:	89a4      	ldrh	r4, [r4, #12]
 8016a34:	441a      	add	r2, r3
 8016a36:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016a38:	44b8      	add	r8, r7
 8016a3a:	4423      	add	r3, r4
 8016a3c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016a40:	4432      	add	r2, r6
 8016a42:	44e0      	add	r8, ip
 8016a44:	4433      	add	r3, r6
 8016a46:	4c0a      	ldr	r4, [pc, #40]	; (8016a70 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016a48:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016a4a:	f88d 1014 	strb.w	r1, [sp, #20]
 8016a4e:	a904      	add	r1, sp, #16
 8016a50:	9404      	str	r4, [sp, #16]
 8016a52:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016a56:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016a5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016a5e:	6803      	ldr	r3, [r0, #0]
 8016a60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016a62:	4798      	blx	r3
 8016a64:	b008      	add	sp, #32
 8016a66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016a6a:	bf00      	nop
 8016a6c:	08028f80 	.word	0x08028f80
 8016a70:	08028f94 	.word	0x08028f94

08016a74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016a74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016a76:	4604      	mov	r4, r0
 8016a78:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016a7c:	3201      	adds	r2, #1
 8016a7e:	d112      	bne.n	8016aa6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016a80:	2500      	movs	r5, #0
 8016a82:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016a86:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016a8a:	6803      	ldr	r3, [r0, #0]
 8016a8c:	9500      	str	r5, [sp, #0]
 8016a8e:	466d      	mov	r5, sp
 8016a90:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016a94:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016a98:	4629      	mov	r1, r5
 8016a9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016a9c:	4798      	blx	r3
 8016a9e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016aa2:	e884 0003 	stmia.w	r4, {r0, r1}
 8016aa6:	4620      	mov	r0, r4
 8016aa8:	b003      	add	sp, #12
 8016aaa:	bd30      	pop	{r4, r5, pc}

08016aac <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016aac:	b513      	push	{r0, r1, r4, lr}
 8016aae:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016ab2:	4604      	mov	r4, r0
 8016ab4:	3301      	adds	r3, #1
 8016ab6:	d109      	bne.n	8016acc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016ab8:	4601      	mov	r1, r0
 8016aba:	4668      	mov	r0, sp
 8016abc:	f7ff fdf8 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ac0:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ac4:	8423      	strh	r3, [r4, #32]
 8016ac6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016aca:	8463      	strh	r3, [r4, #34]	; 0x22
 8016acc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016ad0:	b002      	add	sp, #8
 8016ad2:	bd10      	pop	{r4, pc}

08016ad4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016ad4:	b513      	push	{r0, r1, r4, lr}
 8016ad6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016ada:	4604      	mov	r4, r0
 8016adc:	3301      	adds	r3, #1
 8016ade:	d109      	bne.n	8016af4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016ae0:	4601      	mov	r1, r0
 8016ae2:	4668      	mov	r0, sp
 8016ae4:	f7ff fde4 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ae8:	f8bd 3000 	ldrh.w	r3, [sp]
 8016aec:	8423      	strh	r3, [r4, #32]
 8016aee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016af2:	8463      	strh	r3, [r4, #34]	; 0x22
 8016af4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016af8:	b002      	add	sp, #8
 8016afa:	bd10      	pop	{r4, pc}

08016afc <_ZN8touchgfx6ScreenC1Ev>:
 8016afc:	b570      	push	{r4, r5, r6, lr}
 8016afe:	4b17      	ldr	r3, [pc, #92]	; (8016b5c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016b00:	4605      	mov	r5, r0
 8016b02:	4a17      	ldr	r2, [pc, #92]	; (8016b60 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016b04:	2101      	movs	r1, #1
 8016b06:	f845 3b04 	str.w	r3, [r5], #4
 8016b0a:	2300      	movs	r3, #0
 8016b0c:	6042      	str	r2, [r0, #4]
 8016b0e:	4604      	mov	r4, r0
 8016b10:	8103      	strh	r3, [r0, #8]
 8016b12:	8143      	strh	r3, [r0, #10]
 8016b14:	8183      	strh	r3, [r0, #12]
 8016b16:	81c3      	strh	r3, [r0, #14]
 8016b18:	8203      	strh	r3, [r0, #16]
 8016b1a:	8243      	strh	r3, [r0, #18]
 8016b1c:	8283      	strh	r3, [r0, #20]
 8016b1e:	82c3      	strh	r3, [r0, #22]
 8016b20:	6203      	str	r3, [r0, #32]
 8016b22:	8483      	strh	r3, [r0, #36]	; 0x24
 8016b24:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016b26:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016b2a:	6343      	str	r3, [r0, #52]	; 0x34
 8016b2c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016b30:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016b34:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016b38:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016b3c:	4b09      	ldr	r3, [pc, #36]	; (8016b64 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016b3e:	4628      	mov	r0, r5
 8016b40:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016b44:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016b46:	4a08      	ldr	r2, [pc, #32]	; (8016b68 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016b48:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016b4c:	4798      	blx	r3
 8016b4e:	6863      	ldr	r3, [r4, #4]
 8016b50:	4628      	mov	r0, r5
 8016b52:	4631      	mov	r1, r6
 8016b54:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016b56:	4798      	blx	r3
 8016b58:	4620      	mov	r0, r4
 8016b5a:	bd70      	pop	{r4, r5, r6, pc}
 8016b5c:	08028fbc 	.word	0x08028fbc
 8016b60:	080288d8 	.word	0x080288d8
 8016b64:	24004a46 	.word	0x24004a46
 8016b68:	24004a44 	.word	0x24004a44

08016b6c <_ZN8touchgfx6Screen4drawEv>:
 8016b6c:	4b09      	ldr	r3, [pc, #36]	; (8016b94 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016b6e:	b507      	push	{r0, r1, r2, lr}
 8016b70:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b74:	2100      	movs	r1, #0
 8016b76:	4b08      	ldr	r3, [pc, #32]	; (8016b98 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016b78:	9100      	str	r1, [sp, #0]
 8016b7a:	4669      	mov	r1, sp
 8016b7c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016b80:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016b84:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016b88:	6803      	ldr	r3, [r0, #0]
 8016b8a:	689b      	ldr	r3, [r3, #8]
 8016b8c:	4798      	blx	r3
 8016b8e:	b003      	add	sp, #12
 8016b90:	f85d fb04 	ldr.w	pc, [sp], #4
 8016b94:	24004a44 	.word	0x24004a44
 8016b98:	24004a46 	.word	0x24004a46

08016b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ba0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016ba4:	b089      	sub	sp, #36	; 0x24
 8016ba6:	4680      	mov	r8, r0
 8016ba8:	460c      	mov	r4, r1
 8016baa:	2b00      	cmp	r3, #0
 8016bac:	4615      	mov	r5, r2
 8016bae:	dd0e      	ble.n	8016bce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016bb0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016bb4:	2b00      	cmp	r3, #0
 8016bb6:	dd0a      	ble.n	8016bce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016bb8:	4628      	mov	r0, r5
 8016bba:	f7ff ff5b 	bl	8016a74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016bbe:	4621      	mov	r1, r4
 8016bc0:	f7fe fb84 	bl	80152cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016bc4:	69eb      	ldr	r3, [r5, #28]
 8016bc6:	b928      	cbnz	r0, 8016bd4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016bc8:	461d      	mov	r5, r3
 8016bca:	2b00      	cmp	r3, #0
 8016bcc:	d1f4      	bne.n	8016bb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016bce:	b009      	add	sp, #36	; 0x24
 8016bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bd4:	ae04      	add	r6, sp, #16
 8016bd6:	2b00      	cmp	r3, #0
 8016bd8:	f000 80b5 	beq.w	8016d46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016bdc:	682b      	ldr	r3, [r5, #0]
 8016bde:	4629      	mov	r1, r5
 8016be0:	a802      	add	r0, sp, #8
 8016be2:	68db      	ldr	r3, [r3, #12]
 8016be4:	4798      	blx	r3
 8016be6:	4628      	mov	r0, r5
 8016be8:	f7ff ff60 	bl	8016aac <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016bec:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016bf0:	4407      	add	r7, r0
 8016bf2:	4628      	mov	r0, r5
 8016bf4:	f7ff ff6e 	bl	8016ad4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016bf8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016bfc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016c00:	b23f      	sxth	r7, r7
 8016c02:	4418      	add	r0, r3
 8016c04:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016c08:	4621      	mov	r1, r4
 8016c0a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016c0e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016c12:	4630      	mov	r0, r6
 8016c14:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016c18:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016c1c:	f7fa fefe 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8016c20:	4628      	mov	r0, r5
 8016c22:	f7ff ff27 	bl	8016a74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016c26:	ab06      	add	r3, sp, #24
 8016c28:	4602      	mov	r2, r0
 8016c2a:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016c2e:	e883 0003 	stmia.w	r3, {r0, r1}
 8016c32:	4611      	mov	r1, r2
 8016c34:	4618      	mov	r0, r3
 8016c36:	f7fa fef1 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8016c3a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016c3e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016c42:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016c46:	4299      	cmp	r1, r3
 8016c48:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016c4c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016c50:	d10b      	bne.n	8016c6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016c52:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016c56:	4552      	cmp	r2, sl
 8016c58:	d107      	bne.n	8016c6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016c5a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016c5e:	455a      	cmp	r2, fp
 8016c60:	d103      	bne.n	8016c6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016c62:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016c66:	454a      	cmp	r2, r9
 8016c68:	d06d      	beq.n	8016d46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016c6a:	f1bb 0f00 	cmp.w	fp, #0
 8016c6e:	dd65      	ble.n	8016d3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016c70:	f1b9 0f00 	cmp.w	r9, #0
 8016c74:	dd62      	ble.n	8016d3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016c76:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016c7a:	fa1f f08a 	uxth.w	r0, sl
 8016c7e:	4552      	cmp	r2, sl
 8016c80:	9000      	str	r0, [sp, #0]
 8016c82:	da12      	bge.n	8016caa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016c84:	9301      	str	r3, [sp, #4]
 8016c86:	9b00      	ldr	r3, [sp, #0]
 8016c88:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016c8c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016c90:	1a9a      	subs	r2, r3, r2
 8016c92:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016c96:	4631      	mov	r1, r6
 8016c98:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016c9c:	4640      	mov	r0, r8
 8016c9e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016ca2:	69ea      	ldr	r2, [r5, #28]
 8016ca4:	f7ff ff7a 	bl	8016b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016ca8:	9b01      	ldr	r3, [sp, #4]
 8016caa:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016cae:	b29f      	uxth	r7, r3
 8016cb0:	429a      	cmp	r2, r3
 8016cb2:	da0d      	bge.n	8016cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016cb4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016cb8:	1aba      	subs	r2, r7, r2
 8016cba:	f8ad a012 	strh.w	sl, [sp, #18]
 8016cbe:	4631      	mov	r1, r6
 8016cc0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016cc4:	4640      	mov	r0, r8
 8016cc6:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016cca:	69ea      	ldr	r2, [r5, #28]
 8016ccc:	f7ff ff66 	bl	8016b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016cd0:	8822      	ldrh	r2, [r4, #0]
 8016cd2:	445f      	add	r7, fp
 8016cd4:	88a3      	ldrh	r3, [r4, #4]
 8016cd6:	b2bf      	uxth	r7, r7
 8016cd8:	4413      	add	r3, r2
 8016cda:	b23a      	sxth	r2, r7
 8016cdc:	b29b      	uxth	r3, r3
 8016cde:	b219      	sxth	r1, r3
 8016ce0:	4291      	cmp	r1, r2
 8016ce2:	dd0d      	ble.n	8016d00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016ce4:	1bdb      	subs	r3, r3, r7
 8016ce6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016cea:	f8ad a012 	strh.w	sl, [sp, #18]
 8016cee:	4631      	mov	r1, r6
 8016cf0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016cf4:	4640      	mov	r0, r8
 8016cf6:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016cfa:	69ea      	ldr	r2, [r5, #28]
 8016cfc:	f7ff ff4e 	bl	8016b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016d00:	88e2      	ldrh	r2, [r4, #6]
 8016d02:	8863      	ldrh	r3, [r4, #2]
 8016d04:	4413      	add	r3, r2
 8016d06:	9a00      	ldr	r2, [sp, #0]
 8016d08:	444a      	add	r2, r9
 8016d0a:	b29b      	uxth	r3, r3
 8016d0c:	fa1f f982 	uxth.w	r9, r2
 8016d10:	b219      	sxth	r1, r3
 8016d12:	fa0f f289 	sxth.w	r2, r9
 8016d16:	428a      	cmp	r2, r1
 8016d18:	da15      	bge.n	8016d46 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016d1a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016d1e:	eba3 0309 	sub.w	r3, r3, r9
 8016d22:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016d26:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016d2a:	4631      	mov	r1, r6
 8016d2c:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016d30:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016d34:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016d38:	69ea      	ldr	r2, [r5, #28]
 8016d3a:	e001      	b.n	8016d40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016d3c:	69ea      	ldr	r2, [r5, #28]
 8016d3e:	4621      	mov	r1, r4
 8016d40:	4640      	mov	r0, r8
 8016d42:	f7ff ff2b 	bl	8016b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016d46:	4628      	mov	r0, r5
 8016d48:	f7ff fe94 	bl	8016a74 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016d4c:	6861      	ldr	r1, [r4, #4]
 8016d4e:	4602      	mov	r2, r0
 8016d50:	4633      	mov	r3, r6
 8016d52:	6820      	ldr	r0, [r4, #0]
 8016d54:	c303      	stmia	r3!, {r0, r1}
 8016d56:	4611      	mov	r1, r2
 8016d58:	4630      	mov	r0, r6
 8016d5a:	f7fa fe5f 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8016d5e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016d62:	2b00      	cmp	r3, #0
 8016d64:	f77f af33 	ble.w	8016bce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016d68:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016d6c:	2b00      	cmp	r3, #0
 8016d6e:	f77f af2e 	ble.w	8016bce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016d72:	4628      	mov	r0, r5
 8016d74:	f7ff fe9a 	bl	8016aac <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016d78:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016d7c:	1a18      	subs	r0, r3, r0
 8016d7e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016d82:	4628      	mov	r0, r5
 8016d84:	f7ff fea6 	bl	8016ad4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016d88:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016d8c:	4631      	mov	r1, r6
 8016d8e:	1a18      	subs	r0, r3, r0
 8016d90:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016d94:	4628      	mov	r0, r5
 8016d96:	682b      	ldr	r3, [r5, #0]
 8016d98:	689b      	ldr	r3, [r3, #8]
 8016d9a:	4798      	blx	r3
 8016d9c:	e717      	b.n	8016bce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016d9e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016d9e:	b570      	push	{r4, r5, r6, lr}
 8016da0:	1d06      	adds	r6, r0, #4
 8016da2:	b086      	sub	sp, #24
 8016da4:	460c      	mov	r4, r1
 8016da6:	2300      	movs	r3, #0
 8016da8:	4631      	mov	r1, r6
 8016daa:	4605      	mov	r5, r0
 8016dac:	a802      	add	r0, sp, #8
 8016dae:	9301      	str	r3, [sp, #4]
 8016db0:	f7ff fc7e 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016db4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016db8:	8822      	ldrh	r2, [r4, #0]
 8016dba:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016dbe:	1ad2      	subs	r2, r2, r3
 8016dc0:	8863      	ldrh	r3, [r4, #2]
 8016dc2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016dc6:	1a5b      	subs	r3, r3, r1
 8016dc8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016dcc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016dd0:	aa01      	add	r2, sp, #4
 8016dd2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016dd6:	4630      	mov	r0, r6
 8016dd8:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016ddc:	a904      	add	r1, sp, #16
 8016dde:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016de2:	f7fa fef3 	bl	8011bcc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016de6:	9a01      	ldr	r2, [sp, #4]
 8016de8:	b11a      	cbz	r2, 8016df2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016dea:	4621      	mov	r1, r4
 8016dec:	4628      	mov	r0, r5
 8016dee:	f7ff fed5 	bl	8016b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016df2:	b006      	add	sp, #24
 8016df4:	bd70      	pop	{r4, r5, r6, pc}

08016df6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016df6:	4602      	mov	r2, r0
 8016df8:	b530      	push	{r4, r5, lr}
 8016dfa:	4604      	mov	r4, r0
 8016dfc:	b085      	sub	sp, #20
 8016dfe:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016e02:	460d      	mov	r5, r1
 8016e04:	466b      	mov	r3, sp
 8016e06:	6851      	ldr	r1, [r2, #4]
 8016e08:	c303      	stmia	r3!, {r0, r1}
 8016e0a:	4629      	mov	r1, r5
 8016e0c:	4668      	mov	r0, sp
 8016e0e:	f7fa fe05 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 8016e12:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016e16:	b12b      	cbz	r3, 8016e24 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016e18:	4669      	mov	r1, sp
 8016e1a:	4620      	mov	r0, r4
 8016e1c:	f7ff ffbf 	bl	8016d9e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016e20:	b005      	add	sp, #20
 8016e22:	bd30      	pop	{r4, r5, pc}
 8016e24:	3404      	adds	r4, #4
 8016e26:	a802      	add	r0, sp, #8
 8016e28:	4621      	mov	r1, r4
 8016e2a:	f7ff fc41 	bl	80166b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016e2e:	f8bd 3000 	ldrh.w	r3, [sp]
 8016e32:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016e36:	4669      	mov	r1, sp
 8016e38:	4620      	mov	r0, r4
 8016e3a:	1a9b      	subs	r3, r3, r2
 8016e3c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016e40:	f8ad 3000 	strh.w	r3, [sp]
 8016e44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016e48:	1a9b      	subs	r3, r3, r2
 8016e4a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016e4e:	f7fa fe84 	bl	8011b5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016e52:	e7e5      	b.n	8016e20 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016e54 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016e54:	460b      	mov	r3, r1
 8016e56:	680a      	ldr	r2, [r1, #0]
 8016e58:	1d01      	adds	r1, r0, #4
 8016e5a:	6992      	ldr	r2, [r2, #24]
 8016e5c:	4618      	mov	r0, r3
 8016e5e:	4710      	bx	r2

08016e60 <_ZN8touchgfx12TextProviderC1Ev>:
 8016e60:	b538      	push	{r3, r4, r5, lr}
 8016e62:	2500      	movs	r5, #0
 8016e64:	2302      	movs	r3, #2
 8016e66:	4604      	mov	r4, r0
 8016e68:	220e      	movs	r2, #14
 8016e6a:	7403      	strb	r3, [r0, #16]
 8016e6c:	4629      	mov	r1, r5
 8016e6e:	6145      	str	r5, [r0, #20]
 8016e70:	7605      	strb	r5, [r0, #24]
 8016e72:	83c5      	strh	r5, [r0, #30]
 8016e74:	8405      	strh	r5, [r0, #32]
 8016e76:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016e78:	8705      	strh	r5, [r0, #56]	; 0x38
 8016e7a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016e7c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016e80:	e9c0 5500 	strd	r5, r5, [r0]
 8016e84:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016e88:	304c      	adds	r0, #76	; 0x4c
 8016e8a:	f00f f9f0 	bl	802626e <memset>
 8016e8e:	2301      	movs	r3, #1
 8016e90:	4620      	mov	r0, r4
 8016e92:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016e96:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016e9a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016e9e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016ea2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016ea6:	f7f8 fa85 	bl	800f3b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016eaa:	4620      	mov	r0, r4
 8016eac:	bd38      	pop	{r3, r4, r5, pc}

08016eae <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016eae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016eb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016eb4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016eb6:	fab0 f080 	clz	r0, r0
 8016eba:	0940      	lsrs	r0, r0, #5
 8016ebc:	4770      	bx	lr

08016ebe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016ebe:	b530      	push	{r4, r5, lr}
 8016ec0:	2500      	movs	r5, #0
 8016ec2:	2401      	movs	r4, #1
 8016ec4:	6843      	ldr	r3, [r0, #4]
 8016ec6:	b913      	cbnz	r3, 8016ece <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016ec8:	6803      	ldr	r3, [r0, #0]
 8016eca:	b313      	cbz	r3, 8016f12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016ecc:	6043      	str	r3, [r0, #4]
 8016ece:	7e03      	ldrb	r3, [r0, #24]
 8016ed0:	b143      	cbz	r3, 8016ee4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016ed2:	6943      	ldr	r3, [r0, #20]
 8016ed4:	b12b      	cbz	r3, 8016ee2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016ed6:	881a      	ldrh	r2, [r3, #0]
 8016ed8:	b11a      	cbz	r2, 8016ee2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016eda:	1c9a      	adds	r2, r3, #2
 8016edc:	6142      	str	r2, [r0, #20]
 8016ede:	8818      	ldrh	r0, [r3, #0]
 8016ee0:	bd30      	pop	{r4, r5, pc}
 8016ee2:	7605      	strb	r5, [r0, #24]
 8016ee4:	6843      	ldr	r3, [r0, #4]
 8016ee6:	8819      	ldrh	r1, [r3, #0]
 8016ee8:	b199      	cbz	r1, 8016f12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016eea:	1c9a      	adds	r2, r3, #2
 8016eec:	2902      	cmp	r1, #2
 8016eee:	6042      	str	r2, [r0, #4]
 8016ef0:	d1f5      	bne.n	8016ede <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016ef2:	7c03      	ldrb	r3, [r0, #16]
 8016ef4:	2b01      	cmp	r3, #1
 8016ef6:	d8e5      	bhi.n	8016ec4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016ef8:	1c5a      	adds	r2, r3, #1
 8016efa:	3302      	adds	r3, #2
 8016efc:	7402      	strb	r2, [r0, #16]
 8016efe:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016f02:	6143      	str	r3, [r0, #20]
 8016f04:	2b00      	cmp	r3, #0
 8016f06:	d0dd      	beq.n	8016ec4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f08:	881b      	ldrh	r3, [r3, #0]
 8016f0a:	2b00      	cmp	r3, #0
 8016f0c:	d0da      	beq.n	8016ec4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f0e:	7604      	strb	r4, [r0, #24]
 8016f10:	e7d8      	b.n	8016ec4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016f12:	2000      	movs	r0, #0
 8016f14:	e7e4      	b.n	8016ee0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016f16:	6001      	str	r1, [r0, #0]
 8016f18:	2100      	movs	r1, #0
 8016f1a:	b430      	push	{r4, r5}
 8016f1c:	6041      	str	r1, [r0, #4]
 8016f1e:	6815      	ldr	r5, [r2, #0]
 8016f20:	6085      	str	r5, [r0, #8]
 8016f22:	6852      	ldr	r2, [r2, #4]
 8016f24:	6443      	str	r3, [r0, #68]	; 0x44
 8016f26:	9b02      	ldr	r3, [sp, #8]
 8016f28:	60c2      	str	r2, [r0, #12]
 8016f2a:	7401      	strb	r1, [r0, #16]
 8016f2c:	6141      	str	r1, [r0, #20]
 8016f2e:	7601      	strb	r1, [r0, #24]
 8016f30:	8701      	strh	r1, [r0, #56]	; 0x38
 8016f32:	8401      	strh	r1, [r0, #32]
 8016f34:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016f38:	6483      	str	r3, [r0, #72]	; 0x48
 8016f3a:	bc30      	pop	{r4, r5}
 8016f3c:	f7f8 ba3a 	b.w	800f3b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016f40 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016f40:	b408      	push	{r3}
 8016f42:	b510      	push	{r4, lr}
 8016f44:	b085      	sub	sp, #20
 8016f46:	ac07      	add	r4, sp, #28
 8016f48:	f854 3b04 	ldr.w	r3, [r4], #4
 8016f4c:	9300      	str	r3, [sp, #0]
 8016f4e:	4613      	mov	r3, r2
 8016f50:	4622      	mov	r2, r4
 8016f52:	9403      	str	r4, [sp, #12]
 8016f54:	f7ff ffdf 	bl	8016f16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f58:	b005      	add	sp, #20
 8016f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016f5e:	b001      	add	sp, #4
 8016f60:	4770      	bx	lr

08016f62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016f62:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f64:	4605      	mov	r5, r0
 8016f66:	4608      	mov	r0, r1
 8016f68:	b1f1      	cbz	r1, 8016fa8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8016f6a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016f6e:	460b      	mov	r3, r1
 8016f70:	f101 0708 	add.w	r7, r1, #8
 8016f74:	4622      	mov	r2, r4
 8016f76:	6818      	ldr	r0, [r3, #0]
 8016f78:	3308      	adds	r3, #8
 8016f7a:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8016f7e:	4626      	mov	r6, r4
 8016f80:	42bb      	cmp	r3, r7
 8016f82:	c603      	stmia	r6!, {r0, r1}
 8016f84:	4634      	mov	r4, r6
 8016f86:	d1f6      	bne.n	8016f76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016f88:	6818      	ldr	r0, [r3, #0]
 8016f8a:	6030      	str	r0, [r6, #0]
 8016f8c:	4610      	mov	r0, r2
 8016f8e:	889b      	ldrh	r3, [r3, #4]
 8016f90:	80b3      	strh	r3, [r6, #4]
 8016f92:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016f96:	015b      	lsls	r3, r3, #5
 8016f98:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016f9c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016fa0:	430b      	orrs	r3, r1
 8016fa2:	425b      	negs	r3, r3
 8016fa4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016faa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016faa:	b538      	push	{r3, r4, r5, lr}
 8016fac:	460c      	mov	r4, r1
 8016fae:	6811      	ldr	r1, [r2, #0]
 8016fb0:	4610      	mov	r0, r2
 8016fb2:	68cd      	ldr	r5, [r1, #12]
 8016fb4:	4619      	mov	r1, r3
 8016fb6:	47a8      	blx	r5
 8016fb8:	2800      	cmp	r0, #0
 8016fba:	bf08      	it	eq
 8016fbc:	4620      	moveq	r0, r4
 8016fbe:	bd38      	pop	{r3, r4, r5, pc}

08016fc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016fc2:	4604      	mov	r4, r0
 8016fc4:	4615      	mov	r5, r2
 8016fc6:	4608      	mov	r0, r1
 8016fc8:	b93a      	cbnz	r2, 8016fda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016fca:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016fce:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016fd2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016fd6:	4628      	mov	r0, r5
 8016fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016fda:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016fde:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016fe2:	8893      	ldrh	r3, [r2, #4]
 8016fe4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016fe8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016fec:	79ee      	ldrb	r6, [r5, #7]
 8016fee:	4316      	orrs	r6, r2
 8016ff0:	19da      	adds	r2, r3, r7
 8016ff2:	b291      	uxth	r1, r2
 8016ff4:	b2b7      	uxth	r7, r6
 8016ff6:	291d      	cmp	r1, #29
 8016ff8:	d87b      	bhi.n	80170f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8016ffa:	2201      	movs	r2, #1
 8016ffc:	10f6      	asrs	r6, r6, #3
 8016ffe:	408a      	lsls	r2, r1
 8017000:	4974      	ldr	r1, [pc, #464]	; (80171d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017002:	420a      	tst	r2, r1
 8017004:	d12e      	bne.n	8017064 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017006:	f412 7f60 	tst.w	r2, #896	; 0x380
 801700a:	d072      	beq.n	80170f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 801700c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017010:	462b      	mov	r3, r5
 8017012:	f105 0e08 	add.w	lr, r5, #8
 8017016:	4615      	mov	r5, r2
 8017018:	6818      	ldr	r0, [r3, #0]
 801701a:	3308      	adds	r3, #8
 801701c:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8017020:	4694      	mov	ip, r2
 8017022:	4573      	cmp	r3, lr
 8017024:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017028:	4662      	mov	r2, ip
 801702a:	d1f5      	bne.n	8017018 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 801702c:	6818      	ldr	r0, [r3, #0]
 801702e:	f8cc 0000 	str.w	r0, [ip]
 8017032:	889b      	ldrh	r3, [r3, #4]
 8017034:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017038:	b2b3      	uxth	r3, r6
 801703a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801703e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017042:	1aca      	subs	r2, r1, r3
 8017044:	1bcf      	subs	r7, r1, r7
 8017046:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801704a:	b292      	uxth	r2, r2
 801704c:	1afb      	subs	r3, r7, r3
 801704e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017052:	10d2      	asrs	r2, r2, #3
 8017054:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017058:	4302      	orrs	r2, r0
 801705a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801705e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017062:	e7b8      	b.n	8016fd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017064:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017066:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801706a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801706c:	f640 6333 	movw	r3, #3635	; 0xe33
 8017070:	4299      	cmp	r1, r3
 8017072:	d110      	bne.n	8017096 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017074:	6803      	ldr	r3, [r0, #0]
 8017076:	68db      	ldr	r3, [r3, #12]
 8017078:	4798      	blx	r3
 801707a:	7b41      	ldrb	r1, [r0, #13]
 801707c:	00cb      	lsls	r3, r1, #3
 801707e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017082:	7a03      	ldrb	r3, [r0, #8]
 8017084:	0648      	lsls	r0, r1, #25
 8017086:	ea43 0302 	orr.w	r3, r3, r2
 801708a:	bf44      	itt	mi
 801708c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017090:	b21b      	sxthmi	r3, r3
 8017092:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017096:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801709a:	462a      	mov	r2, r5
 801709c:	f105 0c08 	add.w	ip, r5, #8
 80170a0:	443b      	add	r3, r7
 80170a2:	4433      	add	r3, r6
 80170a4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80170a8:	b29b      	uxth	r3, r3
 80170aa:	4635      	mov	r5, r6
 80170ac:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80170b0:	6810      	ldr	r0, [r2, #0]
 80170b2:	3208      	adds	r2, #8
 80170b4:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80170b8:	4637      	mov	r7, r6
 80170ba:	4562      	cmp	r2, ip
 80170bc:	c703      	stmia	r7!, {r0, r1}
 80170be:	463e      	mov	r6, r7
 80170c0:	d1f6      	bne.n	80170b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80170c2:	6810      	ldr	r0, [r2, #0]
 80170c4:	6038      	str	r0, [r7, #0]
 80170c6:	8892      	ldrh	r2, [r2, #4]
 80170c8:	80ba      	strh	r2, [r7, #4]
 80170ca:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80170ce:	10db      	asrs	r3, r3, #3
 80170d0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80170d4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80170d8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80170dc:	4313      	orrs	r3, r2
 80170de:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80170e2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80170e6:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80170ea:	1a9b      	subs	r3, r3, r2
 80170ec:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80170f0:	e771      	b.n	8016fd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80170f2:	f023 0204 	bic.w	r2, r3, #4
 80170f6:	f640 611b 	movw	r1, #3611	; 0xe1b
 80170fa:	428a      	cmp	r2, r1
 80170fc:	d003      	beq.n	8017106 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 80170fe:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017102:	4293      	cmp	r3, r2
 8017104:	d120      	bne.n	8017148 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8017106:	3b01      	subs	r3, #1
 8017108:	4602      	mov	r2, r0
 801710a:	4629      	mov	r1, r5
 801710c:	4620      	mov	r0, r4
 801710e:	b29b      	uxth	r3, r3
 8017110:	f7ff ff4b 	bl	8016faa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017114:	7b41      	ldrb	r1, [r0, #13]
 8017116:	00cb      	lsls	r3, r1, #3
 8017118:	0649      	lsls	r1, r1, #25
 801711a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801711e:	7a03      	ldrb	r3, [r0, #8]
 8017120:	ea43 0302 	orr.w	r3, r3, r2
 8017124:	bf44      	itt	mi
 8017126:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801712a:	b21b      	sxthmi	r3, r3
 801712c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017130:	7b6b      	ldrb	r3, [r5, #13]
 8017132:	7aaa      	ldrb	r2, [r5, #10]
 8017134:	005b      	lsls	r3, r3, #1
 8017136:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801713a:	4313      	orrs	r3, r2
 801713c:	115a      	asrs	r2, r3, #5
 801713e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017142:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017146:	e035      	b.n	80171b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017148:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801714c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017150:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017154:	7a2a      	ldrb	r2, [r5, #8]
 8017156:	ea42 0201 	orr.w	r2, r2, r1
 801715a:	f640 6109 	movw	r1, #3593	; 0xe09
 801715e:	bf1c      	itt	ne
 8017160:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017164:	b212      	sxthne	r2, r2
 8017166:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801716a:	f023 0210 	bic.w	r2, r3, #16
 801716e:	428a      	cmp	r2, r1
 8017170:	d003      	beq.n	801717a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8017172:	f640 6213 	movw	r2, #3603	; 0xe13
 8017176:	4293      	cmp	r3, r2
 8017178:	d129      	bne.n	80171ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801717a:	7b6e      	ldrb	r6, [r5, #13]
 801717c:	4629      	mov	r1, r5
 801717e:	0076      	lsls	r6, r6, #1
 8017180:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017184:	7aae      	ldrb	r6, [r5, #10]
 8017186:	4316      	orrs	r6, r2
 8017188:	f640 6213 	movw	r2, #3603	; 0xe13
 801718c:	4293      	cmp	r3, r2
 801718e:	4602      	mov	r2, r0
 8017190:	4620      	mov	r0, r4
 8017192:	bf16      	itet	ne
 8017194:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017198:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801719c:	b29b      	uxthne	r3, r3
 801719e:	f7ff ff04 	bl	8016faa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80171a2:	7b43      	ldrb	r3, [r0, #13]
 80171a4:	7a82      	ldrb	r2, [r0, #10]
 80171a6:	005b      	lsls	r3, r3, #1
 80171a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80171ac:	4313      	orrs	r3, r2
 80171ae:	1af6      	subs	r6, r6, r3
 80171b0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80171b4:	7b69      	ldrb	r1, [r5, #13]
 80171b6:	00cb      	lsls	r3, r1, #3
 80171b8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171bc:	7a2b      	ldrb	r3, [r5, #8]
 80171be:	4313      	orrs	r3, r2
 80171c0:	064a      	lsls	r2, r1, #25
 80171c2:	bf44      	itt	mi
 80171c4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171c8:	b21b      	sxthmi	r3, r3
 80171ca:	1bdb      	subs	r3, r3, r7
 80171cc:	e747      	b.n	801705e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80171ce:	2300      	movs	r3, #0
 80171d0:	e7b7      	b.n	8017142 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 80171d2:	bf00      	nop
 80171d4:	3fc00079 	.word	0x3fc00079

080171d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80171d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80171dc:	4604      	mov	r4, r0
 80171de:	b942      	cbnz	r2, 80171f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80171e0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80171e4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80171e8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80171ec:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80171f0:	e047      	b.n	8017282 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80171f2:	7b51      	ldrb	r1, [r2, #13]
 80171f4:	8893      	ldrh	r3, [r2, #4]
 80171f6:	010d      	lsls	r5, r1, #4
 80171f8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80171fc:	79d5      	ldrb	r5, [r2, #7]
 80171fe:	4305      	orrs	r5, r0
 8017200:	2d04      	cmp	r5, #4
 8017202:	bfcc      	ite	gt
 8017204:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017208:	f04f 0e01 	movle.w	lr, #1
 801720c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017210:	f200 80ab 	bhi.w	801736a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017214:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017218:	4283      	cmp	r3, r0
 801721a:	d216      	bcs.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801721c:	f240 605b 	movw	r0, #1627	; 0x65b
 8017220:	4283      	cmp	r3, r0
 8017222:	d859      	bhi.n	80172d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017224:	f240 6057 	movw	r0, #1623	; 0x657
 8017228:	4283      	cmp	r3, r0
 801722a:	d20e      	bcs.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801722c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017230:	d24a      	bcs.n	80172c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017232:	f240 604e 	movw	r0, #1614	; 0x64e
 8017236:	4283      	cmp	r3, r0
 8017238:	d207      	bcs.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801723a:	f240 601a 	movw	r0, #1562	; 0x61a
 801723e:	4283      	cmp	r3, r0
 8017240:	d02a      	beq.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017242:	d821      	bhi.n	8017288 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017244:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017248:	d35b      	bcc.n	8017302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801724a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801724e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017252:	f040 80d0 	bne.w	80173f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017256:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801725a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801725e:	f040 80ca 	bne.w	80173f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017262:	00cb      	lsls	r3, r1, #3
 8017264:	0649      	lsls	r1, r1, #25
 8017266:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801726a:	7a13      	ldrb	r3, [r2, #8]
 801726c:	ea43 0300 	orr.w	r3, r3, r0
 8017270:	bf44      	itt	mi
 8017272:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017276:	b21b      	sxthmi	r3, r3
 8017278:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801727c:	1b5d      	subs	r5, r3, r5
 801727e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017282:	4610      	mov	r0, r2
 8017284:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017288:	f240 604b 	movw	r0, #1611	; 0x64b
 801728c:	4283      	cmp	r3, r0
 801728e:	d338      	bcc.n	8017302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017290:	f240 604c 	movw	r0, #1612	; 0x64c
 8017294:	4283      	cmp	r3, r0
 8017296:	d9d8      	bls.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017298:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801729c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80172a0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80172a4:	f040 80f3 	bne.w	801748e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80172a8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80172ac:	f040 80ef 	bne.w	801748e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80172b0:	00cb      	lsls	r3, r1, #3
 80172b2:	064e      	lsls	r6, r1, #25
 80172b4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80172b8:	7a13      	ldrb	r3, [r2, #8]
 80172ba:	ea43 0300 	orr.w	r3, r3, r0
 80172be:	bf44      	itt	mi
 80172c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80172c4:	b21b      	sxthmi	r3, r3
 80172c6:	e7d9      	b.n	801727c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80172c8:	f240 6054 	movw	r0, #1620	; 0x654
 80172cc:	4283      	cmp	r3, r0
 80172ce:	d8e3      	bhi.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80172d0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80172d4:	d9e0      	bls.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80172d6:	e7b8      	b.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80172d8:	f240 6074 	movw	r0, #1652	; 0x674
 80172dc:	4283      	cmp	r3, r0
 80172de:	d0b4      	beq.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80172e0:	d82d      	bhi.n	801733e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80172e2:	f240 605e 	movw	r0, #1630	; 0x65e
 80172e6:	4283      	cmp	r3, r0
 80172e8:	d804      	bhi.n	80172f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80172ea:	f240 605d 	movw	r0, #1629	; 0x65d
 80172ee:	4283      	cmp	r3, r0
 80172f0:	d3d2      	bcc.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80172f2:	e7aa      	b.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80172f4:	f240 605f 	movw	r0, #1631	; 0x65f
 80172f8:	4283      	cmp	r3, r0
 80172fa:	d0cd      	beq.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80172fc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017300:	d0a3      	beq.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017302:	00cb      	lsls	r3, r1, #3
 8017304:	0649      	lsls	r1, r1, #25
 8017306:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801730a:	7a13      	ldrb	r3, [r2, #8]
 801730c:	ea43 0300 	orr.w	r3, r3, r0
 8017310:	bf44      	itt	mi
 8017312:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017316:	b21b      	sxthmi	r3, r3
 8017318:	1b5d      	subs	r5, r3, r5
 801731a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801731e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017322:	7b53      	ldrb	r3, [r2, #13]
 8017324:	015b      	lsls	r3, r3, #5
 8017326:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801732a:	7993      	ldrb	r3, [r2, #6]
 801732c:	430b      	orrs	r3, r1
 801732e:	2105      	movs	r1, #5
 8017330:	005b      	lsls	r3, r3, #1
 8017332:	fb93 f3f1 	sdiv	r3, r3, r1
 8017336:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801733a:	440b      	add	r3, r1
 801733c:	e756      	b.n	80171ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801733e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017342:	4283      	cmp	r3, r0
 8017344:	d809      	bhi.n	801735a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017346:	f240 60df 	movw	r0, #1759	; 0x6df
 801734a:	4283      	cmp	r3, r0
 801734c:	f4bf af7d 	bcs.w	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017350:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017354:	2b05      	cmp	r3, #5
 8017356:	d8d4      	bhi.n	8017302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017358:	e777      	b.n	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801735a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801735e:	4283      	cmp	r3, r0
 8017360:	d09a      	beq.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017362:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017366:	4283      	cmp	r3, r0
 8017368:	e7ca      	b.n	8017300 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801736a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801736e:	d22b      	bcs.n	80173c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017370:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017374:	4283      	cmp	r3, r0
 8017376:	d28f      	bcs.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017378:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801737c:	4283      	cmp	r3, r0
 801737e:	d816      	bhi.n	80173ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017380:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017384:	4283      	cmp	r3, r0
 8017386:	f4bf af60 	bcs.w	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801738a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801738e:	4283      	cmp	r3, r0
 8017390:	d80a      	bhi.n	80173a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017392:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017396:	4283      	cmp	r3, r0
 8017398:	f4bf af57 	bcs.w	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801739c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80173a0:	4283      	cmp	r3, r0
 80173a2:	f43f af79 	beq.w	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173a6:	e7ac      	b.n	8017302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80173a8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80173ac:	e7f8      	b.n	80173a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80173ae:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80173b2:	4283      	cmp	r3, r0
 80173b4:	d802      	bhi.n	80173bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80173b6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80173ba:	e798      	b.n	80172ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80173bc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80173c0:	4283      	cmp	r3, r0
 80173c2:	f47f af42 	bne.w	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173c6:	e767      	b.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173c8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80173cc:	4283      	cmp	r3, r0
 80173ce:	f43f af63 	beq.w	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173d2:	d802      	bhi.n	80173da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80173d4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80173d8:	e7f2      	b.n	80173c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80173da:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80173de:	4283      	cmp	r3, r0
 80173e0:	d805      	bhi.n	80173ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80173e2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80173e6:	4283      	cmp	r3, r0
 80173e8:	f4ff af2f 	bcc.w	801724a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173ec:	e754      	b.n	8017298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80173ee:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80173f2:	4283      	cmp	r3, r0
 80173f4:	e7af      	b.n	8017356 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80173f6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80173fa:	4617      	mov	r7, r2
 80173fc:	f102 0808 	add.w	r8, r2, #8
 8017400:	4666      	mov	r6, ip
 8017402:	6838      	ldr	r0, [r7, #0]
 8017404:	3708      	adds	r7, #8
 8017406:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801740a:	46e6      	mov	lr, ip
 801740c:	4547      	cmp	r7, r8
 801740e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017412:	46f4      	mov	ip, lr
 8017414:	d1f5      	bne.n	8017402 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017416:	6838      	ldr	r0, [r7, #0]
 8017418:	f8ce 0000 	str.w	r0, [lr]
 801741c:	88b9      	ldrh	r1, [r7, #4]
 801741e:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017422:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017426:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801742a:	d009      	beq.n	8017440 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 801742c:	7b51      	ldrb	r1, [r2, #13]
 801742e:	7992      	ldrb	r2, [r2, #6]
 8017430:	0149      	lsls	r1, r1, #5
 8017432:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017436:	4311      	orrs	r1, r2
 8017438:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801743c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017440:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017444:	b2ad      	uxth	r5, r5
 8017446:	d00d      	beq.n	8017464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8017448:	442b      	add	r3, r5
 801744a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801744e:	b29b      	uxth	r3, r3
 8017450:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017454:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017458:	10db      	asrs	r3, r3, #3
 801745a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801745e:	4313      	orrs	r3, r2
 8017460:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017464:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017468:	00cb      	lsls	r3, r1, #3
 801746a:	064f      	lsls	r7, r1, #25
 801746c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017470:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017474:	ea43 0302 	orr.w	r3, r3, r2
 8017478:	bf44      	itt	mi
 801747a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801747e:	b21b      	sxthmi	r3, r3
 8017480:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017484:	1b5b      	subs	r3, r3, r5
 8017486:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801748a:	4632      	mov	r2, r6
 801748c:	e6f9      	b.n	8017282 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801748e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017492:	4617      	mov	r7, r2
 8017494:	f102 0908 	add.w	r9, r2, #8
 8017498:	4666      	mov	r6, ip
 801749a:	6838      	ldr	r0, [r7, #0]
 801749c:	3708      	adds	r7, #8
 801749e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80174a2:	46e0      	mov	r8, ip
 80174a4:	454f      	cmp	r7, r9
 80174a6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80174aa:	46c4      	mov	ip, r8
 80174ac:	d1f5      	bne.n	801749a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 80174ae:	6838      	ldr	r0, [r7, #0]
 80174b0:	f8c8 0000 	str.w	r0, [r8]
 80174b4:	88b9      	ldrh	r1, [r7, #4]
 80174b6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80174ba:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80174be:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80174c2:	d009      	beq.n	80174d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 80174c4:	7b51      	ldrb	r1, [r2, #13]
 80174c6:	7992      	ldrb	r2, [r2, #6]
 80174c8:	0149      	lsls	r1, r1, #5
 80174ca:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80174ce:	4311      	orrs	r1, r2
 80174d0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80174d4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80174d8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80174dc:	d00e      	beq.n	80174fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80174de:	eba3 030e 	sub.w	r3, r3, lr
 80174e2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80174e6:	b29b      	uxth	r3, r3
 80174e8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80174ec:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80174f0:	10db      	asrs	r3, r3, #3
 80174f2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80174f6:	4313      	orrs	r3, r2
 80174f8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80174fc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017500:	00cb      	lsls	r3, r1, #3
 8017502:	0648      	lsls	r0, r1, #25
 8017504:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017508:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801750c:	ea43 0302 	orr.w	r3, r3, r2
 8017510:	bf44      	itt	mi
 8017512:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017516:	b21b      	sxthmi	r3, r3
 8017518:	1b5d      	subs	r5, r3, r5
 801751a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801751e:	e7b4      	b.n	801748a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08017520 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017524:	461e      	mov	r6, r3
 8017526:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017528:	4604      	mov	r4, r0
 801752a:	4617      	mov	r7, r2
 801752c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017530:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017534:	f7f7 fe98 	bl	800f268 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017538:	4605      	mov	r5, r0
 801753a:	b918      	cbnz	r0, 8017544 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801753c:	6030      	str	r0, [r6, #0]
 801753e:	4628      	mov	r0, r5
 8017540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017544:	683b      	ldr	r3, [r7, #0]
 8017546:	4601      	mov	r1, r0
 8017548:	4638      	mov	r0, r7
 801754a:	68db      	ldr	r3, [r3, #12]
 801754c:	4798      	blx	r3
 801754e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017552:	4602      	mov	r2, r0
 8017554:	6030      	str	r0, [r6, #0]
 8017556:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801755a:	d213      	bcs.n	8017584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801755c:	4643      	mov	r3, r8
 801755e:	4639      	mov	r1, r7
 8017560:	4620      	mov	r0, r4
 8017562:	f7ff fe39 	bl	80171d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017566:	6030      	str	r0, [r6, #0]
 8017568:	6833      	ldr	r3, [r6, #0]
 801756a:	b143      	cbz	r3, 801757e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801756c:	7b5a      	ldrb	r2, [r3, #13]
 801756e:	7a9b      	ldrb	r3, [r3, #10]
 8017570:	0052      	lsls	r2, r2, #1
 8017572:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017576:	4313      	orrs	r3, r2
 8017578:	bf0c      	ite	eq
 801757a:	2301      	moveq	r3, #1
 801757c:	2300      	movne	r3, #0
 801757e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017582:	e7dc      	b.n	801753e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017584:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017588:	b29b      	uxth	r3, r3
 801758a:	2b7f      	cmp	r3, #127	; 0x7f
 801758c:	d804      	bhi.n	8017598 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801758e:	4639      	mov	r1, r7
 8017590:	4620      	mov	r0, r4
 8017592:	f7ff fd15 	bl	8016fc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017596:	e7e6      	b.n	8017566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017598:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801759c:	2b00      	cmp	r3, #0
 801759e:	d0e3      	beq.n	8017568 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80175a0:	f640 1302 	movw	r3, #2306	; 0x902
 80175a4:	429d      	cmp	r5, r3
 80175a6:	d1df      	bne.n	8017568 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80175a8:	4601      	mov	r1, r0
 80175aa:	4620      	mov	r0, r4
 80175ac:	f7ff fcd9 	bl	8016f62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80175b0:	e7d9      	b.n	8017566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080175b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80175b2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80175b6:	461e      	mov	r6, r3
 80175b8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80175ba:	4604      	mov	r4, r0
 80175bc:	4617      	mov	r7, r2
 80175be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80175c2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80175c6:	f7f7 fe4f 	bl	800f268 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80175ca:	4605      	mov	r5, r0
 80175cc:	b918      	cbnz	r0, 80175d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80175ce:	6030      	str	r0, [r6, #0]
 80175d0:	4628      	mov	r0, r5
 80175d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80175d6:	683b      	ldr	r3, [r7, #0]
 80175d8:	4601      	mov	r1, r0
 80175da:	4638      	mov	r0, r7
 80175dc:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80175e0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80175e4:	47c8      	blx	r9
 80175e6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80175ea:	4602      	mov	r2, r0
 80175ec:	6030      	str	r0, [r6, #0]
 80175ee:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80175f2:	d213      	bcs.n	801761c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80175f4:	4643      	mov	r3, r8
 80175f6:	4639      	mov	r1, r7
 80175f8:	4620      	mov	r0, r4
 80175fa:	f7ff fded 	bl	80171d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80175fe:	6030      	str	r0, [r6, #0]
 8017600:	6833      	ldr	r3, [r6, #0]
 8017602:	b143      	cbz	r3, 8017616 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017604:	7b5a      	ldrb	r2, [r3, #13]
 8017606:	7a9b      	ldrb	r3, [r3, #10]
 8017608:	0052      	lsls	r2, r2, #1
 801760a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801760e:	4313      	orrs	r3, r2
 8017610:	bf0c      	ite	eq
 8017612:	2301      	moveq	r3, #1
 8017614:	2300      	movne	r3, #0
 8017616:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801761a:	e7d9      	b.n	80175d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801761c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017620:	b29b      	uxth	r3, r3
 8017622:	2b7f      	cmp	r3, #127	; 0x7f
 8017624:	d804      	bhi.n	8017630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017626:	4639      	mov	r1, r7
 8017628:	4620      	mov	r0, r4
 801762a:	f7ff fcc9 	bl	8016fc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801762e:	e7e6      	b.n	80175fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017630:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017634:	2b00      	cmp	r3, #0
 8017636:	d0e3      	beq.n	8017600 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017638:	f640 1302 	movw	r3, #2306	; 0x902
 801763c:	429d      	cmp	r5, r3
 801763e:	d1df      	bne.n	8017600 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017640:	4601      	mov	r1, r0
 8017642:	4620      	mov	r0, r4
 8017644:	f7ff fc8d 	bl	8016f62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017648:	e7d9      	b.n	80175fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801764a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801764a:	b510      	push	{r4, lr}
 801764c:	4604      	mov	r4, r0
 801764e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017652:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017654:	b1e1      	cbz	r1, 8017690 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8017656:	2b0a      	cmp	r3, #10
 8017658:	d02d      	beq.n	80176b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801765a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801765c:	3901      	subs	r1, #1
 801765e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017662:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017664:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017668:	1c51      	adds	r1, r2, #1
 801766a:	b289      	uxth	r1, r1
 801766c:	2901      	cmp	r1, #1
 801766e:	bf8a      	itet	hi
 8017670:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8017674:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017676:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8017678:	1c5a      	adds	r2, r3, #1
 801767a:	8722      	strh	r2, [r4, #56]	; 0x38
 801767c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801767e:	4413      	add	r3, r2
 8017680:	b29b      	uxth	r3, r3
 8017682:	2b09      	cmp	r3, #9
 8017684:	bf88      	it	hi
 8017686:	3b0a      	subhi	r3, #10
 8017688:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801768c:	8458      	strh	r0, [r3, #34]	; 0x22
 801768e:	e7de      	b.n	801764e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017690:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017692:	2b0a      	cmp	r3, #10
 8017694:	d00f      	beq.n	80176b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8017696:	4620      	mov	r0, r4
 8017698:	f7ff fc11 	bl	8016ebe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801769c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801769e:	1c5a      	adds	r2, r3, #1
 80176a0:	8722      	strh	r2, [r4, #56]	; 0x38
 80176a2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80176a4:	4413      	add	r3, r2
 80176a6:	b29b      	uxth	r3, r3
 80176a8:	2b09      	cmp	r3, #9
 80176aa:	bf88      	it	hi
 80176ac:	3b0a      	subhi	r3, #10
 80176ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80176b2:	8458      	strh	r0, [r3, #34]	; 0x22
 80176b4:	e7ec      	b.n	8017690 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80176b6:	bd10      	pop	{r4, pc}

080176b8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80176b8:	b538      	push	{r3, r4, r5, lr}
 80176ba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80176bc:	4604      	mov	r4, r0
 80176be:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80176c2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80176c4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80176c6:	3a01      	subs	r2, #1
 80176c8:	8702      	strh	r2, [r0, #56]	; 0x38
 80176ca:	1c5a      	adds	r2, r3, #1
 80176cc:	b292      	uxth	r2, r2
 80176ce:	2a09      	cmp	r2, #9
 80176d0:	bf8a      	itet	hi
 80176d2:	3b09      	subhi	r3, #9
 80176d4:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80176d6:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80176d8:	f7ff ffb7 	bl	801764a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80176dc:	8c23      	ldrh	r3, [r4, #32]
 80176de:	2b01      	cmp	r3, #1
 80176e0:	bf9c      	itt	ls
 80176e2:	3301      	addls	r3, #1
 80176e4:	8423      	strhls	r3, [r4, #32]
 80176e6:	8be3      	ldrh	r3, [r4, #30]
 80176e8:	b90b      	cbnz	r3, 80176ee <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80176ea:	2302      	movs	r3, #2
 80176ec:	83e3      	strh	r3, [r4, #30]
 80176ee:	8be3      	ldrh	r3, [r4, #30]
 80176f0:	4628      	mov	r0, r5
 80176f2:	3b01      	subs	r3, #1
 80176f4:	b29b      	uxth	r3, r3
 80176f6:	83e3      	strh	r3, [r4, #30]
 80176f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80176fc:	8365      	strh	r5, [r4, #26]
 80176fe:	bd38      	pop	{r3, r4, r5, pc}

08017700 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017700:	428a      	cmp	r2, r1
 8017702:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017706:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8017708:	d932      	bls.n	8017770 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 801770a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801770c:	1a54      	subs	r4, r2, r1
 801770e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017712:	19ee      	adds	r6, r5, r7
 8017714:	fa1f fe84 	uxth.w	lr, r4
 8017718:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801771c:	3e01      	subs	r6, #1
 801771e:	b2b4      	uxth	r4, r6
 8017720:	eba4 090e 	sub.w	r9, r4, lr
 8017724:	fa1f f989 	uxth.w	r9, r9
 8017728:	2c09      	cmp	r4, #9
 801772a:	4626      	mov	r6, r4
 801772c:	bf88      	it	hi
 801772e:	f1a4 060a 	subhi.w	r6, r4, #10
 8017732:	f1bc 0f00 	cmp.w	ip, #0
 8017736:	f104 34ff 	add.w	r4, r4, #4294967295
 801773a:	bf08      	it	eq
 801773c:	f04f 0c02 	moveq.w	ip, #2
 8017740:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017744:	b2a4      	uxth	r4, r4
 8017746:	f10c 3cff 	add.w	ip, ip, #4294967295
 801774a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801774e:	454c      	cmp	r4, r9
 8017750:	fa1f fc8c 	uxth.w	ip, ip
 8017754:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017758:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801775c:	d1e4      	bne.n	8017728 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801775e:	eba5 050e 	sub.w	r5, r5, lr
 8017762:	eb0e 0408 	add.w	r4, lr, r8
 8017766:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801776a:	8705      	strh	r5, [r0, #56]	; 0x38
 801776c:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8017770:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017772:	250a      	movs	r5, #10
 8017774:	1a64      	subs	r4, r4, r1
 8017776:	4439      	add	r1, r7
 8017778:	b289      	uxth	r1, r1
 801777a:	8704      	strh	r4, [r0, #56]	; 0x38
 801777c:	2909      	cmp	r1, #9
 801777e:	bf88      	it	hi
 8017780:	390a      	subhi	r1, #10
 8017782:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017784:	b18a      	cbz	r2, 80177aa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8017786:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8017788:	3a01      	subs	r2, #1
 801778a:	3101      	adds	r1, #1
 801778c:	b292      	uxth	r2, r2
 801778e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017792:	8701      	strh	r1, [r0, #56]	; 0x38
 8017794:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017796:	b901      	cbnz	r1, 801779a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8017798:	86c5      	strh	r5, [r0, #54]	; 0x36
 801779a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801779c:	3901      	subs	r1, #1
 801779e:	b289      	uxth	r1, r1
 80177a0:	86c1      	strh	r1, [r0, #54]	; 0x36
 80177a2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80177a6:	844c      	strh	r4, [r1, #34]	; 0x22
 80177a8:	e7ec      	b.n	8017784 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80177aa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80177ae:	f7ff bf4c 	b.w	801764a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080177b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80177b2:	b570      	push	{r4, r5, r6, lr}
 80177b4:	2500      	movs	r5, #0
 80177b6:	4295      	cmp	r5, r2
 80177b8:	d011      	beq.n	80177de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80177ba:	8bc4      	ldrh	r4, [r0, #30]
 80177bc:	f831 6b02 	ldrh.w	r6, [r1], #2
 80177c0:	4414      	add	r4, r2
 80177c2:	3c01      	subs	r4, #1
 80177c4:	1b64      	subs	r4, r4, r5
 80177c6:	b2a4      	uxth	r4, r4
 80177c8:	2c01      	cmp	r4, #1
 80177ca:	bf88      	it	hi
 80177cc:	3c02      	subhi	r4, #2
 80177ce:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80177d2:	8b64      	ldrh	r4, [r4, #26]
 80177d4:	42b4      	cmp	r4, r6
 80177d6:	d117      	bne.n	8017808 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80177d8:	3501      	adds	r5, #1
 80177da:	b2ad      	uxth	r5, r5
 80177dc:	e7eb      	b.n	80177b6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80177de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80177e2:	2400      	movs	r4, #0
 80177e4:	4413      	add	r3, r2
 80177e6:	b2a2      	uxth	r2, r4
 80177e8:	429a      	cmp	r2, r3
 80177ea:	da0f      	bge.n	801780c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80177ec:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80177ee:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80177f2:	3401      	adds	r4, #1
 80177f4:	4432      	add	r2, r6
 80177f6:	b292      	uxth	r2, r2
 80177f8:	2a09      	cmp	r2, #9
 80177fa:	bf88      	it	hi
 80177fc:	3a0a      	subhi	r2, #10
 80177fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017802:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017804:	42aa      	cmp	r2, r5
 8017806:	d0ee      	beq.n	80177e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017808:	2000      	movs	r0, #0
 801780a:	bd70      	pop	{r4, r5, r6, pc}
 801780c:	2001      	movs	r0, #1
 801780e:	e7fc      	b.n	801780a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017810 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017810:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017814:	4605      	mov	r5, r0
 8017816:	4616      	mov	r6, r2
 8017818:	1c8c      	adds	r4, r1, #2
 801781a:	8809      	ldrh	r1, [r1, #0]
 801781c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017820:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017824:	42b3      	cmp	r3, r6
 8017826:	d124      	bne.n	8017872 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017828:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801782c:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017830:	f001 070f 	and.w	r7, r1, #15
 8017834:	4652      	mov	r2, sl
 8017836:	f8cd 8000 	str.w	r8, [sp]
 801783a:	464b      	mov	r3, r9
 801783c:	4621      	mov	r1, r4
 801783e:	4628      	mov	r0, r5
 8017840:	f7ff ffb7 	bl	80177b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017844:	4683      	mov	fp, r0
 8017846:	b168      	cbz	r0, 8017864 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017848:	eb0a 0109 	add.w	r1, sl, r9
 801784c:	463a      	mov	r2, r7
 801784e:	4628      	mov	r0, r5
 8017850:	4441      	add	r1, r8
 8017852:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017856:	4649      	mov	r1, r9
 8017858:	f7ff ff52 	bl	8017700 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801785c:	4658      	mov	r0, fp
 801785e:	b003      	add	sp, #12
 8017860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017864:	eb07 010a 	add.w	r1, r7, sl
 8017868:	4449      	add	r1, r9
 801786a:	4441      	add	r1, r8
 801786c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017870:	e7d2      	b.n	8017818 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017872:	f04f 0b00 	mov.w	fp, #0
 8017876:	e7f1      	b.n	801785c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017878 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017878:	b570      	push	{r4, r5, r6, lr}
 801787a:	8810      	ldrh	r0, [r2, #0]
 801787c:	4298      	cmp	r0, r3
 801787e:	d817      	bhi.n	80178b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017880:	1e48      	subs	r0, r1, #1
 8017882:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017886:	4298      	cmp	r0, r3
 8017888:	d312      	bcc.n	80178b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801788a:	2400      	movs	r4, #0
 801788c:	428c      	cmp	r4, r1
 801788e:	d20f      	bcs.n	80178b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017890:	1860      	adds	r0, r4, r1
 8017892:	1040      	asrs	r0, r0, #1
 8017894:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017898:	0085      	lsls	r5, r0, #2
 801789a:	42b3      	cmp	r3, r6
 801789c:	d902      	bls.n	80178a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801789e:	3001      	adds	r0, #1
 80178a0:	b284      	uxth	r4, r0
 80178a2:	e7f3      	b.n	801788c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80178a4:	d201      	bcs.n	80178aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80178a6:	b281      	uxth	r1, r0
 80178a8:	e7f0      	b.n	801788c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80178aa:	442a      	add	r2, r5
 80178ac:	8850      	ldrh	r0, [r2, #2]
 80178ae:	bd70      	pop	{r4, r5, r6, pc}
 80178b0:	2000      	movs	r0, #0
 80178b2:	e7fc      	b.n	80178ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080178b4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80178b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80178b8:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80178ba:	4604      	mov	r4, r0
 80178bc:	260b      	movs	r6, #11
 80178be:	886f      	ldrh	r7, [r5, #2]
 80178c0:	087f      	lsrs	r7, r7, #1
 80178c2:	3e01      	subs	r6, #1
 80178c4:	d013      	beq.n	80178ee <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80178c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80178c8:	462a      	mov	r2, r5
 80178ca:	4639      	mov	r1, r7
 80178cc:	4620      	mov	r0, r4
 80178ce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80178d2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80178d6:	4643      	mov	r3, r8
 80178d8:	f7ff ffce 	bl	8017878 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80178dc:	b138      	cbz	r0, 80178ee <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80178de:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80178e2:	4642      	mov	r2, r8
 80178e4:	4620      	mov	r0, r4
 80178e6:	f7ff ff93 	bl	8017810 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80178ea:	2800      	cmp	r0, #0
 80178ec:	d1e9      	bne.n	80178c2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80178ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080178f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80178f4:	b570      	push	{r4, r5, r6, lr}
 80178f6:	694a      	ldr	r2, [r1, #20]
 80178f8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80178fa:	684b      	ldr	r3, [r1, #4]
 80178fc:	1b54      	subs	r4, r2, r5
 80178fe:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017900:	f000 8106 	beq.w	8017b10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017904:	1b9b      	subs	r3, r3, r6
 8017906:	d003      	beq.n	8017910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017908:	4363      	muls	r3, r4
 801790a:	2210      	movs	r2, #16
 801790c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017910:	680c      	ldr	r4, [r1, #0]
 8017912:	698a      	ldr	r2, [r1, #24]
 8017914:	1b65      	subs	r5, r4, r5
 8017916:	f000 80fd 	beq.w	8017b14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801791a:	1b92      	subs	r2, r2, r6
 801791c:	d003      	beq.n	8017926 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801791e:	436a      	muls	r2, r5
 8017920:	2410      	movs	r4, #16
 8017922:	fb92 f2f4 	sdiv	r2, r2, r4
 8017926:	1a9b      	subs	r3, r3, r2
 8017928:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8017b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801792c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017930:	460a      	mov	r2, r1
 8017932:	ee07 3a90 	vmov	s15, r3
 8017936:	f100 040c 	add.w	r4, r0, #12
 801793a:	4603      	mov	r3, r0
 801793c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017940:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017944:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017948:	eeb1 6a43 	vneg.f32	s12, s6
 801794c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017950:	3214      	adds	r2, #20
 8017952:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017956:	ece3 6a01 	vstmia	r3!, {s13}
 801795a:	429c      	cmp	r4, r3
 801795c:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017960:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017964:	edc3 7a02 	vstr	s15, [r3, #8]
 8017968:	ed52 7a01 	vldr	s15, [r2, #-4]
 801796c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017970:	edc3 7a05 	vstr	s15, [r3, #20]
 8017974:	d1ea      	bne.n	801794c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017976:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017978:	698b      	ldr	r3, [r1, #24]
 801797a:	edd0 4a02 	vldr	s9, [r0, #8]
 801797e:	1a9b      	subs	r3, r3, r2
 8017980:	edd0 3a00 	vldr	s7, [r0]
 8017984:	edd0 6a01 	vldr	s13, [r0, #4]
 8017988:	ee07 3a90 	vmov	s15, r3
 801798c:	684b      	ldr	r3, [r1, #4]
 801798e:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017992:	ed90 5a05 	vldr	s10, [r0, #20]
 8017996:	1a9b      	subs	r3, r3, r2
 8017998:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801799c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80179a0:	ed90 2a03 	vldr	s4, [r0, #12]
 80179a4:	ee07 3a10 	vmov	s14, r3
 80179a8:	edd0 5a04 	vldr	s11, [r0, #16]
 80179ac:	ee67 7a84 	vmul.f32	s15, s15, s8
 80179b0:	ed90 1a07 	vldr	s2, [r0, #28]
 80179b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80179b8:	edd0 2a06 	vldr	s5, [r0, #24]
 80179bc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80179c0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80179c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80179c8:	ee32 5a45 	vsub.f32	s10, s4, s10
 80179cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80179d0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80179d4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80179d8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80179da:	694a      	ldr	r2, [r1, #20]
 80179dc:	1b13      	subs	r3, r2, r4
 80179de:	ee07 3a10 	vmov	s14, r3
 80179e2:	680b      	ldr	r3, [r1, #0]
 80179e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80179e8:	1b1b      	subs	r3, r3, r4
 80179ea:	ee27 7a04 	vmul.f32	s14, s14, s8
 80179ee:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80179f2:	ee07 3a10 	vmov	s14, r3
 80179f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80179fa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80179fe:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017a02:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017a06:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017a0a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017a0c:	698b      	ldr	r3, [r1, #24]
 8017a0e:	1a9b      	subs	r3, r3, r2
 8017a10:	ee06 3a90 	vmov	s13, r3
 8017a14:	684b      	ldr	r3, [r1, #4]
 8017a16:	1a9b      	subs	r3, r3, r2
 8017a18:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017a1c:	ee07 3a10 	vmov	s14, r3
 8017a20:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017a24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a28:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017a2c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a30:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017a34:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017a38:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017a3c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017a3e:	694a      	ldr	r2, [r1, #20]
 8017a40:	1b13      	subs	r3, r2, r4
 8017a42:	ee07 3a10 	vmov	s14, r3
 8017a46:	680b      	ldr	r3, [r1, #0]
 8017a48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a4c:	1b1b      	subs	r3, r3, r4
 8017a4e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a52:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017a56:	ee07 3a10 	vmov	s14, r3
 8017a5a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a5e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a62:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017a66:	edd0 5a08 	vldr	s11, [r0, #32]
 8017a6a:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017a6e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017a72:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017a76:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017a7a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017a7c:	698b      	ldr	r3, [r1, #24]
 8017a7e:	1a9b      	subs	r3, r3, r2
 8017a80:	ee07 3a10 	vmov	s14, r3
 8017a84:	684b      	ldr	r3, [r1, #4]
 8017a86:	1a9b      	subs	r3, r3, r2
 8017a88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017a8c:	ee01 3a90 	vmov	s3, r3
 8017a90:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017a94:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017a98:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017a9c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017aa0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017aa4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017aa8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017aac:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017aae:	694a      	ldr	r2, [r1, #20]
 8017ab0:	1b13      	subs	r3, r2, r4
 8017ab2:	ee03 3a10 	vmov	s6, r3
 8017ab6:	680b      	ldr	r3, [r1, #0]
 8017ab8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017abc:	1b1b      	subs	r3, r3, r4
 8017abe:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017ac2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017ac6:	ee03 3a10 	vmov	s6, r3
 8017aca:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017ace:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017ad2:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017ad6:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017ada:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017ade:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017ae2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017ae6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017aee:	dd13      	ble.n	8017b18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017af0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017af4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017af8:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017afa:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017afe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b06:	dd15      	ble.n	8017b34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017b08:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017b0c:	6403      	str	r3, [r0, #64]	; 0x40
 8017b0e:	bd70      	pop	{r4, r5, r6, pc}
 8017b10:	4623      	mov	r3, r4
 8017b12:	e6fd      	b.n	8017910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017b14:	462a      	mov	r2, r5
 8017b16:	e706      	b.n	8017926 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017b18:	d502      	bpl.n	8017b20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017b1a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017b1e:	e7e9      	b.n	8017af4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017b20:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017b24:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017b28:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017b2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b30:	dade      	bge.n	8017af0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017b32:	e7f2      	b.n	8017b1a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017b34:	d502      	bpl.n	8017b3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017b36:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017b3a:	e7e7      	b.n	8017b0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017b3c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017b40:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017b44:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b4c:	dadc      	bge.n	8017b08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017b4e:	e7f2      	b.n	8017b36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017b50:	3d800000 	.word	0x3d800000

08017b54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017b54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b58:	2714      	movs	r7, #20
 8017b5a:	435f      	muls	r7, r3
 8017b5c:	eb02 0c07 	add.w	ip, r2, r7
 8017b60:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017b64:	f115 0e0f 	adds.w	lr, r5, #15
 8017b68:	f100 80a2 	bmi.w	8017cb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017b6c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017b70:	9c08      	ldr	r4, [sp, #32]
 8017b72:	2614      	movs	r6, #20
 8017b74:	f8c0 e014 	str.w	lr, [r0, #20]
 8017b78:	4366      	muls	r6, r4
 8017b7a:	eb02 0806 	add.w	r8, r2, r6
 8017b7e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017b82:	f115 040f 	adds.w	r4, r5, #15
 8017b86:	f100 809f 	bmi.w	8017cc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017b8a:	1124      	asrs	r4, r4, #4
 8017b8c:	eba4 040e 	sub.w	r4, r4, lr
 8017b90:	6184      	str	r4, [r0, #24]
 8017b92:	2c00      	cmp	r4, #0
 8017b94:	f000 808a 	beq.w	8017cac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017b98:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017b9c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017ba0:	5995      	ldr	r5, [r2, r6]
 8017ba2:	eba4 0809 	sub.w	r8, r4, r9
 8017ba6:	59d4      	ldr	r4, [r2, r7]
 8017ba8:	eba5 0a04 	sub.w	sl, r5, r4
 8017bac:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017bb0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017bb4:	fb0e fe05 	mul.w	lr, lr, r5
 8017bb8:	fb0a ee19 	mls	lr, sl, r9, lr
 8017bbc:	fb08 e404 	mla	r4, r8, r4, lr
 8017bc0:	3c01      	subs	r4, #1
 8017bc2:	19a4      	adds	r4, r4, r6
 8017bc4:	f100 808c 	bmi.w	8017ce0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017bc8:	fb94 fef6 	sdiv	lr, r4, r6
 8017bcc:	fb06 441e 	mls	r4, r6, lr, r4
 8017bd0:	f8c0 e000 	str.w	lr, [r0]
 8017bd4:	6104      	str	r4, [r0, #16]
 8017bd6:	2d00      	cmp	r5, #0
 8017bd8:	f2c0 8095 	blt.w	8017d06 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017bdc:	fb95 f4f6 	sdiv	r4, r5, r6
 8017be0:	fb06 5514 	mls	r5, r6, r4, r5
 8017be4:	6044      	str	r4, [r0, #4]
 8017be6:	6085      	str	r5, [r0, #8]
 8017be8:	60c6      	str	r6, [r0, #12]
 8017bea:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017bee:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017bf2:	6945      	ldr	r5, [r0, #20]
 8017bf4:	59d2      	ldr	r2, [r2, r7]
 8017bf6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017bfa:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8017d28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017bfe:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017c02:	ee07 4a10 	vmov	s14, r4
 8017c06:	6804      	ldr	r4, [r0, #0]
 8017c08:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017c0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017c10:	ee07 2a90 	vmov	s15, r2
 8017c14:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017c18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c1c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017c20:	edd3 6a00 	vldr	s13, [r3]
 8017c24:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017c28:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017c2c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017c30:	edc0 6a07 	vstr	s13, [r0, #28]
 8017c34:	edd0 6a01 	vldr	s13, [r0, #4]
 8017c38:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017c3c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017c40:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017c44:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017c48:	ed80 6a08 	vstr	s12, [r0, #32]
 8017c4c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017c4e:	6242      	str	r2, [r0, #36]	; 0x24
 8017c50:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017c54:	ed93 6a03 	vldr	s12, [r3, #12]
 8017c58:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017c5c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017c60:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017c64:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017c68:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017c6c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017c70:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017c74:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017c78:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017c7a:	6302      	str	r2, [r0, #48]	; 0x30
 8017c7c:	ed93 6a06 	vldr	s12, [r3, #24]
 8017c80:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017c84:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017c88:	eeb0 7a46 	vmov.f32	s14, s12
 8017c8c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017c90:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017c94:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017c98:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017c9c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017ca0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017ca4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017ca8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017caa:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017cac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017cb0:	2410      	movs	r4, #16
 8017cb2:	f1c5 0501 	rsb	r5, r5, #1
 8017cb6:	fb9e fef4 	sdiv	lr, lr, r4
 8017cba:	f015 050f 	ands.w	r5, r5, #15
 8017cbe:	bf18      	it	ne
 8017cc0:	2501      	movne	r5, #1
 8017cc2:	ebae 0e05 	sub.w	lr, lr, r5
 8017cc6:	e753      	b.n	8017b70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017cc8:	f04f 0910 	mov.w	r9, #16
 8017ccc:	f1c5 0501 	rsb	r5, r5, #1
 8017cd0:	fb94 f4f9 	sdiv	r4, r4, r9
 8017cd4:	f015 050f 	ands.w	r5, r5, #15
 8017cd8:	bf18      	it	ne
 8017cda:	2501      	movne	r5, #1
 8017cdc:	1b64      	subs	r4, r4, r5
 8017cde:	e755      	b.n	8017b8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017ce0:	4264      	negs	r4, r4
 8017ce2:	fb94 fef6 	sdiv	lr, r4, r6
 8017ce6:	f1ce 0800 	rsb	r8, lr, #0
 8017cea:	fb06 441e 	mls	r4, r6, lr, r4
 8017cee:	f8c0 8000 	str.w	r8, [r0]
 8017cf2:	6104      	str	r4, [r0, #16]
 8017cf4:	2c00      	cmp	r4, #0
 8017cf6:	f43f af6e 	beq.w	8017bd6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017cfa:	ea6f 0e0e 	mvn.w	lr, lr
 8017cfe:	1b34      	subs	r4, r6, r4
 8017d00:	f8c0 e000 	str.w	lr, [r0]
 8017d04:	e766      	b.n	8017bd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017d06:	426d      	negs	r5, r5
 8017d08:	fb95 f4f6 	sdiv	r4, r5, r6
 8017d0c:	f1c4 0e00 	rsb	lr, r4, #0
 8017d10:	fb06 5514 	mls	r5, r6, r4, r5
 8017d14:	f8c0 e004 	str.w	lr, [r0, #4]
 8017d18:	6085      	str	r5, [r0, #8]
 8017d1a:	2d00      	cmp	r5, #0
 8017d1c:	f43f af64 	beq.w	8017be8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017d20:	43e4      	mvns	r4, r4
 8017d22:	1b75      	subs	r5, r6, r5
 8017d24:	6044      	str	r4, [r0, #4]
 8017d26:	e75e      	b.n	8017be6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017d28:	3d800000 	.word	0x3d800000

08017d2c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017d2c:	4602      	mov	r2, r0
 8017d2e:	b148      	cbz	r0, 8017d44 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017d30:	2300      	movs	r3, #0
 8017d32:	b298      	uxth	r0, r3
 8017d34:	3301      	adds	r3, #1
 8017d36:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017d3a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017d3e:	2900      	cmp	r1, #0
 8017d40:	d1f7      	bne.n	8017d32 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017d42:	4770      	bx	lr
 8017d44:	4770      	bx	lr

08017d46 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017d46:	b530      	push	{r4, r5, lr}
 8017d48:	4604      	mov	r4, r0
 8017d4a:	b159      	cbz	r1, 8017d64 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017d4c:	b148      	cbz	r0, 8017d62 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017d4e:	2300      	movs	r3, #0
 8017d50:	b298      	uxth	r0, r3
 8017d52:	4282      	cmp	r2, r0
 8017d54:	d905      	bls.n	8017d62 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017d56:	5ccd      	ldrb	r5, [r1, r3]
 8017d58:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017d5c:	3301      	adds	r3, #1
 8017d5e:	2d00      	cmp	r5, #0
 8017d60:	d1f6      	bne.n	8017d50 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017d62:	bd30      	pop	{r4, r5, pc}
 8017d64:	4608      	mov	r0, r1
 8017d66:	e7fc      	b.n	8017d62 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017d68 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017d68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017d6a:	b08b      	sub	sp, #44	; 0x2c
 8017d6c:	468c      	mov	ip, r1
 8017d6e:	4604      	mov	r4, r0
 8017d70:	2100      	movs	r1, #0
 8017d72:	261f      	movs	r6, #31
 8017d74:	af01      	add	r7, sp, #4
 8017d76:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017d7a:	1e71      	subs	r1, r6, #1
 8017d7c:	fb94 fef3 	sdiv	lr, r4, r3
 8017d80:	fb03 441e 	mls	r4, r3, lr, r4
 8017d84:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017d88:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017d8c:	b2ec      	uxtb	r4, r5
 8017d8e:	2d09      	cmp	r5, #9
 8017d90:	bfd4      	ite	le
 8017d92:	3430      	addle	r4, #48	; 0x30
 8017d94:	3457      	addgt	r4, #87	; 0x57
 8017d96:	b2e4      	uxtb	r4, r4
 8017d98:	55bc      	strb	r4, [r7, r6]
 8017d9a:	4674      	mov	r4, lr
 8017d9c:	b974      	cbnz	r4, 8017dbc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017d9e:	2800      	cmp	r0, #0
 8017da0:	da05      	bge.n	8017dae <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017da2:	ab0a      	add	r3, sp, #40	; 0x28
 8017da4:	4419      	add	r1, r3
 8017da6:	232d      	movs	r3, #45	; 0x2d
 8017da8:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017dac:	1eb1      	subs	r1, r6, #2
 8017dae:	3101      	adds	r1, #1
 8017db0:	4660      	mov	r0, ip
 8017db2:	4439      	add	r1, r7
 8017db4:	f7ff ffc7 	bl	8017d46 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017db8:	b00b      	add	sp, #44	; 0x2c
 8017dba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017dbc:	460e      	mov	r6, r1
 8017dbe:	e7dc      	b.n	8017d7a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017dc0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017dc2:	468c      	mov	ip, r1
 8017dc4:	b08b      	sub	sp, #44	; 0x2c
 8017dc6:	2100      	movs	r1, #0
 8017dc8:	ae01      	add	r6, sp, #4
 8017dca:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017dce:	211f      	movs	r1, #31
 8017dd0:	fbb0 f7f3 	udiv	r7, r0, r3
 8017dd4:	fb03 0517 	mls	r5, r3, r7, r0
 8017dd8:	4638      	mov	r0, r7
 8017dda:	b2ec      	uxtb	r4, r5
 8017ddc:	2d09      	cmp	r5, #9
 8017dde:	bfd4      	ite	le
 8017de0:	3430      	addle	r4, #48	; 0x30
 8017de2:	3457      	addgt	r4, #87	; 0x57
 8017de4:	b2e4      	uxtb	r4, r4
 8017de6:	558c      	strb	r4, [r1, r6]
 8017de8:	1e4c      	subs	r4, r1, #1
 8017dea:	b92f      	cbnz	r7, 8017df8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017dec:	4431      	add	r1, r6
 8017dee:	4660      	mov	r0, ip
 8017df0:	f7ff ffa9 	bl	8017d46 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017df4:	b00b      	add	sp, #44	; 0x2c
 8017df6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017df8:	4621      	mov	r1, r4
 8017dfa:	e7e9      	b.n	8017dd0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017dfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e00:	b085      	sub	sp, #20
 8017e02:	4691      	mov	r9, r2
 8017e04:	6802      	ldr	r2, [r0, #0]
 8017e06:	4688      	mov	r8, r1
 8017e08:	461c      	mov	r4, r3
 8017e0a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017e0e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017e12:	4683      	mov	fp, r0
 8017e14:	4610      	mov	r0, r2
 8017e16:	9103      	str	r1, [sp, #12]
 8017e18:	9302      	str	r3, [sp, #8]
 8017e1a:	9201      	str	r2, [sp, #4]
 8017e1c:	f7ff ff86 	bl	8017d2c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017e20:	f1b8 0f00 	cmp.w	r8, #0
 8017e24:	bf0c      	ite	eq
 8017e26:	4684      	moveq	ip, r0
 8017e28:	f100 0c01 	addne.w	ip, r0, #1
 8017e2c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017e30:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017e34:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017e36:	fa1f fc8c 	uxth.w	ip, ip
 8017e3a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017e3c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017e40:	9903      	ldr	r1, [sp, #12]
 8017e42:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017e46:	d041      	beq.n	8017ecc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017e48:	d834      	bhi.n	8017eb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017e4a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017e4e:	d059      	beq.n	8017f04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017e50:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017e54:	d03a      	beq.n	8017ecc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017e56:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017e5a:	d034      	beq.n	8017ec6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017e5c:	2400      	movs	r4, #0
 8017e5e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017e62:	3a01      	subs	r2, #1
 8017e64:	b169      	cbz	r1, 8017e82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017e66:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017e68:	458c      	cmp	ip, r1
 8017e6a:	da09      	bge.n	8017e80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017e6c:	eba1 010c 	sub.w	r1, r1, ip
 8017e70:	b289      	uxth	r1, r1
 8017e72:	b933      	cbnz	r3, 8017e82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017e74:	2e00      	cmp	r6, #0
 8017e76:	d051      	beq.n	8017f1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017e78:	2800      	cmp	r0, #0
 8017e7a:	d04f      	beq.n	8017f1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017e7c:	440c      	add	r4, r1
 8017e7e:	b2a4      	uxth	r4, r4
 8017e80:	2100      	movs	r1, #0
 8017e82:	682b      	ldr	r3, [r5, #0]
 8017e84:	4293      	cmp	r3, r2
 8017e86:	da07      	bge.n	8017e98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017e88:	f1b8 0f00 	cmp.w	r8, #0
 8017e8c:	d004      	beq.n	8017e98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017e8e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017e92:	682b      	ldr	r3, [r5, #0]
 8017e94:	3301      	adds	r3, #1
 8017e96:	602b      	str	r3, [r5, #0]
 8017e98:	2730      	movs	r7, #48	; 0x30
 8017e9a:	2c00      	cmp	r4, #0
 8017e9c:	d04e      	beq.n	8017f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017e9e:	682e      	ldr	r6, [r5, #0]
 8017ea0:	3c01      	subs	r4, #1
 8017ea2:	42b2      	cmp	r2, r6
 8017ea4:	b2a4      	uxth	r4, r4
 8017ea6:	dd49      	ble.n	8017f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017ea8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017eac:	682b      	ldr	r3, [r5, #0]
 8017eae:	3301      	adds	r3, #1
 8017eb0:	602b      	str	r3, [r5, #0]
 8017eb2:	e7f2      	b.n	8017e9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017eb4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017eb8:	d01d      	beq.n	8017ef6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017eba:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017ebe:	d002      	beq.n	8017ec6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017ec0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017ec4:	e7c9      	b.n	8017e5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017ec6:	4684      	mov	ip, r0
 8017ec8:	f04f 0800 	mov.w	r8, #0
 8017ecc:	2c00      	cmp	r4, #0
 8017ece:	d0c6      	beq.n	8017e5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017ed0:	b947      	cbnz	r7, 8017ee4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017ed2:	2801      	cmp	r0, #1
 8017ed4:	d106      	bne.n	8017ee4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017ed6:	8814      	ldrh	r4, [r2, #0]
 8017ed8:	2c30      	cmp	r4, #48	; 0x30
 8017eda:	bf02      	ittt	eq
 8017edc:	3202      	addeq	r2, #2
 8017ede:	4638      	moveq	r0, r7
 8017ee0:	f8cb 2000 	streq.w	r2, [fp]
 8017ee4:	45bc      	cmp	ip, r7
 8017ee6:	da14      	bge.n	8017f12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017ee8:	b2bf      	uxth	r7, r7
 8017eea:	eba7 040c 	sub.w	r4, r7, ip
 8017eee:	46bc      	mov	ip, r7
 8017ef0:	b2a4      	uxth	r4, r4
 8017ef2:	2600      	movs	r6, #0
 8017ef4:	e7b3      	b.n	8017e5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017ef6:	4684      	mov	ip, r0
 8017ef8:	b16c      	cbz	r4, 8017f16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017efa:	42b8      	cmp	r0, r7
 8017efc:	dd00      	ble.n	8017f00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017efe:	b2b8      	uxth	r0, r7
 8017f00:	2400      	movs	r4, #0
 8017f02:	e003      	b.n	8017f0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017f04:	f04f 0c01 	mov.w	ip, #1
 8017f08:	2400      	movs	r4, #0
 8017f0a:	4660      	mov	r0, ip
 8017f0c:	4626      	mov	r6, r4
 8017f0e:	46a0      	mov	r8, r4
 8017f10:	e7a5      	b.n	8017e5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017f12:	2400      	movs	r4, #0
 8017f14:	e7ed      	b.n	8017ef2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017f16:	4626      	mov	r6, r4
 8017f18:	46a0      	mov	r8, r4
 8017f1a:	e7a0      	b.n	8017e5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017f1c:	2900      	cmp	r1, #0
 8017f1e:	d0b0      	beq.n	8017e82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017f20:	2720      	movs	r7, #32
 8017f22:	682e      	ldr	r6, [r5, #0]
 8017f24:	2900      	cmp	r1, #0
 8017f26:	d0ac      	beq.n	8017e82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017f28:	3901      	subs	r1, #1
 8017f2a:	4296      	cmp	r6, r2
 8017f2c:	b289      	uxth	r1, r1
 8017f2e:	daa7      	bge.n	8017e80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017f30:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017f34:	682b      	ldr	r3, [r5, #0]
 8017f36:	3301      	adds	r3, #1
 8017f38:	602b      	str	r3, [r5, #0]
 8017f3a:	e7f2      	b.n	8017f22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017f3c:	b188      	cbz	r0, 8017f62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017f3e:	682b      	ldr	r3, [r5, #0]
 8017f40:	3801      	subs	r0, #1
 8017f42:	429a      	cmp	r2, r3
 8017f44:	b280      	uxth	r0, r0
 8017f46:	dd0c      	ble.n	8017f62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017f48:	f8db 3000 	ldr.w	r3, [fp]
 8017f4c:	1c9c      	adds	r4, r3, #2
 8017f4e:	f8cb 4000 	str.w	r4, [fp]
 8017f52:	881c      	ldrh	r4, [r3, #0]
 8017f54:	682b      	ldr	r3, [r5, #0]
 8017f56:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017f5a:	682b      	ldr	r3, [r5, #0]
 8017f5c:	3301      	adds	r3, #1
 8017f5e:	602b      	str	r3, [r5, #0]
 8017f60:	e7ec      	b.n	8017f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017f62:	2620      	movs	r6, #32
 8017f64:	b151      	cbz	r1, 8017f7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017f66:	6828      	ldr	r0, [r5, #0]
 8017f68:	3901      	subs	r1, #1
 8017f6a:	4282      	cmp	r2, r0
 8017f6c:	b289      	uxth	r1, r1
 8017f6e:	dd05      	ble.n	8017f7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017f70:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017f74:	682b      	ldr	r3, [r5, #0]
 8017f76:	3301      	adds	r3, #1
 8017f78:	602b      	str	r3, [r5, #0]
 8017f7a:	e7f3      	b.n	8017f64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017f7c:	b005      	add	sp, #20
 8017f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017f82:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017f86:	2400      	movs	r4, #0
 8017f88:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017f8c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017f90:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017f94:	8014      	strh	r4, [r2, #0]
 8017f96:	701c      	strb	r4, [r3, #0]
 8017f98:	f888 4000 	strb.w	r4, [r8]
 8017f9c:	f88c 4000 	strb.w	r4, [ip]
 8017fa0:	f88e 4000 	strb.w	r4, [lr]
 8017fa4:	703c      	strb	r4, [r7, #0]
 8017fa6:	6804      	ldr	r4, [r0, #0]
 8017fa8:	b1a4      	cbz	r4, 8017fd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017faa:	8824      	ldrh	r4, [r4, #0]
 8017fac:	f04f 0901 	mov.w	r9, #1
 8017fb0:	b314      	cbz	r4, 8017ff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017fb2:	2c2b      	cmp	r4, #43	; 0x2b
 8017fb4:	d001      	beq.n	8017fba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017fb6:	2c20      	cmp	r4, #32
 8017fb8:	d110      	bne.n	8017fdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017fba:	8014      	strh	r4, [r2, #0]
 8017fbc:	6804      	ldr	r4, [r0, #0]
 8017fbe:	b10c      	cbz	r4, 8017fc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017fc0:	3402      	adds	r4, #2
 8017fc2:	6004      	str	r4, [r0, #0]
 8017fc4:	680c      	ldr	r4, [r1, #0]
 8017fc6:	b10c      	cbz	r4, 8017fcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017fc8:	3401      	adds	r4, #1
 8017fca:	600c      	str	r4, [r1, #0]
 8017fcc:	6804      	ldr	r4, [r0, #0]
 8017fce:	b17c      	cbz	r4, 8017ff0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017fd0:	8824      	ldrh	r4, [r4, #0]
 8017fd2:	e7ed      	b.n	8017fb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017fd4:	680c      	ldr	r4, [r1, #0]
 8017fd6:	b17c      	cbz	r4, 8017ff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017fd8:	7824      	ldrb	r4, [r4, #0]
 8017fda:	e7e7      	b.n	8017fac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017fdc:	2c2d      	cmp	r4, #45	; 0x2d
 8017fde:	d102      	bne.n	8017fe6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017fe0:	f883 9000 	strb.w	r9, [r3]
 8017fe4:	e7ea      	b.n	8017fbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017fe6:	2c23      	cmp	r4, #35	; 0x23
 8017fe8:	d107      	bne.n	8017ffa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017fea:	f888 9000 	strb.w	r9, [r8]
 8017fee:	e7e5      	b.n	8017fbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017ff0:	680c      	ldr	r4, [r1, #0]
 8017ff2:	b10c      	cbz	r4, 8017ff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017ff4:	7824      	ldrb	r4, [r4, #0]
 8017ff6:	e7db      	b.n	8017fb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017ff8:	2400      	movs	r4, #0
 8017ffa:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017ffe:	2b09      	cmp	r3, #9
 8018000:	d901      	bls.n	8018006 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018002:	2c2a      	cmp	r4, #42	; 0x2a
 8018004:	d122      	bne.n	801804c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018006:	2301      	movs	r3, #1
 8018008:	2c30      	cmp	r4, #48	; 0x30
 801800a:	f88e 3000 	strb.w	r3, [lr]
 801800e:	d10d      	bne.n	801802c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018010:	f88c 3000 	strb.w	r3, [ip]
 8018014:	6803      	ldr	r3, [r0, #0]
 8018016:	b10b      	cbz	r3, 801801c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018018:	3302      	adds	r3, #2
 801801a:	6003      	str	r3, [r0, #0]
 801801c:	680b      	ldr	r3, [r1, #0]
 801801e:	b10b      	cbz	r3, 8018024 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018020:	3301      	adds	r3, #1
 8018022:	600b      	str	r3, [r1, #0]
 8018024:	6803      	ldr	r3, [r0, #0]
 8018026:	2b00      	cmp	r3, #0
 8018028:	d02f      	beq.n	801808a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801802a:	881c      	ldrh	r4, [r3, #0]
 801802c:	2c2a      	cmp	r4, #42	; 0x2a
 801802e:	d135      	bne.n	801809c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018030:	f04f 33ff 	mov.w	r3, #4294967295
 8018034:	6033      	str	r3, [r6, #0]
 8018036:	6803      	ldr	r3, [r0, #0]
 8018038:	b10b      	cbz	r3, 801803e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801803a:	3302      	adds	r3, #2
 801803c:	6003      	str	r3, [r0, #0]
 801803e:	680b      	ldr	r3, [r1, #0]
 8018040:	b10b      	cbz	r3, 8018046 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018042:	3301      	adds	r3, #1
 8018044:	600b      	str	r3, [r1, #0]
 8018046:	6803      	ldr	r3, [r0, #0]
 8018048:	b31b      	cbz	r3, 8018092 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801804a:	881c      	ldrh	r4, [r3, #0]
 801804c:	2c2e      	cmp	r4, #46	; 0x2e
 801804e:	d11a      	bne.n	8018086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018050:	2301      	movs	r3, #1
 8018052:	703b      	strb	r3, [r7, #0]
 8018054:	6803      	ldr	r3, [r0, #0]
 8018056:	b10b      	cbz	r3, 801805c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018058:	3302      	adds	r3, #2
 801805a:	6003      	str	r3, [r0, #0]
 801805c:	680b      	ldr	r3, [r1, #0]
 801805e:	b10b      	cbz	r3, 8018064 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018060:	3301      	adds	r3, #1
 8018062:	600b      	str	r3, [r1, #0]
 8018064:	6803      	ldr	r3, [r0, #0]
 8018066:	2b00      	cmp	r3, #0
 8018068:	d036      	beq.n	80180d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801806a:	881b      	ldrh	r3, [r3, #0]
 801806c:	2b2a      	cmp	r3, #42	; 0x2a
 801806e:	d137      	bne.n	80180e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018070:	f04f 33ff 	mov.w	r3, #4294967295
 8018074:	602b      	str	r3, [r5, #0]
 8018076:	6803      	ldr	r3, [r0, #0]
 8018078:	b10b      	cbz	r3, 801807e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801807a:	3302      	adds	r3, #2
 801807c:	6003      	str	r3, [r0, #0]
 801807e:	680b      	ldr	r3, [r1, #0]
 8018080:	b10b      	cbz	r3, 8018086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018082:	3301      	adds	r3, #1
 8018084:	600b      	str	r3, [r1, #0]
 8018086:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801808a:	680c      	ldr	r4, [r1, #0]
 801808c:	b134      	cbz	r4, 801809c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801808e:	7824      	ldrb	r4, [r4, #0]
 8018090:	e7cc      	b.n	801802c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018092:	680b      	ldr	r3, [r1, #0]
 8018094:	2b00      	cmp	r3, #0
 8018096:	d0f6      	beq.n	8018086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018098:	781c      	ldrb	r4, [r3, #0]
 801809a:	e7d7      	b.n	801804c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801809c:	2300      	movs	r3, #0
 801809e:	220a      	movs	r2, #10
 80180a0:	6033      	str	r3, [r6, #0]
 80180a2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80180a6:	fa1f f38c 	uxth.w	r3, ip
 80180aa:	2b09      	cmp	r3, #9
 80180ac:	d8ce      	bhi.n	801804c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80180ae:	6833      	ldr	r3, [r6, #0]
 80180b0:	fb02 c303 	mla	r3, r2, r3, ip
 80180b4:	6033      	str	r3, [r6, #0]
 80180b6:	6803      	ldr	r3, [r0, #0]
 80180b8:	b10b      	cbz	r3, 80180be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80180ba:	3302      	adds	r3, #2
 80180bc:	6003      	str	r3, [r0, #0]
 80180be:	680b      	ldr	r3, [r1, #0]
 80180c0:	b10b      	cbz	r3, 80180c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80180c2:	3301      	adds	r3, #1
 80180c4:	600b      	str	r3, [r1, #0]
 80180c6:	6803      	ldr	r3, [r0, #0]
 80180c8:	b10b      	cbz	r3, 80180ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80180ca:	881c      	ldrh	r4, [r3, #0]
 80180cc:	e7e9      	b.n	80180a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80180ce:	680c      	ldr	r4, [r1, #0]
 80180d0:	2c00      	cmp	r4, #0
 80180d2:	d0e6      	beq.n	80180a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80180d4:	7824      	ldrb	r4, [r4, #0]
 80180d6:	e7e4      	b.n	80180a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80180d8:	680b      	ldr	r3, [r1, #0]
 80180da:	b10b      	cbz	r3, 80180e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80180dc:	781b      	ldrb	r3, [r3, #0]
 80180de:	e7c5      	b.n	801806c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80180e0:	2200      	movs	r2, #0
 80180e2:	240a      	movs	r4, #10
 80180e4:	602a      	str	r2, [r5, #0]
 80180e6:	3b30      	subs	r3, #48	; 0x30
 80180e8:	682a      	ldr	r2, [r5, #0]
 80180ea:	b29e      	uxth	r6, r3
 80180ec:	2e09      	cmp	r6, #9
 80180ee:	d813      	bhi.n	8018118 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80180f0:	fb04 3302 	mla	r3, r4, r2, r3
 80180f4:	602b      	str	r3, [r5, #0]
 80180f6:	6803      	ldr	r3, [r0, #0]
 80180f8:	b10b      	cbz	r3, 80180fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80180fa:	3302      	adds	r3, #2
 80180fc:	6003      	str	r3, [r0, #0]
 80180fe:	680b      	ldr	r3, [r1, #0]
 8018100:	b10b      	cbz	r3, 8018106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018102:	3301      	adds	r3, #1
 8018104:	600b      	str	r3, [r1, #0]
 8018106:	6803      	ldr	r3, [r0, #0]
 8018108:	b10b      	cbz	r3, 801810e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801810a:	881b      	ldrh	r3, [r3, #0]
 801810c:	e7eb      	b.n	80180e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801810e:	680b      	ldr	r3, [r1, #0]
 8018110:	2b00      	cmp	r3, #0
 8018112:	d0e8      	beq.n	80180e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018114:	781b      	ldrb	r3, [r3, #0]
 8018116:	e7e6      	b.n	80180e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018118:	2a06      	cmp	r2, #6
 801811a:	bfa8      	it	ge
 801811c:	2206      	movge	r2, #6
 801811e:	602a      	str	r2, [r5, #0]
 8018120:	e7b1      	b.n	8018086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018122 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018122:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018126:	b0a3      	sub	sp, #140	; 0x8c
 8018128:	2600      	movs	r6, #0
 801812a:	4607      	mov	r7, r0
 801812c:	4688      	mov	r8, r1
 801812e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018132:	4631      	mov	r1, r6
 8018134:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018136:	4648      	mov	r0, r9
 8018138:	960d      	str	r6, [sp, #52]	; 0x34
 801813a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801813e:	2242      	movs	r2, #66	; 0x42
 8018140:	f00e f895 	bl	802626e <memset>
 8018144:	b15f      	cbz	r7, 801815e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018146:	f108 3aff 	add.w	sl, r8, #4294967295
 801814a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801814c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801814e:	b152      	cbz	r2, 8018166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018150:	8812      	ldrh	r2, [r2, #0]
 8018152:	b10a      	cbz	r2, 8018158 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018154:	459a      	cmp	sl, r3
 8018156:	dc2e      	bgt.n	80181b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018158:	2200      	movs	r2, #0
 801815a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801815e:	4638      	mov	r0, r7
 8018160:	b023      	add	sp, #140	; 0x8c
 8018162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018166:	9a08      	ldr	r2, [sp, #32]
 8018168:	2a00      	cmp	r2, #0
 801816a:	d0f5      	beq.n	8018158 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801816c:	7812      	ldrb	r2, [r2, #0]
 801816e:	e7f0      	b.n	8018152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018170:	2d00      	cmp	r5, #0
 8018172:	d0ea      	beq.n	801814a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018174:	782a      	ldrb	r2, [r5, #0]
 8018176:	b142      	cbz	r2, 801818a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018178:	2a25      	cmp	r2, #37	; 0x25
 801817a:	d001      	beq.n	8018180 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801817c:	459a      	cmp	sl, r3
 801817e:	dc08      	bgt.n	8018192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018180:	f1bb 0f00 	cmp.w	fp, #0
 8018184:	d121      	bne.n	80181ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018186:	2d00      	cmp	r5, #0
 8018188:	d0df      	beq.n	801814a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801818a:	782a      	ldrb	r2, [r5, #0]
 801818c:	f04f 0b00 	mov.w	fp, #0
 8018190:	e01d      	b.n	80181ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018192:	f1bb 0f00 	cmp.w	fp, #0
 8018196:	d077      	beq.n	8018288 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8018198:	f8bb 2000 	ldrh.w	r2, [fp]
 801819c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80181a0:	f1bb 0f00 	cmp.w	fp, #0
 80181a4:	d002      	beq.n	80181ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80181a6:	f10b 0202 	add.w	r2, fp, #2
 80181aa:	9209      	str	r2, [sp, #36]	; 0x24
 80181ac:	b10d      	cbz	r5, 80181b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80181ae:	3501      	adds	r5, #1
 80181b0:	9508      	str	r5, [sp, #32]
 80181b2:	3301      	adds	r3, #1
 80181b4:	930d      	str	r3, [sp, #52]	; 0x34
 80181b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181b8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80181bc:	f1bb 0f00 	cmp.w	fp, #0
 80181c0:	d0d6      	beq.n	8018170 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80181c2:	f8bb 2000 	ldrh.w	r2, [fp]
 80181c6:	2a00      	cmp	r2, #0
 80181c8:	d1d6      	bne.n	8018178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80181ca:	f8bb 2000 	ldrh.w	r2, [fp]
 80181ce:	2a00      	cmp	r2, #0
 80181d0:	d0bb      	beq.n	801814a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80181d2:	459a      	cmp	sl, r3
 80181d4:	ddb9      	ble.n	801814a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80181d6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80181da:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80181de:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80181e2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80181e6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80181ea:	960e      	str	r6, [sp, #56]	; 0x38
 80181ec:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80181f0:	960f      	str	r6, [sp, #60]	; 0x3c
 80181f2:	f1bb 0f00 	cmp.w	fp, #0
 80181f6:	d002      	beq.n	80181fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80181f8:	f10b 0302 	add.w	r3, fp, #2
 80181fc:	9309      	str	r3, [sp, #36]	; 0x24
 80181fe:	b10d      	cbz	r5, 8018204 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018200:	1c6b      	adds	r3, r5, #1
 8018202:	9308      	str	r3, [sp, #32]
 8018204:	ab0f      	add	r3, sp, #60	; 0x3c
 8018206:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801820a:	a908      	add	r1, sp, #32
 801820c:	a809      	add	r0, sp, #36	; 0x24
 801820e:	9305      	str	r3, [sp, #20]
 8018210:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018214:	9304      	str	r3, [sp, #16]
 8018216:	ab0e      	add	r3, sp, #56	; 0x38
 8018218:	9303      	str	r3, [sp, #12]
 801821a:	ab0c      	add	r3, sp, #48	; 0x30
 801821c:	9302      	str	r3, [sp, #8]
 801821e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018222:	9301      	str	r3, [sp, #4]
 8018224:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018228:	9300      	str	r3, [sp, #0]
 801822a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801822e:	f7ff fea8 	bl	8017f82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018232:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018234:	2b00      	cmp	r3, #0
 8018236:	bfbf      	itttt	lt
 8018238:	6823      	ldrlt	r3, [r4, #0]
 801823a:	3404      	addlt	r4, #4
 801823c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018240:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018242:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018244:	2b00      	cmp	r3, #0
 8018246:	bfbe      	ittt	lt
 8018248:	6823      	ldrlt	r3, [r4, #0]
 801824a:	3404      	addlt	r4, #4
 801824c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018250:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018254:	bfb8      	it	lt
 8018256:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018258:	b1d9      	cbz	r1, 8018292 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 801825a:	880b      	ldrh	r3, [r1, #0]
 801825c:	2b69      	cmp	r3, #105	; 0x69
 801825e:	d01f      	beq.n	80182a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8018260:	d82f      	bhi.n	80182c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8018262:	2b58      	cmp	r3, #88	; 0x58
 8018264:	d01c      	beq.n	80182a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8018266:	d818      	bhi.n	801829a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8018268:	2b25      	cmp	r3, #37	; 0x25
 801826a:	d034      	beq.n	80182d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 801826c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801826e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018272:	f1bb 0f00 	cmp.w	fp, #0
 8018276:	f000 80b7 	beq.w	80183e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 801827a:	f8bb 5000 	ldrh.w	r5, [fp]
 801827e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018282:	3301      	adds	r3, #1
 8018284:	930d      	str	r3, [sp, #52]	; 0x34
 8018286:	e029      	b.n	80182dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8018288:	b10d      	cbz	r5, 801828e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 801828a:	782a      	ldrb	r2, [r5, #0]
 801828c:	e786      	b.n	801819c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801828e:	462a      	mov	r2, r5
 8018290:	e784      	b.n	801819c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018292:	2a00      	cmp	r2, #0
 8018294:	d0ea      	beq.n	801826c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8018296:	7813      	ldrb	r3, [r2, #0]
 8018298:	e7e0      	b.n	801825c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 801829a:	3b63      	subs	r3, #99	; 0x63
 801829c:	2b01      	cmp	r3, #1
 801829e:	d8e5      	bhi.n	801826c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 80182a0:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80182a4:	b329      	cbz	r1, 80182f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 80182a6:	880b      	ldrh	r3, [r1, #0]
 80182a8:	2b69      	cmp	r3, #105	; 0x69
 80182aa:	d063      	beq.n	8018374 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 80182ac:	d825      	bhi.n	80182fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 80182ae:	2b63      	cmp	r3, #99	; 0x63
 80182b0:	d038      	beq.n	8018324 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 80182b2:	2b64      	cmp	r3, #100	; 0x64
 80182b4:	d05e      	beq.n	8018374 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 80182b6:	2b58      	cmp	r3, #88	; 0x58
 80182b8:	d07a      	beq.n	80183b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 80182ba:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80182be:	4625      	mov	r5, r4
 80182c0:	e036      	b.n	8018330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80182c2:	2b73      	cmp	r3, #115	; 0x73
 80182c4:	d0ec      	beq.n	80182a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80182c6:	d802      	bhi.n	80182ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 80182c8:	2b6f      	cmp	r3, #111	; 0x6f
 80182ca:	d1cf      	bne.n	801826c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 80182cc:	e7e8      	b.n	80182a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80182ce:	2b75      	cmp	r3, #117	; 0x75
 80182d0:	d0e6      	beq.n	80182a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80182d2:	2b78      	cmp	r3, #120	; 0x78
 80182d4:	e7f9      	b.n	80182ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 80182d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80182d8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80182dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80182de:	b10b      	cbz	r3, 80182e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 80182e0:	3302      	adds	r3, #2
 80182e2:	9309      	str	r3, [sp, #36]	; 0x24
 80182e4:	9b08      	ldr	r3, [sp, #32]
 80182e6:	2b00      	cmp	r3, #0
 80182e8:	f43f af2f 	beq.w	801814a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80182ec:	3301      	adds	r3, #1
 80182ee:	9308      	str	r3, [sp, #32]
 80182f0:	e72b      	b.n	801814a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80182f2:	2a00      	cmp	r2, #0
 80182f4:	d0e1      	beq.n	80182ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80182f6:	7813      	ldrb	r3, [r2, #0]
 80182f8:	e7d6      	b.n	80182a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 80182fa:	2b73      	cmp	r3, #115	; 0x73
 80182fc:	d036      	beq.n	801836c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 80182fe:	d807      	bhi.n	8018310 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8018300:	2b6f      	cmp	r3, #111	; 0x6f
 8018302:	d1da      	bne.n	80182ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8018304:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018306:	1d25      	adds	r5, r4, #4
 8018308:	2308      	movs	r3, #8
 801830a:	eba8 0202 	sub.w	r2, r8, r2
 801830e:	e049      	b.n	80183a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8018310:	2b75      	cmp	r3, #117	; 0x75
 8018312:	d042      	beq.n	801839a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8018314:	2b78      	cmp	r3, #120	; 0x78
 8018316:	d1d0      	bne.n	80182ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8018318:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801831a:	1d25      	adds	r5, r4, #4
 801831c:	2310      	movs	r3, #16
 801831e:	eba8 0202 	sub.w	r2, r8, r2
 8018322:	e03f      	b.n	80183a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8018324:	6823      	ldr	r3, [r4, #0]
 8018326:	1d25      	adds	r5, r4, #4
 8018328:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801832c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018332:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018336:	2b00      	cmp	r3, #0
 8018338:	d051      	beq.n	80183de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 801833a:	881a      	ldrh	r2, [r3, #0]
 801833c:	a80d      	add	r0, sp, #52	; 0x34
 801833e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018342:	462c      	mov	r4, r5
 8018344:	9005      	str	r0, [sp, #20]
 8018346:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801834a:	9004      	str	r0, [sp, #16]
 801834c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801834e:	9003      	str	r0, [sp, #12]
 8018350:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018354:	9002      	str	r0, [sp, #8]
 8018356:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018358:	9001      	str	r0, [sp, #4]
 801835a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801835e:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018362:	9000      	str	r0, [sp, #0]
 8018364:	a810      	add	r0, sp, #64	; 0x40
 8018366:	f7ff fd49 	bl	8017dfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801836a:	e7b7      	b.n	80182dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 801836c:	1d25      	adds	r5, r4, #4
 801836e:	6823      	ldr	r3, [r4, #0]
 8018370:	9310      	str	r3, [sp, #64]	; 0x40
 8018372:	e7dd      	b.n	8018330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8018374:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018376:	230a      	movs	r3, #10
 8018378:	4649      	mov	r1, r9
 801837a:	6820      	ldr	r0, [r4, #0]
 801837c:	eba8 0202 	sub.w	r2, r8, r2
 8018380:	1d25      	adds	r5, r4, #4
 8018382:	b292      	uxth	r2, r2
 8018384:	f7ff fcf0 	bl	8017d68 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018388:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801838c:	2b2d      	cmp	r3, #45	; 0x2d
 801838e:	d1cf      	bne.n	8018330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8018390:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018394:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018396:	3302      	adds	r3, #2
 8018398:	e7ea      	b.n	8018370 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 801839a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801839c:	1d25      	adds	r5, r4, #4
 801839e:	230a      	movs	r3, #10
 80183a0:	eba8 0202 	sub.w	r2, r8, r2
 80183a4:	b292      	uxth	r2, r2
 80183a6:	4649      	mov	r1, r9
 80183a8:	6820      	ldr	r0, [r4, #0]
 80183aa:	f7ff fd09 	bl	8017dc0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80183ae:	e7bf      	b.n	8018330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80183b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183b2:	2310      	movs	r3, #16
 80183b4:	4649      	mov	r1, r9
 80183b6:	6820      	ldr	r0, [r4, #0]
 80183b8:	eba8 0202 	sub.w	r2, r8, r2
 80183bc:	1d25      	adds	r5, r4, #4
 80183be:	b292      	uxth	r2, r2
 80183c0:	f7ff fcfe 	bl	8017dc0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80183c4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80183c8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80183cc:	2b00      	cmp	r3, #0
 80183ce:	d0af      	beq.n	8018330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80183d0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80183d4:	2919      	cmp	r1, #25
 80183d6:	d8f7      	bhi.n	80183c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80183d8:	3b20      	subs	r3, #32
 80183da:	8013      	strh	r3, [r2, #0]
 80183dc:	e7f4      	b.n	80183c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80183de:	9a08      	ldr	r2, [sp, #32]
 80183e0:	2a00      	cmp	r2, #0
 80183e2:	d0ab      	beq.n	801833c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80183e4:	7812      	ldrb	r2, [r2, #0]
 80183e6:	e7a9      	b.n	801833c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80183e8:	2d00      	cmp	r5, #0
 80183ea:	f43f af48 	beq.w	801827e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 80183ee:	782d      	ldrb	r5, [r5, #0]
 80183f0:	e745      	b.n	801827e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

080183f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80183f2:	b507      	push	{r0, r1, r2, lr}
 80183f4:	9300      	str	r3, [sp, #0]
 80183f6:	4613      	mov	r3, r2
 80183f8:	2200      	movs	r2, #0
 80183fa:	f7ff fe92 	bl	8018122 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80183fe:	b003      	add	sp, #12
 8018400:	f85d fb04 	ldr.w	pc, [sp], #4

08018404 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018404:	b40c      	push	{r2, r3}
 8018406:	b507      	push	{r0, r1, r2, lr}
 8018408:	ab04      	add	r3, sp, #16
 801840a:	f853 2b04 	ldr.w	r2, [r3], #4
 801840e:	9301      	str	r3, [sp, #4]
 8018410:	f7ff ffef 	bl	80183f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018414:	b003      	add	sp, #12
 8018416:	f85d eb04 	ldr.w	lr, [sp], #4
 801841a:	b002      	add	sp, #8
 801841c:	4770      	bx	lr
	...

08018420 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018420:	4b01      	ldr	r3, [pc, #4]	; (8018428 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018422:	6018      	str	r0, [r3, #0]
 8018424:	4770      	bx	lr
 8018426:	bf00      	nop
 8018428:	24004ab0 	.word	0x24004ab0

0801842c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801842c:	4b06      	ldr	r3, [pc, #24]	; (8018448 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801842e:	881a      	ldrh	r2, [r3, #0]
 8018430:	4282      	cmp	r2, r0
 8018432:	d807      	bhi.n	8018444 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018434:	4b05      	ldr	r3, [pc, #20]	; (801844c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018436:	881b      	ldrh	r3, [r3, #0]
 8018438:	4413      	add	r3, r2
 801843a:	4298      	cmp	r0, r3
 801843c:	bfac      	ite	ge
 801843e:	2000      	movge	r0, #0
 8018440:	2001      	movlt	r0, #1
 8018442:	4770      	bx	lr
 8018444:	2000      	movs	r0, #0
 8018446:	4770      	bx	lr
 8018448:	24004ad0 	.word	0x24004ad0
 801844c:	24004ad4 	.word	0x24004ad4

08018450 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018450:	b508      	push	{r3, lr}
 8018452:	4601      	mov	r1, r0
 8018454:	f7ff ffea 	bl	801842c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018458:	b118      	cbz	r0, 8018462 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801845a:	4b02      	ldr	r3, [pc, #8]	; (8018464 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801845c:	681b      	ldr	r3, [r3, #0]
 801845e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018462:	bd08      	pop	{r3, pc}
 8018464:	24004ab4 	.word	0x24004ab4

08018468 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018468:	b5f0      	push	{r4, r5, r6, r7, lr}
 801846a:	4c24      	ldr	r4, [pc, #144]	; (80184fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801846c:	6823      	ldr	r3, [r4, #0]
 801846e:	2b00      	cmp	r3, #0
 8018470:	d042      	beq.n	80184f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018472:	4a23      	ldr	r2, [pc, #140]	; (8018500 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018474:	4d23      	ldr	r5, [pc, #140]	; (8018504 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018476:	8811      	ldrh	r1, [r2, #0]
 8018478:	f8b5 c000 	ldrh.w	ip, [r5]
 801847c:	4822      	ldr	r0, [pc, #136]	; (8018508 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801847e:	4461      	add	r1, ip
 8018480:	1c4a      	adds	r2, r1, #1
 8018482:	008f      	lsls	r7, r1, #2
 8018484:	f022 0201 	bic.w	r2, r2, #1
 8018488:	19de      	adds	r6, r3, r7
 801848a:	0412      	lsls	r2, r2, #16
 801848c:	6006      	str	r6, [r0, #0]
 801848e:	4e1f      	ldr	r6, [pc, #124]	; (801850c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018490:	0c12      	lsrs	r2, r2, #16
 8018492:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018496:	19da      	adds	r2, r3, r7
 8018498:	6032      	str	r2, [r6, #0]
 801849a:	220e      	movs	r2, #14
 801849c:	fb02 f20c 	mul.w	r2, r2, ip
 80184a0:	3203      	adds	r2, #3
 80184a2:	f022 0203 	bic.w	r2, r2, #3
 80184a6:	443a      	add	r2, r7
 80184a8:	4f19      	ldr	r7, [pc, #100]	; (8018510 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80184aa:	4413      	add	r3, r2
 80184ac:	603b      	str	r3, [r7, #0]
 80184ae:	2300      	movs	r3, #0
 80184b0:	4f18      	ldr	r7, [pc, #96]	; (8018514 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80184b2:	469c      	mov	ip, r3
 80184b4:	803b      	strh	r3, [r7, #0]
 80184b6:	4f18      	ldr	r7, [pc, #96]	; (8018518 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80184b8:	683f      	ldr	r7, [r7, #0]
 80184ba:	1aba      	subs	r2, r7, r2
 80184bc:	4f17      	ldr	r7, [pc, #92]	; (801851c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80184be:	603a      	str	r2, [r7, #0]
 80184c0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80184c4:	4a16      	ldr	r2, [pc, #88]	; (8018520 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80184c6:	8013      	strh	r3, [r2, #0]
 80184c8:	428b      	cmp	r3, r1
 80184ca:	d10d      	bne.n	80184e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80184cc:	882d      	ldrh	r5, [r5, #0]
 80184ce:	2300      	movs	r3, #0
 80184d0:	6830      	ldr	r0, [r6, #0]
 80184d2:	240e      	movs	r4, #14
 80184d4:	429d      	cmp	r5, r3
 80184d6:	d90f      	bls.n	80184f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80184d8:	fb04 0203 	mla	r2, r4, r3, r0
 80184dc:	3301      	adds	r3, #1
 80184de:	7b11      	ldrb	r1, [r2, #12]
 80184e0:	f36f 1145 	bfc	r1, #5, #1
 80184e4:	7311      	strb	r1, [r2, #12]
 80184e6:	e7f5      	b.n	80184d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80184e8:	6822      	ldr	r2, [r4, #0]
 80184ea:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80184ee:	6802      	ldr	r2, [r0, #0]
 80184f0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80184f4:	3301      	adds	r3, #1
 80184f6:	e7e7      	b.n	80184c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80184f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80184fa:	bf00      	nop
 80184fc:	24004ab4 	.word	0x24004ab4
 8018500:	24004ad0 	.word	0x24004ad0
 8018504:	24004ad4 	.word	0x24004ad4
 8018508:	24004ac8 	.word	0x24004ac8
 801850c:	24004ab8 	.word	0x24004ab8
 8018510:	24004ac0 	.word	0x24004ac0
 8018514:	24004ad2 	.word	0x24004ad2
 8018518:	24004abc 	.word	0x24004abc
 801851c:	24004acc 	.word	0x24004acc
 8018520:	24004ac4 	.word	0x24004ac4

08018524 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018524:	4b06      	ldr	r3, [pc, #24]	; (8018540 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018526:	681b      	ldr	r3, [r3, #0]
 8018528:	b943      	cbnz	r3, 801853c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801852a:	b139      	cbz	r1, 801853c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801852c:	4b05      	ldr	r3, [pc, #20]	; (8018544 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801852e:	801a      	strh	r2, [r3, #0]
 8018530:	4b05      	ldr	r3, [pc, #20]	; (8018548 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018532:	6019      	str	r1, [r3, #0]
 8018534:	4b05      	ldr	r3, [pc, #20]	; (801854c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018536:	6018      	str	r0, [r3, #0]
 8018538:	f7ff bf96 	b.w	8018468 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801853c:	4770      	bx	lr
 801853e:	bf00      	nop
 8018540:	24004ac0 	.word	0x24004ac0
 8018544:	24004ad4 	.word	0x24004ad4
 8018548:	24004abc 	.word	0x24004abc
 801854c:	24004ab4 	.word	0x24004ab4

08018550 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018550:	b470      	push	{r4, r5, r6}
 8018552:	4c07      	ldr	r4, [pc, #28]	; (8018570 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018554:	4605      	mov	r5, r0
 8018556:	4610      	mov	r0, r2
 8018558:	9a03      	ldr	r2, [sp, #12]
 801855a:	6826      	ldr	r6, [r4, #0]
 801855c:	b936      	cbnz	r6, 801856c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801855e:	6025      	str	r5, [r4, #0]
 8018560:	4c04      	ldr	r4, [pc, #16]	; (8018574 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018562:	8021      	strh	r1, [r4, #0]
 8018564:	4619      	mov	r1, r3
 8018566:	bc70      	pop	{r4, r5, r6}
 8018568:	f7ff bfdc 	b.w	8018524 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801856c:	bc70      	pop	{r4, r5, r6}
 801856e:	4770      	bx	lr
 8018570:	24004ad8 	.word	0x24004ad8
 8018574:	24004ad0 	.word	0x24004ad0

08018578 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018578:	4a12      	ldr	r2, [pc, #72]	; (80185c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801857a:	8803      	ldrh	r3, [r0, #0]
 801857c:	8812      	ldrh	r2, [r2, #0]
 801857e:	4293      	cmp	r3, r2
 8018580:	d207      	bcs.n	8018592 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018582:	4a11      	ldr	r2, [pc, #68]	; (80185c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018584:	2114      	movs	r1, #20
 8018586:	6812      	ldr	r2, [r2, #0]
 8018588:	fb01 2303 	mla	r3, r1, r3, r2
 801858c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018590:	4770      	bx	lr
 8018592:	490e      	ldr	r1, [pc, #56]	; (80185cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018594:	8809      	ldrh	r1, [r1, #0]
 8018596:	4411      	add	r1, r2
 8018598:	428b      	cmp	r3, r1
 801859a:	da04      	bge.n	80185a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801859c:	1a9b      	subs	r3, r3, r2
 801859e:	4a0c      	ldr	r2, [pc, #48]	; (80185d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80185a0:	210e      	movs	r1, #14
 80185a2:	6812      	ldr	r2, [r2, #0]
 80185a4:	e7f0      	b.n	8018588 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80185a6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80185aa:	4293      	cmp	r3, r2
 80185ac:	d108      	bne.n	80185c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80185ae:	4b09      	ldr	r3, [pc, #36]	; (80185d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80185b0:	781b      	ldrb	r3, [r3, #0]
 80185b2:	b91b      	cbnz	r3, 80185bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80185b4:	4b08      	ldr	r3, [pc, #32]	; (80185d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80185b6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80185ba:	4770      	bx	lr
 80185bc:	4b07      	ldr	r3, [pc, #28]	; (80185dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80185be:	e7fa      	b.n	80185b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80185c0:	2000      	movs	r0, #0
 80185c2:	4770      	bx	lr
 80185c4:	24004ad0 	.word	0x24004ad0
 80185c8:	24004ad8 	.word	0x24004ad8
 80185cc:	24004ad4 	.word	0x24004ad4
 80185d0:	24004ab8 	.word	0x24004ab8
 80185d4:	24004a48 	.word	0x24004a48
 80185d8:	24004a4a 	.word	0x24004a4a
 80185dc:	24004a4c 	.word	0x24004a4c

080185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80185e0:	4a12      	ldr	r2, [pc, #72]	; (801862c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80185e2:	8803      	ldrh	r3, [r0, #0]
 80185e4:	8812      	ldrh	r2, [r2, #0]
 80185e6:	4293      	cmp	r3, r2
 80185e8:	d207      	bcs.n	80185fa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80185ea:	4a11      	ldr	r2, [pc, #68]	; (8018630 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80185ec:	2114      	movs	r1, #20
 80185ee:	6812      	ldr	r2, [r2, #0]
 80185f0:	fb01 2303 	mla	r3, r1, r3, r2
 80185f4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80185f8:	4770      	bx	lr
 80185fa:	490e      	ldr	r1, [pc, #56]	; (8018634 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80185fc:	8809      	ldrh	r1, [r1, #0]
 80185fe:	4411      	add	r1, r2
 8018600:	428b      	cmp	r3, r1
 8018602:	da04      	bge.n	801860e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018604:	1a9b      	subs	r3, r3, r2
 8018606:	4a0c      	ldr	r2, [pc, #48]	; (8018638 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018608:	210e      	movs	r1, #14
 801860a:	6812      	ldr	r2, [r2, #0]
 801860c:	e7f0      	b.n	80185f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801860e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018612:	4293      	cmp	r3, r2
 8018614:	d108      	bne.n	8018628 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018616:	4b09      	ldr	r3, [pc, #36]	; (801863c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018618:	781b      	ldrb	r3, [r3, #0]
 801861a:	b91b      	cbnz	r3, 8018624 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801861c:	4b08      	ldr	r3, [pc, #32]	; (8018640 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801861e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018622:	4770      	bx	lr
 8018624:	4b07      	ldr	r3, [pc, #28]	; (8018644 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018626:	e7fa      	b.n	801861e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018628:	2000      	movs	r0, #0
 801862a:	4770      	bx	lr
 801862c:	24004ad0 	.word	0x24004ad0
 8018630:	24004ad8 	.word	0x24004ad8
 8018634:	24004ad4 	.word	0x24004ad4
 8018638:	24004ab8 	.word	0x24004ab8
 801863c:	24004a48 	.word	0x24004a48
 8018640:	24004a4c 	.word	0x24004a4c
 8018644:	24004a4a 	.word	0x24004a4a

08018648 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018648:	4a1f      	ldr	r2, [pc, #124]	; (80186c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801864a:	b510      	push	{r4, lr}
 801864c:	880b      	ldrh	r3, [r1, #0]
 801864e:	8812      	ldrh	r2, [r2, #0]
 8018650:	4293      	cmp	r3, r2
 8018652:	d213      	bcs.n	801867c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018654:	4a1d      	ldr	r2, [pc, #116]	; (80186cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018656:	2114      	movs	r1, #20
 8018658:	6812      	ldr	r2, [r2, #0]
 801865a:	fb01 2303 	mla	r3, r1, r3, r2
 801865e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018662:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018666:	8a1a      	ldrh	r2, [r3, #16]
 8018668:	8a5b      	ldrh	r3, [r3, #18]
 801866a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801866e:	8004      	strh	r4, [r0, #0]
 8018670:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018674:	8041      	strh	r1, [r0, #2]
 8018676:	8082      	strh	r2, [r0, #4]
 8018678:	80c3      	strh	r3, [r0, #6]
 801867a:	e00e      	b.n	801869a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801867c:	4914      	ldr	r1, [pc, #80]	; (80186d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801867e:	8809      	ldrh	r1, [r1, #0]
 8018680:	4411      	add	r1, r2
 8018682:	428b      	cmp	r3, r1
 8018684:	da0a      	bge.n	801869c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018686:	1a9b      	subs	r3, r3, r2
 8018688:	4a12      	ldr	r2, [pc, #72]	; (80186d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801868a:	210e      	movs	r1, #14
 801868c:	6812      	ldr	r2, [r2, #0]
 801868e:	fb01 2303 	mla	r3, r1, r3, r2
 8018692:	681a      	ldr	r2, [r3, #0]
 8018694:	6002      	str	r2, [r0, #0]
 8018696:	685a      	ldr	r2, [r3, #4]
 8018698:	6042      	str	r2, [r0, #4]
 801869a:	bd10      	pop	{r4, pc}
 801869c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186a0:	4293      	cmp	r3, r2
 80186a2:	d10b      	bne.n	80186bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80186a4:	4b0c      	ldr	r3, [pc, #48]	; (80186d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80186a6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80186aa:	4b0c      	ldr	r3, [pc, #48]	; (80186dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80186ac:	8081      	strh	r1, [r0, #4]
 80186ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80186b2:	2300      	movs	r3, #0
 80186b4:	80c2      	strh	r2, [r0, #6]
 80186b6:	8003      	strh	r3, [r0, #0]
 80186b8:	8043      	strh	r3, [r0, #2]
 80186ba:	e7ee      	b.n	801869a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80186bc:	2300      	movs	r3, #0
 80186be:	8003      	strh	r3, [r0, #0]
 80186c0:	8043      	strh	r3, [r0, #2]
 80186c2:	8083      	strh	r3, [r0, #4]
 80186c4:	e7d8      	b.n	8018678 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80186c6:	bf00      	nop
 80186c8:	24004ad0 	.word	0x24004ad0
 80186cc:	24004ad8 	.word	0x24004ad8
 80186d0:	24004ad4 	.word	0x24004ad4
 80186d4:	24004ab8 	.word	0x24004ab8
 80186d8:	24004a44 	.word	0x24004a44
 80186dc:	24004a46 	.word	0x24004a46

080186e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80186e0:	4a17      	ldr	r2, [pc, #92]	; (8018740 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80186e2:	8803      	ldrh	r3, [r0, #0]
 80186e4:	8812      	ldrh	r2, [r2, #0]
 80186e6:	4293      	cmp	r3, r2
 80186e8:	d213      	bcs.n	8018712 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80186ea:	4a16      	ldr	r2, [pc, #88]	; (8018744 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80186ec:	2114      	movs	r1, #20
 80186ee:	6812      	ldr	r2, [r2, #0]
 80186f0:	fb01 2303 	mla	r3, r1, r3, r2
 80186f4:	8a1a      	ldrh	r2, [r3, #16]
 80186f6:	8919      	ldrh	r1, [r3, #8]
 80186f8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80186fc:	428a      	cmp	r2, r1
 80186fe:	db1d      	blt.n	801873c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018700:	8a58      	ldrh	r0, [r3, #18]
 8018702:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018706:	895b      	ldrh	r3, [r3, #10]
 8018708:	4298      	cmp	r0, r3
 801870a:	bfac      	ite	ge
 801870c:	2000      	movge	r0, #0
 801870e:	2001      	movlt	r0, #1
 8018710:	4770      	bx	lr
 8018712:	490d      	ldr	r1, [pc, #52]	; (8018748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018714:	8809      	ldrh	r1, [r1, #0]
 8018716:	4411      	add	r1, r2
 8018718:	428b      	cmp	r3, r1
 801871a:	da0d      	bge.n	8018738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801871c:	1a9b      	subs	r3, r3, r2
 801871e:	4a0b      	ldr	r2, [pc, #44]	; (801874c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018720:	210e      	movs	r1, #14
 8018722:	6812      	ldr	r2, [r2, #0]
 8018724:	fb01 2303 	mla	r3, r1, r3, r2
 8018728:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801872c:	891a      	ldrh	r2, [r3, #8]
 801872e:	4291      	cmp	r1, r2
 8018730:	db04      	blt.n	801873c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018732:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018736:	e7e6      	b.n	8018706 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018738:	2000      	movs	r0, #0
 801873a:	4770      	bx	lr
 801873c:	2001      	movs	r0, #1
 801873e:	4770      	bx	lr
 8018740:	24004ad0 	.word	0x24004ad0
 8018744:	24004ad8 	.word	0x24004ad8
 8018748:	24004ad4 	.word	0x24004ad4
 801874c:	24004ab8 	.word	0x24004ab8

08018750 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018750:	4a12      	ldr	r2, [pc, #72]	; (801879c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018752:	8803      	ldrh	r3, [r0, #0]
 8018754:	8811      	ldrh	r1, [r2, #0]
 8018756:	428b      	cmp	r3, r1
 8018758:	d20b      	bcs.n	8018772 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801875a:	4a11      	ldr	r2, [pc, #68]	; (80187a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801875c:	6812      	ldr	r2, [r2, #0]
 801875e:	b112      	cbz	r2, 8018766 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018760:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018764:	b9c0      	cbnz	r0, 8018798 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018766:	4a0f      	ldr	r2, [pc, #60]	; (80187a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018768:	6811      	ldr	r1, [r2, #0]
 801876a:	2214      	movs	r2, #20
 801876c:	4353      	muls	r3, r2
 801876e:	58c8      	ldr	r0, [r1, r3]
 8018770:	4770      	bx	lr
 8018772:	4a0d      	ldr	r2, [pc, #52]	; (80187a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018774:	8812      	ldrh	r2, [r2, #0]
 8018776:	440a      	add	r2, r1
 8018778:	4293      	cmp	r3, r2
 801877a:	da04      	bge.n	8018786 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801877c:	4a08      	ldr	r2, [pc, #32]	; (80187a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801877e:	6812      	ldr	r2, [r2, #0]
 8018780:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018784:	4770      	bx	lr
 8018786:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801878a:	4293      	cmp	r3, r2
 801878c:	d103      	bne.n	8018796 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801878e:	4b07      	ldr	r3, [pc, #28]	; (80187ac <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018790:	681b      	ldr	r3, [r3, #0]
 8018792:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018794:	4770      	bx	lr
 8018796:	2000      	movs	r0, #0
 8018798:	4770      	bx	lr
 801879a:	bf00      	nop
 801879c:	24004ad0 	.word	0x24004ad0
 80187a0:	24004ab4 	.word	0x24004ab4
 80187a4:	24004ad8 	.word	0x24004ad8
 80187a8:	24004ad4 	.word	0x24004ad4
 80187ac:	24004a50 	.word	0x24004a50

080187b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80187b0:	4b24      	ldr	r3, [pc, #144]	; (8018844 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80187b2:	8802      	ldrh	r2, [r0, #0]
 80187b4:	8818      	ldrh	r0, [r3, #0]
 80187b6:	4282      	cmp	r2, r0
 80187b8:	d221      	bcs.n	80187fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80187ba:	4b23      	ldr	r3, [pc, #140]	; (8018848 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80187bc:	6819      	ldr	r1, [r3, #0]
 80187be:	2314      	movs	r3, #20
 80187c0:	fb03 1302 	mla	r3, r3, r2, r1
 80187c4:	6858      	ldr	r0, [r3, #4]
 80187c6:	2800      	cmp	r0, #0
 80187c8:	d03a      	beq.n	8018840 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80187ca:	4920      	ldr	r1, [pc, #128]	; (801884c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80187cc:	6809      	ldr	r1, [r1, #0]
 80187ce:	2900      	cmp	r1, #0
 80187d0:	d036      	beq.n	8018840 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80187d2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80187d6:	2900      	cmp	r1, #0
 80187d8:	d032      	beq.n	8018840 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80187da:	891a      	ldrh	r2, [r3, #8]
 80187dc:	8958      	ldrh	r0, [r3, #10]
 80187de:	4350      	muls	r0, r2
 80187e0:	7c5a      	ldrb	r2, [r3, #17]
 80187e2:	7cdb      	ldrb	r3, [r3, #19]
 80187e4:	0952      	lsrs	r2, r2, #5
 80187e6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80187ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80187ee:	2b0b      	cmp	r3, #11
 80187f0:	bf18      	it	ne
 80187f2:	0040      	lslne	r0, r0, #1
 80187f4:	3003      	adds	r0, #3
 80187f6:	f020 0003 	bic.w	r0, r0, #3
 80187fa:	4408      	add	r0, r1
 80187fc:	4770      	bx	lr
 80187fe:	4b14      	ldr	r3, [pc, #80]	; (8018850 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018800:	881b      	ldrh	r3, [r3, #0]
 8018802:	4403      	add	r3, r0
 8018804:	429a      	cmp	r2, r3
 8018806:	da1a      	bge.n	801883e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018808:	4b12      	ldr	r3, [pc, #72]	; (8018854 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801880a:	1a10      	subs	r0, r2, r0
 801880c:	210e      	movs	r1, #14
 801880e:	681b      	ldr	r3, [r3, #0]
 8018810:	fb01 3000 	mla	r0, r1, r0, r3
 8018814:	7b03      	ldrb	r3, [r0, #12]
 8018816:	f003 031f 	and.w	r3, r3, #31
 801881a:	2b0b      	cmp	r3, #11
 801881c:	d10b      	bne.n	8018836 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801881e:	8903      	ldrh	r3, [r0, #8]
 8018820:	8940      	ldrh	r0, [r0, #10]
 8018822:	4358      	muls	r0, r3
 8018824:	4b09      	ldr	r3, [pc, #36]	; (801884c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018826:	3003      	adds	r0, #3
 8018828:	6819      	ldr	r1, [r3, #0]
 801882a:	f020 0303 	bic.w	r3, r0, #3
 801882e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018832:	4418      	add	r0, r3
 8018834:	4770      	bx	lr
 8018836:	2b0d      	cmp	r3, #13
 8018838:	d101      	bne.n	801883e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801883a:	300d      	adds	r0, #13
 801883c:	4770      	bx	lr
 801883e:	2000      	movs	r0, #0
 8018840:	4770      	bx	lr
 8018842:	bf00      	nop
 8018844:	24004ad0 	.word	0x24004ad0
 8018848:	24004ad8 	.word	0x24004ad8
 801884c:	24004ab4 	.word	0x24004ab4
 8018850:	24004ad4 	.word	0x24004ad4
 8018854:	24004ab8 	.word	0x24004ab8

08018858 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018858:	4a17      	ldr	r2, [pc, #92]	; (80188b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801885a:	b510      	push	{r4, lr}
 801885c:	8803      	ldrh	r3, [r0, #0]
 801885e:	8812      	ldrh	r2, [r2, #0]
 8018860:	4293      	cmp	r3, r2
 8018862:	d20c      	bcs.n	801887e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018864:	4a15      	ldr	r2, [pc, #84]	; (80188bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018866:	2114      	movs	r1, #20
 8018868:	6812      	ldr	r2, [r2, #0]
 801886a:	fb01 2303 	mla	r3, r1, r3, r2
 801886e:	7c58      	ldrb	r0, [r3, #17]
 8018870:	0942      	lsrs	r2, r0, #5
 8018872:	7cd8      	ldrb	r0, [r3, #19]
 8018874:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018878:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801887c:	bd10      	pop	{r4, pc}
 801887e:	4910      	ldr	r1, [pc, #64]	; (80188c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018880:	8809      	ldrh	r1, [r1, #0]
 8018882:	4411      	add	r1, r2
 8018884:	428b      	cmp	r3, r1
 8018886:	da09      	bge.n	801889c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018888:	1a9b      	subs	r3, r3, r2
 801888a:	4a0e      	ldr	r2, [pc, #56]	; (80188c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801888c:	210e      	movs	r1, #14
 801888e:	6812      	ldr	r2, [r2, #0]
 8018890:	fb01 2303 	mla	r3, r1, r3, r2
 8018894:	7b18      	ldrb	r0, [r3, #12]
 8018896:	f000 001f 	and.w	r0, r0, #31
 801889a:	e7ef      	b.n	801887c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801889c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80188a0:	4293      	cmp	r3, r2
 80188a2:	d106      	bne.n	80188b2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80188a4:	f7f4 fe0a 	bl	800d4bc <_ZN8touchgfx3HAL3lcdEv>
 80188a8:	6803      	ldr	r3, [r0, #0]
 80188aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80188ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80188b0:	4718      	bx	r3
 80188b2:	2000      	movs	r0, #0
 80188b4:	e7e2      	b.n	801887c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80188b6:	bf00      	nop
 80188b8:	24004ad0 	.word	0x24004ad0
 80188bc:	24004ad8 	.word	0x24004ad8
 80188c0:	24004ad4 	.word	0x24004ad4
 80188c4:	24004ab8 	.word	0x24004ab8

080188c8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80188c8:	2010      	movs	r0, #16
 80188ca:	4770      	bx	lr

080188cc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80188cc:	2000      	movs	r0, #0
 80188ce:	4770      	bx	lr

080188d0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80188d0:	4b02      	ldr	r3, [pc, #8]	; (80188dc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80188d2:	8818      	ldrh	r0, [r3, #0]
 80188d4:	0040      	lsls	r0, r0, #1
 80188d6:	b280      	uxth	r0, r0
 80188d8:	4770      	bx	lr
 80188da:	bf00      	nop
 80188dc:	24004a4a 	.word	0x24004a4a

080188e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80188e0:	2bff      	cmp	r3, #255	; 0xff
 80188e2:	d050      	beq.n	8018986 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80188e4:	2a0b      	cmp	r2, #11
 80188e6:	d04a      	beq.n	801897e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80188e8:	d80e      	bhi.n	8018908 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80188ea:	2a03      	cmp	r2, #3
 80188ec:	d03f      	beq.n	801896e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80188ee:	d804      	bhi.n	80188fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80188f0:	2a01      	cmp	r2, #1
 80188f2:	d03e      	beq.n	8018972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80188f4:	d93f      	bls.n	8018976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80188f6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80188f8:	4770      	bx	lr
 80188fa:	2a09      	cmp	r2, #9
 80188fc:	d03f      	beq.n	801897e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80188fe:	d83c      	bhi.n	801897a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018900:	2a08      	cmp	r2, #8
 8018902:	d03a      	beq.n	801897a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018904:	2000      	movs	r0, #0
 8018906:	4770      	bx	lr
 8018908:	2a2f      	cmp	r2, #47	; 0x2f
 801890a:	d024      	beq.n	8018956 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801890c:	d80d      	bhi.n	801892a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801890e:	2a2d      	cmp	r2, #45	; 0x2d
 8018910:	d014      	beq.n	801893c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018912:	d826      	bhi.n	8018962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018914:	2a2c      	cmp	r2, #44	; 0x2c
 8018916:	d1f5      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018918:	684b      	ldr	r3, [r1, #4]
 801891a:	781b      	ldrb	r3, [r3, #0]
 801891c:	2b01      	cmp	r3, #1
 801891e:	d018      	beq.n	8018952 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018920:	d323      	bcc.n	801896a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018922:	2b02      	cmp	r3, #2
 8018924:	d1ee      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018926:	6880      	ldr	r0, [r0, #8]
 8018928:	4770      	bx	lr
 801892a:	2a31      	cmp	r2, #49	; 0x31
 801892c:	d004      	beq.n	8018938 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801892e:	d328      	bcc.n	8018982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018930:	2a32      	cmp	r2, #50	; 0x32
 8018932:	d026      	beq.n	8018982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018934:	2a33      	cmp	r2, #51	; 0x33
 8018936:	d1e5      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018938:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801893a:	4770      	bx	lr
 801893c:	684b      	ldr	r3, [r1, #4]
 801893e:	781b      	ldrb	r3, [r3, #0]
 8018940:	2b01      	cmp	r3, #1
 8018942:	d004      	beq.n	801894e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018944:	d30b      	bcc.n	801895e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018946:	2b02      	cmp	r3, #2
 8018948:	d1dc      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801894a:	6900      	ldr	r0, [r0, #16]
 801894c:	4770      	bx	lr
 801894e:	6a00      	ldr	r0, [r0, #32]
 8018950:	4770      	bx	lr
 8018952:	6980      	ldr	r0, [r0, #24]
 8018954:	4770      	bx	lr
 8018956:	684b      	ldr	r3, [r1, #4]
 8018958:	781b      	ldrb	r3, [r3, #0]
 801895a:	2b00      	cmp	r3, #0
 801895c:	d1d2      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801895e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018960:	4770      	bx	lr
 8018962:	684b      	ldr	r3, [r1, #4]
 8018964:	781b      	ldrb	r3, [r3, #0]
 8018966:	2b00      	cmp	r3, #0
 8018968:	d1cc      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801896a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801896c:	4770      	bx	lr
 801896e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018970:	4770      	bx	lr
 8018972:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018974:	4770      	bx	lr
 8018976:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018978:	4770      	bx	lr
 801897a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801897c:	4770      	bx	lr
 801897e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018980:	4770      	bx	lr
 8018982:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018984:	4770      	bx	lr
 8018986:	2a0b      	cmp	r2, #11
 8018988:	d049      	beq.n	8018a1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801898a:	d80e      	bhi.n	80189aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801898c:	2a03      	cmp	r2, #3
 801898e:	d040      	beq.n	8018a12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018990:	d804      	bhi.n	801899c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018992:	2a01      	cmp	r2, #1
 8018994:	d03f      	beq.n	8018a16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018996:	d940      	bls.n	8018a1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018998:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801899a:	4770      	bx	lr
 801899c:	2a09      	cmp	r2, #9
 801899e:	d03e      	beq.n	8018a1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80189a0:	d801      	bhi.n	80189a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80189a2:	2a08      	cmp	r2, #8
 80189a4:	d1ae      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189a6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80189a8:	4770      	bx	lr
 80189aa:	2a2f      	cmp	r2, #47	; 0x2f
 80189ac:	d024      	beq.n	80189f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80189ae:	d80d      	bhi.n	80189cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80189b0:	2a2d      	cmp	r2, #45	; 0x2d
 80189b2:	d014      	beq.n	80189de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80189b4:	d826      	bhi.n	8018a04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80189b6:	2a2c      	cmp	r2, #44	; 0x2c
 80189b8:	d1a4      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189ba:	684b      	ldr	r3, [r1, #4]
 80189bc:	781b      	ldrb	r3, [r3, #0]
 80189be:	2b01      	cmp	r3, #1
 80189c0:	d018      	beq.n	80189f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80189c2:	d324      	bcc.n	8018a0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80189c4:	2b02      	cmp	r3, #2
 80189c6:	d19d      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189c8:	68c0      	ldr	r0, [r0, #12]
 80189ca:	4770      	bx	lr
 80189cc:	2a31      	cmp	r2, #49	; 0x31
 80189ce:	d004      	beq.n	80189da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80189d0:	d327      	bcc.n	8018a22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80189d2:	2a32      	cmp	r2, #50	; 0x32
 80189d4:	d025      	beq.n	8018a22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80189d6:	2a33      	cmp	r2, #51	; 0x33
 80189d8:	d194      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189da:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80189dc:	4770      	bx	lr
 80189de:	684b      	ldr	r3, [r1, #4]
 80189e0:	781b      	ldrb	r3, [r3, #0]
 80189e2:	2b01      	cmp	r3, #1
 80189e4:	d004      	beq.n	80189f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80189e6:	d30b      	bcc.n	8018a00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80189e8:	2b02      	cmp	r3, #2
 80189ea:	d18b      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80189ec:	6940      	ldr	r0, [r0, #20]
 80189ee:	4770      	bx	lr
 80189f0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80189f2:	4770      	bx	lr
 80189f4:	69c0      	ldr	r0, [r0, #28]
 80189f6:	4770      	bx	lr
 80189f8:	684b      	ldr	r3, [r1, #4]
 80189fa:	781b      	ldrb	r3, [r3, #0]
 80189fc:	2b00      	cmp	r3, #0
 80189fe:	d181      	bne.n	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a00:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018a02:	4770      	bx	lr
 8018a04:	684b      	ldr	r3, [r1, #4]
 8018a06:	781b      	ldrb	r3, [r3, #0]
 8018a08:	2b00      	cmp	r3, #0
 8018a0a:	f47f af7b 	bne.w	8018904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a0e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018a10:	4770      	bx	lr
 8018a12:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018a14:	4770      	bx	lr
 8018a16:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018a18:	4770      	bx	lr
 8018a1a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018a1c:	4770      	bx	lr
 8018a1e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018a20:	4770      	bx	lr
 8018a22:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018a24:	4770      	bx	lr

08018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a2a:	b087      	sub	sp, #28
 8018a2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018a2e:	9205      	str	r2, [sp, #20]
 8018a30:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018a34:	9101      	str	r1, [sp, #4]
 8018a36:	9202      	str	r2, [sp, #8]
 8018a38:	6841      	ldr	r1, [r0, #4]
 8018a3a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018a3e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018a42:	fb01 2404 	mla	r4, r1, r4, r2
 8018a46:	6802      	ldr	r2, [r0, #0]
 8018a48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018a4c:	f8de 2000 	ldr.w	r2, [lr]
 8018a50:	9203      	str	r2, [sp, #12]
 8018a52:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018a56:	3204      	adds	r2, #4
 8018a58:	9204      	str	r2, [sp, #16]
 8018a5a:	9a02      	ldr	r2, [sp, #8]
 8018a5c:	43d6      	mvns	r6, r2
 8018a5e:	b2f6      	uxtb	r6, r6
 8018a60:	9a01      	ldr	r2, [sp, #4]
 8018a62:	2a00      	cmp	r2, #0
 8018a64:	dc03      	bgt.n	8018a6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018a66:	9a05      	ldr	r2, [sp, #20]
 8018a68:	2a00      	cmp	r2, #0
 8018a6a:	f340 8129 	ble.w	8018cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018a6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018a70:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018a74:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018a78:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018a7a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018a7e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018a82:	2b00      	cmp	r3, #0
 8018a84:	dd0e      	ble.n	8018aa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018a86:	1408      	asrs	r0, r1, #16
 8018a88:	d405      	bmi.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018a8a:	4560      	cmp	r0, ip
 8018a8c:	da03      	bge.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018a8e:	1410      	asrs	r0, r2, #16
 8018a90:	d401      	bmi.n	8018a96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018a92:	42b8      	cmp	r0, r7
 8018a94:	db07      	blt.n	8018aa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018a96:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a98:	3b01      	subs	r3, #1
 8018a9a:	3402      	adds	r4, #2
 8018a9c:	4401      	add	r1, r0
 8018a9e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018aa0:	4402      	add	r2, r0
 8018aa2:	e7ee      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018aa4:	d071      	beq.n	8018b8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018aa6:	1e58      	subs	r0, r3, #1
 8018aa8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018aaa:	fb05 1500 	mla	r5, r5, r0, r1
 8018aae:	142d      	asrs	r5, r5, #16
 8018ab0:	d45f      	bmi.n	8018b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ab2:	4565      	cmp	r5, ip
 8018ab4:	da5d      	bge.n	8018b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ab6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018ab8:	fb05 2000 	mla	r0, r5, r0, r2
 8018abc:	1400      	asrs	r0, r0, #16
 8018abe:	d458      	bmi.n	8018b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ac0:	42b8      	cmp	r0, r7
 8018ac2:	da56      	bge.n	8018b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018ac4:	4699      	mov	r9, r3
 8018ac6:	46a2      	mov	sl, r4
 8018ac8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018acc:	f1b9 0f00 	cmp.w	r9, #0
 8018ad0:	dd57      	ble.n	8018b82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018ad2:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018ad6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018ada:	9803      	ldr	r0, [sp, #12]
 8018adc:	140d      	asrs	r5, r1, #16
 8018ade:	f109 39ff 	add.w	r9, r9, #4294967295
 8018ae2:	fb07 000c 	mla	r0, r7, ip, r0
 8018ae6:	5d40      	ldrb	r0, [r0, r5]
 8018ae8:	9d04      	ldr	r5, [sp, #16]
 8018aea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018aee:	f8ba 5000 	ldrh.w	r5, [sl]
 8018af2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018af6:	122f      	asrs	r7, r5, #8
 8018af8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018afc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018b04:	00ed      	lsls	r5, r5, #3
 8018b06:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018b0a:	fb17 f706 	smulbb	r7, r7, r6
 8018b0e:	b2ed      	uxtb	r5, r5
 8018b10:	fb18 f806 	smulbb	r8, r8, r6
 8018b14:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018b18:	10c7      	asrs	r7, r0, #3
 8018b1a:	fb15 f506 	smulbb	r5, r5, r6
 8018b1e:	00c0      	lsls	r0, r0, #3
 8018b20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b24:	fa1f fc8c 	uxth.w	ip, ip
 8018b28:	b2c0      	uxtb	r0, r0
 8018b2a:	fb07 870b 	mla	r7, r7, fp, r8
 8018b2e:	fb00 500b 	mla	r0, r0, fp, r5
 8018b32:	f10c 0501 	add.w	r5, ip, #1
 8018b36:	b2bf      	uxth	r7, r7
 8018b38:	b280      	uxth	r0, r0
 8018b3a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018b3e:	f107 0801 	add.w	r8, r7, #1
 8018b42:	1c45      	adds	r5, r0, #1
 8018b44:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018b48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018b4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018b50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018b52:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018b56:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018b5a:	4401      	add	r1, r0
 8018b5c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018b60:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018b62:	ea45 0c0c 	orr.w	ip, r5, ip
 8018b66:	4402      	add	r2, r0
 8018b68:	ea4c 0c08 	orr.w	ip, ip, r8
 8018b6c:	f82a cb02 	strh.w	ip, [sl], #2
 8018b70:	e7ac      	b.n	8018acc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018b72:	f04f 0800 	mov.w	r8, #0
 8018b76:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018b7a:	eb03 0008 	add.w	r0, r3, r8
 8018b7e:	2800      	cmp	r0, #0
 8018b80:	dc41      	bgt.n	8018c06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018b82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018b8a:	9b01      	ldr	r3, [sp, #4]
 8018b8c:	2b00      	cmp	r3, #0
 8018b8e:	f340 8097 	ble.w	8018cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018b92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018b96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018b98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018ba0:	eef0 6a62 	vmov.f32	s13, s5
 8018ba4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018ba8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018bac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018bb0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018bb4:	eef0 6a43 	vmov.f32	s13, s6
 8018bb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018bbc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018bc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018bc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018bc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018bcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018bd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018bd8:	ee12 2a90 	vmov	r2, s5
 8018bdc:	eef0 2a47 	vmov.f32	s5, s14
 8018be0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018be4:	ee13 2a10 	vmov	r2, s6
 8018be8:	9313      	str	r3, [sp, #76]	; 0x4c
 8018bea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bec:	eeb0 3a67 	vmov.f32	s6, s15
 8018bf0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bf4:	9314      	str	r3, [sp, #80]	; 0x50
 8018bf6:	9b01      	ldr	r3, [sp, #4]
 8018bf8:	9a05      	ldr	r2, [sp, #20]
 8018bfa:	3b01      	subs	r3, #1
 8018bfc:	9301      	str	r3, [sp, #4]
 8018bfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018c00:	bf08      	it	eq
 8018c02:	4613      	moveq	r3, r2
 8018c04:	e72c      	b.n	8018a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018c06:	140f      	asrs	r7, r1, #16
 8018c08:	d453      	bmi.n	8018cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018c0a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018c0e:	42bd      	cmp	r5, r7
 8018c10:	dd4f      	ble.n	8018cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018c12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018c16:	d44c      	bmi.n	8018cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018c18:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018c1c:	4560      	cmp	r0, ip
 8018c1e:	dd48      	ble.n	8018cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018c20:	9803      	ldr	r0, [sp, #12]
 8018c22:	b22d      	sxth	r5, r5
 8018c24:	fb0c 0505 	mla	r5, ip, r5, r0
 8018c28:	5de8      	ldrb	r0, [r5, r7]
 8018c2a:	9d04      	ldr	r5, [sp, #16]
 8018c2c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018c30:	f06f 0501 	mvn.w	r5, #1
 8018c34:	fb05 fb08 	mul.w	fp, r5, r8
 8018c38:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018c3c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018c40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c44:	122f      	asrs	r7, r5, #8
 8018c46:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018c4a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c4e:	00ed      	lsls	r5, r5, #3
 8018c50:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018c54:	fb17 f706 	smulbb	r7, r7, r6
 8018c58:	b2ed      	uxtb	r5, r5
 8018c5a:	fb19 f906 	smulbb	r9, r9, r6
 8018c5e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018c62:	10c7      	asrs	r7, r0, #3
 8018c64:	fb15 f506 	smulbb	r5, r5, r6
 8018c68:	00c0      	lsls	r0, r0, #3
 8018c6a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c6e:	fa1f fc8c 	uxth.w	ip, ip
 8018c72:	b2c0      	uxtb	r0, r0
 8018c74:	fb07 970a 	mla	r7, r7, sl, r9
 8018c78:	fb00 500a 	mla	r0, r0, sl, r5
 8018c7c:	f10c 0501 	add.w	r5, ip, #1
 8018c80:	b2bf      	uxth	r7, r7
 8018c82:	b280      	uxth	r0, r0
 8018c84:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018c88:	f107 0901 	add.w	r9, r7, #1
 8018c8c:	1c45      	adds	r5, r0, #1
 8018c8e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018c92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018c96:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018c9e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018ca2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ca6:	ea45 0c0c 	orr.w	ip, r5, ip
 8018caa:	ea4c 0c09 	orr.w	ip, ip, r9
 8018cae:	f824 c00b 	strh.w	ip, [r4, fp]
 8018cb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018cb4:	f108 38ff 	add.w	r8, r8, #4294967295
 8018cb8:	4401      	add	r1, r0
 8018cba:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018cbc:	4402      	add	r2, r0
 8018cbe:	e75c      	b.n	8018b7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018cc0:	b007      	add	sp, #28
 8018cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018cc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018cc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cca:	b085      	sub	sp, #20
 8018ccc:	4693      	mov	fp, r2
 8018cce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018cd2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018cd4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018cd6:	6870      	ldr	r0, [r6, #4]
 8018cd8:	9100      	str	r1, [sp, #0]
 8018cda:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018cde:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018ce2:	fb00 2404 	mla	r4, r0, r4, r2
 8018ce6:	6832      	ldr	r2, [r6, #0]
 8018ce8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018cec:	682a      	ldr	r2, [r5, #0]
 8018cee:	9201      	str	r2, [sp, #4]
 8018cf0:	686a      	ldr	r2, [r5, #4]
 8018cf2:	3204      	adds	r2, #4
 8018cf4:	9202      	str	r2, [sp, #8]
 8018cf6:	9a00      	ldr	r2, [sp, #0]
 8018cf8:	2a00      	cmp	r2, #0
 8018cfa:	dc03      	bgt.n	8018d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018cfc:	f1bb 0f00 	cmp.w	fp, #0
 8018d00:	f340 80a0 	ble.w	8018e44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018d04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018d06:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018d0a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018d0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018d10:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018d14:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018d18:	2b00      	cmp	r3, #0
 8018d1a:	dd0c      	ble.n	8018d36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018d1c:	1406      	asrs	r6, r0, #16
 8018d1e:	d405      	bmi.n	8018d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018d20:	454e      	cmp	r6, r9
 8018d22:	da03      	bge.n	8018d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018d24:	1416      	asrs	r6, r2, #16
 8018d26:	d401      	bmi.n	8018d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018d28:	4546      	cmp	r6, r8
 8018d2a:	db05      	blt.n	8018d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d2c:	4470      	add	r0, lr
 8018d2e:	4462      	add	r2, ip
 8018d30:	3b01      	subs	r3, #1
 8018d32:	3402      	adds	r4, #2
 8018d34:	e7f0      	b.n	8018d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018d36:	d00f      	beq.n	8018d58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018d38:	1e5e      	subs	r6, r3, #1
 8018d3a:	fb0e 0706 	mla	r7, lr, r6, r0
 8018d3e:	143f      	asrs	r7, r7, #16
 8018d40:	d541      	bpl.n	8018dc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018d42:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018d46:	4698      	mov	r8, r3
 8018d48:	9603      	str	r6, [sp, #12]
 8018d4a:	f1b8 0f00 	cmp.w	r8, #0
 8018d4e:	dc59      	bgt.n	8018e04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018d50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018d58:	9b00      	ldr	r3, [sp, #0]
 8018d5a:	2b00      	cmp	r3, #0
 8018d5c:	dd72      	ble.n	8018e44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018d5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018d62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018d68:	eeb0 6a62 	vmov.f32	s12, s5
 8018d6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018d70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d78:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018d7c:	eeb0 6a43 	vmov.f32	s12, s6
 8018d80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d84:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018d88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018da0:	ee12 2a90 	vmov	r2, s5
 8018da4:	eef0 2a47 	vmov.f32	s5, s14
 8018da8:	fb92 fef3 	sdiv	lr, r2, r3
 8018dac:	ee13 2a10 	vmov	r2, s6
 8018db0:	eeb0 3a67 	vmov.f32	s6, s15
 8018db4:	fb92 fcf3 	sdiv	ip, r2, r3
 8018db8:	9b00      	ldr	r3, [sp, #0]
 8018dba:	3b01      	subs	r3, #1
 8018dbc:	9300      	str	r3, [sp, #0]
 8018dbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018dc0:	bf08      	it	eq
 8018dc2:	465b      	moveq	r3, fp
 8018dc4:	e797      	b.n	8018cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018dc6:	454f      	cmp	r7, r9
 8018dc8:	dabb      	bge.n	8018d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018dca:	fb0c 2606 	mla	r6, ip, r6, r2
 8018dce:	1436      	asrs	r6, r6, #16
 8018dd0:	d4b7      	bmi.n	8018d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018dd2:	4546      	cmp	r6, r8
 8018dd4:	dab5      	bge.n	8018d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018dd6:	461e      	mov	r6, r3
 8018dd8:	46a0      	mov	r8, r4
 8018dda:	2e00      	cmp	r6, #0
 8018ddc:	ddb8      	ble.n	8018d50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018dde:	1417      	asrs	r7, r2, #16
 8018de0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018de4:	9901      	ldr	r1, [sp, #4]
 8018de6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018dea:	4462      	add	r2, ip
 8018dec:	4470      	add	r0, lr
 8018dee:	fb0a 1707 	mla	r7, sl, r7, r1
 8018df2:	9902      	ldr	r1, [sp, #8]
 8018df4:	3e01      	subs	r6, #1
 8018df6:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018dfa:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018dfe:	f828 7b02 	strh.w	r7, [r8], #2
 8018e02:	e7ea      	b.n	8018dda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018e04:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018e08:	d417      	bmi.n	8018e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018e0a:	68ae      	ldr	r6, [r5, #8]
 8018e0c:	454e      	cmp	r6, r9
 8018e0e:	dd14      	ble.n	8018e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018e10:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018e14:	d411      	bmi.n	8018e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018e16:	68ef      	ldr	r7, [r5, #12]
 8018e18:	4557      	cmp	r7, sl
 8018e1a:	dd0e      	ble.n	8018e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018e1c:	9f01      	ldr	r7, [sp, #4]
 8018e1e:	b236      	sxth	r6, r6
 8018e20:	f06f 0101 	mvn.w	r1, #1
 8018e24:	fb0a 7606 	mla	r6, sl, r6, r7
 8018e28:	9f02      	ldr	r7, [sp, #8]
 8018e2a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018e2e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018e32:	fb01 f608 	mul.w	r6, r1, r8
 8018e36:	9903      	ldr	r1, [sp, #12]
 8018e38:	538f      	strh	r7, [r1, r6]
 8018e3a:	4470      	add	r0, lr
 8018e3c:	4462      	add	r2, ip
 8018e3e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e42:	e782      	b.n	8018d4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018e44:	b005      	add	sp, #20
 8018e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e4e:	b087      	sub	sp, #28
 8018e50:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018e52:	9205      	str	r2, [sp, #20]
 8018e54:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018e58:	9102      	str	r1, [sp, #8]
 8018e5a:	9203      	str	r2, [sp, #12]
 8018e5c:	6861      	ldr	r1, [r4, #4]
 8018e5e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018e62:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018e66:	fb01 2000 	mla	r0, r1, r0, r2
 8018e6a:	6822      	ldr	r2, [r4, #0]
 8018e6c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018e70:	9200      	str	r2, [sp, #0]
 8018e72:	f8dc 2000 	ldr.w	r2, [ip]
 8018e76:	9204      	str	r2, [sp, #16]
 8018e78:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018e7c:	3204      	adds	r2, #4
 8018e7e:	9201      	str	r2, [sp, #4]
 8018e80:	9a03      	ldr	r2, [sp, #12]
 8018e82:	43d5      	mvns	r5, r2
 8018e84:	b2ed      	uxtb	r5, r5
 8018e86:	9a02      	ldr	r2, [sp, #8]
 8018e88:	2a00      	cmp	r2, #0
 8018e8a:	dc03      	bgt.n	8018e94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018e8c:	9a05      	ldr	r2, [sp, #20]
 8018e8e:	2a00      	cmp	r2, #0
 8018e90:	f340 812c 	ble.w	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018e94:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018e96:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018e9a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018e9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018ea0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018ea4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018ea8:	2b00      	cmp	r3, #0
 8018eaa:	dd10      	ble.n	8018ece <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018eac:	140c      	asrs	r4, r1, #16
 8018eae:	d405      	bmi.n	8018ebc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018eb0:	4574      	cmp	r4, lr
 8018eb2:	da03      	bge.n	8018ebc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018eb4:	1414      	asrs	r4, r2, #16
 8018eb6:	d401      	bmi.n	8018ebc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018eb8:	42bc      	cmp	r4, r7
 8018eba:	db09      	blt.n	8018ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018ebc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018ebe:	3b01      	subs	r3, #1
 8018ec0:	9800      	ldr	r0, [sp, #0]
 8018ec2:	4421      	add	r1, r4
 8018ec4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018ec6:	3002      	adds	r0, #2
 8018ec8:	4422      	add	r2, r4
 8018eca:	9000      	str	r0, [sp, #0]
 8018ecc:	e7ec      	b.n	8018ea8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018ece:	d071      	beq.n	8018fb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018ed0:	1e5c      	subs	r4, r3, #1
 8018ed2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018ed4:	fb06 1604 	mla	r6, r6, r4, r1
 8018ed8:	1436      	asrs	r6, r6, #16
 8018eda:	d45d      	bmi.n	8018f98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018edc:	4576      	cmp	r6, lr
 8018ede:	da5b      	bge.n	8018f98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018ee0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018ee2:	fb06 2404 	mla	r4, r6, r4, r2
 8018ee6:	1424      	asrs	r4, r4, #16
 8018ee8:	d456      	bmi.n	8018f98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018eea:	42bc      	cmp	r4, r7
 8018eec:	da54      	bge.n	8018f98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018eee:	4698      	mov	r8, r3
 8018ef0:	f8dd 9000 	ldr.w	r9, [sp]
 8018ef4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018ef8:	f1b8 0f00 	cmp.w	r8, #0
 8018efc:	dd54      	ble.n	8018fa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018efe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018f02:	1414      	asrs	r4, r2, #16
 8018f04:	9804      	ldr	r0, [sp, #16]
 8018f06:	140e      	asrs	r6, r1, #16
 8018f08:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f0c:	fb07 0404 	mla	r4, r7, r4, r0
 8018f10:	9801      	ldr	r0, [sp, #4]
 8018f12:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018f16:	f8b9 4000 	ldrh.w	r4, [r9]
 8018f1a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018f1e:	1227      	asrs	r7, r4, #8
 8018f20:	eb00 0b0e 	add.w	fp, r0, lr
 8018f24:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018f28:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018f2c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f2e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018f32:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018f36:	4401      	add	r1, r0
 8018f38:	fb16 f60a 	smulbb	r6, r6, sl
 8018f3c:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018f3e:	fb1b fb0a 	smulbb	fp, fp, sl
 8018f42:	fb07 6705 	mla	r7, r7, r5, r6
 8018f46:	10e6      	asrs	r6, r4, #3
 8018f48:	00e4      	lsls	r4, r4, #3
 8018f4a:	4402      	add	r2, r0
 8018f4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018f50:	b2bf      	uxth	r7, r7
 8018f52:	b2e4      	uxtb	r4, r4
 8018f54:	fb06 b605 	mla	r6, r6, r5, fp
 8018f58:	fb14 f405 	smulbb	r4, r4, r5
 8018f5c:	b2b6      	uxth	r6, r6
 8018f5e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018f62:	1c7c      	adds	r4, r7, #1
 8018f64:	f106 0b01 	add.w	fp, r6, #1
 8018f68:	fa1f fe8e 	uxth.w	lr, lr
 8018f6c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018f70:	f10e 0401 	add.w	r4, lr, #1
 8018f74:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018f78:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018f7c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018f80:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018f84:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018f88:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018f8c:	4327      	orrs	r7, r4
 8018f8e:	ea47 070b 	orr.w	r7, r7, fp
 8018f92:	f829 7b02 	strh.w	r7, [r9], #2
 8018f96:	e7af      	b.n	8018ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018f98:	f04f 0e00 	mov.w	lr, #0
 8018f9c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018fa0:	eb03 040e 	add.w	r4, r3, lr
 8018fa4:	2c00      	cmp	r4, #0
 8018fa6:	dc43      	bgt.n	8019030 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018fa8:	9a00      	ldr	r2, [sp, #0]
 8018faa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018fb2:	9300      	str	r3, [sp, #0]
 8018fb4:	9b02      	ldr	r3, [sp, #8]
 8018fb6:	2b00      	cmp	r3, #0
 8018fb8:	f340 8098 	ble.w	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018fbc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018fc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018fc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fca:	eef0 6a62 	vmov.f32	s13, s5
 8018fce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018fd2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fda:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018fde:	eef0 6a43 	vmov.f32	s13, s6
 8018fe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fe6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018fea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018fee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ff2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ff6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ffa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ffe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019002:	ee12 2a90 	vmov	r2, s5
 8019006:	eef0 2a47 	vmov.f32	s5, s14
 801900a:	fb92 f3f3 	sdiv	r3, r2, r3
 801900e:	ee13 2a10 	vmov	r2, s6
 8019012:	9313      	str	r3, [sp, #76]	; 0x4c
 8019014:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019016:	eeb0 3a67 	vmov.f32	s6, s15
 801901a:	fb92 f3f3 	sdiv	r3, r2, r3
 801901e:	9314      	str	r3, [sp, #80]	; 0x50
 8019020:	9b02      	ldr	r3, [sp, #8]
 8019022:	9a05      	ldr	r2, [sp, #20]
 8019024:	3b01      	subs	r3, #1
 8019026:	9302      	str	r3, [sp, #8]
 8019028:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801902a:	bf08      	it	eq
 801902c:	4613      	moveq	r3, r2
 801902e:	e72a      	b.n	8018e86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019030:	140f      	asrs	r7, r1, #16
 8019032:	d454      	bmi.n	80190de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019034:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019038:	42be      	cmp	r6, r7
 801903a:	dd50      	ble.n	80190de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801903c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019040:	d44d      	bmi.n	80190de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019042:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019046:	4544      	cmp	r4, r8
 8019048:	dd49      	ble.n	80190de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801904a:	9c04      	ldr	r4, [sp, #16]
 801904c:	b236      	sxth	r6, r6
 801904e:	f06f 0001 	mvn.w	r0, #1
 8019052:	fb08 4606 	mla	r6, r8, r6, r4
 8019056:	9c01      	ldr	r4, [sp, #4]
 8019058:	fb00 fa0e 	mul.w	sl, r0, lr
 801905c:	9800      	ldr	r0, [sp, #0]
 801905e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019062:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019066:	eb04 0b08 	add.w	fp, r4, r8
 801906a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801906e:	9801      	ldr	r0, [sp, #4]
 8019070:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019074:	1227      	asrs	r7, r4, #8
 8019076:	f89b b001 	ldrb.w	fp, [fp, #1]
 801907a:	fb16 f609 	smulbb	r6, r6, r9
 801907e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019082:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019086:	fb1b fb09 	smulbb	fp, fp, r9
 801908a:	fb07 6705 	mla	r7, r7, r5, r6
 801908e:	10e6      	asrs	r6, r4, #3
 8019090:	00e4      	lsls	r4, r4, #3
 8019092:	9800      	ldr	r0, [sp, #0]
 8019094:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019098:	b2bf      	uxth	r7, r7
 801909a:	b2e4      	uxtb	r4, r4
 801909c:	fb06 b605 	mla	r6, r6, r5, fp
 80190a0:	fb14 f405 	smulbb	r4, r4, r5
 80190a4:	b2b6      	uxth	r6, r6
 80190a6:	fb08 4809 	mla	r8, r8, r9, r4
 80190aa:	1c7c      	adds	r4, r7, #1
 80190ac:	f106 0b01 	add.w	fp, r6, #1
 80190b0:	fa1f f888 	uxth.w	r8, r8
 80190b4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80190b8:	f108 0401 	add.w	r4, r8, #1
 80190bc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80190c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80190c4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80190c8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80190cc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80190d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190d4:	4327      	orrs	r7, r4
 80190d6:	ea47 070b 	orr.w	r7, r7, fp
 80190da:	f820 700a 	strh.w	r7, [r0, sl]
 80190de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80190e0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80190e4:	4401      	add	r1, r0
 80190e6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80190e8:	4402      	add	r2, r0
 80190ea:	e759      	b.n	8018fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80190ec:	b007      	add	sp, #28
 80190ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080190f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190f8:	b085      	sub	sp, #20
 80190fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80190fe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019100:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019102:	9203      	str	r2, [sp, #12]
 8019104:	6870      	ldr	r0, [r6, #4]
 8019106:	686f      	ldr	r7, [r5, #4]
 8019108:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801910c:	3704      	adds	r7, #4
 801910e:	9101      	str	r1, [sp, #4]
 8019110:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019114:	fb00 2404 	mla	r4, r0, r4, r2
 8019118:	6832      	ldr	r2, [r6, #0]
 801911a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801911e:	682a      	ldr	r2, [r5, #0]
 8019120:	9202      	str	r2, [sp, #8]
 8019122:	9a01      	ldr	r2, [sp, #4]
 8019124:	2a00      	cmp	r2, #0
 8019126:	dc03      	bgt.n	8019130 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019128:	9a03      	ldr	r2, [sp, #12]
 801912a:	2a00      	cmp	r2, #0
 801912c:	f340 80cc 	ble.w	80192c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019130:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019132:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019136:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801913a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801913c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019140:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019144:	2b00      	cmp	r3, #0
 8019146:	dd0d      	ble.n	8019164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019148:	1406      	asrs	r6, r0, #16
 801914a:	d405      	bmi.n	8019158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801914c:	454e      	cmp	r6, r9
 801914e:	da03      	bge.n	8019158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019150:	1416      	asrs	r6, r2, #16
 8019152:	d401      	bmi.n	8019158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019154:	4546      	cmp	r6, r8
 8019156:	db06      	blt.n	8019166 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019158:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801915a:	4460      	add	r0, ip
 801915c:	3b01      	subs	r3, #1
 801915e:	3402      	adds	r4, #2
 8019160:	4432      	add	r2, r6
 8019162:	e7ef      	b.n	8019144 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019164:	d00f      	beq.n	8019186 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019166:	1e5e      	subs	r6, r3, #1
 8019168:	fb0c 0e06 	mla	lr, ip, r6, r0
 801916c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8019170:	d543      	bpl.n	80191fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019172:	4698      	mov	r8, r3
 8019174:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019178:	f1b8 0f00 	cmp.w	r8, #0
 801917c:	dc71      	bgt.n	8019262 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801917e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019182:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019186:	9b01      	ldr	r3, [sp, #4]
 8019188:	2b00      	cmp	r3, #0
 801918a:	f340 809d 	ble.w	80192c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801918e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019192:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019194:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019198:	eeb0 6a62 	vmov.f32	s12, s5
 801919c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80191a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191a8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80191ac:	eeb0 6a43 	vmov.f32	s12, s6
 80191b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191b4:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80191b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191d0:	ee12 2a90 	vmov	r2, s5
 80191d4:	eef0 2a47 	vmov.f32	s5, s14
 80191d8:	fb92 fcf3 	sdiv	ip, r2, r3
 80191dc:	ee13 2a10 	vmov	r2, s6
 80191e0:	eeb0 3a67 	vmov.f32	s6, s15
 80191e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80191e8:	9312      	str	r3, [sp, #72]	; 0x48
 80191ea:	9b01      	ldr	r3, [sp, #4]
 80191ec:	9a03      	ldr	r2, [sp, #12]
 80191ee:	3b01      	subs	r3, #1
 80191f0:	9301      	str	r3, [sp, #4]
 80191f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80191f4:	bf08      	it	eq
 80191f6:	4613      	moveq	r3, r2
 80191f8:	e793      	b.n	8019122 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80191fa:	45ce      	cmp	lr, r9
 80191fc:	dab9      	bge.n	8019172 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80191fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019200:	fb01 2606 	mla	r6, r1, r6, r2
 8019204:	1436      	asrs	r6, r6, #16
 8019206:	d4b4      	bmi.n	8019172 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019208:	4546      	cmp	r6, r8
 801920a:	dab2      	bge.n	8019172 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801920c:	4698      	mov	r8, r3
 801920e:	46a2      	mov	sl, r4
 8019210:	f1b8 0f00 	cmp.w	r8, #0
 8019214:	ddb3      	ble.n	801917e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019216:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801921a:	1416      	asrs	r6, r2, #16
 801921c:	9902      	ldr	r1, [sp, #8]
 801921e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019222:	f108 38ff 	add.w	r8, r8, #4294967295
 8019226:	4460      	add	r0, ip
 8019228:	fb09 1606 	mla	r6, r9, r6, r1
 801922c:	4928      	ldr	r1, [pc, #160]	; (80192d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801922e:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019232:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019236:	eb07 0b0e 	add.w	fp, r7, lr
 801923a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801923e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019242:	00f6      	lsls	r6, r6, #3
 8019244:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019248:	9912      	ldr	r1, [sp, #72]	; 0x48
 801924a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801924e:	440a      	add	r2, r1
 8019250:	ea49 0606 	orr.w	r6, r9, r6
 8019254:	f817 900e 	ldrb.w	r9, [r7, lr]
 8019258:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801925c:	f82a 6b02 	strh.w	r6, [sl], #2
 8019260:	e7d6      	b.n	8019210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019262:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019266:	d429      	bmi.n	80192bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019268:	68ae      	ldr	r6, [r5, #8]
 801926a:	454e      	cmp	r6, r9
 801926c:	dd26      	ble.n	80192bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801926e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8019272:	d423      	bmi.n	80192bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019274:	68e9      	ldr	r1, [r5, #12]
 8019276:	4559      	cmp	r1, fp
 8019278:	dd20      	ble.n	80192bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801927a:	fa0f fe86 	sxth.w	lr, r6
 801927e:	9902      	ldr	r1, [sp, #8]
 8019280:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019284:	f06f 0101 	mvn.w	r1, #1
 8019288:	f81e e009 	ldrb.w	lr, [lr, r9]
 801928c:	fb01 f908 	mul.w	r9, r1, r8
 8019290:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8019294:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019298:	eb07 060e 	add.w	r6, r7, lr
 801929c:	f896 b002 	ldrb.w	fp, [r6, #2]
 80192a0:	7876      	ldrb	r6, [r6, #1]
 80192a2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80192a6:	00f6      	lsls	r6, r6, #3
 80192a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80192ac:	ea4b 0606 	orr.w	r6, fp, r6
 80192b0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80192b4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80192b8:	f82a 6009 	strh.w	r6, [sl, r9]
 80192bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80192be:	4460      	add	r0, ip
 80192c0:	f108 38ff 	add.w	r8, r8, #4294967295
 80192c4:	440a      	add	r2, r1
 80192c6:	e757      	b.n	8019178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80192c8:	b005      	add	sp, #20
 80192ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192ce:	bf00      	nop
 80192d0:	fffff800 	.word	0xfffff800

080192d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192d8:	b087      	sub	sp, #28
 80192da:	468b      	mov	fp, r1
 80192dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80192e0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80192e2:	9204      	str	r2, [sp, #16]
 80192e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80192e8:	6841      	ldr	r1, [r0, #4]
 80192ea:	9205      	str	r2, [sp, #20]
 80192ec:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80192f0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80192f4:	fb01 2404 	mla	r4, r1, r4, r2
 80192f8:	6802      	ldr	r2, [r0, #0]
 80192fa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80192fe:	f8dc 2000 	ldr.w	r2, [ip]
 8019302:	9201      	str	r2, [sp, #4]
 8019304:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019308:	3204      	adds	r2, #4
 801930a:	9202      	str	r2, [sp, #8]
 801930c:	f1bb 0f00 	cmp.w	fp, #0
 8019310:	dc03      	bgt.n	801931a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019312:	9a04      	ldr	r2, [sp, #16]
 8019314:	2a00      	cmp	r2, #0
 8019316:	f340 8138 	ble.w	801958a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801931a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801931c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019320:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019324:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019326:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801932a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801932e:	2b00      	cmp	r3, #0
 8019330:	dd0e      	ble.n	8019350 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019332:	1402      	asrs	r2, r0, #16
 8019334:	d405      	bmi.n	8019342 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019336:	42ba      	cmp	r2, r7
 8019338:	da03      	bge.n	8019342 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801933a:	140a      	asrs	r2, r1, #16
 801933c:	d401      	bmi.n	8019342 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801933e:	42b2      	cmp	r2, r6
 8019340:	db07      	blt.n	8019352 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019342:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019344:	3b01      	subs	r3, #1
 8019346:	3402      	adds	r4, #2
 8019348:	4410      	add	r0, r2
 801934a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801934c:	4411      	add	r1, r2
 801934e:	e7ee      	b.n	801932e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019350:	d019      	beq.n	8019386 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019352:	1e5a      	subs	r2, r3, #1
 8019354:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019356:	fb05 0502 	mla	r5, r5, r2, r0
 801935a:	142d      	asrs	r5, r5, #16
 801935c:	d409      	bmi.n	8019372 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801935e:	42bd      	cmp	r5, r7
 8019360:	da07      	bge.n	8019372 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019362:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019364:	fb05 1202 	mla	r2, r5, r2, r1
 8019368:	1412      	asrs	r2, r2, #16
 801936a:	d402      	bmi.n	8019372 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801936c:	42b2      	cmp	r2, r6
 801936e:	f2c0 80ac 	blt.w	80194ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019372:	f04f 0e00 	mov.w	lr, #0
 8019376:	eb03 020e 	add.w	r2, r3, lr
 801937a:	2a00      	cmp	r2, #0
 801937c:	dc3e      	bgt.n	80193fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801937e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019382:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019386:	f1bb 0f00 	cmp.w	fp, #0
 801938a:	f340 80fe 	ble.w	801958a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801938e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019392:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019394:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019398:	f1bb 0b01 	subs.w	fp, fp, #1
 801939c:	eeb0 6a62 	vmov.f32	s12, s5
 80193a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80193a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193ac:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80193b0:	eeb0 6a43 	vmov.f32	s12, s6
 80193b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193b8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80193bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193d4:	ee12 2a90 	vmov	r2, s5
 80193d8:	eef0 2a47 	vmov.f32	s5, s14
 80193dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80193e0:	ee13 2a10 	vmov	r2, s6
 80193e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80193e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80193e8:	eeb0 3a67 	vmov.f32	s6, s15
 80193ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80193f0:	9a04      	ldr	r2, [sp, #16]
 80193f2:	9314      	str	r3, [sp, #80]	; 0x50
 80193f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80193f6:	bf08      	it	eq
 80193f8:	4613      	moveq	r3, r2
 80193fa:	e787      	b.n	801930c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80193fc:	1406      	asrs	r6, r0, #16
 80193fe:	d45d      	bmi.n	80194bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019400:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019404:	42b5      	cmp	r5, r6
 8019406:	dd59      	ble.n	80194bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019408:	140f      	asrs	r7, r1, #16
 801940a:	d457      	bmi.n	80194bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801940c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019410:	42ba      	cmp	r2, r7
 8019412:	dd53      	ble.n	80194bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019414:	9a01      	ldr	r2, [sp, #4]
 8019416:	b22d      	sxth	r5, r5
 8019418:	fb07 2505 	mla	r5, r7, r5, r2
 801941c:	5daa      	ldrb	r2, [r5, r6]
 801941e:	9d02      	ldr	r5, [sp, #8]
 8019420:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019424:	0e2e      	lsrs	r6, r5, #24
 8019426:	d049      	beq.n	80194bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019428:	f06f 0201 	mvn.w	r2, #1
 801942c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019430:	fb02 f20e 	mul.w	r2, r2, lr
 8019434:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019438:	9203      	str	r2, [sp, #12]
 801943a:	9a05      	ldr	r2, [sp, #20]
 801943c:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019440:	4356      	muls	r6, r2
 8019442:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019446:	1c72      	adds	r2, r6, #1
 8019448:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801944c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019450:	b2ed      	uxtb	r5, r5
 8019452:	1212      	asrs	r2, r2, #8
 8019454:	fa1f f982 	uxth.w	r9, r2
 8019458:	43d2      	mvns	r2, r2
 801945a:	fb16 f609 	smulbb	r6, r6, r9
 801945e:	b2d2      	uxtb	r2, r2
 8019460:	fb15 f509 	smulbb	r5, r5, r9
 8019464:	fb07 6702 	mla	r7, r7, r2, r6
 8019468:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801946c:	fb1a fa09 	smulbb	sl, sl, r9
 8019470:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019474:	b2bf      	uxth	r7, r7
 8019476:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801947a:	fa5f f888 	uxtb.w	r8, r8
 801947e:	fb06 a602 	mla	r6, r6, r2, sl
 8019482:	fb08 5502 	mla	r5, r8, r2, r5
 8019486:	1c7a      	adds	r2, r7, #1
 8019488:	b2b6      	uxth	r6, r6
 801948a:	b2ad      	uxth	r5, r5
 801948c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019490:	9a03      	ldr	r2, [sp, #12]
 8019492:	f105 0a01 	add.w	sl, r5, #1
 8019496:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801949a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801949e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80194a2:	ea4a 0707 	orr.w	r7, sl, r7
 80194a6:	f106 0a01 	add.w	sl, r6, #1
 80194aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80194ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80194b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80194b6:	ea47 070a 	orr.w	r7, r7, sl
 80194ba:	52a7      	strh	r7, [r4, r2]
 80194bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80194be:	f10e 3eff 	add.w	lr, lr, #4294967295
 80194c2:	4410      	add	r0, r2
 80194c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80194c6:	4411      	add	r1, r2
 80194c8:	e755      	b.n	8019376 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80194ca:	f04f 0800 	mov.w	r8, #0
 80194ce:	eba3 0208 	sub.w	r2, r3, r8
 80194d2:	2a00      	cmp	r2, #0
 80194d4:	f77f af53 	ble.w	801937e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80194d8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80194dc:	140a      	asrs	r2, r1, #16
 80194de:	9f01      	ldr	r7, [sp, #4]
 80194e0:	1405      	asrs	r5, r0, #16
 80194e2:	fb06 7202 	mla	r2, r6, r2, r7
 80194e6:	5d52      	ldrb	r2, [r2, r5]
 80194e8:	9d02      	ldr	r5, [sp, #8]
 80194ea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80194ee:	0e2e      	lsrs	r6, r5, #24
 80194f0:	d044      	beq.n	801957c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80194f2:	9a05      	ldr	r2, [sp, #20]
 80194f4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80194f8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80194fc:	4356      	muls	r6, r2
 80194fe:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019502:	1c72      	adds	r2, r6, #1
 8019504:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019508:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801950c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019510:	b2ed      	uxtb	r5, r5
 8019512:	1212      	asrs	r2, r2, #8
 8019514:	fa1f f982 	uxth.w	r9, r2
 8019518:	43d2      	mvns	r2, r2
 801951a:	fb16 f609 	smulbb	r6, r6, r9
 801951e:	b2d2      	uxtb	r2, r2
 8019520:	fb15 f509 	smulbb	r5, r5, r9
 8019524:	fb07 6702 	mla	r7, r7, r2, r6
 8019528:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801952c:	fb1a fa09 	smulbb	sl, sl, r9
 8019530:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019534:	b2bf      	uxth	r7, r7
 8019536:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801953a:	fa5f fe8e 	uxtb.w	lr, lr
 801953e:	fb06 a602 	mla	r6, r6, r2, sl
 8019542:	fb0e 5502 	mla	r5, lr, r2, r5
 8019546:	1c7a      	adds	r2, r7, #1
 8019548:	b2b6      	uxth	r6, r6
 801954a:	b2ad      	uxth	r5, r5
 801954c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019550:	f105 0a01 	add.w	sl, r5, #1
 8019554:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019558:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801955c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019560:	ea4a 0707 	orr.w	r7, sl, r7
 8019564:	f106 0a01 	add.w	sl, r6, #1
 8019568:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801956c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019570:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019574:	ea47 070a 	orr.w	r7, r7, sl
 8019578:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801957c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801957e:	f108 0801 	add.w	r8, r8, #1
 8019582:	4410      	add	r0, r2
 8019584:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019586:	4411      	add	r1, r2
 8019588:	e7a1      	b.n	80194ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801958a:	b007      	add	sp, #28
 801958c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019594:	b085      	sub	sp, #20
 8019596:	468b      	mov	fp, r1
 8019598:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801959c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801959e:	9203      	str	r2, [sp, #12]
 80195a0:	6841      	ldr	r1, [r0, #4]
 80195a2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80195a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80195aa:	fb01 2404 	mla	r4, r1, r4, r2
 80195ae:	6802      	ldr	r2, [r0, #0]
 80195b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80195b4:	f8de 2000 	ldr.w	r2, [lr]
 80195b8:	9200      	str	r2, [sp, #0]
 80195ba:	f8de 2004 	ldr.w	r2, [lr, #4]
 80195be:	3204      	adds	r2, #4
 80195c0:	9201      	str	r2, [sp, #4]
 80195c2:	f1bb 0f00 	cmp.w	fp, #0
 80195c6:	dc03      	bgt.n	80195d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80195c8:	9a03      	ldr	r2, [sp, #12]
 80195ca:	2a00      	cmp	r2, #0
 80195cc:	f340 8153 	ble.w	8019876 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80195d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80195d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80195d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80195da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80195dc:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80195e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80195e4:	2b00      	cmp	r3, #0
 80195e6:	dd0e      	ble.n	8019606 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80195e8:	1408      	asrs	r0, r1, #16
 80195ea:	d405      	bmi.n	80195f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80195ec:	42b8      	cmp	r0, r7
 80195ee:	da03      	bge.n	80195f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80195f0:	1410      	asrs	r0, r2, #16
 80195f2:	d401      	bmi.n	80195f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80195f4:	42b0      	cmp	r0, r6
 80195f6:	db07      	blt.n	8019608 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80195f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80195fa:	3b01      	subs	r3, #1
 80195fc:	3402      	adds	r4, #2
 80195fe:	4401      	add	r1, r0
 8019600:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019602:	4402      	add	r2, r0
 8019604:	e7ee      	b.n	80195e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019606:	d017      	beq.n	8019638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019608:	1e58      	subs	r0, r3, #1
 801960a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801960c:	fb05 1500 	mla	r5, r5, r0, r1
 8019610:	142d      	asrs	r5, r5, #16
 8019612:	d409      	bmi.n	8019628 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019614:	42bd      	cmp	r5, r7
 8019616:	da07      	bge.n	8019628 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019618:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801961a:	fb05 2000 	mla	r0, r5, r0, r2
 801961e:	1400      	asrs	r0, r0, #16
 8019620:	d402      	bmi.n	8019628 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019622:	42b0      	cmp	r0, r6
 8019624:	f2c0 80bc 	blt.w	80197a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019628:	2600      	movs	r6, #0
 801962a:	1998      	adds	r0, r3, r6
 801962c:	2800      	cmp	r0, #0
 801962e:	dc3e      	bgt.n	80196ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019630:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019634:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019638:	f1bb 0f00 	cmp.w	fp, #0
 801963c:	f340 811b 	ble.w	8019876 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019640:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019646:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801964a:	f1bb 0b01 	subs.w	fp, fp, #1
 801964e:	eeb0 6a62 	vmov.f32	s12, s5
 8019652:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019656:	ee31 1a05 	vadd.f32	s2, s2, s10
 801965a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801965e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019662:	eeb0 6a43 	vmov.f32	s12, s6
 8019666:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801966a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801966e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019672:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019676:	ee77 2a62 	vsub.f32	s5, s14, s5
 801967a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801967e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019682:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019686:	ee12 2a90 	vmov	r2, s5
 801968a:	eef0 2a47 	vmov.f32	s5, s14
 801968e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019692:	ee13 2a10 	vmov	r2, s6
 8019696:	9311      	str	r3, [sp, #68]	; 0x44
 8019698:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801969a:	eeb0 3a67 	vmov.f32	s6, s15
 801969e:	fb92 f3f3 	sdiv	r3, r2, r3
 80196a2:	9a03      	ldr	r2, [sp, #12]
 80196a4:	9312      	str	r3, [sp, #72]	; 0x48
 80196a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80196a8:	bf08      	it	eq
 80196aa:	4613      	moveq	r3, r2
 80196ac:	e789      	b.n	80195c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80196ae:	140f      	asrs	r7, r1, #16
 80196b0:	d426      	bmi.n	8019700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80196b2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80196b6:	42bd      	cmp	r5, r7
 80196b8:	dd22      	ble.n	8019700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80196ba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80196be:	d41f      	bmi.n	8019700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80196c0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80196c4:	4560      	cmp	r0, ip
 80196c6:	dd1b      	ble.n	8019700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80196c8:	9800      	ldr	r0, [sp, #0]
 80196ca:	b22d      	sxth	r5, r5
 80196cc:	fb0c 0505 	mla	r5, ip, r5, r0
 80196d0:	5de8      	ldrb	r0, [r5, r7]
 80196d2:	9d01      	ldr	r5, [sp, #4]
 80196d4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80196d8:	0e07      	lsrs	r7, r0, #24
 80196da:	2fff      	cmp	r7, #255	; 0xff
 80196dc:	d116      	bne.n	801970c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80196de:	f06f 0501 	mvn.w	r5, #1
 80196e2:	fb05 f706 	mul.w	r7, r5, r6
 80196e6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80196ea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80196ee:	0945      	lsrs	r5, r0, #5
 80196f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80196f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80196f8:	ea4c 0505 	orr.w	r5, ip, r5
 80196fc:	4305      	orrs	r5, r0
 80196fe:	53e5      	strh	r5, [r4, r7]
 8019700:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019702:	3e01      	subs	r6, #1
 8019704:	4401      	add	r1, r0
 8019706:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019708:	4402      	add	r2, r0
 801970a:	e78e      	b.n	801962a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801970c:	b2fd      	uxtb	r5, r7
 801970e:	2f00      	cmp	r7, #0
 8019710:	d0f6      	beq.n	8019700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019712:	f06f 0701 	mvn.w	r7, #1
 8019716:	fa1f f985 	uxth.w	r9, r5
 801971a:	43ed      	mvns	r5, r5
 801971c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019720:	4377      	muls	r7, r6
 8019722:	fb1a fa09 	smulbb	sl, sl, r9
 8019726:	b2ed      	uxtb	r5, r5
 8019728:	f834 8007 	ldrh.w	r8, [r4, r7]
 801972c:	9702      	str	r7, [sp, #8]
 801972e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019732:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019736:	fb17 f709 	smulbb	r7, r7, r9
 801973a:	b2c0      	uxtb	r0, r0
 801973c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019740:	fb10 f009 	smulbb	r0, r0, r9
 8019744:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019748:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801974c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019750:	fa1f fc8c 	uxth.w	ip, ip
 8019754:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019758:	fa5f f888 	uxtb.w	r8, r8
 801975c:	fb07 a705 	mla	r7, r7, r5, sl
 8019760:	fb08 0005 	mla	r0, r8, r5, r0
 8019764:	f10c 0501 	add.w	r5, ip, #1
 8019768:	b2bf      	uxth	r7, r7
 801976a:	b280      	uxth	r0, r0
 801976c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019770:	f100 0a01 	add.w	sl, r0, #1
 8019774:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019778:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801977c:	9802      	ldr	r0, [sp, #8]
 801977e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019782:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019786:	f107 0a01 	add.w	sl, r7, #1
 801978a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801978e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019792:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019796:	ea4c 0c0a 	orr.w	ip, ip, sl
 801979a:	f824 c000 	strh.w	ip, [r4, r0]
 801979e:	e7af      	b.n	8019700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80197a0:	f04f 0800 	mov.w	r8, #0
 80197a4:	eba3 0008 	sub.w	r0, r3, r8
 80197a8:	2800      	cmp	r0, #0
 80197aa:	f77f af41 	ble.w	8019630 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80197ae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80197b2:	1410      	asrs	r0, r2, #16
 80197b4:	9f00      	ldr	r7, [sp, #0]
 80197b6:	140d      	asrs	r5, r1, #16
 80197b8:	fb06 7000 	mla	r0, r6, r0, r7
 80197bc:	5d40      	ldrb	r0, [r0, r5]
 80197be:	9d01      	ldr	r5, [sp, #4]
 80197c0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80197c4:	0e2e      	lsrs	r6, r5, #24
 80197c6:	2eff      	cmp	r6, #255	; 0xff
 80197c8:	d112      	bne.n	80197f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80197ca:	482c      	ldr	r0, [pc, #176]	; (801987c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80197cc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80197d0:	0968      	lsrs	r0, r5, #5
 80197d2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80197d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80197da:	4330      	orrs	r0, r6
 80197dc:	4328      	orrs	r0, r5
 80197de:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80197e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80197e4:	f108 0801 	add.w	r8, r8, #1
 80197e8:	4401      	add	r1, r0
 80197ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 80197ec:	4402      	add	r2, r0
 80197ee:	e7d9      	b.n	80197a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80197f0:	b2f0      	uxtb	r0, r6
 80197f2:	2e00      	cmp	r6, #0
 80197f4:	d0f5      	beq.n	80197e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80197f6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80197fa:	fa1f f980 	uxth.w	r9, r0
 80197fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019802:	43c0      	mvns	r0, r0
 8019804:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019808:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801980c:	fb16 f609 	smulbb	r6, r6, r9
 8019810:	b2c0      	uxtb	r0, r0
 8019812:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019816:	b2ed      	uxtb	r5, r5
 8019818:	fb1a fa09 	smulbb	sl, sl, r9
 801981c:	fb07 6700 	mla	r7, r7, r0, r6
 8019820:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019824:	fb15 f509 	smulbb	r5, r5, r9
 8019828:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801982c:	b2bf      	uxth	r7, r7
 801982e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019832:	fa5f fc8c 	uxtb.w	ip, ip
 8019836:	fb06 a600 	mla	r6, r6, r0, sl
 801983a:	fb0c 5500 	mla	r5, ip, r0, r5
 801983e:	1c78      	adds	r0, r7, #1
 8019840:	b2b6      	uxth	r6, r6
 8019842:	b2ad      	uxth	r5, r5
 8019844:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019848:	f105 0a01 	add.w	sl, r5, #1
 801984c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019850:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019854:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019858:	ea4a 0707 	orr.w	r7, sl, r7
 801985c:	f106 0a01 	add.w	sl, r6, #1
 8019860:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019864:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019868:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801986c:	ea47 070a 	orr.w	r7, r7, sl
 8019870:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019874:	e7b5      	b.n	80197e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019876:	b005      	add	sp, #20
 8019878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801987c:	fffff800 	.word	0xfffff800

08019880 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019884:	b087      	sub	sp, #28
 8019886:	468b      	mov	fp, r1
 8019888:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801988c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801988e:	9204      	str	r2, [sp, #16]
 8019890:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019894:	6861      	ldr	r1, [r4, #4]
 8019896:	9205      	str	r2, [sp, #20]
 8019898:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801989c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80198a0:	fb01 2000 	mla	r0, r1, r0, r2
 80198a4:	6822      	ldr	r2, [r4, #0]
 80198a6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80198aa:	f8de 2000 	ldr.w	r2, [lr]
 80198ae:	9201      	str	r2, [sp, #4]
 80198b0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80198b4:	9202      	str	r2, [sp, #8]
 80198b6:	f1bb 0f00 	cmp.w	fp, #0
 80198ba:	dc03      	bgt.n	80198c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80198bc:	9a04      	ldr	r2, [sp, #16]
 80198be:	2a00      	cmp	r2, #0
 80198c0:	f340 8142 	ble.w	8019b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80198c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80198c6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80198ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80198ce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80198d0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80198d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80198d8:	2b00      	cmp	r3, #0
 80198da:	dd0e      	ble.n	80198fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80198dc:	140c      	asrs	r4, r1, #16
 80198de:	d405      	bmi.n	80198ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80198e0:	42bc      	cmp	r4, r7
 80198e2:	da03      	bge.n	80198ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80198e4:	1414      	asrs	r4, r2, #16
 80198e6:	d401      	bmi.n	80198ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80198e8:	42b4      	cmp	r4, r6
 80198ea:	db07      	blt.n	80198fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80198ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80198ee:	3b01      	subs	r3, #1
 80198f0:	3002      	adds	r0, #2
 80198f2:	4421      	add	r1, r4
 80198f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80198f6:	4422      	add	r2, r4
 80198f8:	e7ee      	b.n	80198d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80198fa:	d019      	beq.n	8019930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80198fc:	1e5c      	subs	r4, r3, #1
 80198fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019900:	fb05 1504 	mla	r5, r5, r4, r1
 8019904:	142d      	asrs	r5, r5, #16
 8019906:	d409      	bmi.n	801991c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019908:	42bd      	cmp	r5, r7
 801990a:	da07      	bge.n	801991c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801990c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801990e:	fb05 2404 	mla	r4, r5, r4, r2
 8019912:	1424      	asrs	r4, r4, #16
 8019914:	d402      	bmi.n	801991c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019916:	42b4      	cmp	r4, r6
 8019918:	f2c0 80b1 	blt.w	8019a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801991c:	f04f 0800 	mov.w	r8, #0
 8019920:	eb03 0408 	add.w	r4, r3, r8
 8019924:	2c00      	cmp	r4, #0
 8019926:	dc3e      	bgt.n	80199a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019928:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801992c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019930:	f1bb 0f00 	cmp.w	fp, #0
 8019934:	f340 8108 	ble.w	8019b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019938:	ee30 0a04 	vadd.f32	s0, s0, s8
 801993c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801993e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019942:	f1bb 0b01 	subs.w	fp, fp, #1
 8019946:	eeb0 6a62 	vmov.f32	s12, s5
 801994a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801994e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019952:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019956:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801995a:	eeb0 6a43 	vmov.f32	s12, s6
 801995e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019962:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019966:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801996a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801996e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019972:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019976:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801997a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801997e:	ee12 2a90 	vmov	r2, s5
 8019982:	eef0 2a47 	vmov.f32	s5, s14
 8019986:	fb92 f3f3 	sdiv	r3, r2, r3
 801998a:	ee13 2a10 	vmov	r2, s6
 801998e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019990:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019992:	eeb0 3a67 	vmov.f32	s6, s15
 8019996:	fb92 f3f3 	sdiv	r3, r2, r3
 801999a:	9a04      	ldr	r2, [sp, #16]
 801999c:	9314      	str	r3, [sp, #80]	; 0x50
 801999e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199a0:	bf08      	it	eq
 80199a2:	4613      	moveq	r3, r2
 80199a4:	e787      	b.n	80198b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80199a6:	140e      	asrs	r6, r1, #16
 80199a8:	d462      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80199aa:	f8de 5008 	ldr.w	r5, [lr, #8]
 80199ae:	42b5      	cmp	r5, r6
 80199b0:	dd5e      	ble.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80199b2:	1417      	asrs	r7, r2, #16
 80199b4:	d45c      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80199b6:	f8de 400c 	ldr.w	r4, [lr, #12]
 80199ba:	42bc      	cmp	r4, r7
 80199bc:	dd58      	ble.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80199be:	b22d      	sxth	r5, r5
 80199c0:	9c02      	ldr	r4, [sp, #8]
 80199c2:	fb07 6505 	mla	r5, r7, r5, r6
 80199c6:	5d66      	ldrb	r6, [r4, r5]
 80199c8:	2e00      	cmp	r6, #0
 80199ca:	d051      	beq.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80199cc:	9c01      	ldr	r4, [sp, #4]
 80199ce:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80199d2:	f06f 0401 	mvn.w	r4, #1
 80199d6:	fb04 f408 	mul.w	r4, r4, r8
 80199da:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80199de:	5b05      	ldrh	r5, [r0, r4]
 80199e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80199e4:	9403      	str	r4, [sp, #12]
 80199e6:	9c05      	ldr	r4, [sp, #20]
 80199e8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80199ec:	4366      	muls	r6, r4
 80199ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80199f2:	1c74      	adds	r4, r6, #1
 80199f4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80199f8:	122e      	asrs	r6, r5, #8
 80199fa:	1224      	asrs	r4, r4, #8
 80199fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019a00:	00ed      	lsls	r5, r5, #3
 8019a02:	b2a7      	uxth	r7, r4
 8019a04:	43e4      	mvns	r4, r4
 8019a06:	b2ed      	uxtb	r5, r5
 8019a08:	b2e4      	uxtb	r4, r4
 8019a0a:	fb16 f604 	smulbb	r6, r6, r4
 8019a0e:	fb15 f504 	smulbb	r5, r5, r4
 8019a12:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019a16:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019a1a:	fb1a fa04 	smulbb	sl, sl, r4
 8019a1e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019a22:	fa1f fc8c 	uxth.w	ip, ip
 8019a26:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019a2a:	fa5f f989 	uxtb.w	r9, r9
 8019a2e:	fb06 a607 	mla	r6, r6, r7, sl
 8019a32:	f10c 0401 	add.w	r4, ip, #1
 8019a36:	fb09 5507 	mla	r5, r9, r7, r5
 8019a3a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019a3e:	9c03      	ldr	r4, [sp, #12]
 8019a40:	b2ad      	uxth	r5, r5
 8019a42:	b2b6      	uxth	r6, r6
 8019a44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a48:	f105 0a01 	add.w	sl, r5, #1
 8019a4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a54:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019a58:	f106 0a01 	add.w	sl, r6, #1
 8019a5c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019a60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a64:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a68:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019a6c:	f820 c004 	strh.w	ip, [r0, r4]
 8019a70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019a72:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a76:	4421      	add	r1, r4
 8019a78:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019a7a:	4422      	add	r2, r4
 8019a7c:	e750      	b.n	8019920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019a7e:	f04f 0900 	mov.w	r9, #0
 8019a82:	eba3 0409 	sub.w	r4, r3, r9
 8019a86:	2c00      	cmp	r4, #0
 8019a88:	f77f af4e 	ble.w	8019928 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019a8c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019a90:	140d      	asrs	r5, r1, #16
 8019a92:	1414      	asrs	r4, r2, #16
 8019a94:	fb06 5404 	mla	r4, r6, r4, r5
 8019a98:	9d02      	ldr	r5, [sp, #8]
 8019a9a:	5d2e      	ldrb	r6, [r5, r4]
 8019a9c:	2e00      	cmp	r6, #0
 8019a9e:	d04c      	beq.n	8019b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019aa0:	9d01      	ldr	r5, [sp, #4]
 8019aa2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019aa6:	9c05      	ldr	r4, [sp, #20]
 8019aa8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019aac:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019ab0:	4366      	muls	r6, r4
 8019ab2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019ab6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019aba:	1c74      	adds	r4, r6, #1
 8019abc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019ac0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019ac4:	122e      	asrs	r6, r5, #8
 8019ac6:	1224      	asrs	r4, r4, #8
 8019ac8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019acc:	00ed      	lsls	r5, r5, #3
 8019ace:	b2a7      	uxth	r7, r4
 8019ad0:	43e4      	mvns	r4, r4
 8019ad2:	b2ed      	uxtb	r5, r5
 8019ad4:	b2e4      	uxtb	r4, r4
 8019ad6:	fb16 f604 	smulbb	r6, r6, r4
 8019ada:	fb15 f504 	smulbb	r5, r5, r4
 8019ade:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019ae2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019ae6:	fb1a fa04 	smulbb	sl, sl, r4
 8019aea:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019aee:	fa1f fc8c 	uxth.w	ip, ip
 8019af2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019af6:	fa5f f888 	uxtb.w	r8, r8
 8019afa:	fb06 a607 	mla	r6, r6, r7, sl
 8019afe:	f10c 0401 	add.w	r4, ip, #1
 8019b02:	fb08 5507 	mla	r5, r8, r7, r5
 8019b06:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019b0a:	b2ad      	uxth	r5, r5
 8019b0c:	b2b6      	uxth	r6, r6
 8019b0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b12:	f105 0a01 	add.w	sl, r5, #1
 8019b16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b1e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019b22:	f106 0a01 	add.w	sl, r6, #1
 8019b26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019b2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b32:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019b36:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019b3a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019b3c:	f109 0901 	add.w	r9, r9, #1
 8019b40:	4421      	add	r1, r4
 8019b42:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019b44:	4422      	add	r2, r4
 8019b46:	e79c      	b.n	8019a82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019b48:	b007      	add	sp, #28
 8019b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b52:	b085      	sub	sp, #20
 8019b54:	468b      	mov	fp, r1
 8019b56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b5a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019b5c:	9203      	str	r2, [sp, #12]
 8019b5e:	6861      	ldr	r1, [r4, #4]
 8019b60:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019b64:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019b68:	fb01 2000 	mla	r0, r1, r0, r2
 8019b6c:	6822      	ldr	r2, [r4, #0]
 8019b6e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019b72:	f8d8 2000 	ldr.w	r2, [r8]
 8019b76:	9200      	str	r2, [sp, #0]
 8019b78:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019b7c:	9201      	str	r2, [sp, #4]
 8019b7e:	f1bb 0f00 	cmp.w	fp, #0
 8019b82:	dc03      	bgt.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019b84:	9a03      	ldr	r2, [sp, #12]
 8019b86:	2a00      	cmp	r2, #0
 8019b88:	f340 8146 	ble.w	8019e18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019b8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019b8e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019b92:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019b96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019b98:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019b9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ba0:	2b00      	cmp	r3, #0
 8019ba2:	dd0e      	ble.n	8019bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019ba4:	140c      	asrs	r4, r1, #16
 8019ba6:	d405      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019ba8:	42bc      	cmp	r4, r7
 8019baa:	da03      	bge.n	8019bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bac:	1414      	asrs	r4, r2, #16
 8019bae:	d401      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bb0:	42b4      	cmp	r4, r6
 8019bb2:	db07      	blt.n	8019bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019bb4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019bb6:	3b01      	subs	r3, #1
 8019bb8:	3002      	adds	r0, #2
 8019bba:	4421      	add	r1, r4
 8019bbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019bbe:	4422      	add	r2, r4
 8019bc0:	e7ee      	b.n	8019ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019bc2:	d017      	beq.n	8019bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019bc4:	1e5c      	subs	r4, r3, #1
 8019bc6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019bc8:	fb05 1504 	mla	r5, r5, r4, r1
 8019bcc:	142d      	asrs	r5, r5, #16
 8019bce:	d409      	bmi.n	8019be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019bd0:	42bd      	cmp	r5, r7
 8019bd2:	da07      	bge.n	8019be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019bd4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019bd6:	fb05 2404 	mla	r4, r5, r4, r2
 8019bda:	1424      	asrs	r4, r4, #16
 8019bdc:	d402      	bmi.n	8019be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019bde:	42b4      	cmp	r4, r6
 8019be0:	f2c0 80b3 	blt.w	8019d4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019be4:	2600      	movs	r6, #0
 8019be6:	199c      	adds	r4, r3, r6
 8019be8:	2c00      	cmp	r4, #0
 8019bea:	dc3e      	bgt.n	8019c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019bec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019bf0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019bf4:	f1bb 0f00 	cmp.w	fp, #0
 8019bf8:	f340 810e 	ble.w	8019e18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019bfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c06:	f1bb 0b01 	subs.w	fp, fp, #1
 8019c0a:	eeb0 6a62 	vmov.f32	s12, s5
 8019c0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c1a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019c1e:	eeb0 6a43 	vmov.f32	s12, s6
 8019c22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c26:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019c2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c32:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c42:	ee12 2a90 	vmov	r2, s5
 8019c46:	eef0 2a47 	vmov.f32	s5, s14
 8019c4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c4e:	ee13 2a10 	vmov	r2, s6
 8019c52:	9311      	str	r3, [sp, #68]	; 0x44
 8019c54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c56:	eeb0 3a67 	vmov.f32	s6, s15
 8019c5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c5e:	9a03      	ldr	r2, [sp, #12]
 8019c60:	9312      	str	r3, [sp, #72]	; 0x48
 8019c62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c64:	bf08      	it	eq
 8019c66:	4613      	moveq	r3, r2
 8019c68:	e789      	b.n	8019b7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019c6a:	140f      	asrs	r7, r1, #16
 8019c6c:	d418      	bmi.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019c6e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019c72:	42bd      	cmp	r5, r7
 8019c74:	dd14      	ble.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019c76:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019c7a:	d411      	bmi.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019c7c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019c80:	4564      	cmp	r4, ip
 8019c82:	dd0d      	ble.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019c84:	b22d      	sxth	r5, r5
 8019c86:	9c01      	ldr	r4, [sp, #4]
 8019c88:	fb0c 7505 	mla	r5, ip, r5, r7
 8019c8c:	5d64      	ldrb	r4, [r4, r5]
 8019c8e:	2cff      	cmp	r4, #255	; 0xff
 8019c90:	d10c      	bne.n	8019cac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019c92:	9c00      	ldr	r4, [sp, #0]
 8019c94:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019c98:	f06f 0401 	mvn.w	r4, #1
 8019c9c:	4374      	muls	r4, r6
 8019c9e:	5305      	strh	r5, [r0, r4]
 8019ca0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019ca2:	3e01      	subs	r6, #1
 8019ca4:	4421      	add	r1, r4
 8019ca6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ca8:	4422      	add	r2, r4
 8019caa:	e79c      	b.n	8019be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019cac:	2c00      	cmp	r4, #0
 8019cae:	d0f7      	beq.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019cb0:	9f00      	ldr	r7, [sp, #0]
 8019cb2:	fa1f fc84 	uxth.w	ip, r4
 8019cb6:	43e4      	mvns	r4, r4
 8019cb8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019cbc:	f06f 0501 	mvn.w	r5, #1
 8019cc0:	b2e4      	uxtb	r4, r4
 8019cc2:	4375      	muls	r5, r6
 8019cc4:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019cc8:	9502      	str	r5, [sp, #8]
 8019cca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019cce:	5b45      	ldrh	r5, [r0, r5]
 8019cd0:	122f      	asrs	r7, r5, #8
 8019cd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019cd6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019cda:	00ed      	lsls	r5, r5, #3
 8019cdc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019ce0:	fb17 f704 	smulbb	r7, r7, r4
 8019ce4:	b2ed      	uxtb	r5, r5
 8019ce6:	fb1a fa04 	smulbb	sl, sl, r4
 8019cea:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019cee:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019cf2:	fb15 f504 	smulbb	r5, r5, r4
 8019cf6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019cfa:	fa1f fe8e 	uxth.w	lr, lr
 8019cfe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d02:	fa5f f989 	uxtb.w	r9, r9
 8019d06:	fb07 a70c 	mla	r7, r7, ip, sl
 8019d0a:	f10e 0401 	add.w	r4, lr, #1
 8019d0e:	fb09 550c 	mla	r5, r9, ip, r5
 8019d12:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019d16:	9c02      	ldr	r4, [sp, #8]
 8019d18:	b2ad      	uxth	r5, r5
 8019d1a:	b2bf      	uxth	r7, r7
 8019d1c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019d20:	f105 0a01 	add.w	sl, r5, #1
 8019d24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019d28:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019d2c:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019d30:	f107 0a01 	add.w	sl, r7, #1
 8019d34:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019d38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d3c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019d40:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019d44:	f820 e004 	strh.w	lr, [r0, r4]
 8019d48:	e7aa      	b.n	8019ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019d4a:	f04f 0900 	mov.w	r9, #0
 8019d4e:	eba3 0409 	sub.w	r4, r3, r9
 8019d52:	2c00      	cmp	r4, #0
 8019d54:	f77f af4a 	ble.w	8019bec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019d58:	1414      	asrs	r4, r2, #16
 8019d5a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019d5e:	140d      	asrs	r5, r1, #16
 8019d60:	fb06 5504 	mla	r5, r6, r4, r5
 8019d64:	9c01      	ldr	r4, [sp, #4]
 8019d66:	5d64      	ldrb	r4, [r4, r5]
 8019d68:	2cff      	cmp	r4, #255	; 0xff
 8019d6a:	d10b      	bne.n	8019d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019d6c:	9c00      	ldr	r4, [sp, #0]
 8019d6e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019d72:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019d76:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019d78:	f109 0901 	add.w	r9, r9, #1
 8019d7c:	4421      	add	r1, r4
 8019d7e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019d80:	4422      	add	r2, r4
 8019d82:	e7e4      	b.n	8019d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019d84:	2c00      	cmp	r4, #0
 8019d86:	d0f6      	beq.n	8019d76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019d88:	9e00      	ldr	r6, [sp, #0]
 8019d8a:	b2a7      	uxth	r7, r4
 8019d8c:	43e4      	mvns	r4, r4
 8019d8e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019d92:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019d96:	b2e4      	uxtb	r4, r4
 8019d98:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019d9c:	122e      	asrs	r6, r5, #8
 8019d9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019da2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019da6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019daa:	00ed      	lsls	r5, r5, #3
 8019dac:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019db0:	fb16 f604 	smulbb	r6, r6, r4
 8019db4:	b2ed      	uxtb	r5, r5
 8019db6:	fb1a fa04 	smulbb	sl, sl, r4
 8019dba:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019dbe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019dc2:	fb15 f504 	smulbb	r5, r5, r4
 8019dc6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019dca:	fa1f fc8c 	uxth.w	ip, ip
 8019dce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019dd2:	fa5f fe8e 	uxtb.w	lr, lr
 8019dd6:	fb06 a607 	mla	r6, r6, r7, sl
 8019dda:	f10c 0401 	add.w	r4, ip, #1
 8019dde:	fb0e 5507 	mla	r5, lr, r7, r5
 8019de2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019de6:	b2ad      	uxth	r5, r5
 8019de8:	b2b6      	uxth	r6, r6
 8019dea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019dee:	f105 0a01 	add.w	sl, r5, #1
 8019df2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019df6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019dfa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019dfe:	f106 0a01 	add.w	sl, r6, #1
 8019e02:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019e06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019e12:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019e16:	e7ae      	b.n	8019d76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019e18:	b005      	add	sp, #20
 8019e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e22:	b085      	sub	sp, #20
 8019e24:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019e26:	9203      	str	r2, [sp, #12]
 8019e28:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019e2c:	9100      	str	r1, [sp, #0]
 8019e2e:	9201      	str	r2, [sp, #4]
 8019e30:	6841      	ldr	r1, [r0, #4]
 8019e32:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019e36:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019e3a:	fb01 2404 	mla	r4, r1, r4, r2
 8019e3e:	6802      	ldr	r2, [r0, #0]
 8019e40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019e44:	f8de 2000 	ldr.w	r2, [lr]
 8019e48:	9202      	str	r2, [sp, #8]
 8019e4a:	9a01      	ldr	r2, [sp, #4]
 8019e4c:	43d6      	mvns	r6, r2
 8019e4e:	b2f6      	uxtb	r6, r6
 8019e50:	9a00      	ldr	r2, [sp, #0]
 8019e52:	2a00      	cmp	r2, #0
 8019e54:	dc03      	bgt.n	8019e5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019e56:	9a03      	ldr	r2, [sp, #12]
 8019e58:	2a00      	cmp	r2, #0
 8019e5a:	f340 8124 	ble.w	801a0a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019e5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e60:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019e64:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019e68:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019e6a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019e6e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019e72:	2b00      	cmp	r3, #0
 8019e74:	dd0e      	ble.n	8019e94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019e76:	1408      	asrs	r0, r1, #16
 8019e78:	d405      	bmi.n	8019e86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019e7a:	4560      	cmp	r0, ip
 8019e7c:	da03      	bge.n	8019e86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019e7e:	1410      	asrs	r0, r2, #16
 8019e80:	d401      	bmi.n	8019e86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019e82:	42b8      	cmp	r0, r7
 8019e84:	db07      	blt.n	8019e96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019e86:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019e88:	3b01      	subs	r3, #1
 8019e8a:	3402      	adds	r4, #2
 8019e8c:	4401      	add	r1, r0
 8019e8e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019e90:	4402      	add	r2, r0
 8019e92:	e7ee      	b.n	8019e72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019e94:	d06e      	beq.n	8019f74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019e96:	1e58      	subs	r0, r3, #1
 8019e98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e9a:	fb05 1500 	mla	r5, r5, r0, r1
 8019e9e:	142d      	asrs	r5, r5, #16
 8019ea0:	d45c      	bmi.n	8019f5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ea2:	4565      	cmp	r5, ip
 8019ea4:	da5a      	bge.n	8019f5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ea6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ea8:	fb05 2000 	mla	r0, r5, r0, r2
 8019eac:	1400      	asrs	r0, r0, #16
 8019eae:	d455      	bmi.n	8019f5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019eb0:	42b8      	cmp	r0, r7
 8019eb2:	da53      	bge.n	8019f5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019eb4:	4699      	mov	r9, r3
 8019eb6:	46a2      	mov	sl, r4
 8019eb8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019ebc:	f1b9 0f00 	cmp.w	r9, #0
 8019ec0:	dd54      	ble.n	8019f6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019ec2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019ec6:	140d      	asrs	r5, r1, #16
 8019ec8:	1410      	asrs	r0, r2, #16
 8019eca:	f109 39ff 	add.w	r9, r9, #4294967295
 8019ece:	fb07 5000 	mla	r0, r7, r0, r5
 8019ed2:	9d02      	ldr	r5, [sp, #8]
 8019ed4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019ed8:	f8ba 5000 	ldrh.w	r5, [sl]
 8019edc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019ee0:	122f      	asrs	r7, r5, #8
 8019ee2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019ee6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019eea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019eee:	00ed      	lsls	r5, r5, #3
 8019ef0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019ef4:	fb17 f706 	smulbb	r7, r7, r6
 8019ef8:	b2ed      	uxtb	r5, r5
 8019efa:	fb18 f806 	smulbb	r8, r8, r6
 8019efe:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019f02:	10c7      	asrs	r7, r0, #3
 8019f04:	fb15 f506 	smulbb	r5, r5, r6
 8019f08:	00c0      	lsls	r0, r0, #3
 8019f0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f0e:	fa1f fc8c 	uxth.w	ip, ip
 8019f12:	b2c0      	uxtb	r0, r0
 8019f14:	fb07 870b 	mla	r7, r7, fp, r8
 8019f18:	fb00 500b 	mla	r0, r0, fp, r5
 8019f1c:	f10c 0501 	add.w	r5, ip, #1
 8019f20:	b2bf      	uxth	r7, r7
 8019f22:	b280      	uxth	r0, r0
 8019f24:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019f28:	f107 0801 	add.w	r8, r7, #1
 8019f2c:	1c45      	adds	r5, r0, #1
 8019f2e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019f32:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f36:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019f3a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f3c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019f40:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019f44:	4401      	add	r1, r0
 8019f46:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019f4a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019f4c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019f50:	4402      	add	r2, r0
 8019f52:	ea4c 0c08 	orr.w	ip, ip, r8
 8019f56:	f82a cb02 	strh.w	ip, [sl], #2
 8019f5a:	e7af      	b.n	8019ebc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019f5c:	f04f 0800 	mov.w	r8, #0
 8019f60:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019f64:	eb03 0008 	add.w	r0, r3, r8
 8019f68:	2800      	cmp	r0, #0
 8019f6a:	dc41      	bgt.n	8019ff0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019f6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f74:	9b00      	ldr	r3, [sp, #0]
 8019f76:	2b00      	cmp	r3, #0
 8019f78:	f340 8095 	ble.w	801a0a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019f7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019f80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f8a:	eef0 6a62 	vmov.f32	s13, s5
 8019f8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019f92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f9a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019f9e:	eef0 6a43 	vmov.f32	s13, s6
 8019fa2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fa6:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019faa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019fae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019fb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fc2:	ee12 2a90 	vmov	r2, s5
 8019fc6:	eef0 2a47 	vmov.f32	s5, s14
 8019fca:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fce:	ee13 2a10 	vmov	r2, s6
 8019fd2:	9311      	str	r3, [sp, #68]	; 0x44
 8019fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fd6:	eeb0 3a67 	vmov.f32	s6, s15
 8019fda:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fde:	9312      	str	r3, [sp, #72]	; 0x48
 8019fe0:	9b00      	ldr	r3, [sp, #0]
 8019fe2:	9a03      	ldr	r2, [sp, #12]
 8019fe4:	3b01      	subs	r3, #1
 8019fe6:	9300      	str	r3, [sp, #0]
 8019fe8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fea:	bf08      	it	eq
 8019fec:	4613      	moveq	r3, r2
 8019fee:	e72f      	b.n	8019e50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019ff0:	140f      	asrs	r7, r1, #16
 8019ff2:	d451      	bmi.n	801a098 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ff4:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019ff8:	42bd      	cmp	r5, r7
 8019ffa:	dd4d      	ble.n	801a098 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ffc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a000:	d44a      	bmi.n	801a098 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a002:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a006:	4560      	cmp	r0, ip
 801a008:	dd46      	ble.n	801a098 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a00a:	b22d      	sxth	r5, r5
 801a00c:	9802      	ldr	r0, [sp, #8]
 801a00e:	fb0c 7505 	mla	r5, ip, r5, r7
 801a012:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a016:	f06f 0501 	mvn.w	r5, #1
 801a01a:	fb05 fb08 	mul.w	fp, r5, r8
 801a01e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a022:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a026:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a02a:	122f      	asrs	r7, r5, #8
 801a02c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a030:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a034:	00ed      	lsls	r5, r5, #3
 801a036:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a03a:	fb17 f706 	smulbb	r7, r7, r6
 801a03e:	b2ed      	uxtb	r5, r5
 801a040:	fb19 f906 	smulbb	r9, r9, r6
 801a044:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a048:	10c7      	asrs	r7, r0, #3
 801a04a:	fb15 f506 	smulbb	r5, r5, r6
 801a04e:	00c0      	lsls	r0, r0, #3
 801a050:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a054:	fa1f fc8c 	uxth.w	ip, ip
 801a058:	b2c0      	uxtb	r0, r0
 801a05a:	fb07 970a 	mla	r7, r7, sl, r9
 801a05e:	fb00 500a 	mla	r0, r0, sl, r5
 801a062:	f10c 0501 	add.w	r5, ip, #1
 801a066:	b2bf      	uxth	r7, r7
 801a068:	b280      	uxth	r0, r0
 801a06a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a06e:	f107 0901 	add.w	r9, r7, #1
 801a072:	1c45      	adds	r5, r0, #1
 801a074:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a078:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a07c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a080:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a084:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a088:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a08c:	ea45 0c0c 	orr.w	ip, r5, ip
 801a090:	ea4c 0c09 	orr.w	ip, ip, r9
 801a094:	f824 c00b 	strh.w	ip, [r4, fp]
 801a098:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a09a:	f108 38ff 	add.w	r8, r8, #4294967295
 801a09e:	4401      	add	r1, r0
 801a0a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a0a2:	4402      	add	r2, r0
 801a0a4:	e75e      	b.n	8019f64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a0a6:	b005      	add	sp, #20
 801a0a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a0ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0b0:	b085      	sub	sp, #20
 801a0b2:	4693      	mov	fp, r2
 801a0b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a0b8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a0ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a0bc:	6870      	ldr	r0, [r6, #4]
 801a0be:	9101      	str	r1, [sp, #4]
 801a0c0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a0c4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a0c8:	fb00 2404 	mla	r4, r0, r4, r2
 801a0cc:	6832      	ldr	r2, [r6, #0]
 801a0ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a0d2:	682a      	ldr	r2, [r5, #0]
 801a0d4:	9202      	str	r2, [sp, #8]
 801a0d6:	9a01      	ldr	r2, [sp, #4]
 801a0d8:	2a00      	cmp	r2, #0
 801a0da:	dc03      	bgt.n	801a0e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a0dc:	f1bb 0f00 	cmp.w	fp, #0
 801a0e0:	f340 809a 	ble.w	801a218 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a0e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a0e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a0ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a0ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a0f0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a0f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a0f8:	2b00      	cmp	r3, #0
 801a0fa:	dd0c      	ble.n	801a116 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a0fc:	1406      	asrs	r6, r0, #16
 801a0fe:	d405      	bmi.n	801a10c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a100:	454e      	cmp	r6, r9
 801a102:	da03      	bge.n	801a10c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a104:	1416      	asrs	r6, r2, #16
 801a106:	d401      	bmi.n	801a10c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a108:	4546      	cmp	r6, r8
 801a10a:	db05      	blt.n	801a118 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a10c:	4470      	add	r0, lr
 801a10e:	4462      	add	r2, ip
 801a110:	3b01      	subs	r3, #1
 801a112:	3402      	adds	r4, #2
 801a114:	e7f0      	b.n	801a0f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a116:	d00f      	beq.n	801a138 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a118:	1e5e      	subs	r6, r3, #1
 801a11a:	fb0e 0706 	mla	r7, lr, r6, r0
 801a11e:	143f      	asrs	r7, r7, #16
 801a120:	d541      	bpl.n	801a1a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a122:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a126:	4698      	mov	r8, r3
 801a128:	9603      	str	r6, [sp, #12]
 801a12a:	f1b8 0f00 	cmp.w	r8, #0
 801a12e:	dc56      	bgt.n	801a1de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a130:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a134:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a138:	9b01      	ldr	r3, [sp, #4]
 801a13a:	2b00      	cmp	r3, #0
 801a13c:	dd6c      	ble.n	801a218 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a13e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a142:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a144:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a148:	eeb0 6a62 	vmov.f32	s12, s5
 801a14c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a150:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a154:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a158:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a15c:	eeb0 6a43 	vmov.f32	s12, s6
 801a160:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a164:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a168:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a16c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a170:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a174:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a178:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a17c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a180:	ee12 2a90 	vmov	r2, s5
 801a184:	eef0 2a47 	vmov.f32	s5, s14
 801a188:	fb92 fef3 	sdiv	lr, r2, r3
 801a18c:	ee13 2a10 	vmov	r2, s6
 801a190:	eeb0 3a67 	vmov.f32	s6, s15
 801a194:	fb92 fcf3 	sdiv	ip, r2, r3
 801a198:	9b01      	ldr	r3, [sp, #4]
 801a19a:	3b01      	subs	r3, #1
 801a19c:	9301      	str	r3, [sp, #4]
 801a19e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1a0:	bf08      	it	eq
 801a1a2:	465b      	moveq	r3, fp
 801a1a4:	e797      	b.n	801a0d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a1a6:	454f      	cmp	r7, r9
 801a1a8:	dabb      	bge.n	801a122 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a1aa:	fb0c 2606 	mla	r6, ip, r6, r2
 801a1ae:	1436      	asrs	r6, r6, #16
 801a1b0:	d4b7      	bmi.n	801a122 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a1b2:	4546      	cmp	r6, r8
 801a1b4:	dab5      	bge.n	801a122 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a1b6:	461e      	mov	r6, r3
 801a1b8:	46a0      	mov	r8, r4
 801a1ba:	2e00      	cmp	r6, #0
 801a1bc:	ddb8      	ble.n	801a130 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a1be:	1417      	asrs	r7, r2, #16
 801a1c0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a1c4:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a1c8:	9902      	ldr	r1, [sp, #8]
 801a1ca:	4470      	add	r0, lr
 801a1cc:	4462      	add	r2, ip
 801a1ce:	fb0a 9707 	mla	r7, sl, r7, r9
 801a1d2:	3e01      	subs	r6, #1
 801a1d4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a1d8:	f828 7b02 	strh.w	r7, [r8], #2
 801a1dc:	e7ed      	b.n	801a1ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a1de:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a1e2:	d414      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a1e4:	68ae      	ldr	r6, [r5, #8]
 801a1e6:	454e      	cmp	r6, r9
 801a1e8:	dd11      	ble.n	801a20e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a1ea:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a1ee:	d40e      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a1f0:	68ef      	ldr	r7, [r5, #12]
 801a1f2:	4557      	cmp	r7, sl
 801a1f4:	dd0b      	ble.n	801a20e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a1f6:	b236      	sxth	r6, r6
 801a1f8:	f06f 0101 	mvn.w	r1, #1
 801a1fc:	9f02      	ldr	r7, [sp, #8]
 801a1fe:	fb0a 9606 	mla	r6, sl, r6, r9
 801a202:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a206:	fb01 f608 	mul.w	r6, r1, r8
 801a20a:	9903      	ldr	r1, [sp, #12]
 801a20c:	538f      	strh	r7, [r1, r6]
 801a20e:	4470      	add	r0, lr
 801a210:	4462      	add	r2, ip
 801a212:	f108 38ff 	add.w	r8, r8, #4294967295
 801a216:	e788      	b.n	801a12a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a218:	b005      	add	sp, #20
 801a21a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a21e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a21e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a222:	b087      	sub	sp, #28
 801a224:	468b      	mov	fp, r1
 801a226:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a22a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a22c:	9203      	str	r2, [sp, #12]
 801a22e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a232:	6841      	ldr	r1, [r0, #4]
 801a234:	9204      	str	r2, [sp, #16]
 801a236:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a23a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a23e:	fb01 2505 	mla	r5, r1, r5, r2
 801a242:	6802      	ldr	r2, [r0, #0]
 801a244:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a248:	f8d9 2000 	ldr.w	r2, [r9]
 801a24c:	9201      	str	r2, [sp, #4]
 801a24e:	f1bb 0f00 	cmp.w	fp, #0
 801a252:	dc03      	bgt.n	801a25c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a254:	9a03      	ldr	r2, [sp, #12]
 801a256:	2a00      	cmp	r2, #0
 801a258:	f340 8158 	ble.w	801a50c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 801a25c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a25e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a262:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a266:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a268:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a26c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a270:	2b00      	cmp	r3, #0
 801a272:	dd0e      	ble.n	801a292 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a274:	1402      	asrs	r2, r0, #16
 801a276:	d405      	bmi.n	801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a278:	42ba      	cmp	r2, r7
 801a27a:	da03      	bge.n	801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a27c:	140a      	asrs	r2, r1, #16
 801a27e:	d401      	bmi.n	801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a280:	42b2      	cmp	r2, r6
 801a282:	db07      	blt.n	801a294 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a284:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a286:	3b01      	subs	r3, #1
 801a288:	3502      	adds	r5, #2
 801a28a:	4410      	add	r0, r2
 801a28c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a28e:	4411      	add	r1, r2
 801a290:	e7ee      	b.n	801a270 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a292:	d017      	beq.n	801a2c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a294:	1e5a      	subs	r2, r3, #1
 801a296:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a298:	fb04 0402 	mla	r4, r4, r2, r0
 801a29c:	1424      	asrs	r4, r4, #16
 801a29e:	d409      	bmi.n	801a2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a2a0:	42bc      	cmp	r4, r7
 801a2a2:	da07      	bge.n	801a2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a2a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a2a6:	fb04 1202 	mla	r2, r4, r2, r1
 801a2aa:	1412      	asrs	r2, r2, #16
 801a2ac:	d402      	bmi.n	801a2b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a2ae:	42b2      	cmp	r2, r6
 801a2b0:	f2c0 80bf 	blt.w	801a432 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a2b4:	2700      	movs	r7, #0
 801a2b6:	19da      	adds	r2, r3, r7
 801a2b8:	2a00      	cmp	r2, #0
 801a2ba:	dc3e      	bgt.n	801a33a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a2bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2c0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a2c4:	f1bb 0f00 	cmp.w	fp, #0
 801a2c8:	f340 8120 	ble.w	801a50c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 801a2cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a2d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2d6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a2da:	eeb0 6a62 	vmov.f32	s12, s5
 801a2de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a2e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2ea:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a2ee:	eeb0 6a43 	vmov.f32	s12, s6
 801a2f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2f6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a2fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a2fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a302:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a306:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a30a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a30e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a312:	ee12 2a90 	vmov	r2, s5
 801a316:	eef0 2a47 	vmov.f32	s5, s14
 801a31a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a31e:	ee13 2a10 	vmov	r2, s6
 801a322:	9313      	str	r3, [sp, #76]	; 0x4c
 801a324:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a326:	eeb0 3a67 	vmov.f32	s6, s15
 801a32a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a32e:	9a03      	ldr	r2, [sp, #12]
 801a330:	9314      	str	r3, [sp, #80]	; 0x50
 801a332:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a334:	bf08      	it	eq
 801a336:	4613      	moveq	r3, r2
 801a338:	e789      	b.n	801a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a33a:	1406      	asrs	r6, r0, #16
 801a33c:	d42d      	bmi.n	801a39a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a33e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a342:	42b4      	cmp	r4, r6
 801a344:	dd29      	ble.n	801a39a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a346:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a34a:	d426      	bmi.n	801a39a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a34c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a350:	4562      	cmp	r2, ip
 801a352:	dd22      	ble.n	801a39a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a354:	b224      	sxth	r4, r4
 801a356:	9a01      	ldr	r2, [sp, #4]
 801a358:	fb0c 6404 	mla	r4, ip, r4, r6
 801a35c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a360:	0e22      	lsrs	r2, r4, #24
 801a362:	d01a      	beq.n	801a39a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a364:	9e04      	ldr	r6, [sp, #16]
 801a366:	4372      	muls	r2, r6
 801a368:	1c56      	adds	r6, r2, #1
 801a36a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a36e:	0a26      	lsrs	r6, r4, #8
 801a370:	1212      	asrs	r2, r2, #8
 801a372:	9605      	str	r6, [sp, #20]
 801a374:	2aff      	cmp	r2, #255	; 0xff
 801a376:	d116      	bne.n	801a3a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a378:	f06f 0201 	mvn.w	r2, #1
 801a37c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a380:	fb02 fc07 	mul.w	ip, r2, r7
 801a384:	0962      	lsrs	r2, r4, #5
 801a386:	f026 0607 	bic.w	r6, r6, #7
 801a38a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a38e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a392:	4316      	orrs	r6, r2
 801a394:	4326      	orrs	r6, r4
 801a396:	f825 600c 	strh.w	r6, [r5, ip]
 801a39a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a39c:	3f01      	subs	r7, #1
 801a39e:	4410      	add	r0, r2
 801a3a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3a2:	4411      	add	r1, r2
 801a3a4:	e787      	b.n	801a2b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a3a6:	f06f 0601 	mvn.w	r6, #1
 801a3aa:	fa1f fa82 	uxth.w	sl, r2
 801a3ae:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a3b2:	43d2      	mvns	r2, r2
 801a3b4:	437e      	muls	r6, r7
 801a3b6:	b2e4      	uxtb	r4, r4
 801a3b8:	fb1c fc0a 	smulbb	ip, ip, sl
 801a3bc:	b2d2      	uxtb	r2, r2
 801a3be:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a3c2:	fb14 f40a 	smulbb	r4, r4, sl
 801a3c6:	9602      	str	r6, [sp, #8]
 801a3c8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a3cc:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a3d0:	fb16 f60a 	smulbb	r6, r6, sl
 801a3d4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a3d8:	fb0e ce02 	mla	lr, lr, r2, ip
 801a3dc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a3e0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a3e4:	fa1f fe8e 	uxth.w	lr, lr
 801a3e8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a3ec:	fa5f f888 	uxtb.w	r8, r8
 801a3f0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a3f4:	fb08 4402 	mla	r4, r8, r2, r4
 801a3f8:	f10e 0201 	add.w	r2, lr, #1
 801a3fc:	fa1f fc8c 	uxth.w	ip, ip
 801a400:	b2a4      	uxth	r4, r4
 801a402:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a406:	9a02      	ldr	r2, [sp, #8]
 801a408:	1c66      	adds	r6, r4, #1
 801a40a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a40e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a412:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a416:	ea46 0e0e 	orr.w	lr, r6, lr
 801a41a:	f10c 0601 	add.w	r6, ip, #1
 801a41e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a422:	0976      	lsrs	r6, r6, #5
 801a424:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a428:	ea4e 0e06 	orr.w	lr, lr, r6
 801a42c:	f825 e002 	strh.w	lr, [r5, r2]
 801a430:	e7b3      	b.n	801a39a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a432:	f04f 0800 	mov.w	r8, #0
 801a436:	eba3 0208 	sub.w	r2, r3, r8
 801a43a:	2a00      	cmp	r2, #0
 801a43c:	f77f af3e 	ble.w	801a2bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a440:	1404      	asrs	r4, r0, #16
 801a442:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a446:	140a      	asrs	r2, r1, #16
 801a448:	fb06 4202 	mla	r2, r6, r2, r4
 801a44c:	9c01      	ldr	r4, [sp, #4]
 801a44e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a452:	0e22      	lsrs	r2, r4, #24
 801a454:	d015      	beq.n	801a482 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a456:	9e04      	ldr	r6, [sp, #16]
 801a458:	4372      	muls	r2, r6
 801a45a:	1c56      	adds	r6, r2, #1
 801a45c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a460:	0a26      	lsrs	r6, r4, #8
 801a462:	1212      	asrs	r2, r2, #8
 801a464:	2aff      	cmp	r2, #255	; 0xff
 801a466:	d113      	bne.n	801a490 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a468:	0962      	lsrs	r2, r4, #5
 801a46a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a46e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a472:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a476:	f026 0607 	bic.w	r6, r6, #7
 801a47a:	4316      	orrs	r6, r2
 801a47c:	4326      	orrs	r6, r4
 801a47e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a482:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a484:	f108 0801 	add.w	r8, r8, #1
 801a488:	4410      	add	r0, r2
 801a48a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a48c:	4411      	add	r1, r2
 801a48e:	e7d2      	b.n	801a436 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a490:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a494:	fa1f fa82 	uxth.w	sl, r2
 801a498:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a49c:	43d2      	mvns	r2, r2
 801a49e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a4a2:	fb17 f70a 	smulbb	r7, r7, sl
 801a4a6:	b2d2      	uxtb	r2, r2
 801a4a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4ac:	b2e4      	uxtb	r4, r4
 801a4ae:	b2f6      	uxtb	r6, r6
 801a4b0:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a4b4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a4b8:	fb14 f40a 	smulbb	r4, r4, sl
 801a4bc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4c0:	fa1f fc8c 	uxth.w	ip, ip
 801a4c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a4c8:	fb16 f60a 	smulbb	r6, r6, sl
 801a4cc:	fa5f fe8e 	uxtb.w	lr, lr
 801a4d0:	fb0e 4402 	mla	r4, lr, r2, r4
 801a4d4:	fb07 6702 	mla	r7, r7, r2, r6
 801a4d8:	f10c 0201 	add.w	r2, ip, #1
 801a4dc:	b2a4      	uxth	r4, r4
 801a4de:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a4e2:	1c66      	adds	r6, r4, #1
 801a4e4:	b2bf      	uxth	r7, r7
 801a4e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a4ea:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a4ee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a4f2:	ea46 0c0c 	orr.w	ip, r6, ip
 801a4f6:	1c7e      	adds	r6, r7, #1
 801a4f8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a4fc:	0976      	lsrs	r6, r6, #5
 801a4fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a502:	ea4c 0c06 	orr.w	ip, ip, r6
 801a506:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a50a:	e7ba      	b.n	801a482 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a50c:	b007      	add	sp, #28
 801a50e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a514 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a518:	b085      	sub	sp, #20
 801a51a:	468b      	mov	fp, r1
 801a51c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a520:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a522:	9203      	str	r2, [sp, #12]
 801a524:	6841      	ldr	r1, [r0, #4]
 801a526:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a52a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a52e:	fb01 2404 	mla	r4, r1, r4, r2
 801a532:	6802      	ldr	r2, [r0, #0]
 801a534:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a538:	f8d8 2000 	ldr.w	r2, [r8]
 801a53c:	9201      	str	r2, [sp, #4]
 801a53e:	f1bb 0f00 	cmp.w	fp, #0
 801a542:	dc03      	bgt.n	801a54c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a544:	9a03      	ldr	r2, [sp, #12]
 801a546:	2a00      	cmp	r2, #0
 801a548:	f340 814f 	ble.w	801a7ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a54c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a54e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a552:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a556:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a558:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a55c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a560:	2b00      	cmp	r3, #0
 801a562:	dd0e      	ble.n	801a582 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a564:	1408      	asrs	r0, r1, #16
 801a566:	d405      	bmi.n	801a574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a568:	42b8      	cmp	r0, r7
 801a56a:	da03      	bge.n	801a574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a56c:	1410      	asrs	r0, r2, #16
 801a56e:	d401      	bmi.n	801a574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a570:	42b0      	cmp	r0, r6
 801a572:	db07      	blt.n	801a584 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a574:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a576:	3b01      	subs	r3, #1
 801a578:	3402      	adds	r4, #2
 801a57a:	4401      	add	r1, r0
 801a57c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a57e:	4402      	add	r2, r0
 801a580:	e7ee      	b.n	801a560 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a582:	d017      	beq.n	801a5b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a584:	1e58      	subs	r0, r3, #1
 801a586:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a588:	fb05 1500 	mla	r5, r5, r0, r1
 801a58c:	142d      	asrs	r5, r5, #16
 801a58e:	d409      	bmi.n	801a5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a590:	42bd      	cmp	r5, r7
 801a592:	da07      	bge.n	801a5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a594:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a596:	fb05 2000 	mla	r0, r5, r0, r2
 801a59a:	1400      	asrs	r0, r0, #16
 801a59c:	d402      	bmi.n	801a5a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a59e:	42b0      	cmp	r0, r6
 801a5a0:	f2c0 80ba 	blt.w	801a718 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a5a4:	2600      	movs	r6, #0
 801a5a6:	1998      	adds	r0, r3, r6
 801a5a8:	2800      	cmp	r0, #0
 801a5aa:	dc3e      	bgt.n	801a62a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a5ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5b4:	f1bb 0f00 	cmp.w	fp, #0
 801a5b8:	f340 8117 	ble.w	801a7ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a5bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5c6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a5ca:	eeb0 6a62 	vmov.f32	s12, s5
 801a5ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a5d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5da:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a5de:	eeb0 6a43 	vmov.f32	s12, s6
 801a5e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a5ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a5f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a5fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a5fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a602:	ee12 2a90 	vmov	r2, s5
 801a606:	eef0 2a47 	vmov.f32	s5, s14
 801a60a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a60e:	ee13 2a10 	vmov	r2, s6
 801a612:	9311      	str	r3, [sp, #68]	; 0x44
 801a614:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a616:	eeb0 3a67 	vmov.f32	s6, s15
 801a61a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a61e:	9a03      	ldr	r2, [sp, #12]
 801a620:	9312      	str	r3, [sp, #72]	; 0x48
 801a622:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a624:	bf08      	it	eq
 801a626:	4613      	moveq	r3, r2
 801a628:	e789      	b.n	801a53e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a62a:	140f      	asrs	r7, r1, #16
 801a62c:	d424      	bmi.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a62e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a632:	42bd      	cmp	r5, r7
 801a634:	dd20      	ble.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a636:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a63a:	d41d      	bmi.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a63c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a640:	4560      	cmp	r0, ip
 801a642:	dd19      	ble.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a644:	b22d      	sxth	r5, r5
 801a646:	9801      	ldr	r0, [sp, #4]
 801a648:	fb0c 7505 	mla	r5, ip, r5, r7
 801a64c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a650:	0e07      	lsrs	r7, r0, #24
 801a652:	2fff      	cmp	r7, #255	; 0xff
 801a654:	d116      	bne.n	801a684 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a656:	f06f 0501 	mvn.w	r5, #1
 801a65a:	fb05 f706 	mul.w	r7, r5, r6
 801a65e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a662:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a666:	0945      	lsrs	r5, r0, #5
 801a668:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a66c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a670:	ea4c 0505 	orr.w	r5, ip, r5
 801a674:	4305      	orrs	r5, r0
 801a676:	53e5      	strh	r5, [r4, r7]
 801a678:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a67a:	3e01      	subs	r6, #1
 801a67c:	4401      	add	r1, r0
 801a67e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a680:	4402      	add	r2, r0
 801a682:	e790      	b.n	801a5a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a684:	b2fd      	uxtb	r5, r7
 801a686:	2f00      	cmp	r7, #0
 801a688:	d0f6      	beq.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a68a:	f06f 0701 	mvn.w	r7, #1
 801a68e:	fa1f f985 	uxth.w	r9, r5
 801a692:	43ed      	mvns	r5, r5
 801a694:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a698:	4377      	muls	r7, r6
 801a69a:	fb1a fa09 	smulbb	sl, sl, r9
 801a69e:	b2ed      	uxtb	r5, r5
 801a6a0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a6a4:	9702      	str	r7, [sp, #8]
 801a6a6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a6aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a6ae:	fb17 f709 	smulbb	r7, r7, r9
 801a6b2:	b2c0      	uxtb	r0, r0
 801a6b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6b8:	fb10 f009 	smulbb	r0, r0, r9
 801a6bc:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a6c0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a6c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a6c8:	fa1f fc8c 	uxth.w	ip, ip
 801a6cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a6d0:	fa5f fe8e 	uxtb.w	lr, lr
 801a6d4:	fb07 a705 	mla	r7, r7, r5, sl
 801a6d8:	fb0e 0005 	mla	r0, lr, r5, r0
 801a6dc:	f10c 0501 	add.w	r5, ip, #1
 801a6e0:	b2bf      	uxth	r7, r7
 801a6e2:	b280      	uxth	r0, r0
 801a6e4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a6e8:	f100 0a01 	add.w	sl, r0, #1
 801a6ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a6f0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a6f4:	9802      	ldr	r0, [sp, #8]
 801a6f6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a6fe:	f107 0a01 	add.w	sl, r7, #1
 801a702:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a706:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a70a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a70e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a712:	f824 c000 	strh.w	ip, [r4, r0]
 801a716:	e7af      	b.n	801a678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a718:	f04f 0e00 	mov.w	lr, #0
 801a71c:	eba3 000e 	sub.w	r0, r3, lr
 801a720:	2800      	cmp	r0, #0
 801a722:	f77f af43 	ble.w	801a5ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a726:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a72a:	140d      	asrs	r5, r1, #16
 801a72c:	1410      	asrs	r0, r2, #16
 801a72e:	fb06 5000 	mla	r0, r6, r0, r5
 801a732:	9d01      	ldr	r5, [sp, #4]
 801a734:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a738:	0e2e      	lsrs	r6, r5, #24
 801a73a:	2eff      	cmp	r6, #255	; 0xff
 801a73c:	d112      	bne.n	801a764 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a73e:	482c      	ldr	r0, [pc, #176]	; (801a7f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a740:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a744:	0968      	lsrs	r0, r5, #5
 801a746:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a74a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a74e:	4330      	orrs	r0, r6
 801a750:	4328      	orrs	r0, r5
 801a752:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a756:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a758:	f10e 0e01 	add.w	lr, lr, #1
 801a75c:	4401      	add	r1, r0
 801a75e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a760:	4402      	add	r2, r0
 801a762:	e7db      	b.n	801a71c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a764:	b2f0      	uxtb	r0, r6
 801a766:	2e00      	cmp	r6, #0
 801a768:	d0f5      	beq.n	801a756 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a76a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a76e:	fa1f f980 	uxth.w	r9, r0
 801a772:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a776:	43c0      	mvns	r0, r0
 801a778:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a77c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a780:	fb16 f609 	smulbb	r6, r6, r9
 801a784:	b2c0      	uxtb	r0, r0
 801a786:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a78a:	b2ed      	uxtb	r5, r5
 801a78c:	fb1a fa09 	smulbb	sl, sl, r9
 801a790:	fb07 6700 	mla	r7, r7, r0, r6
 801a794:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a798:	fb15 f509 	smulbb	r5, r5, r9
 801a79c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a7a0:	b2bf      	uxth	r7, r7
 801a7a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a7a6:	fa5f fc8c 	uxtb.w	ip, ip
 801a7aa:	fb06 a600 	mla	r6, r6, r0, sl
 801a7ae:	fb0c 5500 	mla	r5, ip, r0, r5
 801a7b2:	1c78      	adds	r0, r7, #1
 801a7b4:	b2b6      	uxth	r6, r6
 801a7b6:	b2ad      	uxth	r5, r5
 801a7b8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a7bc:	f105 0a01 	add.w	sl, r5, #1
 801a7c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a7c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a7c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7cc:	ea4a 0707 	orr.w	r7, sl, r7
 801a7d0:	f106 0a01 	add.w	sl, r6, #1
 801a7d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a7d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a7e0:	ea47 070a 	orr.w	r7, r7, sl
 801a7e4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a7e8:	e7b5      	b.n	801a756 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a7ea:	b005      	add	sp, #20
 801a7ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7f0:	fffff800 	.word	0xfffff800

0801a7f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7f8:	b087      	sub	sp, #28
 801a7fa:	468b      	mov	fp, r1
 801a7fc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a800:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a802:	9203      	str	r2, [sp, #12]
 801a804:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a808:	6841      	ldr	r1, [r0, #4]
 801a80a:	9204      	str	r2, [sp, #16]
 801a80c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a810:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a814:	fb01 2404 	mla	r4, r1, r4, r2
 801a818:	6802      	ldr	r2, [r0, #0]
 801a81a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a81e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a822:	3201      	adds	r2, #1
 801a824:	f022 0201 	bic.w	r2, r2, #1
 801a828:	9200      	str	r2, [sp, #0]
 801a82a:	f8d9 2000 	ldr.w	r2, [r9]
 801a82e:	9201      	str	r2, [sp, #4]
 801a830:	f1bb 0f00 	cmp.w	fp, #0
 801a834:	dc03      	bgt.n	801a83e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a836:	9a03      	ldr	r2, [sp, #12]
 801a838:	2a00      	cmp	r2, #0
 801a83a:	f340 816a 	ble.w	801ab12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a83e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a840:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a844:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a848:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a84a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a84e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a852:	2b00      	cmp	r3, #0
 801a854:	dd0e      	ble.n	801a874 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a856:	1402      	asrs	r2, r0, #16
 801a858:	d405      	bmi.n	801a866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a85a:	42ba      	cmp	r2, r7
 801a85c:	da03      	bge.n	801a866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a85e:	140a      	asrs	r2, r1, #16
 801a860:	d401      	bmi.n	801a866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a862:	42b2      	cmp	r2, r6
 801a864:	db07      	blt.n	801a876 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a866:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a868:	3b01      	subs	r3, #1
 801a86a:	3402      	adds	r4, #2
 801a86c:	4410      	add	r0, r2
 801a86e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a870:	4411      	add	r1, r2
 801a872:	e7ee      	b.n	801a852 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a874:	d017      	beq.n	801a8a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a876:	1e5a      	subs	r2, r3, #1
 801a878:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a87a:	fb05 0502 	mla	r5, r5, r2, r0
 801a87e:	142d      	asrs	r5, r5, #16
 801a880:	d409      	bmi.n	801a896 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a882:	42bd      	cmp	r5, r7
 801a884:	da07      	bge.n	801a896 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a886:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a888:	fb05 1202 	mla	r2, r5, r2, r1
 801a88c:	1412      	asrs	r2, r2, #16
 801a88e:	d402      	bmi.n	801a896 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a890:	42b2      	cmp	r2, r6
 801a892:	f2c0 80c8 	blt.w	801aa26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801a896:	2700      	movs	r7, #0
 801a898:	19da      	adds	r2, r3, r7
 801a89a:	2a00      	cmp	r2, #0
 801a89c:	dc3e      	bgt.n	801a91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a89e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a8a6:	f1bb 0f00 	cmp.w	fp, #0
 801a8aa:	f340 8132 	ble.w	801ab12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a8ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a8b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8b8:	f1bb 0b01 	subs.w	fp, fp, #1
 801a8bc:	eeb0 6a62 	vmov.f32	s12, s5
 801a8c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a8c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a8c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8cc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a8d0:	eeb0 6a43 	vmov.f32	s12, s6
 801a8d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8d8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a8dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a8e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a8e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a8e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a8ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a8f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8f4:	ee12 2a90 	vmov	r2, s5
 801a8f8:	eef0 2a47 	vmov.f32	s5, s14
 801a8fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a900:	ee13 2a10 	vmov	r2, s6
 801a904:	9313      	str	r3, [sp, #76]	; 0x4c
 801a906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a908:	eeb0 3a67 	vmov.f32	s6, s15
 801a90c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a910:	9a03      	ldr	r2, [sp, #12]
 801a912:	9314      	str	r3, [sp, #80]	; 0x50
 801a914:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a916:	bf08      	it	eq
 801a918:	4613      	moveq	r3, r2
 801a91a:	e789      	b.n	801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a91c:	1405      	asrs	r5, r0, #16
 801a91e:	d436      	bmi.n	801a98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a920:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a924:	42aa      	cmp	r2, r5
 801a926:	dd32      	ble.n	801a98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a928:	140e      	asrs	r6, r1, #16
 801a92a:	d430      	bmi.n	801a98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a92c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a930:	42b2      	cmp	r2, r6
 801a932:	dd2c      	ble.n	801a98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a934:	9a00      	ldr	r2, [sp, #0]
 801a936:	fb06 5502 	mla	r5, r6, r2, r5
 801a93a:	9e01      	ldr	r6, [sp, #4]
 801a93c:	086a      	lsrs	r2, r5, #1
 801a93e:	5cb2      	ldrb	r2, [r6, r2]
 801a940:	07ee      	lsls	r6, r5, #31
 801a942:	bf54      	ite	pl
 801a944:	f002 020f 	andpl.w	r2, r2, #15
 801a948:	1112      	asrmi	r2, r2, #4
 801a94a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a94e:	b2d2      	uxtb	r2, r2
 801a950:	b1ea      	cbz	r2, 801a98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a952:	9d04      	ldr	r5, [sp, #16]
 801a954:	436a      	muls	r2, r5
 801a956:	1c55      	adds	r5, r2, #1
 801a958:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a95c:	4d6e      	ldr	r5, [pc, #440]	; (801ab18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a95e:	1212      	asrs	r2, r2, #8
 801a960:	682d      	ldr	r5, [r5, #0]
 801a962:	2aff      	cmp	r2, #255	; 0xff
 801a964:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801a968:	9605      	str	r6, [sp, #20]
 801a96a:	d116      	bne.n	801a99a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801a96c:	f06f 0201 	mvn.w	r2, #1
 801a970:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a974:	fb02 fc07 	mul.w	ip, r2, r7
 801a978:	096a      	lsrs	r2, r5, #5
 801a97a:	f026 0607 	bic.w	r6, r6, #7
 801a97e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a982:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a986:	4316      	orrs	r6, r2
 801a988:	432e      	orrs	r6, r5
 801a98a:	f824 600c 	strh.w	r6, [r4, ip]
 801a98e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a990:	3f01      	subs	r7, #1
 801a992:	4410      	add	r0, r2
 801a994:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a996:	4411      	add	r1, r2
 801a998:	e77e      	b.n	801a898 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a99a:	f06f 0601 	mvn.w	r6, #1
 801a99e:	fa1f fa82 	uxth.w	sl, r2
 801a9a2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a9a6:	43d2      	mvns	r2, r2
 801a9a8:	437e      	muls	r6, r7
 801a9aa:	b2ed      	uxtb	r5, r5
 801a9ac:	fb1c fc0a 	smulbb	ip, ip, sl
 801a9b0:	b2d2      	uxtb	r2, r2
 801a9b2:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a9b6:	fb15 f50a 	smulbb	r5, r5, sl
 801a9ba:	9602      	str	r6, [sp, #8]
 801a9bc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a9c0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a9c4:	fb16 f60a 	smulbb	r6, r6, sl
 801a9c8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a9cc:	fb0e ce02 	mla	lr, lr, r2, ip
 801a9d0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a9d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a9d8:	fa1f fe8e 	uxth.w	lr, lr
 801a9dc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a9e0:	fa5f f888 	uxtb.w	r8, r8
 801a9e4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a9e8:	fb08 5502 	mla	r5, r8, r2, r5
 801a9ec:	f10e 0201 	add.w	r2, lr, #1
 801a9f0:	fa1f fc8c 	uxth.w	ip, ip
 801a9f4:	b2ad      	uxth	r5, r5
 801a9f6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a9fa:	9a02      	ldr	r2, [sp, #8]
 801a9fc:	1c6e      	adds	r6, r5, #1
 801a9fe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801aa02:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801aa06:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801aa0a:	ea46 0e0e 	orr.w	lr, r6, lr
 801aa0e:	f10c 0601 	add.w	r6, ip, #1
 801aa12:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801aa16:	0976      	lsrs	r6, r6, #5
 801aa18:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aa1c:	ea4e 0e06 	orr.w	lr, lr, r6
 801aa20:	f824 e002 	strh.w	lr, [r4, r2]
 801aa24:	e7b3      	b.n	801a98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801aa26:	f04f 0800 	mov.w	r8, #0
 801aa2a:	eba3 0208 	sub.w	r2, r3, r8
 801aa2e:	2a00      	cmp	r2, #0
 801aa30:	f77f af35 	ble.w	801a89e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801aa34:	1402      	asrs	r2, r0, #16
 801aa36:	9e00      	ldr	r6, [sp, #0]
 801aa38:	140d      	asrs	r5, r1, #16
 801aa3a:	fb06 2505 	mla	r5, r6, r5, r2
 801aa3e:	9e01      	ldr	r6, [sp, #4]
 801aa40:	086a      	lsrs	r2, r5, #1
 801aa42:	07ed      	lsls	r5, r5, #31
 801aa44:	5cb2      	ldrb	r2, [r6, r2]
 801aa46:	bf54      	ite	pl
 801aa48:	f002 020f 	andpl.w	r2, r2, #15
 801aa4c:	1112      	asrmi	r2, r2, #4
 801aa4e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa52:	b2d2      	uxtb	r2, r2
 801aa54:	b1c2      	cbz	r2, 801aa88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801aa56:	9d04      	ldr	r5, [sp, #16]
 801aa58:	436a      	muls	r2, r5
 801aa5a:	1c55      	adds	r5, r2, #1
 801aa5c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aa60:	4d2d      	ldr	r5, [pc, #180]	; (801ab18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aa62:	1212      	asrs	r2, r2, #8
 801aa64:	682e      	ldr	r6, [r5, #0]
 801aa66:	2aff      	cmp	r2, #255	; 0xff
 801aa68:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801aa6c:	d113      	bne.n	801aa96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801aa6e:	0972      	lsrs	r2, r6, #5
 801aa70:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801aa74:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801aa78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa7c:	f025 0507 	bic.w	r5, r5, #7
 801aa80:	4315      	orrs	r5, r2
 801aa82:	4335      	orrs	r5, r6
 801aa84:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801aa88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa8a:	f108 0801 	add.w	r8, r8, #1
 801aa8e:	4410      	add	r0, r2
 801aa90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa92:	4411      	add	r1, r2
 801aa94:	e7c9      	b.n	801aa2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801aa96:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801aa9a:	fa1f fa82 	uxth.w	sl, r2
 801aa9e:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801aaa2:	43d2      	mvns	r2, r2
 801aaa4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801aaa8:	fb17 f70a 	smulbb	r7, r7, sl
 801aaac:	b2d2      	uxtb	r2, r2
 801aaae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aab2:	b2f6      	uxtb	r6, r6
 801aab4:	b2ed      	uxtb	r5, r5
 801aab6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801aaba:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801aabe:	fb16 f60a 	smulbb	r6, r6, sl
 801aac2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aac6:	fa1f fc8c 	uxth.w	ip, ip
 801aaca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aace:	fb15 f50a 	smulbb	r5, r5, sl
 801aad2:	fa5f fe8e 	uxtb.w	lr, lr
 801aad6:	fb0e 6602 	mla	r6, lr, r2, r6
 801aada:	fb07 5702 	mla	r7, r7, r2, r5
 801aade:	f10c 0201 	add.w	r2, ip, #1
 801aae2:	b2b6      	uxth	r6, r6
 801aae4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801aae8:	1c75      	adds	r5, r6, #1
 801aaea:	b2bf      	uxth	r7, r7
 801aaec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aaf0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801aaf4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aaf8:	ea45 0c0c 	orr.w	ip, r5, ip
 801aafc:	1c7d      	adds	r5, r7, #1
 801aafe:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ab02:	096d      	lsrs	r5, r5, #5
 801ab04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ab08:	ea4c 0c05 	orr.w	ip, ip, r5
 801ab0c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ab10:	e7ba      	b.n	801aa88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ab12:	b007      	add	sp, #28
 801ab14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab18:	24004a58 	.word	0x24004a58

0801ab1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab20:	b087      	sub	sp, #28
 801ab22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ab26:	f8df 8308 	ldr.w	r8, [pc, #776]	; 801ae30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ab2a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ab2c:	9101      	str	r1, [sp, #4]
 801ab2e:	9205      	str	r2, [sp, #20]
 801ab30:	6841      	ldr	r1, [r0, #4]
 801ab32:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ab36:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ab3a:	fb01 2404 	mla	r4, r1, r4, r2
 801ab3e:	6802      	ldr	r2, [r0, #0]
 801ab40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ab44:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ab48:	3201      	adds	r2, #1
 801ab4a:	f022 0201 	bic.w	r2, r2, #1
 801ab4e:	9202      	str	r2, [sp, #8]
 801ab50:	f8db 2000 	ldr.w	r2, [fp]
 801ab54:	9203      	str	r2, [sp, #12]
 801ab56:	9a01      	ldr	r2, [sp, #4]
 801ab58:	2a00      	cmp	r2, #0
 801ab5a:	dc03      	bgt.n	801ab64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ab5c:	9a05      	ldr	r2, [sp, #20]
 801ab5e:	2a00      	cmp	r2, #0
 801ab60:	f340 8162 	ble.w	801ae28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ab64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ab66:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ab6a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ab6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ab70:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ab74:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ab78:	2b00      	cmp	r3, #0
 801ab7a:	dd0e      	ble.n	801ab9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ab7c:	1402      	asrs	r2, r0, #16
 801ab7e:	d405      	bmi.n	801ab8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab80:	42ba      	cmp	r2, r7
 801ab82:	da03      	bge.n	801ab8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab84:	140a      	asrs	r2, r1, #16
 801ab86:	d401      	bmi.n	801ab8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab88:	42b2      	cmp	r2, r6
 801ab8a:	db07      	blt.n	801ab9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ab8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab8e:	3b01      	subs	r3, #1
 801ab90:	3402      	adds	r4, #2
 801ab92:	4410      	add	r0, r2
 801ab94:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ab96:	4411      	add	r1, r2
 801ab98:	e7ee      	b.n	801ab78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ab9a:	d017      	beq.n	801abcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ab9c:	1e5a      	subs	r2, r3, #1
 801ab9e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aba0:	fb05 0502 	mla	r5, r5, r2, r0
 801aba4:	142d      	asrs	r5, r5, #16
 801aba6:	d409      	bmi.n	801abbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aba8:	42bd      	cmp	r5, r7
 801abaa:	da07      	bge.n	801abbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801abac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801abae:	fb05 1202 	mla	r2, r5, r2, r1
 801abb2:	1412      	asrs	r2, r2, #16
 801abb4:	d402      	bmi.n	801abbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801abb6:	42b2      	cmp	r2, r6
 801abb8:	f2c0 80c3 	blt.w	801ad42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801abbc:	2500      	movs	r5, #0
 801abbe:	195a      	adds	r2, r3, r5
 801abc0:	2a00      	cmp	r2, #0
 801abc2:	dc3f      	bgt.n	801ac44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801abc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801abc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801abcc:	9b01      	ldr	r3, [sp, #4]
 801abce:	2b00      	cmp	r3, #0
 801abd0:	f340 812a 	ble.w	801ae28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801abd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801abd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801abde:	eeb0 6a62 	vmov.f32	s12, s5
 801abe2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801abe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801abf2:	eeb0 6a43 	vmov.f32	s12, s6
 801abf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801abfa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801abfe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac02:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac16:	ee12 2a90 	vmov	r2, s5
 801ac1a:	eef0 2a47 	vmov.f32	s5, s14
 801ac1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac22:	ee13 2a10 	vmov	r2, s6
 801ac26:	9313      	str	r3, [sp, #76]	; 0x4c
 801ac28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac2a:	eeb0 3a67 	vmov.f32	s6, s15
 801ac2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac32:	9314      	str	r3, [sp, #80]	; 0x50
 801ac34:	9b01      	ldr	r3, [sp, #4]
 801ac36:	9a05      	ldr	r2, [sp, #20]
 801ac38:	3b01      	subs	r3, #1
 801ac3a:	9301      	str	r3, [sp, #4]
 801ac3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac3e:	bf08      	it	eq
 801ac40:	4613      	moveq	r3, r2
 801ac42:	e788      	b.n	801ab56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ac44:	1406      	asrs	r6, r0, #16
 801ac46:	d42c      	bmi.n	801aca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ac48:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ac4c:	42b2      	cmp	r2, r6
 801ac4e:	dd28      	ble.n	801aca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ac50:	140f      	asrs	r7, r1, #16
 801ac52:	d426      	bmi.n	801aca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ac54:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ac58:	42ba      	cmp	r2, r7
 801ac5a:	dd22      	ble.n	801aca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ac5c:	9a02      	ldr	r2, [sp, #8]
 801ac5e:	fb07 6602 	mla	r6, r7, r2, r6
 801ac62:	9f03      	ldr	r7, [sp, #12]
 801ac64:	0872      	lsrs	r2, r6, #1
 801ac66:	07f6      	lsls	r6, r6, #31
 801ac68:	5cba      	ldrb	r2, [r7, r2]
 801ac6a:	bf54      	ite	pl
 801ac6c:	f002 020f 	andpl.w	r2, r2, #15
 801ac70:	1112      	asrmi	r2, r2, #4
 801ac72:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac76:	b2d2      	uxtb	r2, r2
 801ac78:	2aff      	cmp	r2, #255	; 0xff
 801ac7a:	d118      	bne.n	801acae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ac7c:	f06f 0601 	mvn.w	r6, #1
 801ac80:	f8d8 2000 	ldr.w	r2, [r8]
 801ac84:	fb06 f705 	mul.w	r7, r6, r5
 801ac88:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ac8c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ac90:	0956      	lsrs	r6, r2, #5
 801ac92:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ac96:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ac9a:	ea4c 0606 	orr.w	r6, ip, r6
 801ac9e:	4316      	orrs	r6, r2
 801aca0:	53e6      	strh	r6, [r4, r7]
 801aca2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aca4:	3d01      	subs	r5, #1
 801aca6:	4410      	add	r0, r2
 801aca8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801acaa:	4411      	add	r1, r2
 801acac:	e787      	b.n	801abbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801acae:	2a00      	cmp	r2, #0
 801acb0:	d0f7      	beq.n	801aca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801acb2:	f06f 0601 	mvn.w	r6, #1
 801acb6:	f8d8 c000 	ldr.w	ip, [r8]
 801acba:	fa1f f982 	uxth.w	r9, r2
 801acbe:	43d2      	mvns	r2, r2
 801acc0:	436e      	muls	r6, r5
 801acc2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801acc6:	b2d2      	uxtb	r2, r2
 801acc8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801accc:	fb1a fa09 	smulbb	sl, sl, r9
 801acd0:	9604      	str	r6, [sp, #16]
 801acd2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801acd6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801acda:	fb16 f609 	smulbb	r6, r6, r9
 801acde:	fa5f fc8c 	uxtb.w	ip, ip
 801ace2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ace6:	fb1c fc09 	smulbb	ip, ip, r9
 801acea:	fb07 6702 	mla	r7, r7, r2, r6
 801acee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801acf2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801acf6:	b2bf      	uxth	r7, r7
 801acf8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801acfc:	fa5f fe8e 	uxtb.w	lr, lr
 801ad00:	fb06 a602 	mla	r6, r6, r2, sl
 801ad04:	fb0e cc02 	mla	ip, lr, r2, ip
 801ad08:	1c7a      	adds	r2, r7, #1
 801ad0a:	b2b6      	uxth	r6, r6
 801ad0c:	fa1f fc8c 	uxth.w	ip, ip
 801ad10:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ad14:	9a04      	ldr	r2, [sp, #16]
 801ad16:	f10c 0a01 	add.w	sl, ip, #1
 801ad1a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ad1e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ad22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ad26:	ea4a 0707 	orr.w	r7, sl, r7
 801ad2a:	f106 0a01 	add.w	sl, r6, #1
 801ad2e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ad32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad3a:	ea47 070a 	orr.w	r7, r7, sl
 801ad3e:	52a7      	strh	r7, [r4, r2]
 801ad40:	e7af      	b.n	801aca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad42:	f04f 0e00 	mov.w	lr, #0
 801ad46:	eba3 020e 	sub.w	r2, r3, lr
 801ad4a:	2a00      	cmp	r2, #0
 801ad4c:	f77f af3a 	ble.w	801abc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ad50:	1402      	asrs	r2, r0, #16
 801ad52:	9e02      	ldr	r6, [sp, #8]
 801ad54:	140d      	asrs	r5, r1, #16
 801ad56:	fb06 2505 	mla	r5, r6, r5, r2
 801ad5a:	9e03      	ldr	r6, [sp, #12]
 801ad5c:	086a      	lsrs	r2, r5, #1
 801ad5e:	07ed      	lsls	r5, r5, #31
 801ad60:	5cb2      	ldrb	r2, [r6, r2]
 801ad62:	bf54      	ite	pl
 801ad64:	f002 020f 	andpl.w	r2, r2, #15
 801ad68:	1112      	asrmi	r2, r2, #4
 801ad6a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ad6e:	b2d2      	uxtb	r2, r2
 801ad70:	2aff      	cmp	r2, #255	; 0xff
 801ad72:	d115      	bne.n	801ada0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ad74:	f8d8 5000 	ldr.w	r5, [r8]
 801ad78:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ad7c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ad80:	096a      	lsrs	r2, r5, #5
 801ad82:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ad86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad8a:	4332      	orrs	r2, r6
 801ad8c:	432a      	orrs	r2, r5
 801ad8e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ad92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ad94:	f10e 0e01 	add.w	lr, lr, #1
 801ad98:	4410      	add	r0, r2
 801ad9a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ad9c:	4411      	add	r1, r2
 801ad9e:	e7d2      	b.n	801ad46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ada0:	2a00      	cmp	r2, #0
 801ada2:	d0f6      	beq.n	801ad92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ada4:	f8d8 7000 	ldr.w	r7, [r8]
 801ada8:	fa1f f982 	uxth.w	r9, r2
 801adac:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801adb0:	43d2      	mvns	r2, r2
 801adb2:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801adb6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801adba:	ea4f 262c 	mov.w	r6, ip, asr #8
 801adbe:	fb15 f509 	smulbb	r5, r5, r9
 801adc2:	b2d2      	uxtb	r2, r2
 801adc4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801adc8:	b2ff      	uxtb	r7, r7
 801adca:	fb1a fa09 	smulbb	sl, sl, r9
 801adce:	fb06 5602 	mla	r6, r6, r2, r5
 801add2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801add6:	fb17 f709 	smulbb	r7, r7, r9
 801adda:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801adde:	b2b6      	uxth	r6, r6
 801ade0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ade4:	fa5f fc8c 	uxtb.w	ip, ip
 801ade8:	fb05 a502 	mla	r5, r5, r2, sl
 801adec:	fb0c 7702 	mla	r7, ip, r2, r7
 801adf0:	1c72      	adds	r2, r6, #1
 801adf2:	b2ad      	uxth	r5, r5
 801adf4:	b2bf      	uxth	r7, r7
 801adf6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801adfa:	f107 0a01 	add.w	sl, r7, #1
 801adfe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ae02:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ae06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae0a:	ea4a 0606 	orr.w	r6, sl, r6
 801ae0e:	f105 0a01 	add.w	sl, r5, #1
 801ae12:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae1e:	ea46 060a 	orr.w	r6, r6, sl
 801ae22:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ae26:	e7b4      	b.n	801ad92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ae28:	b007      	add	sp, #28
 801ae2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae2e:	bf00      	nop
 801ae30:	24004a58 	.word	0x24004a58

0801ae34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ae34:	4770      	bx	lr

0801ae36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ae36:	4770      	bx	lr

0801ae38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ae38:	4770      	bx	lr

0801ae3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ae3a:	4770      	bx	lr

0801ae3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ae3c:	4770      	bx	lr

0801ae3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ae3e:	4770      	bx	lr

0801ae40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ae40:	4770      	bx	lr

0801ae42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ae42:	4770      	bx	lr

0801ae44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ae44:	4770      	bx	lr

0801ae46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ae46:	4770      	bx	lr

0801ae48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ae48:	4770      	bx	lr

0801ae4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ae4a:	4770      	bx	lr

0801ae4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ae4c:	4770      	bx	lr

0801ae4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ae4e:	4770      	bx	lr

0801ae50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ae50:	4770      	bx	lr

0801ae52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ae52:	4770      	bx	lr

0801ae54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ae54:	4770      	bx	lr

0801ae56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ae56:	4770      	bx	lr

0801ae58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ae58:	4770      	bx	lr

0801ae5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ae5a:	4770      	bx	lr

0801ae5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ae5c:	4770      	bx	lr

0801ae5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ae5e:	4770      	bx	lr

0801ae60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ae60:	4770      	bx	lr

0801ae62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ae62:	4770      	bx	lr

0801ae64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ae64:	4770      	bx	lr

0801ae66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ae66:	4770      	bx	lr

0801ae68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ae68:	4770      	bx	lr

0801ae6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ae6a:	4770      	bx	lr

0801ae6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ae6c:	4770      	bx	lr

0801ae6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ae6e:	4770      	bx	lr

0801ae70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ae70:	4770      	bx	lr

0801ae72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ae72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ae76:	b088      	sub	sp, #32
 801ae78:	4606      	mov	r6, r0
 801ae7a:	4688      	mov	r8, r1
 801ae7c:	4691      	mov	r9, r2
 801ae7e:	ac08      	add	r4, sp, #32
 801ae80:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ae84:	4620      	mov	r0, r4
 801ae86:	f7fd fc63 	bl	8018750 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ae8a:	6833      	ldr	r3, [r6, #0]
 801ae8c:	4605      	mov	r5, r0
 801ae8e:	4620      	mov	r0, r4
 801ae90:	699f      	ldr	r7, [r3, #24]
 801ae92:	f7fd fb71 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ae96:	4682      	mov	sl, r0
 801ae98:	4620      	mov	r0, r4
 801ae9a:	f7fd fba1 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ae9e:	9500      	str	r5, [sp, #0]
 801aea0:	464b      	mov	r3, r9
 801aea2:	4642      	mov	r2, r8
 801aea4:	4631      	mov	r1, r6
 801aea6:	e9cd a001 	strd	sl, r0, [sp, #4]
 801aeaa:	a806      	add	r0, sp, #24
 801aeac:	47b8      	blx	r7
 801aeae:	4628      	mov	r0, r5
 801aeb0:	b008      	add	sp, #32
 801aeb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801aeb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801aeb8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801aebc:	2300      	movs	r3, #0
 801aebe:	9300      	str	r3, [sp, #0]
 801aec0:	4b3d      	ldr	r3, [pc, #244]	; (801afb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801aec2:	781b      	ldrb	r3, [r3, #0]
 801aec4:	2b00      	cmp	r3, #0
 801aec6:	d137      	bne.n	801af38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801aec8:	4a3c      	ldr	r2, [pc, #240]	; (801afbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801aeca:	f9b2 2000 	ldrsh.w	r2, [r2]
 801aece:	f8ad 2004 	strh.w	r2, [sp, #4]
 801aed2:	2b00      	cmp	r3, #0
 801aed4:	d132      	bne.n	801af3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801aed6:	4b3a      	ldr	r3, [pc, #232]	; (801afc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801aed8:	f9b3 3000 	ldrsh.w	r3, [r3]
 801aedc:	ac02      	add	r4, sp, #8
 801aede:	6808      	ldr	r0, [r1, #0]
 801aee0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aee4:	ab02      	add	r3, sp, #8
 801aee6:	6849      	ldr	r1, [r1, #4]
 801aee8:	4d36      	ldr	r5, [pc, #216]	; (801afc4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801aeea:	c303      	stmia	r3!, {r0, r1}
 801aeec:	4669      	mov	r1, sp
 801aeee:	4620      	mov	r0, r4
 801aef0:	f7fa f964 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aef4:	4668      	mov	r0, sp
 801aef6:	f7fa f91d 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aefa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801aefe:	f8bd 2000 	ldrh.w	r2, [sp]
 801af02:	462f      	mov	r7, r5
 801af04:	6828      	ldr	r0, [r5, #0]
 801af06:	4413      	add	r3, r2
 801af08:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801af0c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801af10:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801af14:	4413      	add	r3, r2
 801af16:	f8ad 300a 	strh.w	r3, [sp, #10]
 801af1a:	6803      	ldr	r3, [r0, #0]
 801af1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801af1e:	4798      	blx	r3
 801af20:	f010 0f01 	tst.w	r0, #1
 801af24:	d00c      	beq.n	801af40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801af26:	6828      	ldr	r0, [r5, #0]
 801af28:	6803      	ldr	r3, [r0, #0]
 801af2a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801af2e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801af30:	4798      	blx	r3
 801af32:	b004      	add	sp, #16
 801af34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801af38:	4a21      	ldr	r2, [pc, #132]	; (801afc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801af3a:	e7c6      	b.n	801aeca <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801af3c:	4b1f      	ldr	r3, [pc, #124]	; (801afbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801af3e:	e7cb      	b.n	801aed8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801af40:	6838      	ldr	r0, [r7, #0]
 801af42:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801af46:	6803      	ldr	r3, [r0, #0]
 801af48:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801af4c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801af50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801af52:	4798      	blx	r3
 801af54:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801af58:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801af5c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801af60:	fb16 3602 	smlabb	r6, r6, r2, r3
 801af64:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801af68:	6838      	ldr	r0, [r7, #0]
 801af6a:	6803      	ldr	r3, [r0, #0]
 801af6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801af6e:	4798      	blx	r3
 801af70:	4a12      	ldr	r2, [pc, #72]	; (801afbc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801af72:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801af76:	8813      	ldrh	r3, [r2, #0]
 801af78:	4691      	mov	r9, r2
 801af7a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801af7e:	435d      	muls	r5, r3
 801af80:	fb03 1404 	mla	r4, r3, r4, r1
 801af84:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801af88:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801af8c:	6838      	ldr	r0, [r7, #0]
 801af8e:	42ac      	cmp	r4, r5
 801af90:	6803      	ldr	r3, [r0, #0]
 801af92:	d20e      	bcs.n	801afb2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801af94:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801af98:	4632      	mov	r2, r6
 801af9a:	4643      	mov	r3, r8
 801af9c:	4621      	mov	r1, r4
 801af9e:	47d0      	blx	sl
 801afa0:	f8b9 3000 	ldrh.w	r3, [r9]
 801afa4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afa8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801afac:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801afb0:	e7ec      	b.n	801af8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801afb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801afb4:	4798      	blx	r3
 801afb6:	e7bc      	b.n	801af32 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801afb8:	24004a48 	.word	0x24004a48
 801afbc:	24004a4a 	.word	0x24004a4a
 801afc0:	24004a4c 	.word	0x24004a4c
 801afc4:	24004a50 	.word	0x24004a50

0801afc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801afc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afcc:	b08b      	sub	sp, #44	; 0x2c
 801afce:	460f      	mov	r7, r1
 801afd0:	4616      	mov	r6, r2
 801afd2:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801afd6:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801afda:	f1bb 0f00 	cmp.w	fp, #0
 801afde:	d04a      	beq.n	801b076 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801afe0:	6810      	ldr	r0, [r2, #0]
 801afe2:	ad06      	add	r5, sp, #24
 801afe4:	6851      	ldr	r1, [r2, #4]
 801afe6:	c503      	stmia	r5!, {r0, r1}
 801afe8:	6818      	ldr	r0, [r3, #0]
 801afea:	ad08      	add	r5, sp, #32
 801afec:	6859      	ldr	r1, [r3, #4]
 801afee:	c503      	stmia	r5!, {r0, r1}
 801aff0:	a806      	add	r0, sp, #24
 801aff2:	f7fa f89f 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aff6:	4631      	mov	r1, r6
 801aff8:	a808      	add	r0, sp, #32
 801affa:	f7fa f8df 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801affe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b002:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b006:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b00a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b00e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b012:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b016:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b01a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b01e:	4f5f      	ldr	r7, [pc, #380]	; (801b19c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b020:	440a      	add	r2, r1
 801b022:	6838      	ldr	r0, [r7, #0]
 801b024:	46b9      	mov	r9, r7
 801b026:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b02a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b02e:	4413      	add	r3, r2
 801b030:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b034:	6803      	ldr	r3, [r0, #0]
 801b036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b038:	4798      	blx	r3
 801b03a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b03e:	d11d      	bne.n	801b07c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b040:	b9fc      	cbnz	r4, 801b082 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b042:	f010 0f01 	tst.w	r0, #1
 801b046:	d01c      	beq.n	801b082 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b048:	f8d9 0000 	ldr.w	r0, [r9]
 801b04c:	2700      	movs	r7, #0
 801b04e:	b2ad      	uxth	r5, r5
 801b050:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b054:	6801      	ldr	r1, [r0, #0]
 801b056:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b05a:	f8cd b00c 	str.w	fp, [sp, #12]
 801b05e:	9501      	str	r5, [sp, #4]
 801b060:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b064:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b068:	9402      	str	r4, [sp, #8]
 801b06a:	fa1f f488 	uxth.w	r4, r8
 801b06e:	9400      	str	r4, [sp, #0]
 801b070:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b072:	4631      	mov	r1, r6
 801b074:	47a0      	blx	r4
 801b076:	b00b      	add	sp, #44	; 0x2c
 801b078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b07c:	f010 0f04 	tst.w	r0, #4
 801b080:	e7e1      	b.n	801b046 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b082:	f8d9 0000 	ldr.w	r0, [r9]
 801b086:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b08a:	6803      	ldr	r3, [r0, #0]
 801b08c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b08e:	4798      	blx	r3
 801b090:	4b43      	ldr	r3, [pc, #268]	; (801b1a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b092:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b096:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b09a:	881a      	ldrh	r2, [r3, #0]
 801b09c:	469a      	mov	sl, r3
 801b09e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b0a2:	fb05 f502 	mul.w	r5, r5, r2
 801b0a6:	fb02 1404 	mla	r4, r2, r4, r1
 801b0aa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0ae:	d059      	beq.n	801b164 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b0b0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b0b4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b0b8:	fa1f f28b 	uxth.w	r2, fp
 801b0bc:	469e      	mov	lr, r3
 801b0be:	fa1f f989 	uxth.w	r9, r9
 801b0c2:	42ac      	cmp	r4, r5
 801b0c4:	d264      	bcs.n	801b190 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b0c6:	eb04 0a07 	add.w	sl, r4, r7
 801b0ca:	4554      	cmp	r4, sl
 801b0cc:	d23d      	bcs.n	801b14a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b0ce:	8821      	ldrh	r1, [r4, #0]
 801b0d0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b0d4:	1208      	asrs	r0, r1, #8
 801b0d6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b0da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b0de:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b0e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b0e6:	00c9      	lsls	r1, r1, #3
 801b0e8:	fb10 f009 	smulbb	r0, r0, r9
 801b0ec:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b0f0:	b2c9      	uxtb	r1, r1
 801b0f2:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b0f6:	10d8      	asrs	r0, r3, #3
 801b0f8:	fb1b fb09 	smulbb	fp, fp, r9
 801b0fc:	00db      	lsls	r3, r3, #3
 801b0fe:	fa1f fc8c 	uxth.w	ip, ip
 801b102:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b106:	fb11 f109 	smulbb	r1, r1, r9
 801b10a:	b2db      	uxtb	r3, r3
 801b10c:	fb00 b002 	mla	r0, r0, r2, fp
 801b110:	f10c 0b01 	add.w	fp, ip, #1
 801b114:	fb03 1302 	mla	r3, r3, r2, r1
 801b118:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b11c:	b29b      	uxth	r3, r3
 801b11e:	b280      	uxth	r0, r0
 801b120:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b124:	f103 0c01 	add.w	ip, r3, #1
 801b128:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b12c:	1c43      	adds	r3, r0, #1
 801b12e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b132:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b136:	0940      	lsrs	r0, r0, #5
 801b138:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b13c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b140:	ea4c 0c00 	orr.w	ip, ip, r0
 801b144:	f824 cb02 	strh.w	ip, [r4], #2
 801b148:	e7bf      	b.n	801b0ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b14a:	f8be 3000 	ldrh.w	r3, [lr]
 801b14e:	eba3 0308 	sub.w	r3, r3, r8
 801b152:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b156:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b15a:	eba3 0308 	sub.w	r3, r3, r8
 801b15e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b162:	e7ae      	b.n	801b0c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b164:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b168:	f8d9 0000 	ldr.w	r0, [r9]
 801b16c:	42ac      	cmp	r4, r5
 801b16e:	6803      	ldr	r3, [r0, #0]
 801b170:	d20e      	bcs.n	801b190 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b172:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b176:	4632      	mov	r2, r6
 801b178:	463b      	mov	r3, r7
 801b17a:	4621      	mov	r1, r4
 801b17c:	47c0      	blx	r8
 801b17e:	f8ba 3000 	ldrh.w	r3, [sl]
 801b182:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b186:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b18a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b18e:	e7eb      	b.n	801b168 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b190:	4b02      	ldr	r3, [pc, #8]	; (801b19c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b192:	6818      	ldr	r0, [r3, #0]
 801b194:	6803      	ldr	r3, [r0, #0]
 801b196:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b198:	4798      	blx	r3
 801b19a:	e76c      	b.n	801b076 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b19c:	24004a50 	.word	0x24004a50
 801b1a0:	24004a4a 	.word	0x24004a4a

0801b1a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b1a4:	b510      	push	{r4, lr}
 801b1a6:	4604      	mov	r4, r0
 801b1a8:	2104      	movs	r1, #4
 801b1aa:	f00a fe2c 	bl	8025e06 <_ZdlPvj>
 801b1ae:	4620      	mov	r0, r4
 801b1b0:	bd10      	pop	{r4, pc}

0801b1b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b1b2:	b510      	push	{r4, lr}
 801b1b4:	4604      	mov	r4, r0
 801b1b6:	2104      	movs	r1, #4
 801b1b8:	f00a fe25 	bl	8025e06 <_ZdlPvj>
 801b1bc:	4620      	mov	r0, r4
 801b1be:	bd10      	pop	{r4, pc}

0801b1c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b1c0:	b510      	push	{r4, lr}
 801b1c2:	4604      	mov	r4, r0
 801b1c4:	f640 0144 	movw	r1, #2116	; 0x844
 801b1c8:	f00a fe1d 	bl	8025e06 <_ZdlPvj>
 801b1cc:	4620      	mov	r0, r4
 801b1ce:	bd10      	pop	{r4, pc}

0801b1d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b1d0:	b510      	push	{r4, lr}
 801b1d2:	4604      	mov	r4, r0
 801b1d4:	2104      	movs	r1, #4
 801b1d6:	f00a fe16 	bl	8025e06 <_ZdlPvj>
 801b1da:	4620      	mov	r0, r4
 801b1dc:	bd10      	pop	{r4, pc}

0801b1de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b1de:	b510      	push	{r4, lr}
 801b1e0:	4604      	mov	r4, r0
 801b1e2:	2104      	movs	r1, #4
 801b1e4:	f00a fe0f 	bl	8025e06 <_ZdlPvj>
 801b1e8:	4620      	mov	r0, r4
 801b1ea:	bd10      	pop	{r4, pc}

0801b1ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b1ec:	b510      	push	{r4, lr}
 801b1ee:	4604      	mov	r4, r0
 801b1f0:	2104      	movs	r1, #4
 801b1f2:	f00a fe08 	bl	8025e06 <_ZdlPvj>
 801b1f6:	4620      	mov	r0, r4
 801b1f8:	bd10      	pop	{r4, pc}

0801b1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b1fa:	b510      	push	{r4, lr}
 801b1fc:	4604      	mov	r4, r0
 801b1fe:	2104      	movs	r1, #4
 801b200:	f00a fe01 	bl	8025e06 <_ZdlPvj>
 801b204:	4620      	mov	r0, r4
 801b206:	bd10      	pop	{r4, pc}

0801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b208:	b510      	push	{r4, lr}
 801b20a:	4604      	mov	r4, r0
 801b20c:	2104      	movs	r1, #4
 801b20e:	f00a fdfa 	bl	8025e06 <_ZdlPvj>
 801b212:	4620      	mov	r0, r4
 801b214:	bd10      	pop	{r4, pc}

0801b216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b216:	b510      	push	{r4, lr}
 801b218:	4604      	mov	r4, r0
 801b21a:	2104      	movs	r1, #4
 801b21c:	f00a fdf3 	bl	8025e06 <_ZdlPvj>
 801b220:	4620      	mov	r0, r4
 801b222:	bd10      	pop	{r4, pc}

0801b224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b224:	b510      	push	{r4, lr}
 801b226:	4604      	mov	r4, r0
 801b228:	2104      	movs	r1, #4
 801b22a:	f00a fdec 	bl	8025e06 <_ZdlPvj>
 801b22e:	4620      	mov	r0, r4
 801b230:	bd10      	pop	{r4, pc}

0801b232 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b232:	b510      	push	{r4, lr}
 801b234:	4604      	mov	r4, r0
 801b236:	2104      	movs	r1, #4
 801b238:	f00a fde5 	bl	8025e06 <_ZdlPvj>
 801b23c:	4620      	mov	r0, r4
 801b23e:	bd10      	pop	{r4, pc}

0801b240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b240:	b510      	push	{r4, lr}
 801b242:	4604      	mov	r4, r0
 801b244:	2104      	movs	r1, #4
 801b246:	f00a fdde 	bl	8025e06 <_ZdlPvj>
 801b24a:	4620      	mov	r0, r4
 801b24c:	bd10      	pop	{r4, pc}

0801b24e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b24e:	b510      	push	{r4, lr}
 801b250:	4604      	mov	r4, r0
 801b252:	2104      	movs	r1, #4
 801b254:	f00a fdd7 	bl	8025e06 <_ZdlPvj>
 801b258:	4620      	mov	r0, r4
 801b25a:	bd10      	pop	{r4, pc}

0801b25c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b25c:	b510      	push	{r4, lr}
 801b25e:	4604      	mov	r4, r0
 801b260:	2104      	movs	r1, #4
 801b262:	f00a fdd0 	bl	8025e06 <_ZdlPvj>
 801b266:	4620      	mov	r0, r4
 801b268:	bd10      	pop	{r4, pc}

0801b26a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b26a:	b510      	push	{r4, lr}
 801b26c:	4604      	mov	r4, r0
 801b26e:	2104      	movs	r1, #4
 801b270:	f00a fdc9 	bl	8025e06 <_ZdlPvj>
 801b274:	4620      	mov	r0, r4
 801b276:	bd10      	pop	{r4, pc}

0801b278 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b278:	b510      	push	{r4, lr}
 801b27a:	4604      	mov	r4, r0
 801b27c:	2104      	movs	r1, #4
 801b27e:	f00a fdc2 	bl	8025e06 <_ZdlPvj>
 801b282:	4620      	mov	r0, r4
 801b284:	bd10      	pop	{r4, pc}

0801b286 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b286:	b510      	push	{r4, lr}
 801b288:	4604      	mov	r4, r0
 801b28a:	2104      	movs	r1, #4
 801b28c:	f00a fdbb 	bl	8025e06 <_ZdlPvj>
 801b290:	4620      	mov	r0, r4
 801b292:	bd10      	pop	{r4, pc}

0801b294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b294:	b510      	push	{r4, lr}
 801b296:	4604      	mov	r4, r0
 801b298:	2104      	movs	r1, #4
 801b29a:	f00a fdb4 	bl	8025e06 <_ZdlPvj>
 801b29e:	4620      	mov	r0, r4
 801b2a0:	bd10      	pop	{r4, pc}

0801b2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b2a2:	b510      	push	{r4, lr}
 801b2a4:	4604      	mov	r4, r0
 801b2a6:	2104      	movs	r1, #4
 801b2a8:	f00a fdad 	bl	8025e06 <_ZdlPvj>
 801b2ac:	4620      	mov	r0, r4
 801b2ae:	bd10      	pop	{r4, pc}

0801b2b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b2b0:	b510      	push	{r4, lr}
 801b2b2:	4604      	mov	r4, r0
 801b2b4:	2104      	movs	r1, #4
 801b2b6:	f00a fda6 	bl	8025e06 <_ZdlPvj>
 801b2ba:	4620      	mov	r0, r4
 801b2bc:	bd10      	pop	{r4, pc}

0801b2be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b2be:	b510      	push	{r4, lr}
 801b2c0:	4604      	mov	r4, r0
 801b2c2:	2104      	movs	r1, #4
 801b2c4:	f00a fd9f 	bl	8025e06 <_ZdlPvj>
 801b2c8:	4620      	mov	r0, r4
 801b2ca:	bd10      	pop	{r4, pc}

0801b2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b2cc:	b510      	push	{r4, lr}
 801b2ce:	4604      	mov	r4, r0
 801b2d0:	2104      	movs	r1, #4
 801b2d2:	f00a fd98 	bl	8025e06 <_ZdlPvj>
 801b2d6:	4620      	mov	r0, r4
 801b2d8:	bd10      	pop	{r4, pc}

0801b2da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b2da:	b510      	push	{r4, lr}
 801b2dc:	4604      	mov	r4, r0
 801b2de:	2104      	movs	r1, #4
 801b2e0:	f00a fd91 	bl	8025e06 <_ZdlPvj>
 801b2e4:	4620      	mov	r0, r4
 801b2e6:	bd10      	pop	{r4, pc}

0801b2e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b2e8:	b510      	push	{r4, lr}
 801b2ea:	4604      	mov	r4, r0
 801b2ec:	2104      	movs	r1, #4
 801b2ee:	f00a fd8a 	bl	8025e06 <_ZdlPvj>
 801b2f2:	4620      	mov	r0, r4
 801b2f4:	bd10      	pop	{r4, pc}

0801b2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b2f6:	b510      	push	{r4, lr}
 801b2f8:	4604      	mov	r4, r0
 801b2fa:	2104      	movs	r1, #4
 801b2fc:	f00a fd83 	bl	8025e06 <_ZdlPvj>
 801b300:	4620      	mov	r0, r4
 801b302:	bd10      	pop	{r4, pc}

0801b304 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b304:	b510      	push	{r4, lr}
 801b306:	4604      	mov	r4, r0
 801b308:	2104      	movs	r1, #4
 801b30a:	f00a fd7c 	bl	8025e06 <_ZdlPvj>
 801b30e:	4620      	mov	r0, r4
 801b310:	bd10      	pop	{r4, pc}

0801b312 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b312:	b510      	push	{r4, lr}
 801b314:	4604      	mov	r4, r0
 801b316:	2104      	movs	r1, #4
 801b318:	f00a fd75 	bl	8025e06 <_ZdlPvj>
 801b31c:	4620      	mov	r0, r4
 801b31e:	bd10      	pop	{r4, pc}

0801b320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b320:	b510      	push	{r4, lr}
 801b322:	4604      	mov	r4, r0
 801b324:	2104      	movs	r1, #4
 801b326:	f00a fd6e 	bl	8025e06 <_ZdlPvj>
 801b32a:	4620      	mov	r0, r4
 801b32c:	bd10      	pop	{r4, pc}

0801b32e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b32e:	b510      	push	{r4, lr}
 801b330:	4604      	mov	r4, r0
 801b332:	2104      	movs	r1, #4
 801b334:	f00a fd67 	bl	8025e06 <_ZdlPvj>
 801b338:	4620      	mov	r0, r4
 801b33a:	bd10      	pop	{r4, pc}

0801b33c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b33c:	b510      	push	{r4, lr}
 801b33e:	4604      	mov	r4, r0
 801b340:	2104      	movs	r1, #4
 801b342:	f00a fd60 	bl	8025e06 <_ZdlPvj>
 801b346:	4620      	mov	r0, r4
 801b348:	bd10      	pop	{r4, pc}

0801b34a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b34a:	b510      	push	{r4, lr}
 801b34c:	4604      	mov	r4, r0
 801b34e:	2104      	movs	r1, #4
 801b350:	f00a fd59 	bl	8025e06 <_ZdlPvj>
 801b354:	4620      	mov	r0, r4
 801b356:	bd10      	pop	{r4, pc}

0801b358 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b35c:	b08f      	sub	sp, #60	; 0x3c
 801b35e:	461c      	mov	r4, r3
 801b360:	9205      	str	r2, [sp, #20]
 801b362:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b366:	9100      	str	r1, [sp, #0]
 801b368:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b36a:	9201      	str	r2, [sp, #4]
 801b36c:	2a00      	cmp	r2, #0
 801b36e:	f000 8116 	beq.w	801b59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 801b372:	6820      	ldr	r0, [r4, #0]
 801b374:	aa0a      	add	r2, sp, #40	; 0x28
 801b376:	6861      	ldr	r1, [r4, #4]
 801b378:	c203      	stmia	r2!, {r0, r1}
 801b37a:	6818      	ldr	r0, [r3, #0]
 801b37c:	aa0c      	add	r2, sp, #48	; 0x30
 801b37e:	6859      	ldr	r1, [r3, #4]
 801b380:	c203      	stmia	r2!, {r0, r1}
 801b382:	a80a      	add	r0, sp, #40	; 0x28
 801b384:	f7f9 fed6 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b388:	4621      	mov	r1, r4
 801b38a:	a80c      	add	r0, sp, #48	; 0x30
 801b38c:	f7f9 ff16 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b390:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b394:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b398:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b39c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b3a0:	bfdb      	ittet	le
 801b3a2:	b2b3      	uxthle	r3, r6
 801b3a4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b3a8:	2301      	movgt	r3, #1
 801b3aa:	fb92 f3f3 	sdivle	r3, r2, r3
 801b3ae:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b3b2:	441d      	add	r5, r3
 801b3b4:	fb92 f1f3 	sdiv	r1, r2, r3
 801b3b8:	fa1f fc81 	uxth.w	ip, r1
 801b3bc:	3d01      	subs	r5, #1
 801b3be:	fb0c 2413 	mls	r4, ip, r3, r2
 801b3c2:	4661      	mov	r1, ip
 801b3c4:	fb14 f406 	smulbb	r4, r4, r6
 801b3c8:	4404      	add	r4, r0
 801b3ca:	fb95 f5f3 	sdiv	r5, r5, r3
 801b3ce:	b2a4      	uxth	r4, r4
 801b3d0:	b131      	cbz	r1, 801b3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801b3d2:	9b05      	ldr	r3, [sp, #20]
 801b3d4:	9900      	ldr	r1, [sp, #0]
 801b3d6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b3da:	ba1b      	rev	r3, r3
 801b3dc:	4419      	add	r1, r3
 801b3de:	9100      	str	r1, [sp, #0]
 801b3e0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b3e4:	b2ad      	uxth	r5, r5
 801b3e6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b3ea:	4418      	add	r0, r3
 801b3ec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b3f0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b3f4:	00ad      	lsls	r5, r5, #2
 801b3f6:	441a      	add	r2, r3
 801b3f8:	4b6a      	ldr	r3, [pc, #424]	; (801b5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b3fa:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b3fe:	6818      	ldr	r0, [r3, #0]
 801b400:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b404:	6803      	ldr	r3, [r0, #0]
 801b406:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b408:	4798      	blx	r3
 801b40a:	4967      	ldr	r1, [pc, #412]	; (801b5a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b40c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b410:	2c00      	cmp	r4, #0
 801b412:	880b      	ldrh	r3, [r1, #0]
 801b414:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b418:	bf0c      	ite	eq
 801b41a:	46c6      	moveq	lr, r8
 801b41c:	f04f 0e00 	movne.w	lr, #0
 801b420:	9109      	str	r1, [sp, #36]	; 0x24
 801b422:	fb03 c202 	mla	r2, r3, r2, ip
 801b426:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b42a:	4373      	muls	r3, r6
 801b42c:	fa1f fe8e 	uxth.w	lr, lr
 801b430:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b434:	9103      	str	r1, [sp, #12]
 801b436:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b43a:	9306      	str	r3, [sp, #24]
 801b43c:	1d2b      	adds	r3, r5, #4
 801b43e:	9307      	str	r3, [sp, #28]
 801b440:	9b01      	ldr	r3, [sp, #4]
 801b442:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b446:	2300      	movs	r3, #0
 801b448:	b292      	uxth	r2, r2
 801b44a:	9302      	str	r3, [sp, #8]
 801b44c:	9204      	str	r2, [sp, #16]
 801b44e:	9a06      	ldr	r2, [sp, #24]
 801b450:	4282      	cmp	r2, r0
 801b452:	f240 809f 	bls.w	801b594 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 801b456:	b963      	cbnz	r3, 801b472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801b458:	9b00      	ldr	r3, [sp, #0]
 801b45a:	781a      	ldrb	r2, [r3, #0]
 801b45c:	0993      	lsrs	r3, r2, #6
 801b45e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b462:	9202      	str	r2, [sp, #8]
 801b464:	1e5a      	subs	r2, r3, #1
 801b466:	2a02      	cmp	r2, #2
 801b468:	d815      	bhi.n	801b496 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801b46a:	9a00      	ldr	r2, [sp, #0]
 801b46c:	b29b      	uxth	r3, r3
 801b46e:	3201      	adds	r2, #1
 801b470:	9200      	str	r2, [sp, #0]
 801b472:	b1b4      	cbz	r4, 801b4a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 801b474:	429c      	cmp	r4, r3
 801b476:	bf91      	iteee	ls
 801b478:	1b1c      	subls	r4, r3, r4
 801b47a:	1ae4      	subhi	r4, r4, r3
 801b47c:	4671      	movhi	r1, lr
 801b47e:	f04f 0a00 	movhi.w	sl, #0
 801b482:	bf9b      	ittet	ls
 801b484:	fa1f fa84 	uxthls.w	sl, r4
 801b488:	2400      	movls	r4, #0
 801b48a:	b2a4      	uxthhi	r4, r4
 801b48c:	fa1f f188 	uxthls.w	r1, r8
 801b490:	4653      	mov	r3, sl
 801b492:	468e      	mov	lr, r1
 801b494:	e7db      	b.n	801b44e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 801b496:	9a00      	ldr	r2, [sp, #0]
 801b498:	9b00      	ldr	r3, [sp, #0]
 801b49a:	3202      	adds	r2, #2
 801b49c:	785b      	ldrb	r3, [r3, #1]
 801b49e:	9200      	str	r2, [sp, #0]
 801b4a0:	e7e7      	b.n	801b472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801b4a2:	2202      	movs	r2, #2
 801b4a4:	9907      	ldr	r1, [sp, #28]
 801b4a6:	4573      	cmp	r3, lr
 801b4a8:	4615      	mov	r5, r2
 801b4aa:	9a02      	ldr	r2, [sp, #8]
 801b4ac:	bf24      	itt	cs
 801b4ae:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b4b2:	46f1      	movcs	r9, lr
 801b4b4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b4b8:	9905      	ldr	r1, [sp, #20]
 801b4ba:	bf34      	ite	cc
 801b4bc:	4699      	movcc	r9, r3
 801b4be:	fa1f fa8a 	uxthcs.w	sl, sl
 801b4c2:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b4c6:	bf38      	it	cc
 801b4c8:	ebae 0103 	subcc.w	r1, lr, r3
 801b4cc:	9a01      	ldr	r2, [sp, #4]
 801b4ce:	bf2e      	itee	cs
 801b4d0:	4621      	movcs	r1, r4
 801b4d2:	b289      	uxthcc	r1, r1
 801b4d4:	46a2      	movcc	sl, r4
 801b4d6:	2aff      	cmp	r2, #255	; 0xff
 801b4d8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b4dc:	d105      	bne.n	801b4ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 801b4de:	4481      	add	r9, r0
 801b4e0:	4581      	cmp	r9, r0
 801b4e2:	d045      	beq.n	801b570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801b4e4:	f820 cb02 	strh.w	ip, [r0], #2
 801b4e8:	e7fa      	b.n	801b4e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 801b4ea:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b4ee:	9d03      	ldr	r5, [sp, #12]
 801b4f0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b4f4:	4481      	add	r9, r0
 801b4f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b4fa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b4fe:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b502:	fa5f fc8c 	uxtb.w	ip, ip
 801b506:	436a      	muls	r2, r5
 801b508:	fb0b fb05 	mul.w	fp, fp, r5
 801b50c:	fb0c fc05 	mul.w	ip, ip, r5
 801b510:	9208      	str	r2, [sp, #32]
 801b512:	4581      	cmp	r9, r0
 801b514:	d02c      	beq.n	801b570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801b516:	8802      	ldrh	r2, [r0, #0]
 801b518:	9d04      	ldr	r5, [sp, #16]
 801b51a:	1216      	asrs	r6, r2, #8
 801b51c:	9f04      	ldr	r7, [sp, #16]
 801b51e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b522:	fb16 f605 	smulbb	r6, r6, r5
 801b526:	9d08      	ldr	r5, [sp, #32]
 801b528:	442e      	add	r6, r5
 801b52a:	10d5      	asrs	r5, r2, #3
 801b52c:	00d2      	lsls	r2, r2, #3
 801b52e:	b2b6      	uxth	r6, r6
 801b530:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b534:	b2d2      	uxtb	r2, r2
 801b536:	fb15 f507 	smulbb	r5, r5, r7
 801b53a:	fb12 f207 	smulbb	r2, r2, r7
 801b53e:	1c77      	adds	r7, r6, #1
 801b540:	445d      	add	r5, fp
 801b542:	4462      	add	r2, ip
 801b544:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b548:	b2ad      	uxth	r5, r5
 801b54a:	b292      	uxth	r2, r2
 801b54c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b550:	1c57      	adds	r7, r2, #1
 801b552:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b556:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b55a:	4316      	orrs	r6, r2
 801b55c:	1c6a      	adds	r2, r5, #1
 801b55e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b562:	096d      	lsrs	r5, r5, #5
 801b564:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b568:	432e      	orrs	r6, r5
 801b56a:	f820 6b02 	strh.w	r6, [r0], #2
 801b56e:	e7d0      	b.n	801b512 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 801b570:	4573      	cmp	r3, lr
 801b572:	d38d      	bcc.n	801b490 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801b574:	fa1f f188 	uxth.w	r1, r8
 801b578:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b57c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b57e:	1a64      	subs	r4, r4, r1
 801b580:	881b      	ldrh	r3, [r3, #0]
 801b582:	b2a4      	uxth	r4, r4
 801b584:	eba3 0308 	sub.w	r3, r3, r8
 801b588:	2c00      	cmp	r4, #0
 801b58a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b58e:	bf18      	it	ne
 801b590:	2100      	movne	r1, #0
 801b592:	e77d      	b.n	801b490 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801b594:	4b03      	ldr	r3, [pc, #12]	; (801b5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b596:	6818      	ldr	r0, [r3, #0]
 801b598:	6803      	ldr	r3, [r0, #0]
 801b59a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b59c:	4798      	blx	r3
 801b59e:	b00f      	add	sp, #60	; 0x3c
 801b5a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5a4:	24004a50 	.word	0x24004a50
 801b5a8:	24004a4a 	.word	0x24004a4a

0801b5ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5b0:	b09f      	sub	sp, #124	; 0x7c
 801b5b2:	461d      	mov	r5, r3
 801b5b4:	4604      	mov	r4, r0
 801b5b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b5b8:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b5bc:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b5c0:	9209      	str	r2, [sp, #36]	; 0x24
 801b5c2:	2a00      	cmp	r2, #0
 801b5c4:	f000 81ed 	beq.w	801b9a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 801b5c8:	6828      	ldr	r0, [r5, #0]
 801b5ca:	aa1a      	add	r2, sp, #104	; 0x68
 801b5cc:	6869      	ldr	r1, [r5, #4]
 801b5ce:	c203      	stmia	r2!, {r0, r1}
 801b5d0:	6818      	ldr	r0, [r3, #0]
 801b5d2:	aa1c      	add	r2, sp, #112	; 0x70
 801b5d4:	6859      	ldr	r1, [r3, #4]
 801b5d6:	c203      	stmia	r2!, {r0, r1}
 801b5d8:	a81a      	add	r0, sp, #104	; 0x68
 801b5da:	f7f9 fdab 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5de:	4629      	mov	r1, r5
 801b5e0:	a81c      	add	r0, sp, #112	; 0x70
 801b5e2:	f7f9 fdeb 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5e6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b5ea:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b5ee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b5f2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b5f6:	bfdb      	ittet	le
 801b5f8:	b29a      	uxthle	r2, r3
 801b5fa:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b5fe:	2201      	movgt	r2, #1
 801b600:	fb91 f2f2 	sdivle	r2, r1, r2
 801b604:	9202      	str	r2, [sp, #8]
 801b606:	9802      	ldr	r0, [sp, #8]
 801b608:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b60c:	9902      	ldr	r1, [sp, #8]
 801b60e:	fb92 f0f0 	sdiv	r0, r2, r0
 801b612:	b280      	uxth	r0, r0
 801b614:	4488      	add	r8, r1
 801b616:	9010      	str	r0, [sp, #64]	; 0x40
 801b618:	f108 38ff 	add.w	r8, r8, #4294967295
 801b61c:	9802      	ldr	r0, [sp, #8]
 801b61e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b620:	fb05 2510 	mls	r5, r5, r0, r2
 801b624:	fb98 f8f1 	sdiv	r8, r8, r1
 801b628:	fb15 f503 	smulbb	r5, r5, r3
 801b62c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b630:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b634:	f108 0801 	add.w	r8, r8, #1
 801b638:	440d      	add	r5, r1
 801b63a:	4419      	add	r1, r3
 801b63c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b640:	fa1f f888 	uxth.w	r8, r8
 801b644:	441a      	add	r2, r3
 801b646:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b64a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b64e:	b2ad      	uxth	r5, r5
 801b650:	9304      	str	r3, [sp, #16]
 801b652:	4b94      	ldr	r3, [pc, #592]	; (801b8a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b654:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b658:	6818      	ldr	r0, [r3, #0]
 801b65a:	6803      	ldr	r3, [r0, #0]
 801b65c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b65e:	4798      	blx	r3
 801b660:	4b91      	ldr	r3, [pc, #580]	; (801b8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b662:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b666:	2d00      	cmp	r5, #0
 801b668:	881a      	ldrh	r2, [r3, #0]
 801b66a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b66e:	fb02 f606 	mul.w	r6, r2, r6
 801b672:	fb02 7101 	mla	r1, r2, r1, r7
 801b676:	9318      	str	r3, [sp, #96]	; 0x60
 801b678:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b67c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b680:	f04f 0100 	mov.w	r1, #0
 801b684:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b688:	930f      	str	r3, [sp, #60]	; 0x3c
 801b68a:	4b88      	ldr	r3, [pc, #544]	; (801b8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 801b68c:	920a      	str	r2, [sp, #40]	; 0x28
 801b68e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b690:	eba3 0304 	sub.w	r3, r3, r4
 801b694:	910d      	str	r1, [sp, #52]	; 0x34
 801b696:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b69a:	9319      	str	r3, [sp, #100]	; 0x64
 801b69c:	f108 0204 	add.w	r2, r8, #4
 801b6a0:	9211      	str	r2, [sp, #68]	; 0x44
 801b6a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b6a4:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b6a8:	9215      	str	r2, [sp, #84]	; 0x54
 801b6aa:	9a04      	ldr	r2, [sp, #16]
 801b6ac:	bf18      	it	ne
 801b6ae:	2200      	movne	r2, #0
 801b6b0:	b292      	uxth	r2, r2
 801b6b2:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b6b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b6b6:	fa11 f383 	uxtah	r3, r1, r3
 801b6ba:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b6bc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b6c0:	3304      	adds	r3, #4
 801b6c2:	9306      	str	r3, [sp, #24]
 801b6c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b6c6:	4283      	cmp	r3, r0
 801b6c8:	f240 8166 	bls.w	801b998 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 801b6cc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b6d0:	f04f 0a01 	mov.w	sl, #1
 801b6d4:	9902      	ldr	r1, [sp, #8]
 801b6d6:	9e06      	ldr	r6, [sp, #24]
 801b6d8:	46d3      	mov	fp, sl
 801b6da:	4657      	mov	r7, sl
 801b6dc:	7836      	ldrb	r6, [r6, #0]
 801b6de:	fbb5 f3f3 	udiv	r3, r5, r3
 801b6e2:	1acb      	subs	r3, r1, r3
 801b6e4:	9612      	str	r6, [sp, #72]	; 0x48
 801b6e6:	3601      	adds	r6, #1
 801b6e8:	b29b      	uxth	r3, r3
 801b6ea:	9605      	str	r6, [sp, #20]
 801b6ec:	9316      	str	r3, [sp, #88]	; 0x58
 801b6ee:	9b06      	ldr	r3, [sp, #24]
 801b6f0:	7859      	ldrb	r1, [r3, #1]
 801b6f2:	789b      	ldrb	r3, [r3, #2]
 801b6f4:	021b      	lsls	r3, r3, #8
 801b6f6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b6fa:	9906      	ldr	r1, [sp, #24]
 801b6fc:	78c9      	ldrb	r1, [r1, #3]
 801b6fe:	430b      	orrs	r3, r1
 801b700:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b702:	4419      	add	r1, r3
 801b704:	1c4e      	adds	r6, r1, #1
 801b706:	7849      	ldrb	r1, [r1, #1]
 801b708:	9603      	str	r6, [sp, #12]
 801b70a:	0209      	lsls	r1, r1, #8
 801b70c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b70e:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b712:	5cf3      	ldrb	r3, [r6, r3]
 801b714:	4319      	orrs	r1, r3
 801b716:	b28b      	uxth	r3, r1
 801b718:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b71c:	930c      	str	r3, [sp, #48]	; 0x30
 801b71e:	2300      	movs	r3, #0
 801b720:	9307      	str	r3, [sp, #28]
 801b722:	469c      	mov	ip, r3
 801b724:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b728:	930e      	str	r3, [sp, #56]	; 0x38
 801b72a:	2d00      	cmp	r5, #0
 801b72c:	d07e      	beq.n	801b82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 801b72e:	42af      	cmp	r7, r5
 801b730:	d26e      	bcs.n	801b810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801b732:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b734:	1bed      	subs	r5, r5, r7
 801b736:	9201      	str	r2, [sp, #4]
 801b738:	4283      	cmp	r3, r0
 801b73a:	b2ad      	uxth	r5, r5
 801b73c:	d802      	bhi.n	801b744 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801b73e:	e073      	b.n	801b828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b740:	2b00      	cmp	r3, #0
 801b742:	d15f      	bne.n	801b804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801b744:	9b03      	ldr	r3, [sp, #12]
 801b746:	f1cb 0207 	rsb	r2, fp, #7
 801b74a:	785b      	ldrb	r3, [r3, #1]
 801b74c:	4093      	lsls	r3, r2
 801b74e:	005b      	lsls	r3, r3, #1
 801b750:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b754:	9b03      	ldr	r3, [sp, #12]
 801b756:	781b      	ldrb	r3, [r3, #0]
 801b758:	fa43 f30b 	asr.w	r3, r3, fp
 801b75c:	b2db      	uxtb	r3, r3
 801b75e:	4313      	orrs	r3, r2
 801b760:	f10b 0201 	add.w	r2, fp, #1
 801b764:	fa5f fb82 	uxtb.w	fp, r2
 801b768:	9a03      	ldr	r2, [sp, #12]
 801b76a:	b29f      	uxth	r7, r3
 801b76c:	f1bb 0f08 	cmp.w	fp, #8
 801b770:	bf13      	iteet	ne
 801b772:	3201      	addne	r2, #1
 801b774:	3202      	addeq	r2, #2
 801b776:	f04f 0b00 	moveq.w	fp, #0
 801b77a:	9203      	strne	r2, [sp, #12]
 801b77c:	bf08      	it	eq
 801b77e:	9203      	streq	r2, [sp, #12]
 801b780:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b782:	42ba      	cmp	r2, r7
 801b784:	d309      	bcc.n	801b79a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801b786:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b78a:	2301      	movs	r3, #1
 801b78c:	9a05      	ldr	r2, [sp, #20]
 801b78e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b792:	d30e      	bcc.n	801b7b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801b794:	469a      	mov	sl, r3
 801b796:	2600      	movs	r6, #0
 801b798:	e035      	b.n	801b806 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801b79a:	9b05      	ldr	r3, [sp, #20]
 801b79c:	429f      	cmp	r7, r3
 801b79e:	d318      	bcc.n	801b7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 801b7a0:	eb04 030a 	add.w	r3, r4, sl
 801b7a4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b7a8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b7ac:	f10a 0301 	add.w	r3, sl, #1
 801b7b0:	b29b      	uxth	r3, r3
 801b7b2:	9a05      	ldr	r2, [sp, #20]
 801b7b4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b7b8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b7bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b7be:	7116      	strb	r6, [r2, #4]
 801b7c0:	f10a 0601 	add.w	r6, sl, #1
 801b7c4:	80d1      	strh	r1, [r2, #6]
 801b7c6:	7156      	strb	r6, [r2, #5]
 801b7c8:	9a05      	ldr	r2, [sp, #20]
 801b7ca:	3201      	adds	r2, #1
 801b7cc:	b292      	uxth	r2, r2
 801b7ce:	9205      	str	r2, [sp, #20]
 801b7d0:	e7e0      	b.n	801b794 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801b7d2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b7d6:	463a      	mov	r2, r7
 801b7d8:	795b      	ldrb	r3, [r3, #5]
 801b7da:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b7de:	4426      	add	r6, r4
 801b7e0:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b7e2:	eb01 0c06 	add.w	ip, r1, r6
 801b7e6:	f1bc 0f00 	cmp.w	ip, #0
 801b7ea:	dd07      	ble.n	801b7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 801b7ec:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b7f0:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b7f4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b7f8:	88d2      	ldrh	r2, [r2, #6]
 801b7fa:	e7f1      	b.n	801b7e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 801b7fc:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b800:	b29b      	uxth	r3, r3
 801b802:	e7c3      	b.n	801b78c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801b804:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b806:	970c      	str	r7, [sp, #48]	; 0x30
 801b808:	46b4      	mov	ip, r6
 801b80a:	9a01      	ldr	r2, [sp, #4]
 801b80c:	461f      	mov	r7, r3
 801b80e:	e78c      	b.n	801b72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 801b810:	1b7b      	subs	r3, r7, r5
 801b812:	eb0c 0605 	add.w	r6, ip, r5
 801b816:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b81a:	b29b      	uxth	r3, r3
 801b81c:	b2b6      	uxth	r6, r6
 801b81e:	9201      	str	r2, [sp, #4]
 801b820:	2500      	movs	r5, #0
 801b822:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b824:	4282      	cmp	r2, r0
 801b826:	d88b      	bhi.n	801b740 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b828:	9a01      	ldr	r2, [sp, #4]
 801b82a:	e74b      	b.n	801b6c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 801b82c:	4297      	cmp	r7, r2
 801b82e:	d332      	bcc.n	801b896 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 801b830:	1abb      	subs	r3, r7, r2
 801b832:	9208      	str	r2, [sp, #32]
 801b834:	9501      	str	r5, [sp, #4]
 801b836:	b29b      	uxth	r3, r3
 801b838:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b83a:	29ff      	cmp	r1, #255	; 0xff
 801b83c:	9908      	ldr	r1, [sp, #32]
 801b83e:	eb0c 0601 	add.w	r6, ip, r1
 801b842:	d135      	bne.n	801b8b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b844:	f1a0 0e02 	sub.w	lr, r0, #2
 801b848:	b2b6      	uxth	r6, r6
 801b84a:	45b4      	cmp	ip, r6
 801b84c:	f040 808c 	bne.w	801b968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 801b850:	9908      	ldr	r1, [sp, #32]
 801b852:	4297      	cmp	r7, r2
 801b854:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b858:	d3e2      	bcc.n	801b820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801b85a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b85c:	9904      	ldr	r1, [sp, #16]
 801b85e:	8812      	ldrh	r2, [r2, #0]
 801b860:	1a52      	subs	r2, r2, r1
 801b862:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b864:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b868:	9a07      	ldr	r2, [sp, #28]
 801b86a:	3201      	adds	r2, #1
 801b86c:	428a      	cmp	r2, r1
 801b86e:	9207      	str	r2, [sp, #28]
 801b870:	f040 8087 	bne.w	801b982 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 801b874:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b878:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b87c:	9b04      	ldr	r3, [sp, #16]
 801b87e:	1bed      	subs	r5, r5, r7
 801b880:	b2ad      	uxth	r5, r5
 801b882:	2d00      	cmp	r5, #0
 801b884:	bf08      	it	eq
 801b886:	461a      	moveq	r2, r3
 801b888:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b88a:	bf18      	it	ne
 801b88c:	2200      	movne	r2, #0
 801b88e:	3301      	adds	r3, #1
 801b890:	b292      	uxth	r2, r2
 801b892:	930d      	str	r3, [sp, #52]	; 0x34
 801b894:	e70d      	b.n	801b6b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801b896:	1bd1      	subs	r1, r2, r7
 801b898:	9708      	str	r7, [sp, #32]
 801b89a:	b28b      	uxth	r3, r1
 801b89c:	9301      	str	r3, [sp, #4]
 801b89e:	462b      	mov	r3, r5
 801b8a0:	e7ca      	b.n	801b838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 801b8a2:	bf00      	nop
 801b8a4:	24004a50 	.word	0x24004a50
 801b8a8:	24004a4a 	.word	0x24004a4a
 801b8ac:	fffff7fb 	.word	0xfffff7fb
 801b8b0:	b2b6      	uxth	r6, r6
 801b8b2:	900b      	str	r0, [sp, #44]	; 0x2c
 801b8b4:	45b4      	cmp	ip, r6
 801b8b6:	d0cb      	beq.n	801b850 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 801b8b8:	f10c 0101 	add.w	r1, ip, #1
 801b8bc:	44a4      	add	ip, r4
 801b8be:	9117      	str	r1, [sp, #92]	; 0x5c
 801b8c0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b8c4:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b8c6:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b8ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b8cc:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b8d0:	f8b1 c000 	ldrh.w	ip, [r1]
 801b8d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b8d6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b8da:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b8de:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b8e2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b8e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b8ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b8ee:	fb1e fe01 	smulbb	lr, lr, r1
 801b8f2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b8f4:	fa5f fc8c 	uxtb.w	ip, ip
 801b8f8:	fb08 e801 	mla	r8, r8, r1, lr
 801b8fc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b900:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b902:	00ed      	lsls	r5, r5, #3
 801b904:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b908:	fa1f f888 	uxth.w	r8, r8
 801b90c:	fb19 f901 	smulbb	r9, r9, r1
 801b910:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b912:	b2ed      	uxtb	r5, r5
 801b914:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b918:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b91a:	fb1c fc01 	smulbb	ip, ip, r1
 801b91e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b920:	fa1f fe8e 	uxth.w	lr, lr
 801b924:	fb05 c501 	mla	r5, r5, r1, ip
 801b928:	f108 0c01 	add.w	ip, r8, #1
 801b92c:	f10e 0901 	add.w	r9, lr, #1
 801b930:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b932:	b2ad      	uxth	r5, r5
 801b934:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b938:	f105 0c01 	add.w	ip, r5, #1
 801b93c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b940:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b944:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b948:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b94c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b950:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b954:	ea4c 0808 	orr.w	r8, ip, r8
 801b958:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b95c:	ea48 0809 	orr.w	r8, r8, r9
 801b960:	f821 8b02 	strh.w	r8, [r1], #2
 801b964:	910b      	str	r1, [sp, #44]	; 0x2c
 801b966:	e7a5      	b.n	801b8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 801b968:	f10c 0801 	add.w	r8, ip, #1
 801b96c:	44a4      	add	ip, r4
 801b96e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b970:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b974:	fa1f fc88 	uxth.w	ip, r8
 801b978:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b97c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b980:	e763      	b.n	801b84a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801b982:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b986:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b98a:	1aad      	subs	r5, r5, r2
 801b98c:	b2ad      	uxth	r5, r5
 801b98e:	2d00      	cmp	r5, #0
 801b990:	bf18      	it	ne
 801b992:	2200      	movne	r2, #0
 801b994:	9201      	str	r2, [sp, #4]
 801b996:	e744      	b.n	801b822 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 801b998:	4b03      	ldr	r3, [pc, #12]	; (801b9a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801b99a:	6818      	ldr	r0, [r3, #0]
 801b99c:	6803      	ldr	r3, [r0, #0]
 801b99e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b9a0:	4798      	blx	r3
 801b9a2:	b01f      	add	sp, #124	; 0x7c
 801b9a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9a8:	24004a50 	.word	0x24004a50

0801b9ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b9ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9b0:	b08f      	sub	sp, #60	; 0x3c
 801b9b2:	461c      	mov	r4, r3
 801b9b4:	460f      	mov	r7, r1
 801b9b6:	9203      	str	r2, [sp, #12]
 801b9b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b9bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b9be:	9202      	str	r2, [sp, #8]
 801b9c0:	2a00      	cmp	r2, #0
 801b9c2:	f000 8128 	beq.w	801bc16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b9c6:	6820      	ldr	r0, [r4, #0]
 801b9c8:	aa0a      	add	r2, sp, #40	; 0x28
 801b9ca:	6861      	ldr	r1, [r4, #4]
 801b9cc:	c203      	stmia	r2!, {r0, r1}
 801b9ce:	6818      	ldr	r0, [r3, #0]
 801b9d0:	aa0c      	add	r2, sp, #48	; 0x30
 801b9d2:	6859      	ldr	r1, [r3, #4]
 801b9d4:	c203      	stmia	r2!, {r0, r1}
 801b9d6:	a80a      	add	r0, sp, #40	; 0x28
 801b9d8:	f7f9 fbac 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9dc:	4621      	mov	r1, r4
 801b9de:	a80c      	add	r0, sp, #48	; 0x30
 801b9e0:	f7f9 fbec 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b9e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b9e8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b9ec:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b9f0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b9f4:	bfdb      	ittet	le
 801b9f6:	b2b3      	uxthle	r3, r6
 801b9f8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b9fc:	2301      	movgt	r3, #1
 801b9fe:	fb92 f3f3 	sdivle	r3, r2, r3
 801ba02:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ba06:	441d      	add	r5, r3
 801ba08:	fb92 f1f3 	sdiv	r1, r2, r3
 801ba0c:	fa1f fc81 	uxth.w	ip, r1
 801ba10:	3d01      	subs	r5, #1
 801ba12:	fb0c 2413 	mls	r4, ip, r3, r2
 801ba16:	4661      	mov	r1, ip
 801ba18:	fb14 f406 	smulbb	r4, r4, r6
 801ba1c:	4404      	add	r4, r0
 801ba1e:	fb95 f5f3 	sdiv	r5, r5, r3
 801ba22:	b2a4      	uxth	r4, r4
 801ba24:	b121      	cbz	r1, 801ba30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801ba26:	9b03      	ldr	r3, [sp, #12]
 801ba28:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ba2c:	ba1b      	rev	r3, r3
 801ba2e:	441f      	add	r7, r3
 801ba30:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ba34:	b2ad      	uxth	r5, r5
 801ba36:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ba3a:	4418      	add	r0, r3
 801ba3c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ba40:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ba44:	00ad      	lsls	r5, r5, #2
 801ba46:	441a      	add	r2, r3
 801ba48:	4b74      	ldr	r3, [pc, #464]	; (801bc1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ba4a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ba4e:	6818      	ldr	r0, [r3, #0]
 801ba50:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ba54:	6803      	ldr	r3, [r0, #0]
 801ba56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ba58:	4798      	blx	r3
 801ba5a:	4a71      	ldr	r2, [pc, #452]	; (801bc20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801ba5c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801ba60:	2c00      	cmp	r4, #0
 801ba62:	8813      	ldrh	r3, [r2, #0]
 801ba64:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ba68:	bf0c      	ite	eq
 801ba6a:	46c8      	moveq	r8, r9
 801ba6c:	f04f 0800 	movne.w	r8, #0
 801ba70:	9209      	str	r2, [sp, #36]	; 0x24
 801ba72:	fb03 c101 	mla	r1, r3, r1, ip
 801ba76:	4373      	muls	r3, r6
 801ba78:	fa1f f888 	uxth.w	r8, r8
 801ba7c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ba80:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ba84:	9304      	str	r3, [sp, #16]
 801ba86:	1d2b      	adds	r3, r5, #4
 801ba88:	9305      	str	r3, [sp, #20]
 801ba8a:	2300      	movs	r3, #0
 801ba8c:	9301      	str	r3, [sp, #4]
 801ba8e:	9a04      	ldr	r2, [sp, #16]
 801ba90:	4282      	cmp	r2, r0
 801ba92:	f240 80bb 	bls.w	801bc0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801ba96:	b95b      	cbnz	r3, 801bab0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 801ba98:	783a      	ldrb	r2, [r7, #0]
 801ba9a:	0993      	lsrs	r3, r2, #6
 801ba9c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801baa0:	9201      	str	r2, [sp, #4]
 801baa2:	1e5a      	subs	r2, r3, #1
 801baa4:	2a02      	cmp	r2, #2
 801baa6:	bf8d      	iteet	hi
 801baa8:	787b      	ldrbhi	r3, [r7, #1]
 801baaa:	3701      	addls	r7, #1
 801baac:	b29b      	uxthls	r3, r3
 801baae:	3702      	addhi	r7, #2
 801bab0:	b184      	cbz	r4, 801bad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801bab2:	429c      	cmp	r4, r3
 801bab4:	bf91      	iteee	ls
 801bab6:	1b1c      	subls	r4, r3, r4
 801bab8:	1ae4      	subhi	r4, r4, r3
 801baba:	46c4      	movhi	ip, r8
 801babc:	f04f 0a00 	movhi.w	sl, #0
 801bac0:	bf9b      	ittet	ls
 801bac2:	fa1f fa84 	uxthls.w	sl, r4
 801bac6:	2400      	movls	r4, #0
 801bac8:	b2a4      	uxthhi	r4, r4
 801baca:	fa1f fc89 	uxthls.w	ip, r9
 801bace:	4653      	mov	r3, sl
 801bad0:	46e0      	mov	r8, ip
 801bad2:	e7dc      	b.n	801ba8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801bad4:	2204      	movs	r2, #4
 801bad6:	9905      	ldr	r1, [sp, #20]
 801bad8:	4543      	cmp	r3, r8
 801bada:	4615      	mov	r5, r2
 801badc:	9a01      	ldr	r2, [sp, #4]
 801bade:	bf24      	itt	cs
 801bae0:	eba3 0a08 	subcs.w	sl, r3, r8
 801bae4:	46c6      	movcs	lr, r8
 801bae6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801baea:	9903      	ldr	r1, [sp, #12]
 801baec:	bf3c      	itt	cc
 801baee:	eba8 0c03 	subcc.w	ip, r8, r3
 801baf2:	469e      	movcc	lr, r3
 801baf4:	588a      	ldr	r2, [r1, r2]
 801baf6:	bf26      	itte	cs
 801baf8:	fa1f fa8a 	uxthcs.w	sl, sl
 801bafc:	46a4      	movcs	ip, r4
 801bafe:	fa1f fc8c 	uxthcc.w	ip, ip
 801bb02:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bb06:	bf38      	it	cc
 801bb08:	46a2      	movcc	sl, r4
 801bb0a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bb0e:	2900      	cmp	r1, #0
 801bb10:	d066      	beq.n	801bbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bb12:	29ff      	cmp	r1, #255	; 0xff
 801bb14:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bb18:	d114      	bne.n	801bb44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bb1a:	9d02      	ldr	r5, [sp, #8]
 801bb1c:	2dff      	cmp	r5, #255	; 0xff
 801bb1e:	d111      	bne.n	801bb44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bb20:	0951      	lsrs	r1, r2, #5
 801bb22:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bb26:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bb2a:	4486      	add	lr, r0
 801bb2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bb30:	f026 0607 	bic.w	r6, r6, #7
 801bb34:	430e      	orrs	r6, r1
 801bb36:	4316      	orrs	r6, r2
 801bb38:	b2b6      	uxth	r6, r6
 801bb3a:	4586      	cmp	lr, r0
 801bb3c:	d051      	beq.n	801bbe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bb3e:	f820 6b02 	strh.w	r6, [r0], #2
 801bb42:	e7fa      	b.n	801bb3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bb44:	9d02      	ldr	r5, [sp, #8]
 801bb46:	b2f6      	uxtb	r6, r6
 801bb48:	4486      	add	lr, r0
 801bb4a:	4369      	muls	r1, r5
 801bb4c:	1c4d      	adds	r5, r1, #1
 801bb4e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bb52:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bb56:	b2d2      	uxtb	r2, r2
 801bb58:	122d      	asrs	r5, r5, #8
 801bb5a:	ea6f 0b05 	mvn.w	fp, r5
 801bb5e:	b2ad      	uxth	r5, r5
 801bb60:	fb11 f105 	smulbb	r1, r1, r5
 801bb64:	fa5f fb8b 	uxtb.w	fp, fp
 801bb68:	fb16 f605 	smulbb	r6, r6, r5
 801bb6c:	fb12 f205 	smulbb	r2, r2, r5
 801bb70:	b289      	uxth	r1, r1
 801bb72:	b2b6      	uxth	r6, r6
 801bb74:	b292      	uxth	r2, r2
 801bb76:	9106      	str	r1, [sp, #24]
 801bb78:	9607      	str	r6, [sp, #28]
 801bb7a:	9208      	str	r2, [sp, #32]
 801bb7c:	4586      	cmp	lr, r0
 801bb7e:	d030      	beq.n	801bbe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bb80:	8802      	ldrh	r2, [r0, #0]
 801bb82:	9906      	ldr	r1, [sp, #24]
 801bb84:	1216      	asrs	r6, r2, #8
 801bb86:	10d5      	asrs	r5, r2, #3
 801bb88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bb8c:	00d2      	lsls	r2, r2, #3
 801bb8e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bb92:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bb96:	b2d2      	uxtb	r2, r2
 801bb98:	fb06 160b 	mla	r6, r6, fp, r1
 801bb9c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bba0:	9907      	ldr	r1, [sp, #28]
 801bba2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bba6:	b2b6      	uxth	r6, r6
 801bba8:	fb05 150b 	mla	r5, r5, fp, r1
 801bbac:	9908      	ldr	r1, [sp, #32]
 801bbae:	fb02 120b 	mla	r2, r2, fp, r1
 801bbb2:	1c71      	adds	r1, r6, #1
 801bbb4:	b2ad      	uxth	r5, r5
 801bbb6:	b292      	uxth	r2, r2
 801bbb8:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bbbc:	1c51      	adds	r1, r2, #1
 801bbbe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bbc2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bbc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bbca:	4316      	orrs	r6, r2
 801bbcc:	1c6a      	adds	r2, r5, #1
 801bbce:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bbd2:	096d      	lsrs	r5, r5, #5
 801bbd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bbd8:	432e      	orrs	r6, r5
 801bbda:	f820 6b02 	strh.w	r6, [r0], #2
 801bbde:	e7cd      	b.n	801bb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801bbe0:	4470      	add	r0, lr
 801bbe2:	4543      	cmp	r3, r8
 801bbe4:	f4ff af73 	bcc.w	801bace <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801bbe8:	fa1f fc89 	uxth.w	ip, r9
 801bbec:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bbf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bbf2:	eba4 040c 	sub.w	r4, r4, ip
 801bbf6:	881b      	ldrh	r3, [r3, #0]
 801bbf8:	b2a4      	uxth	r4, r4
 801bbfa:	eba3 0309 	sub.w	r3, r3, r9
 801bbfe:	2c00      	cmp	r4, #0
 801bc00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bc04:	bf18      	it	ne
 801bc06:	f04f 0c00 	movne.w	ip, #0
 801bc0a:	e760      	b.n	801bace <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801bc0c:	4b03      	ldr	r3, [pc, #12]	; (801bc1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bc0e:	6818      	ldr	r0, [r3, #0]
 801bc10:	6803      	ldr	r3, [r0, #0]
 801bc12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc14:	4798      	blx	r3
 801bc16:	b00f      	add	sp, #60	; 0x3c
 801bc18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc1c:	24004a50 	.word	0x24004a50
 801bc20:	24004a4a 	.word	0x24004a4a

0801bc24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bc24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc28:	b093      	sub	sp, #76	; 0x4c
 801bc2a:	461c      	mov	r4, r3
 801bc2c:	9205      	str	r2, [sp, #20]
 801bc2e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801bc32:	9101      	str	r1, [sp, #4]
 801bc34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bc36:	9202      	str	r2, [sp, #8]
 801bc38:	2a00      	cmp	r2, #0
 801bc3a:	f000 812e 	beq.w	801be9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801bc3e:	6820      	ldr	r0, [r4, #0]
 801bc40:	aa0e      	add	r2, sp, #56	; 0x38
 801bc42:	6861      	ldr	r1, [r4, #4]
 801bc44:	c203      	stmia	r2!, {r0, r1}
 801bc46:	6818      	ldr	r0, [r3, #0]
 801bc48:	aa10      	add	r2, sp, #64	; 0x40
 801bc4a:	6859      	ldr	r1, [r3, #4]
 801bc4c:	c203      	stmia	r2!, {r0, r1}
 801bc4e:	a80e      	add	r0, sp, #56	; 0x38
 801bc50:	f7f9 fa70 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc54:	4621      	mov	r1, r4
 801bc56:	a810      	add	r0, sp, #64	; 0x40
 801bc58:	f7f9 fab0 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc5c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bc60:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801bc64:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bc68:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bc6c:	bfdb      	ittet	le
 801bc6e:	b2b3      	uxthle	r3, r6
 801bc70:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bc74:	2301      	movgt	r3, #1
 801bc76:	fb92 f3f3 	sdivle	r3, r2, r3
 801bc7a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bc7e:	441d      	add	r5, r3
 801bc80:	fb92 f1f3 	sdiv	r1, r2, r3
 801bc84:	fa1f fc81 	uxth.w	ip, r1
 801bc88:	3d01      	subs	r5, #1
 801bc8a:	fb0c 2413 	mls	r4, ip, r3, r2
 801bc8e:	4661      	mov	r1, ip
 801bc90:	fb14 f406 	smulbb	r4, r4, r6
 801bc94:	4404      	add	r4, r0
 801bc96:	fb95 f5f3 	sdiv	r5, r5, r3
 801bc9a:	b2a4      	uxth	r4, r4
 801bc9c:	b131      	cbz	r1, 801bcac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801bc9e:	9b05      	ldr	r3, [sp, #20]
 801bca0:	9901      	ldr	r1, [sp, #4]
 801bca2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bca6:	ba1b      	rev	r3, r3
 801bca8:	4419      	add	r1, r3
 801bcaa:	9101      	str	r1, [sp, #4]
 801bcac:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801bcb0:	b2ad      	uxth	r5, r5
 801bcb2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801bcb6:	4418      	add	r0, r3
 801bcb8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801bcbc:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801bcc0:	00ad      	lsls	r5, r5, #2
 801bcc2:	441a      	add	r2, r3
 801bcc4:	4b76      	ldr	r3, [pc, #472]	; (801bea0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bcc6:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801bcca:	6818      	ldr	r0, [r3, #0]
 801bccc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801bcd0:	6803      	ldr	r3, [r0, #0]
 801bcd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bcd4:	4798      	blx	r3
 801bcd6:	4973      	ldr	r1, [pc, #460]	; (801bea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bcd8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801bcdc:	2c00      	cmp	r4, #0
 801bcde:	880b      	ldrh	r3, [r1, #0]
 801bce0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bce4:	910d      	str	r1, [sp, #52]	; 0x34
 801bce6:	fb03 c202 	mla	r2, r3, r2, ip
 801bcea:	bf08      	it	eq
 801bcec:	46dc      	moveq	ip, fp
 801bcee:	fb03 f306 	mul.w	r3, r3, r6
 801bcf2:	bf18      	it	ne
 801bcf4:	f04f 0c00 	movne.w	ip, #0
 801bcf8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bcfc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bd00:	fa1f fc8c 	uxth.w	ip, ip
 801bd04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bd08:	9106      	str	r1, [sp, #24]
 801bd0a:	9308      	str	r3, [sp, #32]
 801bd0c:	1d2b      	adds	r3, r5, #4
 801bd0e:	9309      	str	r3, [sp, #36]	; 0x24
 801bd10:	9b02      	ldr	r3, [sp, #8]
 801bd12:	43da      	mvns	r2, r3
 801bd14:	2300      	movs	r3, #0
 801bd16:	b2d2      	uxtb	r2, r2
 801bd18:	9303      	str	r3, [sp, #12]
 801bd1a:	9207      	str	r2, [sp, #28]
 801bd1c:	9a08      	ldr	r2, [sp, #32]
 801bd1e:	4282      	cmp	r2, r0
 801bd20:	f240 80b6 	bls.w	801be90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801bd24:	b963      	cbnz	r3, 801bd40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801bd26:	9b01      	ldr	r3, [sp, #4]
 801bd28:	781a      	ldrb	r2, [r3, #0]
 801bd2a:	0993      	lsrs	r3, r2, #6
 801bd2c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bd30:	9203      	str	r2, [sp, #12]
 801bd32:	1e5a      	subs	r2, r3, #1
 801bd34:	2a02      	cmp	r2, #2
 801bd36:	d815      	bhi.n	801bd64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 801bd38:	9a01      	ldr	r2, [sp, #4]
 801bd3a:	b29b      	uxth	r3, r3
 801bd3c:	3201      	adds	r2, #1
 801bd3e:	9201      	str	r2, [sp, #4]
 801bd40:	b1b4      	cbz	r4, 801bd70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801bd42:	429c      	cmp	r4, r3
 801bd44:	bf91      	iteee	ls
 801bd46:	1b1c      	subls	r4, r3, r4
 801bd48:	1ae4      	subhi	r4, r4, r3
 801bd4a:	4666      	movhi	r6, ip
 801bd4c:	f04f 0800 	movhi.w	r8, #0
 801bd50:	bf9b      	ittet	ls
 801bd52:	fa1f f884 	uxthls.w	r8, r4
 801bd56:	2400      	movls	r4, #0
 801bd58:	b2a4      	uxthhi	r4, r4
 801bd5a:	fa1f f68b 	uxthls.w	r6, fp
 801bd5e:	4643      	mov	r3, r8
 801bd60:	46b4      	mov	ip, r6
 801bd62:	e7db      	b.n	801bd1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801bd64:	9a01      	ldr	r2, [sp, #4]
 801bd66:	9b01      	ldr	r3, [sp, #4]
 801bd68:	3202      	adds	r2, #2
 801bd6a:	785b      	ldrb	r3, [r3, #1]
 801bd6c:	9201      	str	r2, [sp, #4]
 801bd6e:	e7e7      	b.n	801bd40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801bd70:	2203      	movs	r2, #3
 801bd72:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bd74:	4563      	cmp	r3, ip
 801bd76:	4615      	mov	r5, r2
 801bd78:	9a03      	ldr	r2, [sp, #12]
 801bd7a:	bf2c      	ite	cs
 801bd7c:	eba3 080c 	subcs.w	r8, r3, ip
 801bd80:	ebac 0603 	subcc.w	r6, ip, r3
 801bd84:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bd88:	9905      	ldr	r1, [sp, #20]
 801bd8a:	bf24      	itt	cs
 801bd8c:	fa1f f888 	uxthcs.w	r8, r8
 801bd90:	46e1      	movcs	r9, ip
 801bd92:	eb01 0502 	add.w	r5, r1, r2
 801bd96:	9902      	ldr	r1, [sp, #8]
 801bd98:	bf2f      	iteee	cs
 801bd9a:	4626      	movcs	r6, r4
 801bd9c:	b2b6      	uxthcc	r6, r6
 801bd9e:	4699      	movcc	r9, r3
 801bda0:	46a0      	movcc	r8, r4
 801bda2:	29ff      	cmp	r1, #255	; 0xff
 801bda4:	d04a      	beq.n	801be3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bda6:	9f06      	ldr	r7, [sp, #24]
 801bda8:	46ca      	mov	sl, r9
 801bdaa:	78a9      	ldrb	r1, [r5, #2]
 801bdac:	9004      	str	r0, [sp, #16]
 801bdae:	4379      	muls	r1, r7
 801bdb0:	910a      	str	r1, [sp, #40]	; 0x28
 801bdb2:	7869      	ldrb	r1, [r5, #1]
 801bdb4:	4379      	muls	r1, r7
 801bdb6:	910b      	str	r1, [sp, #44]	; 0x2c
 801bdb8:	9905      	ldr	r1, [sp, #20]
 801bdba:	5c8a      	ldrb	r2, [r1, r2]
 801bdbc:	437a      	muls	r2, r7
 801bdbe:	920c      	str	r2, [sp, #48]	; 0x30
 801bdc0:	f1ba 0f00 	cmp.w	sl, #0
 801bdc4:	d03d      	beq.n	801be42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801bdc6:	9a04      	ldr	r2, [sp, #16]
 801bdc8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bdcc:	9f07      	ldr	r7, [sp, #28]
 801bdce:	8812      	ldrh	r2, [r2, #0]
 801bdd0:	fa1f fa8a 	uxth.w	sl, sl
 801bdd4:	46be      	mov	lr, r7
 801bdd6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bdd8:	1215      	asrs	r5, r2, #8
 801bdda:	10d1      	asrs	r1, r2, #3
 801bddc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bde0:	00d2      	lsls	r2, r2, #3
 801bde2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bde6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bdea:	b2d2      	uxtb	r2, r2
 801bdec:	fb05 750e 	mla	r5, r5, lr, r7
 801bdf0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bdf4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bdf6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bdfa:	b2ad      	uxth	r5, r5
 801bdfc:	fb01 710e 	mla	r1, r1, lr, r7
 801be00:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801be02:	fb02 720e 	mla	r2, r2, lr, r7
 801be06:	f105 0e01 	add.w	lr, r5, #1
 801be0a:	b289      	uxth	r1, r1
 801be0c:	b292      	uxth	r2, r2
 801be0e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801be12:	f102 0e01 	add.w	lr, r2, #1
 801be16:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801be1a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801be1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801be22:	4315      	orrs	r5, r2
 801be24:	1c4a      	adds	r2, r1, #1
 801be26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801be2a:	9a04      	ldr	r2, [sp, #16]
 801be2c:	0949      	lsrs	r1, r1, #5
 801be2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801be32:	430d      	orrs	r5, r1
 801be34:	f822 5b02 	strh.w	r5, [r2], #2
 801be38:	9204      	str	r2, [sp, #16]
 801be3a:	e7c1      	b.n	801bdc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 801be3c:	4649      	mov	r1, r9
 801be3e:	4686      	mov	lr, r0
 801be40:	b999      	cbnz	r1, 801be6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801be42:	4563      	cmp	r3, ip
 801be44:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801be48:	d389      	bcc.n	801bd5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801be4a:	fa1f f68b 	uxth.w	r6, fp
 801be4e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801be52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be54:	1ba4      	subs	r4, r4, r6
 801be56:	881b      	ldrh	r3, [r3, #0]
 801be58:	b2a4      	uxth	r4, r4
 801be5a:	eba3 030b 	sub.w	r3, r3, fp
 801be5e:	2c00      	cmp	r4, #0
 801be60:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801be64:	bf18      	it	ne
 801be66:	2600      	movne	r6, #0
 801be68:	e779      	b.n	801bd5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801be6a:	78aa      	ldrb	r2, [r5, #2]
 801be6c:	3901      	subs	r1, #1
 801be6e:	4f0e      	ldr	r7, [pc, #56]	; (801bea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 801be70:	b289      	uxth	r1, r1
 801be72:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801be76:	786a      	ldrb	r2, [r5, #1]
 801be78:	00d2      	lsls	r2, r2, #3
 801be7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801be7e:	ea4a 0202 	orr.w	r2, sl, r2
 801be82:	f895 a000 	ldrb.w	sl, [r5]
 801be86:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801be8a:	f82e 2b02 	strh.w	r2, [lr], #2
 801be8e:	e7d7      	b.n	801be40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 801be90:	4b03      	ldr	r3, [pc, #12]	; (801bea0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801be92:	6818      	ldr	r0, [r3, #0]
 801be94:	6803      	ldr	r3, [r0, #0]
 801be96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be98:	4798      	blx	r3
 801be9a:	b013      	add	sp, #76	; 0x4c
 801be9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bea0:	24004a50 	.word	0x24004a50
 801bea4:	24004a4a 	.word	0x24004a4a
 801bea8:	fffff800 	.word	0xfffff800

0801beac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801beac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801beb0:	b09d      	sub	sp, #116	; 0x74
 801beb2:	461c      	mov	r4, r3
 801beb4:	4683      	mov	fp, r0
 801beb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801beb8:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801bebc:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801bec0:	920e      	str	r2, [sp, #56]	; 0x38
 801bec2:	2a00      	cmp	r2, #0
 801bec4:	f000 81e4 	beq.w	801c290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 801bec8:	6820      	ldr	r0, [r4, #0]
 801beca:	aa18      	add	r2, sp, #96	; 0x60
 801becc:	6861      	ldr	r1, [r4, #4]
 801bece:	c203      	stmia	r2!, {r0, r1}
 801bed0:	6818      	ldr	r0, [r3, #0]
 801bed2:	aa1a      	add	r2, sp, #104	; 0x68
 801bed4:	6859      	ldr	r1, [r3, #4]
 801bed6:	c203      	stmia	r2!, {r0, r1}
 801bed8:	a818      	add	r0, sp, #96	; 0x60
 801beda:	f7f9 f92b 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bede:	4621      	mov	r1, r4
 801bee0:	a81a      	add	r0, sp, #104	; 0x68
 801bee2:	f7f9 f96b 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bee6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801beea:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801beee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bef2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bef6:	bfdb      	ittet	le
 801bef8:	b29a      	uxthle	r2, r3
 801befa:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801befe:	2201      	movgt	r2, #1
 801bf00:	fb91 f2f2 	sdivle	r2, r1, r2
 801bf04:	9202      	str	r2, [sp, #8]
 801bf06:	9802      	ldr	r0, [sp, #8]
 801bf08:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801bf0c:	9902      	ldr	r1, [sp, #8]
 801bf0e:	fb92 f0f0 	sdiv	r0, r2, r0
 801bf12:	b280      	uxth	r0, r0
 801bf14:	440c      	add	r4, r1
 801bf16:	900f      	str	r0, [sp, #60]	; 0x3c
 801bf18:	3c01      	subs	r4, #1
 801bf1a:	9802      	ldr	r0, [sp, #8]
 801bf1c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bf1e:	fb05 2510 	mls	r5, r5, r0, r2
 801bf22:	fb94 f4f1 	sdiv	r4, r4, r1
 801bf26:	fb15 f503 	smulbb	r5, r5, r3
 801bf2a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801bf2e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801bf32:	3401      	adds	r4, #1
 801bf34:	440d      	add	r5, r1
 801bf36:	4419      	add	r1, r3
 801bf38:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801bf3c:	b2a4      	uxth	r4, r4
 801bf3e:	441a      	add	r2, r3
 801bf40:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bf44:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801bf48:	00a4      	lsls	r4, r4, #2
 801bf4a:	9306      	str	r3, [sp, #24]
 801bf4c:	b2ad      	uxth	r5, r5
 801bf4e:	4bb3      	ldr	r3, [pc, #716]	; (801c21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bf50:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801bf54:	6818      	ldr	r0, [r3, #0]
 801bf56:	6803      	ldr	r3, [r0, #0]
 801bf58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf5a:	4798      	blx	r3
 801bf5c:	4bb0      	ldr	r3, [pc, #704]	; (801c220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 801bf5e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801bf62:	2d00      	cmp	r5, #0
 801bf64:	881a      	ldrh	r2, [r3, #0]
 801bf66:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801bf6a:	fb02 f606 	mul.w	r6, r2, r6
 801bf6e:	fb02 7101 	mla	r1, r2, r1, r7
 801bf72:	9316      	str	r3, [sp, #88]	; 0x58
 801bf74:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bf78:	4baa      	ldr	r3, [pc, #680]	; (801c224 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 801bf7a:	bf18      	it	ne
 801bf7c:	2100      	movne	r1, #0
 801bf7e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801bf82:	eba3 030b 	sub.w	r3, r3, fp
 801bf86:	920a      	str	r2, [sp, #40]	; 0x28
 801bf88:	f104 0204 	add.w	r2, r4, #4
 801bf8c:	9317      	str	r3, [sp, #92]	; 0x5c
 801bf8e:	9213      	str	r2, [sp, #76]	; 0x4c
 801bf90:	9a06      	ldr	r2, [sp, #24]
 801bf92:	bf08      	it	eq
 801bf94:	4611      	moveq	r1, r2
 801bf96:	2200      	movs	r2, #0
 801bf98:	b289      	uxth	r1, r1
 801bf9a:	920d      	str	r2, [sp, #52]	; 0x34
 801bf9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bf9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfa0:	fa12 f383 	uxtah	r3, r2, r3
 801bfa4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bfa6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bfaa:	3304      	adds	r3, #4
 801bfac:	9308      	str	r3, [sp, #32]
 801bfae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bfb0:	4543      	cmp	r3, r8
 801bfb2:	f240 8168 	bls.w	801c286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 801bfb6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801bfba:	f04f 0e01 	mov.w	lr, #1
 801bfbe:	9a02      	ldr	r2, [sp, #8]
 801bfc0:	9808      	ldr	r0, [sp, #32]
 801bfc2:	fbb5 f3f3 	udiv	r3, r5, r3
 801bfc6:	1ad3      	subs	r3, r2, r3
 801bfc8:	7800      	ldrb	r0, [r0, #0]
 801bfca:	b29b      	uxth	r3, r3
 801bfcc:	9010      	str	r0, [sp, #64]	; 0x40
 801bfce:	3001      	adds	r0, #1
 801bfd0:	9314      	str	r3, [sp, #80]	; 0x50
 801bfd2:	9b08      	ldr	r3, [sp, #32]
 801bfd4:	9007      	str	r0, [sp, #28]
 801bfd6:	785a      	ldrb	r2, [r3, #1]
 801bfd8:	789b      	ldrb	r3, [r3, #2]
 801bfda:	021b      	lsls	r3, r3, #8
 801bfdc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bfe0:	9a08      	ldr	r2, [sp, #32]
 801bfe2:	78d2      	ldrb	r2, [r2, #3]
 801bfe4:	4313      	orrs	r3, r2
 801bfe6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bfe8:	441a      	add	r2, r3
 801bfea:	1c50      	adds	r0, r2, #1
 801bfec:	7852      	ldrb	r2, [r2, #1]
 801bfee:	9005      	str	r0, [sp, #20]
 801bff0:	0212      	lsls	r2, r2, #8
 801bff2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bff4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bff8:	5cc3      	ldrb	r3, [r0, r3]
 801bffa:	431a      	orrs	r2, r3
 801bffc:	b293      	uxth	r3, r2
 801bffe:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c002:	930b      	str	r3, [sp, #44]	; 0x2c
 801c004:	2300      	movs	r3, #0
 801c006:	9309      	str	r3, [sp, #36]	; 0x24
 801c008:	2301      	movs	r3, #1
 801c00a:	9301      	str	r3, [sp, #4]
 801c00c:	9304      	str	r3, [sp, #16]
 801c00e:	2300      	movs	r3, #0
 801c010:	9303      	str	r3, [sp, #12]
 801c012:	2d00      	cmp	r5, #0
 801c014:	d07d      	beq.n	801c112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 801c016:	45ae      	cmp	lr, r5
 801c018:	d26c      	bcs.n	801c0f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 801c01a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c01c:	eba5 050e 	sub.w	r5, r5, lr
 801c020:	460c      	mov	r4, r1
 801c022:	4543      	cmp	r3, r8
 801c024:	b2ad      	uxth	r5, r5
 801c026:	d802      	bhi.n	801c02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 801c028:	e071      	b.n	801c10e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 801c02a:	2b00      	cmp	r3, #0
 801c02c:	d15d      	bne.n	801c0ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 801c02e:	9b05      	ldr	r3, [sp, #20]
 801c030:	9a04      	ldr	r2, [sp, #16]
 801c032:	785b      	ldrb	r3, [r3, #1]
 801c034:	f1c2 0207 	rsb	r2, r2, #7
 801c038:	9904      	ldr	r1, [sp, #16]
 801c03a:	4093      	lsls	r3, r2
 801c03c:	005b      	lsls	r3, r3, #1
 801c03e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c042:	9b05      	ldr	r3, [sp, #20]
 801c044:	781b      	ldrb	r3, [r3, #0]
 801c046:	410b      	asrs	r3, r1
 801c048:	3101      	adds	r1, #1
 801c04a:	b2c9      	uxtb	r1, r1
 801c04c:	b2db      	uxtb	r3, r3
 801c04e:	2908      	cmp	r1, #8
 801c050:	9104      	str	r1, [sp, #16]
 801c052:	9905      	ldr	r1, [sp, #20]
 801c054:	ea43 0302 	orr.w	r3, r3, r2
 801c058:	bf0c      	ite	eq
 801c05a:	3102      	addeq	r1, #2
 801c05c:	3101      	addne	r1, #1
 801c05e:	b29a      	uxth	r2, r3
 801c060:	bf05      	ittet	eq
 801c062:	9105      	streq	r1, [sp, #20]
 801c064:	2100      	moveq	r1, #0
 801c066:	9105      	strne	r1, [sp, #20]
 801c068:	9104      	streq	r1, [sp, #16]
 801c06a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c06c:	4291      	cmp	r1, r2
 801c06e:	d30a      	bcc.n	801c086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 801c070:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c074:	2301      	movs	r3, #1
 801c076:	9907      	ldr	r1, [sp, #28]
 801c078:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c07c:	d30f      	bcc.n	801c09e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801c07e:	2100      	movs	r1, #0
 801c080:	9301      	str	r3, [sp, #4]
 801c082:	9103      	str	r1, [sp, #12]
 801c084:	e032      	b.n	801c0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c086:	9b07      	ldr	r3, [sp, #28]
 801c088:	429a      	cmp	r2, r3
 801c08a:	d318      	bcc.n	801c0be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 801c08c:	9b01      	ldr	r3, [sp, #4]
 801c08e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c092:	445b      	add	r3, fp
 801c094:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c098:	9b01      	ldr	r3, [sp, #4]
 801c09a:	3301      	adds	r3, #1
 801c09c:	b29b      	uxth	r3, r3
 801c09e:	9907      	ldr	r1, [sp, #28]
 801c0a0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c0a4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c0a8:	7108      	strb	r0, [r1, #4]
 801c0aa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c0ac:	80c8      	strh	r0, [r1, #6]
 801c0ae:	9801      	ldr	r0, [sp, #4]
 801c0b0:	3001      	adds	r0, #1
 801c0b2:	7148      	strb	r0, [r1, #5]
 801c0b4:	9907      	ldr	r1, [sp, #28]
 801c0b6:	3101      	adds	r1, #1
 801c0b8:	b289      	uxth	r1, r1
 801c0ba:	9107      	str	r1, [sp, #28]
 801c0bc:	e7df      	b.n	801c07e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c0be:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c0c2:	4611      	mov	r1, r2
 801c0c4:	795b      	ldrb	r3, [r3, #5]
 801c0c6:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c0ca:	4458      	add	r0, fp
 801c0cc:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c0ce:	4406      	add	r6, r0
 801c0d0:	2e00      	cmp	r6, #0
 801c0d2:	dd06      	ble.n	801c0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c0d4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c0d8:	790e      	ldrb	r6, [r1, #4]
 801c0da:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c0de:	88c9      	ldrh	r1, [r1, #6]
 801c0e0:	e7f4      	b.n	801c0cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 801c0e2:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c0e6:	b29b      	uxth	r3, r3
 801c0e8:	e7c5      	b.n	801c076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c0ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c0ec:	4621      	mov	r1, r4
 801c0ee:	920b      	str	r2, [sp, #44]	; 0x2c
 801c0f0:	469e      	mov	lr, r3
 801c0f2:	e78e      	b.n	801c012 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 801c0f4:	9a03      	ldr	r2, [sp, #12]
 801c0f6:	ebae 0305 	sub.w	r3, lr, r5
 801c0fa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c0fe:	442a      	add	r2, r5
 801c100:	b29b      	uxth	r3, r3
 801c102:	b292      	uxth	r2, r2
 801c104:	9203      	str	r2, [sp, #12]
 801c106:	2500      	movs	r5, #0
 801c108:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c10a:	4542      	cmp	r2, r8
 801c10c:	d88d      	bhi.n	801c02a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 801c10e:	4621      	mov	r1, r4
 801c110:	e74d      	b.n	801bfae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 801c112:	458e      	cmp	lr, r1
 801c114:	f04f 0900 	mov.w	r9, #0
 801c118:	bf2b      	itete	cs
 801c11a:	ebae 0301 	subcs.w	r3, lr, r1
 801c11e:	eba1 040e 	subcc.w	r4, r1, lr
 801c122:	462c      	movcs	r4, r5
 801c124:	462b      	movcc	r3, r5
 801c126:	bf27      	ittee	cs
 801c128:	b29b      	uxthcs	r3, r3
 801c12a:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c12c:	b2a4      	uxthcc	r4, r4
 801c12e:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c132:	9a03      	ldr	r2, [sp, #12]
 801c134:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c136:	444a      	add	r2, r9
 801c138:	4548      	cmp	r0, r9
 801c13a:	b292      	uxth	r2, r2
 801c13c:	d074      	beq.n	801c228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 801c13e:	2004      	movs	r0, #4
 801c140:	445a      	add	r2, fp
 801c142:	4605      	mov	r5, r0
 801c144:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c148:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c14a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c14e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c150:	5880      	ldr	r0, [r0, r2]
 801c152:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c156:	d014      	beq.n	801c182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801c158:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c15c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c160:	d112      	bne.n	801c188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801c162:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c164:	2aff      	cmp	r2, #255	; 0xff
 801c166:	d10f      	bne.n	801c188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801c168:	0942      	lsrs	r2, r0, #5
 801c16a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c16e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c172:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c176:	f025 0507 	bic.w	r5, r5, #7
 801c17a:	4315      	orrs	r5, r2
 801c17c:	4305      	orrs	r5, r0
 801c17e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c182:	f109 0901 	add.w	r9, r9, #1
 801c186:	e7d4      	b.n	801c132 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 801c188:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c18c:	b2ed      	uxtb	r5, r5
 801c18e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c192:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c196:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c19a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c19e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c1a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c1a6:	9215      	str	r2, [sp, #84]	; 0x54
 801c1a8:	fa5f fc8c 	uxtb.w	ip, ip
 801c1ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c1ae:	b2c0      	uxtb	r0, r0
 801c1b0:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c1b4:	fb02 fa0a 	mul.w	sl, r2, sl
 801c1b8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c1bc:	f10a 0201 	add.w	r2, sl, #1
 801c1c0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c1c4:	1212      	asrs	r2, r2, #8
 801c1c6:	fa1f fa82 	uxth.w	sl, r2
 801c1ca:	43d2      	mvns	r2, r2
 801c1cc:	fb16 f60a 	smulbb	r6, r6, sl
 801c1d0:	b2d2      	uxtb	r2, r2
 801c1d2:	fb10 f00a 	smulbb	r0, r0, sl
 801c1d6:	fb07 6702 	mla	r7, r7, r2, r6
 801c1da:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c1dc:	fb0c 0002 	mla	r0, ip, r2, r0
 801c1e0:	fb15 f50a 	smulbb	r5, r5, sl
 801c1e4:	b2bf      	uxth	r7, r7
 801c1e6:	b280      	uxth	r0, r0
 801c1e8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c1ec:	fb06 5602 	mla	r6, r6, r2, r5
 801c1f0:	1c7a      	adds	r2, r7, #1
 801c1f2:	1c45      	adds	r5, r0, #1
 801c1f4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c1f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c1fc:	b2b6      	uxth	r6, r6
 801c1fe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c202:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c206:	432f      	orrs	r7, r5
 801c208:	1c75      	adds	r5, r6, #1
 801c20a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c20e:	096d      	lsrs	r5, r5, #5
 801c210:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c214:	432f      	orrs	r7, r5
 801c216:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c21a:	e7b2      	b.n	801c182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801c21c:	24004a50 	.word	0x24004a50
 801c220:	24004a4a 	.word	0x24004a4a
 801c224:	fffff7fb 	.word	0xfffff7fb
 801c228:	9203      	str	r2, [sp, #12]
 801c22a:	458e      	cmp	lr, r1
 801c22c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c22e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c232:	f4ff af68 	bcc.w	801c106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c236:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c238:	9906      	ldr	r1, [sp, #24]
 801c23a:	8812      	ldrh	r2, [r2, #0]
 801c23c:	1a52      	subs	r2, r2, r1
 801c23e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c240:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c244:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c246:	3201      	adds	r2, #1
 801c248:	428a      	cmp	r2, r1
 801c24a:	9209      	str	r2, [sp, #36]	; 0x24
 801c24c:	d111      	bne.n	801c272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 801c24e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c252:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c256:	9b06      	ldr	r3, [sp, #24]
 801c258:	eba5 0509 	sub.w	r5, r5, r9
 801c25c:	b2ad      	uxth	r5, r5
 801c25e:	2d00      	cmp	r5, #0
 801c260:	bf08      	it	eq
 801c262:	4619      	moveq	r1, r3
 801c264:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c266:	bf18      	it	ne
 801c268:	2100      	movne	r1, #0
 801c26a:	3301      	adds	r3, #1
 801c26c:	b289      	uxth	r1, r1
 801c26e:	930d      	str	r3, [sp, #52]	; 0x34
 801c270:	e694      	b.n	801bf9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 801c272:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c276:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c27a:	1b2d      	subs	r5, r5, r4
 801c27c:	b2ad      	uxth	r5, r5
 801c27e:	2d00      	cmp	r5, #0
 801c280:	bf18      	it	ne
 801c282:	2400      	movne	r4, #0
 801c284:	e740      	b.n	801c108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 801c286:	4b04      	ldr	r3, [pc, #16]	; (801c298 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 801c288:	6818      	ldr	r0, [r3, #0]
 801c28a:	6803      	ldr	r3, [r0, #0]
 801c28c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c28e:	4798      	blx	r3
 801c290:	b01d      	add	sp, #116	; 0x74
 801c292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c296:	bf00      	nop
 801c298:	24004a50 	.word	0x24004a50

0801c29c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2a0:	b09f      	sub	sp, #124	; 0x7c
 801c2a2:	461d      	mov	r5, r3
 801c2a4:	4604      	mov	r4, r0
 801c2a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c2a8:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c2ac:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c2b0:	920a      	str	r2, [sp, #40]	; 0x28
 801c2b2:	2a00      	cmp	r2, #0
 801c2b4:	f000 81fe 	beq.w	801c6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 801c2b8:	6828      	ldr	r0, [r5, #0]
 801c2ba:	aa1a      	add	r2, sp, #104	; 0x68
 801c2bc:	6869      	ldr	r1, [r5, #4]
 801c2be:	c203      	stmia	r2!, {r0, r1}
 801c2c0:	6818      	ldr	r0, [r3, #0]
 801c2c2:	aa1c      	add	r2, sp, #112	; 0x70
 801c2c4:	6859      	ldr	r1, [r3, #4]
 801c2c6:	c203      	stmia	r2!, {r0, r1}
 801c2c8:	a81a      	add	r0, sp, #104	; 0x68
 801c2ca:	f7f8 ff33 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2ce:	4629      	mov	r1, r5
 801c2d0:	a81c      	add	r0, sp, #112	; 0x70
 801c2d2:	f7f8 ff73 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2d6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c2da:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c2de:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c2e2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c2e6:	bfdb      	ittet	le
 801c2e8:	b29a      	uxthle	r2, r3
 801c2ea:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c2ee:	2201      	movgt	r2, #1
 801c2f0:	fb91 f2f2 	sdivle	r2, r1, r2
 801c2f4:	9201      	str	r2, [sp, #4]
 801c2f6:	9801      	ldr	r0, [sp, #4]
 801c2f8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c2fc:	9901      	ldr	r1, [sp, #4]
 801c2fe:	fb92 f0f0 	sdiv	r0, r2, r0
 801c302:	b280      	uxth	r0, r0
 801c304:	440e      	add	r6, r1
 801c306:	9010      	str	r0, [sp, #64]	; 0x40
 801c308:	3e01      	subs	r6, #1
 801c30a:	9801      	ldr	r0, [sp, #4]
 801c30c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c30e:	fb05 2510 	mls	r5, r5, r0, r2
 801c312:	fb96 f6f1 	sdiv	r6, r6, r1
 801c316:	fb15 f503 	smulbb	r5, r5, r3
 801c31a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c31e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c322:	3601      	adds	r6, #1
 801c324:	440d      	add	r5, r1
 801c326:	4419      	add	r1, r3
 801c328:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c32c:	b2b6      	uxth	r6, r6
 801c32e:	441a      	add	r2, r3
 801c330:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c334:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c338:	b2ad      	uxth	r5, r5
 801c33a:	9304      	str	r3, [sp, #16]
 801c33c:	4b96      	ldr	r3, [pc, #600]	; (801c598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c33e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c342:	6818      	ldr	r0, [r3, #0]
 801c344:	6803      	ldr	r3, [r0, #0]
 801c346:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c348:	4798      	blx	r3
 801c34a:	4b94      	ldr	r3, [pc, #592]	; (801c59c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 801c34c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c350:	2d00      	cmp	r5, #0
 801c352:	881a      	ldrh	r2, [r3, #0]
 801c354:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c358:	fb02 f707 	mul.w	r7, r2, r7
 801c35c:	fb02 c101 	mla	r1, r2, r1, ip
 801c360:	9318      	str	r3, [sp, #96]	; 0x60
 801c362:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c366:	4b8e      	ldr	r3, [pc, #568]	; (801c5a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 801c368:	bf18      	it	ne
 801c36a:	2100      	movne	r1, #0
 801c36c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c370:	eba3 0304 	sub.w	r3, r3, r4
 801c374:	920b      	str	r2, [sp, #44]	; 0x2c
 801c376:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c378:	9319      	str	r3, [sp, #100]	; 0x64
 801c37a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c37e:	f106 0204 	add.w	r2, r6, #4
 801c382:	9206      	str	r2, [sp, #24]
 801c384:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c386:	ea6f 0202 	mvn.w	r2, r2
 801c38a:	b2d2      	uxtb	r2, r2
 801c38c:	9215      	str	r2, [sp, #84]	; 0x54
 801c38e:	9a04      	ldr	r2, [sp, #16]
 801c390:	bf08      	it	eq
 801c392:	4611      	moveq	r1, r2
 801c394:	2200      	movs	r2, #0
 801c396:	b289      	uxth	r1, r1
 801c398:	920d      	str	r2, [sp, #52]	; 0x34
 801c39a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c39c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c39e:	fa12 f383 	uxtah	r3, r2, r3
 801c3a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c3a4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c3a8:	3304      	adds	r3, #4
 801c3aa:	9307      	str	r3, [sp, #28]
 801c3ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c3ae:	455b      	cmp	r3, fp
 801c3b0:	f240 817b 	bls.w	801c6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 801c3b4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c3b8:	f04f 0801 	mov.w	r8, #1
 801c3bc:	9a01      	ldr	r2, [sp, #4]
 801c3be:	9807      	ldr	r0, [sp, #28]
 801c3c0:	46c4      	mov	ip, r8
 801c3c2:	f8cd 8008 	str.w	r8, [sp, #8]
 801c3c6:	7800      	ldrb	r0, [r0, #0]
 801c3c8:	fbb5 f3f3 	udiv	r3, r5, r3
 801c3cc:	1ad3      	subs	r3, r2, r3
 801c3ce:	9011      	str	r0, [sp, #68]	; 0x44
 801c3d0:	3001      	adds	r0, #1
 801c3d2:	b29b      	uxth	r3, r3
 801c3d4:	9005      	str	r0, [sp, #20]
 801c3d6:	9316      	str	r3, [sp, #88]	; 0x58
 801c3d8:	9b07      	ldr	r3, [sp, #28]
 801c3da:	785a      	ldrb	r2, [r3, #1]
 801c3dc:	789b      	ldrb	r3, [r3, #2]
 801c3de:	021b      	lsls	r3, r3, #8
 801c3e0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c3e4:	9a07      	ldr	r2, [sp, #28]
 801c3e6:	78d2      	ldrb	r2, [r2, #3]
 801c3e8:	4313      	orrs	r3, r2
 801c3ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c3ec:	441a      	add	r2, r3
 801c3ee:	1c50      	adds	r0, r2, #1
 801c3f0:	7852      	ldrb	r2, [r2, #1]
 801c3f2:	9003      	str	r0, [sp, #12]
 801c3f4:	0212      	lsls	r2, r2, #8
 801c3f6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c3f8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c3fc:	5cc3      	ldrb	r3, [r0, r3]
 801c3fe:	431a      	orrs	r2, r3
 801c400:	b293      	uxth	r3, r2
 801c402:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c406:	930c      	str	r3, [sp, #48]	; 0x30
 801c408:	2300      	movs	r3, #0
 801c40a:	9308      	str	r3, [sp, #32]
 801c40c:	461a      	mov	r2, r3
 801c40e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c412:	930e      	str	r3, [sp, #56]	; 0x38
 801c414:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c418:	930f      	str	r3, [sp, #60]	; 0x3c
 801c41a:	2d00      	cmp	r5, #0
 801c41c:	d07d      	beq.n	801c51a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c41e:	45ac      	cmp	ip, r5
 801c420:	d26d      	bcs.n	801c4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 801c422:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c424:	eba5 050c 	sub.w	r5, r5, ip
 801c428:	4608      	mov	r0, r1
 801c42a:	455b      	cmp	r3, fp
 801c42c:	b2ad      	uxth	r5, r5
 801c42e:	d802      	bhi.n	801c436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801c430:	e071      	b.n	801c516 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801c432:	2b00      	cmp	r3, #0
 801c434:	d15d      	bne.n	801c4f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c436:	9b03      	ldr	r3, [sp, #12]
 801c438:	9a02      	ldr	r2, [sp, #8]
 801c43a:	785b      	ldrb	r3, [r3, #1]
 801c43c:	f1c2 0207 	rsb	r2, r2, #7
 801c440:	9902      	ldr	r1, [sp, #8]
 801c442:	4093      	lsls	r3, r2
 801c444:	005b      	lsls	r3, r3, #1
 801c446:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c44a:	9b03      	ldr	r3, [sp, #12]
 801c44c:	781b      	ldrb	r3, [r3, #0]
 801c44e:	410b      	asrs	r3, r1
 801c450:	3101      	adds	r1, #1
 801c452:	b2c9      	uxtb	r1, r1
 801c454:	b2db      	uxtb	r3, r3
 801c456:	2908      	cmp	r1, #8
 801c458:	9102      	str	r1, [sp, #8]
 801c45a:	9903      	ldr	r1, [sp, #12]
 801c45c:	ea43 0302 	orr.w	r3, r3, r2
 801c460:	bf0c      	ite	eq
 801c462:	3102      	addeq	r1, #2
 801c464:	3101      	addne	r1, #1
 801c466:	b29a      	uxth	r2, r3
 801c468:	bf05      	ittet	eq
 801c46a:	9103      	streq	r1, [sp, #12]
 801c46c:	2100      	moveq	r1, #0
 801c46e:	9103      	strne	r1, [sp, #12]
 801c470:	9102      	streq	r1, [sp, #8]
 801c472:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c474:	4291      	cmp	r1, r2
 801c476:	d30a      	bcc.n	801c48e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801c478:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c47c:	2301      	movs	r3, #1
 801c47e:	9905      	ldr	r1, [sp, #20]
 801c480:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c484:	d30f      	bcc.n	801c4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c486:	2100      	movs	r1, #0
 801c488:	4698      	mov	r8, r3
 801c48a:	9100      	str	r1, [sp, #0]
 801c48c:	e032      	b.n	801c4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 801c48e:	9b05      	ldr	r3, [sp, #20]
 801c490:	429a      	cmp	r2, r3
 801c492:	d318      	bcc.n	801c4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 801c494:	eb04 0308 	add.w	r3, r4, r8
 801c498:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c49c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c4a0:	f108 0301 	add.w	r3, r8, #1
 801c4a4:	b29b      	uxth	r3, r3
 801c4a6:	9905      	ldr	r1, [sp, #20]
 801c4a8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c4ac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c4b0:	710e      	strb	r6, [r1, #4]
 801c4b2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c4b4:	80ce      	strh	r6, [r1, #6]
 801c4b6:	f108 0601 	add.w	r6, r8, #1
 801c4ba:	714e      	strb	r6, [r1, #5]
 801c4bc:	9905      	ldr	r1, [sp, #20]
 801c4be:	3101      	adds	r1, #1
 801c4c0:	b289      	uxth	r1, r1
 801c4c2:	9105      	str	r1, [sp, #20]
 801c4c4:	e7df      	b.n	801c486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c4c6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c4ca:	4611      	mov	r1, r2
 801c4cc:	795b      	ldrb	r3, [r3, #5]
 801c4ce:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c4d2:	4426      	add	r6, r4
 801c4d4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c4d6:	4437      	add	r7, r6
 801c4d8:	2f00      	cmp	r7, #0
 801c4da:	dd06      	ble.n	801c4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 801c4dc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c4e0:	790f      	ldrb	r7, [r1, #4]
 801c4e2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c4e6:	88c9      	ldrh	r1, [r1, #6]
 801c4e8:	e7f4      	b.n	801c4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 801c4ea:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c4ee:	b29b      	uxth	r3, r3
 801c4f0:	e7c5      	b.n	801c47e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801c4f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c4f4:	920c      	str	r2, [sp, #48]	; 0x30
 801c4f6:	4601      	mov	r1, r0
 801c4f8:	9a00      	ldr	r2, [sp, #0]
 801c4fa:	469c      	mov	ip, r3
 801c4fc:	e78d      	b.n	801c41a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801c4fe:	ebac 0305 	sub.w	r3, ip, r5
 801c502:	1957      	adds	r7, r2, r5
 801c504:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c508:	b2ba      	uxth	r2, r7
 801c50a:	b29b      	uxth	r3, r3
 801c50c:	9200      	str	r2, [sp, #0]
 801c50e:	2500      	movs	r5, #0
 801c510:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c512:	455a      	cmp	r2, fp
 801c514:	d88d      	bhi.n	801c432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801c516:	4601      	mov	r1, r0
 801c518:	e748      	b.n	801c3ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 801c51a:	458c      	cmp	ip, r1
 801c51c:	bf27      	ittee	cs
 801c51e:	ebac 0301 	subcs.w	r3, ip, r1
 801c522:	4628      	movcs	r0, r5
 801c524:	eba1 000c 	subcc.w	r0, r1, ip
 801c528:	462b      	movcc	r3, r5
 801c52a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c52c:	bf27      	ittee	cs
 801c52e:	b29b      	uxthcs	r3, r3
 801c530:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c532:	b280      	uxthcc	r0, r0
 801c534:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c538:	2dff      	cmp	r5, #255	; 0xff
 801c53a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c53c:	eb02 0705 	add.w	r7, r2, r5
 801c540:	b2bd      	uxth	r5, r7
 801c542:	9500      	str	r5, [sp, #0]
 801c544:	d12e      	bne.n	801c5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801c546:	465e      	mov	r6, fp
 801c548:	9d00      	ldr	r5, [sp, #0]
 801c54a:	42aa      	cmp	r2, r5
 801c54c:	f040 8083 	bne.w	801c656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 801c550:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c552:	458c      	cmp	ip, r1
 801c554:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c558:	d3d9      	bcc.n	801c50e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c55a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c55c:	9904      	ldr	r1, [sp, #16]
 801c55e:	8812      	ldrh	r2, [r2, #0]
 801c560:	1a52      	subs	r2, r2, r1
 801c562:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c564:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c568:	9a08      	ldr	r2, [sp, #32]
 801c56a:	3201      	adds	r2, #1
 801c56c:	428a      	cmp	r2, r1
 801c56e:	9208      	str	r2, [sp, #32]
 801c570:	f040 8091 	bne.w	801c696 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 801c574:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c578:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c57c:	9b04      	ldr	r3, [sp, #16]
 801c57e:	eba5 050c 	sub.w	r5, r5, ip
 801c582:	b2ad      	uxth	r5, r5
 801c584:	2d00      	cmp	r5, #0
 801c586:	bf08      	it	eq
 801c588:	4619      	moveq	r1, r3
 801c58a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c58c:	bf18      	it	ne
 801c58e:	2100      	movne	r1, #0
 801c590:	3301      	adds	r3, #1
 801c592:	b289      	uxth	r1, r1
 801c594:	930d      	str	r3, [sp, #52]	; 0x34
 801c596:	e700      	b.n	801c39a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 801c598:	24004a50 	.word	0x24004a50
 801c59c:	24004a4a 	.word	0x24004a4a
 801c5a0:	fffff7fb 	.word	0xfffff7fb
 801c5a4:	46d9      	mov	r9, fp
 801c5a6:	9d00      	ldr	r5, [sp, #0]
 801c5a8:	42aa      	cmp	r2, r5
 801c5aa:	d0d1      	beq.n	801c550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 801c5ac:	1c55      	adds	r5, r2, #1
 801c5ae:	4422      	add	r2, r4
 801c5b0:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c5b4:	9a06      	ldr	r2, [sp, #24]
 801c5b6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c5ba:	9517      	str	r5, [sp, #92]	; 0x5c
 801c5bc:	4472      	add	r2, lr
 801c5be:	9212      	str	r2, [sp, #72]	; 0x48
 801c5c0:	f8b9 2000 	ldrh.w	r2, [r9]
 801c5c4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c5c6:	1216      	asrs	r6, r2, #8
 801c5c8:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c5cc:	10d5      	asrs	r5, r2, #3
 801c5ce:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c5d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c5d4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c5d8:	00d2      	lsls	r2, r2, #3
 801c5da:	fb1a fa07 	smulbb	sl, sl, r7
 801c5de:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c5e2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c5e4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c5e8:	b2d2      	uxtb	r2, r2
 801c5ea:	fb06 a607 	mla	r6, r6, r7, sl
 801c5ee:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c5f0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c5f4:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c5f8:	b2b6      	uxth	r6, r6
 801c5fa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c5fc:	fb1a fa07 	smulbb	sl, sl, r7
 801c600:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c602:	fb05 a507 	mla	r5, r5, r7, sl
 801c606:	9f06      	ldr	r7, [sp, #24]
 801c608:	f106 0a01 	add.w	sl, r6, #1
 801c60c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c610:	b2ad      	uxth	r5, r5
 801c612:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c614:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c618:	f105 0a01 	add.w	sl, r5, #1
 801c61c:	fb1e fe07 	smulbb	lr, lr, r7
 801c620:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c622:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c626:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c62a:	fb02 e207 	mla	r2, r2, r7, lr
 801c62e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c632:	b292      	uxth	r2, r2
 801c634:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c638:	f102 0e01 	add.w	lr, r2, #1
 801c63c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c640:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c644:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c648:	ea4e 0606 	orr.w	r6, lr, r6
 801c64c:	ea46 060a 	orr.w	r6, r6, sl
 801c650:	f829 6b02 	strh.w	r6, [r9], #2
 801c654:	e7a7      	b.n	801c5a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801c656:	f102 0e01 	add.w	lr, r2, #1
 801c65a:	4422      	add	r2, r4
 801c65c:	9f06      	ldr	r7, [sp, #24]
 801c65e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c662:	9a06      	ldr	r2, [sp, #24]
 801c664:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c668:	eb02 0a05 	add.w	sl, r2, r5
 801c66c:	4a13      	ldr	r2, [pc, #76]	; (801c6bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 801c66e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c672:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c676:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c67a:	00d2      	lsls	r2, r2, #3
 801c67c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c680:	ea49 0202 	orr.w	r2, r9, r2
 801c684:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c688:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c68c:	f826 2b02 	strh.w	r2, [r6], #2
 801c690:	fa1f f28e 	uxth.w	r2, lr
 801c694:	e758      	b.n	801c548 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801c696:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c69a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c69e:	1a2d      	subs	r5, r5, r0
 801c6a0:	b2ad      	uxth	r5, r5
 801c6a2:	2d00      	cmp	r5, #0
 801c6a4:	bf18      	it	ne
 801c6a6:	2000      	movne	r0, #0
 801c6a8:	e732      	b.n	801c510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801c6aa:	4b05      	ldr	r3, [pc, #20]	; (801c6c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 801c6ac:	6818      	ldr	r0, [r3, #0]
 801c6ae:	6803      	ldr	r3, [r0, #0]
 801c6b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c6b2:	4798      	blx	r3
 801c6b4:	b01f      	add	sp, #124	; 0x7c
 801c6b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6ba:	bf00      	nop
 801c6bc:	fffff800 	.word	0xfffff800
 801c6c0:	24004a50 	.word	0x24004a50

0801c6c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c6c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6c8:	b091      	sub	sp, #68	; 0x44
 801c6ca:	469b      	mov	fp, r3
 801c6cc:	4616      	mov	r6, r2
 801c6ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c6d2:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c6d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c6da:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c6de:	4604      	mov	r4, r0
 801c6e0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c6e4:	4640      	mov	r0, r8
 801c6e6:	460d      	mov	r5, r1
 801c6e8:	4659      	mov	r1, fp
 801c6ea:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c6ee:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c6f2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c6f6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c6fa:	f7f5 f98f 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 801c6fe:	4631      	mov	r1, r6
 801c700:	4640      	mov	r0, r8
 801c702:	f7f5 f98b 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 801c706:	4b74      	ldr	r3, [pc, #464]	; (801c8d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c708:	8818      	ldrh	r0, [r3, #0]
 801c70a:	4b74      	ldr	r3, [pc, #464]	; (801c8dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c70c:	b202      	sxth	r2, r0
 801c70e:	8819      	ldrh	r1, [r3, #0]
 801c710:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c714:	b20e      	sxth	r6, r1
 801c716:	2b00      	cmp	r3, #0
 801c718:	da07      	bge.n	801c72a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c71a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c71e:	4463      	add	r3, ip
 801c720:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c724:	2300      	movs	r3, #0
 801c726:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c72a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c72e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c732:	1ad2      	subs	r2, r2, r3
 801c734:	4594      	cmp	ip, r2
 801c736:	bfc4      	itt	gt
 801c738:	1ac2      	subgt	r2, r0, r3
 801c73a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c73e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c742:	2a00      	cmp	r2, #0
 801c744:	da07      	bge.n	801c756 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c746:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c74a:	4462      	add	r2, ip
 801c74c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c750:	2200      	movs	r2, #0
 801c752:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c756:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c75a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c75e:	eba6 060a 	sub.w	r6, r6, sl
 801c762:	42b2      	cmp	r2, r6
 801c764:	bfc4      	itt	gt
 801c766:	eba1 020a 	subgt.w	r2, r1, sl
 801c76a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c76e:	4a5c      	ldr	r2, [pc, #368]	; (801c8e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c770:	7812      	ldrb	r2, [r2, #0]
 801c772:	b9a2      	cbnz	r2, 801c79e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c774:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c778:	4286      	cmp	r6, r0
 801c77a:	4640      	mov	r0, r8
 801c77c:	9303      	str	r3, [sp, #12]
 801c77e:	bf14      	ite	ne
 801c780:	2600      	movne	r6, #0
 801c782:	2601      	moveq	r6, #1
 801c784:	f7f5 f98d 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c788:	9b03      	ldr	r3, [sp, #12]
 801c78a:	b160      	cbz	r0, 801c7a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c78c:	2300      	movs	r3, #0
 801c78e:	8023      	strh	r3, [r4, #0]
 801c790:	8063      	strh	r3, [r4, #2]
 801c792:	80a3      	strh	r3, [r4, #4]
 801c794:	4620      	mov	r0, r4
 801c796:	80e3      	strh	r3, [r4, #6]
 801c798:	b011      	add	sp, #68	; 0x44
 801c79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c79e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c7a2:	428e      	cmp	r6, r1
 801c7a4:	e7e9      	b.n	801c77a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c7a6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c7aa:	a90e      	add	r1, sp, #56	; 0x38
 801c7ac:	900e      	str	r0, [sp, #56]	; 0x38
 801c7ae:	a80c      	add	r0, sp, #48	; 0x30
 801c7b0:	9205      	str	r2, [sp, #20]
 801c7b2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c7b6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c7ba:	9206      	str	r2, [sp, #24]
 801c7bc:	f8bb 2000 	ldrh.w	r2, [fp]
 801c7c0:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c7c4:	1a9b      	subs	r3, r3, r2
 801c7c6:	b21b      	sxth	r3, r3
 801c7c8:	9303      	str	r3, [sp, #12]
 801c7ca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c7ce:	f8df b118 	ldr.w	fp, [pc, #280]	; 801c8e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c7d2:	ebaa 0a03 	sub.w	sl, sl, r3
 801c7d6:	fa0f f38a 	sxth.w	r3, sl
 801c7da:	9304      	str	r3, [sp, #16]
 801c7dc:	9b03      	ldr	r3, [sp, #12]
 801c7de:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c7e2:	9b04      	ldr	r3, [sp, #16]
 801c7e4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c7e8:	9b05      	ldr	r3, [sp, #20]
 801c7ea:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c7ee:	9b06      	ldr	r3, [sp, #24]
 801c7f0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c7f4:	f7f8 fce2 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c7f8:	4640      	mov	r0, r8
 801c7fa:	f7f8 fc9b 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c7fe:	a80e      	add	r0, sp, #56	; 0x38
 801c800:	f7f8 fc98 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c804:	4b37      	ldr	r3, [pc, #220]	; (801c8e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c806:	4628      	mov	r0, r5
 801c808:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c80c:	881b      	ldrh	r3, [r3, #0]
 801c80e:	9307      	str	r3, [sp, #28]
 801c810:	682b      	ldr	r3, [r5, #0]
 801c812:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c814:	4798      	blx	r3
 801c816:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c81a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c81e:	4681      	mov	r9, r0
 801c820:	f8db 0000 	ldr.w	r0, [fp]
 801c824:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c828:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c82a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c82e:	6803      	ldr	r3, [r0, #0]
 801c830:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c832:	4798      	blx	r3
 801c834:	4607      	mov	r7, r0
 801c836:	f8db 0000 	ldr.w	r0, [fp]
 801c83a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c83e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c842:	6803      	ldr	r3, [r0, #0]
 801c844:	9109      	str	r1, [sp, #36]	; 0x24
 801c846:	9208      	str	r2, [sp, #32]
 801c848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c84a:	4798      	blx	r3
 801c84c:	f010 0f01 	tst.w	r0, #1
 801c850:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c854:	d012      	beq.n	801c87c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c856:	f8db 0000 	ldr.w	r0, [fp]
 801c85a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c85e:	6803      	ldr	r3, [r0, #0]
 801c860:	9200      	str	r2, [sp, #0]
 801c862:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c864:	462b      	mov	r3, r5
 801c866:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c86a:	47b0      	blx	r6
 801c86c:	9b03      	ldr	r3, [sp, #12]
 801c86e:	8023      	strh	r3, [r4, #0]
 801c870:	9b04      	ldr	r3, [sp, #16]
 801c872:	8063      	strh	r3, [r4, #2]
 801c874:	9b05      	ldr	r3, [sp, #20]
 801c876:	80a3      	strh	r3, [r4, #4]
 801c878:	9b06      	ldr	r3, [sp, #24]
 801c87a:	e78b      	b.n	801c794 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c87c:	fb09 f202 	mul.w	r2, r9, r2
 801c880:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c884:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c888:	440f      	add	r7, r1
 801c88a:	b166      	cbz	r6, 801c8a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c88c:	9a07      	ldr	r2, [sp, #28]
 801c88e:	4592      	cmp	sl, r2
 801c890:	d109      	bne.n	801c8a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c892:	f8db 0000 	ldr.w	r0, [fp]
 801c896:	fb09 f303 	mul.w	r3, r9, r3
 801c89a:	4629      	mov	r1, r5
 801c89c:	6802      	ldr	r2, [r0, #0]
 801c89e:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c8a0:	463a      	mov	r2, r7
 801c8a2:	47b0      	blx	r6
 801c8a4:	e7e2      	b.n	801c86c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c8a6:	fb0a f303 	mul.w	r3, sl, r3
 801c8aa:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c8ae:	f8df b038 	ldr.w	fp, [pc, #56]	; 801c8e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c8b2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c8b6:	4545      	cmp	r5, r8
 801c8b8:	d2d8      	bcs.n	801c86c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c8ba:	f8db 0000 	ldr.w	r0, [fp]
 801c8be:	4629      	mov	r1, r5
 801c8c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c8c4:	4435      	add	r5, r6
 801c8c6:	6802      	ldr	r2, [r0, #0]
 801c8c8:	005b      	lsls	r3, r3, #1
 801c8ca:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c8ce:	463a      	mov	r2, r7
 801c8d0:	47d0      	blx	sl
 801c8d2:	444f      	add	r7, r9
 801c8d4:	e7ef      	b.n	801c8b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c8d6:	bf00      	nop
 801c8d8:	24004a44 	.word	0x24004a44
 801c8dc:	24004a46 	.word	0x24004a46
 801c8e0:	24004a48 	.word	0x24004a48
 801c8e4:	24004a4a 	.word	0x24004a4a
 801c8e8:	24004a50 	.word	0x24004a50

0801c8ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c8ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c8ee:	4606      	mov	r6, r0
 801c8f0:	b087      	sub	sp, #28
 801c8f2:	460c      	mov	r4, r1
 801c8f4:	4617      	mov	r7, r2
 801c8f6:	461d      	mov	r5, r3
 801c8f8:	b333      	cbz	r3, 801c948 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c8fa:	4608      	mov	r0, r1
 801c8fc:	f7f5 f8d1 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c900:	bb10      	cbnz	r0, 801c948 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c902:	6820      	ldr	r0, [r4, #0]
 801c904:	ab04      	add	r3, sp, #16
 801c906:	6861      	ldr	r1, [r4, #4]
 801c908:	4c1b      	ldr	r4, [pc, #108]	; (801c978 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c90a:	c303      	stmia	r3!, {r0, r1}
 801c90c:	a804      	add	r0, sp, #16
 801c90e:	f7f8 fc11 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c912:	6820      	ldr	r0, [r4, #0]
 801c914:	6803      	ldr	r3, [r0, #0]
 801c916:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c918:	4798      	blx	r3
 801c91a:	2dff      	cmp	r5, #255	; 0xff
 801c91c:	d016      	beq.n	801c94c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c91e:	f010 0f08 	tst.w	r0, #8
 801c922:	6820      	ldr	r0, [r4, #0]
 801c924:	d015      	beq.n	801c952 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c926:	2400      	movs	r4, #0
 801c928:	6801      	ldr	r1, [r0, #0]
 801c92a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c92e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c932:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c936:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c93a:	9401      	str	r4, [sp, #4]
 801c93c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c940:	9400      	str	r4, [sp, #0]
 801c942:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c944:	4639      	mov	r1, r7
 801c946:	47a0      	blx	r4
 801c948:	b007      	add	sp, #28
 801c94a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c94c:	f010 0f02 	tst.w	r0, #2
 801c950:	e7e7      	b.n	801c922 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c952:	6803      	ldr	r3, [r0, #0]
 801c954:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c956:	4798      	blx	r3
 801c958:	4b08      	ldr	r3, [pc, #32]	; (801c97c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c95a:	4601      	mov	r1, r0
 801c95c:	4630      	mov	r0, r6
 801c95e:	881a      	ldrh	r2, [r3, #0]
 801c960:	6833      	ldr	r3, [r6, #0]
 801c962:	e9cd 7500 	strd	r7, r5, [sp]
 801c966:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c968:	ab04      	add	r3, sp, #16
 801c96a:	47a8      	blx	r5
 801c96c:	6820      	ldr	r0, [r4, #0]
 801c96e:	6803      	ldr	r3, [r0, #0]
 801c970:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c972:	4798      	blx	r3
 801c974:	e7e8      	b.n	801c948 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c976:	bf00      	nop
 801c978:	24004a50 	.word	0x24004a50
 801c97c:	24004a4a 	.word	0x24004a4a

0801c980 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c980:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c984:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c988:	4688      	mov	r8, r1
 801c98a:	4614      	mov	r4, r2
 801c98c:	461d      	mov	r5, r3
 801c98e:	9e08      	ldr	r6, [sp, #32]
 801c990:	2f00      	cmp	r7, #0
 801c992:	f000 80ab 	beq.w	801caec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c996:	4618      	mov	r0, r3
 801c998:	f7f5 f883 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c99c:	2800      	cmp	r0, #0
 801c99e:	f040 80a5 	bne.w	801caec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c9a2:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c9a6:	2fff      	cmp	r7, #255	; 0xff
 801c9a8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c9ac:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c9b0:	fb04 1303 	mla	r3, r4, r3, r1
 801c9b4:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c9b8:	eba4 0200 	sub.w	r2, r4, r0
 801c9bc:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c9c0:	fb04 f505 	mul.w	r5, r4, r5
 801c9c4:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c9c8:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c9cc:	d04a      	beq.n	801ca64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801c9ce:	b2bc      	uxth	r4, r7
 801c9d0:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c9d4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c9d8:	fa5f f788 	uxtb.w	r7, r8
 801c9dc:	b2f3      	uxtb	r3, r6
 801c9de:	0040      	lsls	r0, r0, #1
 801c9e0:	fb0e fe04 	mul.w	lr, lr, r4
 801c9e4:	4367      	muls	r7, r4
 801c9e6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c9ea:	4363      	muls	r3, r4
 801c9ec:	fa1f fc8c 	uxth.w	ip, ip
 801c9f0:	42a9      	cmp	r1, r5
 801c9f2:	d27b      	bcs.n	801caec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c9f4:	eb01 0900 	add.w	r9, r1, r0
 801c9f8:	4549      	cmp	r1, r9
 801c9fa:	d231      	bcs.n	801ca60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801c9fc:	880a      	ldrh	r2, [r1, #0]
 801c9fe:	1214      	asrs	r4, r2, #8
 801ca00:	10d6      	asrs	r6, r2, #3
 801ca02:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ca06:	00d2      	lsls	r2, r2, #3
 801ca08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ca0c:	b2d2      	uxtb	r2, r2
 801ca0e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ca12:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ca16:	fb14 f40c 	smulbb	r4, r4, ip
 801ca1a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ca1e:	fb12 f20c 	smulbb	r2, r2, ip
 801ca22:	fb16 f60c 	smulbb	r6, r6, ip
 801ca26:	4474      	add	r4, lr
 801ca28:	441a      	add	r2, r3
 801ca2a:	b2a4      	uxth	r4, r4
 801ca2c:	443e      	add	r6, r7
 801ca2e:	b292      	uxth	r2, r2
 801ca30:	f104 0a01 	add.w	sl, r4, #1
 801ca34:	b2b6      	uxth	r6, r6
 801ca36:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ca3a:	f102 0a01 	add.w	sl, r2, #1
 801ca3e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ca42:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ca46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ca4a:	4322      	orrs	r2, r4
 801ca4c:	1c74      	adds	r4, r6, #1
 801ca4e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ca52:	0976      	lsrs	r6, r6, #5
 801ca54:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ca58:	4332      	orrs	r2, r6
 801ca5a:	f821 2b02 	strh.w	r2, [r1], #2
 801ca5e:	e7cb      	b.n	801c9f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801ca60:	4441      	add	r1, r8
 801ca62:	e7c5      	b.n	801c9f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801ca64:	0973      	lsrs	r3, r6, #5
 801ca66:	4f22      	ldr	r7, [pc, #136]	; (801caf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801ca68:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ca6c:	ea08 0707 	and.w	r7, r8, r7
 801ca70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca74:	433b      	orrs	r3, r7
 801ca76:	07e7      	lsls	r7, r4, #31
 801ca78:	ea43 0306 	orr.w	r3, r3, r6
 801ca7c:	b29b      	uxth	r3, r3
 801ca7e:	d50b      	bpl.n	801ca98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801ca80:	0040      	lsls	r0, r0, #1
 801ca82:	0052      	lsls	r2, r2, #1
 801ca84:	42a9      	cmp	r1, r5
 801ca86:	d231      	bcs.n	801caec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801ca88:	180c      	adds	r4, r1, r0
 801ca8a:	42a1      	cmp	r1, r4
 801ca8c:	d202      	bcs.n	801ca94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ca8e:	f821 3b02 	strh.w	r3, [r1], #2
 801ca92:	e7fa      	b.n	801ca8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801ca94:	4411      	add	r1, r2
 801ca96:	e7f5      	b.n	801ca84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801ca98:	078e      	lsls	r6, r1, #30
 801ca9a:	d008      	beq.n	801caae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801ca9c:	0066      	lsls	r6, r4, #1
 801ca9e:	460a      	mov	r2, r1
 801caa0:	42aa      	cmp	r2, r5
 801caa2:	d202      	bcs.n	801caaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801caa4:	8013      	strh	r3, [r2, #0]
 801caa6:	4432      	add	r2, r6
 801caa8:	e7fa      	b.n	801caa0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801caaa:	3102      	adds	r1, #2
 801caac:	3801      	subs	r0, #1
 801caae:	07c2      	lsls	r2, r0, #31
 801cab0:	d50b      	bpl.n	801caca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801cab2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801cab6:	0066      	lsls	r6, r4, #1
 801cab8:	3a01      	subs	r2, #1
 801caba:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801cabe:	42aa      	cmp	r2, r5
 801cac0:	d202      	bcs.n	801cac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801cac2:	8013      	strh	r3, [r2, #0]
 801cac4:	4432      	add	r2, r6
 801cac6:	e7fa      	b.n	801cabe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801cac8:	3801      	subs	r0, #1
 801caca:	b178      	cbz	r0, 801caec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801cacc:	1040      	asrs	r0, r0, #1
 801cace:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801cad2:	0080      	lsls	r0, r0, #2
 801cad4:	0064      	lsls	r4, r4, #1
 801cad6:	42a9      	cmp	r1, r5
 801cad8:	d208      	bcs.n	801caec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801cada:	180e      	adds	r6, r1, r0
 801cadc:	460a      	mov	r2, r1
 801cade:	42b2      	cmp	r2, r6
 801cae0:	d202      	bcs.n	801cae8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cae2:	f842 3b04 	str.w	r3, [r2], #4
 801cae6:	e7fa      	b.n	801cade <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801cae8:	4421      	add	r1, r4
 801caea:	e7f4      	b.n	801cad6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801caec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801caf0:	00fff800 	.word	0x00fff800

0801caf4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801caf4:	2200      	movs	r2, #0
 801caf6:	4912      	ldr	r1, [pc, #72]	; (801cb40 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801caf8:	6042      	str	r2, [r0, #4]
 801cafa:	6001      	str	r1, [r0, #0]
 801cafc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801cb00:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801cb04:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801cb08:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801cb0c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cb10:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cb14:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cb18:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cb1c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cb20:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cb24:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cb28:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cb2c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cb30:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cb34:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801cb38:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801cb3c:	4770      	bx	lr
 801cb3e:	bf00      	nop
 801cb40:	08029274 	.word	0x08029274

0801cb44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cb44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb48:	b08d      	sub	sp, #52	; 0x34
 801cb4a:	460d      	mov	r5, r1
 801cb4c:	4604      	mov	r4, r0
 801cb4e:	4699      	mov	r9, r3
 801cb50:	6808      	ldr	r0, [r1, #0]
 801cb52:	ab08      	add	r3, sp, #32
 801cb54:	6849      	ldr	r1, [r1, #4]
 801cb56:	c303      	stmia	r3!, {r0, r1}
 801cb58:	6810      	ldr	r0, [r2, #0]
 801cb5a:	ab0a      	add	r3, sp, #40	; 0x28
 801cb5c:	6851      	ldr	r1, [r2, #4]
 801cb5e:	c303      	stmia	r3!, {r0, r1}
 801cb60:	a808      	add	r0, sp, #32
 801cb62:	f7f8 fae7 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb66:	4629      	mov	r1, r5
 801cb68:	a80a      	add	r0, sp, #40	; 0x28
 801cb6a:	4d67      	ldr	r5, [pc, #412]	; (801cd08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cb6c:	f7f8 fb26 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb70:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801cb74:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801cb78:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801cb7c:	6828      	ldr	r0, [r5, #0]
 801cb7e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb82:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801cb86:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cb8a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cb8e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801cb92:	440a      	add	r2, r1
 801cb94:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cb98:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801cb9c:	4413      	add	r3, r2
 801cb9e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801cba2:	6803      	ldr	r3, [r0, #0]
 801cba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cba6:	4798      	blx	r3
 801cba8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cbac:	d119      	bne.n	801cbe2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801cbae:	f010 0f20 	tst.w	r0, #32
 801cbb2:	6828      	ldr	r0, [r5, #0]
 801cbb4:	d018      	beq.n	801cbe8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801cbb6:	2500      	movs	r5, #0
 801cbb8:	6801      	ldr	r1, [r0, #0]
 801cbba:	b2b6      	uxth	r6, r6
 801cbbc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cbc0:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801cbc4:	9601      	str	r6, [sp, #4]
 801cbc6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801cbca:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cbce:	9502      	str	r5, [sp, #8]
 801cbd0:	fa1f f588 	uxth.w	r5, r8
 801cbd4:	9500      	str	r5, [sp, #0]
 801cbd6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cbd8:	4621      	mov	r1, r4
 801cbda:	47a8      	blx	r5
 801cbdc:	b00d      	add	sp, #52	; 0x34
 801cbde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbe2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cbe6:	e7e4      	b.n	801cbb2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cbe8:	6803      	ldr	r3, [r0, #0]
 801cbea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cbec:	4798      	blx	r3
 801cbee:	4947      	ldr	r1, [pc, #284]	; (801cd0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801cbf0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cbf4:	880b      	ldrh	r3, [r1, #0]
 801cbf6:	468a      	mov	sl, r1
 801cbf8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801cbfc:	fb03 5202 	mla	r2, r3, r2, r5
 801cc00:	4373      	muls	r3, r6
 801cc02:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc06:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cc0a:	9307      	str	r3, [sp, #28]
 801cc0c:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cc10:	9306      	str	r3, [sp, #24]
 801cc12:	9b07      	ldr	r3, [sp, #28]
 801cc14:	4298      	cmp	r0, r3
 801cc16:	d270      	bcs.n	801ccfa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801cc18:	9b06      	ldr	r3, [sp, #24]
 801cc1a:	4621      	mov	r1, r4
 801cc1c:	eb00 0b03 	add.w	fp, r0, r3
 801cc20:	4558      	cmp	r0, fp
 801cc22:	d25d      	bcs.n	801cce0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801cc24:	f851 4b04 	ldr.w	r4, [r1], #4
 801cc28:	0e23      	lsrs	r3, r4, #24
 801cc2a:	d014      	beq.n	801cc56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cc2c:	2bff      	cmp	r3, #255	; 0xff
 801cc2e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801cc32:	d112      	bne.n	801cc5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cc34:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cc38:	d10f      	bne.n	801cc5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cc3a:	0963      	lsrs	r3, r4, #5
 801cc3c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cc40:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cc44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc48:	f02c 0c07 	bic.w	ip, ip, #7
 801cc4c:	ea43 0c0c 	orr.w	ip, r3, ip
 801cc50:	ea4c 0404 	orr.w	r4, ip, r4
 801cc54:	8004      	strh	r4, [r0, #0]
 801cc56:	3002      	adds	r0, #2
 801cc58:	e7e2      	b.n	801cc20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801cc5a:	fb09 f303 	mul.w	r3, r9, r3
 801cc5e:	8807      	ldrh	r7, [r0, #0]
 801cc60:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cc64:	fa5f fc8c 	uxtb.w	ip, ip
 801cc68:	1c5a      	adds	r2, r3, #1
 801cc6a:	123e      	asrs	r6, r7, #8
 801cc6c:	10fd      	asrs	r5, r7, #3
 801cc6e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801cc72:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cc76:	00ff      	lsls	r7, r7, #3
 801cc78:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cc7c:	1212      	asrs	r2, r2, #8
 801cc7e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cc82:	b293      	uxth	r3, r2
 801cc84:	43d2      	mvns	r2, r2
 801cc86:	b2ff      	uxtb	r7, r7
 801cc88:	fb1e fe03 	smulbb	lr, lr, r3
 801cc8c:	b2d2      	uxtb	r2, r2
 801cc8e:	fb1c fc03 	smulbb	ip, ip, r3
 801cc92:	b2e4      	uxtb	r4, r4
 801cc94:	fb06 e602 	mla	r6, r6, r2, lr
 801cc98:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cc9c:	fb14 f403 	smulbb	r4, r4, r3
 801cca0:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cca4:	b2b6      	uxth	r6, r6
 801cca6:	fb05 c502 	mla	r5, r5, r2, ip
 801ccaa:	fb07 4702 	mla	r7, r7, r2, r4
 801ccae:	f106 0e01 	add.w	lr, r6, #1
 801ccb2:	b2ad      	uxth	r5, r5
 801ccb4:	b2bf      	uxth	r7, r7
 801ccb6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ccba:	f105 0c01 	add.w	ip, r5, #1
 801ccbe:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ccc2:	1c7e      	adds	r6, r7, #1
 801ccc4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ccc8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cccc:	096d      	lsrs	r5, r5, #5
 801ccce:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ccd2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ccd6:	ea46 060e 	orr.w	r6, r6, lr
 801ccda:	432e      	orrs	r6, r5
 801ccdc:	8006      	strh	r6, [r0, #0]
 801ccde:	e7ba      	b.n	801cc56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cce0:	f8ba 3000 	ldrh.w	r3, [sl]
 801cce4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cce8:	eba3 0308 	sub.w	r3, r3, r8
 801ccec:	eba4 0408 	sub.w	r4, r4, r8
 801ccf0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ccf4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ccf8:	e78b      	b.n	801cc12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ccfa:	4b03      	ldr	r3, [pc, #12]	; (801cd08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ccfc:	6818      	ldr	r0, [r3, #0]
 801ccfe:	6803      	ldr	r3, [r0, #0]
 801cd00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd02:	4798      	blx	r3
 801cd04:	e76a      	b.n	801cbdc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cd06:	bf00      	nop
 801cd08:	24004a50 	.word	0x24004a50
 801cd0c:	24004a4a 	.word	0x24004a4a

0801cd10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cd10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cd14:	b085      	sub	sp, #20
 801cd16:	6810      	ldr	r0, [r2, #0]
 801cd18:	460c      	mov	r4, r1
 801cd1a:	6851      	ldr	r1, [r2, #4]
 801cd1c:	466d      	mov	r5, sp
 801cd1e:	4616      	mov	r6, r2
 801cd20:	c503      	stmia	r5!, {r0, r1}
 801cd22:	6818      	ldr	r0, [r3, #0]
 801cd24:	6859      	ldr	r1, [r3, #4]
 801cd26:	c503      	stmia	r5!, {r0, r1}
 801cd28:	4668      	mov	r0, sp
 801cd2a:	4d2e      	ldr	r5, [pc, #184]	; (801cde4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cd2c:	f7f8 fa02 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd30:	4631      	mov	r1, r6
 801cd32:	a802      	add	r0, sp, #8
 801cd34:	4e2c      	ldr	r6, [pc, #176]	; (801cde8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cd36:	f7f8 fa41 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd3a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cd3e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cd42:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cd46:	6828      	ldr	r0, [r5, #0]
 801cd48:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cd4c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cd50:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cd54:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cd58:	f8bd 1000 	ldrh.w	r1, [sp]
 801cd5c:	440a      	add	r2, r1
 801cd5e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cd62:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cd66:	4413      	add	r3, r2
 801cd68:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cd6c:	6803      	ldr	r3, [r0, #0]
 801cd6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd70:	4798      	blx	r3
 801cd72:	8833      	ldrh	r3, [r6, #0]
 801cd74:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cd78:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cd7c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cd80:	f8df e068 	ldr.w	lr, [pc, #104]	; 801cdec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cd84:	fb03 1202 	mla	r2, r3, r2, r1
 801cd88:	fb08 f303 	mul.w	r3, r8, r3
 801cd8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd90:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd94:	4298      	cmp	r0, r3
 801cd96:	d21d      	bcs.n	801cdd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cd98:	eb00 080c 	add.w	r8, r0, ip
 801cd9c:	4540      	cmp	r0, r8
 801cd9e:	d20f      	bcs.n	801cdc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cda0:	f854 1b04 	ldr.w	r1, [r4], #4
 801cda4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cda8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cdac:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cdb0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cdb4:	ea42 0209 	orr.w	r2, r2, r9
 801cdb8:	430a      	orrs	r2, r1
 801cdba:	f820 2b02 	strh.w	r2, [r0], #2
 801cdbe:	e7ed      	b.n	801cd9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cdc0:	8832      	ldrh	r2, [r6, #0]
 801cdc2:	1bd2      	subs	r2, r2, r7
 801cdc4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cdc8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cdcc:	1bd2      	subs	r2, r2, r7
 801cdce:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cdd2:	e7df      	b.n	801cd94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cdd4:	6828      	ldr	r0, [r5, #0]
 801cdd6:	6803      	ldr	r3, [r0, #0]
 801cdd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cdda:	4798      	blx	r3
 801cddc:	b005      	add	sp, #20
 801cdde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cde2:	bf00      	nop
 801cde4:	24004a50 	.word	0x24004a50
 801cde8:	24004a4a 	.word	0x24004a4a
 801cdec:	fffff800 	.word	0xfffff800

0801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cdf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cdf4:	b08e      	sub	sp, #56	; 0x38
 801cdf6:	460e      	mov	r6, r1
 801cdf8:	4604      	mov	r4, r0
 801cdfa:	461d      	mov	r5, r3
 801cdfc:	6808      	ldr	r0, [r1, #0]
 801cdfe:	ab0a      	add	r3, sp, #40	; 0x28
 801ce00:	6849      	ldr	r1, [r1, #4]
 801ce02:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 801cfd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ce06:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 801cfdc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ce0a:	c303      	stmia	r3!, {r0, r1}
 801ce0c:	6810      	ldr	r0, [r2, #0]
 801ce0e:	ab0c      	add	r3, sp, #48	; 0x30
 801ce10:	6851      	ldr	r1, [r2, #4]
 801ce12:	c303      	stmia	r3!, {r0, r1}
 801ce14:	a80a      	add	r0, sp, #40	; 0x28
 801ce16:	f7f8 f98d 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce1a:	4631      	mov	r1, r6
 801ce1c:	a80c      	add	r0, sp, #48	; 0x30
 801ce1e:	f7f8 f9cd 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce22:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ce26:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ce2a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ce2e:	f8d8 0000 	ldr.w	r0, [r8]
 801ce32:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce36:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ce3a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ce3e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ce42:	440c      	add	r4, r1
 801ce44:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ce48:	440a      	add	r2, r1
 801ce4a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ce4e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ce52:	4413      	add	r3, r2
 801ce54:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ce58:	6803      	ldr	r3, [r0, #0]
 801ce5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ce5c:	4798      	blx	r3
 801ce5e:	2dff      	cmp	r5, #255	; 0xff
 801ce60:	d124      	bne.n	801ceac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ce62:	f010 0f01 	tst.w	r0, #1
 801ce66:	f8d8 0000 	ldr.w	r0, [r8]
 801ce6a:	d022      	beq.n	801ceb2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ce6c:	2100      	movs	r1, #0
 801ce6e:	f04f 0e01 	mov.w	lr, #1
 801ce72:	f8d0 c000 	ldr.w	ip, [r0]
 801ce76:	b2b6      	uxth	r6, r6
 801ce78:	f8cd e018 	str.w	lr, [sp, #24]
 801ce7c:	b2bf      	uxth	r7, r7
 801ce7e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801ce82:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801ce86:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ce8a:	f8b9 e000 	ldrh.w	lr, [r9]
 801ce8e:	9503      	str	r5, [sp, #12]
 801ce90:	9601      	str	r6, [sp, #4]
 801ce92:	9700      	str	r7, [sp, #0]
 801ce94:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ce98:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ce9c:	9102      	str	r1, [sp, #8]
 801ce9e:	4621      	mov	r1, r4
 801cea0:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cea4:	47a8      	blx	r5
 801cea6:	b00e      	add	sp, #56	; 0x38
 801cea8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ceac:	f010 0f04 	tst.w	r0, #4
 801ceb0:	e7d9      	b.n	801ce66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ceb2:	6803      	ldr	r3, [r0, #0]
 801ceb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ceb6:	4798      	blx	r3
 801ceb8:	f8b9 3000 	ldrh.w	r3, [r9]
 801cebc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cec0:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cec4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cec8:	435e      	muls	r6, r3
 801ceca:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cece:	2dff      	cmp	r5, #255	; 0xff
 801ced0:	fb03 1202 	mla	r2, r3, r2, r1
 801ced4:	ebac 0c07 	sub.w	ip, ip, r7
 801ced8:	eba3 0707 	sub.w	r7, r3, r7
 801cedc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cee0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cee4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cee8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801ceec:	d049      	beq.n	801cf82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801ceee:	43eb      	mvns	r3, r5
 801cef0:	fa1f f985 	uxth.w	r9, r5
 801cef4:	b2db      	uxtb	r3, r3
 801cef6:	42b0      	cmp	r0, r6
 801cef8:	d266      	bcs.n	801cfc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cefa:	eb00 0a0e 	add.w	sl, r0, lr
 801cefe:	4550      	cmp	r0, sl
 801cf00:	4621      	mov	r1, r4
 801cf02:	f104 0403 	add.w	r4, r4, #3
 801cf06:	d25b      	bcs.n	801cfc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cf08:	8802      	ldrh	r2, [r0, #0]
 801cf0a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cf0e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cf12:	fb11 f109 	smulbb	r1, r1, r9
 801cf16:	10d5      	asrs	r5, r2, #3
 801cf18:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cf1c:	00d2      	lsls	r2, r2, #3
 801cf1e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cf22:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cf26:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cf2a:	fb08 1803 	mla	r8, r8, r3, r1
 801cf2e:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cf32:	b2d2      	uxtb	r2, r2
 801cf34:	fb11 f109 	smulbb	r1, r1, r9
 801cf38:	fa1f f888 	uxth.w	r8, r8
 801cf3c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cf40:	fb05 1503 	mla	r5, r5, r3, r1
 801cf44:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cf48:	fb11 f109 	smulbb	r1, r1, r9
 801cf4c:	b2ad      	uxth	r5, r5
 801cf4e:	fb02 1203 	mla	r2, r2, r3, r1
 801cf52:	f108 0101 	add.w	r1, r8, #1
 801cf56:	b292      	uxth	r2, r2
 801cf58:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cf5c:	1c51      	adds	r1, r2, #1
 801cf5e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801cf62:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cf66:	1c69      	adds	r1, r5, #1
 801cf68:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cf6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cf70:	096d      	lsrs	r5, r5, #5
 801cf72:	ea42 0208 	orr.w	r2, r2, r8
 801cf76:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cf7a:	432a      	orrs	r2, r5
 801cf7c:	f820 2b02 	strh.w	r2, [r0], #2
 801cf80:	e7bd      	b.n	801cefe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801cf82:	4a14      	ldr	r2, [pc, #80]	; (801cfd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cf84:	42b0      	cmp	r0, r6
 801cf86:	d21f      	bcs.n	801cfc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cf88:	eb00 050e 	add.w	r5, r0, lr
 801cf8c:	42a8      	cmp	r0, r5
 801cf8e:	4621      	mov	r1, r4
 801cf90:	f104 0403 	add.w	r4, r4, #3
 801cf94:	d210      	bcs.n	801cfb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cf96:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cf9a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cf9e:	00db      	lsls	r3, r3, #3
 801cfa0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cfa4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cfa8:	430b      	orrs	r3, r1
 801cfaa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cfae:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cfb2:	f820 3b02 	strh.w	r3, [r0], #2
 801cfb6:	e7e9      	b.n	801cf8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cfb8:	4438      	add	r0, r7
 801cfba:	eb01 040c 	add.w	r4, r1, ip
 801cfbe:	e7e1      	b.n	801cf84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cfc0:	4438      	add	r0, r7
 801cfc2:	eb01 040c 	add.w	r4, r1, ip
 801cfc6:	e796      	b.n	801cef6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cfc8:	4b03      	ldr	r3, [pc, #12]	; (801cfd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cfca:	6818      	ldr	r0, [r3, #0]
 801cfcc:	6803      	ldr	r3, [r0, #0]
 801cfce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfd0:	4798      	blx	r3
 801cfd2:	e768      	b.n	801cea6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cfd4:	fffff800 	.word	0xfffff800
 801cfd8:	24004a50 	.word	0x24004a50
 801cfdc:	24004a4a 	.word	0x24004a4a

0801cfe0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cfe0:	b4f0      	push	{r4, r5, r6, r7}
 801cfe2:	4616      	mov	r6, r2
 801cfe4:	461c      	mov	r4, r3
 801cfe6:	460d      	mov	r5, r1
 801cfe8:	9a04      	ldr	r2, [sp, #16]
 801cfea:	2e01      	cmp	r6, #1
 801cfec:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cff0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801cff4:	d012      	beq.n	801d01c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801cff6:	d303      	bcc.n	801d000 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801cff8:	2e02      	cmp	r6, #2
 801cffa:	d00a      	beq.n	801d012 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cffc:	bcf0      	pop	{r4, r5, r6, r7}
 801cffe:	4770      	bx	lr
 801d000:	6805      	ldr	r5, [r0, #0]
 801d002:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d006:	68ed      	ldr	r5, [r5, #12]
 801d008:	4613      	mov	r3, r2
 801d00a:	4622      	mov	r2, r4
 801d00c:	46ac      	mov	ip, r5
 801d00e:	bcf0      	pop	{r4, r5, r6, r7}
 801d010:	4760      	bx	ip
 801d012:	4621      	mov	r1, r4
 801d014:	4628      	mov	r0, r5
 801d016:	bcf0      	pop	{r4, r5, r6, r7}
 801d018:	f7ff bd94 	b.w	801cb44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d01c:	4621      	mov	r1, r4
 801d01e:	4628      	mov	r0, r5
 801d020:	bcf0      	pop	{r4, r5, r6, r7}
 801d022:	f7ff bee5 	b.w	801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d028 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d02c:	b093      	sub	sp, #76	; 0x4c
 801d02e:	4681      	mov	r9, r0
 801d030:	4688      	mov	r8, r1
 801d032:	6810      	ldr	r0, [r2, #0]
 801d034:	6851      	ldr	r1, [r2, #4]
 801d036:	ac0e      	add	r4, sp, #56	; 0x38
 801d038:	4616      	mov	r6, r2
 801d03a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d03e:	4f6b      	ldr	r7, [pc, #428]	; (801d1ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d040:	c403      	stmia	r4!, {r0, r1}
 801d042:	6818      	ldr	r0, [r3, #0]
 801d044:	ac10      	add	r4, sp, #64	; 0x40
 801d046:	6859      	ldr	r1, [r3, #4]
 801d048:	c403      	stmia	r4!, {r0, r1}
 801d04a:	a80e      	add	r0, sp, #56	; 0x38
 801d04c:	f7f8 f872 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d050:	4631      	mov	r1, r6
 801d052:	a810      	add	r0, sp, #64	; 0x40
 801d054:	4e66      	ldr	r6, [pc, #408]	; (801d1f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d056:	f7f8 f8b1 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d05a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d05e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d062:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d066:	6830      	ldr	r0, [r6, #0]
 801d068:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d06c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d070:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d074:	4489      	add	r9, r1
 801d076:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d07a:	440a      	add	r2, r1
 801d07c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d080:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d084:	4413      	add	r3, r2
 801d086:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d08a:	6803      	ldr	r3, [r0, #0]
 801d08c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d08e:	4798      	blx	r3
 801d090:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d094:	6830      	ldr	r0, [r6, #0]
 801d096:	d01d      	beq.n	801d0d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d098:	2200      	movs	r2, #0
 801d09a:	6801      	ldr	r1, [r0, #0]
 801d09c:	b2a4      	uxth	r4, r4
 801d09e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d0a2:	b2ad      	uxth	r5, r5
 801d0a4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d0a8:	220b      	movs	r2, #11
 801d0aa:	9207      	str	r2, [sp, #28]
 801d0ac:	883a      	ldrh	r2, [r7, #0]
 801d0ae:	9502      	str	r5, [sp, #8]
 801d0b0:	9206      	str	r2, [sp, #24]
 801d0b2:	2201      	movs	r2, #1
 801d0b4:	9401      	str	r4, [sp, #4]
 801d0b6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d0ba:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d0be:	9203      	str	r2, [sp, #12]
 801d0c0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d0c4:	9200      	str	r2, [sp, #0]
 801d0c6:	4642      	mov	r2, r8
 801d0c8:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d0ca:	4649      	mov	r1, r9
 801d0cc:	47a0      	blx	r4
 801d0ce:	b013      	add	sp, #76	; 0x4c
 801d0d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0d4:	6803      	ldr	r3, [r0, #0]
 801d0d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d0d8:	4798      	blx	r3
 801d0da:	883b      	ldrh	r3, [r7, #0]
 801d0dc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d0e0:	f04f 0e04 	mov.w	lr, #4
 801d0e4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d0e8:	435d      	muls	r5, r3
 801d0ea:	fb03 1202 	mla	r2, r3, r2, r1
 801d0ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d0f2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d0f6:	920c      	str	r2, [sp, #48]	; 0x30
 801d0f8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d0fc:	1b12      	subs	r2, r2, r4
 801d0fe:	920d      	str	r2, [sp, #52]	; 0x34
 801d100:	0062      	lsls	r2, r4, #1
 801d102:	1b1c      	subs	r4, r3, r4
 801d104:	920a      	str	r2, [sp, #40]	; 0x28
 801d106:	0063      	lsls	r3, r4, #1
 801d108:	930b      	str	r3, [sp, #44]	; 0x2c
 801d10a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d10c:	4298      	cmp	r0, r3
 801d10e:	d266      	bcs.n	801d1de <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d110:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d112:	eb00 0b03 	add.w	fp, r0, r3
 801d116:	4558      	cmp	r0, fp
 801d118:	d25c      	bcs.n	801d1d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d11a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d11e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d122:	f858 2003 	ldr.w	r2, [r8, r3]
 801d126:	0e11      	lsrs	r1, r2, #24
 801d128:	d012      	beq.n	801d150 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d12a:	29ff      	cmp	r1, #255	; 0xff
 801d12c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d130:	d110      	bne.n	801d154 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d132:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d136:	d10d      	bne.n	801d154 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d138:	0953      	lsrs	r3, r2, #5
 801d13a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d13e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d142:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d146:	f027 0707 	bic.w	r7, r7, #7
 801d14a:	431f      	orrs	r7, r3
 801d14c:	433a      	orrs	r2, r7
 801d14e:	8002      	strh	r2, [r0, #0]
 801d150:	3002      	adds	r0, #2
 801d152:	e7e0      	b.n	801d116 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d154:	fb0a f101 	mul.w	r1, sl, r1
 801d158:	8806      	ldrh	r6, [r0, #0]
 801d15a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d15e:	b2d2      	uxtb	r2, r2
 801d160:	1c4b      	adds	r3, r1, #1
 801d162:	1235      	asrs	r5, r6, #8
 801d164:	10f4      	asrs	r4, r6, #3
 801d166:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d16a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d16e:	00f6      	lsls	r6, r6, #3
 801d170:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d174:	121b      	asrs	r3, r3, #8
 801d176:	b2f6      	uxtb	r6, r6
 801d178:	b299      	uxth	r1, r3
 801d17a:	43db      	mvns	r3, r3
 801d17c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d180:	fb1c fc01 	smulbb	ip, ip, r1
 801d184:	b2db      	uxtb	r3, r3
 801d186:	fb12 f201 	smulbb	r2, r2, r1
 801d18a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d18e:	fb05 c503 	mla	r5, r5, r3, ip
 801d192:	b2ff      	uxtb	r7, r7
 801d194:	fb06 2203 	mla	r2, r6, r3, r2
 801d198:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d19c:	fb17 f701 	smulbb	r7, r7, r1
 801d1a0:	b2ad      	uxth	r5, r5
 801d1a2:	b292      	uxth	r2, r2
 801d1a4:	fb04 7403 	mla	r4, r4, r3, r7
 801d1a8:	f105 0c01 	add.w	ip, r5, #1
 801d1ac:	1c57      	adds	r7, r2, #1
 801d1ae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d1b2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d1b6:	b2a4      	uxth	r4, r4
 801d1b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d1bc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d1c0:	433d      	orrs	r5, r7
 801d1c2:	1c67      	adds	r7, r4, #1
 801d1c4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d1c8:	0964      	lsrs	r4, r4, #5
 801d1ca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d1ce:	4325      	orrs	r5, r4
 801d1d0:	8005      	strh	r5, [r0, #0]
 801d1d2:	e7bd      	b.n	801d150 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d1d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1d6:	4418      	add	r0, r3
 801d1d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d1da:	4499      	add	r9, r3
 801d1dc:	e795      	b.n	801d10a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d1de:	4b04      	ldr	r3, [pc, #16]	; (801d1f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d1e0:	6818      	ldr	r0, [r3, #0]
 801d1e2:	6803      	ldr	r3, [r0, #0]
 801d1e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1e6:	4798      	blx	r3
 801d1e8:	e771      	b.n	801d0ce <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d1ea:	bf00      	nop
 801d1ec:	24004a4a 	.word	0x24004a4a
 801d1f0:	24004a50 	.word	0x24004a50

0801d1f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d1f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1f8:	b087      	sub	sp, #28
 801d1fa:	4680      	mov	r8, r0
 801d1fc:	460d      	mov	r5, r1
 801d1fe:	4614      	mov	r4, r2
 801d200:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d204:	2e00      	cmp	r6, #0
 801d206:	f000 80b9 	beq.w	801d37c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d20a:	6810      	ldr	r0, [r2, #0]
 801d20c:	af02      	add	r7, sp, #8
 801d20e:	6851      	ldr	r1, [r2, #4]
 801d210:	c703      	stmia	r7!, {r0, r1}
 801d212:	6818      	ldr	r0, [r3, #0]
 801d214:	af04      	add	r7, sp, #16
 801d216:	6859      	ldr	r1, [r3, #4]
 801d218:	c703      	stmia	r7!, {r0, r1}
 801d21a:	a802      	add	r0, sp, #8
 801d21c:	f7f7 ff8a 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d220:	4621      	mov	r1, r4
 801d222:	a804      	add	r0, sp, #16
 801d224:	f7f7 ffca 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d228:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d22c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d230:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d234:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d238:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d23c:	eb08 0401 	add.w	r4, r8, r1
 801d240:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d244:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d248:	440a      	add	r2, r1
 801d24a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d24e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d252:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d256:	4413      	add	r3, r2
 801d258:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d25c:	4b49      	ldr	r3, [pc, #292]	; (801d384 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d25e:	6818      	ldr	r0, [r3, #0]
 801d260:	6803      	ldr	r3, [r0, #0]
 801d262:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d264:	4798      	blx	r3
 801d266:	4b48      	ldr	r3, [pc, #288]	; (801d388 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d268:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d26c:	2eff      	cmp	r6, #255	; 0xff
 801d26e:	881a      	ldrh	r2, [r3, #0]
 801d270:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d274:	fb02 c101 	mla	r1, r2, r1, ip
 801d278:	fb02 f207 	mul.w	r2, r2, r7
 801d27c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d280:	f105 0104 	add.w	r1, r5, #4
 801d284:	461d      	mov	r5, r3
 801d286:	d05a      	beq.n	801d33e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d288:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d28c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d290:	b2b6      	uxth	r6, r6
 801d292:	9301      	str	r3, [sp, #4]
 801d294:	fa1f fe8e 	uxth.w	lr, lr
 801d298:	4282      	cmp	r2, r0
 801d29a:	d96a      	bls.n	801d372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d29c:	eb00 0b0a 	add.w	fp, r0, sl
 801d2a0:	4583      	cmp	fp, r0
 801d2a2:	d940      	bls.n	801d326 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d2a4:	8805      	ldrh	r5, [r0, #0]
 801d2a6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d2aa:	122f      	asrs	r7, r5, #8
 801d2ac:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d2b0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d2b4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d2b8:	00ed      	lsls	r5, r5, #3
 801d2ba:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d2be:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d2c2:	fb17 f70e 	smulbb	r7, r7, lr
 801d2c6:	b2ed      	uxtb	r5, r5
 801d2c8:	fb19 f90e 	smulbb	r9, r9, lr
 801d2cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d2d0:	fb15 f50e 	smulbb	r5, r5, lr
 801d2d4:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d2d8:	10df      	asrs	r7, r3, #3
 801d2da:	00db      	lsls	r3, r3, #3
 801d2dc:	fa1f fc8c 	uxth.w	ip, ip
 801d2e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d2e4:	b2db      	uxtb	r3, r3
 801d2e6:	fb07 9706 	mla	r7, r7, r6, r9
 801d2ea:	f10c 0901 	add.w	r9, ip, #1
 801d2ee:	fb03 5306 	mla	r3, r3, r6, r5
 801d2f2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d2f6:	b29b      	uxth	r3, r3
 801d2f8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d2fc:	b2bf      	uxth	r7, r7
 801d2fe:	f103 0c01 	add.w	ip, r3, #1
 801d302:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d306:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d30a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d30e:	f107 0901 	add.w	r9, r7, #1
 801d312:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d316:	097f      	lsrs	r7, r7, #5
 801d318:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d31c:	ea4c 0c07 	orr.w	ip, ip, r7
 801d320:	f820 cb02 	strh.w	ip, [r0], #2
 801d324:	e7bc      	b.n	801d2a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d326:	9b01      	ldr	r3, [sp, #4]
 801d328:	881b      	ldrh	r3, [r3, #0]
 801d32a:	eba3 0308 	sub.w	r3, r3, r8
 801d32e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d332:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d336:	eba3 0308 	sub.w	r3, r3, r8
 801d33a:	441c      	add	r4, r3
 801d33c:	e7ac      	b.n	801d298 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d33e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d342:	4282      	cmp	r2, r0
 801d344:	d915      	bls.n	801d372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d346:	eb00 060a 	add.w	r6, r0, sl
 801d34a:	4286      	cmp	r6, r0
 801d34c:	d906      	bls.n	801d35c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d34e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d352:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d356:	f820 3b02 	strh.w	r3, [r0], #2
 801d35a:	e7f6      	b.n	801d34a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d35c:	882b      	ldrh	r3, [r5, #0]
 801d35e:	eba3 0308 	sub.w	r3, r3, r8
 801d362:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d366:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d36a:	eba3 0308 	sub.w	r3, r3, r8
 801d36e:	441c      	add	r4, r3
 801d370:	e7e7      	b.n	801d342 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d372:	4b04      	ldr	r3, [pc, #16]	; (801d384 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d374:	6818      	ldr	r0, [r3, #0]
 801d376:	6803      	ldr	r3, [r0, #0]
 801d378:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d37a:	4798      	blx	r3
 801d37c:	b007      	add	sp, #28
 801d37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d382:	bf00      	nop
 801d384:	24004a50 	.word	0x24004a50
 801d388:	24004a4a 	.word	0x24004a4a

0801d38c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d38c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d390:	b091      	sub	sp, #68	; 0x44
 801d392:	4680      	mov	r8, r0
 801d394:	460f      	mov	r7, r1
 801d396:	4614      	mov	r4, r2
 801d398:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d39c:	2d00      	cmp	r5, #0
 801d39e:	d051      	beq.n	801d444 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d3a0:	6810      	ldr	r0, [r2, #0]
 801d3a2:	ae0c      	add	r6, sp, #48	; 0x30
 801d3a4:	6851      	ldr	r1, [r2, #4]
 801d3a6:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d5a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d3aa:	c603      	stmia	r6!, {r0, r1}
 801d3ac:	6818      	ldr	r0, [r3, #0]
 801d3ae:	ae0e      	add	r6, sp, #56	; 0x38
 801d3b0:	6859      	ldr	r1, [r3, #4]
 801d3b2:	c603      	stmia	r6!, {r0, r1}
 801d3b4:	a80c      	add	r0, sp, #48	; 0x30
 801d3b6:	f7f7 febd 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3ba:	4621      	mov	r1, r4
 801d3bc:	a80e      	add	r0, sp, #56	; 0x38
 801d3be:	f7f7 fefd 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3c2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d3c6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d3ca:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d3ce:	f8d9 0000 	ldr.w	r0, [r9]
 801d3d2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d3d6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d3da:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d3de:	eb08 0401 	add.w	r4, r8, r1
 801d3e2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d3e6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d5ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d3ea:	440a      	add	r2, r1
 801d3ec:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d3f0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d3f4:	4413      	add	r3, r2
 801d3f6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d3fa:	6803      	ldr	r3, [r0, #0]
 801d3fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d3fe:	4798      	blx	r3
 801d400:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d404:	f8d9 0000 	ldr.w	r0, [r9]
 801d408:	d01f      	beq.n	801d44a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d40a:	2200      	movs	r2, #0
 801d40c:	6801      	ldr	r1, [r0, #0]
 801d40e:	b2b6      	uxth	r6, r6
 801d410:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d414:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d418:	220b      	movs	r2, #11
 801d41a:	9207      	str	r2, [sp, #28]
 801d41c:	f8b8 2000 	ldrh.w	r2, [r8]
 801d420:	9601      	str	r6, [sp, #4]
 801d422:	9206      	str	r2, [sp, #24]
 801d424:	2201      	movs	r2, #1
 801d426:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d42a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d42e:	9203      	str	r2, [sp, #12]
 801d430:	fa1f f28a 	uxth.w	r2, sl
 801d434:	9202      	str	r2, [sp, #8]
 801d436:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d43a:	9200      	str	r2, [sp, #0]
 801d43c:	463a      	mov	r2, r7
 801d43e:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d440:	4621      	mov	r1, r4
 801d442:	47a8      	blx	r5
 801d444:	b011      	add	sp, #68	; 0x44
 801d446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d44a:	6803      	ldr	r3, [r0, #0]
 801d44c:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d450:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d452:	4798      	blx	r3
 801d454:	f8b8 2000 	ldrh.w	r2, [r8]
 801d458:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d45c:	2dff      	cmp	r5, #255	; 0xff
 801d45e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d462:	fb0a fa02 	mul.w	sl, sl, r2
 801d466:	fb02 1303 	mla	r3, r2, r3, r1
 801d46a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d46e:	d062      	beq.n	801d536 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d470:	ea6f 0c05 	mvn.w	ip, r5
 801d474:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d478:	b2ad      	uxth	r5, r5
 801d47a:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d47e:	fa5f fc8c 	uxtb.w	ip, ip
 801d482:	930a      	str	r3, [sp, #40]	; 0x28
 801d484:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d486:	4298      	cmp	r0, r3
 801d488:	f080 8085 	bcs.w	801d596 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d48c:	eb00 0b09 	add.w	fp, r0, r9
 801d490:	4558      	cmp	r0, fp
 801d492:	d246      	bcs.n	801d522 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d494:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d498:	2303      	movs	r3, #3
 801d49a:	2204      	movs	r2, #4
 801d49c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d4a0:	8803      	ldrh	r3, [r0, #0]
 801d4a2:	eb07 0a0e 	add.w	sl, r7, lr
 801d4a6:	1219      	asrs	r1, r3, #8
 801d4a8:	10da      	asrs	r2, r3, #3
 801d4aa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d4ae:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d4b2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d4b6:	00db      	lsls	r3, r3, #3
 801d4b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d4bc:	fb18 f805 	smulbb	r8, r8, r5
 801d4c0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d4c4:	fb1e fe05 	smulbb	lr, lr, r5
 801d4c8:	b2db      	uxtb	r3, r3
 801d4ca:	fb01 810c 	mla	r1, r1, ip, r8
 801d4ce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d4d2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d4d6:	fb18 f805 	smulbb	r8, r8, r5
 801d4da:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d4de:	b289      	uxth	r1, r1
 801d4e0:	fb02 820c 	mla	r2, r2, ip, r8
 801d4e4:	fb03 e30c 	mla	r3, r3, ip, lr
 801d4e8:	f101 0801 	add.w	r8, r1, #1
 801d4ec:	b292      	uxth	r2, r2
 801d4ee:	b29b      	uxth	r3, r3
 801d4f0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d4f4:	f102 0801 	add.w	r8, r2, #1
 801d4f8:	f103 0e01 	add.w	lr, r3, #1
 801d4fc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d500:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d504:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d508:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d50c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d510:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d514:	ea4e 0101 	orr.w	r1, lr, r1
 801d518:	ea41 0108 	orr.w	r1, r1, r8
 801d51c:	f820 1b02 	strh.w	r1, [r0], #2
 801d520:	e7b6      	b.n	801d490 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d522:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d524:	881b      	ldrh	r3, [r3, #0]
 801d526:	1b9b      	subs	r3, r3, r6
 801d528:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d52c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d530:	1b9b      	subs	r3, r3, r6
 801d532:	441c      	add	r4, r3
 801d534:	e7a6      	b.n	801d484 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d536:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d53a:	2203      	movs	r2, #3
 801d53c:	2504      	movs	r5, #4
 801d53e:	4919      	ldr	r1, [pc, #100]	; (801d5a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d540:	4550      	cmp	r0, sl
 801d542:	d228      	bcs.n	801d596 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d544:	eb00 0c09 	add.w	ip, r0, r9
 801d548:	4560      	cmp	r0, ip
 801d54a:	4623      	mov	r3, r4
 801d54c:	d219      	bcs.n	801d582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d54e:	f893 e000 	ldrb.w	lr, [r3]
 801d552:	3401      	adds	r4, #1
 801d554:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d558:	eb07 0b0e 	add.w	fp, r7, lr
 801d55c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d560:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d564:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d568:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d56c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d570:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d574:	ea43 030b 	orr.w	r3, r3, fp
 801d578:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d57c:	f820 3b02 	strh.w	r3, [r0], #2
 801d580:	e7e2      	b.n	801d548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d582:	f8b8 3000 	ldrh.w	r3, [r8]
 801d586:	1b9b      	subs	r3, r3, r6
 801d588:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d58c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d590:	1b9b      	subs	r3, r3, r6
 801d592:	441c      	add	r4, r3
 801d594:	e7d4      	b.n	801d540 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d596:	4b04      	ldr	r3, [pc, #16]	; (801d5a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d598:	6818      	ldr	r0, [r3, #0]
 801d59a:	6803      	ldr	r3, [r0, #0]
 801d59c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d59e:	4798      	blx	r3
 801d5a0:	e750      	b.n	801d444 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d5a2:	bf00      	nop
 801d5a4:	fffff800 	.word	0xfffff800
 801d5a8:	24004a50 	.word	0x24004a50
 801d5ac:	24004a4a 	.word	0x24004a4a

0801d5b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d5b0:	b4f0      	push	{r4, r5, r6, r7}
 801d5b2:	460c      	mov	r4, r1
 801d5b4:	4611      	mov	r1, r2
 801d5b6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d5ba:	461a      	mov	r2, r3
 801d5bc:	780f      	ldrb	r7, [r1, #0]
 801d5be:	9b04      	ldr	r3, [sp, #16]
 801d5c0:	2f01      	cmp	r7, #1
 801d5c2:	784e      	ldrb	r6, [r1, #1]
 801d5c4:	d036      	beq.n	801d634 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d5c6:	d31e      	bcc.n	801d606 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d5c8:	2f02      	cmp	r7, #2
 801d5ca:	d14a      	bne.n	801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d5cc:	2e03      	cmp	r6, #3
 801d5ce:	d848      	bhi.n	801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d5d0:	e8df f006 	tbb	[pc, r6]
 801d5d4:	16140702 	.word	0x16140702
 801d5d8:	9504      	str	r5, [sp, #16]
 801d5da:	4620      	mov	r0, r4
 801d5dc:	bcf0      	pop	{r4, r5, r6, r7}
 801d5de:	f7ff be09 	b.w	801d1f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d5e2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d5e4:	2800      	cmp	r0, #0
 801d5e6:	d03c      	beq.n	801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d5e8:	6806      	ldr	r6, [r0, #0]
 801d5ea:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d5ee:	68b5      	ldr	r5, [r6, #8]
 801d5f0:	4613      	mov	r3, r2
 801d5f2:	46ac      	mov	ip, r5
 801d5f4:	460a      	mov	r2, r1
 801d5f6:	4621      	mov	r1, r4
 801d5f8:	bcf0      	pop	{r4, r5, r6, r7}
 801d5fa:	4760      	bx	ip
 801d5fc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d5fe:	e7f1      	b.n	801d5e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d600:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d604:	e7ee      	b.n	801d5e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d606:	2e03      	cmp	r6, #3
 801d608:	d82b      	bhi.n	801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d60a:	e8df f006 	tbb	[pc, r6]
 801d60e:	0702      	.short	0x0702
 801d610:	100e      	.short	0x100e
 801d612:	9504      	str	r5, [sp, #16]
 801d614:	4620      	mov	r0, r4
 801d616:	bcf0      	pop	{r4, r5, r6, r7}
 801d618:	f7ff bd06 	b.w	801d028 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d61c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d61e:	b300      	cbz	r0, 801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d620:	6806      	ldr	r6, [r0, #0]
 801d622:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d626:	68f5      	ldr	r5, [r6, #12]
 801d628:	e7e2      	b.n	801d5f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d62a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d62c:	e7f7      	b.n	801d61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d62e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d632:	e7f4      	b.n	801d61e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d634:	2e03      	cmp	r6, #3
 801d636:	d814      	bhi.n	801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d638:	e8df f006 	tbb	[pc, r6]
 801d63c:	100e0702 	.word	0x100e0702
 801d640:	9504      	str	r5, [sp, #16]
 801d642:	4620      	mov	r0, r4
 801d644:	bcf0      	pop	{r4, r5, r6, r7}
 801d646:	f7ff bea1 	b.w	801d38c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d64a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d64c:	b148      	cbz	r0, 801d662 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d64e:	6806      	ldr	r6, [r0, #0]
 801d650:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d654:	6935      	ldr	r5, [r6, #16]
 801d656:	e7cb      	b.n	801d5f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d658:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d65a:	e7f7      	b.n	801d64c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d65c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d660:	e7f4      	b.n	801d64c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d662:	bcf0      	pop	{r4, r5, r6, r7}
 801d664:	4770      	bx	lr
	...

0801d668 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d66c:	b087      	sub	sp, #28
 801d66e:	4604      	mov	r4, r0
 801d670:	460e      	mov	r6, r1
 801d672:	6810      	ldr	r0, [r2, #0]
 801d674:	6851      	ldr	r1, [r2, #4]
 801d676:	ad02      	add	r5, sp, #8
 801d678:	4617      	mov	r7, r2
 801d67a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d67e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 801d8b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d682:	c503      	stmia	r5!, {r0, r1}
 801d684:	6818      	ldr	r0, [r3, #0]
 801d686:	ad04      	add	r5, sp, #16
 801d688:	6859      	ldr	r1, [r3, #4]
 801d68a:	c503      	stmia	r5!, {r0, r1}
 801d68c:	a802      	add	r0, sp, #8
 801d68e:	f7f7 fd51 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d692:	4639      	mov	r1, r7
 801d694:	a804      	add	r0, sp, #16
 801d696:	f7f7 fd91 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d69a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d69e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d6a2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d6a6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d6aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d6ae:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d6b2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d6b6:	440e      	add	r6, r1
 801d6b8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d6bc:	440a      	add	r2, r1
 801d6be:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d6c2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d6c6:	4413      	add	r3, r2
 801d6c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d6cc:	4b77      	ldr	r3, [pc, #476]	; (801d8ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d6ce:	6818      	ldr	r0, [r3, #0]
 801d6d0:	6803      	ldr	r3, [r0, #0]
 801d6d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d6d4:	4798      	blx	r3
 801d6d6:	f8b9 b000 	ldrh.w	fp, [r9]
 801d6da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d6de:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d6e2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d6e6:	fb05 f50b 	mul.w	r5, r5, fp
 801d6ea:	fb0b 2303 	mla	r3, fp, r3, r2
 801d6ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6f2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d6f6:	9300      	str	r3, [sp, #0]
 801d6f8:	d069      	beq.n	801d7ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d6fa:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d6fe:	4558      	cmp	r0, fp
 801d700:	f080 80cc 	bcs.w	801d89c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d704:	9b00      	ldr	r3, [sp, #0]
 801d706:	4631      	mov	r1, r6
 801d708:	18c3      	adds	r3, r0, r3
 801d70a:	9301      	str	r3, [sp, #4]
 801d70c:	9b01      	ldr	r3, [sp, #4]
 801d70e:	4298      	cmp	r0, r3
 801d710:	d24f      	bcs.n	801d7b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d712:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d716:	2a00      	cmp	r2, #0
 801d718:	d048      	beq.n	801d7ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d71a:	fb0a f202 	mul.w	r2, sl, r2
 801d71e:	1c53      	adds	r3, r2, #1
 801d720:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d724:	121b      	asrs	r3, r3, #8
 801d726:	d041      	beq.n	801d7ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d728:	8802      	ldrh	r2, [r0, #0]
 801d72a:	b29e      	uxth	r6, r3
 801d72c:	f8b4 c000 	ldrh.w	ip, [r4]
 801d730:	43db      	mvns	r3, r3
 801d732:	1215      	asrs	r5, r2, #8
 801d734:	b2db      	uxtb	r3, r3
 801d736:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d73a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d73e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d742:	fb15 f503 	smulbb	r5, r5, r3
 801d746:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d74a:	00d2      	lsls	r2, r2, #3
 801d74c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d750:	fb07 5706 	mla	r7, r7, r6, r5
 801d754:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d758:	b2d2      	uxtb	r2, r2
 801d75a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d75e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d762:	fb1e fe03 	smulbb	lr, lr, r3
 801d766:	b2bf      	uxth	r7, r7
 801d768:	fb12 f203 	smulbb	r2, r2, r3
 801d76c:	fa5f fc8c 	uxtb.w	ip, ip
 801d770:	fb05 e506 	mla	r5, r5, r6, lr
 801d774:	f107 0e01 	add.w	lr, r7, #1
 801d778:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d77c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d780:	fa1f fc8c 	uxth.w	ip, ip
 801d784:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d788:	b2ad      	uxth	r5, r5
 801d78a:	f10c 0701 	add.w	r7, ip, #1
 801d78e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d792:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d796:	ea47 070e 	orr.w	r7, r7, lr
 801d79a:	f105 0e01 	add.w	lr, r5, #1
 801d79e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d7a2:	096d      	lsrs	r5, r5, #5
 801d7a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d7a8:	432f      	orrs	r7, r5
 801d7aa:	8007      	strh	r7, [r0, #0]
 801d7ac:	3002      	adds	r0, #2
 801d7ae:	3402      	adds	r4, #2
 801d7b0:	e7ac      	b.n	801d70c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d7b2:	f8b9 3000 	ldrh.w	r3, [r9]
 801d7b6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d7ba:	eba3 0308 	sub.w	r3, r3, r8
 801d7be:	eba6 0608 	sub.w	r6, r6, r8
 801d7c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d7c6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d7ca:	440e      	add	r6, r1
 801d7cc:	e797      	b.n	801d6fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d7ce:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d7d2:	42a8      	cmp	r0, r5
 801d7d4:	d262      	bcs.n	801d89c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d7d6:	9b00      	ldr	r3, [sp, #0]
 801d7d8:	4631      	mov	r1, r6
 801d7da:	eb00 0b03 	add.w	fp, r0, r3
 801d7de:	4558      	cmp	r0, fp
 801d7e0:	d24e      	bcs.n	801d880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d7e2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d7e6:	b12b      	cbz	r3, 801d7f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d7e8:	2bff      	cmp	r3, #255	; 0xff
 801d7ea:	f8b4 e000 	ldrh.w	lr, [r4]
 801d7ee:	d104      	bne.n	801d7fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d7f0:	f8a0 e000 	strh.w	lr, [r0]
 801d7f4:	3002      	adds	r0, #2
 801d7f6:	3402      	adds	r4, #2
 801d7f8:	e7f1      	b.n	801d7de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d7fa:	8802      	ldrh	r2, [r0, #0]
 801d7fc:	b29f      	uxth	r7, r3
 801d7fe:	43db      	mvns	r3, r3
 801d800:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d804:	1216      	asrs	r6, r2, #8
 801d806:	b2db      	uxtb	r3, r3
 801d808:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d80c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d810:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d814:	00d2      	lsls	r2, r2, #3
 801d816:	fb16 f603 	smulbb	r6, r6, r3
 801d81a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d81e:	b2d2      	uxtb	r2, r2
 801d820:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d824:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d828:	fb1a fa03 	smulbb	sl, sl, r3
 801d82c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d830:	fa1f fc8c 	uxth.w	ip, ip
 801d834:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d838:	fb12 f303 	smulbb	r3, r2, r3
 801d83c:	fa5f fe8e 	uxtb.w	lr, lr
 801d840:	fb06 a607 	mla	r6, r6, r7, sl
 801d844:	f10c 0201 	add.w	r2, ip, #1
 801d848:	fb0e 3307 	mla	r3, lr, r7, r3
 801d84c:	b2b6      	uxth	r6, r6
 801d84e:	b29b      	uxth	r3, r3
 801d850:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d854:	f106 0a01 	add.w	sl, r6, #1
 801d858:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d85c:	f103 0c01 	add.w	ip, r3, #1
 801d860:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d864:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d868:	0976      	lsrs	r6, r6, #5
 801d86a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d86e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d872:	ea4c 0c02 	orr.w	ip, ip, r2
 801d876:	ea4c 0c06 	orr.w	ip, ip, r6
 801d87a:	f8a0 c000 	strh.w	ip, [r0]
 801d87e:	e7b9      	b.n	801d7f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d880:	f8b9 3000 	ldrh.w	r3, [r9]
 801d884:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d888:	eba3 0308 	sub.w	r3, r3, r8
 801d88c:	eba6 0608 	sub.w	r6, r6, r8
 801d890:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d894:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d898:	440e      	add	r6, r1
 801d89a:	e79a      	b.n	801d7d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d89c:	4b03      	ldr	r3, [pc, #12]	; (801d8ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d89e:	6818      	ldr	r0, [r3, #0]
 801d8a0:	6803      	ldr	r3, [r0, #0]
 801d8a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d8a4:	4798      	blx	r3
 801d8a6:	b007      	add	sp, #28
 801d8a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d8ac:	24004a50 	.word	0x24004a50
 801d8b0:	24004a4a 	.word	0x24004a4a

0801d8b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d8b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8b8:	b089      	sub	sp, #36	; 0x24
 801d8ba:	4682      	mov	sl, r0
 801d8bc:	460f      	mov	r7, r1
 801d8be:	4691      	mov	r9, r2
 801d8c0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d8c4:	4698      	mov	r8, r3
 801d8c6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d8c8:	2e00      	cmp	r6, #0
 801d8ca:	d03d      	beq.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8cc:	4608      	mov	r0, r1
 801d8ce:	f7fa fe53 	bl	8018578 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d8d2:	4605      	mov	r5, r0
 801d8d4:	4638      	mov	r0, r7
 801d8d6:	f7fa fe83 	bl	80185e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d8da:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d8de:	4638      	mov	r0, r7
 801d8e0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d8e4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d8e8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d8ec:	f7fa ff30 	bl	8018750 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d8f0:	4605      	mov	r5, r0
 801d8f2:	4638      	mov	r0, r7
 801d8f4:	f7fa ff5c 	bl	80187b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d8f8:	4681      	mov	r9, r0
 801d8fa:	4638      	mov	r0, r7
 801d8fc:	f7fa ffac 	bl	8018858 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d900:	280b      	cmp	r0, #11
 801d902:	d821      	bhi.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d904:	e8df f000 	tbb	[pc, r0]
 801d908:	2006aebe 	.word	0x2006aebe
 801d90c:	20202020 	.word	0x20202020
 801d910:	b5202020 	.word	0xb5202020
 801d914:	4bb0      	ldr	r3, [pc, #704]	; (801dbd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d916:	6818      	ldr	r0, [r3, #0]
 801d918:	6803      	ldr	r3, [r0, #0]
 801d91a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d91c:	4798      	blx	r3
 801d91e:	2eff      	cmp	r6, #255	; 0xff
 801d920:	d101      	bne.n	801d926 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d922:	0683      	lsls	r3, r0, #26
 801d924:	d506      	bpl.n	801d934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d926:	4633      	mov	r3, r6
 801d928:	4622      	mov	r2, r4
 801d92a:	a902      	add	r1, sp, #8
 801d92c:	4628      	mov	r0, r5
 801d92e:	f7ff f909 	bl	801cb44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d932:	e009      	b.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d934:	4638      	mov	r0, r7
 801d936:	f7fa fed3 	bl	80186e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d93a:	b940      	cbnz	r0, 801d94e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d93c:	4623      	mov	r3, r4
 801d93e:	aa02      	add	r2, sp, #8
 801d940:	4629      	mov	r1, r5
 801d942:	4650      	mov	r0, sl
 801d944:	f7ff f9e4 	bl	801cd10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d948:	b009      	add	sp, #36	; 0x24
 801d94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d94e:	f10d 0818 	add.w	r8, sp, #24
 801d952:	4639      	mov	r1, r7
 801d954:	af04      	add	r7, sp, #16
 801d956:	4640      	mov	r0, r8
 801d958:	f7fa fe76 	bl	8018648 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d95c:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d960:	e887 0003 	stmia.w	r7, {r0, r1}
 801d964:	4638      	mov	r0, r7
 801d966:	4621      	mov	r1, r4
 801d968:	f7f4 f858 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 801d96c:	4638      	mov	r0, r7
 801d96e:	f7f4 f898 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d972:	2800      	cmp	r0, #0
 801d974:	d1d7      	bne.n	801d926 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d976:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d97a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d97e:	4293      	cmp	r3, r2
 801d980:	dd12      	ble.n	801d9a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d982:	1a9b      	subs	r3, r3, r2
 801d984:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d988:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d98c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d990:	4628      	mov	r0, r5
 801d992:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d996:	4642      	mov	r2, r8
 801d998:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d99c:	a902      	add	r1, sp, #8
 801d99e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d9a2:	4633      	mov	r3, r6
 801d9a4:	f7ff f8ce 	bl	801cb44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d9a8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d9ac:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d9b0:	4293      	cmp	r3, r2
 801d9b2:	dd12      	ble.n	801d9da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d9b4:	1a9b      	subs	r3, r3, r2
 801d9b6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d9ba:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d9be:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d9c2:	4642      	mov	r2, r8
 801d9c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d9c8:	4628      	mov	r0, r5
 801d9ca:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d9ce:	23ff      	movs	r3, #255	; 0xff
 801d9d0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d9d4:	a902      	add	r1, sp, #8
 801d9d6:	f7ff f8b5 	bl	801cb44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d9da:	463b      	mov	r3, r7
 801d9dc:	aa02      	add	r2, sp, #8
 801d9de:	4629      	mov	r1, r5
 801d9e0:	4650      	mov	r0, sl
 801d9e2:	f7ff f995 	bl	801cd10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d9e6:	88a2      	ldrh	r2, [r4, #4]
 801d9e8:	8823      	ldrh	r3, [r4, #0]
 801d9ea:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d9ee:	4413      	add	r3, r2
 801d9f0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d9f4:	440a      	add	r2, r1
 801d9f6:	b29b      	uxth	r3, r3
 801d9f8:	b292      	uxth	r2, r2
 801d9fa:	b218      	sxth	r0, r3
 801d9fc:	b211      	sxth	r1, r2
 801d9fe:	4288      	cmp	r0, r1
 801da00:	dd12      	ble.n	801da28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801da02:	1a9b      	subs	r3, r3, r2
 801da04:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801da08:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801da0c:	4642      	mov	r2, r8
 801da0e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801da12:	a902      	add	r1, sp, #8
 801da14:	f8ad 301c 	strh.w	r3, [sp, #28]
 801da18:	23ff      	movs	r3, #255	; 0xff
 801da1a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801da1e:	4628      	mov	r0, r5
 801da20:	f8ad 601a 	strh.w	r6, [sp, #26]
 801da24:	f7ff f88e 	bl	801cb44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801da28:	88e2      	ldrh	r2, [r4, #6]
 801da2a:	8863      	ldrh	r3, [r4, #2]
 801da2c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801da30:	4413      	add	r3, r2
 801da32:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801da36:	440a      	add	r2, r1
 801da38:	b29b      	uxth	r3, r3
 801da3a:	b292      	uxth	r2, r2
 801da3c:	b218      	sxth	r0, r3
 801da3e:	b211      	sxth	r1, r2
 801da40:	4288      	cmp	r0, r1
 801da42:	dd81      	ble.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da44:	1a9b      	subs	r3, r3, r2
 801da46:	f9b4 6000 	ldrsh.w	r6, [r4]
 801da4a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801da4e:	4642      	mov	r2, r8
 801da50:	f8ad 301e 	strh.w	r3, [sp, #30]
 801da54:	23ff      	movs	r3, #255	; 0xff
 801da56:	f8ad 6018 	strh.w	r6, [sp, #24]
 801da5a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801da5e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801da62:	e762      	b.n	801d92a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801da64:	4633      	mov	r3, r6
 801da66:	4622      	mov	r2, r4
 801da68:	a902      	add	r1, sp, #8
 801da6a:	4628      	mov	r0, r5
 801da6c:	f7ff f9c0 	bl	801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801da70:	e76a      	b.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da72:	e9cd 4600 	strd	r4, r6, [sp]
 801da76:	ab02      	add	r3, sp, #8
 801da78:	464a      	mov	r2, r9
 801da7a:	4629      	mov	r1, r5
 801da7c:	4650      	mov	r0, sl
 801da7e:	f7ff fd97 	bl	801d5b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801da82:	e761      	b.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da84:	4638      	mov	r0, r7
 801da86:	f7fa fe2b 	bl	80186e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801da8a:	b950      	cbnz	r0, 801daa2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801da8c:	f8da 3000 	ldr.w	r3, [sl]
 801da90:	aa02      	add	r2, sp, #8
 801da92:	4629      	mov	r1, r5
 801da94:	e9cd 6000 	strd	r6, r0, [sp]
 801da98:	4650      	mov	r0, sl
 801da9a:	68de      	ldr	r6, [r3, #12]
 801da9c:	4623      	mov	r3, r4
 801da9e:	47b0      	blx	r6
 801daa0:	e752      	b.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801daa2:	f10d 0818 	add.w	r8, sp, #24
 801daa6:	4639      	mov	r1, r7
 801daa8:	af04      	add	r7, sp, #16
 801daaa:	4640      	mov	r0, r8
 801daac:	f7fa fdcc 	bl	8018648 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dab0:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dab4:	e887 0003 	stmia.w	r7, {r0, r1}
 801dab8:	4638      	mov	r0, r7
 801daba:	4621      	mov	r1, r4
 801dabc:	f7f3 ffae 	bl	8011a1c <_ZN8touchgfx4RectaNERKS0_>
 801dac0:	4638      	mov	r0, r7
 801dac2:	f7f3 ffee 	bl	8011aa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dac6:	b138      	cbz	r0, 801dad8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801dac8:	4623      	mov	r3, r4
 801daca:	9600      	str	r6, [sp, #0]
 801dacc:	aa02      	add	r2, sp, #8
 801dace:	4649      	mov	r1, r9
 801dad0:	4628      	mov	r0, r5
 801dad2:	f7ff fdc9 	bl	801d668 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dad6:	e737      	b.n	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dad8:	f8da 3000 	ldr.w	r3, [sl]
 801dadc:	aa02      	add	r2, sp, #8
 801dade:	4629      	mov	r1, r5
 801dae0:	e9cd 6000 	strd	r6, r0, [sp]
 801dae4:	4650      	mov	r0, sl
 801dae6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801daea:	463b      	mov	r3, r7
 801daec:	47d8      	blx	fp
 801daee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801daf2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801daf6:	4293      	cmp	r3, r2
 801daf8:	dd13      	ble.n	801db22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801dafa:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dafe:	1a9b      	subs	r3, r3, r2
 801db00:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801db04:	f8ad 0018 	strh.w	r0, [sp, #24]
 801db08:	4628      	mov	r0, r5
 801db0a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801db0e:	aa02      	add	r2, sp, #8
 801db10:	f8ad 101c 	strh.w	r1, [sp, #28]
 801db14:	4649      	mov	r1, r9
 801db16:	f8ad 301e 	strh.w	r3, [sp, #30]
 801db1a:	4643      	mov	r3, r8
 801db1c:	9600      	str	r6, [sp, #0]
 801db1e:	f7ff fda3 	bl	801d668 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801db22:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801db26:	f9b4 2000 	ldrsh.w	r2, [r4]
 801db2a:	4293      	cmp	r3, r2
 801db2c:	dd13      	ble.n	801db56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801db2e:	1a9b      	subs	r3, r3, r2
 801db30:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801db34:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801db38:	f8ad 2018 	strh.w	r2, [sp, #24]
 801db3c:	aa02      	add	r2, sp, #8
 801db3e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801db42:	4628      	mov	r0, r5
 801db44:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db48:	4643      	mov	r3, r8
 801db4a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801db4e:	4649      	mov	r1, r9
 801db50:	9600      	str	r6, [sp, #0]
 801db52:	f7ff fd89 	bl	801d668 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801db56:	88a2      	ldrh	r2, [r4, #4]
 801db58:	8823      	ldrh	r3, [r4, #0]
 801db5a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801db5e:	4413      	add	r3, r2
 801db60:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801db64:	440a      	add	r2, r1
 801db66:	b29b      	uxth	r3, r3
 801db68:	b292      	uxth	r2, r2
 801db6a:	b218      	sxth	r0, r3
 801db6c:	b211      	sxth	r1, r2
 801db6e:	4288      	cmp	r0, r1
 801db70:	dd13      	ble.n	801db9a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801db72:	1a9b      	subs	r3, r3, r2
 801db74:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801db78:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801db7c:	aa02      	add	r2, sp, #8
 801db7e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801db82:	4649      	mov	r1, r9
 801db84:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db88:	4643      	mov	r3, r8
 801db8a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801db8e:	4628      	mov	r0, r5
 801db90:	9600      	str	r6, [sp, #0]
 801db92:	f8ad 701a 	strh.w	r7, [sp, #26]
 801db96:	f7ff fd67 	bl	801d668 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801db9a:	88e2      	ldrh	r2, [r4, #6]
 801db9c:	8863      	ldrh	r3, [r4, #2]
 801db9e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dba2:	4413      	add	r3, r2
 801dba4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dba8:	440a      	add	r2, r1
 801dbaa:	b29b      	uxth	r3, r3
 801dbac:	b292      	uxth	r2, r2
 801dbae:	b218      	sxth	r0, r3
 801dbb0:	b211      	sxth	r1, r2
 801dbb2:	4288      	cmp	r0, r1
 801dbb4:	f77f aec8 	ble.w	801d948 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbb8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801dbbc:	1a9b      	subs	r3, r3, r2
 801dbbe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dbc2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dbc6:	4643      	mov	r3, r8
 801dbc8:	f8ad 7018 	strh.w	r7, [sp, #24]
 801dbcc:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dbd0:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dbd4:	9600      	str	r6, [sp, #0]
 801dbd6:	e779      	b.n	801dacc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801dbd8:	24004a50 	.word	0x24004a50

0801dbdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801dbdc:	b180      	cbz	r0, 801dc00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801dbde:	2903      	cmp	r1, #3
 801dbe0:	d81c      	bhi.n	801dc1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dbe2:	e8df f001 	tbb	[pc, r1]
 801dbe6:	1d02      	.short	0x1d02
 801dbe8:	1f08      	.short	0x1f08
 801dbea:	4b10      	ldr	r3, [pc, #64]	; (801dc2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dbec:	8818      	ldrh	r0, [r3, #0]
 801dbee:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dbf2:	4240      	negs	r0, r0
 801dbf4:	4770      	bx	lr
 801dbf6:	4b0d      	ldr	r3, [pc, #52]	; (801dc2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dbf8:	8818      	ldrh	r0, [r3, #0]
 801dbfa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dbfe:	4770      	bx	lr
 801dc00:	2903      	cmp	r1, #3
 801dc02:	d80b      	bhi.n	801dc1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dc04:	a301      	add	r3, pc, #4	; (adr r3, 801dc0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801dc06:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dc0a:	bf00      	nop
 801dc0c:	0801dc21 	.word	0x0801dc21
 801dc10:	0801dbf7 	.word	0x0801dbf7
 801dc14:	0801dc25 	.word	0x0801dc25
 801dc18:	0801dbeb 	.word	0x0801dbeb
 801dc1c:	2000      	movs	r0, #0
 801dc1e:	4770      	bx	lr
 801dc20:	2001      	movs	r0, #1
 801dc22:	4770      	bx	lr
 801dc24:	f04f 30ff 	mov.w	r0, #4294967295
 801dc28:	4770      	bx	lr
 801dc2a:	bf00      	nop
 801dc2c:	24004a4a 	.word	0x24004a4a

0801dc30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801dc30:	b180      	cbz	r0, 801dc54 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801dc32:	2903      	cmp	r1, #3
 801dc34:	d81c      	bhi.n	801dc70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dc36:	e8df f001 	tbb	[pc, r1]
 801dc3a:	021d      	.short	0x021d
 801dc3c:	071f      	.short	0x071f
 801dc3e:	4b10      	ldr	r3, [pc, #64]	; (801dc80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dc40:	8818      	ldrh	r0, [r3, #0]
 801dc42:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dc46:	4770      	bx	lr
 801dc48:	4b0d      	ldr	r3, [pc, #52]	; (801dc80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dc4a:	8818      	ldrh	r0, [r3, #0]
 801dc4c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dc50:	4240      	negs	r0, r0
 801dc52:	4770      	bx	lr
 801dc54:	2903      	cmp	r1, #3
 801dc56:	d80b      	bhi.n	801dc70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dc58:	a301      	add	r3, pc, #4	; (adr r3, 801dc60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801dc5a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dc5e:	bf00      	nop
 801dc60:	0801dc3f 	.word	0x0801dc3f
 801dc64:	0801dc79 	.word	0x0801dc79
 801dc68:	0801dc49 	.word	0x0801dc49
 801dc6c:	0801dc75 	.word	0x0801dc75
 801dc70:	2000      	movs	r0, #0
 801dc72:	4770      	bx	lr
 801dc74:	2001      	movs	r0, #1
 801dc76:	4770      	bx	lr
 801dc78:	f04f 30ff 	mov.w	r0, #4294967295
 801dc7c:	4770      	bx	lr
 801dc7e:	bf00      	nop
 801dc80:	24004a4a 	.word	0x24004a4a

0801dc84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801dc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc88:	b099      	sub	sp, #100	; 0x64
 801dc8a:	910b      	str	r1, [sp, #44]	; 0x2c
 801dc8c:	a914      	add	r1, sp, #80	; 0x50
 801dc8e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801dc92:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801dc96:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801dc9a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801dc9e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801dca2:	e881 000c 	stmia.w	r1, {r2, r3}
 801dca6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801dcaa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801dcae:	9309      	str	r3, [sp, #36]	; 0x24
 801dcb0:	f891 900d 	ldrb.w	r9, [r1, #13]
 801dcb4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801dcb8:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801dcbc:	9310      	str	r3, [sp, #64]	; 0x40
 801dcbe:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801dcc2:	930c      	str	r3, [sp, #48]	; 0x30
 801dcc4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801dcc8:	798f      	ldrb	r7, [r1, #6]
 801dcca:	431f      	orrs	r7, r3
 801dccc:	f000 8195 	beq.w	801dffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dcd0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801dcd4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801dcd8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801dcdc:	ea59 0903 	orrs.w	r9, r9, r3
 801dce0:	f000 818b 	beq.w	801dffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dce4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801dce8:	b29b      	uxth	r3, r3
 801dcea:	2d00      	cmp	r5, #0
 801dcec:	f000 812e 	beq.w	801df4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801dcf0:	1aed      	subs	r5, r5, r3
 801dcf2:	b2ad      	uxth	r5, r5
 801dcf4:	042b      	lsls	r3, r5, #16
 801dcf6:	d502      	bpl.n	801dcfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dcf8:	1b64      	subs	r4, r4, r5
 801dcfa:	2500      	movs	r5, #0
 801dcfc:	b224      	sxth	r4, r4
 801dcfe:	f9b2 1000 	ldrsh.w	r1, [r2]
 801dd02:	a814      	add	r0, sp, #80	; 0x50
 801dd04:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801dd08:	428c      	cmp	r4, r1
 801dd0a:	b28b      	uxth	r3, r1
 801dd0c:	bfbf      	itttt	lt
 801dd0e:	18ed      	addlt	r5, r5, r3
 801dd10:	1b2c      	sublt	r4, r5, r4
 801dd12:	b2a5      	uxthlt	r5, r4
 801dd14:	460c      	movlt	r4, r1
 801dd16:	8891      	ldrh	r1, [r2, #4]
 801dd18:	440b      	add	r3, r1
 801dd1a:	4621      	mov	r1, r4
 801dd1c:	b21b      	sxth	r3, r3
 801dd1e:	930f      	str	r3, [sp, #60]	; 0x3c
 801dd20:	88d3      	ldrh	r3, [r2, #6]
 801dd22:	8852      	ldrh	r2, [r2, #2]
 801dd24:	4413      	add	r3, r2
 801dd26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dd28:	b21b      	sxth	r3, r3
 801dd2a:	930d      	str	r3, [sp, #52]	; 0x34
 801dd2c:	4bbd      	ldr	r3, [pc, #756]	; (801e024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dd2e:	f893 b000 	ldrb.w	fp, [r3]
 801dd32:	f10b 3cff 	add.w	ip, fp, #4294967295
 801dd36:	f1dc 0300 	rsbs	r3, ip, #0
 801dd3a:	eb43 030c 	adc.w	r3, r3, ip
 801dd3e:	930e      	str	r3, [sp, #56]	; 0x38
 801dd40:	4653      	mov	r3, sl
 801dd42:	f7f7 f86c 	bl	8014e1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dd46:	4621      	mov	r1, r4
 801dd48:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801dd4c:	4653      	mov	r3, sl
 801dd4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dd50:	a814      	add	r0, sp, #80	; 0x50
 801dd52:	f7f7 f881 	bl	8014e58 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dd56:	a918      	add	r1, sp, #96	; 0x60
 801dd58:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dd5c:	a817      	add	r0, sp, #92	; 0x5c
 801dd5e:	f7f7 f9a7 	bl	80150b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dd62:	f1ba 0f00 	cmp.w	sl, #0
 801dd66:	f040 80f4 	bne.w	801df52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dd6a:	f1bb 0f01 	cmp.w	fp, #1
 801dd6e:	f040 80f8 	bne.w	801df62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801dd72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd74:	2b00      	cmp	r3, #0
 801dd76:	f040 8145 	bne.w	801e004 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dd7a:	b2ba      	uxth	r2, r7
 801dd7c:	b905      	cbnz	r5, 801dd80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dd7e:	b16e      	cbz	r6, 801dd9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dd80:	fb06 5302 	mla	r3, r6, r2, r5
 801dd84:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801dd86:	4631      	mov	r1, r6
 801dd88:	fb08 f303 	mul.w	r3, r8, r3
 801dd8c:	f003 0607 	and.w	r6, r3, #7
 801dd90:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dd94:	9328      	str	r3, [sp, #160]	; 0xa0
 801dd96:	eba9 0301 	sub.w	r3, r9, r1
 801dd9a:	930a      	str	r3, [sp, #40]	; 0x28
 801dd9c:	4651      	mov	r1, sl
 801dd9e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dda0:	f7ff ff1c 	bl	801dbdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dda4:	4681      	mov	r9, r0
 801dda6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dda8:	f7ff ff42 	bl	801dc30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ddac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ddae:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ddb0:	4683      	mov	fp, r0
 801ddb2:	eba3 0a01 	sub.w	sl, r3, r1
 801ddb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ddb8:	459a      	cmp	sl, r3
 801ddba:	bfa8      	it	ge
 801ddbc:	469a      	movge	sl, r3
 801ddbe:	f1ba 0f00 	cmp.w	sl, #0
 801ddc2:	f340 811a 	ble.w	801dffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ddc6:	1b64      	subs	r4, r4, r5
 801ddc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ddca:	1b1c      	subs	r4, r3, r4
 801ddcc:	42bc      	cmp	r4, r7
 801ddce:	bfd4      	ite	le
 801ddd0:	ebc5 0504 	rsble	r5, r5, r4
 801ddd4:	ebc5 0507 	rsbgt	r5, r5, r7
 801ddd8:	2d00      	cmp	r5, #0
 801ddda:	f340 810e 	ble.w	801dffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ddde:	1b52      	subs	r2, r2, r5
 801dde0:	fb08 f302 	mul.w	r3, r8, r2
 801dde4:	930f      	str	r3, [sp, #60]	; 0x3c
 801dde6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dde8:	2b00      	cmp	r3, #0
 801ddea:	f040 8116 	bne.w	801e01a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ddee:	4b8e      	ldr	r3, [pc, #568]	; (801e028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ddf0:	6818      	ldr	r0, [r3, #0]
 801ddf2:	6803      	ldr	r3, [r0, #0]
 801ddf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ddf6:	4798      	blx	r3
 801ddf8:	2301      	movs	r3, #1
 801ddfa:	4a8c      	ldr	r2, [pc, #560]	; (801e02c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ddfc:	fa03 f308 	lsl.w	r3, r3, r8
 801de00:	8811      	ldrh	r1, [r2, #0]
 801de02:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801de06:	3b01      	subs	r3, #1
 801de08:	b2db      	uxtb	r3, r3
 801de0a:	930e      	str	r3, [sp, #56]	; 0x38
 801de0c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801de10:	fb01 2303 	mla	r3, r1, r3, r2
 801de14:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801de18:	930a      	str	r3, [sp, #40]	; 0x28
 801de1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de1c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801de20:	9313      	str	r3, [sp, #76]	; 0x4c
 801de22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de24:	0a19      	lsrs	r1, r3, #8
 801de26:	b2cb      	uxtb	r3, r1
 801de28:	9312      	str	r3, [sp, #72]	; 0x48
 801de2a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de2c:	b2db      	uxtb	r3, r3
 801de2e:	9311      	str	r3, [sp, #68]	; 0x44
 801de30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de32:	095a      	lsrs	r2, r3, #5
 801de34:	4b7e      	ldr	r3, [pc, #504]	; (801e030 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801de36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de3a:	400b      	ands	r3, r1
 801de3c:	4313      	orrs	r3, r2
 801de3e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801de40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801de44:	4313      	orrs	r3, r2
 801de46:	b29b      	uxth	r3, r3
 801de48:	9310      	str	r3, [sp, #64]	; 0x40
 801de4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801de4c:	781a      	ldrb	r2, [r3, #0]
 801de4e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801de52:	fb05 b919 	mls	r9, r5, r9, fp
 801de56:	4132      	asrs	r2, r6
 801de58:	fb03 fb05 	mul.w	fp, r3, r5
 801de5c:	930d      	str	r3, [sp, #52]	; 0x34
 801de5e:	b2d2      	uxtb	r2, r2
 801de60:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801de64:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801de68:	f0c0 80f5 	bcc.w	801e056 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801de6c:	46ae      	mov	lr, r5
 801de6e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801de72:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801de76:	f0c0 80dd 	bcc.w	801e034 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801de7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de7c:	4013      	ands	r3, r2
 801de7e:	d055      	beq.n	801df2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801de80:	20ff      	movs	r0, #255	; 0xff
 801de82:	990e      	ldr	r1, [sp, #56]	; 0x38
 801de84:	fb90 f1f1 	sdiv	r1, r0, r1
 801de88:	434b      	muls	r3, r1
 801de8a:	2bfe      	cmp	r3, #254	; 0xfe
 801de8c:	dd03      	ble.n	801de96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801de8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801de90:	4281      	cmp	r1, r0
 801de92:	f000 80c4 	beq.w	801e01e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801de96:	990c      	ldr	r1, [sp, #48]	; 0x30
 801de98:	f8bc 4000 	ldrh.w	r4, [ip]
 801de9c:	fb11 f303 	smulbb	r3, r1, r3
 801dea0:	1220      	asrs	r0, r4, #8
 801dea2:	b29b      	uxth	r3, r3
 801dea4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dea8:	1c59      	adds	r1, r3, #1
 801deaa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801deae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801deb2:	10e1      	asrs	r1, r4, #3
 801deb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801deb8:	00e4      	lsls	r4, r4, #3
 801deba:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801debe:	b29f      	uxth	r7, r3
 801dec0:	43db      	mvns	r3, r3
 801dec2:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dec6:	b2db      	uxtb	r3, r3
 801dec8:	b2e4      	uxtb	r4, r4
 801deca:	9309      	str	r3, [sp, #36]	; 0x24
 801decc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dece:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ded2:	fb13 f907 	smulbb	r9, r3, r7
 801ded6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ded8:	fb00 9003 	mla	r0, r0, r3, r9
 801dedc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dede:	fb13 f907 	smulbb	r9, r3, r7
 801dee2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dee4:	b280      	uxth	r0, r0
 801dee6:	fb01 9103 	mla	r1, r1, r3, r9
 801deea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801deec:	fb13 f707 	smulbb	r7, r3, r7
 801def0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801def2:	b289      	uxth	r1, r1
 801def4:	fb04 7403 	mla	r4, r4, r3, r7
 801def8:	1c43      	adds	r3, r0, #1
 801defa:	b2a4      	uxth	r4, r4
 801defc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801df00:	f104 0901 	add.w	r9, r4, #1
 801df04:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801df08:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801df0c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801df10:	ea49 0000 	orr.w	r0, r9, r0
 801df14:	f101 0901 	add.w	r9, r1, #1
 801df18:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801df1c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801df20:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801df24:	ea40 0009 	orr.w	r0, r0, r9
 801df28:	f8ac 0000 	strh.w	r0, [ip]
 801df2c:	4446      	add	r6, r8
 801df2e:	b2b6      	uxth	r6, r6
 801df30:	2e07      	cmp	r6, #7
 801df32:	bf89      	itett	hi
 801df34:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801df36:	fa42 f208 	asrls.w	r2, r2, r8
 801df3a:	2600      	movhi	r6, #0
 801df3c:	785a      	ldrbhi	r2, [r3, #1]
 801df3e:	bf8a      	itet	hi
 801df40:	3301      	addhi	r3, #1
 801df42:	b2d2      	uxtbls	r2, r2
 801df44:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801df46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df48:	449c      	add	ip, r3
 801df4a:	e792      	b.n	801de72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801df4c:	441c      	add	r4, r3
 801df4e:	b224      	sxth	r4, r4
 801df50:	e6d5      	b.n	801dcfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801df52:	f1ba 0f01 	cmp.w	sl, #1
 801df56:	f47f af0c 	bne.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801df5a:	f1bb 0f01 	cmp.w	fp, #1
 801df5e:	f47f af08 	bne.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801df62:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801e028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801df66:	f8db 0000 	ldr.w	r0, [fp]
 801df6a:	6803      	ldr	r3, [r0, #0]
 801df6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801df6e:	4798      	blx	r3
 801df70:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801df74:	465a      	mov	r2, fp
 801df76:	d006      	beq.n	801df86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801df78:	f1b8 0f04 	cmp.w	r8, #4
 801df7c:	d140      	bne.n	801e000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801df7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801df80:	3300      	adds	r3, #0
 801df82:	bf18      	it	ne
 801df84:	2301      	movne	r3, #1
 801df86:	0580      	lsls	r0, r0, #22
 801df88:	d56e      	bpl.n	801e068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801df8a:	f1b8 0f08 	cmp.w	r8, #8
 801df8e:	d16b      	bne.n	801e068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801df90:	2b00      	cmp	r3, #0
 801df92:	bf0c      	ite	eq
 801df94:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801df98:	f44f 7180 	movne.w	r1, #256	; 0x100
 801df9c:	2d00      	cmp	r5, #0
 801df9e:	f47f aee8 	bne.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dfa2:	2e00      	cmp	r6, #0
 801dfa4:	f47f aee5 	bne.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dfa8:	19e3      	adds	r3, r4, r7
 801dfaa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801dfac:	4283      	cmp	r3, r0
 801dfae:	f73f aee0 	bgt.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dfb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dfb4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dfb6:	444b      	add	r3, r9
 801dfb8:	4283      	cmp	r3, r0
 801dfba:	f73f aeda 	bgt.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dfbe:	b2bf      	uxth	r7, r7
 801dfc0:	f1b8 0f08 	cmp.w	r8, #8
 801dfc4:	6810      	ldr	r0, [r2, #0]
 801dfc6:	f04f 0500 	mov.w	r5, #0
 801dfca:	bf18      	it	ne
 801dfcc:	3701      	addne	r7, #1
 801dfce:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801dfd2:	6804      	ldr	r4, [r0, #0]
 801dfd4:	bf18      	it	ne
 801dfd6:	f027 0701 	bicne.w	r7, r7, #1
 801dfda:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801dfde:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801dfe2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfe4:	bf18      	it	ne
 801dfe6:	b2bf      	uxthne	r7, r7
 801dfe8:	9104      	str	r1, [sp, #16]
 801dfea:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dfec:	e9cd 7900 	strd	r7, r9, [sp]
 801dff0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801dff4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dff6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801dff8:	47a0      	blx	r4
 801dffa:	b019      	add	sp, #100	; 0x64
 801dffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e000:	2300      	movs	r3, #0
 801e002:	e7c0      	b.n	801df86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e004:	2208      	movs	r2, #8
 801e006:	fb92 f3f8 	sdiv	r3, r2, r8
 801e00a:	1e5a      	subs	r2, r3, #1
 801e00c:	443a      	add	r2, r7
 801e00e:	fb92 f2f3 	sdiv	r2, r2, r3
 801e012:	fb12 f203 	smulbb	r2, r2, r3
 801e016:	b292      	uxth	r2, r2
 801e018:	e6b0      	b.n	801dd7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e01a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e01c:	e6ec      	b.n	801ddf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e01e:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e020:	e782      	b.n	801df28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e022:	bf00      	nop
 801e024:	24004a48 	.word	0x24004a48
 801e028:	24004a50 	.word	0x24004a50
 801e02c:	24004a4a 	.word	0x24004a4a
 801e030:	00fff800 	.word	0x00fff800
 801e034:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e036:	b153      	cbz	r3, 801e04e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e038:	441e      	add	r6, r3
 801e03a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e03c:	b2b6      	uxth	r6, r6
 801e03e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e042:	f006 0607 	and.w	r6, r6, #7
 801e046:	781a      	ldrb	r2, [r3, #0]
 801e048:	9328      	str	r3, [sp, #160]	; 0xa0
 801e04a:	4132      	asrs	r2, r6
 801e04c:	b2d2      	uxtb	r2, r2
 801e04e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e050:	445b      	add	r3, fp
 801e052:	930a      	str	r3, [sp, #40]	; 0x28
 801e054:	e706      	b.n	801de64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e056:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e058:	2b00      	cmp	r3, #0
 801e05a:	d1ce      	bne.n	801dffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e05c:	4b05      	ldr	r3, [pc, #20]	; (801e074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e05e:	6818      	ldr	r0, [r3, #0]
 801e060:	6803      	ldr	r3, [r0, #0]
 801e062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e064:	4798      	blx	r3
 801e066:	e7c8      	b.n	801dffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e068:	2b00      	cmp	r3, #0
 801e06a:	f43f ae82 	beq.w	801dd72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e06e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e072:	e793      	b.n	801df9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e074:	24004a50 	.word	0x24004a50

0801e078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e078:	b538      	push	{r3, r4, r5, lr}
 801e07a:	4c15      	ldr	r4, [pc, #84]	; (801e0d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e07c:	4605      	mov	r5, r0
 801e07e:	7823      	ldrb	r3, [r4, #0]
 801e080:	f3bf 8f5b 	dmb	ish
 801e084:	07da      	lsls	r2, r3, #31
 801e086:	d40b      	bmi.n	801e0a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e088:	4620      	mov	r0, r4
 801e08a:	f007 febe 	bl	8025e0a <__cxa_guard_acquire>
 801e08e:	b138      	cbz	r0, 801e0a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e090:	4620      	mov	r0, r4
 801e092:	f007 fec6 	bl	8025e22 <__cxa_guard_release>
 801e096:	4a0f      	ldr	r2, [pc, #60]	; (801e0d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e098:	490f      	ldr	r1, [pc, #60]	; (801e0d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e09a:	4810      	ldr	r0, [pc, #64]	; (801e0dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e09c:	f007 feae 	bl	8025dfc <__aeabi_atexit>
 801e0a0:	4c0f      	ldr	r4, [pc, #60]	; (801e0e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e0a2:	7823      	ldrb	r3, [r4, #0]
 801e0a4:	f3bf 8f5b 	dmb	ish
 801e0a8:	07db      	lsls	r3, r3, #31
 801e0aa:	d40b      	bmi.n	801e0c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e0ac:	4620      	mov	r0, r4
 801e0ae:	f007 feac 	bl	8025e0a <__cxa_guard_acquire>
 801e0b2:	b138      	cbz	r0, 801e0c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e0b4:	4620      	mov	r0, r4
 801e0b6:	f007 feb4 	bl	8025e22 <__cxa_guard_release>
 801e0ba:	4a06      	ldr	r2, [pc, #24]	; (801e0d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e0bc:	4909      	ldr	r1, [pc, #36]	; (801e0e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e0be:	480a      	ldr	r0, [pc, #40]	; (801e0e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e0c0:	f007 fe9c 	bl	8025dfc <__aeabi_atexit>
 801e0c4:	4b05      	ldr	r3, [pc, #20]	; (801e0dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e0c6:	612b      	str	r3, [r5, #16]
 801e0c8:	4b07      	ldr	r3, [pc, #28]	; (801e0e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e0ca:	616b      	str	r3, [r5, #20]
 801e0cc:	bd38      	pop	{r3, r4, r5, pc}
 801e0ce:	bf00      	nop
 801e0d0:	24004b28 	.word	0x24004b28
 801e0d4:	24000000 	.word	0x24000000
 801e0d8:	0801ae6d 	.word	0x0801ae6d
 801e0dc:	24000068 	.word	0x24000068
 801e0e0:	24004b2c 	.word	0x24004b2c
 801e0e4:	0801ae6b 	.word	0x0801ae6b
 801e0e8:	2400006c 	.word	0x2400006c

0801e0ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e0ec:	b538      	push	{r3, r4, r5, lr}
 801e0ee:	4c15      	ldr	r4, [pc, #84]	; (801e144 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e0f0:	4605      	mov	r5, r0
 801e0f2:	7823      	ldrb	r3, [r4, #0]
 801e0f4:	f3bf 8f5b 	dmb	ish
 801e0f8:	07da      	lsls	r2, r3, #31
 801e0fa:	d40b      	bmi.n	801e114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e0fc:	4620      	mov	r0, r4
 801e0fe:	f007 fe84 	bl	8025e0a <__cxa_guard_acquire>
 801e102:	b138      	cbz	r0, 801e114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e104:	4620      	mov	r0, r4
 801e106:	f007 fe8c 	bl	8025e22 <__cxa_guard_release>
 801e10a:	4a0f      	ldr	r2, [pc, #60]	; (801e148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e10c:	490f      	ldr	r1, [pc, #60]	; (801e14c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e10e:	4810      	ldr	r0, [pc, #64]	; (801e150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e110:	f007 fe74 	bl	8025dfc <__aeabi_atexit>
 801e114:	4c0f      	ldr	r4, [pc, #60]	; (801e154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e116:	7823      	ldrb	r3, [r4, #0]
 801e118:	f3bf 8f5b 	dmb	ish
 801e11c:	07db      	lsls	r3, r3, #31
 801e11e:	d40b      	bmi.n	801e138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e120:	4620      	mov	r0, r4
 801e122:	f007 fe72 	bl	8025e0a <__cxa_guard_acquire>
 801e126:	b138      	cbz	r0, 801e138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e128:	4620      	mov	r0, r4
 801e12a:	f007 fe7a 	bl	8025e22 <__cxa_guard_release>
 801e12e:	4a06      	ldr	r2, [pc, #24]	; (801e148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e130:	4909      	ldr	r1, [pc, #36]	; (801e158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e132:	480a      	ldr	r0, [pc, #40]	; (801e15c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e134:	f007 fe62 	bl	8025dfc <__aeabi_atexit>
 801e138:	4b05      	ldr	r3, [pc, #20]	; (801e150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e13a:	60ab      	str	r3, [r5, #8]
 801e13c:	4b07      	ldr	r3, [pc, #28]	; (801e15c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e13e:	60eb      	str	r3, [r5, #12]
 801e140:	bd38      	pop	{r3, r4, r5, pc}
 801e142:	bf00      	nop
 801e144:	24004b00 	.word	0x24004b00
 801e148:	24000000 	.word	0x24000000
 801e14c:	0801ae71 	.word	0x0801ae71
 801e150:	24000040 	.word	0x24000040
 801e154:	24004b04 	.word	0x24004b04
 801e158:	0801ae6f 	.word	0x0801ae6f
 801e15c:	24000044 	.word	0x24000044

0801e160 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e160:	b510      	push	{r4, lr}
 801e162:	4604      	mov	r4, r0
 801e164:	f7ff ff88 	bl	801e078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e168:	4620      	mov	r0, r4
 801e16a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e16e:	f7ff bfbd 	b.w	801e0ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e174:	b538      	push	{r3, r4, r5, lr}
 801e176:	4c15      	ldr	r4, [pc, #84]	; (801e1cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e178:	4605      	mov	r5, r0
 801e17a:	7823      	ldrb	r3, [r4, #0]
 801e17c:	f3bf 8f5b 	dmb	ish
 801e180:	07da      	lsls	r2, r3, #31
 801e182:	d40b      	bmi.n	801e19c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e184:	4620      	mov	r0, r4
 801e186:	f007 fe40 	bl	8025e0a <__cxa_guard_acquire>
 801e18a:	b138      	cbz	r0, 801e19c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e18c:	4620      	mov	r0, r4
 801e18e:	f007 fe48 	bl	8025e22 <__cxa_guard_release>
 801e192:	4a0f      	ldr	r2, [pc, #60]	; (801e1d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e194:	490f      	ldr	r1, [pc, #60]	; (801e1d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e196:	4810      	ldr	r0, [pc, #64]	; (801e1d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e198:	f007 fe30 	bl	8025dfc <__aeabi_atexit>
 801e19c:	4c0f      	ldr	r4, [pc, #60]	; (801e1dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e19e:	7823      	ldrb	r3, [r4, #0]
 801e1a0:	f3bf 8f5b 	dmb	ish
 801e1a4:	07db      	lsls	r3, r3, #31
 801e1a6:	d40b      	bmi.n	801e1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e1a8:	4620      	mov	r0, r4
 801e1aa:	f007 fe2e 	bl	8025e0a <__cxa_guard_acquire>
 801e1ae:	b138      	cbz	r0, 801e1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e1b0:	4620      	mov	r0, r4
 801e1b2:	f007 fe36 	bl	8025e22 <__cxa_guard_release>
 801e1b6:	4a06      	ldr	r2, [pc, #24]	; (801e1d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e1b8:	4909      	ldr	r1, [pc, #36]	; (801e1e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e1ba:	480a      	ldr	r0, [pc, #40]	; (801e1e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e1bc:	f007 fe1e 	bl	8025dfc <__aeabi_atexit>
 801e1c0:	4b05      	ldr	r3, [pc, #20]	; (801e1d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e1c2:	622b      	str	r3, [r5, #32]
 801e1c4:	4b07      	ldr	r3, [pc, #28]	; (801e1e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e1c6:	626b      	str	r3, [r5, #36]	; 0x24
 801e1c8:	bd38      	pop	{r3, r4, r5, pc}
 801e1ca:	bf00      	nop
 801e1cc:	24004b30 	.word	0x24004b30
 801e1d0:	24000000 	.word	0x24000000
 801e1d4:	0801ae65 	.word	0x0801ae65
 801e1d8:	24000070 	.word	0x24000070
 801e1dc:	24004b34 	.word	0x24004b34
 801e1e0:	0801ae63 	.word	0x0801ae63
 801e1e4:	24000074 	.word	0x24000074

0801e1e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e1e8:	b538      	push	{r3, r4, r5, lr}
 801e1ea:	4c15      	ldr	r4, [pc, #84]	; (801e240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e1ec:	4605      	mov	r5, r0
 801e1ee:	7823      	ldrb	r3, [r4, #0]
 801e1f0:	f3bf 8f5b 	dmb	ish
 801e1f4:	07da      	lsls	r2, r3, #31
 801e1f6:	d40b      	bmi.n	801e210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e1f8:	4620      	mov	r0, r4
 801e1fa:	f007 fe06 	bl	8025e0a <__cxa_guard_acquire>
 801e1fe:	b138      	cbz	r0, 801e210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e200:	4620      	mov	r0, r4
 801e202:	f007 fe0e 	bl	8025e22 <__cxa_guard_release>
 801e206:	4a0f      	ldr	r2, [pc, #60]	; (801e244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e208:	490f      	ldr	r1, [pc, #60]	; (801e248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e20a:	4810      	ldr	r0, [pc, #64]	; (801e24c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e20c:	f007 fdf6 	bl	8025dfc <__aeabi_atexit>
 801e210:	4c0f      	ldr	r4, [pc, #60]	; (801e250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e212:	7823      	ldrb	r3, [r4, #0]
 801e214:	f3bf 8f5b 	dmb	ish
 801e218:	07db      	lsls	r3, r3, #31
 801e21a:	d40b      	bmi.n	801e234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e21c:	4620      	mov	r0, r4
 801e21e:	f007 fdf4 	bl	8025e0a <__cxa_guard_acquire>
 801e222:	b138      	cbz	r0, 801e234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e224:	4620      	mov	r0, r4
 801e226:	f007 fdfc 	bl	8025e22 <__cxa_guard_release>
 801e22a:	4a06      	ldr	r2, [pc, #24]	; (801e244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e22c:	4909      	ldr	r1, [pc, #36]	; (801e254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e22e:	480a      	ldr	r0, [pc, #40]	; (801e258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e230:	f007 fde4 	bl	8025dfc <__aeabi_atexit>
 801e234:	4b05      	ldr	r3, [pc, #20]	; (801e24c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e236:	61ab      	str	r3, [r5, #24]
 801e238:	4b07      	ldr	r3, [pc, #28]	; (801e258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e23a:	61eb      	str	r3, [r5, #28]
 801e23c:	bd38      	pop	{r3, r4, r5, pc}
 801e23e:	bf00      	nop
 801e240:	24004b08 	.word	0x24004b08
 801e244:	24000000 	.word	0x24000000
 801e248:	0801ae69 	.word	0x0801ae69
 801e24c:	24000048 	.word	0x24000048
 801e250:	24004b0c 	.word	0x24004b0c
 801e254:	0801ae67 	.word	0x0801ae67
 801e258:	2400004c 	.word	0x2400004c

0801e25c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e25c:	b510      	push	{r4, lr}
 801e25e:	4604      	mov	r4, r0
 801e260:	f7ff ff88 	bl	801e174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e264:	4620      	mov	r0, r4
 801e266:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e26a:	f7ff bfbd 	b.w	801e1e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e270:	b538      	push	{r3, r4, r5, lr}
 801e272:	4c15      	ldr	r4, [pc, #84]	; (801e2c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e274:	4605      	mov	r5, r0
 801e276:	7823      	ldrb	r3, [r4, #0]
 801e278:	f3bf 8f5b 	dmb	ish
 801e27c:	07da      	lsls	r2, r3, #31
 801e27e:	d40b      	bmi.n	801e298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e280:	4620      	mov	r0, r4
 801e282:	f007 fdc2 	bl	8025e0a <__cxa_guard_acquire>
 801e286:	b138      	cbz	r0, 801e298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e288:	4620      	mov	r0, r4
 801e28a:	f007 fdca 	bl	8025e22 <__cxa_guard_release>
 801e28e:	4a0f      	ldr	r2, [pc, #60]	; (801e2cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e290:	490f      	ldr	r1, [pc, #60]	; (801e2d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e292:	4810      	ldr	r0, [pc, #64]	; (801e2d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e294:	f007 fdb2 	bl	8025dfc <__aeabi_atexit>
 801e298:	4c0f      	ldr	r4, [pc, #60]	; (801e2d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e29a:	7823      	ldrb	r3, [r4, #0]
 801e29c:	f3bf 8f5b 	dmb	ish
 801e2a0:	07db      	lsls	r3, r3, #31
 801e2a2:	d40b      	bmi.n	801e2bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e2a4:	4620      	mov	r0, r4
 801e2a6:	f007 fdb0 	bl	8025e0a <__cxa_guard_acquire>
 801e2aa:	b138      	cbz	r0, 801e2bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e2ac:	4620      	mov	r0, r4
 801e2ae:	f007 fdb8 	bl	8025e22 <__cxa_guard_release>
 801e2b2:	4a06      	ldr	r2, [pc, #24]	; (801e2cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e2b4:	4909      	ldr	r1, [pc, #36]	; (801e2dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e2b6:	480a      	ldr	r0, [pc, #40]	; (801e2e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e2b8:	f007 fda0 	bl	8025dfc <__aeabi_atexit>
 801e2bc:	4b05      	ldr	r3, [pc, #20]	; (801e2d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e2be:	632b      	str	r3, [r5, #48]	; 0x30
 801e2c0:	4b07      	ldr	r3, [pc, #28]	; (801e2e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e2c2:	636b      	str	r3, [r5, #52]	; 0x34
 801e2c4:	bd38      	pop	{r3, r4, r5, pc}
 801e2c6:	bf00      	nop
 801e2c8:	24004b40 	.word	0x24004b40
 801e2cc:	24000000 	.word	0x24000000
 801e2d0:	0801ae5d 	.word	0x0801ae5d
 801e2d4:	24000080 	.word	0x24000080
 801e2d8:	24004b44 	.word	0x24004b44
 801e2dc:	0801ae5b 	.word	0x0801ae5b
 801e2e0:	24000084 	.word	0x24000084

0801e2e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e2e4:	b538      	push	{r3, r4, r5, lr}
 801e2e6:	4c15      	ldr	r4, [pc, #84]	; (801e33c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e2e8:	4605      	mov	r5, r0
 801e2ea:	7823      	ldrb	r3, [r4, #0]
 801e2ec:	f3bf 8f5b 	dmb	ish
 801e2f0:	07da      	lsls	r2, r3, #31
 801e2f2:	d40b      	bmi.n	801e30c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e2f4:	4620      	mov	r0, r4
 801e2f6:	f007 fd88 	bl	8025e0a <__cxa_guard_acquire>
 801e2fa:	b138      	cbz	r0, 801e30c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e2fc:	4620      	mov	r0, r4
 801e2fe:	f007 fd90 	bl	8025e22 <__cxa_guard_release>
 801e302:	4a0f      	ldr	r2, [pc, #60]	; (801e340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e304:	490f      	ldr	r1, [pc, #60]	; (801e344 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e306:	4810      	ldr	r0, [pc, #64]	; (801e348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e308:	f007 fd78 	bl	8025dfc <__aeabi_atexit>
 801e30c:	4c0f      	ldr	r4, [pc, #60]	; (801e34c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e30e:	7823      	ldrb	r3, [r4, #0]
 801e310:	f3bf 8f5b 	dmb	ish
 801e314:	07db      	lsls	r3, r3, #31
 801e316:	d40b      	bmi.n	801e330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e318:	4620      	mov	r0, r4
 801e31a:	f007 fd76 	bl	8025e0a <__cxa_guard_acquire>
 801e31e:	b138      	cbz	r0, 801e330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e320:	4620      	mov	r0, r4
 801e322:	f007 fd7e 	bl	8025e22 <__cxa_guard_release>
 801e326:	4a06      	ldr	r2, [pc, #24]	; (801e340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e328:	4909      	ldr	r1, [pc, #36]	; (801e350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e32a:	480a      	ldr	r0, [pc, #40]	; (801e354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e32c:	f007 fd66 	bl	8025dfc <__aeabi_atexit>
 801e330:	4b05      	ldr	r3, [pc, #20]	; (801e348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e332:	62ab      	str	r3, [r5, #40]	; 0x28
 801e334:	4b07      	ldr	r3, [pc, #28]	; (801e354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e336:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e338:	bd38      	pop	{r3, r4, r5, pc}
 801e33a:	bf00      	nop
 801e33c:	24004b10 	.word	0x24004b10
 801e340:	24000000 	.word	0x24000000
 801e344:	0801ae61 	.word	0x0801ae61
 801e348:	24000050 	.word	0x24000050
 801e34c:	24004b14 	.word	0x24004b14
 801e350:	0801ae5f 	.word	0x0801ae5f
 801e354:	24000054 	.word	0x24000054

0801e358 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e358:	b510      	push	{r4, lr}
 801e35a:	4604      	mov	r4, r0
 801e35c:	f7ff ff88 	bl	801e270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e360:	4620      	mov	r0, r4
 801e362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e366:	f7ff bfbd 	b.w	801e2e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e36c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e36c:	b538      	push	{r3, r4, r5, lr}
 801e36e:	4c15      	ldr	r4, [pc, #84]	; (801e3c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e370:	4605      	mov	r5, r0
 801e372:	7823      	ldrb	r3, [r4, #0]
 801e374:	f3bf 8f5b 	dmb	ish
 801e378:	07da      	lsls	r2, r3, #31
 801e37a:	d40b      	bmi.n	801e394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e37c:	4620      	mov	r0, r4
 801e37e:	f007 fd44 	bl	8025e0a <__cxa_guard_acquire>
 801e382:	b138      	cbz	r0, 801e394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e384:	4620      	mov	r0, r4
 801e386:	f007 fd4c 	bl	8025e22 <__cxa_guard_release>
 801e38a:	4a0f      	ldr	r2, [pc, #60]	; (801e3c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e38c:	490f      	ldr	r1, [pc, #60]	; (801e3cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e38e:	4810      	ldr	r0, [pc, #64]	; (801e3d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e390:	f007 fd34 	bl	8025dfc <__aeabi_atexit>
 801e394:	4c0f      	ldr	r4, [pc, #60]	; (801e3d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e396:	7823      	ldrb	r3, [r4, #0]
 801e398:	f3bf 8f5b 	dmb	ish
 801e39c:	07db      	lsls	r3, r3, #31
 801e39e:	d40b      	bmi.n	801e3b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e3a0:	4620      	mov	r0, r4
 801e3a2:	f007 fd32 	bl	8025e0a <__cxa_guard_acquire>
 801e3a6:	b138      	cbz	r0, 801e3b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e3a8:	4620      	mov	r0, r4
 801e3aa:	f007 fd3a 	bl	8025e22 <__cxa_guard_release>
 801e3ae:	4a06      	ldr	r2, [pc, #24]	; (801e3c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e3b0:	4909      	ldr	r1, [pc, #36]	; (801e3d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e3b2:	480a      	ldr	r0, [pc, #40]	; (801e3dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e3b4:	f007 fd22 	bl	8025dfc <__aeabi_atexit>
 801e3b8:	4b05      	ldr	r3, [pc, #20]	; (801e3d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e3ba:	652b      	str	r3, [r5, #80]	; 0x50
 801e3bc:	4b07      	ldr	r3, [pc, #28]	; (801e3dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e3be:	656b      	str	r3, [r5, #84]	; 0x54
 801e3c0:	bd38      	pop	{r3, r4, r5, pc}
 801e3c2:	bf00      	nop
 801e3c4:	24004b48 	.word	0x24004b48
 801e3c8:	24000000 	.word	0x24000000
 801e3cc:	0801ae4d 	.word	0x0801ae4d
 801e3d0:	24000088 	.word	0x24000088
 801e3d4:	24004b4c 	.word	0x24004b4c
 801e3d8:	0801ae4b 	.word	0x0801ae4b
 801e3dc:	2400008c 	.word	0x2400008c

0801e3e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e3e0:	b538      	push	{r3, r4, r5, lr}
 801e3e2:	4c15      	ldr	r4, [pc, #84]	; (801e438 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e3e4:	4605      	mov	r5, r0
 801e3e6:	7823      	ldrb	r3, [r4, #0]
 801e3e8:	f3bf 8f5b 	dmb	ish
 801e3ec:	07da      	lsls	r2, r3, #31
 801e3ee:	d40b      	bmi.n	801e408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e3f0:	4620      	mov	r0, r4
 801e3f2:	f007 fd0a 	bl	8025e0a <__cxa_guard_acquire>
 801e3f6:	b138      	cbz	r0, 801e408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e3f8:	4620      	mov	r0, r4
 801e3fa:	f007 fd12 	bl	8025e22 <__cxa_guard_release>
 801e3fe:	4a0f      	ldr	r2, [pc, #60]	; (801e43c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e400:	490f      	ldr	r1, [pc, #60]	; (801e440 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e402:	4810      	ldr	r0, [pc, #64]	; (801e444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e404:	f007 fcfa 	bl	8025dfc <__aeabi_atexit>
 801e408:	4c0f      	ldr	r4, [pc, #60]	; (801e448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e40a:	7823      	ldrb	r3, [r4, #0]
 801e40c:	f3bf 8f5b 	dmb	ish
 801e410:	07db      	lsls	r3, r3, #31
 801e412:	d40b      	bmi.n	801e42c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e414:	4620      	mov	r0, r4
 801e416:	f007 fcf8 	bl	8025e0a <__cxa_guard_acquire>
 801e41a:	b138      	cbz	r0, 801e42c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e41c:	4620      	mov	r0, r4
 801e41e:	f007 fd00 	bl	8025e22 <__cxa_guard_release>
 801e422:	4a06      	ldr	r2, [pc, #24]	; (801e43c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e424:	4909      	ldr	r1, [pc, #36]	; (801e44c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e426:	480a      	ldr	r0, [pc, #40]	; (801e450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e428:	f007 fce8 	bl	8025dfc <__aeabi_atexit>
 801e42c:	4b05      	ldr	r3, [pc, #20]	; (801e444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e42e:	64ab      	str	r3, [r5, #72]	; 0x48
 801e430:	4b07      	ldr	r3, [pc, #28]	; (801e450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e432:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e434:	bd38      	pop	{r3, r4, r5, pc}
 801e436:	bf00      	nop
 801e438:	24004b50 	.word	0x24004b50
 801e43c:	24000000 	.word	0x24000000
 801e440:	0801ae51 	.word	0x0801ae51
 801e444:	24000090 	.word	0x24000090
 801e448:	24004b54 	.word	0x24004b54
 801e44c:	0801ae4f 	.word	0x0801ae4f
 801e450:	24000094 	.word	0x24000094

0801e454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e454:	b538      	push	{r3, r4, r5, lr}
 801e456:	4c15      	ldr	r4, [pc, #84]	; (801e4ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e458:	4605      	mov	r5, r0
 801e45a:	7823      	ldrb	r3, [r4, #0]
 801e45c:	f3bf 8f5b 	dmb	ish
 801e460:	07da      	lsls	r2, r3, #31
 801e462:	d40b      	bmi.n	801e47c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e464:	4620      	mov	r0, r4
 801e466:	f007 fcd0 	bl	8025e0a <__cxa_guard_acquire>
 801e46a:	b138      	cbz	r0, 801e47c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e46c:	4620      	mov	r0, r4
 801e46e:	f007 fcd8 	bl	8025e22 <__cxa_guard_release>
 801e472:	4a0f      	ldr	r2, [pc, #60]	; (801e4b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e474:	490f      	ldr	r1, [pc, #60]	; (801e4b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e476:	4810      	ldr	r0, [pc, #64]	; (801e4b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e478:	f007 fcc0 	bl	8025dfc <__aeabi_atexit>
 801e47c:	4c0f      	ldr	r4, [pc, #60]	; (801e4bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e47e:	7823      	ldrb	r3, [r4, #0]
 801e480:	f3bf 8f5b 	dmb	ish
 801e484:	07db      	lsls	r3, r3, #31
 801e486:	d40b      	bmi.n	801e4a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e488:	4620      	mov	r0, r4
 801e48a:	f007 fcbe 	bl	8025e0a <__cxa_guard_acquire>
 801e48e:	b138      	cbz	r0, 801e4a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e490:	4620      	mov	r0, r4
 801e492:	f007 fcc6 	bl	8025e22 <__cxa_guard_release>
 801e496:	4a06      	ldr	r2, [pc, #24]	; (801e4b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e498:	4909      	ldr	r1, [pc, #36]	; (801e4c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e49a:	480a      	ldr	r0, [pc, #40]	; (801e4c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e49c:	f007 fcae 	bl	8025dfc <__aeabi_atexit>
 801e4a0:	4b05      	ldr	r3, [pc, #20]	; (801e4b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e4a2:	642b      	str	r3, [r5, #64]	; 0x40
 801e4a4:	4b07      	ldr	r3, [pc, #28]	; (801e4c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e4a6:	646b      	str	r3, [r5, #68]	; 0x44
 801e4a8:	bd38      	pop	{r3, r4, r5, pc}
 801e4aa:	bf00      	nop
 801e4ac:	24004b18 	.word	0x24004b18
 801e4b0:	24000000 	.word	0x24000000
 801e4b4:	0801ae55 	.word	0x0801ae55
 801e4b8:	24000058 	.word	0x24000058
 801e4bc:	24004b1c 	.word	0x24004b1c
 801e4c0:	0801ae53 	.word	0x0801ae53
 801e4c4:	2400005c 	.word	0x2400005c

0801e4c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e4c8:	b538      	push	{r3, r4, r5, lr}
 801e4ca:	4c15      	ldr	r4, [pc, #84]	; (801e520 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e4cc:	4605      	mov	r5, r0
 801e4ce:	7823      	ldrb	r3, [r4, #0]
 801e4d0:	f3bf 8f5b 	dmb	ish
 801e4d4:	07da      	lsls	r2, r3, #31
 801e4d6:	d40b      	bmi.n	801e4f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	f007 fc96 	bl	8025e0a <__cxa_guard_acquire>
 801e4de:	b138      	cbz	r0, 801e4f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e4e0:	4620      	mov	r0, r4
 801e4e2:	f007 fc9e 	bl	8025e22 <__cxa_guard_release>
 801e4e6:	4a0f      	ldr	r2, [pc, #60]	; (801e524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e4e8:	490f      	ldr	r1, [pc, #60]	; (801e528 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e4ea:	4810      	ldr	r0, [pc, #64]	; (801e52c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e4ec:	f007 fc86 	bl	8025dfc <__aeabi_atexit>
 801e4f0:	4c0f      	ldr	r4, [pc, #60]	; (801e530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e4f2:	7823      	ldrb	r3, [r4, #0]
 801e4f4:	f3bf 8f5b 	dmb	ish
 801e4f8:	07db      	lsls	r3, r3, #31
 801e4fa:	d40b      	bmi.n	801e514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e4fc:	4620      	mov	r0, r4
 801e4fe:	f007 fc84 	bl	8025e0a <__cxa_guard_acquire>
 801e502:	b138      	cbz	r0, 801e514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e504:	4620      	mov	r0, r4
 801e506:	f007 fc8c 	bl	8025e22 <__cxa_guard_release>
 801e50a:	4a06      	ldr	r2, [pc, #24]	; (801e524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e50c:	4909      	ldr	r1, [pc, #36]	; (801e534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e50e:	480a      	ldr	r0, [pc, #40]	; (801e538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e510:	f007 fc74 	bl	8025dfc <__aeabi_atexit>
 801e514:	4b05      	ldr	r3, [pc, #20]	; (801e52c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e516:	63ab      	str	r3, [r5, #56]	; 0x38
 801e518:	4b07      	ldr	r3, [pc, #28]	; (801e538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e51a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e51c:	bd38      	pop	{r3, r4, r5, pc}
 801e51e:	bf00      	nop
 801e520:	24004b38 	.word	0x24004b38
 801e524:	24000000 	.word	0x24000000
 801e528:	0801ae59 	.word	0x0801ae59
 801e52c:	24000078 	.word	0x24000078
 801e530:	24004b3c 	.word	0x24004b3c
 801e534:	0801ae57 	.word	0x0801ae57
 801e538:	2400007c 	.word	0x2400007c

0801e53c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e53c:	b510      	push	{r4, lr}
 801e53e:	4604      	mov	r4, r0
 801e540:	f7ff ff14 	bl	801e36c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e544:	4620      	mov	r0, r4
 801e546:	f7ff ff85 	bl	801e454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e54a:	4620      	mov	r0, r4
 801e54c:	f7ff ff48 	bl	801e3e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e550:	4620      	mov	r0, r4
 801e552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e556:	f7ff bfb7 	b.w	801e4c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e55c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e55c:	b538      	push	{r3, r4, r5, lr}
 801e55e:	4c15      	ldr	r4, [pc, #84]	; (801e5b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e560:	4605      	mov	r5, r0
 801e562:	7823      	ldrb	r3, [r4, #0]
 801e564:	f3bf 8f5b 	dmb	ish
 801e568:	07da      	lsls	r2, r3, #31
 801e56a:	d40b      	bmi.n	801e584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e56c:	4620      	mov	r0, r4
 801e56e:	f007 fc4c 	bl	8025e0a <__cxa_guard_acquire>
 801e572:	b138      	cbz	r0, 801e584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e574:	4620      	mov	r0, r4
 801e576:	f007 fc54 	bl	8025e22 <__cxa_guard_release>
 801e57a:	4a0f      	ldr	r2, [pc, #60]	; (801e5b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e57c:	490f      	ldr	r1, [pc, #60]	; (801e5bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e57e:	4810      	ldr	r0, [pc, #64]	; (801e5c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e580:	f007 fc3c 	bl	8025dfc <__aeabi_atexit>
 801e584:	4c0f      	ldr	r4, [pc, #60]	; (801e5c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e586:	7823      	ldrb	r3, [r4, #0]
 801e588:	f3bf 8f5b 	dmb	ish
 801e58c:	07db      	lsls	r3, r3, #31
 801e58e:	d40b      	bmi.n	801e5a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e590:	4620      	mov	r0, r4
 801e592:	f007 fc3a 	bl	8025e0a <__cxa_guard_acquire>
 801e596:	b138      	cbz	r0, 801e5a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e598:	4620      	mov	r0, r4
 801e59a:	f007 fc42 	bl	8025e22 <__cxa_guard_release>
 801e59e:	4a06      	ldr	r2, [pc, #24]	; (801e5b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e5a0:	4909      	ldr	r1, [pc, #36]	; (801e5c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e5a2:	480a      	ldr	r0, [pc, #40]	; (801e5cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e5a4:	f007 fc2a 	bl	8025dfc <__aeabi_atexit>
 801e5a8:	4b05      	ldr	r3, [pc, #20]	; (801e5c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e5aa:	662b      	str	r3, [r5, #96]	; 0x60
 801e5ac:	4b07      	ldr	r3, [pc, #28]	; (801e5cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e5ae:	666b      	str	r3, [r5, #100]	; 0x64
 801e5b0:	bd38      	pop	{r3, r4, r5, pc}
 801e5b2:	bf00      	nop
 801e5b4:	24004b20 	.word	0x24004b20
 801e5b8:	24000000 	.word	0x24000000
 801e5bc:	0801ae45 	.word	0x0801ae45
 801e5c0:	24000060 	.word	0x24000060
 801e5c4:	24004b24 	.word	0x24004b24
 801e5c8:	0801ae43 	.word	0x0801ae43
 801e5cc:	24000064 	.word	0x24000064

0801e5d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e5d0:	b538      	push	{r3, r4, r5, lr}
 801e5d2:	4c15      	ldr	r4, [pc, #84]	; (801e628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e5d4:	4605      	mov	r5, r0
 801e5d6:	7823      	ldrb	r3, [r4, #0]
 801e5d8:	f3bf 8f5b 	dmb	ish
 801e5dc:	07da      	lsls	r2, r3, #31
 801e5de:	d40b      	bmi.n	801e5f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e5e0:	4620      	mov	r0, r4
 801e5e2:	f007 fc12 	bl	8025e0a <__cxa_guard_acquire>
 801e5e6:	b138      	cbz	r0, 801e5f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e5e8:	4620      	mov	r0, r4
 801e5ea:	f007 fc1a 	bl	8025e22 <__cxa_guard_release>
 801e5ee:	4a0f      	ldr	r2, [pc, #60]	; (801e62c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e5f0:	490f      	ldr	r1, [pc, #60]	; (801e630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e5f2:	4810      	ldr	r0, [pc, #64]	; (801e634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e5f4:	f007 fc02 	bl	8025dfc <__aeabi_atexit>
 801e5f8:	4c0f      	ldr	r4, [pc, #60]	; (801e638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e5fa:	7823      	ldrb	r3, [r4, #0]
 801e5fc:	f3bf 8f5b 	dmb	ish
 801e600:	07db      	lsls	r3, r3, #31
 801e602:	d40b      	bmi.n	801e61c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e604:	4620      	mov	r0, r4
 801e606:	f007 fc00 	bl	8025e0a <__cxa_guard_acquire>
 801e60a:	b138      	cbz	r0, 801e61c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e60c:	4620      	mov	r0, r4
 801e60e:	f007 fc08 	bl	8025e22 <__cxa_guard_release>
 801e612:	4a06      	ldr	r2, [pc, #24]	; (801e62c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e614:	4909      	ldr	r1, [pc, #36]	; (801e63c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e616:	480a      	ldr	r0, [pc, #40]	; (801e640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e618:	f007 fbf0 	bl	8025dfc <__aeabi_atexit>
 801e61c:	4b05      	ldr	r3, [pc, #20]	; (801e634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e61e:	65ab      	str	r3, [r5, #88]	; 0x58
 801e620:	4b07      	ldr	r3, [pc, #28]	; (801e640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e622:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e624:	bd38      	pop	{r3, r4, r5, pc}
 801e626:	bf00      	nop
 801e628:	24004af8 	.word	0x24004af8
 801e62c:	24000000 	.word	0x24000000
 801e630:	0801ae49 	.word	0x0801ae49
 801e634:	24000038 	.word	0x24000038
 801e638:	24004afc 	.word	0x24004afc
 801e63c:	0801ae47 	.word	0x0801ae47
 801e640:	2400003c 	.word	0x2400003c

0801e644 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e644:	b510      	push	{r4, lr}
 801e646:	4604      	mov	r4, r0
 801e648:	f7ff ff88 	bl	801e55c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e64c:	4620      	mov	r0, r4
 801e64e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e652:	f7ff bfbd 	b.w	801e5d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e658:	b538      	push	{r3, r4, r5, lr}
 801e65a:	4c15      	ldr	r4, [pc, #84]	; (801e6b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e65c:	4605      	mov	r5, r0
 801e65e:	7823      	ldrb	r3, [r4, #0]
 801e660:	f3bf 8f5b 	dmb	ish
 801e664:	07da      	lsls	r2, r3, #31
 801e666:	d40b      	bmi.n	801e680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e668:	4620      	mov	r0, r4
 801e66a:	f007 fbce 	bl	8025e0a <__cxa_guard_acquire>
 801e66e:	b138      	cbz	r0, 801e680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e670:	4620      	mov	r0, r4
 801e672:	f007 fbd6 	bl	8025e22 <__cxa_guard_release>
 801e676:	4a0f      	ldr	r2, [pc, #60]	; (801e6b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e678:	490f      	ldr	r1, [pc, #60]	; (801e6b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e67a:	4810      	ldr	r0, [pc, #64]	; (801e6bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e67c:	f007 fbbe 	bl	8025dfc <__aeabi_atexit>
 801e680:	4c0f      	ldr	r4, [pc, #60]	; (801e6c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e682:	7823      	ldrb	r3, [r4, #0]
 801e684:	f3bf 8f5b 	dmb	ish
 801e688:	07db      	lsls	r3, r3, #31
 801e68a:	d40b      	bmi.n	801e6a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e68c:	4620      	mov	r0, r4
 801e68e:	f007 fbbc 	bl	8025e0a <__cxa_guard_acquire>
 801e692:	b138      	cbz	r0, 801e6a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e694:	4620      	mov	r0, r4
 801e696:	f007 fbc4 	bl	8025e22 <__cxa_guard_release>
 801e69a:	4a06      	ldr	r2, [pc, #24]	; (801e6b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e69c:	4909      	ldr	r1, [pc, #36]	; (801e6c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e69e:	480a      	ldr	r0, [pc, #40]	; (801e6c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e6a0:	f007 fbac 	bl	8025dfc <__aeabi_atexit>
 801e6a4:	4b05      	ldr	r3, [pc, #20]	; (801e6bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e6a6:	672b      	str	r3, [r5, #112]	; 0x70
 801e6a8:	4b07      	ldr	r3, [pc, #28]	; (801e6c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e6aa:	676b      	str	r3, [r5, #116]	; 0x74
 801e6ac:	bd38      	pop	{r3, r4, r5, pc}
 801e6ae:	bf00      	nop
 801e6b0:	24004af0 	.word	0x24004af0
 801e6b4:	24000000 	.word	0x24000000
 801e6b8:	0801ae3d 	.word	0x0801ae3d
 801e6bc:	24000030 	.word	0x24000030
 801e6c0:	24004af4 	.word	0x24004af4
 801e6c4:	0801ae3b 	.word	0x0801ae3b
 801e6c8:	24000034 	.word	0x24000034

0801e6cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e6cc:	b538      	push	{r3, r4, r5, lr}
 801e6ce:	4c15      	ldr	r4, [pc, #84]	; (801e724 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e6d0:	4605      	mov	r5, r0
 801e6d2:	7823      	ldrb	r3, [r4, #0]
 801e6d4:	f3bf 8f5b 	dmb	ish
 801e6d8:	07da      	lsls	r2, r3, #31
 801e6da:	d40b      	bmi.n	801e6f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e6dc:	4620      	mov	r0, r4
 801e6de:	f007 fb94 	bl	8025e0a <__cxa_guard_acquire>
 801e6e2:	b138      	cbz	r0, 801e6f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e6e4:	4620      	mov	r0, r4
 801e6e6:	f007 fb9c 	bl	8025e22 <__cxa_guard_release>
 801e6ea:	4a0f      	ldr	r2, [pc, #60]	; (801e728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e6ec:	490f      	ldr	r1, [pc, #60]	; (801e72c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e6ee:	4810      	ldr	r0, [pc, #64]	; (801e730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e6f0:	f007 fb84 	bl	8025dfc <__aeabi_atexit>
 801e6f4:	4c0f      	ldr	r4, [pc, #60]	; (801e734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e6f6:	7823      	ldrb	r3, [r4, #0]
 801e6f8:	f3bf 8f5b 	dmb	ish
 801e6fc:	07db      	lsls	r3, r3, #31
 801e6fe:	d40b      	bmi.n	801e718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e700:	4620      	mov	r0, r4
 801e702:	f007 fb82 	bl	8025e0a <__cxa_guard_acquire>
 801e706:	b138      	cbz	r0, 801e718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e708:	4620      	mov	r0, r4
 801e70a:	f007 fb8a 	bl	8025e22 <__cxa_guard_release>
 801e70e:	4a06      	ldr	r2, [pc, #24]	; (801e728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e710:	4909      	ldr	r1, [pc, #36]	; (801e738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e712:	480a      	ldr	r0, [pc, #40]	; (801e73c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e714:	f007 fb72 	bl	8025dfc <__aeabi_atexit>
 801e718:	4b05      	ldr	r3, [pc, #20]	; (801e730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e71a:	66ab      	str	r3, [r5, #104]	; 0x68
 801e71c:	4b07      	ldr	r3, [pc, #28]	; (801e73c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e71e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e720:	bd38      	pop	{r3, r4, r5, pc}
 801e722:	bf00      	nop
 801e724:	24004ae8 	.word	0x24004ae8
 801e728:	24000000 	.word	0x24000000
 801e72c:	0801ae41 	.word	0x0801ae41
 801e730:	24000028 	.word	0x24000028
 801e734:	24004aec 	.word	0x24004aec
 801e738:	0801ae3f 	.word	0x0801ae3f
 801e73c:	2400002c 	.word	0x2400002c

0801e740 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e740:	b510      	push	{r4, lr}
 801e742:	4604      	mov	r4, r0
 801e744:	f7ff ff88 	bl	801e658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e748:	4620      	mov	r0, r4
 801e74a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e74e:	f7ff bfbd 	b.w	801e6cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e752 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e752:	b510      	push	{r4, lr}
 801e754:	4604      	mov	r4, r0
 801e756:	f7ff fff3 	bl	801e740 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e75a:	4620      	mov	r0, r4
 801e75c:	f7ff ff72 	bl	801e644 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e760:	4620      	mov	r0, r4
 801e762:	f7ff fdf9 	bl	801e358 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e766:	4620      	mov	r0, r4
 801e768:	f7ff fcfa 	bl	801e160 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e76c:	4620      	mov	r0, r4
 801e76e:	f7ff fd75 	bl	801e25c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e772:	4620      	mov	r0, r4
 801e774:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e778:	f7ff bee0 	b.w	801e53c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e77c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e77c:	b538      	push	{r3, r4, r5, lr}
 801e77e:	4c0b      	ldr	r4, [pc, #44]	; (801e7ac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e780:	4605      	mov	r5, r0
 801e782:	7823      	ldrb	r3, [r4, #0]
 801e784:	f3bf 8f5b 	dmb	ish
 801e788:	07db      	lsls	r3, r3, #31
 801e78a:	d40b      	bmi.n	801e7a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e78c:	4620      	mov	r0, r4
 801e78e:	f007 fb3c 	bl	8025e0a <__cxa_guard_acquire>
 801e792:	b138      	cbz	r0, 801e7a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e794:	4620      	mov	r0, r4
 801e796:	f007 fb44 	bl	8025e22 <__cxa_guard_release>
 801e79a:	4a05      	ldr	r2, [pc, #20]	; (801e7b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e79c:	4905      	ldr	r1, [pc, #20]	; (801e7b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e79e:	4806      	ldr	r0, [pc, #24]	; (801e7b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e7a0:	f007 fb2c 	bl	8025dfc <__aeabi_atexit>
 801e7a4:	4b04      	ldr	r3, [pc, #16]	; (801e7b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e7a6:	67ab      	str	r3, [r5, #120]	; 0x78
 801e7a8:	bd38      	pop	{r3, r4, r5, pc}
 801e7aa:	bf00      	nop
 801e7ac:	24004adc 	.word	0x24004adc
 801e7b0:	24000000 	.word	0x24000000
 801e7b4:	0801ae39 	.word	0x0801ae39
 801e7b8:	24000020 	.word	0x24000020

0801e7bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e7bc:	b538      	push	{r3, r4, r5, lr}
 801e7be:	4c0b      	ldr	r4, [pc, #44]	; (801e7ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e7c0:	4605      	mov	r5, r0
 801e7c2:	7823      	ldrb	r3, [r4, #0]
 801e7c4:	f3bf 8f5b 	dmb	ish
 801e7c8:	07db      	lsls	r3, r3, #31
 801e7ca:	d40b      	bmi.n	801e7e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e7cc:	4620      	mov	r0, r4
 801e7ce:	f007 fb1c 	bl	8025e0a <__cxa_guard_acquire>
 801e7d2:	b138      	cbz	r0, 801e7e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e7d4:	4620      	mov	r0, r4
 801e7d6:	f007 fb24 	bl	8025e22 <__cxa_guard_release>
 801e7da:	4a05      	ldr	r2, [pc, #20]	; (801e7f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e7dc:	4905      	ldr	r1, [pc, #20]	; (801e7f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e7de:	4806      	ldr	r0, [pc, #24]	; (801e7f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e7e0:	f007 fb0c 	bl	8025dfc <__aeabi_atexit>
 801e7e4:	4b04      	ldr	r3, [pc, #16]	; (801e7f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e7e6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e7e8:	bd38      	pop	{r3, r4, r5, pc}
 801e7ea:	bf00      	nop
 801e7ec:	24004ae0 	.word	0x24004ae0
 801e7f0:	24000000 	.word	0x24000000
 801e7f4:	0801ae37 	.word	0x0801ae37
 801e7f8:	24000024 	.word	0x24000024

0801e7fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e7fc:	b570      	push	{r4, r5, r6, lr}
 801e7fe:	4d0d      	ldr	r5, [pc, #52]	; (801e834 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e800:	4606      	mov	r6, r0
 801e802:	4c0d      	ldr	r4, [pc, #52]	; (801e838 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e804:	782b      	ldrb	r3, [r5, #0]
 801e806:	f3bf 8f5b 	dmb	ish
 801e80a:	f013 0f01 	tst.w	r3, #1
 801e80e:	d10d      	bne.n	801e82c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e810:	4628      	mov	r0, r5
 801e812:	f007 fafa 	bl	8025e0a <__cxa_guard_acquire>
 801e816:	b148      	cbz	r0, 801e82c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e818:	4b08      	ldr	r3, [pc, #32]	; (801e83c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e81a:	4628      	mov	r0, r5
 801e81c:	6023      	str	r3, [r4, #0]
 801e81e:	f007 fb00 	bl	8025e22 <__cxa_guard_release>
 801e822:	4a07      	ldr	r2, [pc, #28]	; (801e840 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e824:	4620      	mov	r0, r4
 801e826:	4907      	ldr	r1, [pc, #28]	; (801e844 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e828:	f007 fae8 	bl	8025dfc <__aeabi_atexit>
 801e82c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e830:	bd70      	pop	{r4, r5, r6, pc}
 801e832:	bf00      	nop
 801e834:	24004ae4 	.word	0x24004ae4
 801e838:	24004b58 	.word	0x24004b58
 801e83c:	08029028 	.word	0x08029028
 801e840:	24000000 	.word	0x24000000
 801e844:	0801ae35 	.word	0x0801ae35

0801e848 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e848:	b510      	push	{r4, lr}
 801e84a:	4604      	mov	r4, r0
 801e84c:	f7ff ff96 	bl	801e77c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e850:	4620      	mov	r0, r4
 801e852:	f7ff ffb3 	bl	801e7bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e856:	4620      	mov	r0, r4
 801e858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e85c:	f7ff bfce 	b.w	801e7fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e864:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e868:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e86c:	2d00      	cmp	r5, #0
 801e86e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e872:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e876:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e87a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e87e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e882:	eb02 0a0c 	add.w	sl, r2, ip
 801e886:	8808      	ldrh	r0, [r1, #0]
 801e888:	f2c0 80b0 	blt.w	801e9ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e88c:	45ab      	cmp	fp, r5
 801e88e:	f340 80ad 	ble.w	801e9ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e892:	2c00      	cmp	r4, #0
 801e894:	f2c0 80a8 	blt.w	801e9e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e898:	45a6      	cmp	lr, r4
 801e89a:	f340 80a5 	ble.w	801e9e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e89e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e8a2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e8a6:	1c62      	adds	r2, r4, #1
 801e8a8:	f100 80a3 	bmi.w	801e9f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e8ac:	4596      	cmp	lr, r2
 801e8ae:	f340 80a0 	ble.w	801e9f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e8b2:	f1b9 0f00 	cmp.w	r9, #0
 801e8b6:	f000 809c 	beq.w	801e9f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e8ba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e8be:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e8c2:	3501      	adds	r5, #1
 801e8c4:	f100 8099 	bmi.w	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e8c8:	45ab      	cmp	fp, r5
 801e8ca:	f340 8096 	ble.w	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e8ce:	2f00      	cmp	r7, #0
 801e8d0:	f000 8093 	beq.w	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e8d4:	2c00      	cmp	r4, #0
 801e8d6:	f2c0 808e 	blt.w	801e9f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e8da:	45a6      	cmp	lr, r4
 801e8dc:	f340 808b 	ble.w	801e9f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e8e0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e8e4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e8e8:	3401      	adds	r4, #1
 801e8ea:	f100 8089 	bmi.w	801ea00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e8ee:	45a6      	cmp	lr, r4
 801e8f0:	f340 8086 	ble.w	801ea00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e8f4:	f1b9 0f00 	cmp.w	r9, #0
 801e8f8:	f000 8082 	beq.w	801ea00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e8fc:	44d6      	add	lr, sl
 801e8fe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e902:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e906:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e90a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e90e:	fb19 fe07 	smulbb	lr, r9, r7
 801e912:	f1c7 0210 	rsb	r2, r7, #16
 801e916:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e91a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e91e:	eba2 0209 	sub.w	r2, r2, r9
 801e922:	ea44 0808 	orr.w	r8, r4, r8
 801e926:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e92a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e92e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e932:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e936:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e93a:	ea44 0c0c 	orr.w	ip, r4, ip
 801e93e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e942:	fb04 f40c 	mul.w	r4, r4, ip
 801e946:	fb02 4808 	mla	r8, r2, r8, r4
 801e94a:	041a      	lsls	r2, r3, #16
 801e94c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e950:	b2b4      	uxth	r4, r6
 801e952:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e956:	43f6      	mvns	r6, r6
 801e958:	4313      	orrs	r3, r2
 801e95a:	042a      	lsls	r2, r5, #16
 801e95c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e960:	b2f6      	uxtb	r6, r6
 801e962:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e966:	fb0e 8303 	mla	r3, lr, r3, r8
 801e96a:	432a      	orrs	r2, r5
 801e96c:	fb07 3202 	mla	r2, r7, r2, r3
 801e970:	10c7      	asrs	r7, r0, #3
 801e972:	0d53      	lsrs	r3, r2, #21
 801e974:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e978:	0952      	lsrs	r2, r2, #5
 801e97a:	fb17 f706 	smulbb	r7, r7, r6
 801e97e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e982:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e986:	431a      	orrs	r2, r3
 801e988:	b293      	uxth	r3, r2
 801e98a:	1202      	asrs	r2, r0, #8
 801e98c:	121d      	asrs	r5, r3, #8
 801e98e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e992:	00c0      	lsls	r0, r0, #3
 801e994:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e998:	fb12 f206 	smulbb	r2, r2, r6
 801e99c:	b2c0      	uxtb	r0, r0
 801e99e:	fb05 2504 	mla	r5, r5, r4, r2
 801e9a2:	10da      	asrs	r2, r3, #3
 801e9a4:	fb10 f006 	smulbb	r0, r0, r6
 801e9a8:	00db      	lsls	r3, r3, #3
 801e9aa:	b2ad      	uxth	r5, r5
 801e9ac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e9b0:	b2db      	uxtb	r3, r3
 801e9b2:	fb02 7204 	mla	r2, r2, r4, r7
 801e9b6:	fb03 0004 	mla	r0, r3, r4, r0
 801e9ba:	1c6b      	adds	r3, r5, #1
 801e9bc:	b292      	uxth	r2, r2
 801e9be:	b280      	uxth	r0, r0
 801e9c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e9c4:	1c43      	adds	r3, r0, #1
 801e9c6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e9ca:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e9ce:	1c50      	adds	r0, r2, #1
 801e9d0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e9d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e9d8:	0952      	lsrs	r2, r2, #5
 801e9da:	432b      	orrs	r3, r5
 801e9dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e9e0:	4313      	orrs	r3, r2
 801e9e2:	800b      	strh	r3, [r1, #0]
 801e9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9e8:	4680      	mov	r8, r0
 801e9ea:	e75c      	b.n	801e8a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e9ec:	4684      	mov	ip, r0
 801e9ee:	4680      	mov	r8, r0
 801e9f0:	e767      	b.n	801e8c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e9f2:	4684      	mov	ip, r0
 801e9f4:	e765      	b.n	801e8c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e9f6:	4605      	mov	r5, r0
 801e9f8:	e776      	b.n	801e8e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e9fa:	4603      	mov	r3, r0
 801e9fc:	4605      	mov	r5, r0
 801e9fe:	e782      	b.n	801e906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ea00:	4603      	mov	r3, r0
 801ea02:	e780      	b.n	801e906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ea04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea08:	b099      	sub	sp, #100	; 0x64
 801ea0a:	9215      	str	r2, [sp, #84]	; 0x54
 801ea0c:	9309      	str	r3, [sp, #36]	; 0x24
 801ea0e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801ea10:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801ea14:	9016      	str	r0, [sp, #88]	; 0x58
 801ea16:	930d      	str	r3, [sp, #52]	; 0x34
 801ea18:	6850      	ldr	r0, [r2, #4]
 801ea1a:	910c      	str	r1, [sp, #48]	; 0x30
 801ea1c:	6812      	ldr	r2, [r2, #0]
 801ea1e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801ea22:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801ea26:	fb00 1303 	mla	r3, r0, r3, r1
 801ea2a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ea2e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ea30:	681b      	ldr	r3, [r3, #0]
 801ea32:	930b      	str	r3, [sp, #44]	; 0x2c
 801ea34:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ea36:	685e      	ldr	r6, [r3, #4]
 801ea38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ea3a:	3604      	adds	r6, #4
 801ea3c:	43db      	mvns	r3, r3
 801ea3e:	b2db      	uxtb	r3, r3
 801ea40:	930a      	str	r3, [sp, #40]	; 0x28
 801ea42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ea44:	2b00      	cmp	r3, #0
 801ea46:	dc03      	bgt.n	801ea50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ea48:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801ea4a:	2b00      	cmp	r3, #0
 801ea4c:	f340 8225 	ble.w	801ee9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ea50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ea52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ea5a:	1e48      	subs	r0, r1, #1
 801ea5c:	1e57      	subs	r7, r2, #1
 801ea5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea60:	2b00      	cmp	r3, #0
 801ea62:	f340 80e3 	ble.w	801ec2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ea66:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ea6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ea6e:	d406      	bmi.n	801ea7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ea70:	4584      	cmp	ip, r0
 801ea72:	da04      	bge.n	801ea7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ea74:	2b00      	cmp	r3, #0
 801ea76:	db02      	blt.n	801ea7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ea78:	42bb      	cmp	r3, r7
 801ea7a:	f2c0 80d8 	blt.w	801ec2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ea7e:	f11c 0c01 	adds.w	ip, ip, #1
 801ea82:	f100 80c9 	bmi.w	801ec18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ea86:	4561      	cmp	r1, ip
 801ea88:	f2c0 80c6 	blt.w	801ec18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ea8c:	3301      	adds	r3, #1
 801ea8e:	f100 80c3 	bmi.w	801ec18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ea92:	429a      	cmp	r2, r3
 801ea94:	f2c0 80c0 	blt.w	801ec18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ea98:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ea9c:	4647      	mov	r7, r8
 801ea9e:	f1bb 0f00 	cmp.w	fp, #0
 801eaa2:	f340 80e3 	ble.w	801ec6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801eaa6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801eaa8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801eaac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eaae:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801eab2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eab6:	ea5f 422a 	movs.w	r2, sl, asr #16
 801eaba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801eabe:	689b      	ldr	r3, [r3, #8]
 801eac0:	f100 8121 	bmi.w	801ed06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eac4:	f103 39ff 	add.w	r9, r3, #4294967295
 801eac8:	454a      	cmp	r2, r9
 801eaca:	f280 811c 	bge.w	801ed06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eace:	f1bc 0f00 	cmp.w	ip, #0
 801ead2:	f2c0 8118 	blt.w	801ed06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ead6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801eada:	45cc      	cmp	ip, r9
 801eadc:	f280 8113 	bge.w	801ed06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801eae0:	b21b      	sxth	r3, r3
 801eae2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eae4:	fb0c 2203 	mla	r2, ip, r3, r2
 801eae8:	eb04 0902 	add.w	r9, r4, r2
 801eaec:	5ca2      	ldrb	r2, [r4, r2]
 801eaee:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801eaf2:	2800      	cmp	r0, #0
 801eaf4:	f000 80fe 	beq.w	801ecf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801eaf8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eafc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801eb00:	9211      	str	r2, [sp, #68]	; 0x44
 801eb02:	b151      	cbz	r1, 801eb1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eb04:	eb09 0203 	add.w	r2, r9, r3
 801eb08:	f819 3003 	ldrb.w	r3, [r9, r3]
 801eb0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb10:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb12:	7853      	ldrb	r3, [r2, #1]
 801eb14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb18:	9312      	str	r3, [sp, #72]	; 0x48
 801eb1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801eb1c:	fb10 f201 	smulbb	r2, r0, r1
 801eb20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801eb22:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eb26:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eb2a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801eb2e:	10d2      	asrs	r2, r2, #3
 801eb30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801eb34:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801eb38:	ea4c 0c03 	orr.w	ip, ip, r3
 801eb3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801eb3e:	041b      	lsls	r3, r3, #16
 801eb40:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eb44:	4323      	orrs	r3, r4
 801eb46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801eb48:	4353      	muls	r3, r2
 801eb4a:	fb09 330c 	mla	r3, r9, ip, r3
 801eb4e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801eb52:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eb56:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801eb5a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801eb5e:	f1c1 0c10 	rsb	ip, r1, #16
 801eb62:	ebac 0c00 	sub.w	ip, ip, r0
 801eb66:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801eb6a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801eb6e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801eb72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eb74:	0418      	lsls	r0, r3, #16
 801eb76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eb7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801eb7e:	4318      	orrs	r0, r3
 801eb80:	fb02 c200 	mla	r2, r2, r0, ip
 801eb84:	8838      	ldrh	r0, [r7, #0]
 801eb86:	0d53      	lsrs	r3, r2, #21
 801eb88:	0952      	lsrs	r2, r2, #5
 801eb8a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb8e:	1201      	asrs	r1, r0, #8
 801eb90:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eb94:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801eb98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801eb9c:	00c0      	lsls	r0, r0, #3
 801eb9e:	431a      	orrs	r2, r3
 801eba0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801eba4:	fb11 f104 	smulbb	r1, r1, r4
 801eba8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ebac:	b292      	uxth	r2, r2
 801ebae:	fb1e fe04 	smulbb	lr, lr, r4
 801ebb2:	b2c0      	uxtb	r0, r0
 801ebb4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ebb8:	fb10 f004 	smulbb	r0, r0, r4
 801ebbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ebc0:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ebc4:	10d1      	asrs	r1, r2, #3
 801ebc6:	00d2      	lsls	r2, r2, #3
 801ebc8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ebcc:	fa1f fc8c 	uxth.w	ip, ip
 801ebd0:	b2d2      	uxtb	r2, r2
 801ebd2:	fb01 e103 	mla	r1, r1, r3, lr
 801ebd6:	fb02 0303 	mla	r3, r2, r3, r0
 801ebda:	b289      	uxth	r1, r1
 801ebdc:	b29a      	uxth	r2, r3
 801ebde:	f10c 0301 	add.w	r3, ip, #1
 801ebe2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ebe6:	1c53      	adds	r3, r2, #1
 801ebe8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ebec:	1c4a      	adds	r2, r1, #1
 801ebee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ebf2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ebf6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ebfa:	0949      	lsrs	r1, r1, #5
 801ebfc:	ea43 030c 	orr.w	r3, r3, ip
 801ec00:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ec04:	430b      	orrs	r3, r1
 801ec06:	803b      	strh	r3, [r7, #0]
 801ec08:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ec0a:	3702      	adds	r7, #2
 801ec0c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ec10:	449a      	add	sl, r3
 801ec12:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ec14:	441d      	add	r5, r3
 801ec16:	e742      	b.n	801ea9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ec18:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ec1a:	f108 0802 	add.w	r8, r8, #2
 801ec1e:	449a      	add	sl, r3
 801ec20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ec22:	441d      	add	r5, r3
 801ec24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec26:	3b01      	subs	r3, #1
 801ec28:	9309      	str	r3, [sp, #36]	; 0x24
 801ec2a:	e718      	b.n	801ea5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ec2c:	d023      	beq.n	801ec76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ec2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec30:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ec32:	3b01      	subs	r3, #1
 801ec34:	fb00 a003 	mla	r0, r0, r3, sl
 801ec38:	1400      	asrs	r0, r0, #16
 801ec3a:	f53f af2d 	bmi.w	801ea98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ec3e:	3901      	subs	r1, #1
 801ec40:	4288      	cmp	r0, r1
 801ec42:	f6bf af29 	bge.w	801ea98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ec46:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ec48:	fb01 5303 	mla	r3, r1, r3, r5
 801ec4c:	141b      	asrs	r3, r3, #16
 801ec4e:	f53f af23 	bmi.w	801ea98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ec52:	3a01      	subs	r2, #1
 801ec54:	4293      	cmp	r3, r2
 801ec56:	f6bf af1f 	bge.w	801ea98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ec5a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ec5e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ec62:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ec66:	f1be 0f00 	cmp.w	lr, #0
 801ec6a:	dc6c      	bgt.n	801ed46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ec6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec6e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ec72:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ec76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ec78:	2b00      	cmp	r3, #0
 801ec7a:	f340 810e 	ble.w	801ee9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ec7e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ec82:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ec84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec8c:	eef0 6a62 	vmov.f32	s13, s5
 801ec90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ec94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ec9c:	ee16 aa90 	vmov	sl, s13
 801eca0:	eef0 6a43 	vmov.f32	s13, s6
 801eca4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eca8:	ee16 5a90 	vmov	r5, s13
 801ecac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ecb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ecb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ecb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ecbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ecc4:	ee12 2a90 	vmov	r2, s5
 801ecc8:	eef0 2a47 	vmov.f32	s5, s14
 801eccc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecd0:	ee13 2a10 	vmov	r2, s6
 801ecd4:	9325      	str	r3, [sp, #148]	; 0x94
 801ecd6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ecd8:	eeb0 3a67 	vmov.f32	s6, s15
 801ecdc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ece0:	9326      	str	r3, [sp, #152]	; 0x98
 801ece2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ece4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ece6:	3b01      	subs	r3, #1
 801ece8:	930c      	str	r3, [sp, #48]	; 0x30
 801ecea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ecec:	bf08      	it	eq
 801ecee:	4613      	moveq	r3, r2
 801ecf0:	9309      	str	r3, [sp, #36]	; 0x24
 801ecf2:	e6a6      	b.n	801ea42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ecf4:	2900      	cmp	r1, #0
 801ecf6:	f43f af10 	beq.w	801eb1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ecfa:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ecfe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed02:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed04:	e709      	b.n	801eb1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ed06:	f112 0901 	adds.w	r9, r2, #1
 801ed0a:	f53f af7d 	bmi.w	801ec08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ed0e:	454b      	cmp	r3, r9
 801ed10:	f6ff af7a 	blt.w	801ec08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ed14:	f11c 0901 	adds.w	r9, ip, #1
 801ed18:	f53f af76 	bmi.w	801ec08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ed1c:	45ce      	cmp	lr, r9
 801ed1e:	f6ff af73 	blt.w	801ec08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ed22:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ed24:	b21b      	sxth	r3, r3
 801ed26:	9202      	str	r2, [sp, #8]
 801ed28:	fa0f f28e 	sxth.w	r2, lr
 801ed2c:	9300      	str	r3, [sp, #0]
 801ed2e:	4633      	mov	r3, r6
 801ed30:	9201      	str	r2, [sp, #4]
 801ed32:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ed34:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ed38:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ed3c:	4639      	mov	r1, r7
 801ed3e:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ed40:	f7ff fd8e 	bl	801e860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ed44:	e760      	b.n	801ec08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ed46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ed48:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ed4c:	1429      	asrs	r1, r5, #16
 801ed4e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ed50:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ed54:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ed58:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ed5c:	fb03 2101 	mla	r1, r3, r1, r2
 801ed60:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ed62:	440a      	add	r2, r1
 801ed64:	5c61      	ldrb	r1, [r4, r1]
 801ed66:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ed6a:	f1bc 0f00 	cmp.w	ip, #0
 801ed6e:	f000 808c 	beq.w	801ee8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ed72:	7857      	ldrb	r7, [r2, #1]
 801ed74:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ed78:	9413      	str	r4, [sp, #76]	; 0x4c
 801ed7a:	b140      	cbz	r0, 801ed8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed7c:	18d7      	adds	r7, r2, r3
 801ed7e:	5cd3      	ldrb	r3, [r2, r3]
 801ed80:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed84:	9310      	str	r3, [sp, #64]	; 0x40
 801ed86:	787b      	ldrb	r3, [r7, #1]
 801ed88:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed8c:	9314      	str	r3, [sp, #80]	; 0x50
 801ed8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ed90:	fb1c f200 	smulbb	r2, ip, r0
 801ed94:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ed96:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ed9a:	041f      	lsls	r7, r3, #16
 801ed9c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eda0:	10d2      	asrs	r2, r2, #3
 801eda2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801eda6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801edaa:	431f      	orrs	r7, r3
 801edac:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801edb0:	9317      	str	r3, [sp, #92]	; 0x5c
 801edb2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801edb4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801edb6:	041b      	lsls	r3, r3, #16
 801edb8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801edbc:	ea43 030b 	orr.w	r3, r3, fp
 801edc0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801edc4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801edc8:	4353      	muls	r3, r2
 801edca:	fb04 3707 	mla	r7, r4, r7, r3
 801edce:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801edd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801edd4:	ea43 0b01 	orr.w	fp, r3, r1
 801edd8:	f1c0 0110 	rsb	r1, r0, #16
 801eddc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edde:	eba1 0c0c 	sub.w	ip, r1, ip
 801ede2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ede6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801edea:	fb0c 770b 	mla	r7, ip, fp, r7
 801edee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801edf2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801edf6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801edfa:	ea4c 0c0b 	orr.w	ip, ip, fp
 801edfe:	fb02 770c 	mla	r7, r2, ip, r7
 801ee02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ee04:	0d79      	lsrs	r1, r7, #21
 801ee06:	8812      	ldrh	r2, [r2, #0]
 801ee08:	097f      	lsrs	r7, r7, #5
 801ee0a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ee0e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ee12:	430f      	orrs	r7, r1
 801ee14:	1211      	asrs	r1, r2, #8
 801ee16:	b2bb      	uxth	r3, r7
 801ee18:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ee1c:	10d7      	asrs	r7, r2, #3
 801ee1e:	fb11 f104 	smulbb	r1, r1, r4
 801ee22:	1218      	asrs	r0, r3, #8
 801ee24:	00d2      	lsls	r2, r2, #3
 801ee26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ee2a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ee2e:	fb17 f704 	smulbb	r7, r7, r4
 801ee32:	b2d2      	uxtb	r2, r2
 801ee34:	fb00 1009 	mla	r0, r0, r9, r1
 801ee38:	10d9      	asrs	r1, r3, #3
 801ee3a:	fb12 f204 	smulbb	r2, r2, r4
 801ee3e:	00db      	lsls	r3, r3, #3
 801ee40:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ee44:	b280      	uxth	r0, r0
 801ee46:	b2db      	uxtb	r3, r3
 801ee48:	fb01 7109 	mla	r1, r1, r9, r7
 801ee4c:	fb03 2309 	mla	r3, r3, r9, r2
 801ee50:	1c42      	adds	r2, r0, #1
 801ee52:	b289      	uxth	r1, r1
 801ee54:	b29b      	uxth	r3, r3
 801ee56:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ee5a:	1c4f      	adds	r7, r1, #1
 801ee5c:	1c5a      	adds	r2, r3, #1
 801ee5e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ee62:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ee66:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ee6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ee6c:	0949      	lsrs	r1, r1, #5
 801ee6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ee72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ee76:	4310      	orrs	r0, r2
 801ee78:	4308      	orrs	r0, r1
 801ee7a:	f823 0b02 	strh.w	r0, [r3], #2
 801ee7e:	930e      	str	r3, [sp, #56]	; 0x38
 801ee80:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ee82:	449a      	add	sl, r3
 801ee84:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ee86:	441d      	add	r5, r3
 801ee88:	e6ed      	b.n	801ec66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ee8a:	2800      	cmp	r0, #0
 801ee8c:	f43f af7f 	beq.w	801ed8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ee90:	5cd3      	ldrb	r3, [r2, r3]
 801ee92:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ee96:	9310      	str	r3, [sp, #64]	; 0x40
 801ee98:	e779      	b.n	801ed8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ee9a:	b019      	add	sp, #100	; 0x64
 801ee9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801eea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eea4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801eea8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801eeac:	f1b8 0f00 	cmp.w	r8, #0
 801eeb0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801eeb4:	fb08 470e 	mla	r7, r8, lr, r4
 801eeb8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801eebc:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801eec0:	eb02 0907 	add.w	r9, r2, r7
 801eec4:	8808      	ldrh	r0, [r1, #0]
 801eec6:	db67      	blt.n	801ef98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eec8:	45c2      	cmp	sl, r8
 801eeca:	dd65      	ble.n	801ef98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eecc:	2c00      	cmp	r4, #0
 801eece:	db61      	blt.n	801ef94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eed0:	45a6      	cmp	lr, r4
 801eed2:	dd5f      	ble.n	801ef94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eed4:	5dd2      	ldrb	r2, [r2, r7]
 801eed6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801eeda:	1c62      	adds	r2, r4, #1
 801eedc:	d45f      	bmi.n	801ef9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eede:	4596      	cmp	lr, r2
 801eee0:	dd5d      	ble.n	801ef9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eee2:	2d00      	cmp	r5, #0
 801eee4:	d05b      	beq.n	801ef9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eee6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eeea:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801eeee:	f118 0801 	adds.w	r8, r8, #1
 801eef2:	d458      	bmi.n	801efa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eef4:	45c2      	cmp	sl, r8
 801eef6:	dd56      	ble.n	801efa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eef8:	2e00      	cmp	r6, #0
 801eefa:	d054      	beq.n	801efa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eefc:	2c00      	cmp	r4, #0
 801eefe:	db50      	blt.n	801efa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ef00:	45a6      	cmp	lr, r4
 801ef02:	dd4e      	ble.n	801efa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ef04:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ef08:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ef0c:	3401      	adds	r4, #1
 801ef0e:	d407      	bmi.n	801ef20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ef10:	45a6      	cmp	lr, r4
 801ef12:	dd05      	ble.n	801ef20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ef14:	b125      	cbz	r5, 801ef20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ef16:	44ce      	add	lr, r9
 801ef18:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ef1c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ef20:	fb15 f406 	smulbb	r4, r5, r6
 801ef24:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ef28:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ef2c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ef30:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef34:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ef38:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ef3c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ef40:	ea43 0c0c 	orr.w	ip, r3, ip
 801ef44:	f1c6 0310 	rsb	r3, r6, #16
 801ef48:	ea4e 0707 	orr.w	r7, lr, r7
 801ef4c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ef50:	1b5b      	subs	r3, r3, r5
 801ef52:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ef56:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ef5a:	437d      	muls	r5, r7
 801ef5c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ef60:	0403      	lsls	r3, r0, #16
 801ef62:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ef66:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef6a:	4318      	orrs	r0, r3
 801ef6c:	0413      	lsls	r3, r2, #16
 801ef6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ef72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef76:	fb04 c000 	mla	r0, r4, r0, ip
 801ef7a:	4313      	orrs	r3, r2
 801ef7c:	fb06 0003 	mla	r0, r6, r3, r0
 801ef80:	0d43      	lsrs	r3, r0, #21
 801ef82:	0940      	lsrs	r0, r0, #5
 801ef84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef88:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ef8c:	4318      	orrs	r0, r3
 801ef8e:	8008      	strh	r0, [r1, #0]
 801ef90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ef94:	4684      	mov	ip, r0
 801ef96:	e7a0      	b.n	801eeda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ef98:	4607      	mov	r7, r0
 801ef9a:	4684      	mov	ip, r0
 801ef9c:	e7a7      	b.n	801eeee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ef9e:	4607      	mov	r7, r0
 801efa0:	e7a5      	b.n	801eeee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801efa2:	4602      	mov	r2, r0
 801efa4:	e7b2      	b.n	801ef0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801efa6:	4602      	mov	r2, r0
 801efa8:	e7ba      	b.n	801ef20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801efaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801efaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801efae:	b093      	sub	sp, #76	; 0x4c
 801efb0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801efb4:	920f      	str	r2, [sp, #60]	; 0x3c
 801efb6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801efb8:	9010      	str	r0, [sp, #64]	; 0x40
 801efba:	9108      	str	r1, [sp, #32]
 801efbc:	6850      	ldr	r0, [r2, #4]
 801efbe:	9306      	str	r3, [sp, #24]
 801efc0:	6812      	ldr	r2, [r2, #0]
 801efc2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801efc6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801efca:	fb00 1303 	mla	r3, r0, r3, r1
 801efce:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801efd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efd4:	681b      	ldr	r3, [r3, #0]
 801efd6:	9307      	str	r3, [sp, #28]
 801efd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efda:	685f      	ldr	r7, [r3, #4]
 801efdc:	3704      	adds	r7, #4
 801efde:	9b08      	ldr	r3, [sp, #32]
 801efe0:	2b00      	cmp	r3, #0
 801efe2:	dc03      	bgt.n	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801efe4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801efe6:	2b00      	cmp	r3, #0
 801efe8:	f340 81b2 	ble.w	801f350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801efec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eff2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eff6:	1e48      	subs	r0, r1, #1
 801eff8:	f102 3cff 	add.w	ip, r2, #4294967295
 801effc:	9b06      	ldr	r3, [sp, #24]
 801effe:	2b00      	cmp	r3, #0
 801f000:	f340 80a9 	ble.w	801f156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f004:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f008:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f00c:	d406      	bmi.n	801f01c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f00e:	4586      	cmp	lr, r0
 801f010:	da04      	bge.n	801f01c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f012:	2b00      	cmp	r3, #0
 801f014:	db02      	blt.n	801f01c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f016:	4563      	cmp	r3, ip
 801f018:	f2c0 809e 	blt.w	801f158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f01c:	f11e 0e01 	adds.w	lr, lr, #1
 801f020:	f100 808f 	bmi.w	801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f024:	4571      	cmp	r1, lr
 801f026:	f2c0 808c 	blt.w	801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f02a:	3301      	adds	r3, #1
 801f02c:	f100 8089 	bmi.w	801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f030:	429a      	cmp	r2, r3
 801f032:	f2c0 8086 	blt.w	801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f036:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f03a:	46c8      	mov	r8, r9
 801f03c:	f1bb 0f00 	cmp.w	fp, #0
 801f040:	f340 80a6 	ble.w	801f190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f044:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f046:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f04a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f04c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f050:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f054:	1422      	asrs	r2, r4, #16
 801f056:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f05a:	689b      	ldr	r3, [r3, #8]
 801f05c:	f100 80e3 	bmi.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f060:	f103 3aff 	add.w	sl, r3, #4294967295
 801f064:	4552      	cmp	r2, sl
 801f066:	f280 80de 	bge.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f06a:	f1bc 0f00 	cmp.w	ip, #0
 801f06e:	f2c0 80da 	blt.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f072:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f076:	45d4      	cmp	ip, sl
 801f078:	f280 80d5 	bge.w	801f226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f07c:	b21b      	sxth	r3, r3
 801f07e:	9d07      	ldr	r5, [sp, #28]
 801f080:	fb0c 2203 	mla	r2, ip, r3, r2
 801f084:	eb05 0a02 	add.w	sl, r5, r2
 801f088:	5caa      	ldrb	r2, [r5, r2]
 801f08a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f08e:	2800      	cmp	r0, #0
 801f090:	f000 80c0 	beq.w	801f214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f094:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f098:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f09c:	920b      	str	r2, [sp, #44]	; 0x2c
 801f09e:	b151      	cbz	r1, 801f0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f0a0:	eb0a 0203 	add.w	r2, sl, r3
 801f0a4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f0a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f0ac:	9309      	str	r3, [sp, #36]	; 0x24
 801f0ae:	7853      	ldrb	r3, [r2, #1]
 801f0b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f0b4:	930c      	str	r3, [sp, #48]	; 0x30
 801f0b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f0b8:	fb10 f201 	smulbb	r2, r0, r1
 801f0bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f0be:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f0c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f0c6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f0ca:	10d2      	asrs	r2, r2, #3
 801f0cc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f0d0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f0d4:	ea4c 0c03 	orr.w	ip, ip, r3
 801f0d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0da:	041b      	lsls	r3, r3, #16
 801f0dc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f0e0:	432b      	orrs	r3, r5
 801f0e2:	4353      	muls	r3, r2
 801f0e4:	fb0a 330c 	mla	r3, sl, ip, r3
 801f0e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f0ec:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f0f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f0f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f0f8:	f1c1 0c10 	rsb	ip, r1, #16
 801f0fc:	ebac 0c00 	sub.w	ip, ip, r0
 801f100:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f104:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f108:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f10c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f10e:	0418      	lsls	r0, r3, #16
 801f110:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f114:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f118:	4318      	orrs	r0, r3
 801f11a:	fb02 c200 	mla	r2, r2, r0, ip
 801f11e:	0d53      	lsrs	r3, r2, #21
 801f120:	0952      	lsrs	r2, r2, #5
 801f122:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f126:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f12a:	431a      	orrs	r2, r3
 801f12c:	f8a8 2000 	strh.w	r2, [r8]
 801f130:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f132:	f108 0802 	add.w	r8, r8, #2
 801f136:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f13a:	441c      	add	r4, r3
 801f13c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f13e:	441e      	add	r6, r3
 801f140:	e77c      	b.n	801f03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f142:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f144:	f109 0902 	add.w	r9, r9, #2
 801f148:	441c      	add	r4, r3
 801f14a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f14c:	441e      	add	r6, r3
 801f14e:	9b06      	ldr	r3, [sp, #24]
 801f150:	3b01      	subs	r3, #1
 801f152:	9306      	str	r3, [sp, #24]
 801f154:	e752      	b.n	801effc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f156:	d020      	beq.n	801f19a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f158:	9b06      	ldr	r3, [sp, #24]
 801f15a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f15c:	3b01      	subs	r3, #1
 801f15e:	fb00 4003 	mla	r0, r0, r3, r4
 801f162:	1400      	asrs	r0, r0, #16
 801f164:	f53f af67 	bmi.w	801f036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f168:	3901      	subs	r1, #1
 801f16a:	4288      	cmp	r0, r1
 801f16c:	f6bf af63 	bge.w	801f036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f170:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f172:	fb01 6303 	mla	r3, r1, r3, r6
 801f176:	141b      	asrs	r3, r3, #16
 801f178:	f53f af5d 	bmi.w	801f036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f17c:	3a01      	subs	r2, #1
 801f17e:	4293      	cmp	r3, r2
 801f180:	f6bf af59 	bge.w	801f036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f184:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f188:	46ca      	mov	sl, r9
 801f18a:	f1b8 0f00 	cmp.w	r8, #0
 801f18e:	dc67      	bgt.n	801f260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f190:	9b06      	ldr	r3, [sp, #24]
 801f192:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f196:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f19a:	9b08      	ldr	r3, [sp, #32]
 801f19c:	2b00      	cmp	r3, #0
 801f19e:	f340 80d7 	ble.w	801f350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f1a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f1a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f1a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f1ac:	eeb0 6a62 	vmov.f32	s12, s5
 801f1b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f1b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f1b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f1bc:	ee16 4a10 	vmov	r4, s12
 801f1c0:	eeb0 6a43 	vmov.f32	s12, s6
 801f1c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f1c8:	ee16 6a10 	vmov	r6, s12
 801f1cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1e4:	ee12 2a90 	vmov	r2, s5
 801f1e8:	eef0 2a47 	vmov.f32	s5, s14
 801f1ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1f0:	ee13 2a10 	vmov	r2, s6
 801f1f4:	931f      	str	r3, [sp, #124]	; 0x7c
 801f1f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f1f8:	eeb0 3a67 	vmov.f32	s6, s15
 801f1fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f200:	9320      	str	r3, [sp, #128]	; 0x80
 801f202:	9b08      	ldr	r3, [sp, #32]
 801f204:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f206:	3b01      	subs	r3, #1
 801f208:	9308      	str	r3, [sp, #32]
 801f20a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f20c:	bf08      	it	eq
 801f20e:	4613      	moveq	r3, r2
 801f210:	9306      	str	r3, [sp, #24]
 801f212:	e6e4      	b.n	801efde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f214:	2900      	cmp	r1, #0
 801f216:	f43f af4e 	beq.w	801f0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f21a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f21e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f222:	9309      	str	r3, [sp, #36]	; 0x24
 801f224:	e747      	b.n	801f0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f226:	f112 0a01 	adds.w	sl, r2, #1
 801f22a:	d481      	bmi.n	801f130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f22c:	4553      	cmp	r3, sl
 801f22e:	f6ff af7f 	blt.w	801f130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f232:	f11c 0a01 	adds.w	sl, ip, #1
 801f236:	f53f af7b 	bmi.w	801f130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f23a:	45d6      	cmp	lr, sl
 801f23c:	f6ff af78 	blt.w	801f130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f240:	b21b      	sxth	r3, r3
 801f242:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f246:	fa0f f28e 	sxth.w	r2, lr
 801f24a:	9300      	str	r3, [sp, #0]
 801f24c:	463b      	mov	r3, r7
 801f24e:	9201      	str	r2, [sp, #4]
 801f250:	9a07      	ldr	r2, [sp, #28]
 801f252:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f256:	4641      	mov	r1, r8
 801f258:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f25a:	f7ff fe21 	bl	801eea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f25e:	e767      	b.n	801f130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f260:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f262:	1422      	asrs	r2, r4, #16
 801f264:	1431      	asrs	r1, r6, #16
 801f266:	9d07      	ldr	r5, [sp, #28]
 801f268:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f26c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f270:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f274:	fb03 2101 	mla	r1, r3, r1, r2
 801f278:	9a07      	ldr	r2, [sp, #28]
 801f27a:	440a      	add	r2, r1
 801f27c:	5c69      	ldrb	r1, [r5, r1]
 801f27e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f282:	f1be 0f00 	cmp.w	lr, #0
 801f286:	d05c      	beq.n	801f342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f288:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f28c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f290:	950d      	str	r5, [sp, #52]	; 0x34
 801f292:	b150      	cbz	r0, 801f2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f294:	eb02 0c03 	add.w	ip, r2, r3
 801f298:	5cd3      	ldrb	r3, [r2, r3]
 801f29a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f29e:	930a      	str	r3, [sp, #40]	; 0x28
 801f2a0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f2a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f2a8:	930e      	str	r3, [sp, #56]	; 0x38
 801f2aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f2ac:	fb1e f200 	smulbb	r2, lr, r0
 801f2b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f2b2:	f108 38ff 	add.w	r8, r8, #4294967295
 801f2b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f2ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f2be:	10d2      	asrs	r2, r2, #3
 801f2c0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f2c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f2c8:	ea4c 0c03 	orr.w	ip, ip, r3
 801f2cc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f2d0:	9311      	str	r3, [sp, #68]	; 0x44
 801f2d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f2d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f2d6:	041b      	lsls	r3, r3, #16
 801f2d8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f2dc:	ea43 030b 	orr.w	r3, r3, fp
 801f2e0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f2e4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f2e8:	4353      	muls	r3, r2
 801f2ea:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f2ee:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f2f2:	ea43 0b01 	orr.w	fp, r3, r1
 801f2f6:	f1c0 0110 	rsb	r1, r0, #16
 801f2fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f2fc:	eba1 0e0e 	sub.w	lr, r1, lr
 801f300:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f304:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f308:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f30c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f310:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f314:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f318:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f31c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f320:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f324:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f328:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f32c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f330:	ea43 0c0c 	orr.w	ip, r3, ip
 801f334:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f336:	441c      	add	r4, r3
 801f338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f33a:	f82a cb02 	strh.w	ip, [sl], #2
 801f33e:	441e      	add	r6, r3
 801f340:	e723      	b.n	801f18a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f342:	2800      	cmp	r0, #0
 801f344:	d0b1      	beq.n	801f2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f346:	5cd3      	ldrb	r3, [r2, r3]
 801f348:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f34c:	930a      	str	r3, [sp, #40]	; 0x28
 801f34e:	e7ac      	b.n	801f2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f350:	b013      	add	sp, #76	; 0x4c
 801f352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f356:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f35a:	880d      	ldrh	r5, [r1, #0]
 801f35c:	b087      	sub	sp, #28
 801f35e:	10ef      	asrs	r7, r5, #3
 801f360:	9103      	str	r1, [sp, #12]
 801f362:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f366:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f36a:	00ed      	lsls	r5, r5, #3
 801f36c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f370:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f374:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f378:	b2ed      	uxtb	r5, r5
 801f37a:	9701      	str	r7, [sp, #4]
 801f37c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f380:	9502      	str	r5, [sp, #8]
 801f382:	9d01      	ldr	r5, [sp, #4]
 801f384:	9902      	ldr	r1, [sp, #8]
 801f386:	022d      	lsls	r5, r5, #8
 801f388:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f38c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f390:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f394:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f398:	430d      	orrs	r5, r1
 801f39a:	fb06 0709 	mla	r7, r6, r9, r0
 801f39e:	2e00      	cmp	r6, #0
 801f3a0:	9505      	str	r5, [sp, #20]
 801f3a2:	eb02 0c07 	add.w	ip, r2, r7
 801f3a6:	f2c0 80b6 	blt.w	801f516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f3aa:	45b3      	cmp	fp, r6
 801f3ac:	f340 80b3 	ble.w	801f516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f3b0:	2800      	cmp	r0, #0
 801f3b2:	f2c0 80ae 	blt.w	801f512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f3b6:	4581      	cmp	r9, r0
 801f3b8:	f340 80ab 	ble.w	801f512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f3bc:	5dd7      	ldrb	r7, [r2, r7]
 801f3be:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f3c2:	441f      	add	r7, r3
 801f3c4:	1c42      	adds	r2, r0, #1
 801f3c6:	f100 80a9 	bmi.w	801f51c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f3ca:	4591      	cmp	r9, r2
 801f3cc:	f340 80a6 	ble.w	801f51c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f3d0:	2c00      	cmp	r4, #0
 801f3d2:	f000 80a3 	beq.w	801f51c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f3d6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f3da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f3de:	441d      	add	r5, r3
 801f3e0:	3601      	adds	r6, #1
 801f3e2:	f100 809f 	bmi.w	801f524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f3e6:	45b3      	cmp	fp, r6
 801f3e8:	f340 809c 	ble.w	801f524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f3ec:	f1be 0f00 	cmp.w	lr, #0
 801f3f0:	f000 8098 	beq.w	801f524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f3f4:	2800      	cmp	r0, #0
 801f3f6:	f2c0 8093 	blt.w	801f520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f3fa:	4581      	cmp	r9, r0
 801f3fc:	f340 8090 	ble.w	801f520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f400:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f404:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f408:	441e      	add	r6, r3
 801f40a:	3001      	adds	r0, #1
 801f40c:	f100 808d 	bmi.w	801f52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f410:	4581      	cmp	r9, r0
 801f412:	f340 808a 	ble.w	801f52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f416:	2c00      	cmp	r4, #0
 801f418:	f000 8087 	beq.w	801f52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f41c:	44e1      	add	r9, ip
 801f41e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f422:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f426:	4413      	add	r3, r2
 801f428:	b2a4      	uxth	r4, r4
 801f42a:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f42e:	fa1f fe8e 	uxth.w	lr, lr
 801f432:	9901      	ldr	r1, [sp, #4]
 801f434:	fb04 fb0e 	mul.w	fp, r4, lr
 801f438:	0124      	lsls	r4, r4, #4
 801f43a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f43e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f442:	eba4 040b 	sub.w	r4, r4, fp
 801f446:	fa1f f08e 	uxth.w	r0, lr
 801f44a:	b2a2      	uxth	r2, r4
 801f44c:	78ac      	ldrb	r4, [r5, #2]
 801f44e:	eba9 0900 	sub.w	r9, r9, r0
 801f452:	fa1f fe88 	uxth.w	lr, r8
 801f456:	4354      	muls	r4, r2
 801f458:	ea6f 0808 	mvn.w	r8, r8
 801f45c:	fa1f f989 	uxth.w	r9, r9
 801f460:	fa5f f888 	uxtb.w	r8, r8
 801f464:	fb09 440c 	mla	r4, r9, ip, r4
 801f468:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f46c:	fb1a fa08 	smulbb	sl, sl, r8
 801f470:	fb00 440c 	mla	r4, r0, ip, r4
 801f474:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f478:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f47c:	787c      	ldrb	r4, [r7, #1]
 801f47e:	783f      	ldrb	r7, [r7, #0]
 801f480:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f484:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f488:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f48c:	782d      	ldrb	r5, [r5, #0]
 801f48e:	fb02 fa0a 	mul.w	sl, r2, sl
 801f492:	fa1f fc8c 	uxth.w	ip, ip
 801f496:	436a      	muls	r2, r5
 801f498:	7835      	ldrb	r5, [r6, #0]
 801f49a:	fb09 aa04 	mla	sl, r9, r4, sl
 801f49e:	7874      	ldrb	r4, [r6, #1]
 801f4a0:	fb09 2207 	mla	r2, r9, r7, r2
 801f4a4:	fb00 aa04 	mla	sl, r0, r4, sl
 801f4a8:	785c      	ldrb	r4, [r3, #1]
 801f4aa:	fb00 2005 	mla	r0, r0, r5, r2
 801f4ae:	781b      	ldrb	r3, [r3, #0]
 801f4b0:	fb0b a404 	mla	r4, fp, r4, sl
 801f4b4:	fb11 fa08 	smulbb	sl, r1, r8
 801f4b8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f4bc:	9b02      	ldr	r3, [sp, #8]
 801f4be:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f4c2:	fb13 f808 	smulbb	r8, r3, r8
 801f4c6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f4ca:	fb04 a40e 	mla	r4, r4, lr, sl
 801f4ce:	f10c 0301 	add.w	r3, ip, #1
 801f4d2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f4d6:	b2a4      	uxth	r4, r4
 801f4d8:	fa1f fe8e 	uxth.w	lr, lr
 801f4dc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f4e0:	f104 0a01 	add.w	sl, r4, #1
 801f4e4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f4e8:	f10e 0c01 	add.w	ip, lr, #1
 801f4ec:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f4f0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f4f4:	0964      	lsrs	r4, r4, #5
 801f4f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f4fa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f4fe:	ea4c 0c03 	orr.w	ip, ip, r3
 801f502:	9b03      	ldr	r3, [sp, #12]
 801f504:	ea4c 0c04 	orr.w	ip, ip, r4
 801f508:	f8a3 c000 	strh.w	ip, [r3]
 801f50c:	b007      	add	sp, #28
 801f50e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f512:	af05      	add	r7, sp, #20
 801f514:	e756      	b.n	801f3c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f516:	ad05      	add	r5, sp, #20
 801f518:	462f      	mov	r7, r5
 801f51a:	e761      	b.n	801f3e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f51c:	ad05      	add	r5, sp, #20
 801f51e:	e75f      	b.n	801f3e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f520:	ae05      	add	r6, sp, #20
 801f522:	e772      	b.n	801f40a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f524:	ab05      	add	r3, sp, #20
 801f526:	461e      	mov	r6, r3
 801f528:	e77e      	b.n	801f428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f52a:	ab05      	add	r3, sp, #20
 801f52c:	e77c      	b.n	801f428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f52e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f52e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f532:	b095      	sub	sp, #84	; 0x54
 801f534:	9212      	str	r2, [sp, #72]	; 0x48
 801f536:	9309      	str	r3, [sp, #36]	; 0x24
 801f538:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f53a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f53e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f540:	930f      	str	r3, [sp, #60]	; 0x3c
 801f542:	6850      	ldr	r0, [r2, #4]
 801f544:	910e      	str	r1, [sp, #56]	; 0x38
 801f546:	6812      	ldr	r2, [r2, #0]
 801f548:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f54c:	fb00 1303 	mla	r3, r0, r3, r1
 801f550:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f554:	930a      	str	r3, [sp, #40]	; 0x28
 801f556:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f558:	681b      	ldr	r3, [r3, #0]
 801f55a:	930d      	str	r3, [sp, #52]	; 0x34
 801f55c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f55e:	685c      	ldr	r4, [r3, #4]
 801f560:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f562:	3404      	adds	r4, #4
 801f564:	43db      	mvns	r3, r3
 801f566:	b2db      	uxtb	r3, r3
 801f568:	930b      	str	r3, [sp, #44]	; 0x2c
 801f56a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f56c:	2b00      	cmp	r3, #0
 801f56e:	dc03      	bgt.n	801f578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f570:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f572:	2b00      	cmp	r3, #0
 801f574:	f340 8255 	ble.w	801fa22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f578:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f57a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f57e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f582:	1e48      	subs	r0, r1, #1
 801f584:	1e55      	subs	r5, r2, #1
 801f586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f588:	2b00      	cmp	r3, #0
 801f58a:	f340 80f9 	ble.w	801f780 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f58e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f590:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f592:	1436      	asrs	r6, r6, #16
 801f594:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f598:	d406      	bmi.n	801f5a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f59a:	4286      	cmp	r6, r0
 801f59c:	da04      	bge.n	801f5a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f59e:	2b00      	cmp	r3, #0
 801f5a0:	db02      	blt.n	801f5a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f5a2:	42ab      	cmp	r3, r5
 801f5a4:	f2c0 80ed 	blt.w	801f782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f5a8:	3601      	adds	r6, #1
 801f5aa:	f100 80da 	bmi.w	801f762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f5ae:	42b1      	cmp	r1, r6
 801f5b0:	f2c0 80d7 	blt.w	801f762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f5b4:	3301      	adds	r3, #1
 801f5b6:	f100 80d4 	bmi.w	801f762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f5ba:	429a      	cmp	r2, r3
 801f5bc:	f2c0 80d1 	blt.w	801f762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f5c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f5c2:	9311      	str	r3, [sp, #68]	; 0x44
 801f5c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f5c6:	930c      	str	r3, [sp, #48]	; 0x30
 801f5c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f5ca:	2b00      	cmp	r3, #0
 801f5cc:	f340 80fa 	ble.w	801f7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f5d0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f5d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5d4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f5d6:	68c6      	ldr	r6, [r0, #12]
 801f5d8:	141d      	asrs	r5, r3, #16
 801f5da:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f5dc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f5e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f5e2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f5e4:	1400      	asrs	r0, r0, #16
 801f5e6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f5ea:	6892      	ldr	r2, [r2, #8]
 801f5ec:	f100 813e 	bmi.w	801f86c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f5f0:	1e57      	subs	r7, r2, #1
 801f5f2:	42b8      	cmp	r0, r7
 801f5f4:	f280 813a 	bge.w	801f86c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f5f8:	2d00      	cmp	r5, #0
 801f5fa:	f2c0 8137 	blt.w	801f86c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f5fe:	1e77      	subs	r7, r6, #1
 801f600:	42bd      	cmp	r5, r7
 801f602:	f280 8133 	bge.w	801f86c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f606:	b212      	sxth	r2, r2
 801f608:	fb05 0002 	mla	r0, r5, r2, r0
 801f60c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f60e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f612:	182e      	adds	r6, r5, r0
 801f614:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f618:	eb04 050a 	add.w	r5, r4, sl
 801f61c:	2b00      	cmp	r3, #0
 801f61e:	f000 8117 	beq.w	801f850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f622:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f626:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f62a:	44a4      	add	ip, r4
 801f62c:	2900      	cmp	r1, #0
 801f62e:	f000 8117 	beq.w	801f860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f632:	18b0      	adds	r0, r6, r2
 801f634:	5cb2      	ldrb	r2, [r6, r2]
 801f636:	7840      	ldrb	r0, [r0, #1]
 801f638:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f63c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f640:	4422      	add	r2, r4
 801f642:	4420      	add	r0, r4
 801f644:	b29b      	uxth	r3, r3
 801f646:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f64a:	b289      	uxth	r1, r1
 801f64c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f650:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f652:	fb03 f901 	mul.w	r9, r3, r1
 801f656:	011b      	lsls	r3, r3, #4
 801f658:	f8b6 e000 	ldrh.w	lr, [r6]
 801f65c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f660:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f664:	eba3 0309 	sub.w	r3, r3, r9
 801f668:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f66c:	b289      	uxth	r1, r1
 801f66e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f672:	b29b      	uxth	r3, r3
 801f674:	eba8 0801 	sub.w	r8, r8, r1
 801f678:	435f      	muls	r7, r3
 801f67a:	fa1f f888 	uxth.w	r8, r8
 801f67e:	9310      	str	r3, [sp, #64]	; 0x40
 801f680:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f682:	fb08 770b 	mla	r7, r8, fp, r7
 801f686:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f68a:	fb01 770b 	mla	r7, r1, fp, r7
 801f68e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f692:	fb09 770b 	mla	r7, r9, fp, r7
 801f696:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f69a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f69e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f6a2:	fb1b fb03 	smulbb	fp, fp, r3
 801f6a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6a8:	fb07 b706 	mla	r7, r7, r6, fp
 801f6ac:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f6b0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f6b4:	f89c c000 	ldrb.w	ip, [ip]
 801f6b8:	b2bf      	uxth	r7, r7
 801f6ba:	435d      	muls	r5, r3
 801f6bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6be:	fb08 550b 	mla	r5, r8, fp, r5
 801f6c2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f6c6:	fb01 550b 	mla	r5, r1, fp, r5
 801f6ca:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f6ce:	fb09 550b 	mla	r5, r9, fp, r5
 801f6d2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f6d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f6da:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f6de:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f6e2:	fa5f fe8e 	uxtb.w	lr, lr
 801f6e6:	fb1b fb03 	smulbb	fp, fp, r3
 801f6ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6ec:	fb03 f30c 	mul.w	r3, r3, ip
 801f6f0:	f892 c000 	ldrb.w	ip, [r2]
 801f6f4:	fb05 b506 	mla	r5, r5, r6, fp
 801f6f8:	fb08 330a 	mla	r3, r8, sl, r3
 801f6fc:	b2ad      	uxth	r5, r5
 801f6fe:	fb01 330c 	mla	r3, r1, ip, r3
 801f702:	f890 c000 	ldrb.w	ip, [r0]
 801f706:	f105 0b01 	add.w	fp, r5, #1
 801f70a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f70e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f710:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f714:	fb1e fe03 	smulbb	lr, lr, r3
 801f718:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f71c:	1c7b      	adds	r3, r7, #1
 801f71e:	096d      	lsrs	r5, r5, #5
 801f720:	fb0c e606 	mla	r6, ip, r6, lr
 801f724:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f728:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f72c:	b2b6      	uxth	r6, r6
 801f72e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f732:	1c77      	adds	r7, r6, #1
 801f734:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f738:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f73c:	431f      	orrs	r7, r3
 801f73e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f740:	433d      	orrs	r5, r7
 801f742:	801d      	strh	r5, [r3, #0]
 801f744:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f746:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f748:	3302      	adds	r3, #2
 801f74a:	930c      	str	r3, [sp, #48]	; 0x30
 801f74c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f74e:	4413      	add	r3, r2
 801f750:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f752:	931f      	str	r3, [sp, #124]	; 0x7c
 801f754:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f756:	4413      	add	r3, r2
 801f758:	9320      	str	r3, [sp, #128]	; 0x80
 801f75a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f75c:	3b01      	subs	r3, #1
 801f75e:	9311      	str	r3, [sp, #68]	; 0x44
 801f760:	e732      	b.n	801f5c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f762:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f764:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f766:	4433      	add	r3, r6
 801f768:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f76a:	931f      	str	r3, [sp, #124]	; 0x7c
 801f76c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f76e:	4433      	add	r3, r6
 801f770:	9320      	str	r3, [sp, #128]	; 0x80
 801f772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f774:	3b01      	subs	r3, #1
 801f776:	9309      	str	r3, [sp, #36]	; 0x24
 801f778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f77a:	3302      	adds	r3, #2
 801f77c:	930a      	str	r3, [sp, #40]	; 0x28
 801f77e:	e702      	b.n	801f586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f780:	d027      	beq.n	801f7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f782:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f784:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f786:	3b01      	subs	r3, #1
 801f788:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f78a:	fb00 5003 	mla	r0, r0, r3, r5
 801f78e:	1400      	asrs	r0, r0, #16
 801f790:	f53f af16 	bmi.w	801f5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f794:	3901      	subs	r1, #1
 801f796:	4288      	cmp	r0, r1
 801f798:	f6bf af12 	bge.w	801f5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f79c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f79e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f7a0:	fb01 0303 	mla	r3, r1, r3, r0
 801f7a4:	141b      	asrs	r3, r3, #16
 801f7a6:	f53f af0b 	bmi.w	801f5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f7aa:	3a01      	subs	r2, #1
 801f7ac:	4293      	cmp	r3, r2
 801f7ae:	f6bf af07 	bge.w	801f5c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f7b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7b4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f7b8:	9311      	str	r3, [sp, #68]	; 0x44
 801f7ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7bc:	930c      	str	r3, [sp, #48]	; 0x30
 801f7be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f7c0:	2b00      	cmp	r3, #0
 801f7c2:	dc70      	bgt.n	801f8a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f7c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f7c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f7cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f7d0:	930a      	str	r3, [sp, #40]	; 0x28
 801f7d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f7d4:	2b00      	cmp	r3, #0
 801f7d6:	f340 8124 	ble.w	801fa22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f7da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f7de:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f7e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f7e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f7e8:	eef0 6a62 	vmov.f32	s13, s5
 801f7ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f7f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f7f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f7f8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f7fc:	eef0 6a43 	vmov.f32	s13, s6
 801f800:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f804:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f808:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f80c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f810:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f814:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f818:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f81c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f820:	ee12 2a90 	vmov	r2, s5
 801f824:	eef0 2a47 	vmov.f32	s5, s14
 801f828:	fb92 f3f3 	sdiv	r3, r2, r3
 801f82c:	ee13 2a10 	vmov	r2, s6
 801f830:	9321      	str	r3, [sp, #132]	; 0x84
 801f832:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f834:	eeb0 3a67 	vmov.f32	s6, s15
 801f838:	fb92 f3f3 	sdiv	r3, r2, r3
 801f83c:	9322      	str	r3, [sp, #136]	; 0x88
 801f83e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f840:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f842:	3b01      	subs	r3, #1
 801f844:	930e      	str	r3, [sp, #56]	; 0x38
 801f846:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f848:	bf08      	it	eq
 801f84a:	4613      	moveq	r3, r2
 801f84c:	9309      	str	r3, [sp, #36]	; 0x24
 801f84e:	e68c      	b.n	801f56a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f850:	b149      	cbz	r1, 801f866 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f852:	5cb2      	ldrb	r2, [r6, r2]
 801f854:	4628      	mov	r0, r5
 801f856:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f85a:	4422      	add	r2, r4
 801f85c:	46ac      	mov	ip, r5
 801f85e:	e6f1      	b.n	801f644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f860:	4628      	mov	r0, r5
 801f862:	462a      	mov	r2, r5
 801f864:	e6ee      	b.n	801f644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f866:	4628      	mov	r0, r5
 801f868:	462a      	mov	r2, r5
 801f86a:	e7f7      	b.n	801f85c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f86c:	1c47      	adds	r7, r0, #1
 801f86e:	f53f af69 	bmi.w	801f744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f872:	42ba      	cmp	r2, r7
 801f874:	f6ff af66 	blt.w	801f744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f878:	1c6f      	adds	r7, r5, #1
 801f87a:	f53f af63 	bmi.w	801f744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f87e:	42be      	cmp	r6, r7
 801f880:	f6ff af60 	blt.w	801f744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f884:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f886:	b236      	sxth	r6, r6
 801f888:	b212      	sxth	r2, r2
 801f88a:	9002      	str	r0, [sp, #8]
 801f88c:	9601      	str	r6, [sp, #4]
 801f88e:	9200      	str	r2, [sp, #0]
 801f890:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f892:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f896:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f89a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f89e:	4623      	mov	r3, r4
 801f8a0:	f7ff fd59 	bl	801f356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f8a4:	e74e      	b.n	801f744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f8a6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f8a8:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f8aa:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f8ae:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f8b0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f8b2:	1400      	asrs	r0, r0, #16
 801f8b4:	142d      	asrs	r5, r5, #16
 801f8b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8b8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f8bc:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f8c0:	fb02 5000 	mla	r0, r2, r0, r5
 801f8c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f8c6:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f8ca:	182e      	adds	r6, r5, r0
 801f8cc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f8d0:	eb04 0509 	add.w	r5, r4, r9
 801f8d4:	2b00      	cmp	r3, #0
 801f8d6:	f000 8096 	beq.w	801fa06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f8da:	7877      	ldrb	r7, [r6, #1]
 801f8dc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f8e0:	4427      	add	r7, r4
 801f8e2:	2900      	cmp	r1, #0
 801f8e4:	f000 8097 	beq.w	801fa16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f8e8:	18b0      	adds	r0, r6, r2
 801f8ea:	5cb2      	ldrb	r2, [r6, r2]
 801f8ec:	7840      	ldrb	r0, [r0, #1]
 801f8ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f8f6:	4422      	add	r2, r4
 801f8f8:	4420      	add	r0, r4
 801f8fa:	b29b      	uxth	r3, r3
 801f8fc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f8fe:	b289      	uxth	r1, r1
 801f900:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f904:	f8b6 c000 	ldrh.w	ip, [r6]
 801f908:	fb03 f801 	mul.w	r8, r3, r1
 801f90c:	011b      	lsls	r3, r3, #4
 801f90e:	78be      	ldrb	r6, [r7, #2]
 801f910:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f914:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f918:	eba3 0308 	sub.w	r3, r3, r8
 801f91c:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f920:	b289      	uxth	r1, r1
 801f922:	b29b      	uxth	r3, r3
 801f924:	ebae 0e01 	sub.w	lr, lr, r1
 801f928:	435e      	muls	r6, r3
 801f92a:	fa1f fe8e 	uxth.w	lr, lr
 801f92e:	9310      	str	r3, [sp, #64]	; 0x40
 801f930:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f932:	fb0e 660b 	mla	r6, lr, fp, r6
 801f936:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f93a:	fb01 660b 	mla	r6, r1, fp, r6
 801f93e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f942:	fb08 660b 	mla	r6, r8, fp, r6
 801f946:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f94a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f94e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f952:	fb1b fb03 	smulbb	fp, fp, r3
 801f956:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f958:	fb06 b60a 	mla	r6, r6, sl, fp
 801f95c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f960:	787d      	ldrb	r5, [r7, #1]
 801f962:	783f      	ldrb	r7, [r7, #0]
 801f964:	b2b6      	uxth	r6, r6
 801f966:	435d      	muls	r5, r3
 801f968:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f96a:	fb0e 550b 	mla	r5, lr, fp, r5
 801f96e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f972:	fb01 550b 	mla	r5, r1, fp, r5
 801f976:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f97a:	fb08 550b 	mla	r5, r8, fp, r5
 801f97e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f982:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f986:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f98a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f98e:	fa5f fc8c 	uxtb.w	ip, ip
 801f992:	fb1b fb03 	smulbb	fp, fp, r3
 801f996:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f998:	437b      	muls	r3, r7
 801f99a:	7817      	ldrb	r7, [r2, #0]
 801f99c:	fb05 b50a 	mla	r5, r5, sl, fp
 801f9a0:	fb0e 3309 	mla	r3, lr, r9, r3
 801f9a4:	b2ad      	uxth	r5, r5
 801f9a6:	fb01 3307 	mla	r3, r1, r7, r3
 801f9aa:	7807      	ldrb	r7, [r0, #0]
 801f9ac:	f105 0b01 	add.w	fp, r5, #1
 801f9b0:	fb08 3707 	mla	r7, r8, r7, r3
 801f9b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f9b6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f9ba:	fb1c fc03 	smulbb	ip, ip, r3
 801f9be:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f9c2:	1c73      	adds	r3, r6, #1
 801f9c4:	096d      	lsrs	r5, r5, #5
 801f9c6:	fb07 c70a 	mla	r7, r7, sl, ip
 801f9ca:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f9ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f9d2:	b2bf      	uxth	r7, r7
 801f9d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9d6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f9da:	1c7a      	adds	r2, r7, #1
 801f9dc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f9e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f9e4:	4316      	orrs	r6, r2
 801f9e6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f9e8:	432e      	orrs	r6, r5
 801f9ea:	f823 6b02 	strh.w	r6, [r3], #2
 801f9ee:	930c      	str	r3, [sp, #48]	; 0x30
 801f9f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f9f2:	4413      	add	r3, r2
 801f9f4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f9f6:	931f      	str	r3, [sp, #124]	; 0x7c
 801f9f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9fa:	4413      	add	r3, r2
 801f9fc:	9320      	str	r3, [sp, #128]	; 0x80
 801f9fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fa00:	3b01      	subs	r3, #1
 801fa02:	9311      	str	r3, [sp, #68]	; 0x44
 801fa04:	e6db      	b.n	801f7be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801fa06:	b149      	cbz	r1, 801fa1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fa08:	5cb2      	ldrb	r2, [r6, r2]
 801fa0a:	4628      	mov	r0, r5
 801fa0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa10:	4422      	add	r2, r4
 801fa12:	462f      	mov	r7, r5
 801fa14:	e771      	b.n	801f8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fa16:	4628      	mov	r0, r5
 801fa18:	462a      	mov	r2, r5
 801fa1a:	e76e      	b.n	801f8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fa1c:	4628      	mov	r0, r5
 801fa1e:	462a      	mov	r2, r5
 801fa20:	e7f7      	b.n	801fa12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fa22:	b015      	add	sp, #84	; 0x54
 801fa24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fa28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fa28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa2c:	880f      	ldrh	r7, [r1, #0]
 801fa2e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801fa32:	023c      	lsls	r4, r7, #8
 801fa34:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fa38:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fa3c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801fa40:	017c      	lsls	r4, r7, #5
 801fa42:	00ff      	lsls	r7, r7, #3
 801fa44:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fa48:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801fa4c:	b2ff      	uxtb	r7, r7
 801fa4e:	ea4b 0404 	orr.w	r4, fp, r4
 801fa52:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801fa56:	4327      	orrs	r7, r4
 801fa58:	fb05 ca0e 	mla	sl, r5, lr, ip
 801fa5c:	2d00      	cmp	r5, #0
 801fa5e:	9701      	str	r7, [sp, #4]
 801fa60:	eb02 080a 	add.w	r8, r2, sl
 801fa64:	db7e      	blt.n	801fb64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fa66:	45a9      	cmp	r9, r5
 801fa68:	dd7c      	ble.n	801fb64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fa6a:	f1bc 0f00 	cmp.w	ip, #0
 801fa6e:	db77      	blt.n	801fb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fa70:	45e6      	cmp	lr, ip
 801fa72:	dd75      	ble.n	801fb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fa74:	f812 700a 	ldrb.w	r7, [r2, sl]
 801fa78:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fa7c:	441f      	add	r7, r3
 801fa7e:	f11c 0201 	adds.w	r2, ip, #1
 801fa82:	d472      	bmi.n	801fb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fa84:	4596      	cmp	lr, r2
 801fa86:	dd70      	ble.n	801fb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fa88:	2800      	cmp	r0, #0
 801fa8a:	d06e      	beq.n	801fb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fa8c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801fa90:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fa94:	441c      	add	r4, r3
 801fa96:	3501      	adds	r5, #1
 801fa98:	d46b      	bmi.n	801fb72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fa9a:	45a9      	cmp	r9, r5
 801fa9c:	dd69      	ble.n	801fb72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fa9e:	2e00      	cmp	r6, #0
 801faa0:	d067      	beq.n	801fb72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801faa2:	f1bc 0f00 	cmp.w	ip, #0
 801faa6:	db62      	blt.n	801fb6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801faa8:	45e6      	cmp	lr, ip
 801faaa:	dd60      	ble.n	801fb6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801faac:	f818 500e 	ldrb.w	r5, [r8, lr]
 801fab0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fab4:	441d      	add	r5, r3
 801fab6:	f11c 0201 	adds.w	r2, ip, #1
 801faba:	d45d      	bmi.n	801fb78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fabc:	4596      	cmp	lr, r2
 801fabe:	dd5b      	ble.n	801fb78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fac0:	2800      	cmp	r0, #0
 801fac2:	d059      	beq.n	801fb78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fac4:	44c6      	add	lr, r8
 801fac6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801faca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801face:	4413      	add	r3, r2
 801fad0:	b280      	uxth	r0, r0
 801fad2:	f897 e002 	ldrb.w	lr, [r7, #2]
 801fad6:	b2b2      	uxth	r2, r6
 801fad8:	f897 9000 	ldrb.w	r9, [r7]
 801fadc:	787f      	ldrb	r7, [r7, #1]
 801fade:	fb00 f602 	mul.w	r6, r0, r2
 801fae2:	0100      	lsls	r0, r0, #4
 801fae4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801fae8:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801faec:	1b80      	subs	r0, r0, r6
 801faee:	fa1f fc82 	uxth.w	ip, r2
 801faf2:	b282      	uxth	r2, r0
 801faf4:	78a0      	ldrb	r0, [r4, #2]
 801faf6:	eba8 080c 	sub.w	r8, r8, ip
 801fafa:	4350      	muls	r0, r2
 801fafc:	fa1f f888 	uxth.w	r8, r8
 801fb00:	fb08 0e0e 	mla	lr, r8, lr, r0
 801fb04:	78a8      	ldrb	r0, [r5, #2]
 801fb06:	fb0c e000 	mla	r0, ip, r0, lr
 801fb0a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801fb0e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801fb12:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801fb16:	f894 e000 	ldrb.w	lr, [r4]
 801fb1a:	fb02 fe0e 	mul.w	lr, r2, lr
 801fb1e:	fb08 e909 	mla	r9, r8, r9, lr
 801fb22:	f895 e000 	ldrb.w	lr, [r5]
 801fb26:	fb0c 990e 	mla	r9, ip, lr, r9
 801fb2a:	f893 e000 	ldrb.w	lr, [r3]
 801fb2e:	785b      	ldrb	r3, [r3, #1]
 801fb30:	fb06 9e0e 	mla	lr, r6, lr, r9
 801fb34:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fb38:	ea4e 0e00 	orr.w	lr, lr, r0
 801fb3c:	7860      	ldrb	r0, [r4, #1]
 801fb3e:	4350      	muls	r0, r2
 801fb40:	786a      	ldrb	r2, [r5, #1]
 801fb42:	fb08 0007 	mla	r0, r8, r7, r0
 801fb46:	fb0c 0202 	mla	r2, ip, r2, r0
 801fb4a:	fb06 2303 	mla	r3, r6, r3, r2
 801fb4e:	095b      	lsrs	r3, r3, #5
 801fb50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb54:	ea4e 0303 	orr.w	r3, lr, r3
 801fb58:	800b      	strh	r3, [r1, #0]
 801fb5a:	b003      	add	sp, #12
 801fb5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb60:	af01      	add	r7, sp, #4
 801fb62:	e78c      	b.n	801fa7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fb64:	ac01      	add	r4, sp, #4
 801fb66:	4627      	mov	r7, r4
 801fb68:	e795      	b.n	801fa96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fb6a:	ac01      	add	r4, sp, #4
 801fb6c:	e793      	b.n	801fa96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fb6e:	ad01      	add	r5, sp, #4
 801fb70:	e7a1      	b.n	801fab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fb72:	ab01      	add	r3, sp, #4
 801fb74:	461d      	mov	r5, r3
 801fb76:	e7ab      	b.n	801fad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fb78:	ab01      	add	r3, sp, #4
 801fb7a:	e7a9      	b.n	801fad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fb7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb80:	b08f      	sub	sp, #60	; 0x3c
 801fb82:	920c      	str	r2, [sp, #48]	; 0x30
 801fb84:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fb86:	900d      	str	r0, [sp, #52]	; 0x34
 801fb88:	910a      	str	r1, [sp, #40]	; 0x28
 801fb8a:	6850      	ldr	r0, [r2, #4]
 801fb8c:	9306      	str	r3, [sp, #24]
 801fb8e:	6812      	ldr	r2, [r2, #0]
 801fb90:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fb94:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fb98:	fb00 1303 	mla	r3, r0, r3, r1
 801fb9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fba0:	9307      	str	r3, [sp, #28]
 801fba2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fba4:	681b      	ldr	r3, [r3, #0]
 801fba6:	9308      	str	r3, [sp, #32]
 801fba8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fbaa:	685c      	ldr	r4, [r3, #4]
 801fbac:	3404      	adds	r4, #4
 801fbae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fbb0:	2b00      	cmp	r3, #0
 801fbb2:	dc03      	bgt.n	801fbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fbb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fbb6:	2b00      	cmp	r3, #0
 801fbb8:	f340 81d5 	ble.w	801ff66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801fbbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fbbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fbc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fbc6:	1e48      	subs	r0, r1, #1
 801fbc8:	1e56      	subs	r6, r2, #1
 801fbca:	9b06      	ldr	r3, [sp, #24]
 801fbcc:	2b00      	cmp	r3, #0
 801fbce:	f340 80b6 	ble.w	801fd3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801fbd2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fbd6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fbda:	d406      	bmi.n	801fbea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fbdc:	4287      	cmp	r7, r0
 801fbde:	da04      	bge.n	801fbea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fbe0:	2b00      	cmp	r3, #0
 801fbe2:	db02      	blt.n	801fbea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fbe4:	42b3      	cmp	r3, r6
 801fbe6:	f2c0 80ab 	blt.w	801fd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fbea:	3701      	adds	r7, #1
 801fbec:	f100 809c 	bmi.w	801fd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fbf0:	42b9      	cmp	r1, r7
 801fbf2:	f2c0 8099 	blt.w	801fd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fbf6:	3301      	adds	r3, #1
 801fbf8:	f100 8096 	bmi.w	801fd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fbfc:	429a      	cmp	r2, r3
 801fbfe:	f2c0 8093 	blt.w	801fd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fc02:	9b06      	ldr	r3, [sp, #24]
 801fc04:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc06:	9b07      	ldr	r3, [sp, #28]
 801fc08:	9309      	str	r3, [sp, #36]	; 0x24
 801fc0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fc0c:	2b00      	cmp	r3, #0
 801fc0e:	f340 80b4 	ble.w	801fd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fc12:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fc14:	142e      	asrs	r6, r5, #16
 801fc16:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fc18:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fc1c:	68c7      	ldr	r7, [r0, #12]
 801fc1e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fc22:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fc26:	6892      	ldr	r2, [r2, #8]
 801fc28:	f100 80fb 	bmi.w	801fe22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801fc2c:	f102 3cff 	add.w	ip, r2, #4294967295
 801fc30:	4560      	cmp	r0, ip
 801fc32:	f280 80f6 	bge.w	801fe22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801fc36:	2e00      	cmp	r6, #0
 801fc38:	f2c0 80f3 	blt.w	801fe22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801fc3c:	f107 3cff 	add.w	ip, r7, #4294967295
 801fc40:	4566      	cmp	r6, ip
 801fc42:	f280 80ee 	bge.w	801fe22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801fc46:	b212      	sxth	r2, r2
 801fc48:	fb06 0002 	mla	r0, r6, r2, r0
 801fc4c:	9e08      	ldr	r6, [sp, #32]
 801fc4e:	1837      	adds	r7, r6, r0
 801fc50:	5c30      	ldrb	r0, [r6, r0]
 801fc52:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fc56:	eb04 0c08 	add.w	ip, r4, r8
 801fc5a:	2b00      	cmp	r3, #0
 801fc5c:	f000 80d3 	beq.w	801fe06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801fc60:	787e      	ldrb	r6, [r7, #1]
 801fc62:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fc66:	4426      	add	r6, r4
 801fc68:	2900      	cmp	r1, #0
 801fc6a:	f000 80d4 	beq.w	801fe16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801fc6e:	18b8      	adds	r0, r7, r2
 801fc70:	5cba      	ldrb	r2, [r7, r2]
 801fc72:	7840      	ldrb	r0, [r0, #1]
 801fc74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fc7c:	4422      	add	r2, r4
 801fc7e:	4420      	add	r0, r4
 801fc80:	b29b      	uxth	r3, r3
 801fc82:	78b7      	ldrb	r7, [r6, #2]
 801fc84:	b289      	uxth	r1, r1
 801fc86:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fc8a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fc8e:	fb03 f901 	mul.w	r9, r3, r1
 801fc92:	011b      	lsls	r3, r3, #4
 801fc94:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fc98:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fc9c:	eba3 0309 	sub.w	r3, r3, r9
 801fca0:	b289      	uxth	r1, r1
 801fca2:	b29b      	uxth	r3, r3
 801fca4:	ebae 0e01 	sub.w	lr, lr, r1
 801fca8:	435f      	muls	r7, r3
 801fcaa:	fa1f fe8e 	uxth.w	lr, lr
 801fcae:	fb0e 770a 	mla	r7, lr, sl, r7
 801fcb2:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fcb6:	fb01 770a 	mla	r7, r1, sl, r7
 801fcba:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fcbe:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fcc2:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fcc6:	f896 8000 	ldrb.w	r8, [r6]
 801fcca:	7876      	ldrb	r6, [r6, #1]
 801fccc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fcd0:	fb03 f808 	mul.w	r8, r3, r8
 801fcd4:	4373      	muls	r3, r6
 801fcd6:	fb0e 8807 	mla	r8, lr, r7, r8
 801fcda:	7817      	ldrb	r7, [r2, #0]
 801fcdc:	fb0e 330c 	mla	r3, lr, ip, r3
 801fce0:	fb01 8807 	mla	r8, r1, r7, r8
 801fce4:	7807      	ldrb	r7, [r0, #0]
 801fce6:	fb09 8707 	mla	r7, r9, r7, r8
 801fcea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fcee:	ea47 070a 	orr.w	r7, r7, sl
 801fcf2:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fcf6:	fb01 310a 	mla	r1, r1, sl, r3
 801fcfa:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fcfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd00:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fd04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fd08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fd0c:	ea47 070a 	orr.w	r7, r7, sl
 801fd10:	801f      	strh	r7, [r3, #0]
 801fd12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd14:	3302      	adds	r3, #2
 801fd16:	9309      	str	r3, [sp, #36]	; 0x24
 801fd18:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd1a:	449b      	add	fp, r3
 801fd1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fd1e:	441d      	add	r5, r3
 801fd20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd22:	3b01      	subs	r3, #1
 801fd24:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd26:	e770      	b.n	801fc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fd28:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd2a:	449b      	add	fp, r3
 801fd2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fd2e:	441d      	add	r5, r3
 801fd30:	9b06      	ldr	r3, [sp, #24]
 801fd32:	3b01      	subs	r3, #1
 801fd34:	9306      	str	r3, [sp, #24]
 801fd36:	9b07      	ldr	r3, [sp, #28]
 801fd38:	3302      	adds	r3, #2
 801fd3a:	9307      	str	r3, [sp, #28]
 801fd3c:	e745      	b.n	801fbca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fd3e:	d023      	beq.n	801fd88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801fd40:	9b06      	ldr	r3, [sp, #24]
 801fd42:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fd44:	3b01      	subs	r3, #1
 801fd46:	fb00 b003 	mla	r0, r0, r3, fp
 801fd4a:	1400      	asrs	r0, r0, #16
 801fd4c:	f53f af59 	bmi.w	801fc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fd50:	3901      	subs	r1, #1
 801fd52:	4288      	cmp	r0, r1
 801fd54:	f6bf af55 	bge.w	801fc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fd58:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fd5a:	fb01 5303 	mla	r3, r1, r3, r5
 801fd5e:	141b      	asrs	r3, r3, #16
 801fd60:	f53f af4f 	bmi.w	801fc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fd64:	3a01      	subs	r2, #1
 801fd66:	4293      	cmp	r3, r2
 801fd68:	f6bf af4b 	bge.w	801fc02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fd6c:	9b06      	ldr	r3, [sp, #24]
 801fd6e:	9309      	str	r3, [sp, #36]	; 0x24
 801fd70:	9b07      	ldr	r3, [sp, #28]
 801fd72:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd76:	2b00      	cmp	r3, #0
 801fd78:	dc70      	bgt.n	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801fd7a:	9b06      	ldr	r3, [sp, #24]
 801fd7c:	9a07      	ldr	r2, [sp, #28]
 801fd7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fd82:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fd86:	9307      	str	r3, [sp, #28]
 801fd88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd8a:	2b00      	cmp	r3, #0
 801fd8c:	f340 80eb 	ble.w	801ff66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801fd90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fd94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fd96:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fd9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fd9e:	eef0 6a62 	vmov.f32	s13, s5
 801fda2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fda6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fdaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdae:	ee16 ba90 	vmov	fp, s13
 801fdb2:	eef0 6a43 	vmov.f32	s13, s6
 801fdb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdba:	ee16 5a90 	vmov	r5, s13
 801fdbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fdc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fdca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fdce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fdd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fdd6:	ee12 2a90 	vmov	r2, s5
 801fdda:	eef0 2a47 	vmov.f32	s5, s14
 801fdde:	fb92 f3f3 	sdiv	r3, r2, r3
 801fde2:	ee13 2a10 	vmov	r2, s6
 801fde6:	931b      	str	r3, [sp, #108]	; 0x6c
 801fde8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fdea:	eeb0 3a67 	vmov.f32	s6, s15
 801fdee:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdf2:	931c      	str	r3, [sp, #112]	; 0x70
 801fdf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fdf6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fdf8:	3b01      	subs	r3, #1
 801fdfa:	930a      	str	r3, [sp, #40]	; 0x28
 801fdfc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fdfe:	bf08      	it	eq
 801fe00:	4613      	moveq	r3, r2
 801fe02:	9306      	str	r3, [sp, #24]
 801fe04:	e6d3      	b.n	801fbae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fe06:	b149      	cbz	r1, 801fe1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801fe08:	5cba      	ldrb	r2, [r7, r2]
 801fe0a:	4660      	mov	r0, ip
 801fe0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe10:	4422      	add	r2, r4
 801fe12:	4666      	mov	r6, ip
 801fe14:	e734      	b.n	801fc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801fe16:	4660      	mov	r0, ip
 801fe18:	4662      	mov	r2, ip
 801fe1a:	e731      	b.n	801fc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801fe1c:	4660      	mov	r0, ip
 801fe1e:	4662      	mov	r2, ip
 801fe20:	e7f7      	b.n	801fe12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801fe22:	f110 0c01 	adds.w	ip, r0, #1
 801fe26:	f53f af74 	bmi.w	801fd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fe2a:	4562      	cmp	r2, ip
 801fe2c:	f6ff af71 	blt.w	801fd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fe30:	f116 0c01 	adds.w	ip, r6, #1
 801fe34:	f53f af6d 	bmi.w	801fd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fe38:	4567      	cmp	r7, ip
 801fe3a:	f6ff af6a 	blt.w	801fd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fe3e:	b23f      	sxth	r7, r7
 801fe40:	b212      	sxth	r2, r2
 801fe42:	9701      	str	r7, [sp, #4]
 801fe44:	9200      	str	r2, [sp, #0]
 801fe46:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fe4a:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fe4e:	4623      	mov	r3, r4
 801fe50:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fe52:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fe56:	f7ff fde7 	bl	801fa28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fe5a:	e75a      	b.n	801fd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801fe5c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fe5e:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fe62:	1428      	asrs	r0, r5, #16
 801fe64:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fe68:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fe6c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fe70:	fb02 6000 	mla	r0, r2, r0, r6
 801fe74:	9e08      	ldr	r6, [sp, #32]
 801fe76:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fe7a:	1837      	adds	r7, r6, r0
 801fe7c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fe80:	eb04 0c08 	add.w	ip, r4, r8
 801fe84:	2b00      	cmp	r3, #0
 801fe86:	d060      	beq.n	801ff4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801fe88:	787e      	ldrb	r6, [r7, #1]
 801fe8a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fe8e:	4426      	add	r6, r4
 801fe90:	2900      	cmp	r1, #0
 801fe92:	d062      	beq.n	801ff5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801fe94:	18b8      	adds	r0, r7, r2
 801fe96:	5cba      	ldrb	r2, [r7, r2]
 801fe98:	7840      	ldrb	r0, [r0, #1]
 801fe9a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe9e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fea2:	4422      	add	r2, r4
 801fea4:	4420      	add	r0, r4
 801fea6:	b29b      	uxth	r3, r3
 801fea8:	78b7      	ldrb	r7, [r6, #2]
 801feaa:	b289      	uxth	r1, r1
 801feac:	f89c a002 	ldrb.w	sl, [ip, #2]
 801feb0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801feb4:	fb03 f901 	mul.w	r9, r3, r1
 801feb8:	011b      	lsls	r3, r3, #4
 801feba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801febe:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fec2:	eba3 0309 	sub.w	r3, r3, r9
 801fec6:	b289      	uxth	r1, r1
 801fec8:	b29b      	uxth	r3, r3
 801feca:	ebae 0e01 	sub.w	lr, lr, r1
 801fece:	435f      	muls	r7, r3
 801fed0:	fa1f fe8e 	uxth.w	lr, lr
 801fed4:	fb0e 770a 	mla	r7, lr, sl, r7
 801fed8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fedc:	fb01 770a 	mla	r7, r1, sl, r7
 801fee0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fee4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fee8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801feec:	f896 8000 	ldrb.w	r8, [r6]
 801fef0:	7876      	ldrb	r6, [r6, #1]
 801fef2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fef6:	fb03 f808 	mul.w	r8, r3, r8
 801fefa:	4373      	muls	r3, r6
 801fefc:	7856      	ldrb	r6, [r2, #1]
 801fefe:	fb0e 8807 	mla	r8, lr, r7, r8
 801ff02:	7817      	ldrb	r7, [r2, #0]
 801ff04:	fb0e 330c 	mla	r3, lr, ip, r3
 801ff08:	fb01 8807 	mla	r8, r1, r7, r8
 801ff0c:	7807      	ldrb	r7, [r0, #0]
 801ff0e:	fb01 3306 	mla	r3, r1, r6, r3
 801ff12:	fb09 8707 	mla	r7, r9, r7, r8
 801ff16:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ff1a:	ea47 070a 	orr.w	r7, r7, sl
 801ff1e:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ff22:	fb09 3a0a 	mla	sl, r9, sl, r3
 801ff26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ff2c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ff30:	ea47 070a 	orr.w	r7, r7, sl
 801ff34:	f823 7b02 	strh.w	r7, [r3], #2
 801ff38:	930b      	str	r3, [sp, #44]	; 0x2c
 801ff3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ff3c:	449b      	add	fp, r3
 801ff3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ff40:	441d      	add	r5, r3
 801ff42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff44:	3b01      	subs	r3, #1
 801ff46:	9309      	str	r3, [sp, #36]	; 0x24
 801ff48:	e714      	b.n	801fd74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ff4a:	b149      	cbz	r1, 801ff60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801ff4c:	5cba      	ldrb	r2, [r7, r2]
 801ff4e:	4660      	mov	r0, ip
 801ff50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff54:	4422      	add	r2, r4
 801ff56:	4666      	mov	r6, ip
 801ff58:	e7a5      	b.n	801fea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801ff5a:	4660      	mov	r0, ip
 801ff5c:	4662      	mov	r2, ip
 801ff5e:	e7a2      	b.n	801fea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801ff60:	4660      	mov	r0, ip
 801ff62:	4662      	mov	r2, ip
 801ff64:	e7f7      	b.n	801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801ff66:	b00f      	add	sp, #60	; 0x3c
 801ff68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ff6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801ff6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff70:	b085      	sub	sp, #20
 801ff72:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801ff76:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801ff7a:	9102      	str	r1, [sp, #8]
 801ff7c:	2c00      	cmp	r4, #0
 801ff7e:	fb04 710c 	mla	r1, r4, ip, r7
 801ff82:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ff86:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ff8a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ff8e:	eb02 0e01 	add.w	lr, r2, r1
 801ff92:	f2c0 8122 	blt.w	80201da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ff96:	45a0      	cmp	r8, r4
 801ff98:	f340 811f 	ble.w	80201da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ff9c:	2f00      	cmp	r7, #0
 801ff9e:	f2c0 811a 	blt.w	80201d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ffa2:	45bc      	cmp	ip, r7
 801ffa4:	f340 8117 	ble.w	80201d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ffa8:	5c52      	ldrb	r2, [r2, r1]
 801ffaa:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ffae:	1c7a      	adds	r2, r7, #1
 801ffb0:	f100 8116 	bmi.w	80201e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ffb4:	4594      	cmp	ip, r2
 801ffb6:	f340 8113 	ble.w	80201e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ffba:	2e00      	cmp	r6, #0
 801ffbc:	f000 8112 	beq.w	80201e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ffc0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ffc4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ffc8:	3401      	adds	r4, #1
 801ffca:	f100 810f 	bmi.w	80201ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ffce:	45a0      	cmp	r8, r4
 801ffd0:	f340 810c 	ble.w	80201ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ffd4:	2800      	cmp	r0, #0
 801ffd6:	f000 810c 	beq.w	80201f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ffda:	2f00      	cmp	r7, #0
 801ffdc:	f2c0 8104 	blt.w	80201e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ffe0:	45bc      	cmp	ip, r7
 801ffe2:	f340 8101 	ble.w	80201e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ffe6:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ffea:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ffee:	3701      	adds	r7, #1
 801fff0:	f100 8102 	bmi.w	80201f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fff4:	45bc      	cmp	ip, r7
 801fff6:	f340 80ff 	ble.w	80201f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fffa:	2e00      	cmp	r6, #0
 801fffc:	f000 80fe 	beq.w	80201fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020000:	44f4      	add	ip, lr
 8020002:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020006:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802000a:	b2b6      	uxth	r6, r6
 802000c:	b280      	uxth	r0, r0
 802000e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020012:	fb00 fe06 	mul.w	lr, r0, r6
 8020016:	0136      	lsls	r6, r6, #4
 8020018:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802001c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020020:	eba6 070e 	sub.w	r7, r6, lr
 8020024:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020028:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802002c:	b280      	uxth	r0, r0
 802002e:	b2bf      	uxth	r7, r7
 8020030:	1a1b      	subs	r3, r3, r0
 8020032:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020036:	fb0a f607 	mul.w	r6, sl, r7
 802003a:	b29b      	uxth	r3, r3
 802003c:	fb0b 6603 	mla	r6, fp, r3, r6
 8020040:	fb00 6609 	mla	r6, r0, r9, r6
 8020044:	fb0e 6608 	mla	r6, lr, r8, r6
 8020048:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802004c:	9600      	str	r6, [sp, #0]
 802004e:	2e00      	cmp	r6, #0
 8020050:	f000 80be 	beq.w	80201d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020054:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020058:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802005c:	9e02      	ldr	r6, [sp, #8]
 802005e:	fb0b fc0c 	mul.w	ip, fp, ip
 8020062:	fb0b f505 	mul.w	r5, fp, r5
 8020066:	8836      	ldrh	r6, [r6, #0]
 8020068:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802006c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020070:	9501      	str	r5, [sp, #4]
 8020072:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020076:	44dc      	add	ip, fp
 8020078:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802007c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020080:	9503      	str	r5, [sp, #12]
 8020082:	9d01      	ldr	r5, [sp, #4]
 8020084:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020088:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802008c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020090:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020094:	fb0a fc0c 	mul.w	ip, sl, ip
 8020098:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802009c:	fb0a fa01 	mul.w	sl, sl, r1
 80200a0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80200a4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80200a8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80200ac:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80200b0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80200b4:	4465      	add	r5, ip
 80200b6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80200ba:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80200be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80200c2:	fb09 fc0c 	mul.w	ip, r9, ip
 80200c6:	0a2d      	lsrs	r5, r5, #8
 80200c8:	fb09 f904 	mul.w	r9, r9, r4
 80200cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80200d0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80200d4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80200d8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80200dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80200e0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80200e4:	437d      	muls	r5, r7
 80200e6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80200ea:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80200ee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80200f2:	4461      	add	r1, ip
 80200f4:	fb08 f404 	mul.w	r4, r8, r4
 80200f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80200fc:	fb08 f802 	mul.w	r8, r8, r2
 8020100:	0a09      	lsrs	r1, r1, #8
 8020102:	0a22      	lsrs	r2, r4, #8
 8020104:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020108:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802010c:	fb07 f70a 	mul.w	r7, r7, sl
 8020110:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020114:	4414      	add	r4, r2
 8020116:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802011a:	0a24      	lsrs	r4, r4, #8
 802011c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020120:	9a03      	ldr	r2, [sp, #12]
 8020122:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020126:	fb02 5503 	mla	r5, r2, r3, r5
 802012a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802012e:	9a00      	ldr	r2, [sp, #0]
 8020130:	fb04 540e 	mla	r4, r4, lr, r5
 8020134:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020138:	1235      	asrs	r5, r6, #8
 802013a:	fb01 4100 	mla	r1, r1, r0, r4
 802013e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020142:	0a09      	lsrs	r1, r1, #8
 8020144:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020148:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802014c:	fb03 7101 	mla	r1, r3, r1, r7
 8020150:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020154:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020158:	fb00 e101 	mla	r1, r0, r1, lr
 802015c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8020160:	b287      	uxth	r7, r0
 8020162:	0a09      	lsrs	r1, r1, #8
 8020164:	437a      	muls	r2, r7
 8020166:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802016a:	1c53      	adds	r3, r2, #1
 802016c:	4321      	orrs	r1, r4
 802016e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020172:	0c0a      	lsrs	r2, r1, #16
 8020174:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020178:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802017c:	b2c8      	uxtb	r0, r1
 802017e:	fb12 f207 	smulbb	r2, r2, r7
 8020182:	fb14 f407 	smulbb	r4, r4, r7
 8020186:	b2db      	uxtb	r3, r3
 8020188:	fb10 f007 	smulbb	r0, r0, r7
 802018c:	fb05 2503 	mla	r5, r5, r3, r2
 8020190:	10f2      	asrs	r2, r6, #3
 8020192:	00f6      	lsls	r6, r6, #3
 8020194:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020198:	b2ad      	uxth	r5, r5
 802019a:	b2f6      	uxtb	r6, r6
 802019c:	fb02 4203 	mla	r2, r2, r3, r4
 80201a0:	fb06 0303 	mla	r3, r6, r3, r0
 80201a4:	b294      	uxth	r4, r2
 80201a6:	b299      	uxth	r1, r3
 80201a8:	1c6b      	adds	r3, r5, #1
 80201aa:	1c62      	adds	r2, r4, #1
 80201ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80201b0:	1c4b      	adds	r3, r1, #1
 80201b2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80201b6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80201ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80201be:	0952      	lsrs	r2, r2, #5
 80201c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80201c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80201c8:	432b      	orrs	r3, r5
 80201ca:	4313      	orrs	r3, r2
 80201cc:	9a02      	ldr	r2, [sp, #8]
 80201ce:	8013      	strh	r3, [r2, #0]
 80201d0:	b005      	add	sp, #20
 80201d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201d6:	2500      	movs	r5, #0
 80201d8:	e6e9      	b.n	801ffae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80201da:	2100      	movs	r1, #0
 80201dc:	460d      	mov	r5, r1
 80201de:	e6f3      	b.n	801ffc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80201e0:	2100      	movs	r1, #0
 80201e2:	e6f1      	b.n	801ffc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80201e4:	4631      	mov	r1, r6
 80201e6:	e6ef      	b.n	801ffc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80201e8:	2400      	movs	r4, #0
 80201ea:	e700      	b.n	801ffee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80201ec:	2200      	movs	r2, #0
 80201ee:	4614      	mov	r4, r2
 80201f0:	e70b      	b.n	802000a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80201f2:	4602      	mov	r2, r0
 80201f4:	4604      	mov	r4, r0
 80201f6:	e708      	b.n	802000a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80201f8:	2200      	movs	r2, #0
 80201fa:	e706      	b.n	802000a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80201fc:	4632      	mov	r2, r6
 80201fe:	e704      	b.n	802000a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08020200 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020204:	b09f      	sub	sp, #124	; 0x7c
 8020206:	921b      	str	r2, [sp, #108]	; 0x6c
 8020208:	9309      	str	r3, [sp, #36]	; 0x24
 802020a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802020c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020210:	901d      	str	r0, [sp, #116]	; 0x74
 8020212:	931c      	str	r3, [sp, #112]	; 0x70
 8020214:	6850      	ldr	r0, [r2, #4]
 8020216:	9119      	str	r1, [sp, #100]	; 0x64
 8020218:	6812      	ldr	r2, [r2, #0]
 802021a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802021c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8020220:	fb00 1303 	mla	r3, r0, r3, r1
 8020224:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020228:	930c      	str	r3, [sp, #48]	; 0x30
 802022a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802022c:	681b      	ldr	r3, [r3, #0]
 802022e:	9312      	str	r3, [sp, #72]	; 0x48
 8020230:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020232:	685e      	ldr	r6, [r3, #4]
 8020234:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020238:	3604      	adds	r6, #4
 802023a:	930d      	str	r3, [sp, #52]	; 0x34
 802023c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802023e:	2b00      	cmp	r3, #0
 8020240:	dc03      	bgt.n	802024a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020242:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020244:	2b00      	cmp	r3, #0
 8020246:	f340 8387 	ble.w	8020958 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 802024a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802024c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020250:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020254:	1e48      	subs	r0, r1, #1
 8020256:	1e57      	subs	r7, r2, #1
 8020258:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802025a:	2b00      	cmp	r3, #0
 802025c:	f340 8194 	ble.w	8020588 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8020260:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020262:	142b      	asrs	r3, r5, #16
 8020264:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020268:	d406      	bmi.n	8020278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802026a:	4584      	cmp	ip, r0
 802026c:	da04      	bge.n	8020278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802026e:	2b00      	cmp	r3, #0
 8020270:	db02      	blt.n	8020278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020272:	42bb      	cmp	r3, r7
 8020274:	f2c0 8189 	blt.w	802058a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020278:	f11c 0c01 	adds.w	ip, ip, #1
 802027c:	f100 8177 	bmi.w	802056e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8020280:	4561      	cmp	r1, ip
 8020282:	f2c0 8174 	blt.w	802056e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8020286:	3301      	adds	r3, #1
 8020288:	f100 8171 	bmi.w	802056e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 802028c:	429a      	cmp	r2, r3
 802028e:	f2c0 816e 	blt.w	802056e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8020292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020294:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8020296:	931a      	str	r3, [sp, #104]	; 0x68
 8020298:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802029a:	2b00      	cmp	r3, #0
 802029c:	f340 8193 	ble.w	80205c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 80202a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80202a2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80202a6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80202aa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80202ae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80202b0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80202b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80202b6:	141b      	asrs	r3, r3, #16
 80202b8:	f100 81d6 	bmi.w	8020668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80202bc:	f100 38ff 	add.w	r8, r0, #4294967295
 80202c0:	4543      	cmp	r3, r8
 80202c2:	f280 81d1 	bge.w	8020668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80202c6:	f1bc 0f00 	cmp.w	ip, #0
 80202ca:	f2c0 81cd 	blt.w	8020668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80202ce:	f10e 38ff 	add.w	r8, lr, #4294967295
 80202d2:	45c4      	cmp	ip, r8
 80202d4:	f280 81c8 	bge.w	8020668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80202d8:	b200      	sxth	r0, r0
 80202da:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80202dc:	fb0c 3300 	mla	r3, ip, r0, r3
 80202e0:	eb04 0803 	add.w	r8, r4, r3
 80202e4:	5ce3      	ldrb	r3, [r4, r3]
 80202e6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80202ea:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80202ee:	2a00      	cmp	r2, #0
 80202f0:	f000 81af 	beq.w	8020652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80202f4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80202f8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80202fc:	940e      	str	r4, [sp, #56]	; 0x38
 80202fe:	0e24      	lsrs	r4, r4, #24
 8020300:	9415      	str	r4, [sp, #84]	; 0x54
 8020302:	b179      	cbz	r1, 8020324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8020304:	eb08 0c00 	add.w	ip, r8, r0
 8020308:	f818 0000 	ldrb.w	r0, [r8, r0]
 802030c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020310:	900a      	str	r0, [sp, #40]	; 0x28
 8020312:	0e00      	lsrs	r0, r0, #24
 8020314:	9013      	str	r0, [sp, #76]	; 0x4c
 8020316:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802031a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802031e:	900f      	str	r0, [sp, #60]	; 0x3c
 8020320:	0e00      	lsrs	r0, r0, #24
 8020322:	9016      	str	r0, [sp, #88]	; 0x58
 8020324:	b292      	uxth	r2, r2
 8020326:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020328:	b289      	uxth	r1, r1
 802032a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802032c:	fb02 f901 	mul.w	r9, r2, r1
 8020330:	0112      	lsls	r2, r2, #4
 8020332:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020336:	eba2 0809 	sub.w	r8, r2, r9
 802033a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802033e:	b289      	uxth	r1, r1
 8020340:	fa1f f888 	uxth.w	r8, r8
 8020344:	1a52      	subs	r2, r2, r1
 8020346:	fb08 f000 	mul.w	r0, r8, r0
 802034a:	b292      	uxth	r2, r2
 802034c:	fb02 000e 	mla	r0, r2, lr, r0
 8020350:	fb01 0004 	mla	r0, r1, r4, r0
 8020354:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020356:	fb09 0004 	mla	r0, r9, r4, r0
 802035a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802035e:	2800      	cmp	r0, #0
 8020360:	f000 80fa 	beq.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020364:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020368:	d01b      	beq.n	80203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802036a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802036e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020372:	fb0e fa0a 	mul.w	sl, lr, sl
 8020376:	fb0e fe03 	mul.w	lr, lr, r3
 802037a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802037e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020382:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020386:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802038a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802038e:	4453      	add	r3, sl
 8020390:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020394:	0a1b      	lsrs	r3, r3, #8
 8020396:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802039a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802039e:	ea43 030c 	orr.w	r3, r3, ip
 80203a2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80203a4:	2cff      	cmp	r4, #255	; 0xff
 80203a6:	d021      	beq.n	80203ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80203a8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80203aa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80203ae:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80203b0:	fb04 fb0b 	mul.w	fp, r4, fp
 80203b4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80203b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80203ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80203bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80203c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80203c4:	fb04 fa0a 	mul.w	sl, r4, sl
 80203c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80203cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80203d0:	44de      	add	lr, fp
 80203d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80203d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80203da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80203de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80203e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80203e6:	ea4e 040a 	orr.w	r4, lr, sl
 80203ea:	940e      	str	r4, [sp, #56]	; 0x38
 80203ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80203ee:	2cff      	cmp	r4, #255	; 0xff
 80203f0:	d021      	beq.n	8020436 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80203f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80203f4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80203f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80203fa:	fb04 fb0b 	mul.w	fp, r4, fp
 80203fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020400:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020404:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020406:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802040a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802040e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020412:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020416:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802041a:	44de      	add	lr, fp
 802041c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020420:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020424:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020428:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802042c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020430:	ea4e 040a 	orr.w	r4, lr, sl
 8020434:	940a      	str	r4, [sp, #40]	; 0x28
 8020436:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020438:	2cff      	cmp	r4, #255	; 0xff
 802043a:	d021      	beq.n	8020480 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 802043c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802043e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020442:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020444:	fb04 fb0b 	mul.w	fp, r4, fp
 8020448:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802044a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802044e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020450:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020454:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020458:	fb04 fa0a 	mul.w	sl, r4, sl
 802045c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020460:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020464:	44de      	add	lr, fp
 8020466:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802046a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802046e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020472:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020476:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802047a:	ea4e 040a 	orr.w	r4, lr, sl
 802047e:	940f      	str	r4, [sp, #60]	; 0x3c
 8020480:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020482:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020486:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802048a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802048e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020490:	fb08 fc0c 	mul.w	ip, r8, ip
 8020494:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020498:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802049c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802049e:	fb01 cc0e 	mla	ip, r1, lr, ip
 80204a2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80204a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80204a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80204ac:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80204b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80204b2:	fb08 f80e 	mul.w	r8, r8, lr
 80204b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204ba:	fb02 8303 	mla	r3, r2, r3, r8
 80204be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80204c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204c4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80204c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80204ca:	fb01 330a 	mla	r3, r1, sl, r3
 80204ce:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80204d2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80204d4:	fb09 3901 	mla	r9, r9, r1, r3
 80204d8:	883b      	ldrh	r3, [r7, #0]
 80204da:	4342      	muls	r2, r0
 80204dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80204e0:	1c50      	adds	r0, r2, #1
 80204e2:	1219      	asrs	r1, r3, #8
 80204e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80204e8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80204ec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80204f0:	ea4c 0c09 	orr.w	ip, ip, r9
 80204f4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80204f8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80204fc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020500:	b2c0      	uxtb	r0, r0
 8020502:	fb12 f204 	smulbb	r2, r2, r4
 8020506:	fa5f fc8c 	uxtb.w	ip, ip
 802050a:	fb1e fe04 	smulbb	lr, lr, r4
 802050e:	fb01 2100 	mla	r1, r1, r0, r2
 8020512:	10da      	asrs	r2, r3, #3
 8020514:	fb1c fc04 	smulbb	ip, ip, r4
 8020518:	00db      	lsls	r3, r3, #3
 802051a:	b289      	uxth	r1, r1
 802051c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020520:	b2db      	uxtb	r3, r3
 8020522:	fb02 e200 	mla	r2, r2, r0, lr
 8020526:	fb03 c300 	mla	r3, r3, r0, ip
 802052a:	b292      	uxth	r2, r2
 802052c:	fa1f fc83 	uxth.w	ip, r3
 8020530:	1c4b      	adds	r3, r1, #1
 8020532:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020536:	f10c 0301 	add.w	r3, ip, #1
 802053a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802053e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020542:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020546:	430b      	orrs	r3, r1
 8020548:	1c51      	adds	r1, r2, #1
 802054a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802054e:	0952      	lsrs	r2, r2, #5
 8020550:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020554:	4313      	orrs	r3, r2
 8020556:	803b      	strh	r3, [r7, #0]
 8020558:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802055a:	3702      	adds	r7, #2
 802055c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802055e:	441a      	add	r2, r3
 8020560:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020562:	441d      	add	r5, r3
 8020564:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020566:	9229      	str	r2, [sp, #164]	; 0xa4
 8020568:	3b01      	subs	r3, #1
 802056a:	931a      	str	r3, [sp, #104]	; 0x68
 802056c:	e694      	b.n	8020298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802056e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020570:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020572:	441c      	add	r4, r3
 8020574:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020576:	441d      	add	r5, r3
 8020578:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802057a:	9429      	str	r4, [sp, #164]	; 0xa4
 802057c:	3b01      	subs	r3, #1
 802057e:	9309      	str	r3, [sp, #36]	; 0x24
 8020580:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020582:	3302      	adds	r3, #2
 8020584:	930c      	str	r3, [sp, #48]	; 0x30
 8020586:	e667      	b.n	8020258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020588:	d024      	beq.n	80205d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 802058a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802058c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802058e:	3b01      	subs	r3, #1
 8020590:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020592:	fb00 4003 	mla	r0, r0, r3, r4
 8020596:	1400      	asrs	r0, r0, #16
 8020598:	f53f ae7b 	bmi.w	8020292 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802059c:	3901      	subs	r1, #1
 802059e:	4288      	cmp	r0, r1
 80205a0:	f6bf ae77 	bge.w	8020292 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205a4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80205a6:	fb01 5303 	mla	r3, r1, r3, r5
 80205aa:	141b      	asrs	r3, r3, #16
 80205ac:	f53f ae71 	bmi.w	8020292 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205b0:	3a01      	subs	r2, #1
 80205b2:	4293      	cmp	r3, r2
 80205b4:	f6bf ae6d 	bge.w	8020292 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205b8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80205bc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80205c0:	f1bb 0f00 	cmp.w	fp, #0
 80205c4:	dc70      	bgt.n	80206a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80205c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80205cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80205ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80205d2:	930c      	str	r3, [sp, #48]	; 0x30
 80205d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80205d6:	2b00      	cmp	r3, #0
 80205d8:	f340 81be 	ble.w	8020958 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 80205dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80205e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80205e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205ea:	eef0 6a62 	vmov.f32	s13, s5
 80205ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205fa:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80205fe:	eef0 6a43 	vmov.f32	s13, s6
 8020602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020606:	ee16 5a90 	vmov	r5, s13
 802060a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802060e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020612:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020616:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802061a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802061e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020622:	ee12 2a90 	vmov	r2, s5
 8020626:	eef0 2a47 	vmov.f32	s5, s14
 802062a:	fb92 f3f3 	sdiv	r3, r2, r3
 802062e:	ee13 2a10 	vmov	r2, s6
 8020632:	932b      	str	r3, [sp, #172]	; 0xac
 8020634:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020636:	eeb0 3a67 	vmov.f32	s6, s15
 802063a:	fb92 f3f3 	sdiv	r3, r2, r3
 802063e:	932c      	str	r3, [sp, #176]	; 0xb0
 8020640:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020642:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020644:	3b01      	subs	r3, #1
 8020646:	9319      	str	r3, [sp, #100]	; 0x64
 8020648:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802064a:	bf08      	it	eq
 802064c:	4613      	moveq	r3, r2
 802064e:	9309      	str	r3, [sp, #36]	; 0x24
 8020650:	e5f4      	b.n	802023c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020652:	2900      	cmp	r1, #0
 8020654:	f43f ae66 	beq.w	8020324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8020658:	f818 0000 	ldrb.w	r0, [r8, r0]
 802065c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020660:	900a      	str	r0, [sp, #40]	; 0x28
 8020662:	0e00      	lsrs	r0, r0, #24
 8020664:	9013      	str	r0, [sp, #76]	; 0x4c
 8020666:	e65d      	b.n	8020324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8020668:	f113 0801 	adds.w	r8, r3, #1
 802066c:	f53f af74 	bmi.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020670:	4540      	cmp	r0, r8
 8020672:	f6ff af71 	blt.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020676:	f11c 0801 	adds.w	r8, ip, #1
 802067a:	f53f af6d 	bmi.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802067e:	45c6      	cmp	lr, r8
 8020680:	f6ff af6a 	blt.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020684:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020686:	b200      	sxth	r0, r0
 8020688:	9302      	str	r3, [sp, #8]
 802068a:	fa0f f38e 	sxth.w	r3, lr
 802068e:	9000      	str	r0, [sp, #0]
 8020690:	9301      	str	r3, [sp, #4]
 8020692:	4633      	mov	r3, r6
 8020694:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020696:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802069a:	e9cd c203 	strd	ip, r2, [sp, #12]
 802069e:	4639      	mov	r1, r7
 80206a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80206a2:	f7ff fc63 	bl	801ff6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80206a6:	e757      	b.n	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80206a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80206aa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80206ae:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80206b4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80206b6:	1427      	asrs	r7, r4, #16
 80206b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80206be:	142b      	asrs	r3, r5, #16
 80206c0:	fb01 7303 	mla	r3, r1, r3, r7
 80206c4:	18e7      	adds	r7, r4, r3
 80206c6:	5ce3      	ldrb	r3, [r4, r3]
 80206c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80206cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80206d0:	2a00      	cmp	r2, #0
 80206d2:	f000 8137 	beq.w	8020944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 80206d6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80206da:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80206de:	9410      	str	r4, [sp, #64]	; 0x40
 80206e0:	0e24      	lsrs	r4, r4, #24
 80206e2:	9417      	str	r4, [sp, #92]	; 0x5c
 80206e4:	b170      	cbz	r0, 8020704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80206e6:	eb07 0e01 	add.w	lr, r7, r1
 80206ea:	5c79      	ldrb	r1, [r7, r1]
 80206ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80206f0:	910b      	str	r1, [sp, #44]	; 0x2c
 80206f2:	0e09      	lsrs	r1, r1, #24
 80206f4:	9114      	str	r1, [sp, #80]	; 0x50
 80206f6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80206fa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80206fe:	9111      	str	r1, [sp, #68]	; 0x44
 8020700:	0e09      	lsrs	r1, r1, #24
 8020702:	9118      	str	r1, [sp, #96]	; 0x60
 8020704:	b292      	uxth	r2, r2
 8020706:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020708:	b280      	uxth	r0, r0
 802070a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802070c:	fb02 f800 	mul.w	r8, r2, r0
 8020710:	0112      	lsls	r2, r2, #4
 8020712:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020716:	eba2 0e08 	sub.w	lr, r2, r8
 802071a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802071e:	b280      	uxth	r0, r0
 8020720:	fa1f fe8e 	uxth.w	lr, lr
 8020724:	1a12      	subs	r2, r2, r0
 8020726:	fb0e f101 	mul.w	r1, lr, r1
 802072a:	b292      	uxth	r2, r2
 802072c:	fb02 110c 	mla	r1, r2, ip, r1
 8020730:	fb00 1104 	mla	r1, r0, r4, r1
 8020734:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020736:	fb08 1104 	mla	r1, r8, r4, r1
 802073a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802073e:	2900      	cmp	r1, #0
 8020740:	f000 80f5 	beq.w	802092e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8020744:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020748:	d019      	beq.n	802077e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 802074a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802074e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020752:	fb0c fa0a 	mul.w	sl, ip, sl
 8020756:	fb0c fc03 	mul.w	ip, ip, r3
 802075a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802075e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020762:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020766:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802076a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802076e:	4453      	add	r3, sl
 8020770:	0a3f      	lsrs	r7, r7, #8
 8020772:	0a1b      	lsrs	r3, r3, #8
 8020774:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020778:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802077c:	433b      	orrs	r3, r7
 802077e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020780:	2cff      	cmp	r4, #255	; 0xff
 8020782:	d020      	beq.n	80207c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8020784:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020786:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802078a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802078c:	4367      	muls	r7, r4
 802078e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020790:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020794:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020798:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802079a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802079e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80207a6:	44bc      	add	ip, r7
 80207a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80207ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80207b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207c0:	ea4c 040a 	orr.w	r4, ip, sl
 80207c4:	9410      	str	r4, [sp, #64]	; 0x40
 80207c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80207c8:	2cff      	cmp	r4, #255	; 0xff
 80207ca:	d020      	beq.n	802080e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 80207cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80207d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80207d4:	4367      	muls	r7, r4
 80207d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80207dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80207e0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80207e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80207e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80207ee:	44bc      	add	ip, r7
 80207f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80207f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80207fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020800:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020804:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020808:	ea4c 040a 	orr.w	r4, ip, sl
 802080c:	940b      	str	r4, [sp, #44]	; 0x2c
 802080e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020810:	2cff      	cmp	r4, #255	; 0xff
 8020812:	d020      	beq.n	8020856 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 8020814:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020816:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802081a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802081c:	4367      	muls	r7, r4
 802081e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020820:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020824:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020828:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802082a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802082e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020832:	fb04 fa0a 	mul.w	sl, r4, sl
 8020836:	44bc      	add	ip, r7
 8020838:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802083c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020840:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020844:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020848:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802084c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020850:	ea4c 040a 	orr.w	r4, ip, sl
 8020854:	9411      	str	r4, [sp, #68]	; 0x44
 8020856:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020858:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802085c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020860:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020864:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020866:	fb0e f707 	mul.w	r7, lr, r7
 802086a:	fb02 770c 	mla	r7, r2, ip, r7
 802086e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020872:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020874:	fb00 770c 	mla	r7, r0, ip, r7
 8020878:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802087c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802087e:	fb08 770c 	mla	r7, r8, ip, r7
 8020882:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020886:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020888:	fb0e fe0c 	mul.w	lr, lr, ip
 802088c:	0a3f      	lsrs	r7, r7, #8
 802088e:	fb02 e303 	mla	r3, r2, r3, lr
 8020892:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020894:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020898:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802089c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802089e:	fb00 330a 	mla	r3, r0, sl, r3
 80208a2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80208a6:	f8b9 0000 	ldrh.w	r0, [r9]
 80208aa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80208ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80208b0:	1202      	asrs	r2, r0, #8
 80208b2:	434b      	muls	r3, r1
 80208b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208b8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80208bc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80208c0:	1c59      	adds	r1, r3, #1
 80208c2:	ea47 070c 	orr.w	r7, r7, ip
 80208c6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80208ca:	0c3b      	lsrs	r3, r7, #16
 80208cc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80208d0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80208d4:	b2ff      	uxtb	r7, r7
 80208d6:	fb13 f304 	smulbb	r3, r3, r4
 80208da:	b2c9      	uxtb	r1, r1
 80208dc:	fb1c fc04 	smulbb	ip, ip, r4
 80208e0:	fb02 3201 	mla	r2, r2, r1, r3
 80208e4:	10c3      	asrs	r3, r0, #3
 80208e6:	fb17 f704 	smulbb	r7, r7, r4
 80208ea:	00c0      	lsls	r0, r0, #3
 80208ec:	b292      	uxth	r2, r2
 80208ee:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80208f2:	b2c0      	uxtb	r0, r0
 80208f4:	fb03 c301 	mla	r3, r3, r1, ip
 80208f8:	f102 0c01 	add.w	ip, r2, #1
 80208fc:	fb00 7001 	mla	r0, r0, r1, r7
 8020900:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020904:	b280      	uxth	r0, r0
 8020906:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802090a:	b29b      	uxth	r3, r3
 802090c:	1c42      	adds	r2, r0, #1
 802090e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020912:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020916:	ea42 020c 	orr.w	r2, r2, ip
 802091a:	f103 0c01 	add.w	ip, r3, #1
 802091e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020922:	095b      	lsrs	r3, r3, #5
 8020924:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020928:	431a      	orrs	r2, r3
 802092a:	f8a9 2000 	strh.w	r2, [r9]
 802092e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020930:	f109 0902 	add.w	r9, r9, #2
 8020934:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020936:	f10b 3bff 	add.w	fp, fp, #4294967295
 802093a:	441a      	add	r2, r3
 802093c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802093e:	9229      	str	r2, [sp, #164]	; 0xa4
 8020940:	441d      	add	r5, r3
 8020942:	e63d      	b.n	80205c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020944:	2800      	cmp	r0, #0
 8020946:	f43f aedd 	beq.w	8020704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802094a:	5c79      	ldrb	r1, [r7, r1]
 802094c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020950:	910b      	str	r1, [sp, #44]	; 0x2c
 8020952:	0e09      	lsrs	r1, r1, #24
 8020954:	9114      	str	r1, [sp, #80]	; 0x50
 8020956:	e6d5      	b.n	8020704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8020958:	b01f      	add	sp, #124	; 0x7c
 802095a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802095e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802095e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020962:	b089      	sub	sp, #36	; 0x24
 8020964:	9101      	str	r1, [sp, #4]
 8020966:	9801      	ldr	r0, [sp, #4]
 8020968:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802096c:	8800      	ldrh	r0, [r0, #0]
 802096e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020972:	1206      	asrs	r6, r0, #8
 8020974:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020978:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802097c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020980:	9602      	str	r6, [sp, #8]
 8020982:	10c6      	asrs	r6, r0, #3
 8020984:	00c0      	lsls	r0, r0, #3
 8020986:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802098a:	b2c0      	uxtb	r0, r0
 802098c:	9603      	str	r6, [sp, #12]
 802098e:	9004      	str	r0, [sp, #16]
 8020990:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020994:	fb07 100c 	mla	r0, r7, ip, r1
 8020998:	2f00      	cmp	r7, #0
 802099a:	eb02 0e00 	add.w	lr, r2, r0
 802099e:	f2c0 810a 	blt.w	8020bb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80209a2:	45b8      	cmp	r8, r7
 80209a4:	f340 8107 	ble.w	8020bb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80209a8:	2900      	cmp	r1, #0
 80209aa:	f2c0 8102 	blt.w	8020bb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80209ae:	458c      	cmp	ip, r1
 80209b0:	f340 80ff 	ble.w	8020bb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80209b4:	5c12      	ldrb	r2, [r2, r0]
 80209b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80209ba:	1c4a      	adds	r2, r1, #1
 80209bc:	f100 80fe 	bmi.w	8020bbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80209c0:	4594      	cmp	ip, r2
 80209c2:	f340 80fb 	ble.w	8020bbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80209c6:	2d00      	cmp	r5, #0
 80209c8:	f000 80fa 	beq.w	8020bc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80209cc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80209d0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80209d4:	3701      	adds	r7, #1
 80209d6:	f100 80f7 	bmi.w	8020bc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80209da:	45b8      	cmp	r8, r7
 80209dc:	f340 80f4 	ble.w	8020bc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80209e0:	2c00      	cmp	r4, #0
 80209e2:	f000 80f4 	beq.w	8020bce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80209e6:	2900      	cmp	r1, #0
 80209e8:	eb0e 020c 	add.w	r2, lr, ip
 80209ec:	f2c0 80ea 	blt.w	8020bc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80209f0:	458c      	cmp	ip, r1
 80209f2:	f340 80e7 	ble.w	8020bc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80209f6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80209fa:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80209fe:	3101      	adds	r1, #1
 8020a00:	f100 80e8 	bmi.w	8020bd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020a04:	458c      	cmp	ip, r1
 8020a06:	f340 80e5 	ble.w	8020bd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020a0a:	2d00      	cmp	r5, #0
 8020a0c:	f000 80e4 	beq.w	8020bd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020a10:	7852      	ldrb	r2, [r2, #1]
 8020a12:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020a16:	0e0b      	lsrs	r3, r1, #24
 8020a18:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020a1c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020a20:	9300      	str	r3, [sp, #0]
 8020a22:	b2a4      	uxth	r4, r4
 8020a24:	b2ab      	uxth	r3, r5
 8020a26:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020a2a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020a2e:	fb03 f904 	mul.w	r9, r3, r4
 8020a32:	011b      	lsls	r3, r3, #4
 8020a34:	fb0a f505 	mul.w	r5, sl, r5
 8020a38:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020a3c:	eba3 0e09 	sub.w	lr, r3, r9
 8020a40:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020a44:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020a48:	0a28      	lsrs	r0, r5, #8
 8020a4a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020a4e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020a52:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020a56:	fb0a f303 	mul.w	r3, sl, r3
 8020a5a:	fb08 f707 	mul.w	r7, r8, r7
 8020a5e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020a62:	4405      	add	r5, r0
 8020a64:	fb08 fc0c 	mul.w	ip, r8, ip
 8020a68:	b2a4      	uxth	r4, r4
 8020a6a:	0a2d      	lsrs	r5, r5, #8
 8020a6c:	fa1f fe8e 	uxth.w	lr, lr
 8020a70:	1b12      	subs	r2, r2, r4
 8020a72:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020a76:	b292      	uxth	r2, r2
 8020a78:	9005      	str	r0, [sp, #20]
 8020a7a:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020a7e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020a82:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020a86:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020a8a:	0a1b      	lsrs	r3, r3, #8
 8020a8c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020a90:	9306      	str	r3, [sp, #24]
 8020a92:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020a96:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020a9a:	4460      	add	r0, ip
 8020a9c:	fb0b f303 	mul.w	r3, fp, r3
 8020aa0:	fb0b f606 	mul.w	r6, fp, r6
 8020aa4:	0a00      	lsrs	r0, r0, #8
 8020aa6:	0a1d      	lsrs	r5, r3, #8
 8020aa8:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020aac:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020ab0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020ab4:	441d      	add	r5, r3
 8020ab6:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020aba:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020abe:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020ac2:	0a2d      	lsrs	r5, r5, #8
 8020ac4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020ac8:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020acc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020ad0:	0a36      	lsrs	r6, r6, #8
 8020ad2:	0a1b      	lsrs	r3, r3, #8
 8020ad4:	fb05 f50e 	mul.w	r5, r5, lr
 8020ad8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020adc:	9307      	str	r3, [sp, #28]
 8020ade:	0e0b      	lsrs	r3, r1, #24
 8020ae0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020ae4:	fb0e f606 	mul.w	r6, lr, r6
 8020ae8:	435f      	muls	r7, r3
 8020aea:	4359      	muls	r1, r3
 8020aec:	9b05      	ldr	r3, [sp, #20]
 8020aee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020af2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020af6:	fb03 5502 	mla	r5, r3, r2, r5
 8020afa:	9b06      	ldr	r3, [sp, #24]
 8020afc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b00:	fb0e fe0b 	mul.w	lr, lr, fp
 8020b04:	44bc      	add	ip, r7
 8020b06:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020b0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b0e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020b12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b16:	0a09      	lsrs	r1, r1, #8
 8020b18:	fb0c 5509 	mla	r5, ip, r9, r5
 8020b1c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020b20:	fb00 5504 	mla	r5, r0, r4, r5
 8020b24:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020b28:	9b07      	ldr	r3, [sp, #28]
 8020b2a:	fb02 6000 	mla	r0, r2, r0, r6
 8020b2e:	0a2d      	lsrs	r5, r5, #8
 8020b30:	fb02 e20a 	mla	r2, r2, sl, lr
 8020b34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020b38:	fb09 0001 	mla	r0, r9, r1, r0
 8020b3c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020b40:	fb04 0003 	mla	r0, r4, r3, r0
 8020b44:	9b00      	ldr	r3, [sp, #0]
 8020b46:	fb04 2408 	mla	r4, r4, r8, r2
 8020b4a:	9a04      	ldr	r2, [sp, #16]
 8020b4c:	0a00      	lsrs	r0, r0, #8
 8020b4e:	fb09 4903 	mla	r9, r9, r3, r4
 8020b52:	9b02      	ldr	r3, [sp, #8]
 8020b54:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020b58:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020b5c:	4305      	orrs	r5, r0
 8020b5e:	fa5f f989 	uxtb.w	r9, r9
 8020b62:	fb03 f109 	mul.w	r1, r3, r9
 8020b66:	9b03      	ldr	r3, [sp, #12]
 8020b68:	fb03 f309 	mul.w	r3, r3, r9
 8020b6c:	fb02 f909 	mul.w	r9, r2, r9
 8020b70:	1c4a      	adds	r2, r1, #1
 8020b72:	1c58      	adds	r0, r3, #1
 8020b74:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020b78:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020b7c:	0c2a      	lsrs	r2, r5, #16
 8020b7e:	0a2b      	lsrs	r3, r5, #8
 8020b80:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020b84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020b88:	0212      	lsls	r2, r2, #8
 8020b8a:	00db      	lsls	r3, r3, #3
 8020b8c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020b90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b94:	4313      	orrs	r3, r2
 8020b96:	f109 0201 	add.w	r2, r9, #1
 8020b9a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020b9e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020ba2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020ba6:	431d      	orrs	r5, r3
 8020ba8:	9b01      	ldr	r3, [sp, #4]
 8020baa:	801d      	strh	r5, [r3, #0]
 8020bac:	b009      	add	sp, #36	; 0x24
 8020bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020bb2:	2000      	movs	r0, #0
 8020bb4:	e701      	b.n	80209ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020bb6:	2600      	movs	r6, #0
 8020bb8:	4630      	mov	r0, r6
 8020bba:	e70b      	b.n	80209d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020bbc:	2600      	movs	r6, #0
 8020bbe:	e709      	b.n	80209d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020bc0:	462e      	mov	r6, r5
 8020bc2:	e707      	b.n	80209d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020bc4:	2700      	movs	r7, #0
 8020bc6:	e71a      	b.n	80209fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020bc8:	2100      	movs	r1, #0
 8020bca:	460f      	mov	r7, r1
 8020bcc:	e723      	b.n	8020a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020bce:	4621      	mov	r1, r4
 8020bd0:	4627      	mov	r7, r4
 8020bd2:	e720      	b.n	8020a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020bd4:	2100      	movs	r1, #0
 8020bd6:	e71e      	b.n	8020a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020bd8:	4629      	mov	r1, r5
 8020bda:	e71c      	b.n	8020a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020bdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020be0:	b09b      	sub	sp, #108	; 0x6c
 8020be2:	9218      	str	r2, [sp, #96]	; 0x60
 8020be4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020be6:	9019      	str	r0, [sp, #100]	; 0x64
 8020be8:	9116      	str	r1, [sp, #88]	; 0x58
 8020bea:	6850      	ldr	r0, [r2, #4]
 8020bec:	9307      	str	r3, [sp, #28]
 8020bee:	6812      	ldr	r2, [r2, #0]
 8020bf0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020bf2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020bf6:	fb00 1303 	mla	r3, r0, r3, r1
 8020bfa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020bfe:	930a      	str	r3, [sp, #40]	; 0x28
 8020c00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c02:	681b      	ldr	r3, [r3, #0]
 8020c04:	930f      	str	r3, [sp, #60]	; 0x3c
 8020c06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c08:	685e      	ldr	r6, [r3, #4]
 8020c0a:	3604      	adds	r6, #4
 8020c0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020c0e:	2b00      	cmp	r3, #0
 8020c10:	dc03      	bgt.n	8020c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020c12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c14:	2b00      	cmp	r3, #0
 8020c16:	f340 8373 	ble.w	8021300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020c1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020c20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020c24:	1e48      	subs	r0, r1, #1
 8020c26:	1e57      	subs	r7, r2, #1
 8020c28:	9b07      	ldr	r3, [sp, #28]
 8020c2a:	2b00      	cmp	r3, #0
 8020c2c:	f340 818f 	ble.w	8020f4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8020c30:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020c32:	142b      	asrs	r3, r5, #16
 8020c34:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020c38:	d406      	bmi.n	8020c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020c3a:	4584      	cmp	ip, r0
 8020c3c:	da04      	bge.n	8020c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020c3e:	2b00      	cmp	r3, #0
 8020c40:	db02      	blt.n	8020c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020c42:	42bb      	cmp	r3, r7
 8020c44:	f2c0 8184 	blt.w	8020f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020c48:	f11c 0c01 	adds.w	ip, ip, #1
 8020c4c:	f100 8172 	bmi.w	8020f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020c50:	4561      	cmp	r1, ip
 8020c52:	f2c0 816f 	blt.w	8020f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020c56:	3301      	adds	r3, #1
 8020c58:	f100 816c 	bmi.w	8020f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020c5c:	429a      	cmp	r2, r3
 8020c5e:	f2c0 8169 	blt.w	8020f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020c62:	9b07      	ldr	r3, [sp, #28]
 8020c64:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020c66:	9317      	str	r3, [sp, #92]	; 0x5c
 8020c68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020c6a:	2b00      	cmp	r3, #0
 8020c6c:	f340 818e 	ble.w	8020f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8020c70:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020c72:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020c76:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020c7a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020c7e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c80:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020c84:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020c86:	141b      	asrs	r3, r3, #16
 8020c88:	f100 81d1 	bmi.w	802102e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020c8c:	f101 38ff 	add.w	r8, r1, #4294967295
 8020c90:	4543      	cmp	r3, r8
 8020c92:	f280 81cc 	bge.w	802102e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020c96:	f1bc 0f00 	cmp.w	ip, #0
 8020c9a:	f2c0 81c8 	blt.w	802102e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020c9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020ca2:	45c4      	cmp	ip, r8
 8020ca4:	f280 81c3 	bge.w	802102e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020ca8:	b209      	sxth	r1, r1
 8020caa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020cac:	fb0c 3301 	mla	r3, ip, r1, r3
 8020cb0:	eb04 0803 	add.w	r8, r4, r3
 8020cb4:	5ce3      	ldrb	r3, [r4, r3]
 8020cb6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020cba:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020cbe:	2a00      	cmp	r2, #0
 8020cc0:	f000 81aa 	beq.w	8021018 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 8020cc4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020cc8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020ccc:	940b      	str	r4, [sp, #44]	; 0x2c
 8020cce:	0e24      	lsrs	r4, r4, #24
 8020cd0:	9412      	str	r4, [sp, #72]	; 0x48
 8020cd2:	b178      	cbz	r0, 8020cf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8020cd4:	eb08 0c01 	add.w	ip, r8, r1
 8020cd8:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020cdc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ce0:	9108      	str	r1, [sp, #32]
 8020ce2:	0e09      	lsrs	r1, r1, #24
 8020ce4:	9110      	str	r1, [sp, #64]	; 0x40
 8020ce6:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020cea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020cee:	910c      	str	r1, [sp, #48]	; 0x30
 8020cf0:	0e09      	lsrs	r1, r1, #24
 8020cf2:	9113      	str	r1, [sp, #76]	; 0x4c
 8020cf4:	b292      	uxth	r2, r2
 8020cf6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020cf8:	b280      	uxth	r0, r0
 8020cfa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020cfc:	fb02 f900 	mul.w	r9, r2, r0
 8020d00:	0112      	lsls	r2, r2, #4
 8020d02:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020d06:	eba2 0809 	sub.w	r8, r2, r9
 8020d0a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020d0e:	b280      	uxth	r0, r0
 8020d10:	fa1f f888 	uxth.w	r8, r8
 8020d14:	1a12      	subs	r2, r2, r0
 8020d16:	fb08 f101 	mul.w	r1, r8, r1
 8020d1a:	b292      	uxth	r2, r2
 8020d1c:	fb02 110e 	mla	r1, r2, lr, r1
 8020d20:	fb00 1104 	mla	r1, r0, r4, r1
 8020d24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020d26:	fb09 1104 	mla	r1, r9, r4, r1
 8020d2a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020d2e:	2900      	cmp	r1, #0
 8020d30:	f000 80f5 	beq.w	8020f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020d34:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020d38:	d01b      	beq.n	8020d72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8020d3a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020d3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020d42:	fb0e fa0a 	mul.w	sl, lr, sl
 8020d46:	fb0e fe03 	mul.w	lr, lr, r3
 8020d4a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020d4e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020d52:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020d56:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020d5a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020d5e:	4453      	add	r3, sl
 8020d60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d64:	0a1b      	lsrs	r3, r3, #8
 8020d66:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020d6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020d6e:	ea43 030c 	orr.w	r3, r3, ip
 8020d72:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020d74:	2cff      	cmp	r4, #255	; 0xff
 8020d76:	d021      	beq.n	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020d78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d7a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020d7e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020d80:	fb04 fb0b 	mul.w	fp, r4, fp
 8020d84:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d86:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020d8a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020d8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020d90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020d94:	fb04 fa0a 	mul.w	sl, r4, sl
 8020d98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020da0:	44de      	add	lr, fp
 8020da2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020da6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020dae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020db2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020db6:	ea4e 040a 	orr.w	r4, lr, sl
 8020dba:	940b      	str	r4, [sp, #44]	; 0x2c
 8020dbc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020dbe:	2cff      	cmp	r4, #255	; 0xff
 8020dc0:	d021      	beq.n	8020e06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020dc2:	9c08      	ldr	r4, [sp, #32]
 8020dc4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020dc8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020dca:	fb04 fb0b 	mul.w	fp, r4, fp
 8020dce:	9c08      	ldr	r4, [sp, #32]
 8020dd0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020dd4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020dd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020dda:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020dde:	fb04 fa0a 	mul.w	sl, r4, sl
 8020de2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020de6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020dea:	44de      	add	lr, fp
 8020dec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020df0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020df4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020df8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020dfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e00:	ea4e 040a 	orr.w	r4, lr, sl
 8020e04:	9408      	str	r4, [sp, #32]
 8020e06:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020e08:	2cff      	cmp	r4, #255	; 0xff
 8020e0a:	d021      	beq.n	8020e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8020e0c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020e0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020e12:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020e14:	fb04 fb0b 	mul.w	fp, r4, fp
 8020e18:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020e1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020e1e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020e20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020e24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020e28:	fb04 fa0a 	mul.w	sl, r4, sl
 8020e2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020e30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020e34:	44de      	add	lr, fp
 8020e36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020e3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020e3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020e46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e4a:	ea4e 040a 	orr.w	r4, lr, sl
 8020e4e:	940c      	str	r4, [sp, #48]	; 0x30
 8020e50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020e52:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020e56:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e5a:	43c9      	mvns	r1, r1
 8020e5c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020e60:	9c08      	ldr	r4, [sp, #32]
 8020e62:	fb08 fc0c 	mul.w	ip, r8, ip
 8020e66:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020e6a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020e6e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020e70:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020e74:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020e78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020e7a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020e7e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020e82:	fb08 f80e 	mul.w	r8, r8, lr
 8020e86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e8a:	fa5f fe81 	uxtb.w	lr, r1
 8020e8e:	fb02 8303 	mla	r3, r2, r3, r8
 8020e92:	9a08      	ldr	r2, [sp, #32]
 8020e94:	f8b7 8000 	ldrh.w	r8, [r7]
 8020e98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e9c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020ea0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020ea2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020ea6:	fb00 330a 	mla	r3, r0, sl, r3
 8020eaa:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020eae:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020eb2:	fb09 3900 	mla	r9, r9, r0, r3
 8020eb6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020eba:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020ebe:	b2c9      	uxtb	r1, r1
 8020ec0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020ec4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020ec8:	fb02 f20e 	mul.w	r2, r2, lr
 8020ecc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020ed0:	fb00 f00e 	mul.w	r0, r0, lr
 8020ed4:	1c53      	adds	r3, r2, #1
 8020ed6:	fb01 f10e 	mul.w	r1, r1, lr
 8020eda:	ea4c 0c09 	orr.w	ip, ip, r9
 8020ede:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020ee2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020ee6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020eea:	4a60      	ldr	r2, [pc, #384]	; (802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020eec:	b2db      	uxtb	r3, r3
 8020eee:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020ef2:	1c43      	adds	r3, r0, #1
 8020ef4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020ef8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020efc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020f00:	00db      	lsls	r3, r3, #3
 8020f02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f06:	4313      	orrs	r3, r2
 8020f08:	1c4a      	adds	r2, r1, #1
 8020f0a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020f0e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020f12:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020f16:	ea4c 0c03 	orr.w	ip, ip, r3
 8020f1a:	f8a7 c000 	strh.w	ip, [r7]
 8020f1e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020f20:	3702      	adds	r7, #2
 8020f22:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020f24:	441a      	add	r2, r3
 8020f26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f28:	441d      	add	r5, r3
 8020f2a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020f2c:	9225      	str	r2, [sp, #148]	; 0x94
 8020f2e:	3b01      	subs	r3, #1
 8020f30:	9317      	str	r3, [sp, #92]	; 0x5c
 8020f32:	e699      	b.n	8020c68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020f34:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020f36:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020f38:	441c      	add	r4, r3
 8020f3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f3c:	441d      	add	r5, r3
 8020f3e:	9b07      	ldr	r3, [sp, #28]
 8020f40:	9425      	str	r4, [sp, #148]	; 0x94
 8020f42:	3b01      	subs	r3, #1
 8020f44:	9307      	str	r3, [sp, #28]
 8020f46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f48:	3302      	adds	r3, #2
 8020f4a:	930a      	str	r3, [sp, #40]	; 0x28
 8020f4c:	e66c      	b.n	8020c28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020f4e:	d024      	beq.n	8020f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8020f50:	9b07      	ldr	r3, [sp, #28]
 8020f52:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020f54:	3b01      	subs	r3, #1
 8020f56:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020f58:	fb00 4003 	mla	r0, r0, r3, r4
 8020f5c:	1400      	asrs	r0, r0, #16
 8020f5e:	f53f ae80 	bmi.w	8020c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f62:	3901      	subs	r1, #1
 8020f64:	4288      	cmp	r0, r1
 8020f66:	f6bf ae7c 	bge.w	8020c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f6a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020f6c:	fb01 5303 	mla	r3, r1, r3, r5
 8020f70:	141b      	asrs	r3, r3, #16
 8020f72:	f53f ae76 	bmi.w	8020c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f76:	3a01      	subs	r2, #1
 8020f78:	4293      	cmp	r3, r2
 8020f7a:	f6bf ae72 	bge.w	8020c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020f7e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020f82:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020f86:	f1bb 0f00 	cmp.w	fp, #0
 8020f8a:	dc71      	bgt.n	8021070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020f8c:	9b07      	ldr	r3, [sp, #28]
 8020f8e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020f92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f94:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020f98:	930a      	str	r3, [sp, #40]	; 0x28
 8020f9a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020f9c:	2b00      	cmp	r3, #0
 8020f9e:	f340 81af 	ble.w	8021300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020fa2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020fa6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fa8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020fac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020fb0:	eef0 6a62 	vmov.f32	s13, s5
 8020fb4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020fb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020fbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fc0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020fc4:	eef0 6a43 	vmov.f32	s13, s6
 8020fc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020fcc:	ee16 5a90 	vmov	r5, s13
 8020fd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020fd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020fd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020fdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020fe0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020fe4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020fe8:	ee12 2a90 	vmov	r2, s5
 8020fec:	eef0 2a47 	vmov.f32	s5, s14
 8020ff0:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ff4:	ee13 2a10 	vmov	r2, s6
 8020ff8:	9327      	str	r3, [sp, #156]	; 0x9c
 8020ffa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ffc:	eeb0 3a67 	vmov.f32	s6, s15
 8021000:	fb92 f3f3 	sdiv	r3, r2, r3
 8021004:	9328      	str	r3, [sp, #160]	; 0xa0
 8021006:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021008:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802100a:	3b01      	subs	r3, #1
 802100c:	9316      	str	r3, [sp, #88]	; 0x58
 802100e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021010:	bf08      	it	eq
 8021012:	4613      	moveq	r3, r2
 8021014:	9307      	str	r3, [sp, #28]
 8021016:	e5f9      	b.n	8020c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021018:	2800      	cmp	r0, #0
 802101a:	f43f ae6b 	beq.w	8020cf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 802101e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021022:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021026:	9108      	str	r1, [sp, #32]
 8021028:	0e09      	lsrs	r1, r1, #24
 802102a:	9110      	str	r1, [sp, #64]	; 0x40
 802102c:	e662      	b.n	8020cf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 802102e:	f113 0801 	adds.w	r8, r3, #1
 8021032:	f53f af74 	bmi.w	8020f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021036:	4541      	cmp	r1, r8
 8021038:	f6ff af71 	blt.w	8020f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802103c:	f11c 0801 	adds.w	r8, ip, #1
 8021040:	f53f af6d 	bmi.w	8020f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021044:	45c6      	cmp	lr, r8
 8021046:	f6ff af6a 	blt.w	8020f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802104a:	b209      	sxth	r1, r1
 802104c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021050:	fa0f f38e 	sxth.w	r3, lr
 8021054:	9100      	str	r1, [sp, #0]
 8021056:	4639      	mov	r1, r7
 8021058:	9301      	str	r3, [sp, #4]
 802105a:	4633      	mov	r3, r6
 802105c:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021060:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021062:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021064:	f7ff fc7b 	bl	802095e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021068:	e759      	b.n	8020f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802106a:	bf00      	nop
 802106c:	fffff800 	.word	0xfffff800
 8021070:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021072:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021076:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021078:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802107c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802107e:	1427      	asrs	r7, r4, #16
 8021080:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021082:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021086:	142b      	asrs	r3, r5, #16
 8021088:	fb01 7303 	mla	r3, r1, r3, r7
 802108c:	18e7      	adds	r7, r4, r3
 802108e:	5ce3      	ldrb	r3, [r4, r3]
 8021090:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021094:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021098:	2a00      	cmp	r2, #0
 802109a:	f000 8127 	beq.w	80212ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802109e:	f897 e001 	ldrb.w	lr, [r7, #1]
 80210a2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80210a6:	940d      	str	r4, [sp, #52]	; 0x34
 80210a8:	0e24      	lsrs	r4, r4, #24
 80210aa:	9414      	str	r4, [sp, #80]	; 0x50
 80210ac:	b170      	cbz	r0, 80210cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80210ae:	eb07 0e01 	add.w	lr, r7, r1
 80210b2:	5c79      	ldrb	r1, [r7, r1]
 80210b4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80210b8:	9109      	str	r1, [sp, #36]	; 0x24
 80210ba:	0e09      	lsrs	r1, r1, #24
 80210bc:	9111      	str	r1, [sp, #68]	; 0x44
 80210be:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80210c2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80210c6:	910e      	str	r1, [sp, #56]	; 0x38
 80210c8:	0e09      	lsrs	r1, r1, #24
 80210ca:	9115      	str	r1, [sp, #84]	; 0x54
 80210cc:	b292      	uxth	r2, r2
 80210ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80210d0:	b280      	uxth	r0, r0
 80210d2:	fb02 f800 	mul.w	r8, r2, r0
 80210d6:	0112      	lsls	r2, r2, #4
 80210d8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80210dc:	eba2 0e08 	sub.w	lr, r2, r8
 80210e0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80210e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80210e6:	b280      	uxth	r0, r0
 80210e8:	fa1f fe8e 	uxth.w	lr, lr
 80210ec:	1a09      	subs	r1, r1, r0
 80210ee:	fb0e f202 	mul.w	r2, lr, r2
 80210f2:	b289      	uxth	r1, r1
 80210f4:	fb01 220c 	mla	r2, r1, ip, r2
 80210f8:	fb00 2204 	mla	r2, r0, r4, r2
 80210fc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80210fe:	fb08 2204 	mla	r2, r8, r4, r2
 8021102:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021106:	2a00      	cmp	r2, #0
 8021108:	f000 80e5 	beq.w	80212d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802110c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021110:	d019      	beq.n	8021146 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021112:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021116:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802111a:	fb0c fa0a 	mul.w	sl, ip, sl
 802111e:	fb0c fc03 	mul.w	ip, ip, r3
 8021122:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021126:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802112a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802112e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021132:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021136:	4453      	add	r3, sl
 8021138:	0a3f      	lsrs	r7, r7, #8
 802113a:	0a1b      	lsrs	r3, r3, #8
 802113c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021140:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021144:	433b      	orrs	r3, r7
 8021146:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021148:	2cff      	cmp	r4, #255	; 0xff
 802114a:	d020      	beq.n	802118e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802114c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802114e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021152:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021154:	4367      	muls	r7, r4
 8021156:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021158:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802115c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021160:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021162:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021166:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802116a:	fb04 fa0a 	mul.w	sl, r4, sl
 802116e:	44bc      	add	ip, r7
 8021170:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021178:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802117c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021184:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021188:	ea4c 040a 	orr.w	r4, ip, sl
 802118c:	940d      	str	r4, [sp, #52]	; 0x34
 802118e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021190:	2cff      	cmp	r4, #255	; 0xff
 8021192:	d020      	beq.n	80211d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021194:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021196:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802119a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802119c:	4367      	muls	r7, r4
 802119e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80211a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80211a4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80211a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80211aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80211ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80211b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80211b6:	44bc      	add	ip, r7
 80211b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80211bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80211c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80211c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80211cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80211d0:	ea4c 040a 	orr.w	r4, ip, sl
 80211d4:	9409      	str	r4, [sp, #36]	; 0x24
 80211d6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80211d8:	2cff      	cmp	r4, #255	; 0xff
 80211da:	d020      	beq.n	802121e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80211dc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80211de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80211e2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80211e4:	4367      	muls	r7, r4
 80211e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80211e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80211ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80211f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80211f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80211f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80211fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80211fe:	44bc      	add	ip, r7
 8021200:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021204:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021208:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802120c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021210:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021214:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021218:	ea4c 040a 	orr.w	r4, ip, sl
 802121c:	940e      	str	r4, [sp, #56]	; 0x38
 802121e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021220:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021224:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021228:	43d2      	mvns	r2, r2
 802122a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802122e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021230:	b2d2      	uxtb	r2, r2
 8021232:	fb0e f707 	mul.w	r7, lr, r7
 8021236:	fb01 770c 	mla	r7, r1, ip, r7
 802123a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802123e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021240:	fb00 770c 	mla	r7, r0, ip, r7
 8021244:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021248:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802124a:	fb08 770c 	mla	r7, r8, ip, r7
 802124e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021252:	fb0e fe0c 	mul.w	lr, lr, ip
 8021256:	0a3f      	lsrs	r7, r7, #8
 8021258:	fb01 e303 	mla	r3, r1, r3, lr
 802125c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802125e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021262:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021266:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021268:	fb00 330a 	mla	r3, r0, sl, r3
 802126c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8021270:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021274:	f8b9 3000 	ldrh.w	r3, [r9]
 8021278:	1218      	asrs	r0, r3, #8
 802127a:	10d9      	asrs	r1, r3, #3
 802127c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021280:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021284:	00db      	lsls	r3, r3, #3
 8021286:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802128a:	4350      	muls	r0, r2
 802128c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021290:	b2db      	uxtb	r3, r3
 8021292:	4351      	muls	r1, r2
 8021294:	ea47 070c 	orr.w	r7, r7, ip
 8021298:	4353      	muls	r3, r2
 802129a:	1c42      	adds	r2, r0, #1
 802129c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80212a0:	0c3a      	lsrs	r2, r7, #16
 80212a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80212a6:	4a18      	ldr	r2, [pc, #96]	; (8021308 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80212a8:	b2c0      	uxtb	r0, r0
 80212aa:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80212ae:	1c4a      	adds	r2, r1, #1
 80212b0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80212b4:	0a3a      	lsrs	r2, r7, #8
 80212b6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80212ba:	00c9      	lsls	r1, r1, #3
 80212bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80212c0:	4301      	orrs	r1, r0
 80212c2:	1c58      	adds	r0, r3, #1
 80212c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80212c8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80212cc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80212d0:	4308      	orrs	r0, r1
 80212d2:	f8a9 0000 	strh.w	r0, [r9]
 80212d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80212d8:	f109 0902 	add.w	r9, r9, #2
 80212dc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80212de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80212e2:	441a      	add	r2, r3
 80212e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80212e6:	9225      	str	r2, [sp, #148]	; 0x94
 80212e8:	441d      	add	r5, r3
 80212ea:	e64c      	b.n	8020f86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80212ec:	2800      	cmp	r0, #0
 80212ee:	f43f aeed 	beq.w	80210cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80212f2:	5c79      	ldrb	r1, [r7, r1]
 80212f4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80212f8:	9109      	str	r1, [sp, #36]	; 0x24
 80212fa:	0e09      	lsrs	r1, r1, #24
 80212fc:	9111      	str	r1, [sp, #68]	; 0x44
 80212fe:	e6e5      	b.n	80210cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021300:	b01b      	add	sp, #108	; 0x6c
 8021302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021306:	bf00      	nop
 8021308:	fffff800 	.word	0xfffff800

0802130c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802130c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021310:	b085      	sub	sp, #20
 8021312:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021316:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802131a:	2800      	cmp	r0, #0
 802131c:	9103      	str	r1, [sp, #12]
 802131e:	fb00 7406 	mla	r4, r0, r6, r7
 8021322:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021326:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802132a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 802132e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021332:	eb03 0904 	add.w	r9, r3, r4
 8021336:	9501      	str	r5, [sp, #4]
 8021338:	f2c0 8150 	blt.w	80215dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802133c:	4583      	cmp	fp, r0
 802133e:	f340 814d 	ble.w	80215dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021342:	2f00      	cmp	r7, #0
 8021344:	f2c0 8146 	blt.w	80215d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021348:	42be      	cmp	r6, r7
 802134a:	f340 8143 	ble.w	80215d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802134e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021352:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021356:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802135a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802135e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021362:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021366:	4355      	muls	r5, r2
 8021368:	fb0c f203 	mul.w	r2, ip, r3
 802136c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021370:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021374:	441d      	add	r5, r3
 8021376:	f102 0320 	add.w	r3, r2, #32
 802137a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802137e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021382:	0a1b      	lsrs	r3, r3, #8
 8021384:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021388:	431c      	orrs	r4, r3
 802138a:	1c7b      	adds	r3, r7, #1
 802138c:	f100 812b 	bmi.w	80215e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021390:	429e      	cmp	r6, r3
 8021392:	f340 8128 	ble.w	80215e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021396:	2900      	cmp	r1, #0
 8021398:	f000 8128 	beq.w	80215ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802139c:	9a01      	ldr	r2, [sp, #4]
 802139e:	f899 3001 	ldrb.w	r3, [r9, #1]
 80213a2:	8855      	ldrh	r5, [r2, #2]
 80213a4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80213a8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80213ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80213b0:	fb08 f802 	mul.w	r8, r8, r2
 80213b4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80213b8:	435d      	muls	r5, r3
 80213ba:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80213be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80213c2:	44d0      	add	r8, sl
 80213c4:	f105 0a20 	add.w	sl, r5, #32
 80213c8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80213cc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80213d0:	0a2d      	lsrs	r5, r5, #8
 80213d2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80213d6:	432a      	orrs	r2, r5
 80213d8:	3001      	adds	r0, #1
 80213da:	f100 810d 	bmi.w	80215f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80213de:	4583      	cmp	fp, r0
 80213e0:	f340 810a 	ble.w	80215f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80213e4:	f1be 0f00 	cmp.w	lr, #0
 80213e8:	f000 810b 	beq.w	8021602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80213ec:	2f00      	cmp	r7, #0
 80213ee:	f2c0 8100 	blt.w	80215f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80213f2:	42be      	cmp	r6, r7
 80213f4:	f340 80fd 	ble.w	80215f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80213f8:	9801      	ldr	r0, [sp, #4]
 80213fa:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80213fe:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021402:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021406:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802140a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802140e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021412:	fb0a fa00 	mul.w	sl, sl, r0
 8021416:	fb05 f808 	mul.w	r8, r5, r8
 802141a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802141e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021422:	4482      	add	sl, r0
 8021424:	f108 0020 	add.w	r0, r8, #32
 8021428:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802142c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021430:	0a00      	lsrs	r0, r0, #8
 8021432:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021436:	ea4b 0b00 	orr.w	fp, fp, r0
 802143a:	3701      	adds	r7, #1
 802143c:	f100 80e6 	bmi.w	802160c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021440:	42be      	cmp	r6, r7
 8021442:	f340 80e3 	ble.w	802160c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021446:	2900      	cmp	r1, #0
 8021448:	f000 80e3 	beq.w	8021612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802144c:	3601      	adds	r6, #1
 802144e:	9801      	ldr	r0, [sp, #4]
 8021450:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021454:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021458:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802145c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021460:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021464:	fb09 f906 	mul.w	r9, r9, r6
 8021468:	fb07 f800 	mul.w	r8, r7, r0
 802146c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021470:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021474:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021478:	44d1      	add	r9, sl
 802147a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802147e:	f108 0020 	add.w	r0, r8, #32
 8021482:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021486:	0a00      	lsrs	r0, r0, #8
 8021488:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802148c:	4330      	orrs	r0, r6
 802148e:	b28e      	uxth	r6, r1
 8021490:	fa1f f98e 	uxth.w	r9, lr
 8021494:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021498:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802149c:	fb06 f809 	mul.w	r8, r6, r9
 80214a0:	0136      	lsls	r6, r6, #4
 80214a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80214a6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80214aa:	9601      	str	r6, [sp, #4]
 80214ac:	ea4a 0404 	orr.w	r4, sl, r4
 80214b0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80214b4:	fa1f f689 	uxth.w	r6, r9
 80214b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80214bc:	fb11 f90e 	smulbb	r9, r1, lr
 80214c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80214c4:	9602      	str	r6, [sp, #8]
 80214c6:	4626      	mov	r6, r4
 80214c8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80214cc:	f1ce 0410 	rsb	r4, lr, #16
 80214d0:	ea4a 0202 	orr.w	r2, sl, r2
 80214d4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80214d8:	1a64      	subs	r4, r4, r1
 80214da:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80214de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80214e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80214e6:	434a      	muls	r2, r1
 80214e8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80214ec:	ea4a 0000 	orr.w	r0, sl, r0
 80214f0:	9903      	ldr	r1, [sp, #12]
 80214f2:	fb04 2406 	mla	r4, r4, r6, r2
 80214f6:	9e02      	ldr	r6, [sp, #8]
 80214f8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80214fc:	fb09 4200 	mla	r2, r9, r0, r4
 8021500:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021504:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021508:	8808      	ldrh	r0, [r1, #0]
 802150a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802150e:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021512:	ea44 0b0b 	orr.w	fp, r4, fp
 8021516:	9c01      	ldr	r4, [sp, #4]
 8021518:	b289      	uxth	r1, r1
 802151a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802151e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021522:	1ba4      	subs	r4, r4, r6
 8021524:	9e01      	ldr	r6, [sp, #4]
 8021526:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802152a:	eba6 0608 	sub.w	r6, r6, r8
 802152e:	b2a4      	uxth	r4, r4
 8021530:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021534:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021538:	b2b6      	uxth	r6, r6
 802153a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802153e:	4373      	muls	r3, r6
 8021540:	ea42 0e0e 	orr.w	lr, r2, lr
 8021544:	fb0c 3304 	mla	r3, ip, r4, r3
 8021548:	9c02      	ldr	r4, [sp, #8]
 802154a:	fa1f f28e 	uxth.w	r2, lr
 802154e:	fb04 3505 	mla	r5, r4, r5, r3
 8021552:	10d4      	asrs	r4, r2, #3
 8021554:	fb08 5707 	mla	r7, r8, r7, r5
 8021558:	1215      	asrs	r5, r2, #8
 802155a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802155e:	00d2      	lsls	r2, r2, #3
 8021560:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021564:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021568:	b2d2      	uxtb	r2, r2
 802156a:	434f      	muls	r7, r1
 802156c:	1c7b      	adds	r3, r7, #1
 802156e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021572:	1203      	asrs	r3, r0, #8
 8021574:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021578:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802157c:	b2ff      	uxtb	r7, r7
 802157e:	fb13 f307 	smulbb	r3, r3, r7
 8021582:	fb05 3501 	mla	r5, r5, r1, r3
 8021586:	10c3      	asrs	r3, r0, #3
 8021588:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802158c:	b2ad      	uxth	r5, r5
 802158e:	fb13 f307 	smulbb	r3, r3, r7
 8021592:	fb04 3401 	mla	r4, r4, r1, r3
 8021596:	00c3      	lsls	r3, r0, #3
 8021598:	b2db      	uxtb	r3, r3
 802159a:	b2a4      	uxth	r4, r4
 802159c:	fb13 f307 	smulbb	r3, r3, r7
 80215a0:	fb02 3101 	mla	r1, r2, r1, r3
 80215a4:	1c6b      	adds	r3, r5, #1
 80215a6:	1c62      	adds	r2, r4, #1
 80215a8:	b289      	uxth	r1, r1
 80215aa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80215ae:	1c4b      	adds	r3, r1, #1
 80215b0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80215b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80215b8:	9a03      	ldr	r2, [sp, #12]
 80215ba:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80215be:	0964      	lsrs	r4, r4, #5
 80215c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80215c4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80215c8:	432b      	orrs	r3, r5
 80215ca:	4323      	orrs	r3, r4
 80215cc:	8013      	strh	r3, [r2, #0]
 80215ce:	b005      	add	sp, #20
 80215d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80215d4:	f04f 0c00 	mov.w	ip, #0
 80215d8:	4664      	mov	r4, ip
 80215da:	e6d6      	b.n	802138a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80215dc:	2300      	movs	r3, #0
 80215de:	469c      	mov	ip, r3
 80215e0:	461a      	mov	r2, r3
 80215e2:	461c      	mov	r4, r3
 80215e4:	e6f8      	b.n	80213d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80215e6:	2300      	movs	r3, #0
 80215e8:	461a      	mov	r2, r3
 80215ea:	e6f5      	b.n	80213d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80215ec:	460b      	mov	r3, r1
 80215ee:	460a      	mov	r2, r1
 80215f0:	e6f2      	b.n	80213d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80215f2:	2500      	movs	r5, #0
 80215f4:	46ab      	mov	fp, r5
 80215f6:	e720      	b.n	802143a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80215f8:	2700      	movs	r7, #0
 80215fa:	463d      	mov	r5, r7
 80215fc:	4638      	mov	r0, r7
 80215fe:	46bb      	mov	fp, r7
 8021600:	e745      	b.n	802148e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021602:	4677      	mov	r7, lr
 8021604:	4675      	mov	r5, lr
 8021606:	4670      	mov	r0, lr
 8021608:	46f3      	mov	fp, lr
 802160a:	e740      	b.n	802148e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802160c:	2700      	movs	r7, #0
 802160e:	4638      	mov	r0, r7
 8021610:	e73d      	b.n	802148e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021612:	460f      	mov	r7, r1
 8021614:	4608      	mov	r0, r1
 8021616:	e73a      	b.n	802148e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802161c:	b097      	sub	sp, #92	; 0x5c
 802161e:	9214      	str	r2, [sp, #80]	; 0x50
 8021620:	9308      	str	r3, [sp, #32]
 8021622:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021624:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021628:	9015      	str	r0, [sp, #84]	; 0x54
 802162a:	9312      	str	r3, [sp, #72]	; 0x48
 802162c:	6850      	ldr	r0, [r2, #4]
 802162e:	9111      	str	r1, [sp, #68]	; 0x44
 8021630:	6812      	ldr	r2, [r2, #0]
 8021632:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021636:	fb00 1303 	mla	r3, r0, r3, r1
 802163a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802163e:	9309      	str	r3, [sp, #36]	; 0x24
 8021640:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021642:	681b      	ldr	r3, [r3, #0]
 8021644:	930b      	str	r3, [sp, #44]	; 0x2c
 8021646:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021648:	685b      	ldr	r3, [r3, #4]
 802164a:	930c      	str	r3, [sp, #48]	; 0x30
 802164c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021650:	930a      	str	r3, [sp, #40]	; 0x28
 8021652:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021654:	2b00      	cmp	r3, #0
 8021656:	dc03      	bgt.n	8021660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021658:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802165a:	2b00      	cmp	r3, #0
 802165c:	f340 83cd 	ble.w	8021dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8021660:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021662:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021666:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802166a:	1e48      	subs	r0, r1, #1
 802166c:	1e55      	subs	r5, r2, #1
 802166e:	9b08      	ldr	r3, [sp, #32]
 8021670:	2b00      	cmp	r3, #0
 8021672:	f340 81a5 	ble.w	80219c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8021676:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021678:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802167a:	1436      	asrs	r6, r6, #16
 802167c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021680:	d406      	bmi.n	8021690 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021682:	4286      	cmp	r6, r0
 8021684:	da04      	bge.n	8021690 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021686:	2b00      	cmp	r3, #0
 8021688:	db02      	blt.n	8021690 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802168a:	42ab      	cmp	r3, r5
 802168c:	f2c0 8199 	blt.w	80219c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021690:	3601      	adds	r6, #1
 8021692:	f100 8186 	bmi.w	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021696:	42b1      	cmp	r1, r6
 8021698:	f2c0 8183 	blt.w	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802169c:	3301      	adds	r3, #1
 802169e:	f100 8180 	bmi.w	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80216a2:	429a      	cmp	r2, r3
 80216a4:	f2c0 817d 	blt.w	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80216a8:	9b08      	ldr	r3, [sp, #32]
 80216aa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80216ae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80216b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80216b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80216b4:	2b00      	cmp	r3, #0
 80216b6:	f340 81a6 	ble.w	8021a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80216ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80216bc:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80216be:	1418      	asrs	r0, r3, #16
 80216c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80216c2:	142d      	asrs	r5, r5, #16
 80216c4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80216c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80216ca:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80216ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80216d0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80216d4:	f100 81fa 	bmi.w	8021acc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80216d8:	f102 3eff 	add.w	lr, r2, #4294967295
 80216dc:	4575      	cmp	r5, lr
 80216de:	f280 81f5 	bge.w	8021acc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80216e2:	2800      	cmp	r0, #0
 80216e4:	f2c0 81f2 	blt.w	8021acc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80216e8:	f103 3eff 	add.w	lr, r3, #4294967295
 80216ec:	4570      	cmp	r0, lr
 80216ee:	f280 81ed 	bge.w	8021acc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80216f2:	b212      	sxth	r2, r2
 80216f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80216f6:	fa1f fe81 	uxth.w	lr, r1
 80216fa:	fb00 5002 	mla	r0, r0, r2, r5
 80216fe:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021702:	eb03 0a00 	add.w	sl, r3, r0
 8021706:	f813 9000 	ldrb.w	r9, [r3, r0]
 802170a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802170e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021712:	b29b      	uxth	r3, r3
 8021714:	f1bc 0f00 	cmp.w	ip, #0
 8021718:	f000 81bb 	beq.w	8021a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 802171c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021720:	eb0a 0b02 	add.w	fp, sl, r2
 8021724:	fa1f fa8c 	uxth.w	sl, ip
 8021728:	940d      	str	r4, [sp, #52]	; 0x34
 802172a:	fb0a fe0e 	mul.w	lr, sl, lr
 802172e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021732:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021736:	eba5 050e 	sub.w	r5, r5, lr
 802173a:	940e      	str	r4, [sp, #56]	; 0x38
 802173c:	fa1f fa8a 	uxth.w	sl, sl
 8021740:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021742:	b2ad      	uxth	r5, r5
 8021744:	eba3 030a 	sub.w	r3, r3, sl
 8021748:	fb08 f505 	mul.w	r5, r8, r5
 802174c:	b29b      	uxth	r3, r3
 802174e:	fb09 5303 	mla	r3, r9, r3, r5
 8021752:	fb0a 3304 	mla	r3, sl, r4, r3
 8021756:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021758:	fb0e 3304 	mla	r3, lr, r4, r3
 802175c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021760:	2b00      	cmp	r3, #0
 8021762:	f000 8111 	beq.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021766:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021768:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802176c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021770:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021774:	f000 8192 	beq.w	8021a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021778:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802177c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021780:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021784:	fb0a fe0e 	mul.w	lr, sl, lr
 8021788:	fb09 f000 	mul.w	r0, r9, r0
 802178c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021790:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021794:	f100 0b20 	add.w	fp, r0, #32
 8021798:	44ce      	add	lr, r9
 802179a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802179e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80217a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80217a6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80217aa:	ea4e 0909 	orr.w	r9, lr, r9
 80217ae:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80217b2:	8868      	ldrh	r0, [r5, #2]
 80217b4:	d019      	beq.n	80217ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80217b6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80217ba:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80217be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80217c2:	fb0a fe0e 	mul.w	lr, sl, lr
 80217c6:	fb08 f800 	mul.w	r8, r8, r0
 80217ca:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80217ce:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80217d2:	f108 0b20 	add.w	fp, r8, #32
 80217d6:	4486      	add	lr, r0
 80217d8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80217dc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80217e0:	0a00      	lsrs	r0, r0, #8
 80217e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80217e6:	ea4e 0000 	orr.w	r0, lr, r0
 80217ea:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80217ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80217f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80217f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80217fa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80217fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021802:	ea4e 0909 	orr.w	r9, lr, r9
 8021806:	ea4a 0000 	orr.w	r0, sl, r0
 802180a:	f1bc 0f00 	cmp.w	ip, #0
 802180e:	f000 8147 	beq.w	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8021812:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021816:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021818:	3a01      	subs	r2, #1
 802181a:	2cff      	cmp	r4, #255	; 0xff
 802181c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8021820:	f102 0202 	add.w	r2, r2, #2
 8021824:	eb05 0e02 	add.w	lr, r5, r2
 8021828:	5aaa      	ldrh	r2, [r5, r2]
 802182a:	d018      	beq.n	802185e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802182c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021830:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021834:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021838:	fb04 fa02 	mul.w	sl, r4, r2
 802183c:	fb08 f805 	mul.w	r8, r8, r5
 8021840:	f10a 0520 	add.w	r5, sl, #32
 8021844:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021848:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802184c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021850:	4442      	add	r2, r8
 8021852:	0a2d      	lsrs	r5, r5, #8
 8021854:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021858:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802185c:	432a      	orrs	r2, r5
 802185e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021860:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021864:	2cff      	cmp	r4, #255	; 0xff
 8021866:	d01a      	beq.n	802189e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8021868:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802186c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021870:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021874:	fb04 fa05 	mul.w	sl, r4, r5
 8021878:	fb08 f80e 	mul.w	r8, r8, lr
 802187c:	f10a 0e20 	add.w	lr, sl, #32
 8021880:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021884:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021888:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802188c:	4445      	add	r5, r8
 802188e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021892:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021896:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802189a:	ea45 050e 	orr.w	r5, r5, lr
 802189e:	fb1c fe01 	smulbb	lr, ip, r1
 80218a2:	f1cc 0810 	rsb	r8, ip, #16
 80218a6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80218aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80218ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80218b2:	eba8 0801 	sub.w	r8, r8, r1
 80218b6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80218ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218be:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80218c2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80218c6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80218ca:	ea4a 0202 	orr.w	r2, sl, r2
 80218ce:	4341      	muls	r1, r0
 80218d0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80218d4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80218d8:	fb09 1108 	mla	r1, r9, r8, r1
 80218dc:	ea4b 0505 	orr.w	r5, fp, r5
 80218e0:	fb0c 1102 	mla	r1, ip, r2, r1
 80218e4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80218e8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80218ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80218f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80218f4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80218f8:	ea42 0e0e 	orr.w	lr, r2, lr
 80218fc:	fa1f f28e 	uxth.w	r2, lr
 8021900:	2bff      	cmp	r3, #255	; 0xff
 8021902:	d103      	bne.n	802190c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021904:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021906:	29ff      	cmp	r1, #255	; 0xff
 8021908:	f000 80de 	beq.w	8021ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802190c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802190e:	1215      	asrs	r5, r2, #8
 8021910:	8838      	ldrh	r0, [r7, #0]
 8021912:	434b      	muls	r3, r1
 8021914:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021918:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802191a:	f103 0c01 	add.w	ip, r3, #1
 802191e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021922:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021926:	fa5f fc83 	uxtb.w	ip, r3
 802192a:	1203      	asrs	r3, r0, #8
 802192c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021930:	fb13 f30c 	smulbb	r3, r3, ip
 8021934:	fb05 3501 	mla	r5, r5, r1, r3
 8021938:	10c3      	asrs	r3, r0, #3
 802193a:	10d1      	asrs	r1, r2, #3
 802193c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021940:	00d2      	lsls	r2, r2, #3
 8021942:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021946:	b2ad      	uxth	r5, r5
 8021948:	fb13 f30c 	smulbb	r3, r3, ip
 802194c:	b2d2      	uxtb	r2, r2
 802194e:	fb01 3104 	mla	r1, r1, r4, r3
 8021952:	00c3      	lsls	r3, r0, #3
 8021954:	b2db      	uxtb	r3, r3
 8021956:	b289      	uxth	r1, r1
 8021958:	fb13 f30c 	smulbb	r3, r3, ip
 802195c:	fb02 3304 	mla	r3, r2, r4, r3
 8021960:	b29a      	uxth	r2, r3
 8021962:	1c6b      	adds	r3, r5, #1
 8021964:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021968:	1c53      	adds	r3, r2, #1
 802196a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802196e:	1c4a      	adds	r2, r1, #1
 8021970:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021974:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021978:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802197c:	0949      	lsrs	r1, r1, #5
 802197e:	432b      	orrs	r3, r5
 8021980:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021984:	430b      	orrs	r3, r1
 8021986:	803b      	strh	r3, [r7, #0]
 8021988:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802198a:	3702      	adds	r7, #2
 802198c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802198e:	4413      	add	r3, r2
 8021990:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021992:	9321      	str	r3, [sp, #132]	; 0x84
 8021994:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021996:	441a      	add	r2, r3
 8021998:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802199a:	3b01      	subs	r3, #1
 802199c:	9222      	str	r2, [sp, #136]	; 0x88
 802199e:	9313      	str	r3, [sp, #76]	; 0x4c
 80219a0:	e687      	b.n	80216b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80219a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80219a4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80219a6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80219a8:	4433      	add	r3, r6
 80219aa:	9321      	str	r3, [sp, #132]	; 0x84
 80219ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80219ae:	441c      	add	r4, r3
 80219b0:	9b08      	ldr	r3, [sp, #32]
 80219b2:	3b01      	subs	r3, #1
 80219b4:	9422      	str	r4, [sp, #136]	; 0x88
 80219b6:	9308      	str	r3, [sp, #32]
 80219b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219ba:	3302      	adds	r3, #2
 80219bc:	9309      	str	r3, [sp, #36]	; 0x24
 80219be:	e656      	b.n	802166e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80219c0:	d028      	beq.n	8021a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 80219c2:	9b08      	ldr	r3, [sp, #32]
 80219c4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80219c6:	3b01      	subs	r3, #1
 80219c8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80219ca:	fb00 5003 	mla	r0, r0, r3, r5
 80219ce:	1400      	asrs	r0, r0, #16
 80219d0:	f53f ae6a 	bmi.w	80216a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80219d4:	3901      	subs	r1, #1
 80219d6:	4288      	cmp	r0, r1
 80219d8:	f6bf ae66 	bge.w	80216a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80219dc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80219de:	9822      	ldr	r0, [sp, #136]	; 0x88
 80219e0:	fb01 0303 	mla	r3, r1, r3, r0
 80219e4:	141b      	asrs	r3, r3, #16
 80219e6:	f53f ae5f 	bmi.w	80216a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80219ea:	3a01      	subs	r2, #1
 80219ec:	4293      	cmp	r3, r2
 80219ee:	f6bf ae5b 	bge.w	80216a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80219f2:	9b08      	ldr	r3, [sp, #32]
 80219f4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80219f8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80219fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80219fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021a00:	2b00      	cmp	r3, #0
 8021a02:	f300 8082 	bgt.w	8021b0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 8021a06:	9b08      	ldr	r3, [sp, #32]
 8021a08:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021a0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a0e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021a12:	9309      	str	r3, [sp, #36]	; 0x24
 8021a14:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021a16:	2b00      	cmp	r3, #0
 8021a18:	f340 81ef 	ble.w	8021dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8021a1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021a20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021a22:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021a26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021a2a:	eef0 6a62 	vmov.f32	s13, s5
 8021a2e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021a32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a3a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021a3e:	eef0 6a43 	vmov.f32	s13, s6
 8021a42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021a46:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021a4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021a4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021a52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021a56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021a5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021a5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021a62:	ee12 2a90 	vmov	r2, s5
 8021a66:	eef0 2a47 	vmov.f32	s5, s14
 8021a6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a6e:	ee13 2a10 	vmov	r2, s6
 8021a72:	9323      	str	r3, [sp, #140]	; 0x8c
 8021a74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021a76:	eeb0 3a67 	vmov.f32	s6, s15
 8021a7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021a7e:	9324      	str	r3, [sp, #144]	; 0x90
 8021a80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021a82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021a84:	3b01      	subs	r3, #1
 8021a86:	9311      	str	r3, [sp, #68]	; 0x44
 8021a88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021a8a:	bf08      	it	eq
 8021a8c:	4613      	moveq	r3, r2
 8021a8e:	9308      	str	r3, [sp, #32]
 8021a90:	e5df      	b.n	8021652 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021a92:	fb08 f505 	mul.w	r5, r8, r5
 8021a96:	fb09 5303 	mla	r3, r9, r3, r5
 8021a9a:	e65f      	b.n	802175c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021a9c:	4681      	mov	r9, r0
 8021a9e:	e686      	b.n	80217ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021aa0:	f1c1 0210 	rsb	r2, r1, #16
 8021aa4:	4341      	muls	r1, r0
 8021aa6:	fb09 1902 	mla	r9, r9, r2, r1
 8021aaa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021aae:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021ab2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021ab6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021aba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021abe:	ea42 0909 	orr.w	r9, r2, r9
 8021ac2:	fa1f f289 	uxth.w	r2, r9
 8021ac6:	e71b      	b.n	8021900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8021ac8:	803a      	strh	r2, [r7, #0]
 8021aca:	e75d      	b.n	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021acc:	f115 0e01 	adds.w	lr, r5, #1
 8021ad0:	f53f af5a 	bmi.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021ad4:	4572      	cmp	r2, lr
 8021ad6:	f6ff af57 	blt.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021ada:	f110 0e01 	adds.w	lr, r0, #1
 8021ade:	f53f af53 	bmi.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021ae2:	4573      	cmp	r3, lr
 8021ae4:	f6ff af50 	blt.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021ae8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021aea:	b21b      	sxth	r3, r3
 8021aec:	b212      	sxth	r2, r2
 8021aee:	9502      	str	r5, [sp, #8]
 8021af0:	9301      	str	r3, [sp, #4]
 8021af2:	9200      	str	r2, [sp, #0]
 8021af4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021af8:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021afc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021b00:	4639      	mov	r1, r7
 8021b02:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021b04:	f7ff fc02 	bl	802130c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021b08:	e73e      	b.n	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021b0a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021b0c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021b10:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021b12:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021b16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021b18:	fa1f fc82 	uxth.w	ip, r2
 8021b1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b20:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021b22:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021b26:	141f      	asrs	r7, r3, #16
 8021b28:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021b2a:	141b      	asrs	r3, r3, #16
 8021b2c:	fb01 3707 	mla	r7, r1, r7, r3
 8021b30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b32:	eb03 0a07 	add.w	sl, r3, r7
 8021b36:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021b3a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021b3e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021b42:	b29b      	uxth	r3, r3
 8021b44:	2d00      	cmp	r5, #0
 8021b46:	f000 813d 	beq.w	8021dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 8021b4a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021b4e:	eb0a 0b01 	add.w	fp, sl, r1
 8021b52:	fa1f fa85 	uxth.w	sl, r5
 8021b56:	940f      	str	r4, [sp, #60]	; 0x3c
 8021b58:	fb0a fc0c 	mul.w	ip, sl, ip
 8021b5c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021b60:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021b64:	eba0 000c 	sub.w	r0, r0, ip
 8021b68:	9410      	str	r4, [sp, #64]	; 0x40
 8021b6a:	fa1f fa8a 	uxth.w	sl, sl
 8021b6e:	b280      	uxth	r0, r0
 8021b70:	eba3 030a 	sub.w	r3, r3, sl
 8021b74:	fb08 f000 	mul.w	r0, r8, r0
 8021b78:	b29b      	uxth	r3, r3
 8021b7a:	fb09 0303 	mla	r3, r9, r3, r0
 8021b7e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021b80:	fb0a 3300 	mla	r3, sl, r0, r3
 8021b84:	fb0c 3304 	mla	r3, ip, r4, r3
 8021b88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b8c:	2b00      	cmp	r3, #0
 8021b8e:	f000 810b 	beq.w	8021da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 8021b92:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021b94:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021b98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b9a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021b9e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021ba2:	f000 8114 	beq.w	8021dce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021ba6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021baa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021bae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021bb2:	fb0a fc0c 	mul.w	ip, sl, ip
 8021bb6:	fb09 f707 	mul.w	r7, r9, r7
 8021bba:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021bbe:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021bc2:	f107 0b20 	add.w	fp, r7, #32
 8021bc6:	44cc      	add	ip, r9
 8021bc8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021bcc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021bd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021bd4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021bd8:	ea4c 0909 	orr.w	r9, ip, r9
 8021bdc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021be0:	8847      	ldrh	r7, [r0, #2]
 8021be2:	d019      	beq.n	8021c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 8021be4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021be8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021bec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021bf0:	fb0a fc0c 	mul.w	ip, sl, ip
 8021bf4:	fb08 f807 	mul.w	r8, r8, r7
 8021bf8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021bfc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021c00:	f108 0b20 	add.w	fp, r8, #32
 8021c04:	44bc      	add	ip, r7
 8021c06:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021c0a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021c0e:	0a3f      	lsrs	r7, r7, #8
 8021c10:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021c14:	ea4c 0707 	orr.w	r7, ip, r7
 8021c18:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021c1c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021c20:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021c24:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021c28:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021c2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c30:	ea4c 0909 	orr.w	r9, ip, r9
 8021c34:	ea4a 0707 	orr.w	r7, sl, r7
 8021c38:	2d00      	cmp	r5, #0
 8021c3a:	f000 80ca 	beq.w	8021dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 8021c3e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021c42:	3901      	subs	r1, #1
 8021c44:	0049      	lsls	r1, r1, #1
 8021c46:	3102      	adds	r1, #2
 8021c48:	eb00 0c01 	add.w	ip, r0, r1
 8021c4c:	5a41      	ldrh	r1, [r0, r1]
 8021c4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021c50:	28ff      	cmp	r0, #255	; 0xff
 8021c52:	d019      	beq.n	8021c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 8021c54:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021c58:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021c5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021c5e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c62:	fb04 fa01 	mul.w	sl, r4, r1
 8021c66:	fb08 f800 	mul.w	r8, r8, r0
 8021c6a:	f10a 0020 	add.w	r0, sl, #32
 8021c6e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021c72:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c76:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021c7a:	4441      	add	r1, r8
 8021c7c:	0a00      	lsrs	r0, r0, #8
 8021c7e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021c82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c86:	4301      	orrs	r1, r0
 8021c88:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021c8a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021c8e:	2cff      	cmp	r4, #255	; 0xff
 8021c90:	d01a      	beq.n	8021cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 8021c92:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021c96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c9a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c9e:	fb04 fa00 	mul.w	sl, r4, r0
 8021ca2:	fb08 f80c 	mul.w	r8, r8, ip
 8021ca6:	f10a 0c20 	add.w	ip, sl, #32
 8021caa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021cae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021cb2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021cb6:	4440      	add	r0, r8
 8021cb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021cbc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021cc0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021cc4:	ea40 000c 	orr.w	r0, r0, ip
 8021cc8:	fb15 fc02 	smulbb	ip, r5, r2
 8021ccc:	f1c5 0810 	rsb	r8, r5, #16
 8021cd0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021cd4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021cd8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021cdc:	eba8 0802 	sub.w	r8, r8, r2
 8021ce0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021ce4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ce8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021cec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021cf0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021cf4:	ea4a 0101 	orr.w	r1, sl, r1
 8021cf8:	437a      	muls	r2, r7
 8021cfa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021cfe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021d02:	fb09 2208 	mla	r2, r9, r8, r2
 8021d06:	ea4b 0000 	orr.w	r0, fp, r0
 8021d0a:	fb05 2201 	mla	r2, r5, r1, r2
 8021d0e:	fb0c 2200 	mla	r2, ip, r0, r2
 8021d12:	0d57      	lsrs	r7, r2, #21
 8021d14:	0952      	lsrs	r2, r2, #5
 8021d16:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d1a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021d1e:	433a      	orrs	r2, r7
 8021d20:	2bff      	cmp	r3, #255	; 0xff
 8021d22:	b292      	uxth	r2, r2
 8021d24:	d102      	bne.n	8021d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8021d26:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021d28:	29ff      	cmp	r1, #255	; 0xff
 8021d2a:	d063      	beq.n	8021df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 8021d2c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021d2e:	1215      	asrs	r5, r2, #8
 8021d30:	f8be 1000 	ldrh.w	r1, [lr]
 8021d34:	4343      	muls	r3, r0
 8021d36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021d38:	10cf      	asrs	r7, r1, #3
 8021d3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021d3e:	1c58      	adds	r0, r3, #1
 8021d40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021d44:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021d48:	1208      	asrs	r0, r1, #8
 8021d4a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021d4e:	00c9      	lsls	r1, r1, #3
 8021d50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021d54:	b2db      	uxtb	r3, r3
 8021d56:	b2c9      	uxtb	r1, r1
 8021d58:	fb10 f003 	smulbb	r0, r0, r3
 8021d5c:	fb11 f103 	smulbb	r1, r1, r3
 8021d60:	fb05 0504 	mla	r5, r5, r4, r0
 8021d64:	10d0      	asrs	r0, r2, #3
 8021d66:	fb17 f703 	smulbb	r7, r7, r3
 8021d6a:	00d2      	lsls	r2, r2, #3
 8021d6c:	b2ad      	uxth	r5, r5
 8021d6e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021d72:	b2d2      	uxtb	r2, r2
 8021d74:	fb00 7004 	mla	r0, r0, r4, r7
 8021d78:	1c6b      	adds	r3, r5, #1
 8021d7a:	fb02 1204 	mla	r2, r2, r4, r1
 8021d7e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021d82:	b292      	uxth	r2, r2
 8021d84:	b280      	uxth	r0, r0
 8021d86:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021d8a:	1c57      	adds	r7, r2, #1
 8021d8c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021d90:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021d94:	433d      	orrs	r5, r7
 8021d96:	1c47      	adds	r7, r0, #1
 8021d98:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021d9c:	097f      	lsrs	r7, r7, #5
 8021d9e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021da2:	433d      	orrs	r5, r7
 8021da4:	f8ae 5000 	strh.w	r5, [lr]
 8021da8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021daa:	f10e 0e02 	add.w	lr, lr, #2
 8021dae:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021db0:	4413      	add	r3, r2
 8021db2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021db4:	9321      	str	r3, [sp, #132]	; 0x84
 8021db6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021db8:	441a      	add	r2, r3
 8021dba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021dbc:	3b01      	subs	r3, #1
 8021dbe:	9222      	str	r2, [sp, #136]	; 0x88
 8021dc0:	9313      	str	r3, [sp, #76]	; 0x4c
 8021dc2:	e61c      	b.n	80219fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021dc4:	fb08 f000 	mul.w	r0, r8, r0
 8021dc8:	fb09 0303 	mla	r3, r9, r3, r0
 8021dcc:	e6dc      	b.n	8021b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 8021dce:	46b9      	mov	r9, r7
 8021dd0:	e704      	b.n	8021bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 8021dd2:	f1c2 0110 	rsb	r1, r2, #16
 8021dd6:	437a      	muls	r2, r7
 8021dd8:	fb09 2901 	mla	r9, r9, r1, r2
 8021ddc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021de0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021de4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021de8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021df0:	4302      	orrs	r2, r0
 8021df2:	e795      	b.n	8021d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 8021df4:	f8ae 2000 	strh.w	r2, [lr]
 8021df8:	e7d6      	b.n	8021da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 8021dfa:	b017      	add	sp, #92	; 0x5c
 8021dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021e00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e04:	b085      	sub	sp, #20
 8021e06:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021e0a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021e0e:	2800      	cmp	r0, #0
 8021e10:	9103      	str	r1, [sp, #12]
 8021e12:	fb00 7406 	mla	r4, r0, r6, r7
 8021e16:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021e1a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021e1e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021e22:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021e26:	eb02 0904 	add.w	r9, r2, r4
 8021e2a:	9501      	str	r5, [sp, #4]
 8021e2c:	f2c0 8141 	blt.w	80220b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021e30:	4583      	cmp	fp, r0
 8021e32:	f340 813e 	ble.w	80220b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021e36:	2f00      	cmp	r7, #0
 8021e38:	f2c0 8137 	blt.w	80220aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021e3c:	42be      	cmp	r6, r7
 8021e3e:	f340 8134 	ble.w	80220aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021e42:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021e46:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021e4a:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021e4e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021e52:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021e56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e5a:	4355      	muls	r5, r2
 8021e5c:	fb0c f203 	mul.w	r2, ip, r3
 8021e60:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021e64:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021e68:	441d      	add	r5, r3
 8021e6a:	f102 0320 	add.w	r3, r2, #32
 8021e6e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021e72:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021e76:	0a1b      	lsrs	r3, r3, #8
 8021e78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e7c:	431c      	orrs	r4, r3
 8021e7e:	1c7b      	adds	r3, r7, #1
 8021e80:	f100 811c 	bmi.w	80220bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021e84:	429e      	cmp	r6, r3
 8021e86:	f340 8119 	ble.w	80220bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021e8a:	2900      	cmp	r1, #0
 8021e8c:	f000 8119 	beq.w	80220c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021e90:	9a01      	ldr	r2, [sp, #4]
 8021e92:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021e96:	8855      	ldrh	r5, [r2, #2]
 8021e98:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021e9c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021ea0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ea4:	fb08 f802 	mul.w	r8, r8, r2
 8021ea8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021eac:	435d      	muls	r5, r3
 8021eae:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021eb2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021eb6:	44d0      	add	r8, sl
 8021eb8:	f105 0a20 	add.w	sl, r5, #32
 8021ebc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021ec0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021ec4:	0a2d      	lsrs	r5, r5, #8
 8021ec6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021eca:	432a      	orrs	r2, r5
 8021ecc:	3001      	adds	r0, #1
 8021ece:	f100 80fe 	bmi.w	80220ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021ed2:	4583      	cmp	fp, r0
 8021ed4:	f340 80fb 	ble.w	80220ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021ed8:	f1be 0f00 	cmp.w	lr, #0
 8021edc:	f000 80fc 	beq.w	80220d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021ee0:	2f00      	cmp	r7, #0
 8021ee2:	f2c0 80f1 	blt.w	80220c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021ee6:	42be      	cmp	r6, r7
 8021ee8:	f340 80ee 	ble.w	80220c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021eec:	9801      	ldr	r0, [sp, #4]
 8021eee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021ef2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021ef6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021efa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021efe:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021f02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021f06:	fb0a fa00 	mul.w	sl, sl, r0
 8021f0a:	fb05 f808 	mul.w	r8, r5, r8
 8021f0e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021f12:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021f16:	4482      	add	sl, r0
 8021f18:	f108 0020 	add.w	r0, r8, #32
 8021f1c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021f20:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021f24:	0a00      	lsrs	r0, r0, #8
 8021f26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f2a:	ea4b 0b00 	orr.w	fp, fp, r0
 8021f2e:	3701      	adds	r7, #1
 8021f30:	f100 80d7 	bmi.w	80220e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021f34:	42be      	cmp	r6, r7
 8021f36:	f340 80d4 	ble.w	80220e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021f3a:	2900      	cmp	r1, #0
 8021f3c:	f000 80d4 	beq.w	80220e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021f40:	3601      	adds	r6, #1
 8021f42:	9801      	ldr	r0, [sp, #4]
 8021f44:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021f48:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021f4c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021f50:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021f54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f58:	fb09 f906 	mul.w	r9, r9, r6
 8021f5c:	fb07 f800 	mul.w	r8, r7, r0
 8021f60:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021f64:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021f68:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021f6c:	44d1      	add	r9, sl
 8021f6e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021f72:	f108 0020 	add.w	r0, r8, #32
 8021f76:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021f7a:	0a00      	lsrs	r0, r0, #8
 8021f7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f80:	4330      	orrs	r0, r6
 8021f82:	b28e      	uxth	r6, r1
 8021f84:	fa1f f98e 	uxth.w	r9, lr
 8021f88:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021f8c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021f90:	fb06 f809 	mul.w	r8, r6, r9
 8021f94:	0136      	lsls	r6, r6, #4
 8021f96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021f9a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021f9e:	9601      	str	r6, [sp, #4]
 8021fa0:	ea4a 0404 	orr.w	r4, sl, r4
 8021fa4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021fa8:	fa1f f689 	uxth.w	r6, r9
 8021fac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021fb0:	fb11 f90e 	smulbb	r9, r1, lr
 8021fb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021fb8:	9602      	str	r6, [sp, #8]
 8021fba:	4626      	mov	r6, r4
 8021fbc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021fc0:	f1ce 0410 	rsb	r4, lr, #16
 8021fc4:	ea4a 0202 	orr.w	r2, sl, r2
 8021fc8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021fcc:	1a64      	subs	r4, r4, r1
 8021fce:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021fd2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021fd6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021fda:	434a      	muls	r2, r1
 8021fdc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021fe0:	ea4a 0000 	orr.w	r0, sl, r0
 8021fe4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021fe8:	fb04 2406 	mla	r4, r4, r6, r2
 8021fec:	9903      	ldr	r1, [sp, #12]
 8021fee:	fb09 4200 	mla	r2, r9, r0, r4
 8021ff2:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021ff6:	9801      	ldr	r0, [sp, #4]
 8021ff8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021ffc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022000:	8809      	ldrh	r1, [r1, #0]
 8022002:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022006:	ea44 0b0b 	orr.w	fp, r4, fp
 802200a:	9c02      	ldr	r4, [sp, #8]
 802200c:	1b00      	subs	r0, r0, r4
 802200e:	9c01      	ldr	r4, [sp, #4]
 8022010:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022014:	eba4 0608 	sub.w	r6, r4, r8
 8022018:	b280      	uxth	r0, r0
 802201a:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802201e:	b2b6      	uxth	r6, r6
 8022020:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022024:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022028:	4373      	muls	r3, r6
 802202a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802202e:	fb0c 3300 	mla	r3, ip, r0, r3
 8022032:	9802      	ldr	r0, [sp, #8]
 8022034:	ea42 0e0e 	orr.w	lr, r2, lr
 8022038:	fb00 3505 	mla	r5, r0, r5, r3
 802203c:	120b      	asrs	r3, r1, #8
 802203e:	10c8      	asrs	r0, r1, #3
 8022040:	fb08 5707 	mla	r7, r8, r7, r5
 8022044:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022048:	00c9      	lsls	r1, r1, #3
 802204a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802204e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022052:	fa1f f28e 	uxth.w	r2, lr
 8022056:	b2c9      	uxtb	r1, r1
 8022058:	b2ff      	uxtb	r7, r7
 802205a:	437b      	muls	r3, r7
 802205c:	4378      	muls	r0, r7
 802205e:	434f      	muls	r7, r1
 8022060:	1c59      	adds	r1, r3, #1
 8022062:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022066:	1213      	asrs	r3, r2, #8
 8022068:	f023 0307 	bic.w	r3, r3, #7
 802206c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022070:	1c41      	adds	r1, r0, #1
 8022072:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022076:	10d1      	asrs	r1, r2, #3
 8022078:	021b      	lsls	r3, r3, #8
 802207a:	f021 0103 	bic.w	r1, r1, #3
 802207e:	00d2      	lsls	r2, r2, #3
 8022080:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022084:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022088:	00c9      	lsls	r1, r1, #3
 802208a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802208e:	430b      	orrs	r3, r1
 8022090:	1c79      	adds	r1, r7, #1
 8022092:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022096:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802209a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802209e:	431a      	orrs	r2, r3
 80220a0:	9b03      	ldr	r3, [sp, #12]
 80220a2:	801a      	strh	r2, [r3, #0]
 80220a4:	b005      	add	sp, #20
 80220a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80220aa:	f04f 0c00 	mov.w	ip, #0
 80220ae:	4664      	mov	r4, ip
 80220b0:	e6e5      	b.n	8021e7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80220b2:	2300      	movs	r3, #0
 80220b4:	469c      	mov	ip, r3
 80220b6:	461a      	mov	r2, r3
 80220b8:	461c      	mov	r4, r3
 80220ba:	e707      	b.n	8021ecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80220bc:	2300      	movs	r3, #0
 80220be:	461a      	mov	r2, r3
 80220c0:	e704      	b.n	8021ecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80220c2:	460b      	mov	r3, r1
 80220c4:	460a      	mov	r2, r1
 80220c6:	e701      	b.n	8021ecc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80220c8:	2500      	movs	r5, #0
 80220ca:	46ab      	mov	fp, r5
 80220cc:	e72f      	b.n	8021f2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80220ce:	2700      	movs	r7, #0
 80220d0:	463d      	mov	r5, r7
 80220d2:	4638      	mov	r0, r7
 80220d4:	46bb      	mov	fp, r7
 80220d6:	e754      	b.n	8021f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80220d8:	4677      	mov	r7, lr
 80220da:	4675      	mov	r5, lr
 80220dc:	4670      	mov	r0, lr
 80220de:	46f3      	mov	fp, lr
 80220e0:	e74f      	b.n	8021f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80220e2:	2700      	movs	r7, #0
 80220e4:	4638      	mov	r0, r7
 80220e6:	e74c      	b.n	8021f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80220e8:	460f      	mov	r7, r1
 80220ea:	4608      	mov	r0, r1
 80220ec:	e749      	b.n	8021f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080220f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80220f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220f4:	b093      	sub	sp, #76	; 0x4c
 80220f6:	9210      	str	r2, [sp, #64]	; 0x40
 80220f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80220fa:	9011      	str	r0, [sp, #68]	; 0x44
 80220fc:	910e      	str	r1, [sp, #56]	; 0x38
 80220fe:	6850      	ldr	r0, [r2, #4]
 8022100:	9306      	str	r3, [sp, #24]
 8022102:	6812      	ldr	r2, [r2, #0]
 8022104:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022108:	fb00 1303 	mla	r3, r0, r3, r1
 802210c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022110:	9307      	str	r3, [sp, #28]
 8022112:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022114:	681b      	ldr	r3, [r3, #0]
 8022116:	9308      	str	r3, [sp, #32]
 8022118:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802211a:	685b      	ldr	r3, [r3, #4]
 802211c:	9309      	str	r3, [sp, #36]	; 0x24
 802211e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022120:	2b00      	cmp	r3, #0
 8022122:	dc03      	bgt.n	802212c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022124:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022126:	2b00      	cmp	r3, #0
 8022128:	f340 83b6 	ble.w	8022898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802212c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802212e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022132:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022136:	1e48      	subs	r0, r1, #1
 8022138:	1e55      	subs	r5, r2, #1
 802213a:	9b06      	ldr	r3, [sp, #24]
 802213c:	2b00      	cmp	r3, #0
 802213e:	f340 8165 	ble.w	802240c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8022142:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022144:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022146:	1436      	asrs	r6, r6, #16
 8022148:	ea4f 4323 	mov.w	r3, r3, asr #16
 802214c:	d406      	bmi.n	802215c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802214e:	4286      	cmp	r6, r0
 8022150:	da04      	bge.n	802215c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022152:	2b00      	cmp	r3, #0
 8022154:	db02      	blt.n	802215c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022156:	42ab      	cmp	r3, r5
 8022158:	f2c0 8159 	blt.w	802240e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802215c:	3601      	adds	r6, #1
 802215e:	f100 8146 	bmi.w	80223ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8022162:	42b1      	cmp	r1, r6
 8022164:	f2c0 8143 	blt.w	80223ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8022168:	3301      	adds	r3, #1
 802216a:	f100 8140 	bmi.w	80223ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 802216e:	429a      	cmp	r2, r3
 8022170:	f2c0 813d 	blt.w	80223ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8022174:	9b06      	ldr	r3, [sp, #24]
 8022176:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802217a:	9f07      	ldr	r7, [sp, #28]
 802217c:	930f      	str	r3, [sp, #60]	; 0x3c
 802217e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022180:	2b00      	cmp	r3, #0
 8022182:	f340 8166 	ble.w	8022452 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022186:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022188:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802218a:	1418      	asrs	r0, r3, #16
 802218c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802218e:	142d      	asrs	r5, r5, #16
 8022190:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022194:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022196:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802219a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802219c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80221a0:	f100 81f0 	bmi.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80221a4:	f102 3eff 	add.w	lr, r2, #4294967295
 80221a8:	4575      	cmp	r5, lr
 80221aa:	f280 81eb 	bge.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80221ae:	2800      	cmp	r0, #0
 80221b0:	f2c0 81e8 	blt.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80221b4:	f103 3eff 	add.w	lr, r3, #4294967295
 80221b8:	4570      	cmp	r0, lr
 80221ba:	f280 81e3 	bge.w	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80221be:	b212      	sxth	r2, r2
 80221c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221c2:	fa1f fe81 	uxth.w	lr, r1
 80221c6:	fb00 5002 	mla	r0, r0, r2, r5
 80221ca:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80221ce:	eb03 0a00 	add.w	sl, r3, r0
 80221d2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80221d6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80221da:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80221de:	b29b      	uxth	r3, r3
 80221e0:	f1bc 0f00 	cmp.w	ip, #0
 80221e4:	f000 817b 	beq.w	80224de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80221e8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80221ec:	eb0a 0b02 	add.w	fp, sl, r2
 80221f0:	fa1f fa8c 	uxth.w	sl, ip
 80221f4:	940a      	str	r4, [sp, #40]	; 0x28
 80221f6:	fb0a fe0e 	mul.w	lr, sl, lr
 80221fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80221fe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022202:	eba5 050e 	sub.w	r5, r5, lr
 8022206:	940b      	str	r4, [sp, #44]	; 0x2c
 8022208:	fa1f fa8a 	uxth.w	sl, sl
 802220c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802220e:	b2ad      	uxth	r5, r5
 8022210:	eba3 030a 	sub.w	r3, r3, sl
 8022214:	fb08 f505 	mul.w	r5, r8, r5
 8022218:	b29b      	uxth	r3, r3
 802221a:	fb09 5303 	mla	r3, r9, r3, r5
 802221e:	fb0a 3304 	mla	r3, sl, r4, r3
 8022222:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022224:	fb0e 3304 	mla	r3, lr, r4, r3
 8022228:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802222c:	2b00      	cmp	r3, #0
 802222e:	f000 80d1 	beq.w	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022232:	9c08      	ldr	r4, [sp, #32]
 8022234:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022238:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802223c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022240:	f000 8152 	beq.w	80224e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022244:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022248:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802224c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022250:	fb0a fe0e 	mul.w	lr, sl, lr
 8022254:	fb09 f000 	mul.w	r0, r9, r0
 8022258:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802225c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022260:	f100 0b20 	add.w	fp, r0, #32
 8022264:	44ce      	add	lr, r9
 8022266:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802226a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802226e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022272:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022276:	ea4e 0909 	orr.w	r9, lr, r9
 802227a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802227e:	8868      	ldrh	r0, [r5, #2]
 8022280:	d019      	beq.n	80222b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022282:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022286:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802228a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802228e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022292:	fb08 f800 	mul.w	r8, r8, r0
 8022296:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802229a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802229e:	f108 0b20 	add.w	fp, r8, #32
 80222a2:	4486      	add	lr, r0
 80222a4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80222a8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80222ac:	0a00      	lsrs	r0, r0, #8
 80222ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222b2:	ea4e 0000 	orr.w	r0, lr, r0
 80222b6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80222ba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80222be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80222c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80222c6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80222ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80222ce:	ea4e 0909 	orr.w	r9, lr, r9
 80222d2:	ea4a 0000 	orr.w	r0, sl, r0
 80222d6:	f1bc 0f00 	cmp.w	ip, #0
 80222da:	f000 8107 	beq.w	80224ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 80222de:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80222e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80222e4:	3a01      	subs	r2, #1
 80222e6:	2cff      	cmp	r4, #255	; 0xff
 80222e8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80222ec:	f102 0202 	add.w	r2, r2, #2
 80222f0:	eb05 0e02 	add.w	lr, r5, r2
 80222f4:	5aaa      	ldrh	r2, [r5, r2]
 80222f6:	d018      	beq.n	802232a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80222f8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80222fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022300:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022304:	fb04 fa02 	mul.w	sl, r4, r2
 8022308:	fb08 f805 	mul.w	r8, r8, r5
 802230c:	f10a 0520 	add.w	r5, sl, #32
 8022310:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022314:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022318:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802231c:	4442      	add	r2, r8
 802231e:	0a2d      	lsrs	r5, r5, #8
 8022320:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022324:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022328:	432a      	orrs	r2, r5
 802232a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802232c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022330:	2cff      	cmp	r4, #255	; 0xff
 8022332:	d01a      	beq.n	802236a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8022334:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022338:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802233c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022340:	fb04 fa05 	mul.w	sl, r4, r5
 8022344:	fb08 f80e 	mul.w	r8, r8, lr
 8022348:	f10a 0e20 	add.w	lr, sl, #32
 802234c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022350:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022354:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022358:	4445      	add	r5, r8
 802235a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802235e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022362:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022366:	ea45 050e 	orr.w	r5, r5, lr
 802236a:	fb1c fe01 	smulbb	lr, ip, r1
 802236e:	f1cc 0810 	rsb	r8, ip, #16
 8022372:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022376:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802237a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802237e:	eba8 0801 	sub.w	r8, r8, r1
 8022382:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022386:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802238a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802238e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022392:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022396:	ea4a 0202 	orr.w	r2, sl, r2
 802239a:	4341      	muls	r1, r0
 802239c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80223a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80223a4:	fb09 1108 	mla	r1, r9, r8, r1
 80223a8:	ea4b 0505 	orr.w	r5, fp, r5
 80223ac:	fb0c 1102 	mla	r1, ip, r2, r1
 80223b0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80223b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80223b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80223bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80223c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80223c4:	ea42 0e0e 	orr.w	lr, r2, lr
 80223c8:	fa1f f28e 	uxth.w	r2, lr
 80223cc:	2bff      	cmp	r3, #255	; 0xff
 80223ce:	f040 80a1 	bne.w	8022514 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 80223d2:	803a      	strh	r2, [r7, #0]
 80223d4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80223d6:	3702      	adds	r7, #2
 80223d8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80223da:	4413      	add	r3, r2
 80223dc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80223de:	931d      	str	r3, [sp, #116]	; 0x74
 80223e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80223e2:	441a      	add	r2, r3
 80223e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80223e6:	3b01      	subs	r3, #1
 80223e8:	921e      	str	r2, [sp, #120]	; 0x78
 80223ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80223ec:	e6c7      	b.n	802217e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80223ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80223f0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80223f2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80223f4:	4433      	add	r3, r6
 80223f6:	931d      	str	r3, [sp, #116]	; 0x74
 80223f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80223fa:	441c      	add	r4, r3
 80223fc:	9b06      	ldr	r3, [sp, #24]
 80223fe:	3b01      	subs	r3, #1
 8022400:	941e      	str	r4, [sp, #120]	; 0x78
 8022402:	9306      	str	r3, [sp, #24]
 8022404:	9b07      	ldr	r3, [sp, #28]
 8022406:	3302      	adds	r3, #2
 8022408:	9307      	str	r3, [sp, #28]
 802240a:	e696      	b.n	802213a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802240c:	d028      	beq.n	8022460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802240e:	9b06      	ldr	r3, [sp, #24]
 8022410:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022412:	3b01      	subs	r3, #1
 8022414:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022416:	fb00 5003 	mla	r0, r0, r3, r5
 802241a:	1400      	asrs	r0, r0, #16
 802241c:	f53f aeaa 	bmi.w	8022174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022420:	3901      	subs	r1, #1
 8022422:	4288      	cmp	r0, r1
 8022424:	f6bf aea6 	bge.w	8022174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022428:	9920      	ldr	r1, [sp, #128]	; 0x80
 802242a:	981e      	ldr	r0, [sp, #120]	; 0x78
 802242c:	fb01 0303 	mla	r3, r1, r3, r0
 8022430:	141b      	asrs	r3, r3, #16
 8022432:	f53f ae9f 	bmi.w	8022174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022436:	3a01      	subs	r2, #1
 8022438:	4293      	cmp	r3, r2
 802243a:	f6bf ae9b 	bge.w	8022174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802243e:	9b06      	ldr	r3, [sp, #24]
 8022440:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022444:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022448:	930f      	str	r3, [sp, #60]	; 0x3c
 802244a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802244c:	2b00      	cmp	r3, #0
 802244e:	f300 80b6 	bgt.w	80225be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8022452:	9b06      	ldr	r3, [sp, #24]
 8022454:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022458:	9b07      	ldr	r3, [sp, #28]
 802245a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802245e:	9307      	str	r3, [sp, #28]
 8022460:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022462:	2b00      	cmp	r3, #0
 8022464:	f340 8218 	ble.w	8022898 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022468:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802246c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802246e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022472:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022476:	eef0 6a62 	vmov.f32	s13, s5
 802247a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802247e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022486:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802248a:	eef0 6a43 	vmov.f32	s13, s6
 802248e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022492:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802249a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802249e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80224a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80224a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80224aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80224ae:	ee12 2a90 	vmov	r2, s5
 80224b2:	eef0 2a47 	vmov.f32	s5, s14
 80224b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80224ba:	ee13 2a10 	vmov	r2, s6
 80224be:	931f      	str	r3, [sp, #124]	; 0x7c
 80224c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80224c2:	eeb0 3a67 	vmov.f32	s6, s15
 80224c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80224ca:	9320      	str	r3, [sp, #128]	; 0x80
 80224cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80224ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80224d0:	3b01      	subs	r3, #1
 80224d2:	930e      	str	r3, [sp, #56]	; 0x38
 80224d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80224d6:	bf08      	it	eq
 80224d8:	4613      	moveq	r3, r2
 80224da:	9306      	str	r3, [sp, #24]
 80224dc:	e61f      	b.n	802211e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80224de:	fb08 f505 	mul.w	r5, r8, r5
 80224e2:	fb09 5303 	mla	r3, r9, r3, r5
 80224e6:	e69f      	b.n	8022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80224e8:	4681      	mov	r9, r0
 80224ea:	e6c6      	b.n	802227a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80224ec:	f1c1 0210 	rsb	r2, r1, #16
 80224f0:	4341      	muls	r1, r0
 80224f2:	fb09 1902 	mla	r9, r9, r2, r1
 80224f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80224fa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80224fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022502:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022506:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802250a:	ea42 0909 	orr.w	r9, r2, r9
 802250e:	fa1f f289 	uxth.w	r2, r9
 8022512:	e75b      	b.n	80223cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 8022514:	f8b7 c000 	ldrh.w	ip, [r7]
 8022518:	43db      	mvns	r3, r3
 802251a:	ea4f 202c 	mov.w	r0, ip, asr #8
 802251e:	fa5f fe83 	uxtb.w	lr, r3
 8022522:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022526:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802252a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802252e:	fb00 f00e 	mul.w	r0, r0, lr
 8022532:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022536:	b2db      	uxtb	r3, r3
 8022538:	1c41      	adds	r1, r0, #1
 802253a:	fb05 f50e 	mul.w	r5, r5, lr
 802253e:	fb03 f30e 	mul.w	r3, r3, lr
 8022542:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022546:	1211      	asrs	r1, r2, #8
 8022548:	f021 0107 	bic.w	r1, r1, #7
 802254c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022550:	48d3      	ldr	r0, [pc, #844]	; (80228a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8022552:	b2c9      	uxtb	r1, r1
 8022554:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022558:	1c69      	adds	r1, r5, #1
 802255a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802255e:	10d1      	asrs	r1, r2, #3
 8022560:	00d2      	lsls	r2, r2, #3
 8022562:	f021 0103 	bic.w	r1, r1, #3
 8022566:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802256a:	00c9      	lsls	r1, r1, #3
 802256c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022570:	4301      	orrs	r1, r0
 8022572:	1c58      	adds	r0, r3, #1
 8022574:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022578:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802257c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022580:	430a      	orrs	r2, r1
 8022582:	e726      	b.n	80223d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022584:	f115 0e01 	adds.w	lr, r5, #1
 8022588:	f53f af24 	bmi.w	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802258c:	4572      	cmp	r2, lr
 802258e:	f6ff af21 	blt.w	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022592:	f110 0e01 	adds.w	lr, r0, #1
 8022596:	f53f af1d 	bmi.w	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802259a:	4573      	cmp	r3, lr
 802259c:	f6ff af1a 	blt.w	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80225a0:	b21b      	sxth	r3, r3
 80225a2:	b212      	sxth	r2, r2
 80225a4:	9301      	str	r3, [sp, #4]
 80225a6:	9200      	str	r2, [sp, #0]
 80225a8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80225ac:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80225b0:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80225b4:	4639      	mov	r1, r7
 80225b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80225b8:	f7ff fc22 	bl	8021e00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80225bc:	e70a      	b.n	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80225be:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80225c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80225c4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80225c6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80225ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80225cc:	fa1f fc82 	uxth.w	ip, r2
 80225d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80225d4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80225d6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80225da:	141f      	asrs	r7, r3, #16
 80225dc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80225de:	141b      	asrs	r3, r3, #16
 80225e0:	fb01 3707 	mla	r7, r1, r7, r3
 80225e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80225e6:	eb03 0a07 	add.w	sl, r3, r7
 80225ea:	f813 9007 	ldrb.w	r9, [r3, r7]
 80225ee:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80225f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80225f6:	b29b      	uxth	r3, r3
 80225f8:	2d00      	cmp	r5, #0
 80225fa:	f000 80fe 	beq.w	80227fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 80225fe:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022602:	eb0a 0b01 	add.w	fp, sl, r1
 8022606:	fa1f fa85 	uxth.w	sl, r5
 802260a:	940c      	str	r4, [sp, #48]	; 0x30
 802260c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022610:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022614:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022618:	eba0 000c 	sub.w	r0, r0, ip
 802261c:	940d      	str	r4, [sp, #52]	; 0x34
 802261e:	fa1f fa8a 	uxth.w	sl, sl
 8022622:	b280      	uxth	r0, r0
 8022624:	eba3 030a 	sub.w	r3, r3, sl
 8022628:	fb08 f000 	mul.w	r0, r8, r0
 802262c:	b29b      	uxth	r3, r3
 802262e:	fb09 0303 	mla	r3, r9, r3, r0
 8022632:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022634:	fb0a 3300 	mla	r3, sl, r0, r3
 8022638:	fb0c 3304 	mla	r3, ip, r4, r3
 802263c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022640:	2b00      	cmp	r3, #0
 8022642:	f000 80cc 	beq.w	80227de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8022646:	9808      	ldr	r0, [sp, #32]
 8022648:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802264c:	9c08      	ldr	r4, [sp, #32]
 802264e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022652:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022656:	f000 80d5 	beq.w	8022804 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802265a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802265e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022662:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022666:	fb0a fc0c 	mul.w	ip, sl, ip
 802266a:	fb09 f707 	mul.w	r7, r9, r7
 802266e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022672:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022676:	f107 0b20 	add.w	fp, r7, #32
 802267a:	44cc      	add	ip, r9
 802267c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022680:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022684:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022688:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802268c:	ea4c 0909 	orr.w	r9, ip, r9
 8022690:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022694:	8847      	ldrh	r7, [r0, #2]
 8022696:	d019      	beq.n	80226cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 8022698:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802269c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80226a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80226a4:	fb0a fc0c 	mul.w	ip, sl, ip
 80226a8:	fb08 f807 	mul.w	r8, r8, r7
 80226ac:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80226b0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80226b4:	f108 0b20 	add.w	fp, r8, #32
 80226b8:	44bc      	add	ip, r7
 80226ba:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80226be:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80226c2:	0a3f      	lsrs	r7, r7, #8
 80226c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80226c8:	ea4c 0707 	orr.w	r7, ip, r7
 80226cc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80226d0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80226d4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80226d8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80226dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80226e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226e4:	ea4c 0909 	orr.w	r9, ip, r9
 80226e8:	ea4a 0707 	orr.w	r7, sl, r7
 80226ec:	2d00      	cmp	r5, #0
 80226ee:	f000 808b 	beq.w	8022808 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 80226f2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80226f6:	3901      	subs	r1, #1
 80226f8:	0049      	lsls	r1, r1, #1
 80226fa:	3102      	adds	r1, #2
 80226fc:	eb00 0c01 	add.w	ip, r0, r1
 8022700:	5a41      	ldrh	r1, [r0, r1]
 8022702:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022704:	28ff      	cmp	r0, #255	; 0xff
 8022706:	d019      	beq.n	802273c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8022708:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802270c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802270e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022712:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022716:	fb04 fa01 	mul.w	sl, r4, r1
 802271a:	fb08 f800 	mul.w	r8, r8, r0
 802271e:	f10a 0020 	add.w	r0, sl, #32
 8022722:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022726:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802272a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802272e:	4441      	add	r1, r8
 8022730:	0a00      	lsrs	r0, r0, #8
 8022732:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022736:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802273a:	4301      	orrs	r1, r0
 802273c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802273e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022742:	2cff      	cmp	r4, #255	; 0xff
 8022744:	d01a      	beq.n	802277c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 8022746:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802274a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802274e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022752:	fb04 fa00 	mul.w	sl, r4, r0
 8022756:	fb08 f80c 	mul.w	r8, r8, ip
 802275a:	f10a 0c20 	add.w	ip, sl, #32
 802275e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022762:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022766:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802276a:	4440      	add	r0, r8
 802276c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022770:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022774:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022778:	ea40 000c 	orr.w	r0, r0, ip
 802277c:	fb15 fc02 	smulbb	ip, r5, r2
 8022780:	f1c5 0810 	rsb	r8, r5, #16
 8022784:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022788:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802278c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022790:	eba8 0802 	sub.w	r8, r8, r2
 8022794:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022798:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802279c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80227a0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80227a4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80227a8:	ea4a 0101 	orr.w	r1, sl, r1
 80227ac:	437a      	muls	r2, r7
 80227ae:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80227b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80227b6:	fb09 2208 	mla	r2, r9, r8, r2
 80227ba:	ea4b 0000 	orr.w	r0, fp, r0
 80227be:	fb05 2201 	mla	r2, r5, r1, r2
 80227c2:	fb0c 2200 	mla	r2, ip, r0, r2
 80227c6:	0d57      	lsrs	r7, r2, #21
 80227c8:	0952      	lsrs	r2, r2, #5
 80227ca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80227d2:	433a      	orrs	r2, r7
 80227d4:	2bff      	cmp	r3, #255	; 0xff
 80227d6:	b292      	uxth	r2, r2
 80227d8:	d127      	bne.n	802282a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 80227da:	f8ae 2000 	strh.w	r2, [lr]
 80227de:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80227e0:	f10e 0e02 	add.w	lr, lr, #2
 80227e4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80227e6:	4413      	add	r3, r2
 80227e8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80227ea:	931d      	str	r3, [sp, #116]	; 0x74
 80227ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80227ee:	441a      	add	r2, r3
 80227f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80227f2:	3b01      	subs	r3, #1
 80227f4:	921e      	str	r2, [sp, #120]	; 0x78
 80227f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80227f8:	e627      	b.n	802244a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80227fa:	fb08 f000 	mul.w	r0, r8, r0
 80227fe:	fb09 0303 	mla	r3, r9, r3, r0
 8022802:	e71b      	b.n	802263c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 8022804:	46b9      	mov	r9, r7
 8022806:	e743      	b.n	8022690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 8022808:	f1c2 0110 	rsb	r1, r2, #16
 802280c:	437a      	muls	r2, r7
 802280e:	fb09 2901 	mla	r9, r9, r1, r2
 8022812:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022816:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802281a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802281e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022822:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022826:	4302      	orrs	r2, r0
 8022828:	e7d4      	b.n	80227d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 802282a:	f8be 7000 	ldrh.w	r7, [lr]
 802282e:	43db      	mvns	r3, r3
 8022830:	4c1b      	ldr	r4, [pc, #108]	; (80228a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8022832:	1238      	asrs	r0, r7, #8
 8022834:	fa5f fc83 	uxtb.w	ip, r3
 8022838:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802283c:	10fd      	asrs	r5, r7, #3
 802283e:	00fb      	lsls	r3, r7, #3
 8022840:	fb00 f00c 	mul.w	r0, r0, ip
 8022844:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022848:	b2db      	uxtb	r3, r3
 802284a:	fb05 f10c 	mul.w	r1, r5, ip
 802284e:	1c45      	adds	r5, r0, #1
 8022850:	fb03 f30c 	mul.w	r3, r3, ip
 8022854:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022858:	1215      	asrs	r5, r2, #8
 802285a:	f025 0507 	bic.w	r5, r5, #7
 802285e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022862:	1c4d      	adds	r5, r1, #1
 8022864:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022868:	10d1      	asrs	r1, r2, #3
 802286a:	b2c0      	uxtb	r0, r0
 802286c:	f021 0103 	bic.w	r1, r1, #3
 8022870:	00d2      	lsls	r2, r2, #3
 8022872:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022876:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802287a:	00c9      	lsls	r1, r1, #3
 802287c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022880:	4308      	orrs	r0, r1
 8022882:	1c59      	adds	r1, r3, #1
 8022884:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022888:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802288c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022890:	4318      	orrs	r0, r3
 8022892:	f8ae 0000 	strh.w	r0, [lr]
 8022896:	e7a2      	b.n	80227de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8022898:	b013      	add	sp, #76	; 0x4c
 802289a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802289e:	bf00      	nop
 80228a0:	fffff800 	.word	0xfffff800

080228a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80228a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80228a8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80228ac:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80228b0:	fb05 4c03 	mla	ip, r5, r3, r4
 80228b4:	2d00      	cmp	r5, #0
 80228b6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80228ba:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80228be:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80228c2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80228c6:	8808      	ldrh	r0, [r1, #0]
 80228c8:	f2c0 80a7 	blt.w	8022a1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80228cc:	45aa      	cmp	sl, r5
 80228ce:	f340 80a4 	ble.w	8022a1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80228d2:	2c00      	cmp	r4, #0
 80228d4:	f2c0 809f 	blt.w	8022a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80228d8:	42a3      	cmp	r3, r4
 80228da:	f340 809c 	ble.w	8022a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80228de:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80228e2:	1c62      	adds	r2, r4, #1
 80228e4:	f100 809c 	bmi.w	8022a20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80228e8:	4293      	cmp	r3, r2
 80228ea:	f340 8099 	ble.w	8022a20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80228ee:	f1b9 0f00 	cmp.w	r9, #0
 80228f2:	f000 8095 	beq.w	8022a20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80228f6:	f8be c002 	ldrh.w	ip, [lr, #2]
 80228fa:	3501      	adds	r5, #1
 80228fc:	f100 8094 	bmi.w	8022a28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022900:	45aa      	cmp	sl, r5
 8022902:	f340 8091 	ble.w	8022a28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022906:	2f00      	cmp	r7, #0
 8022908:	f000 808e 	beq.w	8022a28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802290c:	2c00      	cmp	r4, #0
 802290e:	f2c0 8089 	blt.w	8022a24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022912:	42a3      	cmp	r3, r4
 8022914:	f340 8086 	ble.w	8022a24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022918:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 802291c:	3401      	adds	r4, #1
 802291e:	f100 8086 	bmi.w	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022922:	42a3      	cmp	r3, r4
 8022924:	f340 8083 	ble.w	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022928:	f1b9 0f00 	cmp.w	r9, #0
 802292c:	d07f      	beq.n	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802292e:	3301      	adds	r3, #1
 8022930:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022934:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022938:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802293c:	fb19 fe07 	smulbb	lr, r9, r7
 8022940:	f1c7 0210 	rsb	r2, r7, #16
 8022944:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022948:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802294c:	eba2 0209 	sub.w	r2, r2, r9
 8022950:	ea44 0808 	orr.w	r8, r4, r8
 8022954:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022958:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802295c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022960:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022964:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022968:	ea44 0c0c 	orr.w	ip, r4, ip
 802296c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022970:	fb04 f40c 	mul.w	r4, r4, ip
 8022974:	fb02 4808 	mla	r8, r2, r8, r4
 8022978:	041a      	lsls	r2, r3, #16
 802297a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802297e:	b2b4      	uxth	r4, r6
 8022980:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022984:	43f6      	mvns	r6, r6
 8022986:	4313      	orrs	r3, r2
 8022988:	042a      	lsls	r2, r5, #16
 802298a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802298e:	b2f6      	uxtb	r6, r6
 8022990:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022994:	fb0e 8303 	mla	r3, lr, r3, r8
 8022998:	432a      	orrs	r2, r5
 802299a:	fb07 3202 	mla	r2, r7, r2, r3
 802299e:	10c7      	asrs	r7, r0, #3
 80229a0:	0d53      	lsrs	r3, r2, #21
 80229a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80229a6:	0952      	lsrs	r2, r2, #5
 80229a8:	fb17 f706 	smulbb	r7, r7, r6
 80229ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80229b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80229b4:	431a      	orrs	r2, r3
 80229b6:	b293      	uxth	r3, r2
 80229b8:	1202      	asrs	r2, r0, #8
 80229ba:	121d      	asrs	r5, r3, #8
 80229bc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80229c0:	00c0      	lsls	r0, r0, #3
 80229c2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80229c6:	fb12 f206 	smulbb	r2, r2, r6
 80229ca:	b2c0      	uxtb	r0, r0
 80229cc:	fb05 2504 	mla	r5, r5, r4, r2
 80229d0:	10da      	asrs	r2, r3, #3
 80229d2:	fb10 f006 	smulbb	r0, r0, r6
 80229d6:	00db      	lsls	r3, r3, #3
 80229d8:	b2ad      	uxth	r5, r5
 80229da:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80229de:	b2db      	uxtb	r3, r3
 80229e0:	fb02 7204 	mla	r2, r2, r4, r7
 80229e4:	fb03 0004 	mla	r0, r3, r4, r0
 80229e8:	1c6b      	adds	r3, r5, #1
 80229ea:	b292      	uxth	r2, r2
 80229ec:	b280      	uxth	r0, r0
 80229ee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80229f2:	1c43      	adds	r3, r0, #1
 80229f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80229f8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80229fc:	1c50      	adds	r0, r2, #1
 80229fe:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022a02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022a06:	0952      	lsrs	r2, r2, #5
 8022a08:	432b      	orrs	r3, r5
 8022a0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a0e:	4313      	orrs	r3, r2
 8022a10:	800b      	strh	r3, [r1, #0]
 8022a12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022a16:	4680      	mov	r8, r0
 8022a18:	e763      	b.n	80228e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022a1a:	4684      	mov	ip, r0
 8022a1c:	4680      	mov	r8, r0
 8022a1e:	e76c      	b.n	80228fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022a20:	4684      	mov	ip, r0
 8022a22:	e76a      	b.n	80228fa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022a24:	4605      	mov	r5, r0
 8022a26:	e779      	b.n	802291c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022a28:	4603      	mov	r3, r0
 8022a2a:	4605      	mov	r5, r0
 8022a2c:	e782      	b.n	8022934 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022a2e:	4603      	mov	r3, r0
 8022a30:	e780      	b.n	8022934 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022a32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022a32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a36:	b093      	sub	sp, #76	; 0x4c
 8022a38:	461d      	mov	r5, r3
 8022a3a:	9210      	str	r2, [sp, #64]	; 0x40
 8022a3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022a3e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022a42:	910a      	str	r1, [sp, #40]	; 0x28
 8022a44:	920b      	str	r2, [sp, #44]	; 0x2c
 8022a46:	6859      	ldr	r1, [r3, #4]
 8022a48:	681b      	ldr	r3, [r3, #0]
 8022a4a:	9011      	str	r0, [sp, #68]	; 0x44
 8022a4c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022a50:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022a54:	fb01 2707 	mla	r7, r1, r7, r2
 8022a58:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022a5c:	9307      	str	r3, [sp, #28]
 8022a5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a60:	681b      	ldr	r3, [r3, #0]
 8022a62:	9309      	str	r3, [sp, #36]	; 0x24
 8022a64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022a66:	43db      	mvns	r3, r3
 8022a68:	b2db      	uxtb	r3, r3
 8022a6a:	9308      	str	r3, [sp, #32]
 8022a6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022a6e:	2b00      	cmp	r3, #0
 8022a70:	dc03      	bgt.n	8022a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022a72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022a74:	2b00      	cmp	r3, #0
 8022a76:	f340 8205 	ble.w	8022e84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022a7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022a80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022a84:	1e48      	subs	r0, r1, #1
 8022a86:	f102 3cff 	add.w	ip, r2, #4294967295
 8022a8a:	2d00      	cmp	r5, #0
 8022a8c:	f340 80da 	ble.w	8022c44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022a90:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022a94:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022a98:	d406      	bmi.n	8022aa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022a9a:	4586      	cmp	lr, r0
 8022a9c:	da04      	bge.n	8022aa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022a9e:	2b00      	cmp	r3, #0
 8022aa0:	db02      	blt.n	8022aa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022aa2:	4563      	cmp	r3, ip
 8022aa4:	f2c0 80cf 	blt.w	8022c46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022aa8:	f11e 0e01 	adds.w	lr, lr, #1
 8022aac:	f100 80c1 	bmi.w	8022c32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ab0:	4571      	cmp	r1, lr
 8022ab2:	f2c0 80be 	blt.w	8022c32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ab6:	3301      	adds	r3, #1
 8022ab8:	f100 80bb 	bmi.w	8022c32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022abc:	429a      	cmp	r2, r3
 8022abe:	f2c0 80b8 	blt.w	8022c32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022ac2:	46a9      	mov	r9, r5
 8022ac4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022ac8:	f1b9 0f00 	cmp.w	r9, #0
 8022acc:	f340 80d8 	ble.w	8022c80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022ad0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ad2:	1421      	asrs	r1, r4, #16
 8022ad4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022ad8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022adc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022ae0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022ae4:	f100 8112 	bmi.w	8022d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022ae8:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022aec:	4551      	cmp	r1, sl
 8022aee:	f280 810d 	bge.w	8022d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022af2:	2800      	cmp	r0, #0
 8022af4:	f2c0 810a 	blt.w	8022d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022af8:	f103 3aff 	add.w	sl, r3, #4294967295
 8022afc:	4550      	cmp	r0, sl
 8022afe:	f280 8105 	bge.w	8022d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022b02:	fa0f f38e 	sxth.w	r3, lr
 8022b06:	fb00 1103 	mla	r1, r0, r3, r1
 8022b0a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022b0c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022b10:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022b14:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022b18:	f1bc 0f00 	cmp.w	ip, #0
 8022b1c:	d007      	beq.n	8022b2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022b1e:	005b      	lsls	r3, r3, #1
 8022b20:	eb0a 0003 	add.w	r0, sl, r3
 8022b24:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022b28:	930c      	str	r3, [sp, #48]	; 0x30
 8022b2a:	8843      	ldrh	r3, [r0, #2]
 8022b2c:	930d      	str	r3, [sp, #52]	; 0x34
 8022b2e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022b32:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022b36:	fb12 f30c 	smulbb	r3, r2, ip
 8022b3a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022b3e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022b42:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b46:	10db      	asrs	r3, r3, #3
 8022b48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022b4c:	ea40 000e 	orr.w	r0, r0, lr
 8022b50:	f1cc 0e10 	rsb	lr, ip, #16
 8022b54:	ea4a 0101 	orr.w	r1, sl, r1
 8022b58:	9f08      	ldr	r7, [sp, #32]
 8022b5a:	ebae 0e02 	sub.w	lr, lr, r2
 8022b5e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022b62:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022b66:	4351      	muls	r1, r2
 8022b68:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022b6a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022b6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022b70:	0410      	lsls	r0, r2, #16
 8022b72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022b76:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022b7a:	4310      	orrs	r0, r2
 8022b7c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022b7e:	0412      	lsls	r2, r2, #16
 8022b80:	fb03 e000 	mla	r0, r3, r0, lr
 8022b84:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022b88:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022b8c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022b90:	ea42 020e 	orr.w	r2, r2, lr
 8022b94:	fb03 0302 	mla	r3, r3, r2, r0
 8022b98:	f8b8 0000 	ldrh.w	r0, [r8]
 8022b9c:	0d5a      	lsrs	r2, r3, #21
 8022b9e:	095b      	lsrs	r3, r3, #5
 8022ba0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ba4:	1201      	asrs	r1, r0, #8
 8022ba6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022baa:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022bae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022bb2:	00c0      	lsls	r0, r0, #3
 8022bb4:	4313      	orrs	r3, r2
 8022bb6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022bba:	fb11 f107 	smulbb	r1, r1, r7
 8022bbe:	b2c0      	uxtb	r0, r0
 8022bc0:	b29b      	uxth	r3, r3
 8022bc2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022bc6:	fb10 f007 	smulbb	r0, r0, r7
 8022bca:	fb1e fe07 	smulbb	lr, lr, r7
 8022bce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022bd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022bd6:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022bda:	10d9      	asrs	r1, r3, #3
 8022bdc:	00db      	lsls	r3, r3, #3
 8022bde:	fa1f fc8c 	uxth.w	ip, ip
 8022be2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022be6:	b2db      	uxtb	r3, r3
 8022be8:	fb01 e102 	mla	r1, r1, r2, lr
 8022bec:	fb03 0302 	mla	r3, r3, r2, r0
 8022bf0:	b289      	uxth	r1, r1
 8022bf2:	b29a      	uxth	r2, r3
 8022bf4:	f10c 0301 	add.w	r3, ip, #1
 8022bf8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022bfc:	1c53      	adds	r3, r2, #1
 8022bfe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022c02:	1c4a      	adds	r2, r1, #1
 8022c04:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022c08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022c0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022c10:	0949      	lsrs	r1, r1, #5
 8022c12:	ea43 030c 	orr.w	r3, r3, ip
 8022c16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c1a:	430b      	orrs	r3, r1
 8022c1c:	f8a8 3000 	strh.w	r3, [r8]
 8022c20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c22:	f108 0802 	add.w	r8, r8, #2
 8022c26:	f109 39ff 	add.w	r9, r9, #4294967295
 8022c2a:	441c      	add	r4, r3
 8022c2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c2e:	441e      	add	r6, r3
 8022c30:	e74a      	b.n	8022ac8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022c32:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c34:	3d01      	subs	r5, #1
 8022c36:	441c      	add	r4, r3
 8022c38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c3a:	441e      	add	r6, r3
 8022c3c:	9b07      	ldr	r3, [sp, #28]
 8022c3e:	3302      	adds	r3, #2
 8022c40:	9307      	str	r3, [sp, #28]
 8022c42:	e722      	b.n	8022a8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022c44:	d022      	beq.n	8022c8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022c46:	1e6b      	subs	r3, r5, #1
 8022c48:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022c4a:	fb00 4003 	mla	r0, r0, r3, r4
 8022c4e:	1400      	asrs	r0, r0, #16
 8022c50:	f53f af37 	bmi.w	8022ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c54:	3901      	subs	r1, #1
 8022c56:	4288      	cmp	r0, r1
 8022c58:	f6bf af33 	bge.w	8022ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c5c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022c5e:	fb01 6303 	mla	r3, r1, r3, r6
 8022c62:	141b      	asrs	r3, r3, #16
 8022c64:	f53f af2d 	bmi.w	8022ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c68:	3a01      	subs	r2, #1
 8022c6a:	4293      	cmp	r3, r2
 8022c6c:	f6bf af29 	bge.w	8022ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022c70:	46a8      	mov	r8, r5
 8022c72:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022c76:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022c7a:	f1b8 0f00 	cmp.w	r8, #0
 8022c7e:	dc60      	bgt.n	8022d42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 8022c80:	9b07      	ldr	r3, [sp, #28]
 8022c82:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022c86:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022c8a:	9307      	str	r3, [sp, #28]
 8022c8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022c8e:	2b00      	cmp	r3, #0
 8022c90:	f340 80f8 	ble.w	8022e84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022c94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022c98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022c9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022c9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ca2:	eef0 6a62 	vmov.f32	s13, s5
 8022ca6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022caa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022cae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022cb2:	ee16 4a90 	vmov	r4, s13
 8022cb6:	eef0 6a43 	vmov.f32	s13, s6
 8022cba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022cbe:	ee16 6a90 	vmov	r6, s13
 8022cc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022cc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022cca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022cce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022cd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022cd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022cda:	ee12 2a90 	vmov	r2, s5
 8022cde:	eef0 2a47 	vmov.f32	s5, s14
 8022ce2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ce6:	ee13 2a10 	vmov	r2, s6
 8022cea:	931f      	str	r3, [sp, #124]	; 0x7c
 8022cec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022cee:	eeb0 3a67 	vmov.f32	s6, s15
 8022cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022cf6:	9320      	str	r3, [sp, #128]	; 0x80
 8022cf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022cfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022cfc:	3b01      	subs	r3, #1
 8022cfe:	930a      	str	r3, [sp, #40]	; 0x28
 8022d00:	bf08      	it	eq
 8022d02:	4615      	moveq	r5, r2
 8022d04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022d06:	bf18      	it	ne
 8022d08:	461d      	movne	r5, r3
 8022d0a:	e6af      	b.n	8022a6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022d0c:	f111 0a01 	adds.w	sl, r1, #1
 8022d10:	d486      	bmi.n	8022c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022d12:	45d6      	cmp	lr, sl
 8022d14:	db84      	blt.n	8022c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022d16:	f110 0a01 	adds.w	sl, r0, #1
 8022d1a:	d481      	bmi.n	8022c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022d1c:	4553      	cmp	r3, sl
 8022d1e:	f6ff af7f 	blt.w	8022c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022d22:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022d24:	b21b      	sxth	r3, r3
 8022d26:	9101      	str	r1, [sp, #4]
 8022d28:	4641      	mov	r1, r8
 8022d2a:	9300      	str	r3, [sp, #0]
 8022d2c:	fa0f f38e 	sxth.w	r3, lr
 8022d30:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022d34:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022d38:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022d3a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022d3c:	f7ff fdb2 	bl	80228a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022d40:	e76e      	b.n	8022c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022d42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d44:	1430      	asrs	r0, r6, #16
 8022d46:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022d48:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022d4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d50:	1423      	asrs	r3, r4, #16
 8022d52:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022d56:	fb01 3000 	mla	r0, r1, r0, r3
 8022d5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022d5c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022d60:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022d64:	8858      	ldrh	r0, [r3, #2]
 8022d66:	f1be 0f00 	cmp.w	lr, #0
 8022d6a:	d00b      	beq.n	8022d84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8022d6c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022d70:	3901      	subs	r1, #1
 8022d72:	0049      	lsls	r1, r1, #1
 8022d74:	3102      	adds	r1, #2
 8022d76:	eb03 0b01 	add.w	fp, r3, r1
 8022d7a:	5a5b      	ldrh	r3, [r3, r1]
 8022d7c:	930e      	str	r3, [sp, #56]	; 0x38
 8022d7e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022d82:	930f      	str	r3, [sp, #60]	; 0x3c
 8022d84:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022d88:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022d8c:	fb12 f30e 	smulbb	r3, r2, lr
 8022d90:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022d94:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022d98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d9c:	10db      	asrs	r3, r3, #3
 8022d9e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022da2:	ea41 010c 	orr.w	r1, r1, ip
 8022da6:	f1ce 0c10 	rsb	ip, lr, #16
 8022daa:	ea4b 0000 	orr.w	r0, fp, r0
 8022dae:	9f08      	ldr	r7, [sp, #32]
 8022db0:	ebac 0c02 	sub.w	ip, ip, r2
 8022db4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022db8:	f108 38ff 	add.w	r8, r8, #4294967295
 8022dbc:	4350      	muls	r0, r2
 8022dbe:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022dc2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022dc4:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022dc8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022dca:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022dce:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022dd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022dd4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022dd8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ddc:	0412      	lsls	r2, r2, #16
 8022dde:	ea4b 0101 	orr.w	r1, fp, r1
 8022de2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022de6:	fb03 c101 	mla	r1, r3, r1, ip
 8022dea:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022dee:	4302      	orrs	r2, r0
 8022df0:	fb03 1202 	mla	r2, r3, r2, r1
 8022df4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022df8:	0952      	lsrs	r2, r2, #5
 8022dfa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022dfe:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022e02:	f8b9 2000 	ldrh.w	r2, [r9]
 8022e06:	ea4b 0303 	orr.w	r3, fp, r3
 8022e0a:	1211      	asrs	r1, r2, #8
 8022e0c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022e10:	b29b      	uxth	r3, r3
 8022e12:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022e16:	00d2      	lsls	r2, r2, #3
 8022e18:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022e1c:	fb11 f107 	smulbb	r1, r1, r7
 8022e20:	1218      	asrs	r0, r3, #8
 8022e22:	fb1c fc07 	smulbb	ip, ip, r7
 8022e26:	b2d2      	uxtb	r2, r2
 8022e28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022e2c:	fb12 f207 	smulbb	r2, r2, r7
 8022e30:	fb00 100a 	mla	r0, r0, sl, r1
 8022e34:	10d9      	asrs	r1, r3, #3
 8022e36:	00db      	lsls	r3, r3, #3
 8022e38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022e3c:	b280      	uxth	r0, r0
 8022e3e:	b2db      	uxtb	r3, r3
 8022e40:	fb01 c10a 	mla	r1, r1, sl, ip
 8022e44:	fb03 230a 	mla	r3, r3, sl, r2
 8022e48:	1c42      	adds	r2, r0, #1
 8022e4a:	b289      	uxth	r1, r1
 8022e4c:	b29b      	uxth	r3, r3
 8022e4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022e52:	f101 0c01 	add.w	ip, r1, #1
 8022e56:	1c5a      	adds	r2, r3, #1
 8022e58:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022e5c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022e60:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022e64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e66:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022e6a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022e6e:	441c      	add	r4, r3
 8022e70:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022e74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e76:	4310      	orrs	r0, r2
 8022e78:	441e      	add	r6, r3
 8022e7a:	ea40 000c 	orr.w	r0, r0, ip
 8022e7e:	f829 0b02 	strh.w	r0, [r9], #2
 8022e82:	e6fa      	b.n	8022c7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022e84:	b013      	add	sp, #76	; 0x4c
 8022e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022e8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022e8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022e8e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022e92:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022e96:	fb0e 4703 	mla	r7, lr, r3, r4
 8022e9a:	f1be 0f00 	cmp.w	lr, #0
 8022e9e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022ea2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022ea6:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022eaa:	8808      	ldrh	r0, [r1, #0]
 8022eac:	db60      	blt.n	8022f70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022eae:	45f1      	cmp	r9, lr
 8022eb0:	dd5e      	ble.n	8022f70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022eb2:	2c00      	cmp	r4, #0
 8022eb4:	db5a      	blt.n	8022f6c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022eb6:	42a3      	cmp	r3, r4
 8022eb8:	dd58      	ble.n	8022f6c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022eba:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022ebe:	1c62      	adds	r2, r4, #1
 8022ec0:	d459      	bmi.n	8022f76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ec2:	4293      	cmp	r3, r2
 8022ec4:	dd57      	ble.n	8022f76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ec6:	2d00      	cmp	r5, #0
 8022ec8:	d055      	beq.n	8022f76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022eca:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022ece:	f11e 0e01 	adds.w	lr, lr, #1
 8022ed2:	d454      	bmi.n	8022f7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022ed4:	45f1      	cmp	r9, lr
 8022ed6:	dd52      	ble.n	8022f7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022ed8:	2e00      	cmp	r6, #0
 8022eda:	d050      	beq.n	8022f7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022edc:	2c00      	cmp	r4, #0
 8022ede:	db4c      	blt.n	8022f7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022ee0:	42a3      	cmp	r3, r4
 8022ee2:	dd4a      	ble.n	8022f7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022ee4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022ee8:	3401      	adds	r4, #1
 8022eea:	d405      	bmi.n	8022ef8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022eec:	42a3      	cmp	r3, r4
 8022eee:	dd03      	ble.n	8022ef8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022ef0:	b115      	cbz	r5, 8022ef8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022ef2:	3301      	adds	r3, #1
 8022ef4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022ef8:	fb15 f406 	smulbb	r4, r5, r6
 8022efc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022f00:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022f04:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022f08:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022f0c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022f10:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022f14:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022f18:	ea43 0c0c 	orr.w	ip, r3, ip
 8022f1c:	f1c6 0310 	rsb	r3, r6, #16
 8022f20:	ea4e 0707 	orr.w	r7, lr, r7
 8022f24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022f28:	1b5b      	subs	r3, r3, r5
 8022f2a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022f2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022f32:	437d      	muls	r5, r7
 8022f34:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022f38:	0403      	lsls	r3, r0, #16
 8022f3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f3e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022f42:	4318      	orrs	r0, r3
 8022f44:	0413      	lsls	r3, r2, #16
 8022f46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022f4e:	fb04 c000 	mla	r0, r4, r0, ip
 8022f52:	4313      	orrs	r3, r2
 8022f54:	fb06 0003 	mla	r0, r6, r3, r0
 8022f58:	0d43      	lsrs	r3, r0, #21
 8022f5a:	0940      	lsrs	r0, r0, #5
 8022f5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f64:	4318      	orrs	r0, r3
 8022f66:	8008      	strh	r0, [r1, #0]
 8022f68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022f6c:	4684      	mov	ip, r0
 8022f6e:	e7a6      	b.n	8022ebe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022f70:	4607      	mov	r7, r0
 8022f72:	4684      	mov	ip, r0
 8022f74:	e7ab      	b.n	8022ece <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022f76:	4607      	mov	r7, r0
 8022f78:	e7a9      	b.n	8022ece <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022f7a:	4602      	mov	r2, r0
 8022f7c:	e7b4      	b.n	8022ee8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022f7e:	4602      	mov	r2, r0
 8022f80:	e7ba      	b.n	8022ef8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022f82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f86:	b08f      	sub	sp, #60	; 0x3c
 8022f88:	461d      	mov	r5, r3
 8022f8a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022f8c:	9107      	str	r1, [sp, #28]
 8022f8e:	920c      	str	r2, [sp, #48]	; 0x30
 8022f90:	6859      	ldr	r1, [r3, #4]
 8022f92:	681b      	ldr	r3, [r3, #0]
 8022f94:	900d      	str	r0, [sp, #52]	; 0x34
 8022f96:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022f9a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022f9e:	fb01 2707 	mla	r7, r1, r7, r2
 8022fa2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022fa6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fa8:	f8d3 8000 	ldr.w	r8, [r3]
 8022fac:	9b07      	ldr	r3, [sp, #28]
 8022fae:	2b00      	cmp	r3, #0
 8022fb0:	dc03      	bgt.n	8022fba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022fb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022fb4:	2b00      	cmp	r3, #0
 8022fb6:	f340 8182 	ble.w	80232be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8022fba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fbc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022fc0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022fc4:	1e48      	subs	r0, r1, #1
 8022fc6:	f102 3cff 	add.w	ip, r2, #4294967295
 8022fca:	2d00      	cmp	r5, #0
 8022fcc:	f340 809b 	ble.w	8023106 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022fd0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022fd4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022fd8:	d406      	bmi.n	8022fe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022fda:	4586      	cmp	lr, r0
 8022fdc:	da04      	bge.n	8022fe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022fde:	2b00      	cmp	r3, #0
 8022fe0:	db02      	blt.n	8022fe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022fe2:	4563      	cmp	r3, ip
 8022fe4:	f2c0 8090 	blt.w	8023108 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022fe8:	f11e 0e01 	adds.w	lr, lr, #1
 8022fec:	f100 8084 	bmi.w	80230f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ff0:	4571      	cmp	r1, lr
 8022ff2:	f2c0 8081 	blt.w	80230f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ff6:	3301      	adds	r3, #1
 8022ff8:	d47e      	bmi.n	80230f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ffa:	429a      	cmp	r2, r3
 8022ffc:	db7c      	blt.n	80230f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ffe:	46aa      	mov	sl, r5
 8023000:	46b9      	mov	r9, r7
 8023002:	f1ba 0f00 	cmp.w	sl, #0
 8023006:	f340 8099 	ble.w	802313c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802300a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802300c:	1421      	asrs	r1, r4, #16
 802300e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023012:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023016:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802301a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802301e:	f100 80d1 	bmi.w	80231c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023022:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023026:	4559      	cmp	r1, fp
 8023028:	f280 80cc 	bge.w	80231c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802302c:	2800      	cmp	r0, #0
 802302e:	f2c0 80c9 	blt.w	80231c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023032:	f103 3bff 	add.w	fp, r3, #4294967295
 8023036:	4558      	cmp	r0, fp
 8023038:	f280 80c4 	bge.w	80231c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802303c:	fa0f fe8e 	sxth.w	lr, lr
 8023040:	fb00 110e 	mla	r1, r0, lr, r1
 8023044:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023048:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802304c:	8841      	ldrh	r1, [r0, #2]
 802304e:	f1bc 0f00 	cmp.w	ip, #0
 8023052:	d00b      	beq.n	802306c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023054:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023058:	3b01      	subs	r3, #1
 802305a:	005b      	lsls	r3, r3, #1
 802305c:	3302      	adds	r3, #2
 802305e:	eb00 0e03 	add.w	lr, r0, r3
 8023062:	5ac3      	ldrh	r3, [r0, r3]
 8023064:	9308      	str	r3, [sp, #32]
 8023066:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802306a:	9309      	str	r3, [sp, #36]	; 0x24
 802306c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023070:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023074:	fb12 f30c 	smulbb	r3, r2, ip
 8023078:	f1cc 0e10 	rsb	lr, ip, #16
 802307c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023080:	10db      	asrs	r3, r3, #3
 8023082:	ebae 0e02 	sub.w	lr, lr, r2
 8023086:	ea40 000b 	orr.w	r0, r0, fp
 802308a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802308e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023092:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023096:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802309a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802309e:	ea4b 0101 	orr.w	r1, fp, r1
 80230a2:	4351      	muls	r1, r2
 80230a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80230a6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80230aa:	0410      	lsls	r0, r2, #16
 80230ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80230b0:	9908      	ldr	r1, [sp, #32]
 80230b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80230b6:	4310      	orrs	r0, r2
 80230b8:	9a08      	ldr	r2, [sp, #32]
 80230ba:	0412      	lsls	r2, r2, #16
 80230bc:	fb03 e000 	mla	r0, r3, r0, lr
 80230c0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80230c4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80230c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80230cc:	ea42 020e 	orr.w	r2, r2, lr
 80230d0:	fb03 0302 	mla	r3, r3, r2, r0
 80230d4:	0d5a      	lsrs	r2, r3, #21
 80230d6:	095b      	lsrs	r3, r3, #5
 80230d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80230dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80230e0:	4313      	orrs	r3, r2
 80230e2:	f8a9 3000 	strh.w	r3, [r9]
 80230e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80230e8:	f109 0902 	add.w	r9, r9, #2
 80230ec:	f10a 3aff 	add.w	sl, sl, #4294967295
 80230f0:	441c      	add	r4, r3
 80230f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80230f4:	441e      	add	r6, r3
 80230f6:	e784      	b.n	8023002 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80230f8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80230fa:	3d01      	subs	r5, #1
 80230fc:	3702      	adds	r7, #2
 80230fe:	441c      	add	r4, r3
 8023100:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023102:	441e      	add	r6, r3
 8023104:	e761      	b.n	8022fca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023106:	d01d      	beq.n	8023144 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023108:	1e6b      	subs	r3, r5, #1
 802310a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802310c:	fb00 4003 	mla	r0, r0, r3, r4
 8023110:	1400      	asrs	r0, r0, #16
 8023112:	f53f af74 	bmi.w	8022ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023116:	3901      	subs	r1, #1
 8023118:	4288      	cmp	r0, r1
 802311a:	f6bf af70 	bge.w	8022ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802311e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023120:	fb01 6303 	mla	r3, r1, r3, r6
 8023124:	141b      	asrs	r3, r3, #16
 8023126:	f53f af6a 	bmi.w	8022ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802312a:	3a01      	subs	r2, #1
 802312c:	4293      	cmp	r3, r2
 802312e:	f6bf af66 	bge.w	8022ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023132:	46a9      	mov	r9, r5
 8023134:	46ba      	mov	sl, r7
 8023136:	f1b9 0f00 	cmp.w	r9, #0
 802313a:	dc5b      	bgt.n	80231f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802313c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023140:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023144:	9b07      	ldr	r3, [sp, #28]
 8023146:	2b00      	cmp	r3, #0
 8023148:	f340 80b9 	ble.w	80232be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 802314c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023150:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023152:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023156:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802315a:	eef0 6a62 	vmov.f32	s13, s5
 802315e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023162:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023166:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802316a:	ee16 4a90 	vmov	r4, s13
 802316e:	eef0 6a43 	vmov.f32	s13, s6
 8023172:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023176:	ee16 6a90 	vmov	r6, s13
 802317a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802317e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023182:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023186:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802318a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802318e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023192:	ee12 2a90 	vmov	r2, s5
 8023196:	eef0 2a47 	vmov.f32	s5, s14
 802319a:	fb92 f3f3 	sdiv	r3, r2, r3
 802319e:	ee13 2a10 	vmov	r2, s6
 80231a2:	931b      	str	r3, [sp, #108]	; 0x6c
 80231a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80231a6:	eeb0 3a67 	vmov.f32	s6, s15
 80231aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80231ae:	931c      	str	r3, [sp, #112]	; 0x70
 80231b0:	9b07      	ldr	r3, [sp, #28]
 80231b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80231b4:	3b01      	subs	r3, #1
 80231b6:	9307      	str	r3, [sp, #28]
 80231b8:	bf08      	it	eq
 80231ba:	4615      	moveq	r5, r2
 80231bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80231be:	bf18      	it	ne
 80231c0:	461d      	movne	r5, r3
 80231c2:	e6f3      	b.n	8022fac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80231c4:	f111 0b01 	adds.w	fp, r1, #1
 80231c8:	d48d      	bmi.n	80230e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80231ca:	45de      	cmp	lr, fp
 80231cc:	db8b      	blt.n	80230e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80231ce:	f110 0b01 	adds.w	fp, r0, #1
 80231d2:	d488      	bmi.n	80230e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80231d4:	455b      	cmp	r3, fp
 80231d6:	db86      	blt.n	80230e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80231d8:	b21b      	sxth	r3, r3
 80231da:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80231de:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80231e2:	9300      	str	r3, [sp, #0]
 80231e4:	4642      	mov	r2, r8
 80231e6:	fa0f f38e 	sxth.w	r3, lr
 80231ea:	4649      	mov	r1, r9
 80231ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 80231ee:	f7ff fe4c 	bl	8022e8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80231f2:	e778      	b.n	80230e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80231f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231f6:	1420      	asrs	r0, r4, #16
 80231f8:	1431      	asrs	r1, r6, #16
 80231fa:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80231fe:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023202:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023206:	fb03 0101 	mla	r1, r3, r1, r0
 802320a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802320e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8023212:	8841      	ldrh	r1, [r0, #2]
 8023214:	f1be 0f00 	cmp.w	lr, #0
 8023218:	d00b      	beq.n	8023232 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 802321a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802321e:	3b01      	subs	r3, #1
 8023220:	005b      	lsls	r3, r3, #1
 8023222:	3302      	adds	r3, #2
 8023224:	eb00 0b03 	add.w	fp, r0, r3
 8023228:	5ac3      	ldrh	r3, [r0, r3]
 802322a:	930a      	str	r3, [sp, #40]	; 0x28
 802322c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023230:	930b      	str	r3, [sp, #44]	; 0x2c
 8023232:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023236:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802323a:	fb12 f30e 	smulbb	r3, r2, lr
 802323e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023242:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023246:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802324a:	10db      	asrs	r3, r3, #3
 802324c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023250:	ea40 000c 	orr.w	r0, r0, ip
 8023254:	f1ce 0c10 	rsb	ip, lr, #16
 8023258:	ea4b 0101 	orr.w	r1, fp, r1
 802325c:	f109 39ff 	add.w	r9, r9, #4294967295
 8023260:	ebac 0c02 	sub.w	ip, ip, r2
 8023264:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023268:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802326c:	4351      	muls	r1, r2
 802326e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023270:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023274:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023276:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802327a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802327e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023280:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023284:	0412      	lsls	r2, r2, #16
 8023286:	ea4b 0000 	orr.w	r0, fp, r0
 802328a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802328e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023292:	fb03 c000 	mla	r0, r3, r0, ip
 8023296:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802329a:	ea42 0b0b 	orr.w	fp, r2, fp
 802329e:	fb03 000b 	mla	r0, r3, fp, r0
 80232a2:	0d43      	lsrs	r3, r0, #21
 80232a4:	0940      	lsrs	r0, r0, #5
 80232a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80232aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80232ae:	4318      	orrs	r0, r3
 80232b0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80232b2:	441c      	add	r4, r3
 80232b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232b6:	f82a 0b02 	strh.w	r0, [sl], #2
 80232ba:	441e      	add	r6, r3
 80232bc:	e73b      	b.n	8023136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80232be:	b00f      	add	sp, #60	; 0x3c
 80232c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080232c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80232c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232c8:	b085      	sub	sp, #20
 80232ca:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80232ce:	9102      	str	r1, [sp, #8]
 80232d0:	2c00      	cmp	r4, #0
 80232d2:	fb04 7103 	mla	r1, r4, r3, r7
 80232d6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80232da:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80232de:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80232e2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80232e6:	f2c0 811b 	blt.w	8023520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80232ea:	45a6      	cmp	lr, r4
 80232ec:	f340 8118 	ble.w	8023520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80232f0:	2f00      	cmp	r7, #0
 80232f2:	f2c0 8113 	blt.w	802351c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80232f6:	42bb      	cmp	r3, r7
 80232f8:	f340 8110 	ble.w	802351c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80232fc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023300:	1c7a      	adds	r2, r7, #1
 8023302:	f100 8110 	bmi.w	8023526 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023306:	4293      	cmp	r3, r2
 8023308:	f340 810d 	ble.w	8023526 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802330c:	2e00      	cmp	r6, #0
 802330e:	f000 810c 	beq.w	802352a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023312:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023316:	3401      	adds	r4, #1
 8023318:	f100 810b 	bmi.w	8023532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802331c:	45a6      	cmp	lr, r4
 802331e:	f340 8108 	ble.w	8023532 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023322:	2800      	cmp	r0, #0
 8023324:	f000 8108 	beq.w	8023538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023328:	2f00      	cmp	r7, #0
 802332a:	f2c0 8100 	blt.w	802352e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802332e:	42bb      	cmp	r3, r7
 8023330:	f340 80fd 	ble.w	802352e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023334:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023338:	3701      	adds	r7, #1
 802333a:	f100 8100 	bmi.w	802353e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802333e:	42bb      	cmp	r3, r7
 8023340:	f340 80fd 	ble.w	802353e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023344:	2e00      	cmp	r6, #0
 8023346:	f000 80fc 	beq.w	8023542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802334a:	3301      	adds	r3, #1
 802334c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023350:	b2b6      	uxth	r6, r6
 8023352:	b280      	uxth	r0, r0
 8023354:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023358:	fb00 fe06 	mul.w	lr, r0, r6
 802335c:	0136      	lsls	r6, r6, #4
 802335e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023362:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023366:	eba6 070e 	sub.w	r7, r6, lr
 802336a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802336e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023372:	b280      	uxth	r0, r0
 8023374:	b2bf      	uxth	r7, r7
 8023376:	1a1b      	subs	r3, r3, r0
 8023378:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802337c:	fb0a f607 	mul.w	r6, sl, r7
 8023380:	b29b      	uxth	r3, r3
 8023382:	fb0b 6603 	mla	r6, fp, r3, r6
 8023386:	fb00 6609 	mla	r6, r0, r9, r6
 802338a:	fb0e 6608 	mla	r6, lr, r8, r6
 802338e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023392:	9600      	str	r6, [sp, #0]
 8023394:	2e00      	cmp	r6, #0
 8023396:	f000 80be 	beq.w	8023516 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802339a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802339e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80233a2:	9e02      	ldr	r6, [sp, #8]
 80233a4:	fb0b fc0c 	mul.w	ip, fp, ip
 80233a8:	fb0b f505 	mul.w	r5, fp, r5
 80233ac:	8836      	ldrh	r6, [r6, #0]
 80233ae:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80233b2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80233b6:	9501      	str	r5, [sp, #4]
 80233b8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80233bc:	44dc      	add	ip, fp
 80233be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80233c2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80233c6:	9503      	str	r5, [sp, #12]
 80233c8:	9d01      	ldr	r5, [sp, #4]
 80233ca:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80233ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80233d2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80233d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80233da:	fb0a fc0c 	mul.w	ip, sl, ip
 80233de:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80233e2:	fb0a fa01 	mul.w	sl, sl, r1
 80233e6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80233ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80233ee:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80233f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80233f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80233fa:	4465      	add	r5, ip
 80233fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023400:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023404:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023408:	fb09 fc0c 	mul.w	ip, r9, ip
 802340c:	0a2d      	lsrs	r5, r5, #8
 802340e:	fb09 f904 	mul.w	r9, r9, r4
 8023412:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023416:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802341a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802341e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023422:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023426:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802342a:	437d      	muls	r5, r7
 802342c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023430:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023434:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023438:	4461      	add	r1, ip
 802343a:	fb08 f404 	mul.w	r4, r8, r4
 802343e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023442:	fb08 f802 	mul.w	r8, r8, r2
 8023446:	0a09      	lsrs	r1, r1, #8
 8023448:	0a22      	lsrs	r2, r4, #8
 802344a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802344e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023452:	fb07 f70a 	mul.w	r7, r7, sl
 8023456:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802345a:	4414      	add	r4, r2
 802345c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023460:	0a24      	lsrs	r4, r4, #8
 8023462:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023466:	9a03      	ldr	r2, [sp, #12]
 8023468:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802346c:	fb02 5503 	mla	r5, r2, r3, r5
 8023470:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023474:	9a00      	ldr	r2, [sp, #0]
 8023476:	fb04 540e 	mla	r4, r4, lr, r5
 802347a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802347e:	1235      	asrs	r5, r6, #8
 8023480:	fb01 4100 	mla	r1, r1, r0, r4
 8023484:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023488:	0a09      	lsrs	r1, r1, #8
 802348a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802348e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023492:	fb03 7101 	mla	r1, r3, r1, r7
 8023496:	fb0e 1e08 	mla	lr, lr, r8, r1
 802349a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802349e:	fb00 e101 	mla	r1, r0, r1, lr
 80234a2:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80234a6:	b287      	uxth	r7, r0
 80234a8:	0a09      	lsrs	r1, r1, #8
 80234aa:	437a      	muls	r2, r7
 80234ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80234b0:	1c53      	adds	r3, r2, #1
 80234b2:	4321      	orrs	r1, r4
 80234b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80234b8:	0c0a      	lsrs	r2, r1, #16
 80234ba:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80234be:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80234c2:	b2c8      	uxtb	r0, r1
 80234c4:	fb12 f207 	smulbb	r2, r2, r7
 80234c8:	fb14 f407 	smulbb	r4, r4, r7
 80234cc:	b2db      	uxtb	r3, r3
 80234ce:	fb10 f007 	smulbb	r0, r0, r7
 80234d2:	fb05 2503 	mla	r5, r5, r3, r2
 80234d6:	10f2      	asrs	r2, r6, #3
 80234d8:	00f6      	lsls	r6, r6, #3
 80234da:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80234de:	b2ad      	uxth	r5, r5
 80234e0:	b2f6      	uxtb	r6, r6
 80234e2:	fb02 4203 	mla	r2, r2, r3, r4
 80234e6:	fb06 0303 	mla	r3, r6, r3, r0
 80234ea:	b294      	uxth	r4, r2
 80234ec:	b299      	uxth	r1, r3
 80234ee:	1c6b      	adds	r3, r5, #1
 80234f0:	1c62      	adds	r2, r4, #1
 80234f2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80234f6:	1c4b      	adds	r3, r1, #1
 80234f8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80234fc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023500:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023504:	0952      	lsrs	r2, r2, #5
 8023506:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802350a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802350e:	432b      	orrs	r3, r5
 8023510:	4313      	orrs	r3, r2
 8023512:	9a02      	ldr	r2, [sp, #8]
 8023514:	8013      	strh	r3, [r2, #0]
 8023516:	b005      	add	sp, #20
 8023518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802351c:	2500      	movs	r5, #0
 802351e:	e6ef      	b.n	8023300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023520:	2100      	movs	r1, #0
 8023522:	460d      	mov	r5, r1
 8023524:	e6f7      	b.n	8023316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023526:	2100      	movs	r1, #0
 8023528:	e6f5      	b.n	8023316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802352a:	4631      	mov	r1, r6
 802352c:	e6f3      	b.n	8023316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802352e:	2400      	movs	r4, #0
 8023530:	e702      	b.n	8023338 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023532:	2200      	movs	r2, #0
 8023534:	4614      	mov	r4, r2
 8023536:	e70b      	b.n	8023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023538:	4602      	mov	r2, r0
 802353a:	4604      	mov	r4, r0
 802353c:	e708      	b.n	8023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802353e:	2200      	movs	r2, #0
 8023540:	e706      	b.n	8023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023542:	4632      	mov	r2, r6
 8023544:	e704      	b.n	8023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023546:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802354a:	b09d      	sub	sp, #116	; 0x74
 802354c:	9219      	str	r2, [sp, #100]	; 0x64
 802354e:	9307      	str	r3, [sp, #28]
 8023550:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023552:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023556:	901b      	str	r0, [sp, #108]	; 0x6c
 8023558:	931a      	str	r3, [sp, #104]	; 0x68
 802355a:	6850      	ldr	r0, [r2, #4]
 802355c:	9117      	str	r1, [sp, #92]	; 0x5c
 802355e:	6812      	ldr	r2, [r2, #0]
 8023560:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023564:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023568:	fb00 1303 	mla	r3, r0, r3, r1
 802356c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023570:	930a      	str	r3, [sp, #40]	; 0x28
 8023572:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023574:	681b      	ldr	r3, [r3, #0]
 8023576:	9310      	str	r3, [sp, #64]	; 0x40
 8023578:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802357c:	930b      	str	r3, [sp, #44]	; 0x2c
 802357e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023580:	2b00      	cmp	r3, #0
 8023582:	dc03      	bgt.n	802358c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023584:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023586:	2b00      	cmp	r3, #0
 8023588:	f340 8375 	ble.w	8023c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802358c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802358e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023592:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023596:	1e48      	subs	r0, r1, #1
 8023598:	1e57      	subs	r7, r2, #1
 802359a:	9b07      	ldr	r3, [sp, #28]
 802359c:	2b00      	cmp	r3, #0
 802359e:	f340 818e 	ble.w	80238be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80235a2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80235a6:	ea4f 4326 	mov.w	r3, r6, asr #16
 80235aa:	d406      	bmi.n	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80235ac:	4584      	cmp	ip, r0
 80235ae:	da04      	bge.n	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80235b0:	2b00      	cmp	r3, #0
 80235b2:	db02      	blt.n	80235ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80235b4:	42bb      	cmp	r3, r7
 80235b6:	f2c0 8183 	blt.w	80238c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80235ba:	f11c 0c01 	adds.w	ip, ip, #1
 80235be:	f100 8173 	bmi.w	80238a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80235c2:	4561      	cmp	r1, ip
 80235c4:	f2c0 8170 	blt.w	80238a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80235c8:	3301      	adds	r3, #1
 80235ca:	f100 816d 	bmi.w	80238a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80235ce:	429a      	cmp	r2, r3
 80235d0:	f2c0 816a 	blt.w	80238a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80235d4:	9b07      	ldr	r3, [sp, #28]
 80235d6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80235d8:	9318      	str	r3, [sp, #96]	; 0x60
 80235da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80235dc:	2b00      	cmp	r3, #0
 80235de:	f340 818c 	ble.w	80238fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80235e2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80235e4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80235e8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80235ea:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80235ee:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80235f2:	1422      	asrs	r2, r4, #16
 80235f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80235f8:	689b      	ldr	r3, [r3, #8]
 80235fa:	f100 81cd 	bmi.w	8023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80235fe:	f103 38ff 	add.w	r8, r3, #4294967295
 8023602:	4542      	cmp	r2, r8
 8023604:	f280 81c8 	bge.w	8023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023608:	f1bc 0f00 	cmp.w	ip, #0
 802360c:	f2c0 81c4 	blt.w	8023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023610:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023614:	45c4      	cmp	ip, r8
 8023616:	f280 81bf 	bge.w	8023998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802361a:	b21b      	sxth	r3, r3
 802361c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802361e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023622:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023626:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802362a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802362e:	2800      	cmp	r0, #0
 8023630:	f000 81a9 	beq.w	8023986 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023634:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023638:	950c      	str	r5, [sp, #48]	; 0x30
 802363a:	0e2d      	lsrs	r5, r5, #24
 802363c:	9513      	str	r5, [sp, #76]	; 0x4c
 802363e:	b181      	cbz	r1, 8023662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023640:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023644:	3b01      	subs	r3, #1
 8023646:	009b      	lsls	r3, r3, #2
 8023648:	3304      	adds	r3, #4
 802364a:	eb08 0c03 	add.w	ip, r8, r3
 802364e:	f858 3003 	ldr.w	r3, [r8, r3]
 8023652:	9308      	str	r3, [sp, #32]
 8023654:	0e1b      	lsrs	r3, r3, #24
 8023656:	9311      	str	r3, [sp, #68]	; 0x44
 8023658:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802365c:	930d      	str	r3, [sp, #52]	; 0x34
 802365e:	0e1b      	lsrs	r3, r3, #24
 8023660:	9314      	str	r3, [sp, #80]	; 0x50
 8023662:	b280      	uxth	r0, r0
 8023664:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023666:	b289      	uxth	r1, r1
 8023668:	fb00 f901 	mul.w	r9, r0, r1
 802366c:	0100      	lsls	r0, r0, #4
 802366e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023672:	eba0 0809 	sub.w	r8, r0, r9
 8023676:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802367a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802367c:	b289      	uxth	r1, r1
 802367e:	fa1f f888 	uxth.w	r8, r8
 8023682:	1a5b      	subs	r3, r3, r1
 8023684:	fb08 f000 	mul.w	r0, r8, r0
 8023688:	b29b      	uxth	r3, r3
 802368a:	fb03 000e 	mla	r0, r3, lr, r0
 802368e:	fb01 0005 	mla	r0, r1, r5, r0
 8023692:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023694:	fb09 0005 	mla	r0, r9, r5, r0
 8023698:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802369c:	2800      	cmp	r0, #0
 802369e:	f000 80fa 	beq.w	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80236a2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80236a6:	d01b      	beq.n	80236e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80236a8:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80236ac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80236b0:	fb0e fa0a 	mul.w	sl, lr, sl
 80236b4:	fb0e fe02 	mul.w	lr, lr, r2
 80236b8:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80236bc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80236c0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80236c4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80236c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80236cc:	4452      	add	r2, sl
 80236ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236d2:	0a12      	lsrs	r2, r2, #8
 80236d4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80236d8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80236dc:	ea42 020c 	orr.w	r2, r2, ip
 80236e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80236e2:	2dff      	cmp	r5, #255	; 0xff
 80236e4:	d021      	beq.n	802372a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80236e6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80236e8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80236ec:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80236ee:	fb05 fb0b 	mul.w	fp, r5, fp
 80236f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80236f4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80236f8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80236fa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80236fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023702:	fb05 fa0a 	mul.w	sl, r5, sl
 8023706:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802370a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802370e:	44de      	add	lr, fp
 8023710:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023714:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023718:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802371c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023720:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023724:	ea4e 050a 	orr.w	r5, lr, sl
 8023728:	950c      	str	r5, [sp, #48]	; 0x30
 802372a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802372c:	2dff      	cmp	r5, #255	; 0xff
 802372e:	d021      	beq.n	8023774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023730:	9d08      	ldr	r5, [sp, #32]
 8023732:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023736:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023738:	fb05 fb0b 	mul.w	fp, r5, fp
 802373c:	9d08      	ldr	r5, [sp, #32]
 802373e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023742:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023744:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023748:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802374c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023750:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023754:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023758:	44de      	add	lr, fp
 802375a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802375e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023762:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023766:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802376a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802376e:	ea4e 050a 	orr.w	r5, lr, sl
 8023772:	9508      	str	r5, [sp, #32]
 8023774:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023776:	2dff      	cmp	r5, #255	; 0xff
 8023778:	d021      	beq.n	80237be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802377a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802377c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023780:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023782:	fb05 fb0b 	mul.w	fp, r5, fp
 8023786:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023788:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802378c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802378e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023792:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023796:	fb05 fa0a 	mul.w	sl, r5, sl
 802379a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802379e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80237a2:	44de      	add	lr, fp
 80237a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80237a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80237ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80237b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80237b8:	ea4e 050a 	orr.w	r5, lr, sl
 80237bc:	950d      	str	r5, [sp, #52]	; 0x34
 80237be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80237c0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80237c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80237c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80237cc:	9d08      	ldr	r5, [sp, #32]
 80237ce:	fb08 fc0c 	mul.w	ip, r8, ip
 80237d2:	fb03 cc0e 	mla	ip, r3, lr, ip
 80237d6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80237da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80237dc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80237e0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80237e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80237e6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80237ea:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80237ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80237f0:	fb08 f80e 	mul.w	r8, r8, lr
 80237f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237f8:	fb03 8202 	mla	r2, r3, r2, r8
 80237fc:	9b08      	ldr	r3, [sp, #32]
 80237fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023802:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023806:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023808:	fb01 220a 	mla	r2, r1, sl, r2
 802380c:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023810:	883b      	ldrh	r3, [r7, #0]
 8023812:	fb09 2901 	mla	r9, r9, r1, r2
 8023816:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023818:	1219      	asrs	r1, r3, #8
 802381a:	4342      	muls	r2, r0
 802381c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023820:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023824:	1c50      	adds	r0, r2, #1
 8023826:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802382a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802382e:	ea4c 0c09 	orr.w	ip, ip, r9
 8023832:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023836:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802383a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802383e:	fa5f fc8c 	uxtb.w	ip, ip
 8023842:	fb12 f205 	smulbb	r2, r2, r5
 8023846:	b2c0      	uxtb	r0, r0
 8023848:	fb1c fc05 	smulbb	ip, ip, r5
 802384c:	fb01 2100 	mla	r1, r1, r0, r2
 8023850:	10da      	asrs	r2, r3, #3
 8023852:	fb1e fe05 	smulbb	lr, lr, r5
 8023856:	00db      	lsls	r3, r3, #3
 8023858:	b289      	uxth	r1, r1
 802385a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802385e:	b2db      	uxtb	r3, r3
 8023860:	fb02 e200 	mla	r2, r2, r0, lr
 8023864:	fb03 c300 	mla	r3, r3, r0, ip
 8023868:	b292      	uxth	r2, r2
 802386a:	fa1f fc83 	uxth.w	ip, r3
 802386e:	1c4b      	adds	r3, r1, #1
 8023870:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023874:	f10c 0301 	add.w	r3, ip, #1
 8023878:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802387c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023880:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023884:	430b      	orrs	r3, r1
 8023886:	1c51      	adds	r1, r2, #1
 8023888:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802388c:	0952      	lsrs	r2, r2, #5
 802388e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023892:	4313      	orrs	r3, r2
 8023894:	803b      	strh	r3, [r7, #0]
 8023896:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023898:	3702      	adds	r7, #2
 802389a:	441c      	add	r4, r3
 802389c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802389e:	441e      	add	r6, r3
 80238a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80238a2:	3b01      	subs	r3, #1
 80238a4:	9318      	str	r3, [sp, #96]	; 0x60
 80238a6:	e698      	b.n	80235da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80238a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80238aa:	441c      	add	r4, r3
 80238ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80238ae:	441e      	add	r6, r3
 80238b0:	9b07      	ldr	r3, [sp, #28]
 80238b2:	3b01      	subs	r3, #1
 80238b4:	9307      	str	r3, [sp, #28]
 80238b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80238b8:	3302      	adds	r3, #2
 80238ba:	930a      	str	r3, [sp, #40]	; 0x28
 80238bc:	e66d      	b.n	802359a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80238be:	d023      	beq.n	8023908 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80238c0:	9b07      	ldr	r3, [sp, #28]
 80238c2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80238c4:	3b01      	subs	r3, #1
 80238c6:	fb00 4003 	mla	r0, r0, r3, r4
 80238ca:	1400      	asrs	r0, r0, #16
 80238cc:	f53f ae82 	bmi.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80238d0:	3901      	subs	r1, #1
 80238d2:	4288      	cmp	r0, r1
 80238d4:	f6bf ae7e 	bge.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80238d8:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80238da:	fb01 6303 	mla	r3, r1, r3, r6
 80238de:	141b      	asrs	r3, r3, #16
 80238e0:	f53f ae78 	bmi.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80238e4:	3a01      	subs	r2, #1
 80238e6:	4293      	cmp	r3, r2
 80238e8:	f6bf ae74 	bge.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80238ec:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80238f0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80238f4:	f1bb 0f00 	cmp.w	fp, #0
 80238f8:	dc6c      	bgt.n	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80238fa:	9b07      	ldr	r3, [sp, #28]
 80238fc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023900:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023902:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023906:	930a      	str	r3, [sp, #40]	; 0x28
 8023908:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802390a:	2b00      	cmp	r3, #0
 802390c:	f340 81b3 	ble.w	8023c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023910:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023914:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023916:	ee30 0a04 	vadd.f32	s0, s0, s8
 802391a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802391e:	eef0 6a62 	vmov.f32	s13, s5
 8023922:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023926:	ee31 1a05 	vadd.f32	s2, s2, s10
 802392a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802392e:	ee16 4a90 	vmov	r4, s13
 8023932:	eef0 6a43 	vmov.f32	s13, s6
 8023936:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802393a:	ee16 6a90 	vmov	r6, s13
 802393e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023942:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023946:	ee77 2a62 	vsub.f32	s5, s14, s5
 802394a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802394e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023952:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023956:	ee12 2a90 	vmov	r2, s5
 802395a:	eef0 2a47 	vmov.f32	s5, s14
 802395e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023962:	ee13 2a10 	vmov	r2, s6
 8023966:	9329      	str	r3, [sp, #164]	; 0xa4
 8023968:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802396a:	eeb0 3a67 	vmov.f32	s6, s15
 802396e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023972:	932a      	str	r3, [sp, #168]	; 0xa8
 8023974:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023976:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023978:	3b01      	subs	r3, #1
 802397a:	9317      	str	r3, [sp, #92]	; 0x5c
 802397c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802397e:	bf08      	it	eq
 8023980:	4613      	moveq	r3, r2
 8023982:	9307      	str	r3, [sp, #28]
 8023984:	e5fb      	b.n	802357e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023986:	2900      	cmp	r1, #0
 8023988:	f43f ae6b 	beq.w	8023662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802398c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023990:	9308      	str	r3, [sp, #32]
 8023992:	0e1b      	lsrs	r3, r3, #24
 8023994:	9311      	str	r3, [sp, #68]	; 0x44
 8023996:	e664      	b.n	8023662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023998:	f112 0801 	adds.w	r8, r2, #1
 802399c:	f53f af7b 	bmi.w	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80239a0:	4543      	cmp	r3, r8
 80239a2:	f6ff af78 	blt.w	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80239a6:	f11c 0801 	adds.w	r8, ip, #1
 80239aa:	f53f af74 	bmi.w	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80239ae:	45c6      	cmp	lr, r8
 80239b0:	f6ff af71 	blt.w	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80239b4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80239b6:	b21b      	sxth	r3, r3
 80239b8:	9201      	str	r2, [sp, #4]
 80239ba:	fa0f f28e 	sxth.w	r2, lr
 80239be:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80239c2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80239c6:	9200      	str	r2, [sp, #0]
 80239c8:	4639      	mov	r1, r7
 80239ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80239cc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80239ce:	f7ff fc79 	bl	80232c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80239d2:	e760      	b.n	8023896 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80239d4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80239d6:	1427      	asrs	r7, r4, #16
 80239d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80239da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80239de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80239e2:	1433      	asrs	r3, r6, #16
 80239e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80239e8:	fb01 7303 	mla	r3, r1, r3, r7
 80239ec:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80239f0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80239f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80239f8:	2a00      	cmp	r2, #0
 80239fa:	f000 8133 	beq.w	8023c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80239fe:	687d      	ldr	r5, [r7, #4]
 8023a00:	950e      	str	r5, [sp, #56]	; 0x38
 8023a02:	0e2d      	lsrs	r5, r5, #24
 8023a04:	9515      	str	r5, [sp, #84]	; 0x54
 8023a06:	b178      	cbz	r0, 8023a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023a08:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023a0c:	3901      	subs	r1, #1
 8023a0e:	0089      	lsls	r1, r1, #2
 8023a10:	3104      	adds	r1, #4
 8023a12:	eb07 0e01 	add.w	lr, r7, r1
 8023a16:	5879      	ldr	r1, [r7, r1]
 8023a18:	9109      	str	r1, [sp, #36]	; 0x24
 8023a1a:	0e09      	lsrs	r1, r1, #24
 8023a1c:	9112      	str	r1, [sp, #72]	; 0x48
 8023a1e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023a22:	910f      	str	r1, [sp, #60]	; 0x3c
 8023a24:	0e09      	lsrs	r1, r1, #24
 8023a26:	9116      	str	r1, [sp, #88]	; 0x58
 8023a28:	b292      	uxth	r2, r2
 8023a2a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023a2c:	b280      	uxth	r0, r0
 8023a2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023a30:	fb02 f800 	mul.w	r8, r2, r0
 8023a34:	0112      	lsls	r2, r2, #4
 8023a36:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023a3a:	eba2 0e08 	sub.w	lr, r2, r8
 8023a3e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023a42:	b280      	uxth	r0, r0
 8023a44:	fa1f fe8e 	uxth.w	lr, lr
 8023a48:	1a12      	subs	r2, r2, r0
 8023a4a:	fb0e f101 	mul.w	r1, lr, r1
 8023a4e:	b292      	uxth	r2, r2
 8023a50:	fb02 110c 	mla	r1, r2, ip, r1
 8023a54:	fb00 1105 	mla	r1, r0, r5, r1
 8023a58:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023a5a:	fb08 1105 	mla	r1, r8, r5, r1
 8023a5e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023a62:	2900      	cmp	r1, #0
 8023a64:	f000 80f5 	beq.w	8023c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023a68:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023a6c:	d019      	beq.n	8023aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023a6e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023a72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023a76:	fb0c fa0a 	mul.w	sl, ip, sl
 8023a7a:	fb0c fc03 	mul.w	ip, ip, r3
 8023a7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023a82:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023a86:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023a8a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023a8e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023a92:	4453      	add	r3, sl
 8023a94:	0a3f      	lsrs	r7, r7, #8
 8023a96:	0a1b      	lsrs	r3, r3, #8
 8023a98:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023a9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023aa0:	433b      	orrs	r3, r7
 8023aa2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023aa4:	2dff      	cmp	r5, #255	; 0xff
 8023aa6:	d020      	beq.n	8023aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023aa8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023aaa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023aae:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023ab0:	436f      	muls	r7, r5
 8023ab2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023ab4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ab8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023abc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023abe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023ac2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ac6:	fb05 fa0a 	mul.w	sl, r5, sl
 8023aca:	44bc      	add	ip, r7
 8023acc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023ad0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ad4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023ad8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023adc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ae0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ae4:	ea4c 050a 	orr.w	r5, ip, sl
 8023ae8:	950e      	str	r5, [sp, #56]	; 0x38
 8023aea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023aec:	2dff      	cmp	r5, #255	; 0xff
 8023aee:	d020      	beq.n	8023b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023af0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023af2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023af6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023af8:	436f      	muls	r7, r5
 8023afa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023b00:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023b04:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023b0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b0e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b12:	44bc      	add	ip, r7
 8023b14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023b18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023b20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b2c:	ea4c 050a 	orr.w	r5, ip, sl
 8023b30:	9509      	str	r5, [sp, #36]	; 0x24
 8023b32:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b34:	2dff      	cmp	r5, #255	; 0xff
 8023b36:	d020      	beq.n	8023b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023b38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023b3a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023b3e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b40:	436f      	muls	r7, r5
 8023b42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023b44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023b48:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023b4c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b4e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023b52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b56:	fb05 fa0a 	mul.w	sl, r5, sl
 8023b5a:	44bc      	add	ip, r7
 8023b5c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b64:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023b68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023b6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b74:	ea4c 050a 	orr.w	r5, ip, sl
 8023b78:	950f      	str	r5, [sp, #60]	; 0x3c
 8023b7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023b7c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023b80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023b84:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023b88:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023b8a:	fb0e f707 	mul.w	r7, lr, r7
 8023b8e:	fb02 770c 	mla	r7, r2, ip, r7
 8023b92:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023b96:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023b98:	fb00 770c 	mla	r7, r0, ip, r7
 8023b9c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023ba0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023ba2:	fb08 770c 	mla	r7, r8, ip, r7
 8023ba6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023baa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023bac:	fb0e fe0c 	mul.w	lr, lr, ip
 8023bb0:	0a3f      	lsrs	r7, r7, #8
 8023bb2:	fb02 e303 	mla	r3, r2, r3, lr
 8023bb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023bb8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023bbc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023bc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023bc2:	fb00 330a 	mla	r3, r0, sl, r3
 8023bc6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023bca:	f8b9 0000 	ldrh.w	r0, [r9]
 8023bce:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023bd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023bd4:	1202      	asrs	r2, r0, #8
 8023bd6:	4359      	muls	r1, r3
 8023bd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023bdc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023be0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023be4:	1c4b      	adds	r3, r1, #1
 8023be6:	ea47 070c 	orr.w	r7, r7, ip
 8023bea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023bee:	0c3b      	lsrs	r3, r7, #16
 8023bf0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023bf4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023bf8:	b2ff      	uxtb	r7, r7
 8023bfa:	fb13 f305 	smulbb	r3, r3, r5
 8023bfe:	b2c9      	uxtb	r1, r1
 8023c00:	fb17 f705 	smulbb	r7, r7, r5
 8023c04:	fb02 3201 	mla	r2, r2, r1, r3
 8023c08:	10c3      	asrs	r3, r0, #3
 8023c0a:	fb1c fc05 	smulbb	ip, ip, r5
 8023c0e:	00c0      	lsls	r0, r0, #3
 8023c10:	b292      	uxth	r2, r2
 8023c12:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023c16:	b2c0      	uxtb	r0, r0
 8023c18:	fb03 c301 	mla	r3, r3, r1, ip
 8023c1c:	fb00 7001 	mla	r0, r0, r1, r7
 8023c20:	1c51      	adds	r1, r2, #1
 8023c22:	b29b      	uxth	r3, r3
 8023c24:	b280      	uxth	r0, r0
 8023c26:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023c2a:	f100 0c01 	add.w	ip, r0, #1
 8023c2e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023c32:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023c36:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023c3a:	ea4c 0202 	orr.w	r2, ip, r2
 8023c3e:	f103 0c01 	add.w	ip, r3, #1
 8023c42:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023c46:	095b      	lsrs	r3, r3, #5
 8023c48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023c4c:	431a      	orrs	r2, r3
 8023c4e:	f8a9 2000 	strh.w	r2, [r9]
 8023c52:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023c54:	f109 0902 	add.w	r9, r9, #2
 8023c58:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023c5c:	441c      	add	r4, r3
 8023c5e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023c60:	441e      	add	r6, r3
 8023c62:	e647      	b.n	80238f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023c64:	2800      	cmp	r0, #0
 8023c66:	f43f aedf 	beq.w	8023a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023c6a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023c6e:	9109      	str	r1, [sp, #36]	; 0x24
 8023c70:	0e09      	lsrs	r1, r1, #24
 8023c72:	9112      	str	r1, [sp, #72]	; 0x48
 8023c74:	e6d8      	b.n	8023a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023c76:	b01d      	add	sp, #116	; 0x74
 8023c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c80:	b085      	sub	sp, #20
 8023c82:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023c86:	9102      	str	r1, [sp, #8]
 8023c88:	2c00      	cmp	r4, #0
 8023c8a:	fb04 7103 	mla	r1, r4, r3, r7
 8023c8e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023c92:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023c96:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023c9a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023c9e:	f2c0 810c 	blt.w	8023eba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023ca2:	45a6      	cmp	lr, r4
 8023ca4:	f340 8109 	ble.w	8023eba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023ca8:	2f00      	cmp	r7, #0
 8023caa:	f2c0 8104 	blt.w	8023eb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023cae:	42bb      	cmp	r3, r7
 8023cb0:	f340 8101 	ble.w	8023eb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023cb4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023cb8:	1c7a      	adds	r2, r7, #1
 8023cba:	f100 8101 	bmi.w	8023ec0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023cbe:	4293      	cmp	r3, r2
 8023cc0:	f340 80fe 	ble.w	8023ec0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023cc4:	2e00      	cmp	r6, #0
 8023cc6:	f000 80fd 	beq.w	8023ec4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023cca:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023cce:	3401      	adds	r4, #1
 8023cd0:	f100 80fc 	bmi.w	8023ecc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023cd4:	45a6      	cmp	lr, r4
 8023cd6:	f340 80f9 	ble.w	8023ecc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023cda:	2800      	cmp	r0, #0
 8023cdc:	f000 80f9 	beq.w	8023ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023ce0:	2f00      	cmp	r7, #0
 8023ce2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023ce6:	f2c0 80ef 	blt.w	8023ec8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023cea:	42bb      	cmp	r3, r7
 8023cec:	f340 80ec 	ble.w	8023ec8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023cf0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023cf4:	3701      	adds	r7, #1
 8023cf6:	f100 80ef 	bmi.w	8023ed8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023cfa:	42bb      	cmp	r3, r7
 8023cfc:	f340 80ec 	ble.w	8023ed8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023d00:	2e00      	cmp	r6, #0
 8023d02:	f000 80eb 	beq.w	8023edc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023d06:	6852      	ldr	r2, [r2, #4]
 8023d08:	b2b6      	uxth	r6, r6
 8023d0a:	b280      	uxth	r0, r0
 8023d0c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023d10:	fb00 fe06 	mul.w	lr, r0, r6
 8023d14:	0136      	lsls	r6, r6, #4
 8023d16:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023d1a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023d1e:	eba6 070e 	sub.w	r7, r6, lr
 8023d22:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023d26:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023d2a:	b280      	uxth	r0, r0
 8023d2c:	b2bf      	uxth	r7, r7
 8023d2e:	1a1b      	subs	r3, r3, r0
 8023d30:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023d34:	fb07 f60a 	mul.w	r6, r7, sl
 8023d38:	b29b      	uxth	r3, r3
 8023d3a:	fb0b 6603 	mla	r6, fp, r3, r6
 8023d3e:	fb00 6609 	mla	r6, r0, r9, r6
 8023d42:	fb0e 6608 	mla	r6, lr, r8, r6
 8023d46:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023d4a:	9600      	str	r6, [sp, #0]
 8023d4c:	2e00      	cmp	r6, #0
 8023d4e:	f000 80af 	beq.w	8023eb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023d52:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d56:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023d5a:	9e02      	ldr	r6, [sp, #8]
 8023d5c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023d60:	fb0b f505 	mul.w	r5, fp, r5
 8023d64:	8836      	ldrh	r6, [r6, #0]
 8023d66:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023d6a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d6e:	9501      	str	r5, [sp, #4]
 8023d70:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023d74:	44dc      	add	ip, fp
 8023d76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d7a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023d7e:	9503      	str	r5, [sp, #12]
 8023d80:	9d01      	ldr	r5, [sp, #4]
 8023d82:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023d86:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023d8a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023d8e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023d92:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d96:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023d9a:	fb0a fa01 	mul.w	sl, sl, r1
 8023d9e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023da2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023da6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023daa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023dae:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023db2:	4465      	add	r5, ip
 8023db4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023db8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023dbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dc0:	fb09 fc0c 	mul.w	ip, r9, ip
 8023dc4:	0a2d      	lsrs	r5, r5, #8
 8023dc6:	fb09 f904 	mul.w	r9, r9, r4
 8023dca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dce:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023dd2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023dd6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023dda:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023dde:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023de2:	437d      	muls	r5, r7
 8023de4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023de8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023dec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023df0:	4461      	add	r1, ip
 8023df2:	fb08 f404 	mul.w	r4, r8, r4
 8023df6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023dfa:	fb08 f802 	mul.w	r8, r8, r2
 8023dfe:	0a09      	lsrs	r1, r1, #8
 8023e00:	0a22      	lsrs	r2, r4, #8
 8023e02:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023e06:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023e0a:	fb07 f70a 	mul.w	r7, r7, sl
 8023e0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023e12:	4414      	add	r4, r2
 8023e14:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023e18:	0a24      	lsrs	r4, r4, #8
 8023e1a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023e1e:	9a03      	ldr	r2, [sp, #12]
 8023e20:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023e24:	fb02 5503 	mla	r5, r2, r3, r5
 8023e28:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023e2c:	fb04 540e 	mla	r4, r4, lr, r5
 8023e30:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023e34:	fb01 4100 	mla	r1, r1, r0, r4
 8023e38:	0a09      	lsrs	r1, r1, #8
 8023e3a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023e3e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023e42:	fb03 7101 	mla	r1, r3, r1, r7
 8023e46:	9b00      	ldr	r3, [sp, #0]
 8023e48:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023e4c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023e50:	43da      	mvns	r2, r3
 8023e52:	1233      	asrs	r3, r6, #8
 8023e54:	fb00 e101 	mla	r1, r0, r1, lr
 8023e58:	10f0      	asrs	r0, r6, #3
 8023e5a:	b2d2      	uxtb	r2, r2
 8023e5c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023e60:	0a09      	lsrs	r1, r1, #8
 8023e62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023e66:	00f6      	lsls	r6, r6, #3
 8023e68:	4353      	muls	r3, r2
 8023e6a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e6e:	4350      	muls	r0, r2
 8023e70:	b2f6      	uxtb	r6, r6
 8023e72:	4321      	orrs	r1, r4
 8023e74:	4356      	muls	r6, r2
 8023e76:	1c5a      	adds	r2, r3, #1
 8023e78:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023e7c:	0c0b      	lsrs	r3, r1, #16
 8023e7e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e82:	1c42      	adds	r2, r0, #1
 8023e84:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023e88:	0a0a      	lsrs	r2, r1, #8
 8023e8a:	021b      	lsls	r3, r3, #8
 8023e8c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023e90:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023e94:	00d2      	lsls	r2, r2, #3
 8023e96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e9a:	4313      	orrs	r3, r2
 8023e9c:	1c72      	adds	r2, r6, #1
 8023e9e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023ea2:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023ea6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023eaa:	4319      	orrs	r1, r3
 8023eac:	9b02      	ldr	r3, [sp, #8]
 8023eae:	8019      	strh	r1, [r3, #0]
 8023eb0:	b005      	add	sp, #20
 8023eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023eb6:	2500      	movs	r5, #0
 8023eb8:	e6fe      	b.n	8023cb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023eba:	2100      	movs	r1, #0
 8023ebc:	460d      	mov	r5, r1
 8023ebe:	e706      	b.n	8023cce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ec0:	2100      	movs	r1, #0
 8023ec2:	e704      	b.n	8023cce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ec4:	4631      	mov	r1, r6
 8023ec6:	e702      	b.n	8023cce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ec8:	2400      	movs	r4, #0
 8023eca:	e713      	b.n	8023cf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023ecc:	2200      	movs	r2, #0
 8023ece:	4614      	mov	r4, r2
 8023ed0:	e71a      	b.n	8023d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ed2:	4602      	mov	r2, r0
 8023ed4:	4604      	mov	r4, r0
 8023ed6:	e717      	b.n	8023d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ed8:	2200      	movs	r2, #0
 8023eda:	e715      	b.n	8023d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023edc:	4632      	mov	r2, r6
 8023ede:	e713      	b.n	8023d08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

08023ee0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ee4:	b09b      	sub	sp, #108	; 0x6c
 8023ee6:	9218      	str	r2, [sp, #96]	; 0x60
 8023ee8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023eea:	9019      	str	r0, [sp, #100]	; 0x64
 8023eec:	9116      	str	r1, [sp, #88]	; 0x58
 8023eee:	6850      	ldr	r0, [r2, #4]
 8023ef0:	9307      	str	r3, [sp, #28]
 8023ef2:	6812      	ldr	r2, [r2, #0]
 8023ef4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023ef8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023efc:	fb00 1303 	mla	r3, r0, r3, r1
 8023f00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023f04:	930a      	str	r3, [sp, #40]	; 0x28
 8023f06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023f08:	681b      	ldr	r3, [r3, #0]
 8023f0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023f0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023f0e:	2b00      	cmp	r3, #0
 8023f10:	dc03      	bgt.n	8023f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023f12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023f14:	2b00      	cmp	r3, #0
 8023f16:	f340 8387 	ble.w	8024628 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023f1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023f1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f24:	1e48      	subs	r0, r1, #1
 8023f26:	1e57      	subs	r7, r2, #1
 8023f28:	9b07      	ldr	r3, [sp, #28]
 8023f2a:	2b00      	cmp	r3, #0
 8023f2c:	f340 8166 	ble.w	80241fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023f30:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023f34:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023f38:	d406      	bmi.n	8023f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023f3a:	4584      	cmp	ip, r0
 8023f3c:	da04      	bge.n	8023f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023f3e:	2b00      	cmp	r3, #0
 8023f40:	db02      	blt.n	8023f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023f42:	42bb      	cmp	r3, r7
 8023f44:	f2c0 815b 	blt.w	80241fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023f48:	f11c 0c01 	adds.w	ip, ip, #1
 8023f4c:	f100 814b 	bmi.w	80241e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023f50:	4561      	cmp	r1, ip
 8023f52:	f2c0 8148 	blt.w	80241e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023f56:	3301      	adds	r3, #1
 8023f58:	f100 8145 	bmi.w	80241e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023f5c:	429a      	cmp	r2, r3
 8023f5e:	f2c0 8142 	blt.w	80241e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023f62:	9b07      	ldr	r3, [sp, #28]
 8023f64:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023f66:	9317      	str	r3, [sp, #92]	; 0x5c
 8023f68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023f6a:	2b00      	cmp	r3, #0
 8023f6c:	f340 8165 	ble.w	802423a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023f70:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023f72:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023f76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023f78:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023f7c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023f80:	1422      	asrs	r2, r4, #16
 8023f82:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023f86:	689b      	ldr	r3, [r3, #8]
 8023f88:	f100 81d5 	bmi.w	8024336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023f8c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023f90:	4542      	cmp	r2, r8
 8023f92:	f280 81d0 	bge.w	8024336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023f96:	f1bc 0f00 	cmp.w	ip, #0
 8023f9a:	f2c0 81cc 	blt.w	8024336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023f9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023fa2:	45c4      	cmp	ip, r8
 8023fa4:	f280 81c7 	bge.w	8024336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023fa8:	b21b      	sxth	r3, r3
 8023faa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023fac:	fb0c 2203 	mla	r2, ip, r3, r2
 8023fb0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023fb4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023fb8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023fbc:	2900      	cmp	r1, #0
 8023fbe:	f000 8182 	beq.w	80242c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023fc2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023fc6:	950b      	str	r5, [sp, #44]	; 0x2c
 8023fc8:	0e2d      	lsrs	r5, r5, #24
 8023fca:	9512      	str	r5, [sp, #72]	; 0x48
 8023fcc:	b180      	cbz	r0, 8023ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023fce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023fd2:	3b01      	subs	r3, #1
 8023fd4:	009b      	lsls	r3, r3, #2
 8023fd6:	3304      	adds	r3, #4
 8023fd8:	eb08 0c03 	add.w	ip, r8, r3
 8023fdc:	f858 3003 	ldr.w	r3, [r8, r3]
 8023fe0:	9308      	str	r3, [sp, #32]
 8023fe2:	0e1b      	lsrs	r3, r3, #24
 8023fe4:	9310      	str	r3, [sp, #64]	; 0x40
 8023fe6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023fea:	930c      	str	r3, [sp, #48]	; 0x30
 8023fec:	0e1b      	lsrs	r3, r3, #24
 8023fee:	9313      	str	r3, [sp, #76]	; 0x4c
 8023ff0:	b289      	uxth	r1, r1
 8023ff2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023ff4:	b280      	uxth	r0, r0
 8023ff6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ff8:	fb01 f900 	mul.w	r9, r1, r0
 8023ffc:	0109      	lsls	r1, r1, #4
 8023ffe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024002:	eba1 0809 	sub.w	r8, r1, r9
 8024006:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 802400a:	b280      	uxth	r0, r0
 802400c:	fa1f f888 	uxth.w	r8, r8
 8024010:	1a09      	subs	r1, r1, r0
 8024012:	fb08 f303 	mul.w	r3, r8, r3
 8024016:	b289      	uxth	r1, r1
 8024018:	fb01 330e 	mla	r3, r1, lr, r3
 802401c:	fb00 3305 	mla	r3, r0, r5, r3
 8024020:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024022:	fb09 3305 	mla	r3, r9, r5, r3
 8024026:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802402a:	2b00      	cmp	r3, #0
 802402c:	f000 80d2 	beq.w	80241d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024030:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024034:	d01b      	beq.n	802406e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024036:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802403a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802403e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024042:	fb0e fe02 	mul.w	lr, lr, r2
 8024046:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802404a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802404e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024052:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024056:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802405a:	4452      	add	r2, sl
 802405c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024060:	0a12      	lsrs	r2, r2, #8
 8024062:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024066:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802406a:	ea42 020c 	orr.w	r2, r2, ip
 802406e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024070:	2dff      	cmp	r5, #255	; 0xff
 8024072:	d021      	beq.n	80240b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024074:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024076:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802407a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802407c:	fb05 fb0b 	mul.w	fp, r5, fp
 8024080:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024082:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024086:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024088:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802408c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024090:	fb05 fa0a 	mul.w	sl, r5, sl
 8024094:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024098:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802409c:	44de      	add	lr, fp
 802409e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240b2:	ea4e 050a 	orr.w	r5, lr, sl
 80240b6:	950b      	str	r5, [sp, #44]	; 0x2c
 80240b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80240ba:	2dff      	cmp	r5, #255	; 0xff
 80240bc:	d021      	beq.n	8024102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80240be:	9d08      	ldr	r5, [sp, #32]
 80240c0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80240c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80240c6:	fb05 fb0b 	mul.w	fp, r5, fp
 80240ca:	9d08      	ldr	r5, [sp, #32]
 80240cc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80240d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80240d2:	fb05 fa0e 	mul.w	sl, r5, lr
 80240d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240e2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240e6:	44de      	add	lr, fp
 80240e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240fc:	ea4e 050a 	orr.w	r5, lr, sl
 8024100:	9508      	str	r5, [sp, #32]
 8024102:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024104:	2dff      	cmp	r5, #255	; 0xff
 8024106:	d021      	beq.n	802414c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024108:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802410a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802410e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024110:	fb05 fb0b 	mul.w	fp, r5, fp
 8024114:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024116:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802411a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802411c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024120:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024124:	fb05 fa0a 	mul.w	sl, r5, sl
 8024128:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802412c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024130:	44de      	add	lr, fp
 8024132:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024136:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802413a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802413e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024142:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024146:	ea4e 050a 	orr.w	r5, lr, sl
 802414a:	950c      	str	r5, [sp, #48]	; 0x30
 802414c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802414e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024152:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024156:	2bff      	cmp	r3, #255	; 0xff
 8024158:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802415c:	9d08      	ldr	r5, [sp, #32]
 802415e:	fb08 fc0c 	mul.w	ip, r8, ip
 8024162:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024166:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802416a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802416c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024170:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024174:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024176:	fb09 cc0e 	mla	ip, r9, lr, ip
 802417a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802417e:	fb08 f80e 	mul.w	r8, r8, lr
 8024182:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024186:	fb01 8202 	mla	r2, r1, r2, r8
 802418a:	9908      	ldr	r1, [sp, #32]
 802418c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024190:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024194:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024196:	fb00 220a 	mla	r2, r0, sl, r2
 802419a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802419e:	fb09 2900 	mla	r9, r9, r0, r2
 80241a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80241a6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80241aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80241ae:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80241b2:	f040 8091 	bne.w	80242d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80241b6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80241ba:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80241be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80241c2:	f022 0207 	bic.w	r2, r2, #7
 80241c6:	431a      	orrs	r2, r3
 80241c8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80241cc:	ea4c 0c02 	orr.w	ip, ip, r2
 80241d0:	f8a7 c000 	strh.w	ip, [r7]
 80241d4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80241d6:	3702      	adds	r7, #2
 80241d8:	441c      	add	r4, r3
 80241da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80241dc:	441e      	add	r6, r3
 80241de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80241e0:	3b01      	subs	r3, #1
 80241e2:	9317      	str	r3, [sp, #92]	; 0x5c
 80241e4:	e6c0      	b.n	8023f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80241e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80241e8:	441c      	add	r4, r3
 80241ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80241ec:	441e      	add	r6, r3
 80241ee:	9b07      	ldr	r3, [sp, #28]
 80241f0:	3b01      	subs	r3, #1
 80241f2:	9307      	str	r3, [sp, #28]
 80241f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80241f6:	3302      	adds	r3, #2
 80241f8:	930a      	str	r3, [sp, #40]	; 0x28
 80241fa:	e695      	b.n	8023f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80241fc:	d024      	beq.n	8024248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80241fe:	9b07      	ldr	r3, [sp, #28]
 8024200:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024202:	3b01      	subs	r3, #1
 8024204:	fb00 4003 	mla	r0, r0, r3, r4
 8024208:	1400      	asrs	r0, r0, #16
 802420a:	f53f aeaa 	bmi.w	8023f62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802420e:	3901      	subs	r1, #1
 8024210:	4288      	cmp	r0, r1
 8024212:	f6bf aea6 	bge.w	8023f62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024216:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024218:	fb01 6303 	mla	r3, r1, r3, r6
 802421c:	141b      	asrs	r3, r3, #16
 802421e:	f53f aea0 	bmi.w	8023f62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024222:	3a01      	subs	r2, #1
 8024224:	4293      	cmp	r3, r2
 8024226:	f6bf ae9c 	bge.w	8023f62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802422a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802422e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024232:	f1bb 0f00 	cmp.w	fp, #0
 8024236:	f300 809a 	bgt.w	802436e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802423a:	9b07      	ldr	r3, [sp, #28]
 802423c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024240:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024242:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024246:	930a      	str	r3, [sp, #40]	; 0x28
 8024248:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802424a:	2b00      	cmp	r3, #0
 802424c:	f340 81ec 	ble.w	8024628 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8024250:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024254:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024256:	ee30 0a04 	vadd.f32	s0, s0, s8
 802425a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802425e:	eef0 6a62 	vmov.f32	s13, s5
 8024262:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024266:	ee31 1a05 	vadd.f32	s2, s2, s10
 802426a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802426e:	ee16 4a90 	vmov	r4, s13
 8024272:	eef0 6a43 	vmov.f32	s13, s6
 8024276:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802427a:	ee16 6a90 	vmov	r6, s13
 802427e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024282:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024286:	ee77 2a62 	vsub.f32	s5, s14, s5
 802428a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802428e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024292:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024296:	ee12 2a90 	vmov	r2, s5
 802429a:	eef0 2a47 	vmov.f32	s5, s14
 802429e:	fb92 f3f3 	sdiv	r3, r2, r3
 80242a2:	ee13 2a10 	vmov	r2, s6
 80242a6:	9327      	str	r3, [sp, #156]	; 0x9c
 80242a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80242aa:	eeb0 3a67 	vmov.f32	s6, s15
 80242ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80242b2:	9328      	str	r3, [sp, #160]	; 0xa0
 80242b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80242b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80242b8:	3b01      	subs	r3, #1
 80242ba:	9316      	str	r3, [sp, #88]	; 0x58
 80242bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80242be:	bf08      	it	eq
 80242c0:	4613      	moveq	r3, r2
 80242c2:	9307      	str	r3, [sp, #28]
 80242c4:	e622      	b.n	8023f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80242c6:	2800      	cmp	r0, #0
 80242c8:	f43f ae92 	beq.w	8023ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80242cc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80242d0:	9308      	str	r3, [sp, #32]
 80242d2:	0e1b      	lsrs	r3, r3, #24
 80242d4:	9310      	str	r3, [sp, #64]	; 0x40
 80242d6:	e68b      	b.n	8023ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80242d8:	8839      	ldrh	r1, [r7, #0]
 80242da:	43db      	mvns	r3, r3
 80242dc:	4dd4      	ldr	r5, [pc, #848]	; (8024630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 80242de:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80242e2:	fa5f f883 	uxtb.w	r8, r3
 80242e6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80242ea:	10c8      	asrs	r0, r1, #3
 80242ec:	00cb      	lsls	r3, r1, #3
 80242ee:	fb0e fe08 	mul.w	lr, lr, r8
 80242f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80242f6:	b2db      	uxtb	r3, r3
 80242f8:	f10e 0101 	add.w	r1, lr, #1
 80242fc:	fb00 f008 	mul.w	r0, r0, r8
 8024300:	fb03 f308 	mul.w	r3, r3, r8
 8024304:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8024308:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802430c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8024310:	f100 0e01 	add.w	lr, r0, #1
 8024314:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024318:	b2c9      	uxtb	r1, r1
 802431a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802431e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024322:	00d2      	lsls	r2, r2, #3
 8024324:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024328:	430a      	orrs	r2, r1
 802432a:	1c59      	adds	r1, r3, #1
 802432c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024330:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024334:	e748      	b.n	80241c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024336:	f112 0801 	adds.w	r8, r2, #1
 802433a:	f53f af4b 	bmi.w	80241d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802433e:	4543      	cmp	r3, r8
 8024340:	f6ff af48 	blt.w	80241d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024344:	f11c 0801 	adds.w	r8, ip, #1
 8024348:	f53f af44 	bmi.w	80241d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802434c:	45c6      	cmp	lr, r8
 802434e:	f6ff af41 	blt.w	80241d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024352:	b21b      	sxth	r3, r3
 8024354:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024358:	fa0f f28e 	sxth.w	r2, lr
 802435c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024360:	9200      	str	r2, [sp, #0]
 8024362:	4639      	mov	r1, r7
 8024364:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024366:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024368:	f7ff fc88 	bl	8023c7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802436c:	e732      	b.n	80241d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802436e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024370:	1421      	asrs	r1, r4, #16
 8024372:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024374:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024378:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802437c:	1433      	asrs	r3, r6, #16
 802437e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024382:	fb07 1303 	mla	r3, r7, r3, r1
 8024386:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024388:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802438c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024390:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024394:	2a00      	cmp	r2, #0
 8024396:	f000 8108 	beq.w	80245aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 802439a:	684d      	ldr	r5, [r1, #4]
 802439c:	950d      	str	r5, [sp, #52]	; 0x34
 802439e:	0e2d      	lsrs	r5, r5, #24
 80243a0:	9514      	str	r5, [sp, #80]	; 0x50
 80243a2:	b178      	cbz	r0, 80243c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80243a4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80243a8:	3f01      	subs	r7, #1
 80243aa:	00bf      	lsls	r7, r7, #2
 80243ac:	3704      	adds	r7, #4
 80243ae:	eb01 0e07 	add.w	lr, r1, r7
 80243b2:	59c9      	ldr	r1, [r1, r7]
 80243b4:	9109      	str	r1, [sp, #36]	; 0x24
 80243b6:	0e09      	lsrs	r1, r1, #24
 80243b8:	9111      	str	r1, [sp, #68]	; 0x44
 80243ba:	f8de 1004 	ldr.w	r1, [lr, #4]
 80243be:	910e      	str	r1, [sp, #56]	; 0x38
 80243c0:	0e09      	lsrs	r1, r1, #24
 80243c2:	9115      	str	r1, [sp, #84]	; 0x54
 80243c4:	b292      	uxth	r2, r2
 80243c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80243c8:	b280      	uxth	r0, r0
 80243ca:	fb02 f900 	mul.w	r9, r2, r0
 80243ce:	0112      	lsls	r2, r2, #4
 80243d0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80243d4:	eba2 0e09 	sub.w	lr, r2, r9
 80243d8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80243dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80243de:	b280      	uxth	r0, r0
 80243e0:	fa1f fe8e 	uxth.w	lr, lr
 80243e4:	1a09      	subs	r1, r1, r0
 80243e6:	fb0e f202 	mul.w	r2, lr, r2
 80243ea:	b289      	uxth	r1, r1
 80243ec:	fb01 220c 	mla	r2, r1, ip, r2
 80243f0:	fb00 2205 	mla	r2, r0, r5, r2
 80243f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80243f6:	fb09 2205 	mla	r2, r9, r5, r2
 80243fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80243fe:	2a00      	cmp	r2, #0
 8024400:	f000 80ca 	beq.w	8024598 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8024404:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024408:	d019      	beq.n	802443e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802440a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802440e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024412:	fb0c fa0a 	mul.w	sl, ip, sl
 8024416:	fb0c fc03 	mul.w	ip, ip, r3
 802441a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802441e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024422:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024426:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802442a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802442e:	4453      	add	r3, sl
 8024430:	0a3f      	lsrs	r7, r7, #8
 8024432:	0a1b      	lsrs	r3, r3, #8
 8024434:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024438:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802443c:	433b      	orrs	r3, r7
 802443e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024440:	2dff      	cmp	r5, #255	; 0xff
 8024442:	d020      	beq.n	8024486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024444:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024446:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802444a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802444c:	436f      	muls	r7, r5
 802444e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024450:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024454:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024458:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802445a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802445e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024462:	fb05 fa0a 	mul.w	sl, r5, sl
 8024466:	44bc      	add	ip, r7
 8024468:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802446c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024470:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024474:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024478:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802447c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024480:	ea4c 050a 	orr.w	r5, ip, sl
 8024484:	950d      	str	r5, [sp, #52]	; 0x34
 8024486:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024488:	2dff      	cmp	r5, #255	; 0xff
 802448a:	d020      	beq.n	80244ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802448c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802448e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024492:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024494:	436f      	muls	r7, r5
 8024496:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024498:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802449c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802449e:	fb05 fa0c 	mul.w	sl, r5, ip
 80244a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244ae:	44bc      	add	ip, r7
 80244b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80244b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244c8:	ea4c 050a 	orr.w	r5, ip, sl
 80244cc:	9509      	str	r5, [sp, #36]	; 0x24
 80244ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80244d0:	2dff      	cmp	r5, #255	; 0xff
 80244d2:	d020      	beq.n	8024516 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80244d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80244d6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80244da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80244dc:	436f      	muls	r7, r5
 80244de:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80244e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80244e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80244ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244f2:	fb05 fa0a 	mul.w	sl, r5, sl
 80244f6:	44bc      	add	ip, r7
 80244f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024500:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024504:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024508:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802450c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024510:	ea4c 050a 	orr.w	r5, ip, sl
 8024514:	950e      	str	r5, [sp, #56]	; 0x38
 8024516:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024518:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802451c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024520:	2aff      	cmp	r2, #255	; 0xff
 8024522:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024526:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024528:	fb0e f707 	mul.w	r7, lr, r7
 802452c:	fb01 770c 	mla	r7, r1, ip, r7
 8024530:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024534:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024536:	fb00 770c 	mla	r7, r0, ip, r7
 802453a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802453e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024540:	fb09 770c 	mla	r7, r9, ip, r7
 8024544:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024548:	fb0e fe0c 	mul.w	lr, lr, ip
 802454c:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8024550:	fb01 e303 	mla	r3, r1, r3, lr
 8024554:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024556:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802455a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802455e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024560:	fb00 330a 	mla	r3, r0, sl, r3
 8024564:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024568:	fb09 3c0c 	mla	ip, r9, ip, r3
 802456c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024570:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024574:	ea47 070c 	orr.w	r7, r7, ip
 8024578:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802457c:	d11e      	bne.n	80245bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 802457e:	097a      	lsrs	r2, r7, #5
 8024580:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024584:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024588:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802458c:	f023 0307 	bic.w	r3, r3, #7
 8024590:	4313      	orrs	r3, r2
 8024592:	431f      	orrs	r7, r3
 8024594:	f8a8 7000 	strh.w	r7, [r8]
 8024598:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802459a:	f108 0802 	add.w	r8, r8, #2
 802459e:	f10b 3bff 	add.w	fp, fp, #4294967295
 80245a2:	441c      	add	r4, r3
 80245a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245a6:	441e      	add	r6, r3
 80245a8:	e643      	b.n	8024232 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80245aa:	2800      	cmp	r0, #0
 80245ac:	f43f af0a 	beq.w	80243c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80245b0:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80245b4:	9109      	str	r1, [sp, #36]	; 0x24
 80245b6:	0e09      	lsrs	r1, r1, #24
 80245b8:	9111      	str	r1, [sp, #68]	; 0x44
 80245ba:	e703      	b.n	80243c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80245bc:	f8b8 1000 	ldrh.w	r1, [r8]
 80245c0:	43d2      	mvns	r2, r2
 80245c2:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80245c6:	fa5f fe82 	uxtb.w	lr, r2
 80245ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80245ce:	10c8      	asrs	r0, r1, #3
 80245d0:	00ca      	lsls	r2, r1, #3
 80245d2:	fb0c fc0e 	mul.w	ip, ip, lr
 80245d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80245da:	b2d2      	uxtb	r2, r2
 80245dc:	f10c 0101 	add.w	r1, ip, #1
 80245e0:	fb00 f00e 	mul.w	r0, r0, lr
 80245e4:	fb02 f20e 	mul.w	r2, r2, lr
 80245e8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80245ec:	0c39      	lsrs	r1, r7, #16
 80245ee:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80245f2:	490f      	ldr	r1, [pc, #60]	; (8024630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 80245f4:	fa5f fc8c 	uxtb.w	ip, ip
 80245f8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80245fc:	1c41      	adds	r1, r0, #1
 80245fe:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024602:	1c51      	adds	r1, r2, #1
 8024604:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024608:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802460c:	00c0      	lsls	r0, r0, #3
 802460e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024612:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024616:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802461a:	ea4c 0c00 	orr.w	ip, ip, r0
 802461e:	ea47 0c0c 	orr.w	ip, r7, ip
 8024622:	f8a8 c000 	strh.w	ip, [r8]
 8024626:	e7b7      	b.n	8024598 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8024628:	b01b      	add	sp, #108	; 0x6c
 802462a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802462e:	bf00      	nop
 8024630:	fffff800 	.word	0xfffff800

08024634 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024638:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802463c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024640:	2d00      	cmp	r5, #0
 8024642:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024646:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802464a:	fb05 0e03 	mla	lr, r5, r3, r0
 802464e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024652:	f2c0 808c 	blt.w	802476e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024656:	45a9      	cmp	r9, r5
 8024658:	f340 8089 	ble.w	802476e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802465c:	2800      	cmp	r0, #0
 802465e:	f2c0 8084 	blt.w	802476a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024662:	4580      	cmp	r8, r0
 8024664:	f340 8081 	ble.w	802476a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024668:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802466c:	f01e 0f01 	tst.w	lr, #1
 8024670:	5d16      	ldrb	r6, [r2, r4]
 8024672:	bf0c      	ite	eq
 8024674:	f006 060f 	andeq.w	r6, r6, #15
 8024678:	1136      	asrne	r6, r6, #4
 802467a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802467e:	b2f6      	uxtb	r6, r6
 8024680:	1c44      	adds	r4, r0, #1
 8024682:	d477      	bmi.n	8024774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024684:	45a0      	cmp	r8, r4
 8024686:	dd75      	ble.n	8024774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024688:	2f00      	cmp	r7, #0
 802468a:	d075      	beq.n	8024778 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802468c:	f10e 0a01 	add.w	sl, lr, #1
 8024690:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024694:	f01a 0f01 	tst.w	sl, #1
 8024698:	5d14      	ldrb	r4, [r2, r4]
 802469a:	bf0c      	ite	eq
 802469c:	f004 040f 	andeq.w	r4, r4, #15
 80246a0:	1124      	asrne	r4, r4, #4
 80246a2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80246a6:	b2e4      	uxtb	r4, r4
 80246a8:	3501      	adds	r5, #1
 80246aa:	d469      	bmi.n	8024780 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80246ac:	45a9      	cmp	r9, r5
 80246ae:	dd67      	ble.n	8024780 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80246b0:	f1bc 0f00 	cmp.w	ip, #0
 80246b4:	d067      	beq.n	8024786 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80246b6:	2800      	cmp	r0, #0
 80246b8:	db60      	blt.n	802477c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80246ba:	4580      	cmp	r8, r0
 80246bc:	dd5e      	ble.n	802477c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80246be:	eb03 090e 	add.w	r9, r3, lr
 80246c2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80246c6:	f019 0f01 	tst.w	r9, #1
 80246ca:	5d55      	ldrb	r5, [r2, r5]
 80246cc:	bf0c      	ite	eq
 80246ce:	f005 050f 	andeq.w	r5, r5, #15
 80246d2:	112d      	asrne	r5, r5, #4
 80246d4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80246d8:	b2ed      	uxtb	r5, r5
 80246da:	3001      	adds	r0, #1
 80246dc:	d456      	bmi.n	802478c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80246de:	4580      	cmp	r8, r0
 80246e0:	dd54      	ble.n	802478c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80246e2:	2f00      	cmp	r7, #0
 80246e4:	d054      	beq.n	8024790 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80246e6:	3301      	adds	r3, #1
 80246e8:	449e      	add	lr, r3
 80246ea:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80246ee:	f01e 0f01 	tst.w	lr, #1
 80246f2:	5cd0      	ldrb	r0, [r2, r3]
 80246f4:	bf0c      	ite	eq
 80246f6:	f000 000f 	andeq.w	r0, r0, #15
 80246fa:	1100      	asrne	r0, r0, #4
 80246fc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024700:	b2c3      	uxtb	r3, r0
 8024702:	b2ba      	uxth	r2, r7
 8024704:	fa1f fc8c 	uxth.w	ip, ip
 8024708:	fb02 f00c 	mul.w	r0, r2, ip
 802470c:	0112      	lsls	r2, r2, #4
 802470e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024712:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024716:	1a12      	subs	r2, r2, r0
 8024718:	fa1f fc8c 	uxth.w	ip, ip
 802471c:	b292      	uxth	r2, r2
 802471e:	eba7 070c 	sub.w	r7, r7, ip
 8024722:	4362      	muls	r2, r4
 8024724:	b2bf      	uxth	r7, r7
 8024726:	fb06 2207 	mla	r2, r6, r7, r2
 802472a:	fb0c 2505 	mla	r5, ip, r5, r2
 802472e:	fb00 5303 	mla	r3, r0, r3, r5
 8024732:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024736:	b1b3      	cbz	r3, 8024766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024738:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802473c:	435a      	muls	r2, r3
 802473e:	1c53      	adds	r3, r2, #1
 8024740:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024744:	4a2d      	ldr	r2, [pc, #180]	; (80247fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024746:	121b      	asrs	r3, r3, #8
 8024748:	6812      	ldr	r2, [r2, #0]
 802474a:	2bff      	cmp	r3, #255	; 0xff
 802474c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024750:	d120      	bne.n	8024794 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024752:	0950      	lsrs	r0, r2, #5
 8024754:	4b2a      	ldr	r3, [pc, #168]	; (8024800 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024756:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802475a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802475e:	4033      	ands	r3, r6
 8024760:	4318      	orrs	r0, r3
 8024762:	4302      	orrs	r2, r0
 8024764:	800a      	strh	r2, [r1, #0]
 8024766:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802476a:	2600      	movs	r6, #0
 802476c:	e788      	b.n	8024680 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802476e:	2400      	movs	r4, #0
 8024770:	4626      	mov	r6, r4
 8024772:	e799      	b.n	80246a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024774:	2400      	movs	r4, #0
 8024776:	e797      	b.n	80246a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024778:	463c      	mov	r4, r7
 802477a:	e795      	b.n	80246a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802477c:	2500      	movs	r5, #0
 802477e:	e7ac      	b.n	80246da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024780:	2300      	movs	r3, #0
 8024782:	461d      	mov	r5, r3
 8024784:	e7bd      	b.n	8024702 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024786:	4663      	mov	r3, ip
 8024788:	4665      	mov	r5, ip
 802478a:	e7ba      	b.n	8024702 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802478c:	2300      	movs	r3, #0
 802478e:	e7b8      	b.n	8024702 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024790:	463b      	mov	r3, r7
 8024792:	e7b6      	b.n	8024702 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024794:	880d      	ldrh	r5, [r1, #0]
 8024796:	b29f      	uxth	r7, r3
 8024798:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802479c:	43db      	mvns	r3, r3
 802479e:	122c      	asrs	r4, r5, #8
 80247a0:	fb10 f007 	smulbb	r0, r0, r7
 80247a4:	b2db      	uxtb	r3, r3
 80247a6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80247aa:	b2f6      	uxtb	r6, r6
 80247ac:	b2d2      	uxtb	r2, r2
 80247ae:	fb04 0403 	mla	r4, r4, r3, r0
 80247b2:	10e8      	asrs	r0, r5, #3
 80247b4:	fb12 f207 	smulbb	r2, r2, r7
 80247b8:	00ed      	lsls	r5, r5, #3
 80247ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80247be:	b2a4      	uxth	r4, r4
 80247c0:	fb16 f607 	smulbb	r6, r6, r7
 80247c4:	b2ed      	uxtb	r5, r5
 80247c6:	fb00 6603 	mla	r6, r0, r3, r6
 80247ca:	fb05 2303 	mla	r3, r5, r3, r2
 80247ce:	b2b0      	uxth	r0, r6
 80247d0:	b29a      	uxth	r2, r3
 80247d2:	1c63      	adds	r3, r4, #1
 80247d4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80247d8:	1c53      	adds	r3, r2, #1
 80247da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80247de:	1c42      	adds	r2, r0, #1
 80247e0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80247e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80247e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80247ec:	0940      	lsrs	r0, r0, #5
 80247ee:	4323      	orrs	r3, r4
 80247f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80247f4:	4303      	orrs	r3, r0
 80247f6:	800b      	strh	r3, [r1, #0]
 80247f8:	e7b5      	b.n	8024766 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80247fa:	bf00      	nop
 80247fc:	24004a58 	.word	0x24004a58
 8024800:	00fff800 	.word	0x00fff800

08024804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024808:	b097      	sub	sp, #92	; 0x5c
 802480a:	9214      	str	r2, [sp, #80]	; 0x50
 802480c:	9309      	str	r3, [sp, #36]	; 0x24
 802480e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024810:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024814:	9015      	str	r0, [sp, #84]	; 0x54
 8024816:	910d      	str	r1, [sp, #52]	; 0x34
 8024818:	6850      	ldr	r0, [r2, #4]
 802481a:	930f      	str	r3, [sp, #60]	; 0x3c
 802481c:	6812      	ldr	r2, [r2, #0]
 802481e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024822:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024826:	fb00 1303 	mla	r3, r0, r3, r1
 802482a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802482e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024830:	689b      	ldr	r3, [r3, #8]
 8024832:	3301      	adds	r3, #1
 8024834:	f023 0301 	bic.w	r3, r3, #1
 8024838:	930a      	str	r3, [sp, #40]	; 0x28
 802483a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802483c:	681f      	ldr	r7, [r3, #0]
 802483e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024840:	2b00      	cmp	r3, #0
 8024842:	dc03      	bgt.n	802484c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024844:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024846:	2b00      	cmp	r3, #0
 8024848:	f340 8289 	ble.w	8024d5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802484c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802484e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024852:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024856:	1e48      	subs	r0, r1, #1
 8024858:	f102 3cff 	add.w	ip, r2, #4294967295
 802485c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802485e:	2b00      	cmp	r3, #0
 8024860:	f340 80c5 	ble.w	80249ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024864:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024868:	ea4f 4326 	mov.w	r3, r6, asr #16
 802486c:	d406      	bmi.n	802487c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802486e:	4586      	cmp	lr, r0
 8024870:	da04      	bge.n	802487c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024872:	2b00      	cmp	r3, #0
 8024874:	db02      	blt.n	802487c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024876:	4563      	cmp	r3, ip
 8024878:	f2c0 80ba 	blt.w	80249f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802487c:	f11e 0e01 	adds.w	lr, lr, #1
 8024880:	f100 80ab 	bmi.w	80249da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024884:	4571      	cmp	r1, lr
 8024886:	f2c0 80a8 	blt.w	80249da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 802488a:	3301      	adds	r3, #1
 802488c:	f100 80a5 	bmi.w	80249da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024890:	429a      	cmp	r2, r3
 8024892:	f2c0 80a2 	blt.w	80249da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024896:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024898:	46c8      	mov	r8, r9
 802489a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802489e:	930e      	str	r3, [sp, #56]	; 0x38
 80248a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80248a2:	2b00      	cmp	r3, #0
 80248a4:	f340 80c4 	ble.w	8024a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80248a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80248aa:	1430      	asrs	r0, r6, #16
 80248ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80248b0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80248b4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80248b8:	1423      	asrs	r3, r4, #16
 80248ba:	f100 814f 	bmi.w	8024b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80248be:	f10c 3bff 	add.w	fp, ip, #4294967295
 80248c2:	455b      	cmp	r3, fp
 80248c4:	f280 814a 	bge.w	8024b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80248c8:	2800      	cmp	r0, #0
 80248ca:	f2c0 8147 	blt.w	8024b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80248ce:	f10e 3bff 	add.w	fp, lr, #4294967295
 80248d2:	4558      	cmp	r0, fp
 80248d4:	f280 8142 	bge.w	8024b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80248d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80248da:	fb00 3305 	mla	r3, r0, r5, r3
 80248de:	0858      	lsrs	r0, r3, #1
 80248e0:	07dd      	lsls	r5, r3, #31
 80248e2:	f817 c000 	ldrb.w	ip, [r7, r0]
 80248e6:	bf54      	ite	pl
 80248e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80248ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80248f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80248f4:	fa5f fc8c 	uxtb.w	ip, ip
 80248f8:	2a00      	cmp	r2, #0
 80248fa:	f000 80dd 	beq.w	8024ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80248fe:	1c58      	adds	r0, r3, #1
 8024900:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024904:	07c0      	lsls	r0, r0, #31
 8024906:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802490a:	bf54      	ite	pl
 802490c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024910:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024914:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024918:	fa5f f08e 	uxtb.w	r0, lr
 802491c:	9010      	str	r0, [sp, #64]	; 0x40
 802491e:	b1d9      	cbz	r1, 8024958 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8024920:	4453      	add	r3, sl
 8024922:	0858      	lsrs	r0, r3, #1
 8024924:	07dd      	lsls	r5, r3, #31
 8024926:	f103 0301 	add.w	r3, r3, #1
 802492a:	5c38      	ldrb	r0, [r7, r0]
 802492c:	bf54      	ite	pl
 802492e:	f000 000f 	andpl.w	r0, r0, #15
 8024932:	1100      	asrmi	r0, r0, #4
 8024934:	07dd      	lsls	r5, r3, #31
 8024936:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802493a:	b2c0      	uxtb	r0, r0
 802493c:	900b      	str	r0, [sp, #44]	; 0x2c
 802493e:	ea4f 0053 	mov.w	r0, r3, lsr #1
 8024942:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024946:	bf54      	ite	pl
 8024948:	f00e 030f 	andpl.w	r3, lr, #15
 802494c:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024950:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024954:	b2db      	uxtb	r3, r3
 8024956:	9311      	str	r3, [sp, #68]	; 0x44
 8024958:	b292      	uxth	r2, r2
 802495a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802495c:	b289      	uxth	r1, r1
 802495e:	fb02 f301 	mul.w	r3, r2, r1
 8024962:	0112      	lsls	r2, r2, #4
 8024964:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024968:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802496c:	1ad2      	subs	r2, r2, r3
 802496e:	b289      	uxth	r1, r1
 8024970:	b292      	uxth	r2, r2
 8024972:	1a40      	subs	r0, r0, r1
 8024974:	436a      	muls	r2, r5
 8024976:	b280      	uxth	r0, r0
 8024978:	fb0c 2c00 	mla	ip, ip, r0, r2
 802497c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802497e:	fb01 c102 	mla	r1, r1, r2, ip
 8024982:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024984:	fb03 1302 	mla	r3, r3, r2, r1
 8024988:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802498c:	b1db      	cbz	r3, 80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802498e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024990:	4353      	muls	r3, r2
 8024992:	1c5a      	adds	r2, r3, #1
 8024994:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024998:	4ac6      	ldr	r2, [pc, #792]	; (8024cb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 802499a:	121b      	asrs	r3, r3, #8
 802499c:	6812      	ldr	r2, [r2, #0]
 802499e:	2bff      	cmp	r3, #255	; 0xff
 80249a0:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80249a4:	f040 8099 	bne.w	8024ada <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80249a8:	0953      	lsrs	r3, r2, #5
 80249aa:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80249ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80249b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80249b6:	f02c 0c07 	bic.w	ip, ip, #7
 80249ba:	ea43 0c0c 	orr.w	ip, r3, ip
 80249be:	ea4c 0202 	orr.w	r2, ip, r2
 80249c2:	f8a8 2000 	strh.w	r2, [r8]
 80249c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80249c8:	f108 0802 	add.w	r8, r8, #2
 80249cc:	441c      	add	r4, r3
 80249ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80249d0:	441e      	add	r6, r3
 80249d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80249d4:	3b01      	subs	r3, #1
 80249d6:	930e      	str	r3, [sp, #56]	; 0x38
 80249d8:	e762      	b.n	80248a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80249da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80249dc:	f109 0902 	add.w	r9, r9, #2
 80249e0:	441c      	add	r4, r3
 80249e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80249e4:	441e      	add	r6, r3
 80249e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80249e8:	3b01      	subs	r3, #1
 80249ea:	9309      	str	r3, [sp, #36]	; 0x24
 80249ec:	e736      	b.n	802485c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80249ee:	d024      	beq.n	8024a3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80249f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80249f2:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80249f4:	3b01      	subs	r3, #1
 80249f6:	fb00 4003 	mla	r0, r0, r3, r4
 80249fa:	1400      	asrs	r0, r0, #16
 80249fc:	f53f af4b 	bmi.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a00:	3901      	subs	r1, #1
 8024a02:	4288      	cmp	r0, r1
 8024a04:	f6bf af47 	bge.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a08:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024a0a:	fb01 6303 	mla	r3, r1, r3, r6
 8024a0e:	141b      	asrs	r3, r3, #16
 8024a10:	f53f af41 	bmi.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a14:	3a01      	subs	r2, #1
 8024a16:	4293      	cmp	r3, r2
 8024a18:	f6bf af3d 	bge.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a1c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024a20:	46c8      	mov	r8, r9
 8024a22:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024a26:	930e      	str	r3, [sp, #56]	; 0x38
 8024a28:	f1bb 0f00 	cmp.w	fp, #0
 8024a2c:	f300 80b7 	bgt.w	8024b9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8024a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a32:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024a36:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024a3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024a3c:	2b00      	cmp	r3, #0
 8024a3e:	f340 818e 	ble.w	8024d5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8024a42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024a46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a48:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024a4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024a50:	eef0 6a62 	vmov.f32	s13, s5
 8024a54:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024a58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024a5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a60:	ee16 4a90 	vmov	r4, s13
 8024a64:	eef0 6a43 	vmov.f32	s13, s6
 8024a68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a6c:	ee16 6a90 	vmov	r6, s13
 8024a70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024a74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024a78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024a7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024a80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024a84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024a88:	ee12 2a90 	vmov	r2, s5
 8024a8c:	eef0 2a47 	vmov.f32	s5, s14
 8024a90:	fb92 f3f3 	sdiv	r3, r2, r3
 8024a94:	ee13 2a10 	vmov	r2, s6
 8024a98:	9323      	str	r3, [sp, #140]	; 0x8c
 8024a9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a9c:	eeb0 3a67 	vmov.f32	s6, s15
 8024aa0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024aa4:	9324      	str	r3, [sp, #144]	; 0x90
 8024aa6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024aa8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024aaa:	3b01      	subs	r3, #1
 8024aac:	930d      	str	r3, [sp, #52]	; 0x34
 8024aae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024ab0:	bf08      	it	eq
 8024ab2:	4613      	moveq	r3, r2
 8024ab4:	9309      	str	r3, [sp, #36]	; 0x24
 8024ab6:	e6c2      	b.n	802483e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024ab8:	2900      	cmp	r1, #0
 8024aba:	f43f af4d 	beq.w	8024958 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8024abe:	eb0a 0003 	add.w	r0, sl, r3
 8024ac2:	0843      	lsrs	r3, r0, #1
 8024ac4:	07c0      	lsls	r0, r0, #31
 8024ac6:	5cfb      	ldrb	r3, [r7, r3]
 8024ac8:	bf54      	ite	pl
 8024aca:	f003 030f 	andpl.w	r3, r3, #15
 8024ace:	111b      	asrmi	r3, r3, #4
 8024ad0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024ad4:	b2db      	uxtb	r3, r3
 8024ad6:	930b      	str	r3, [sp, #44]	; 0x2c
 8024ad8:	e73e      	b.n	8024958 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8024ada:	f8b8 e000 	ldrh.w	lr, [r8]
 8024ade:	fa1f fb83 	uxth.w	fp, r3
 8024ae2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024ae6:	43db      	mvns	r3, r3
 8024ae8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024aec:	fb11 f10b 	smulbb	r1, r1, fp
 8024af0:	b2db      	uxtb	r3, r3
 8024af2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024af6:	fa5f fc8c 	uxtb.w	ip, ip
 8024afa:	b2d2      	uxtb	r2, r2
 8024afc:	fb00 1003 	mla	r0, r0, r3, r1
 8024b00:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024b04:	fb1c fc0b 	smulbb	ip, ip, fp
 8024b08:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024b0c:	b280      	uxth	r0, r0
 8024b0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024b12:	fb12 fb0b 	smulbb	fp, r2, fp
 8024b16:	fa5f fe8e 	uxtb.w	lr, lr
 8024b1a:	fb01 cc03 	mla	ip, r1, r3, ip
 8024b1e:	fb0e bb03 	mla	fp, lr, r3, fp
 8024b22:	1c43      	adds	r3, r0, #1
 8024b24:	fa1f fc8c 	uxth.w	ip, ip
 8024b28:	fa1f fb8b 	uxth.w	fp, fp
 8024b2c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024b30:	f10c 0101 	add.w	r1, ip, #1
 8024b34:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024b38:	f10b 0001 	add.w	r0, fp, #1
 8024b3c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024b40:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024b44:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024b48:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024b4c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024b50:	4318      	orrs	r0, r3
 8024b52:	ea40 000c 	orr.w	r0, r0, ip
 8024b56:	f8a8 0000 	strh.w	r0, [r8]
 8024b5a:	e734      	b.n	80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b5c:	f113 0b01 	adds.w	fp, r3, #1
 8024b60:	f53f af31 	bmi.w	80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b64:	45dc      	cmp	ip, fp
 8024b66:	f6ff af2e 	blt.w	80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b6a:	f110 0b01 	adds.w	fp, r0, #1
 8024b6e:	f53f af2a 	bmi.w	80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b72:	45de      	cmp	lr, fp
 8024b74:	f6ff af27 	blt.w	80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b78:	9302      	str	r3, [sp, #8]
 8024b7a:	fa0f f38e 	sxth.w	r3, lr
 8024b7e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024b80:	9301      	str	r3, [sp, #4]
 8024b82:	fa0f f38c 	sxth.w	r3, ip
 8024b86:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024b8a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024b8e:	9300      	str	r3, [sp, #0]
 8024b90:	463a      	mov	r2, r7
 8024b92:	4653      	mov	r3, sl
 8024b94:	4641      	mov	r1, r8
 8024b96:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024b98:	f7ff fd4c 	bl	8024634 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024b9c:	e713      	b.n	80249c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024b9e:	1422      	asrs	r2, r4, #16
 8024ba0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024ba2:	1433      	asrs	r3, r6, #16
 8024ba4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024ba8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024bac:	fb05 2303 	mla	r3, r5, r3, r2
 8024bb0:	085a      	lsrs	r2, r3, #1
 8024bb2:	07dd      	lsls	r5, r3, #31
 8024bb4:	5cba      	ldrb	r2, [r7, r2]
 8024bb6:	bf54      	ite	pl
 8024bb8:	f002 020f 	andpl.w	r2, r2, #15
 8024bbc:	1112      	asrmi	r2, r2, #4
 8024bbe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024bc2:	b2d2      	uxtb	r2, r2
 8024bc4:	2900      	cmp	r1, #0
 8024bc6:	d077      	beq.n	8024cb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8024bc8:	f103 0e01 	add.w	lr, r3, #1
 8024bcc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024bd0:	f01e 0f01 	tst.w	lr, #1
 8024bd4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024bd8:	bf0c      	ite	eq
 8024bda:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024bde:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024be2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024be6:	fa5f f58c 	uxtb.w	r5, ip
 8024bea:	9512      	str	r5, [sp, #72]	; 0x48
 8024bec:	b308      	cbz	r0, 8024c32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8024bee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bf0:	442b      	add	r3, r5
 8024bf2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024bf6:	07dd      	lsls	r5, r3, #31
 8024bf8:	f103 0301 	add.w	r3, r3, #1
 8024bfc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024c00:	bf54      	ite	pl
 8024c02:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024c06:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024c0a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024c0e:	fa5f f58c 	uxtb.w	r5, ip
 8024c12:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024c16:	950c      	str	r5, [sp, #48]	; 0x30
 8024c18:	07dd      	lsls	r5, r3, #31
 8024c1a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024c1e:	bf54      	ite	pl
 8024c20:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024c24:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024c28:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024c2c:	fa5f f38c 	uxtb.w	r3, ip
 8024c30:	9313      	str	r3, [sp, #76]	; 0x4c
 8024c32:	b289      	uxth	r1, r1
 8024c34:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024c36:	b280      	uxth	r0, r0
 8024c38:	fb01 f300 	mul.w	r3, r1, r0
 8024c3c:	0109      	lsls	r1, r1, #4
 8024c3e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024c42:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024c46:	1ac9      	subs	r1, r1, r3
 8024c48:	b280      	uxth	r0, r0
 8024c4a:	b289      	uxth	r1, r1
 8024c4c:	ebac 0c00 	sub.w	ip, ip, r0
 8024c50:	4369      	muls	r1, r5
 8024c52:	fa1f fc8c 	uxth.w	ip, ip
 8024c56:	fb02 120c 	mla	r2, r2, ip, r1
 8024c5a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024c5c:	fb00 2001 	mla	r0, r0, r1, r2
 8024c60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024c62:	fb03 0302 	mla	r3, r3, r2, r0
 8024c66:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024c6a:	b1d3      	cbz	r3, 8024ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8024c6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024c6e:	4353      	muls	r3, r2
 8024c70:	1c5a      	adds	r2, r3, #1
 8024c72:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024c76:	4a0f      	ldr	r2, [pc, #60]	; (8024cb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8024c78:	121b      	asrs	r3, r3, #8
 8024c7a:	6812      	ldr	r2, [r2, #0]
 8024c7c:	2bff      	cmp	r3, #255	; 0xff
 8024c7e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024c82:	d12d      	bne.n	8024ce0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8024c84:	0953      	lsrs	r3, r2, #5
 8024c86:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024c8a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024c8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024c92:	f02c 0c07 	bic.w	ip, ip, #7
 8024c96:	ea43 0c0c 	orr.w	ip, r3, ip
 8024c9a:	ea4c 0202 	orr.w	r2, ip, r2
 8024c9e:	f8a8 2000 	strh.w	r2, [r8]
 8024ca2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024ca4:	f108 0802 	add.w	r8, r8, #2
 8024ca8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024cac:	441c      	add	r4, r3
 8024cae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cb0:	441e      	add	r6, r3
 8024cb2:	e6b9      	b.n	8024a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8024cb4:	24004a58 	.word	0x24004a58
 8024cb8:	2800      	cmp	r0, #0
 8024cba:	d0ba      	beq.n	8024c32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8024cbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024cbe:	442b      	add	r3, r5
 8024cc0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024cc4:	07db      	lsls	r3, r3, #31
 8024cc6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024cca:	bf54      	ite	pl
 8024ccc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024cd0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024cd4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024cd8:	fa5f f38c 	uxtb.w	r3, ip
 8024cdc:	930c      	str	r3, [sp, #48]	; 0x30
 8024cde:	e7a8      	b.n	8024c32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8024ce0:	f8b8 e000 	ldrh.w	lr, [r8]
 8024ce4:	fa1f fa83 	uxth.w	sl, r3
 8024ce8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024cec:	43db      	mvns	r3, r3
 8024cee:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024cf2:	fb11 f10a 	smulbb	r1, r1, sl
 8024cf6:	b2db      	uxtb	r3, r3
 8024cf8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024cfc:	b2d2      	uxtb	r2, r2
 8024cfe:	fa5f fc8c 	uxtb.w	ip, ip
 8024d02:	fb00 1003 	mla	r0, r0, r3, r1
 8024d06:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024d0a:	fb12 f20a 	smulbb	r2, r2, sl
 8024d0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024d12:	b280      	uxth	r0, r0
 8024d14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024d18:	fb1c fc0a 	smulbb	ip, ip, sl
 8024d1c:	fa5f fe8e 	uxtb.w	lr, lr
 8024d20:	fb0e 2203 	mla	r2, lr, r3, r2
 8024d24:	fb01 cc03 	mla	ip, r1, r3, ip
 8024d28:	1c43      	adds	r3, r0, #1
 8024d2a:	b292      	uxth	r2, r2
 8024d2c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024d30:	1c51      	adds	r1, r2, #1
 8024d32:	fa1f fc8c 	uxth.w	ip, ip
 8024d36:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024d3a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024d3e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024d42:	4308      	orrs	r0, r1
 8024d44:	f10c 0101 	add.w	r1, ip, #1
 8024d48:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024d4c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024d50:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024d54:	ea40 000c 	orr.w	r0, r0, ip
 8024d58:	f8a8 0000 	strh.w	r0, [r8]
 8024d5c:	e7a1      	b.n	8024ca2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8024d5e:	b017      	add	sp, #92	; 0x5c
 8024d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024d64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024d68:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024d6c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024d70:	2d00      	cmp	r5, #0
 8024d72:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024d76:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024d7a:	fb05 0e03 	mla	lr, r5, r3, r0
 8024d7e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024d82:	f2c0 80b0 	blt.w	8024ee6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024d86:	45a9      	cmp	r9, r5
 8024d88:	f340 80ad 	ble.w	8024ee6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024d8c:	2800      	cmp	r0, #0
 8024d8e:	f2c0 80a8 	blt.w	8024ee2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024d92:	4580      	cmp	r8, r0
 8024d94:	f340 80a5 	ble.w	8024ee2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024d98:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024d9c:	f01e 0f01 	tst.w	lr, #1
 8024da0:	5d16      	ldrb	r6, [r2, r4]
 8024da2:	bf0c      	ite	eq
 8024da4:	f006 060f 	andeq.w	r6, r6, #15
 8024da8:	1136      	asrne	r6, r6, #4
 8024daa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024dae:	b2f6      	uxtb	r6, r6
 8024db0:	1c44      	adds	r4, r0, #1
 8024db2:	f100 809b 	bmi.w	8024eec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024db6:	45a0      	cmp	r8, r4
 8024db8:	f340 8098 	ble.w	8024eec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024dbc:	2f00      	cmp	r7, #0
 8024dbe:	f000 8097 	beq.w	8024ef0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024dc2:	f10e 0a01 	add.w	sl, lr, #1
 8024dc6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024dca:	f01a 0f01 	tst.w	sl, #1
 8024dce:	5d14      	ldrb	r4, [r2, r4]
 8024dd0:	bf0c      	ite	eq
 8024dd2:	f004 040f 	andeq.w	r4, r4, #15
 8024dd6:	1124      	asrne	r4, r4, #4
 8024dd8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024ddc:	b2e4      	uxtb	r4, r4
 8024dde:	3501      	adds	r5, #1
 8024de0:	f100 808a 	bmi.w	8024ef8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024de4:	45a9      	cmp	r9, r5
 8024de6:	f340 8087 	ble.w	8024ef8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024dea:	f1bc 0f00 	cmp.w	ip, #0
 8024dee:	f000 8086 	beq.w	8024efe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024df2:	2800      	cmp	r0, #0
 8024df4:	db7e      	blt.n	8024ef4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024df6:	4580      	cmp	r8, r0
 8024df8:	dd7c      	ble.n	8024ef4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024dfa:	eb03 090e 	add.w	r9, r3, lr
 8024dfe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024e02:	f019 0f01 	tst.w	r9, #1
 8024e06:	5d55      	ldrb	r5, [r2, r5]
 8024e08:	bf0c      	ite	eq
 8024e0a:	f005 050f 	andeq.w	r5, r5, #15
 8024e0e:	112d      	asrne	r5, r5, #4
 8024e10:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024e14:	b2ed      	uxtb	r5, r5
 8024e16:	3001      	adds	r0, #1
 8024e18:	d474      	bmi.n	8024f04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024e1a:	4580      	cmp	r8, r0
 8024e1c:	dd72      	ble.n	8024f04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024e1e:	2f00      	cmp	r7, #0
 8024e20:	d072      	beq.n	8024f08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024e22:	3301      	adds	r3, #1
 8024e24:	449e      	add	lr, r3
 8024e26:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024e2a:	f01e 0f01 	tst.w	lr, #1
 8024e2e:	5cd0      	ldrb	r0, [r2, r3]
 8024e30:	bf0c      	ite	eq
 8024e32:	f000 000f 	andeq.w	r0, r0, #15
 8024e36:	1100      	asrne	r0, r0, #4
 8024e38:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024e3c:	b2c3      	uxtb	r3, r0
 8024e3e:	b2ba      	uxth	r2, r7
 8024e40:	fa1f fc8c 	uxth.w	ip, ip
 8024e44:	fb02 f00c 	mul.w	r0, r2, ip
 8024e48:	0112      	lsls	r2, r2, #4
 8024e4a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024e4e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024e52:	1a12      	subs	r2, r2, r0
 8024e54:	fa1f fc8c 	uxth.w	ip, ip
 8024e58:	b292      	uxth	r2, r2
 8024e5a:	eba7 070c 	sub.w	r7, r7, ip
 8024e5e:	4362      	muls	r2, r4
 8024e60:	b2bf      	uxth	r7, r7
 8024e62:	fb06 2207 	mla	r2, r6, r7, r2
 8024e66:	fb0c 2505 	mla	r5, ip, r5, r2
 8024e6a:	fb00 5303 	mla	r3, r0, r3, r5
 8024e6e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e72:	b3a3      	cbz	r3, 8024ede <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024e74:	4a25      	ldr	r2, [pc, #148]	; (8024f0c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024e76:	880e      	ldrh	r6, [r1, #0]
 8024e78:	6815      	ldr	r5, [r2, #0]
 8024e7a:	b29a      	uxth	r2, r3
 8024e7c:	1234      	asrs	r4, r6, #8
 8024e7e:	43db      	mvns	r3, r3
 8024e80:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024e84:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024e88:	b2db      	uxtb	r3, r3
 8024e8a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024e8e:	fb10 f002 	smulbb	r0, r0, r2
 8024e92:	b2ed      	uxtb	r5, r5
 8024e94:	fb17 f702 	smulbb	r7, r7, r2
 8024e98:	fb04 0403 	mla	r4, r4, r3, r0
 8024e9c:	10f0      	asrs	r0, r6, #3
 8024e9e:	fb15 f202 	smulbb	r2, r5, r2
 8024ea2:	00f6      	lsls	r6, r6, #3
 8024ea4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024ea8:	b2a4      	uxth	r4, r4
 8024eaa:	b2f6      	uxtb	r6, r6
 8024eac:	fb00 7003 	mla	r0, r0, r3, r7
 8024eb0:	fb06 2303 	mla	r3, r6, r3, r2
 8024eb4:	b280      	uxth	r0, r0
 8024eb6:	b29a      	uxth	r2, r3
 8024eb8:	1c63      	adds	r3, r4, #1
 8024eba:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024ebe:	1c53      	adds	r3, r2, #1
 8024ec0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ec4:	1c42      	adds	r2, r0, #1
 8024ec6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024eca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ece:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ed2:	0940      	lsrs	r0, r0, #5
 8024ed4:	4323      	orrs	r3, r4
 8024ed6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024eda:	4303      	orrs	r3, r0
 8024edc:	800b      	strh	r3, [r1, #0]
 8024ede:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024ee2:	2600      	movs	r6, #0
 8024ee4:	e764      	b.n	8024db0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024ee6:	2400      	movs	r4, #0
 8024ee8:	4626      	mov	r6, r4
 8024eea:	e778      	b.n	8024dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024eec:	2400      	movs	r4, #0
 8024eee:	e776      	b.n	8024dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024ef0:	463c      	mov	r4, r7
 8024ef2:	e774      	b.n	8024dde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024ef4:	2500      	movs	r5, #0
 8024ef6:	e78e      	b.n	8024e16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024ef8:	2300      	movs	r3, #0
 8024efa:	461d      	mov	r5, r3
 8024efc:	e79f      	b.n	8024e3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024efe:	4663      	mov	r3, ip
 8024f00:	4665      	mov	r5, ip
 8024f02:	e79c      	b.n	8024e3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024f04:	2300      	movs	r3, #0
 8024f06:	e79a      	b.n	8024e3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024f08:	463b      	mov	r3, r7
 8024f0a:	e798      	b.n	8024e3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024f0c:	24004a58 	.word	0x24004a58

08024f10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f14:	b093      	sub	sp, #76	; 0x4c
 8024f16:	461d      	mov	r5, r3
 8024f18:	920c      	str	r2, [sp, #48]	; 0x30
 8024f1a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024f1c:	9011      	str	r0, [sp, #68]	; 0x44
 8024f1e:	9107      	str	r1, [sp, #28]
 8024f20:	6850      	ldr	r0, [r2, #4]
 8024f22:	6812      	ldr	r2, [r2, #0]
 8024f24:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024f28:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024f2c:	fb00 1303 	mla	r3, r0, r3, r1
 8024f30:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024f34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f36:	689b      	ldr	r3, [r3, #8]
 8024f38:	3301      	adds	r3, #1
 8024f3a:	f023 0301 	bic.w	r3, r3, #1
 8024f3e:	9306      	str	r3, [sp, #24]
 8024f40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f42:	681f      	ldr	r7, [r3, #0]
 8024f44:	9b07      	ldr	r3, [sp, #28]
 8024f46:	2b00      	cmp	r3, #0
 8024f48:	dc03      	bgt.n	8024f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024f4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024f4c:	2b00      	cmp	r3, #0
 8024f4e:	f340 8267 	ble.w	8025420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024f52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024f54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f5c:	1e48      	subs	r0, r1, #1
 8024f5e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024f62:	2d00      	cmp	r5, #0
 8024f64:	f340 80b7 	ble.w	80250d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8024f68:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024f6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f70:	d406      	bmi.n	8024f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024f72:	4586      	cmp	lr, r0
 8024f74:	da04      	bge.n	8024f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024f76:	2b00      	cmp	r3, #0
 8024f78:	db02      	blt.n	8024f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024f7a:	4563      	cmp	r3, ip
 8024f7c:	f2c0 80ac 	blt.w	80250d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024f80:	f11e 0e01 	adds.w	lr, lr, #1
 8024f84:	f100 809f 	bmi.w	80250c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024f88:	4571      	cmp	r1, lr
 8024f8a:	f2c0 809c 	blt.w	80250c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024f8e:	3301      	adds	r3, #1
 8024f90:	f100 8099 	bmi.w	80250c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024f94:	429a      	cmp	r2, r3
 8024f96:	f2c0 8096 	blt.w	80250c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024f9a:	46c8      	mov	r8, r9
 8024f9c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024fa0:	9509      	str	r5, [sp, #36]	; 0x24
 8024fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024fa4:	2b00      	cmp	r3, #0
 8024fa6:	f340 80b5 	ble.w	8025114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8024faa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024fae:	1430      	asrs	r0, r6, #16
 8024fb0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024fb4:	9308      	str	r3, [sp, #32]
 8024fb6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024fb8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024fbc:	1423      	asrs	r3, r4, #16
 8024fbe:	f100 813f 	bmi.w	8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024fc2:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024fc6:	455b      	cmp	r3, fp
 8024fc8:	f280 813a 	bge.w	8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024fcc:	2800      	cmp	r0, #0
 8024fce:	f2c0 8137 	blt.w	8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024fd2:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024fd6:	4558      	cmp	r0, fp
 8024fd8:	f280 8132 	bge.w	8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024fdc:	9a06      	ldr	r2, [sp, #24]
 8024fde:	fb00 3302 	mla	r3, r0, r2, r3
 8024fe2:	0858      	lsrs	r0, r3, #1
 8024fe4:	07da      	lsls	r2, r3, #31
 8024fe6:	9a08      	ldr	r2, [sp, #32]
 8024fe8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024fec:	bf54      	ite	pl
 8024fee:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ff2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ff6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ffa:	fa5f fc8c 	uxtb.w	ip, ip
 8024ffe:	2a00      	cmp	r2, #0
 8025000:	f000 80cc 	beq.w	802519c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025004:	1c58      	adds	r0, r3, #1
 8025006:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802500a:	07c0      	lsls	r0, r0, #31
 802500c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025010:	bf54      	ite	pl
 8025012:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025016:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802501a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802501e:	fa5f fe8e 	uxtb.w	lr, lr
 8025022:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025026:	b1b9      	cbz	r1, 8025058 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8025028:	4453      	add	r3, sl
 802502a:	0858      	lsrs	r0, r3, #1
 802502c:	07da      	lsls	r2, r3, #31
 802502e:	5c38      	ldrb	r0, [r7, r0]
 8025030:	bf54      	ite	pl
 8025032:	f000 000f 	andpl.w	r0, r0, #15
 8025036:	1100      	asrmi	r0, r0, #4
 8025038:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802503c:	b2c0      	uxtb	r0, r0
 802503e:	900a      	str	r0, [sp, #40]	; 0x28
 8025040:	1c58      	adds	r0, r3, #1
 8025042:	0843      	lsrs	r3, r0, #1
 8025044:	07c2      	lsls	r2, r0, #31
 8025046:	5cfb      	ldrb	r3, [r7, r3]
 8025048:	bf54      	ite	pl
 802504a:	f003 030f 	andpl.w	r3, r3, #15
 802504e:	111b      	asrmi	r3, r3, #4
 8025050:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025054:	b2db      	uxtb	r3, r3
 8025056:	930e      	str	r3, [sp, #56]	; 0x38
 8025058:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802505c:	b289      	uxth	r1, r1
 802505e:	fb02 f301 	mul.w	r3, r2, r1
 8025062:	0112      	lsls	r2, r2, #4
 8025064:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025068:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802506c:	1ad2      	subs	r2, r2, r3
 802506e:	b289      	uxth	r1, r1
 8025070:	b292      	uxth	r2, r2
 8025072:	1a40      	subs	r0, r0, r1
 8025074:	fa1f fe80 	uxth.w	lr, r0
 8025078:	980d      	ldr	r0, [sp, #52]	; 0x34
 802507a:	4342      	muls	r2, r0
 802507c:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025080:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025082:	fb01 c102 	mla	r1, r1, r2, ip
 8025086:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025088:	fb03 1302 	mla	r3, r3, r2, r1
 802508c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025090:	2bff      	cmp	r3, #255	; 0xff
 8025092:	f040 8094 	bne.w	80251be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025096:	4bbf      	ldr	r3, [pc, #764]	; (8025394 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025098:	681a      	ldr	r2, [r3, #0]
 802509a:	4bbf      	ldr	r3, [pc, #764]	; (8025398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802509c:	0951      	lsrs	r1, r2, #5
 802509e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80250a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80250a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80250aa:	430b      	orrs	r3, r1
 80250ac:	4313      	orrs	r3, r2
 80250ae:	f8a8 3000 	strh.w	r3, [r8]
 80250b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80250b4:	f108 0802 	add.w	r8, r8, #2
 80250b8:	441c      	add	r4, r3
 80250ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250bc:	441e      	add	r6, r3
 80250be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80250c0:	3b01      	subs	r3, #1
 80250c2:	9309      	str	r3, [sp, #36]	; 0x24
 80250c4:	e76d      	b.n	8024fa2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80250c6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80250c8:	3d01      	subs	r5, #1
 80250ca:	f109 0902 	add.w	r9, r9, #2
 80250ce:	441c      	add	r4, r3
 80250d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250d2:	441e      	add	r6, r3
 80250d4:	e745      	b.n	8024f62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80250d6:	d021      	beq.n	802511c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80250d8:	1e6b      	subs	r3, r5, #1
 80250da:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80250dc:	fb00 4003 	mla	r0, r0, r3, r4
 80250e0:	1400      	asrs	r0, r0, #16
 80250e2:	f53f af5a 	bmi.w	8024f9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80250e6:	3901      	subs	r1, #1
 80250e8:	4288      	cmp	r0, r1
 80250ea:	f6bf af56 	bge.w	8024f9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80250ee:	9920      	ldr	r1, [sp, #128]	; 0x80
 80250f0:	fb01 6303 	mla	r3, r1, r3, r6
 80250f4:	141b      	asrs	r3, r3, #16
 80250f6:	f53f af50 	bmi.w	8024f9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80250fa:	3a01      	subs	r2, #1
 80250fc:	4293      	cmp	r3, r2
 80250fe:	f6bf af4c 	bge.w	8024f9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025102:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025106:	46a8      	mov	r8, r5
 8025108:	46ce      	mov	lr, r9
 802510a:	9308      	str	r3, [sp, #32]
 802510c:	f1b8 0f00 	cmp.w	r8, #0
 8025110:	f300 80b6 	bgt.w	8025280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025114:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025118:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802511c:	9b07      	ldr	r3, [sp, #28]
 802511e:	2b00      	cmp	r3, #0
 8025120:	f340 817e 	ble.w	8025420 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025124:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025128:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802512a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802512e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025132:	eef0 6a62 	vmov.f32	s13, s5
 8025136:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802513a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802513e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025142:	ee16 4a90 	vmov	r4, s13
 8025146:	eef0 6a43 	vmov.f32	s13, s6
 802514a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802514e:	ee16 6a90 	vmov	r6, s13
 8025152:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025156:	ee61 7a27 	vmul.f32	s15, s2, s15
 802515a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802515e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025162:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025166:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802516a:	ee12 2a90 	vmov	r2, s5
 802516e:	eef0 2a47 	vmov.f32	s5, s14
 8025172:	fb92 f3f3 	sdiv	r3, r2, r3
 8025176:	ee13 2a10 	vmov	r2, s6
 802517a:	931f      	str	r3, [sp, #124]	; 0x7c
 802517c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802517e:	eeb0 3a67 	vmov.f32	s6, s15
 8025182:	fb92 f3f3 	sdiv	r3, r2, r3
 8025186:	9320      	str	r3, [sp, #128]	; 0x80
 8025188:	9b07      	ldr	r3, [sp, #28]
 802518a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802518c:	3b01      	subs	r3, #1
 802518e:	9307      	str	r3, [sp, #28]
 8025190:	bf08      	it	eq
 8025192:	4615      	moveq	r5, r2
 8025194:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025196:	bf18      	it	ne
 8025198:	461d      	movne	r5, r3
 802519a:	e6d3      	b.n	8024f44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802519c:	2900      	cmp	r1, #0
 802519e:	f43f af5b 	beq.w	8025058 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80251a2:	eb0a 0003 	add.w	r0, sl, r3
 80251a6:	0843      	lsrs	r3, r0, #1
 80251a8:	07c0      	lsls	r0, r0, #31
 80251aa:	5cfb      	ldrb	r3, [r7, r3]
 80251ac:	bf54      	ite	pl
 80251ae:	f003 030f 	andpl.w	r3, r3, #15
 80251b2:	111b      	asrmi	r3, r3, #4
 80251b4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80251b8:	b2db      	uxtb	r3, r3
 80251ba:	930a      	str	r3, [sp, #40]	; 0x28
 80251bc:	e74c      	b.n	8025058 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80251be:	2b00      	cmp	r3, #0
 80251c0:	f43f af77 	beq.w	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80251c4:	4a73      	ldr	r2, [pc, #460]	; (8025394 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80251c6:	fa1f fe83 	uxth.w	lr, r3
 80251ca:	f8b8 c000 	ldrh.w	ip, [r8]
 80251ce:	43db      	mvns	r3, r3
 80251d0:	6810      	ldr	r0, [r2, #0]
 80251d2:	ea4f 212c 	mov.w	r1, ip, asr #8
 80251d6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80251da:	b2db      	uxtb	r3, r3
 80251dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80251e0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80251e4:	fb12 f20e 	smulbb	r2, r2, lr
 80251e8:	b2c0      	uxtb	r0, r0
 80251ea:	fb1b fb0e 	smulbb	fp, fp, lr
 80251ee:	fb01 2103 	mla	r1, r1, r3, r2
 80251f2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80251f6:	fb10 fe0e 	smulbb	lr, r0, lr
 80251fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80251fe:	b289      	uxth	r1, r1
 8025200:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025204:	fa5f fc8c 	uxtb.w	ip, ip
 8025208:	fb02 b203 	mla	r2, r2, r3, fp
 802520c:	1c48      	adds	r0, r1, #1
 802520e:	fb0c e303 	mla	r3, ip, r3, lr
 8025212:	b292      	uxth	r2, r2
 8025214:	b29b      	uxth	r3, r3
 8025216:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802521a:	f102 0b01 	add.w	fp, r2, #1
 802521e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8025222:	1c59      	adds	r1, r3, #1
 8025224:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025228:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802522c:	0952      	lsrs	r2, r2, #5
 802522e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025232:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025236:	4301      	orrs	r1, r0
 8025238:	4311      	orrs	r1, r2
 802523a:	f8a8 1000 	strh.w	r1, [r8]
 802523e:	e738      	b.n	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8025240:	f113 0b01 	adds.w	fp, r3, #1
 8025244:	f53f af35 	bmi.w	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8025248:	45dc      	cmp	ip, fp
 802524a:	f6ff af32 	blt.w	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802524e:	f110 0b01 	adds.w	fp, r0, #1
 8025252:	f53f af2e 	bmi.w	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8025256:	45de      	cmp	lr, fp
 8025258:	f6ff af2b 	blt.w	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802525c:	9302      	str	r3, [sp, #8]
 802525e:	fa0f f38e 	sxth.w	r3, lr
 8025262:	9a08      	ldr	r2, [sp, #32]
 8025264:	9301      	str	r3, [sp, #4]
 8025266:	fa0f f38c 	sxth.w	r3, ip
 802526a:	9105      	str	r1, [sp, #20]
 802526c:	4641      	mov	r1, r8
 802526e:	9300      	str	r3, [sp, #0]
 8025270:	4653      	mov	r3, sl
 8025272:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025276:	463a      	mov	r2, r7
 8025278:	9811      	ldr	r0, [sp, #68]	; 0x44
 802527a:	f7ff fd73 	bl	8024d64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802527e:	e718      	b.n	80250b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8025280:	1422      	asrs	r2, r4, #16
 8025282:	9906      	ldr	r1, [sp, #24]
 8025284:	1433      	asrs	r3, r6, #16
 8025286:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802528a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802528e:	fb01 2303 	mla	r3, r1, r3, r2
 8025292:	085a      	lsrs	r2, r3, #1
 8025294:	07d9      	lsls	r1, r3, #31
 8025296:	5cba      	ldrb	r2, [r7, r2]
 8025298:	bf54      	ite	pl
 802529a:	f002 020f 	andpl.w	r2, r2, #15
 802529e:	1112      	asrmi	r2, r2, #4
 80252a0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80252a4:	b2d2      	uxtb	r2, r2
 80252a6:	2800      	cmp	r0, #0
 80252a8:	d063      	beq.n	8025372 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 80252aa:	f103 0a01 	add.w	sl, r3, #1
 80252ae:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80252b2:	f01a 0f01 	tst.w	sl, #1
 80252b6:	5c79      	ldrb	r1, [r7, r1]
 80252b8:	bf0c      	ite	eq
 80252ba:	f001 010f 	andeq.w	r1, r1, #15
 80252be:	1109      	asrne	r1, r1, #4
 80252c0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80252c4:	b2c9      	uxtb	r1, r1
 80252c6:	910f      	str	r1, [sp, #60]	; 0x3c
 80252c8:	f1bc 0f00 	cmp.w	ip, #0
 80252cc:	d01a      	beq.n	8025304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80252ce:	9908      	ldr	r1, [sp, #32]
 80252d0:	440b      	add	r3, r1
 80252d2:	0859      	lsrs	r1, r3, #1
 80252d4:	f013 0f01 	tst.w	r3, #1
 80252d8:	f103 0301 	add.w	r3, r3, #1
 80252dc:	5c79      	ldrb	r1, [r7, r1]
 80252de:	bf0c      	ite	eq
 80252e0:	f001 010f 	andeq.w	r1, r1, #15
 80252e4:	1109      	asrne	r1, r1, #4
 80252e6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80252ea:	b2c9      	uxtb	r1, r1
 80252ec:	910b      	str	r1, [sp, #44]	; 0x2c
 80252ee:	0859      	lsrs	r1, r3, #1
 80252f0:	07db      	lsls	r3, r3, #31
 80252f2:	5c79      	ldrb	r1, [r7, r1]
 80252f4:	bf54      	ite	pl
 80252f6:	f001 010f 	andpl.w	r1, r1, #15
 80252fa:	1109      	asrmi	r1, r1, #4
 80252fc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025300:	b2c9      	uxtb	r1, r1
 8025302:	9110      	str	r1, [sp, #64]	; 0x40
 8025304:	b280      	uxth	r0, r0
 8025306:	fa1f fc8c 	uxth.w	ip, ip
 802530a:	fb00 f30c 	mul.w	r3, r0, ip
 802530e:	0100      	lsls	r0, r0, #4
 8025310:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025314:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8025318:	1ac0      	subs	r0, r0, r3
 802531a:	fa1f fc8c 	uxth.w	ip, ip
 802531e:	b280      	uxth	r0, r0
 8025320:	eba1 010c 	sub.w	r1, r1, ip
 8025324:	fa1f fa81 	uxth.w	sl, r1
 8025328:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802532a:	4348      	muls	r0, r1
 802532c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802532e:	fb02 020a 	mla	r2, r2, sl, r0
 8025332:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025336:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025338:	fb03 c302 	mla	r3, r3, r2, ip
 802533c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025340:	2bff      	cmp	r3, #255	; 0xff
 8025342:	d12b      	bne.n	802539c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025344:	4b13      	ldr	r3, [pc, #76]	; (8025394 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025346:	681a      	ldr	r2, [r3, #0]
 8025348:	4b13      	ldr	r3, [pc, #76]	; (8025398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802534a:	0951      	lsrs	r1, r2, #5
 802534c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025350:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025354:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025358:	430b      	orrs	r3, r1
 802535a:	4313      	orrs	r3, r2
 802535c:	f8ae 3000 	strh.w	r3, [lr]
 8025360:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025362:	f10e 0e02 	add.w	lr, lr, #2
 8025366:	f108 38ff 	add.w	r8, r8, #4294967295
 802536a:	441c      	add	r4, r3
 802536c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802536e:	441e      	add	r6, r3
 8025370:	e6cc      	b.n	802510c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8025372:	f1bc 0f00 	cmp.w	ip, #0
 8025376:	d0c5      	beq.n	8025304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025378:	9908      	ldr	r1, [sp, #32]
 802537a:	440b      	add	r3, r1
 802537c:	0859      	lsrs	r1, r3, #1
 802537e:	07db      	lsls	r3, r3, #31
 8025380:	5c79      	ldrb	r1, [r7, r1]
 8025382:	bf54      	ite	pl
 8025384:	f001 010f 	andpl.w	r1, r1, #15
 8025388:	1109      	asrmi	r1, r1, #4
 802538a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802538e:	b2c9      	uxtb	r1, r1
 8025390:	910b      	str	r1, [sp, #44]	; 0x2c
 8025392:	e7b7      	b.n	8025304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025394:	24004a58 	.word	0x24004a58
 8025398:	fffff800 	.word	0xfffff800
 802539c:	2b00      	cmp	r3, #0
 802539e:	d0df      	beq.n	8025360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 80253a0:	4a21      	ldr	r2, [pc, #132]	; (8025428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80253a2:	fa1f fa83 	uxth.w	sl, r3
 80253a6:	f8be c000 	ldrh.w	ip, [lr]
 80253aa:	43db      	mvns	r3, r3
 80253ac:	6810      	ldr	r0, [r2, #0]
 80253ae:	ea4f 212c 	mov.w	r1, ip, asr #8
 80253b2:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80253b6:	b2db      	uxtb	r3, r3
 80253b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80253bc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80253c0:	fb12 f20a 	smulbb	r2, r2, sl
 80253c4:	b2c0      	uxtb	r0, r0
 80253c6:	fb1b fb0a 	smulbb	fp, fp, sl
 80253ca:	fb01 2103 	mla	r1, r1, r3, r2
 80253ce:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80253d2:	fb10 f00a 	smulbb	r0, r0, sl
 80253d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80253da:	b289      	uxth	r1, r1
 80253dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80253e0:	fa5f fc8c 	uxtb.w	ip, ip
 80253e4:	fb02 b203 	mla	r2, r2, r3, fp
 80253e8:	fb0c 0003 	mla	r0, ip, r3, r0
 80253ec:	1c4b      	adds	r3, r1, #1
 80253ee:	b292      	uxth	r2, r2
 80253f0:	b280      	uxth	r0, r0
 80253f2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80253f6:	f100 0b01 	add.w	fp, r0, #1
 80253fa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80253fe:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025402:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8025406:	ea4b 0101 	orr.w	r1, fp, r1
 802540a:	f102 0b01 	add.w	fp, r2, #1
 802540e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025412:	0952      	lsrs	r2, r2, #5
 8025414:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025418:	4311      	orrs	r1, r2
 802541a:	f8ae 1000 	strh.w	r1, [lr]
 802541e:	e79f      	b.n	8025360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8025420:	b013      	add	sp, #76	; 0x4c
 8025422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025426:	bf00      	nop
 8025428:	24004a58 	.word	0x24004a58

0802542c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802542c:	b570      	push	{r4, r5, r6, lr}
 802542e:	1208      	asrs	r0, r1, #8
 8025430:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025434:	b29e      	uxth	r6, r3
 8025436:	1213      	asrs	r3, r2, #8
 8025438:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802543c:	10cc      	asrs	r4, r1, #3
 802543e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025442:	00c9      	lsls	r1, r1, #3
 8025444:	fb10 f006 	smulbb	r0, r0, r6
 8025448:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802544c:	fb13 f305 	smulbb	r3, r3, r5
 8025450:	fb14 f406 	smulbb	r4, r4, r6
 8025454:	4418      	add	r0, r3
 8025456:	10d3      	asrs	r3, r2, #3
 8025458:	00d2      	lsls	r2, r2, #3
 802545a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802545e:	b280      	uxth	r0, r0
 8025460:	b2d2      	uxtb	r2, r2
 8025462:	fb13 f305 	smulbb	r3, r3, r5
 8025466:	fb12 f205 	smulbb	r2, r2, r5
 802546a:	441c      	add	r4, r3
 802546c:	b2cb      	uxtb	r3, r1
 802546e:	fb13 f306 	smulbb	r3, r3, r6
 8025472:	b2a4      	uxth	r4, r4
 8025474:	4413      	add	r3, r2
 8025476:	1c42      	adds	r2, r0, #1
 8025478:	b29b      	uxth	r3, r3
 802547a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802547e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025482:	1c58      	adds	r0, r3, #1
 8025484:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025488:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802548c:	4310      	orrs	r0, r2
 802548e:	1c62      	adds	r2, r4, #1
 8025490:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025494:	0964      	lsrs	r4, r4, #5
 8025496:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802549a:	4320      	orrs	r0, r4
 802549c:	bd70      	pop	{r4, r5, r6, pc}
	...

080254a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80254a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254a4:	b08f      	sub	sp, #60	; 0x3c
 80254a6:	461c      	mov	r4, r3
 80254a8:	460d      	mov	r5, r1
 80254aa:	4616      	mov	r6, r2
 80254ac:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80254b0:	9004      	str	r0, [sp, #16]
 80254b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80254b4:	2f00      	cmp	r7, #0
 80254b6:	f000 80f6 	beq.w	80256a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80254ba:	6820      	ldr	r0, [r4, #0]
 80254bc:	aa0a      	add	r2, sp, #40	; 0x28
 80254be:	6861      	ldr	r1, [r4, #4]
 80254c0:	f04f 0802 	mov.w	r8, #2
 80254c4:	3604      	adds	r6, #4
 80254c6:	c203      	stmia	r2!, {r0, r1}
 80254c8:	6818      	ldr	r0, [r3, #0]
 80254ca:	aa0c      	add	r2, sp, #48	; 0x30
 80254cc:	6859      	ldr	r1, [r3, #4]
 80254ce:	c203      	stmia	r2!, {r0, r1}
 80254d0:	a80a      	add	r0, sp, #40	; 0x28
 80254d2:	f7ef fe2f 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80254d6:	4621      	mov	r1, r4
 80254d8:	a80c      	add	r0, sp, #48	; 0x30
 80254da:	f7ef fe6f 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80254de:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80254e2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80254e6:	f002 0301 	and.w	r3, r2, #1
 80254ea:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80254ee:	9306      	str	r3, [sp, #24]
 80254f0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80254f4:	f003 0101 	and.w	r1, r3, #1
 80254f8:	9105      	str	r1, [sp, #20]
 80254fa:	9805      	ldr	r0, [sp, #20]
 80254fc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025500:	4403      	add	r3, r0
 8025502:	fb01 2303 	mla	r3, r1, r3, r2
 8025506:	fb93 f3f8 	sdiv	r3, r3, r8
 802550a:	441d      	add	r5, r3
 802550c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025510:	441a      	add	r2, r3
 8025512:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025516:	4419      	add	r1, r3
 8025518:	4b64      	ldr	r3, [pc, #400]	; (80256ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802551a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802551e:	6818      	ldr	r0, [r3, #0]
 8025520:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025524:	6803      	ldr	r3, [r0, #0]
 8025526:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025528:	4798      	blx	r3
 802552a:	4a61      	ldr	r2, [pc, #388]	; (80256b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802552c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025530:	2fff      	cmp	r7, #255	; 0xff
 8025532:	8813      	ldrh	r3, [r2, #0]
 8025534:	4611      	mov	r1, r2
 8025536:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802553a:	fb03 fb0b 	mul.w	fp, r3, fp
 802553e:	fb03 a404 	mla	r4, r3, r4, sl
 8025542:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025546:	d06b      	beq.n	8025620 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8025548:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802554c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025550:	9303      	str	r3, [sp, #12]
 8025552:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025556:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802555a:	9b07      	ldr	r3, [sp, #28]
 802555c:	42a3      	cmp	r3, r4
 802555e:	f240 809d 	bls.w	802569c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025562:	9b06      	ldr	r3, [sp, #24]
 8025564:	2b00      	cmp	r3, #0
 8025566:	d039      	beq.n	80255dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8025568:	782b      	ldrb	r3, [r5, #0]
 802556a:	f105 0801 	add.w	r8, r5, #1
 802556e:	f109 3bff 	add.w	fp, r9, #4294967295
 8025572:	8822      	ldrh	r2, [r4, #0]
 8025574:	f003 030f 	and.w	r3, r3, #15
 8025578:	9804      	ldr	r0, [sp, #16]
 802557a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802557e:	9b03      	ldr	r3, [sp, #12]
 8025580:	9300      	str	r3, [sp, #0]
 8025582:	463b      	mov	r3, r7
 8025584:	f7ff ff52 	bl	802542c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025588:	f824 0b02 	strh.w	r0, [r4], #2
 802558c:	f1bb 0f01 	cmp.w	fp, #1
 8025590:	46a2      	mov	sl, r4
 8025592:	f104 0404 	add.w	r4, r4, #4
 8025596:	dd24      	ble.n	80255e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8025598:	f898 3000 	ldrb.w	r3, [r8]
 802559c:	f1ab 0b02 	sub.w	fp, fp, #2
 80255a0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80255a4:	091b      	lsrs	r3, r3, #4
 80255a6:	9804      	ldr	r0, [sp, #16]
 80255a8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80255ac:	9b03      	ldr	r3, [sp, #12]
 80255ae:	9300      	str	r3, [sp, #0]
 80255b0:	463b      	mov	r3, r7
 80255b2:	f7ff ff3b 	bl	802542c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80255b6:	f824 0c04 	strh.w	r0, [r4, #-4]
 80255ba:	f818 3b01 	ldrb.w	r3, [r8], #1
 80255be:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80255c2:	f003 030f 	and.w	r3, r3, #15
 80255c6:	9804      	ldr	r0, [sp, #16]
 80255c8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80255cc:	9b03      	ldr	r3, [sp, #12]
 80255ce:	9300      	str	r3, [sp, #0]
 80255d0:	463b      	mov	r3, r7
 80255d2:	f7ff ff2b 	bl	802542c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80255d6:	f824 0c02 	strh.w	r0, [r4, #-2]
 80255da:	e7d7      	b.n	802558c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80255dc:	46a8      	mov	r8, r5
 80255de:	46cb      	mov	fp, r9
 80255e0:	e7d4      	b.n	802558c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80255e2:	d10e      	bne.n	8025602 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 80255e4:	f898 3000 	ldrb.w	r3, [r8]
 80255e8:	f8ba 2000 	ldrh.w	r2, [sl]
 80255ec:	091b      	lsrs	r3, r3, #4
 80255ee:	9804      	ldr	r0, [sp, #16]
 80255f0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80255f4:	9b03      	ldr	r3, [sp, #12]
 80255f6:	9300      	str	r3, [sp, #0]
 80255f8:	463b      	mov	r3, r7
 80255fa:	f7ff ff17 	bl	802542c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80255fe:	f82a 0b02 	strh.w	r0, [sl], #2
 8025602:	9b08      	ldr	r3, [sp, #32]
 8025604:	9a05      	ldr	r2, [sp, #20]
 8025606:	881c      	ldrh	r4, [r3, #0]
 8025608:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802560c:	eba4 0409 	sub.w	r4, r4, r9
 8025610:	4413      	add	r3, r2
 8025612:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025614:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025618:	fb93 f3f2 	sdiv	r3, r3, r2
 802561c:	441d      	add	r5, r3
 802561e:	e79c      	b.n	802555a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8025620:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025624:	45a3      	cmp	fp, r4
 8025626:	d939      	bls.n	802569c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025628:	9b06      	ldr	r3, [sp, #24]
 802562a:	b1fb      	cbz	r3, 802566c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802562c:	782b      	ldrb	r3, [r5, #0]
 802562e:	1c6a      	adds	r2, r5, #1
 8025630:	f109 30ff 	add.w	r0, r9, #4294967295
 8025634:	3402      	adds	r4, #2
 8025636:	f003 030f 	and.w	r3, r3, #15
 802563a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802563e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025642:	2801      	cmp	r0, #1
 8025644:	4623      	mov	r3, r4
 8025646:	f104 0404 	add.w	r4, r4, #4
 802564a:	dd12      	ble.n	8025672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802564c:	7813      	ldrb	r3, [r2, #0]
 802564e:	3802      	subs	r0, #2
 8025650:	091b      	lsrs	r3, r3, #4
 8025652:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025656:	f824 3c04 	strh.w	r3, [r4, #-4]
 802565a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802565e:	f003 030f 	and.w	r3, r3, #15
 8025662:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025666:	f824 3c02 	strh.w	r3, [r4, #-2]
 802566a:	e7ea      	b.n	8025642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802566c:	462a      	mov	r2, r5
 802566e:	4648      	mov	r0, r9
 8025670:	e7e7      	b.n	8025642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025672:	d106      	bne.n	8025682 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025674:	7812      	ldrb	r2, [r2, #0]
 8025676:	3302      	adds	r3, #2
 8025678:	0912      	lsrs	r2, r2, #4
 802567a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802567e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025682:	880c      	ldrh	r4, [r1, #0]
 8025684:	9a05      	ldr	r2, [sp, #20]
 8025686:	eba4 0409 	sub.w	r4, r4, r9
 802568a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802568e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025692:	4413      	add	r3, r2
 8025694:	fb93 f3f8 	sdiv	r3, r3, r8
 8025698:	441d      	add	r5, r3
 802569a:	e7c3      	b.n	8025624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 802569c:	4b03      	ldr	r3, [pc, #12]	; (80256ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802569e:	6818      	ldr	r0, [r3, #0]
 80256a0:	6803      	ldr	r3, [r0, #0]
 80256a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80256a4:	4798      	blx	r3
 80256a6:	b00f      	add	sp, #60	; 0x3c
 80256a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256ac:	24004a50 	.word	0x24004a50
 80256b0:	24004a4a 	.word	0x24004a4a

080256b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80256b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80256b6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80256ba:	0a0f      	lsrs	r7, r1, #8
 80256bc:	2dff      	cmp	r5, #255	; 0xff
 80256be:	d10c      	bne.n	80256da <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80256c0:	2bff      	cmp	r3, #255	; 0xff
 80256c2:	d10a      	bne.n	80256da <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80256c4:	0948      	lsrs	r0, r1, #5
 80256c6:	4b25      	ldr	r3, [pc, #148]	; (802575c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80256c8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80256cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80256d0:	403b      	ands	r3, r7
 80256d2:	4318      	orrs	r0, r3
 80256d4:	4308      	orrs	r0, r1
 80256d6:	b280      	uxth	r0, r0
 80256d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80256da:	fb15 f503 	smulbb	r5, r5, r3
 80256de:	1214      	asrs	r4, r2, #8
 80256e0:	10d6      	asrs	r6, r2, #3
 80256e2:	b2ab      	uxth	r3, r5
 80256e4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80256e8:	00d0      	lsls	r0, r2, #3
 80256ea:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80256ee:	1c5d      	adds	r5, r3, #1
 80256f0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80256f4:	b2c0      	uxtb	r0, r0
 80256f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80256fa:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80256fe:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025702:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025706:	fa1f fc85 	uxth.w	ip, r5
 802570a:	43ed      	mvns	r5, r5
 802570c:	fb12 f20c 	smulbb	r2, r2, ip
 8025710:	b2eb      	uxtb	r3, r5
 8025712:	b2fd      	uxtb	r5, r7
 8025714:	fb04 2403 	mla	r4, r4, r3, r2
 8025718:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802571c:	fb15 f50c 	smulbb	r5, r5, ip
 8025720:	b2c8      	uxtb	r0, r1
 8025722:	b2a4      	uxth	r4, r4
 8025724:	fb10 f00c 	smulbb	r0, r0, ip
 8025728:	fb06 5503 	mla	r5, r6, r3, r5
 802572c:	fb02 0003 	mla	r0, r2, r3, r0
 8025730:	b2ad      	uxth	r5, r5
 8025732:	b283      	uxth	r3, r0
 8025734:	1c60      	adds	r0, r4, #1
 8025736:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802573a:	1c58      	adds	r0, r3, #1
 802573c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025740:	1c6b      	adds	r3, r5, #1
 8025742:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025746:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802574a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802574e:	096d      	lsrs	r5, r5, #5
 8025750:	4320      	orrs	r0, r4
 8025752:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025756:	4328      	orrs	r0, r5
 8025758:	e7be      	b.n	80256d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 802575a:	bf00      	nop
 802575c:	00fff800 	.word	0x00fff800

08025760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025764:	461c      	mov	r4, r3
 8025766:	b08d      	sub	sp, #52	; 0x34
 8025768:	460d      	mov	r5, r1
 802576a:	4616      	mov	r6, r2
 802576c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802576e:	4680      	mov	r8, r0
 8025770:	6861      	ldr	r1, [r4, #4]
 8025772:	aa08      	add	r2, sp, #32
 8025774:	6820      	ldr	r0, [r4, #0]
 8025776:	f04f 0a02 	mov.w	sl, #2
 802577a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802577e:	3604      	adds	r6, #4
 8025780:	c203      	stmia	r2!, {r0, r1}
 8025782:	6818      	ldr	r0, [r3, #0]
 8025784:	aa0a      	add	r2, sp, #40	; 0x28
 8025786:	6859      	ldr	r1, [r3, #4]
 8025788:	c203      	stmia	r2!, {r0, r1}
 802578a:	a808      	add	r0, sp, #32
 802578c:	f7ef fcd2 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025790:	4621      	mov	r1, r4
 8025792:	a80a      	add	r0, sp, #40	; 0x28
 8025794:	f7ef fd12 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025798:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802579c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80257a0:	f002 0301 	and.w	r3, r2, #1
 80257a4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80257a8:	9303      	str	r3, [sp, #12]
 80257aa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80257ae:	f003 0101 	and.w	r1, r3, #1
 80257b2:	9102      	str	r1, [sp, #8]
 80257b4:	9802      	ldr	r0, [sp, #8]
 80257b6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80257ba:	4403      	add	r3, r0
 80257bc:	fb01 2303 	mla	r3, r1, r3, r2
 80257c0:	fb93 f3fa 	sdiv	r3, r3, sl
 80257c4:	441d      	add	r5, r3
 80257c6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80257ca:	441a      	add	r2, r3
 80257cc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80257d0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80257d4:	4419      	add	r1, r3
 80257d6:	4a3e      	ldr	r2, [pc, #248]	; (80258d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80257d8:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80257dc:	6810      	ldr	r0, [r2, #0]
 80257de:	9205      	str	r2, [sp, #20]
 80257e0:	6803      	ldr	r3, [r0, #0]
 80257e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80257e4:	4798      	blx	r3
 80257e6:	4b3b      	ldr	r3, [pc, #236]	; (80258d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80257e8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80257ec:	8819      	ldrh	r1, [r3, #0]
 80257ee:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80257f2:	434f      	muls	r7, r1
 80257f4:	fb01 c404 	mla	r4, r1, r4, ip
 80257f8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80257fc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025800:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025804:	9204      	str	r2, [sp, #16]
 8025806:	9b04      	ldr	r3, [sp, #16]
 8025808:	429c      	cmp	r4, r3
 802580a:	d258      	bcs.n	80258be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802580c:	9b03      	ldr	r3, [sp, #12]
 802580e:	2b00      	cmp	r3, #0
 8025810:	d034      	beq.n	802587c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025812:	782b      	ldrb	r3, [r5, #0]
 8025814:	1c6f      	adds	r7, r5, #1
 8025816:	f003 030f 	and.w	r3, r3, #15
 802581a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802581e:	0e0b      	lsrs	r3, r1, #24
 8025820:	d006      	beq.n	8025830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025822:	8822      	ldrh	r2, [r4, #0]
 8025824:	4640      	mov	r0, r8
 8025826:	9300      	str	r3, [sp, #0]
 8025828:	464b      	mov	r3, r9
 802582a:	f7ff ff43 	bl	80256b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802582e:	8020      	strh	r0, [r4, #0]
 8025830:	3402      	adds	r4, #2
 8025832:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025836:	f1ba 0f01 	cmp.w	sl, #1
 802583a:	dd22      	ble.n	8025882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802583c:	783b      	ldrb	r3, [r7, #0]
 802583e:	091b      	lsrs	r3, r3, #4
 8025840:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025844:	0e0b      	lsrs	r3, r1, #24
 8025846:	d006      	beq.n	8025856 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025848:	8822      	ldrh	r2, [r4, #0]
 802584a:	4640      	mov	r0, r8
 802584c:	9300      	str	r3, [sp, #0]
 802584e:	464b      	mov	r3, r9
 8025850:	f7ff ff30 	bl	80256b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025854:	8020      	strh	r0, [r4, #0]
 8025856:	f817 3b01 	ldrb.w	r3, [r7], #1
 802585a:	f003 030f 	and.w	r3, r3, #15
 802585e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025862:	0e0b      	lsrs	r3, r1, #24
 8025864:	d006      	beq.n	8025874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025866:	8862      	ldrh	r2, [r4, #2]
 8025868:	4640      	mov	r0, r8
 802586a:	9300      	str	r3, [sp, #0]
 802586c:	464b      	mov	r3, r9
 802586e:	f7ff ff21 	bl	80256b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025872:	8060      	strh	r0, [r4, #2]
 8025874:	3404      	adds	r4, #4
 8025876:	f1aa 0a02 	sub.w	sl, sl, #2
 802587a:	e7dc      	b.n	8025836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802587c:	462f      	mov	r7, r5
 802587e:	46da      	mov	sl, fp
 8025880:	e7d9      	b.n	8025836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025882:	d10d      	bne.n	80258a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025884:	783b      	ldrb	r3, [r7, #0]
 8025886:	091b      	lsrs	r3, r3, #4
 8025888:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802588c:	0e0b      	lsrs	r3, r1, #24
 802588e:	d006      	beq.n	802589e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025890:	8822      	ldrh	r2, [r4, #0]
 8025892:	4640      	mov	r0, r8
 8025894:	9300      	str	r3, [sp, #0]
 8025896:	464b      	mov	r3, r9
 8025898:	f7ff ff0c 	bl	80256b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802589c:	8020      	strh	r0, [r4, #0]
 802589e:	3402      	adds	r4, #2
 80258a0:	9b06      	ldr	r3, [sp, #24]
 80258a2:	9a02      	ldr	r2, [sp, #8]
 80258a4:	881b      	ldrh	r3, [r3, #0]
 80258a6:	eba3 030b 	sub.w	r3, r3, fp
 80258aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80258ae:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80258b2:	4413      	add	r3, r2
 80258b4:	9a07      	ldr	r2, [sp, #28]
 80258b6:	fb93 f3f2 	sdiv	r3, r3, r2
 80258ba:	441d      	add	r5, r3
 80258bc:	e7a3      	b.n	8025806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80258be:	9b05      	ldr	r3, [sp, #20]
 80258c0:	6818      	ldr	r0, [r3, #0]
 80258c2:	6803      	ldr	r3, [r0, #0]
 80258c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80258c6:	4798      	blx	r3
 80258c8:	b00d      	add	sp, #52	; 0x34
 80258ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80258ce:	bf00      	nop
 80258d0:	24004a50 	.word	0x24004a50
 80258d4:	24004a4a 	.word	0x24004a4a

080258d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80258d8:	b570      	push	{r4, r5, r6, lr}
 80258da:	1214      	asrs	r4, r2, #8
 80258dc:	788d      	ldrb	r5, [r1, #2]
 80258de:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80258e2:	10d0      	asrs	r0, r2, #3
 80258e4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80258e8:	00d2      	lsls	r2, r2, #3
 80258ea:	fb15 f503 	smulbb	r5, r5, r3
 80258ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80258f2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80258f6:	b2d2      	uxtb	r2, r2
 80258f8:	fb04 5506 	mla	r5, r4, r6, r5
 80258fc:	784c      	ldrb	r4, [r1, #1]
 80258fe:	7809      	ldrb	r1, [r1, #0]
 8025900:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025904:	fb14 f403 	smulbb	r4, r4, r3
 8025908:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802590c:	fb11 f303 	smulbb	r3, r1, r3
 8025910:	b2ad      	uxth	r5, r5
 8025912:	fb00 4406 	mla	r4, r0, r6, r4
 8025916:	fb02 3306 	mla	r3, r2, r6, r3
 802591a:	1c68      	adds	r0, r5, #1
 802591c:	b2a4      	uxth	r4, r4
 802591e:	b29b      	uxth	r3, r3
 8025920:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025924:	1c62      	adds	r2, r4, #1
 8025926:	1c58      	adds	r0, r3, #1
 8025928:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802592c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025930:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025934:	0964      	lsrs	r4, r4, #5
 8025936:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802593a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802593e:	4328      	orrs	r0, r5
 8025940:	4320      	orrs	r0, r4
 8025942:	bd70      	pop	{r4, r5, r6, pc}

08025944 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025948:	b08f      	sub	sp, #60	; 0x3c
 802594a:	461c      	mov	r4, r3
 802594c:	4682      	mov	sl, r0
 802594e:	460e      	mov	r6, r1
 8025950:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025954:	4615      	mov	r5, r2
 8025956:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025958:	2f00      	cmp	r7, #0
 802595a:	f000 8141 	beq.w	8025be0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 802595e:	6820      	ldr	r0, [r4, #0]
 8025960:	aa0a      	add	r2, sp, #40	; 0x28
 8025962:	6861      	ldr	r1, [r4, #4]
 8025964:	f04f 0802 	mov.w	r8, #2
 8025968:	3504      	adds	r5, #4
 802596a:	c203      	stmia	r2!, {r0, r1}
 802596c:	6818      	ldr	r0, [r3, #0]
 802596e:	aa0c      	add	r2, sp, #48	; 0x30
 8025970:	6859      	ldr	r1, [r3, #4]
 8025972:	c203      	stmia	r2!, {r0, r1}
 8025974:	a80a      	add	r0, sp, #40	; 0x28
 8025976:	f7ef fbdd 	bl	8015134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802597a:	4621      	mov	r1, r4
 802597c:	a80c      	add	r0, sp, #48	; 0x30
 802597e:	f7ef fc1d 	bl	80151bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025982:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025986:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802598a:	f002 0301 	and.w	r3, r2, #1
 802598e:	9306      	str	r3, [sp, #24]
 8025990:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025994:	f003 0101 	and.w	r1, r3, #1
 8025998:	9105      	str	r1, [sp, #20]
 802599a:	9805      	ldr	r0, [sp, #20]
 802599c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80259a0:	4403      	add	r3, r0
 80259a2:	fb01 2303 	mla	r3, r1, r3, r2
 80259a6:	fb93 f3f8 	sdiv	r3, r3, r8
 80259aa:	441e      	add	r6, r3
 80259ac:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80259b0:	441a      	add	r2, r3
 80259b2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80259b6:	4419      	add	r1, r3
 80259b8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80259bc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80259c0:	9303      	str	r3, [sp, #12]
 80259c2:	4b89      	ldr	r3, [pc, #548]	; (8025be8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80259c4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80259c8:	6818      	ldr	r0, [r3, #0]
 80259ca:	6803      	ldr	r3, [r0, #0]
 80259cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80259ce:	4798      	blx	r3
 80259d0:	4a86      	ldr	r2, [pc, #536]	; (8025bec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80259d2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80259d6:	2fff      	cmp	r7, #255	; 0xff
 80259d8:	8813      	ldrh	r3, [r2, #0]
 80259da:	4694      	mov	ip, r2
 80259dc:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80259e0:	fb03 9404 	mla	r4, r3, r4, r9
 80259e4:	fb03 f30b 	mul.w	r3, r3, fp
 80259e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80259ec:	d071      	beq.n	8025ad2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 80259ee:	43f9      	mvns	r1, r7
 80259f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80259f4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80259f8:	b2c9      	uxtb	r1, r1
 80259fa:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80259fe:	9104      	str	r1, [sp, #16]
 8025a00:	9b07      	ldr	r3, [sp, #28]
 8025a02:	42a3      	cmp	r3, r4
 8025a04:	f240 80e7 	bls.w	8025bd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8025a08:	9b06      	ldr	r3, [sp, #24]
 8025a0a:	2b00      	cmp	r3, #0
 8025a0c:	d03d      	beq.n	8025a8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8025a0e:	7831      	ldrb	r1, [r6, #0]
 8025a10:	4650      	mov	r0, sl
 8025a12:	9b04      	ldr	r3, [sp, #16]
 8025a14:	f106 0801 	add.w	r8, r6, #1
 8025a18:	f001 010f 	and.w	r1, r1, #15
 8025a1c:	8822      	ldrh	r2, [r4, #0]
 8025a1e:	9300      	str	r3, [sp, #0]
 8025a20:	463b      	mov	r3, r7
 8025a22:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025a26:	4429      	add	r1, r5
 8025a28:	f7ff ff56 	bl	80258d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025a2c:	9b03      	ldr	r3, [sp, #12]
 8025a2e:	f824 0b02 	strh.w	r0, [r4], #2
 8025a32:	f103 3bff 	add.w	fp, r3, #4294967295
 8025a36:	f1bb 0f01 	cmp.w	fp, #1
 8025a3a:	46a1      	mov	r9, r4
 8025a3c:	f104 0404 	add.w	r4, r4, #4
 8025a40:	dd27      	ble.n	8025a92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8025a42:	f898 1000 	ldrb.w	r1, [r8]
 8025a46:	4650      	mov	r0, sl
 8025a48:	9b04      	ldr	r3, [sp, #16]
 8025a4a:	f1ab 0b02 	sub.w	fp, fp, #2
 8025a4e:	0909      	lsrs	r1, r1, #4
 8025a50:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025a54:	9300      	str	r3, [sp, #0]
 8025a56:	463b      	mov	r3, r7
 8025a58:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025a5c:	4429      	add	r1, r5
 8025a5e:	f7ff ff3b 	bl	80258d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025a62:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025a66:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025a6a:	4650      	mov	r0, sl
 8025a6c:	9b04      	ldr	r3, [sp, #16]
 8025a6e:	f001 010f 	and.w	r1, r1, #15
 8025a72:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025a76:	9300      	str	r3, [sp, #0]
 8025a78:	463b      	mov	r3, r7
 8025a7a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025a7e:	4429      	add	r1, r5
 8025a80:	f7ff ff2a 	bl	80258d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025a84:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025a88:	e7d5      	b.n	8025a36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8025a8a:	46b0      	mov	r8, r6
 8025a8c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025a90:	e7d1      	b.n	8025a36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8025a92:	d10f      	bne.n	8025ab4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8025a94:	f898 1000 	ldrb.w	r1, [r8]
 8025a98:	4650      	mov	r0, sl
 8025a9a:	9b04      	ldr	r3, [sp, #16]
 8025a9c:	0909      	lsrs	r1, r1, #4
 8025a9e:	f8b9 2000 	ldrh.w	r2, [r9]
 8025aa2:	9300      	str	r3, [sp, #0]
 8025aa4:	463b      	mov	r3, r7
 8025aa6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025aaa:	4429      	add	r1, r5
 8025aac:	f7ff ff14 	bl	80258d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025ab0:	f829 0b02 	strh.w	r0, [r9], #2
 8025ab4:	9b08      	ldr	r3, [sp, #32]
 8025ab6:	9a05      	ldr	r2, [sp, #20]
 8025ab8:	881c      	ldrh	r4, [r3, #0]
 8025aba:	9b03      	ldr	r3, [sp, #12]
 8025abc:	1ae4      	subs	r4, r4, r3
 8025abe:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ac2:	4413      	add	r3, r2
 8025ac4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025ac6:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025aca:	fb93 f3f2 	sdiv	r3, r3, r2
 8025ace:	441e      	add	r6, r3
 8025ad0:	e796      	b.n	8025a00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 8025ad2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025ad6:	4f46      	ldr	r7, [pc, #280]	; (8025bf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025ad8:	42a3      	cmp	r3, r4
 8025ada:	d97c      	bls.n	8025bd6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8025adc:	9a06      	ldr	r2, [sp, #24]
 8025ade:	2a00      	cmp	r2, #0
 8025ae0:	d054      	beq.n	8025b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 8025ae2:	7830      	ldrb	r0, [r6, #0]
 8025ae4:	1c71      	adds	r1, r6, #1
 8025ae6:	f000 000f 	and.w	r0, r0, #15
 8025aea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025aee:	eb05 0e00 	add.w	lr, r5, r0
 8025af2:	5c28      	ldrb	r0, [r5, r0]
 8025af4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025af8:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025afc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025b00:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025b04:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025b08:	ea42 020e 	orr.w	r2, r2, lr
 8025b0c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025b10:	f824 2b02 	strh.w	r2, [r4], #2
 8025b14:	9a03      	ldr	r2, [sp, #12]
 8025b16:	f102 3eff 	add.w	lr, r2, #4294967295
 8025b1a:	f1be 0f01 	cmp.w	lr, #1
 8025b1e:	4620      	mov	r0, r4
 8025b20:	f104 0404 	add.w	r4, r4, #4
 8025b24:	dd36      	ble.n	8025b94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8025b26:	7808      	ldrb	r0, [r1, #0]
 8025b28:	f1ae 0e02 	sub.w	lr, lr, #2
 8025b2c:	0900      	lsrs	r0, r0, #4
 8025b2e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025b32:	eb05 0a00 	add.w	sl, r5, r0
 8025b36:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025b3a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025b3e:	00d2      	lsls	r2, r2, #3
 8025b40:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025b44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b48:	ea49 0202 	orr.w	r2, r9, r2
 8025b4c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025b50:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025b54:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025b58:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025b5c:	f000 000f 	and.w	r0, r0, #15
 8025b60:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025b64:	eb05 0a00 	add.w	sl, r5, r0
 8025b68:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025b6c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025b70:	00d2      	lsls	r2, r2, #3
 8025b72:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025b76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b7a:	ea49 0202 	orr.w	r2, r9, r2
 8025b7e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025b82:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025b86:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025b8a:	e7c6      	b.n	8025b1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8025b8c:	4631      	mov	r1, r6
 8025b8e:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025b92:	e7c2      	b.n	8025b1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8025b94:	d111      	bne.n	8025bba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8025b96:	7809      	ldrb	r1, [r1, #0]
 8025b98:	0909      	lsrs	r1, r1, #4
 8025b9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b9e:	186c      	adds	r4, r5, r1
 8025ba0:	5c69      	ldrb	r1, [r5, r1]
 8025ba2:	78a2      	ldrb	r2, [r4, #2]
 8025ba4:	7864      	ldrb	r4, [r4, #1]
 8025ba6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025baa:	00e4      	lsls	r4, r4, #3
 8025bac:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025bb0:	4322      	orrs	r2, r4
 8025bb2:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025bb6:	f820 2b02 	strh.w	r2, [r0], #2
 8025bba:	9a03      	ldr	r2, [sp, #12]
 8025bbc:	f8bc 4000 	ldrh.w	r4, [ip]
 8025bc0:	9905      	ldr	r1, [sp, #20]
 8025bc2:	1aa4      	subs	r4, r4, r2
 8025bc4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025bc8:	440a      	add	r2, r1
 8025bca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025bce:	fb92 f2f8 	sdiv	r2, r2, r8
 8025bd2:	4416      	add	r6, r2
 8025bd4:	e780      	b.n	8025ad8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 8025bd6:	4b04      	ldr	r3, [pc, #16]	; (8025be8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025bd8:	6818      	ldr	r0, [r3, #0]
 8025bda:	6803      	ldr	r3, [r0, #0]
 8025bdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025bde:	4798      	blx	r3
 8025be0:	b00f      	add	sp, #60	; 0x3c
 8025be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025be6:	bf00      	nop
 8025be8:	24004a50 	.word	0x24004a50
 8025bec:	24004a4a 	.word	0x24004a4a
 8025bf0:	fffff800 	.word	0xfffff800

08025bf4 <CRC_Lock>:
 8025bf4:	4a20      	ldr	r2, [pc, #128]	; (8025c78 <CRC_Lock+0x84>)
 8025bf6:	b530      	push	{r4, r5, lr}
 8025bf8:	6813      	ldr	r3, [r2, #0]
 8025bfa:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025bfe:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025c02:	f023 0301 	bic.w	r3, r3, #1
 8025c06:	6013      	str	r3, [r2, #0]
 8025c08:	4b1c      	ldr	r3, [pc, #112]	; (8025c7c <CRC_Lock+0x88>)
 8025c0a:	681a      	ldr	r2, [r3, #0]
 8025c0c:	4022      	ands	r2, r4
 8025c0e:	42aa      	cmp	r2, r5
 8025c10:	d005      	beq.n	8025c1e <CRC_Lock+0x2a>
 8025c12:	681b      	ldr	r3, [r3, #0]
 8025c14:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025c18:	4023      	ands	r3, r4
 8025c1a:	4293      	cmp	r3, r2
 8025c1c:	d124      	bne.n	8025c68 <CRC_Lock+0x74>
 8025c1e:	4b18      	ldr	r3, [pc, #96]	; (8025c80 <CRC_Lock+0x8c>)
 8025c20:	681b      	ldr	r3, [r3, #0]
 8025c22:	bb0b      	cbnz	r3, 8025c68 <CRC_Lock+0x74>
 8025c24:	4b17      	ldr	r3, [pc, #92]	; (8025c84 <CRC_Lock+0x90>)
 8025c26:	681a      	ldr	r2, [r3, #0]
 8025c28:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025c2c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025c30:	d00d      	beq.n	8025c4e <CRC_Lock+0x5a>
 8025c32:	681a      	ldr	r2, [r3, #0]
 8025c34:	f240 4483 	movw	r4, #1155	; 0x483
 8025c38:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025c3c:	42a2      	cmp	r2, r4
 8025c3e:	d006      	beq.n	8025c4e <CRC_Lock+0x5a>
 8025c40:	681b      	ldr	r3, [r3, #0]
 8025c42:	f240 4285 	movw	r2, #1157	; 0x485
 8025c46:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025c4a:	4293      	cmp	r3, r2
 8025c4c:	d10c      	bne.n	8025c68 <CRC_Lock+0x74>
 8025c4e:	4b0e      	ldr	r3, [pc, #56]	; (8025c88 <CRC_Lock+0x94>)
 8025c50:	2201      	movs	r2, #1
 8025c52:	601a      	str	r2, [r3, #0]
 8025c54:	681a      	ldr	r2, [r3, #0]
 8025c56:	2a00      	cmp	r2, #0
 8025c58:	d1fc      	bne.n	8025c54 <CRC_Lock+0x60>
 8025c5a:	4b0c      	ldr	r3, [pc, #48]	; (8025c8c <CRC_Lock+0x98>)
 8025c5c:	6018      	str	r0, [r3, #0]
 8025c5e:	6818      	ldr	r0, [r3, #0]
 8025c60:	1a43      	subs	r3, r0, r1
 8025c62:	4258      	negs	r0, r3
 8025c64:	4158      	adcs	r0, r3
 8025c66:	bd30      	pop	{r4, r5, pc}
 8025c68:	4b09      	ldr	r3, [pc, #36]	; (8025c90 <CRC_Lock+0x9c>)
 8025c6a:	2201      	movs	r2, #1
 8025c6c:	601a      	str	r2, [r3, #0]
 8025c6e:	681a      	ldr	r2, [r3, #0]
 8025c70:	2a00      	cmp	r2, #0
 8025c72:	d1fc      	bne.n	8025c6e <CRC_Lock+0x7a>
 8025c74:	4b07      	ldr	r3, [pc, #28]	; (8025c94 <CRC_Lock+0xa0>)
 8025c76:	e7f1      	b.n	8025c5c <CRC_Lock+0x68>
 8025c78:	e0002000 	.word	0xe0002000
 8025c7c:	e000ed00 	.word	0xe000ed00
 8025c80:	e0042000 	.word	0xe0042000
 8025c84:	5c001000 	.word	0x5c001000
 8025c88:	58024c08 	.word	0x58024c08
 8025c8c:	58024c00 	.word	0x58024c00
 8025c90:	40023008 	.word	0x40023008
 8025c94:	40023000 	.word	0x40023000

08025c98 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025c98:	6101      	str	r1, [r0, #16]
 8025c9a:	4770      	bx	lr

08025c9c <_ZN8touchgfx8Gestures4tickEv>:
 8025c9c:	7b83      	ldrb	r3, [r0, #14]
 8025c9e:	b14b      	cbz	r3, 8025cb4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025ca0:	8903      	ldrh	r3, [r0, #8]
 8025ca2:	3301      	adds	r3, #1
 8025ca4:	b29b      	uxth	r3, r3
 8025ca6:	2b07      	cmp	r3, #7
 8025ca8:	8103      	strh	r3, [r0, #8]
 8025caa:	bf81      	itttt	hi
 8025cac:	2300      	movhi	r3, #0
 8025cae:	8143      	strhhi	r3, [r0, #10]
 8025cb0:	8183      	strhhi	r3, [r0, #12]
 8025cb2:	7383      	strbhi	r3, [r0, #14]
 8025cb4:	4770      	bx	lr
	...

08025cb8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025cb8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025cbc:	4698      	mov	r8, r3
 8025cbe:	8883      	ldrh	r3, [r0, #4]
 8025cc0:	4604      	mov	r4, r0
 8025cc2:	4617      	mov	r7, r2
 8025cc4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025cc8:	eba8 0303 	sub.w	r3, r8, r3
 8025ccc:	4a19      	ldr	r2, [pc, #100]	; (8025d34 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025cce:	460e      	mov	r6, r1
 8025cd0:	b21b      	sxth	r3, r3
 8025cd2:	88c1      	ldrh	r1, [r0, #6]
 8025cd4:	9200      	str	r2, [sp, #0]
 8025cd6:	2000      	movs	r0, #0
 8025cd8:	2b00      	cmp	r3, #0
 8025cda:	8aa2      	ldrh	r2, [r4, #20]
 8025cdc:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025ce0:	bfb8      	it	lt
 8025ce2:	425b      	neglt	r3, r3
 8025ce4:	f88d 0004 	strb.w	r0, [sp, #4]
 8025ce8:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025cec:	b21b      	sxth	r3, r3
 8025cee:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025cf2:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025cf6:	4293      	cmp	r3, r2
 8025cf8:	dc07      	bgt.n	8025d0a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8025cfa:	1a69      	subs	r1, r5, r1
 8025cfc:	b209      	sxth	r1, r1
 8025cfe:	2900      	cmp	r1, #0
 8025d00:	bfb8      	it	lt
 8025d02:	4249      	neglt	r1, r1
 8025d04:	b209      	sxth	r1, r1
 8025d06:	428a      	cmp	r2, r1
 8025d08:	da10      	bge.n	8025d2c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8025d0a:	6920      	ldr	r0, [r4, #16]
 8025d0c:	4669      	mov	r1, sp
 8025d0e:	eba8 0606 	sub.w	r6, r8, r6
 8025d12:	1bef      	subs	r7, r5, r7
 8025d14:	6803      	ldr	r3, [r0, #0]
 8025d16:	685b      	ldr	r3, [r3, #4]
 8025d18:	4798      	blx	r3
 8025d1a:	2300      	movs	r3, #0
 8025d1c:	2001      	movs	r0, #1
 8025d1e:	8166      	strh	r6, [r4, #10]
 8025d20:	8123      	strh	r3, [r4, #8]
 8025d22:	81a7      	strh	r7, [r4, #12]
 8025d24:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025d28:	80e5      	strh	r5, [r4, #6]
 8025d2a:	73a0      	strb	r0, [r4, #14]
 8025d2c:	b004      	add	sp, #16
 8025d2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025d32:	bf00      	nop
 8025d34:	08028f94 	.word	0x08028f94

08025d38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025d38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025d3a:	461e      	mov	r6, r3
 8025d3c:	1e4b      	subs	r3, r1, #1
 8025d3e:	b085      	sub	sp, #20
 8025d40:	4604      	mov	r4, r0
 8025d42:	2b01      	cmp	r3, #1
 8025d44:	460d      	mov	r5, r1
 8025d46:	4617      	mov	r7, r2
 8025d48:	d84b      	bhi.n	8025de2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025d4a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025d4e:	1cd3      	adds	r3, r2, #3
 8025d50:	b29b      	uxth	r3, r3
 8025d52:	2b06      	cmp	r3, #6
 8025d54:	d916      	bls.n	8025d84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025d56:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025df8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025d5a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025d5e:	f8cd c004 	str.w	ip, [sp, #4]
 8025d62:	f04f 0c00 	mov.w	ip, #0
 8025d66:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025d6a:	6900      	ldr	r0, [r0, #16]
 8025d6c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025d70:	a901      	add	r1, sp, #4
 8025d72:	f88d c008 	strb.w	ip, [sp, #8]
 8025d76:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025d7a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025d7e:	6803      	ldr	r3, [r0, #0]
 8025d80:	689b      	ldr	r3, [r3, #8]
 8025d82:	4798      	blx	r3
 8025d84:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025d88:	1cd3      	adds	r3, r2, #3
 8025d8a:	b29b      	uxth	r3, r3
 8025d8c:	2b06      	cmp	r3, #6
 8025d8e:	d916      	bls.n	8025dbe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025d90:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025df8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025d94:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025d98:	f8cd c004 	str.w	ip, [sp, #4]
 8025d9c:	f04f 0c01 	mov.w	ip, #1
 8025da0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025da4:	6920      	ldr	r0, [r4, #16]
 8025da6:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025daa:	a901      	add	r1, sp, #4
 8025dac:	f88d c008 	strb.w	ip, [sp, #8]
 8025db0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025db4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025db8:	6803      	ldr	r3, [r0, #0]
 8025dba:	689b      	ldr	r3, [r3, #8]
 8025dbc:	4798      	blx	r3
 8025dbe:	4b0d      	ldr	r3, [pc, #52]	; (8025df4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025dc0:	a901      	add	r1, sp, #4
 8025dc2:	6920      	ldr	r0, [r4, #16]
 8025dc4:	9301      	str	r3, [sp, #4]
 8025dc6:	2300      	movs	r3, #0
 8025dc8:	f88d 5008 	strb.w	r5, [sp, #8]
 8025dcc:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025dd0:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025dd4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025dd8:	6803      	ldr	r3, [r0, #0]
 8025dda:	681b      	ldr	r3, [r3, #0]
 8025ddc:	4798      	blx	r3
 8025dde:	b005      	add	sp, #20
 8025de0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025de2:	2900      	cmp	r1, #0
 8025de4:	d1eb      	bne.n	8025dbe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025de6:	80a2      	strh	r2, [r4, #4]
 8025de8:	80c6      	strh	r6, [r0, #6]
 8025dea:	60a1      	str	r1, [r4, #8]
 8025dec:	81a1      	strh	r1, [r4, #12]
 8025dee:	73a1      	strb	r1, [r4, #14]
 8025df0:	e7e5      	b.n	8025dbe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025df2:	bf00      	nop
 8025df4:	08028f80 	.word	0x08028f80
 8025df8:	08028fa8 	.word	0x08028fa8

08025dfc <__aeabi_atexit>:
 8025dfc:	460b      	mov	r3, r1
 8025dfe:	4601      	mov	r1, r0
 8025e00:	4618      	mov	r0, r3
 8025e02:	f000 b90f 	b.w	8026024 <__cxa_atexit>

08025e06 <_ZdlPvj>:
 8025e06:	f000 b812 	b.w	8025e2e <_ZdlPv>

08025e0a <__cxa_guard_acquire>:
 8025e0a:	6803      	ldr	r3, [r0, #0]
 8025e0c:	07db      	lsls	r3, r3, #31
 8025e0e:	d406      	bmi.n	8025e1e <__cxa_guard_acquire+0x14>
 8025e10:	7843      	ldrb	r3, [r0, #1]
 8025e12:	b103      	cbz	r3, 8025e16 <__cxa_guard_acquire+0xc>
 8025e14:	deff      	udf	#255	; 0xff
 8025e16:	2301      	movs	r3, #1
 8025e18:	7043      	strb	r3, [r0, #1]
 8025e1a:	4618      	mov	r0, r3
 8025e1c:	4770      	bx	lr
 8025e1e:	2000      	movs	r0, #0
 8025e20:	4770      	bx	lr

08025e22 <__cxa_guard_release>:
 8025e22:	2301      	movs	r3, #1
 8025e24:	6003      	str	r3, [r0, #0]
 8025e26:	4770      	bx	lr

08025e28 <__cxa_pure_virtual>:
 8025e28:	b508      	push	{r3, lr}
 8025e2a:	f000 f80f 	bl	8025e4c <_ZSt9terminatev>

08025e2e <_ZdlPv>:
 8025e2e:	f000 b845 	b.w	8025ebc <free>

08025e32 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8025e32:	b508      	push	{r3, lr}
 8025e34:	4780      	blx	r0
 8025e36:	f000 f80e 	bl	8025e56 <abort>
	...

08025e3c <_ZSt13get_terminatev>:
 8025e3c:	4b02      	ldr	r3, [pc, #8]	; (8025e48 <_ZSt13get_terminatev+0xc>)
 8025e3e:	6818      	ldr	r0, [r3, #0]
 8025e40:	f3bf 8f5b 	dmb	ish
 8025e44:	4770      	bx	lr
 8025e46:	bf00      	nop
 8025e48:	24000098 	.word	0x24000098

08025e4c <_ZSt9terminatev>:
 8025e4c:	b508      	push	{r3, lr}
 8025e4e:	f7ff fff5 	bl	8025e3c <_ZSt13get_terminatev>
 8025e52:	f7ff ffee 	bl	8025e32 <_ZN10__cxxabiv111__terminateEPFvvE>

08025e56 <abort>:
 8025e56:	b508      	push	{r3, lr}
 8025e58:	2006      	movs	r0, #6
 8025e5a:	f000 fa39 	bl	80262d0 <raise>
 8025e5e:	2001      	movs	r0, #1
 8025e60:	f7db f92c 	bl	80010bc <_exit>

08025e64 <__assert_func>:
 8025e64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8025e66:	4614      	mov	r4, r2
 8025e68:	461a      	mov	r2, r3
 8025e6a:	4b09      	ldr	r3, [pc, #36]	; (8025e90 <__assert_func+0x2c>)
 8025e6c:	681b      	ldr	r3, [r3, #0]
 8025e6e:	4605      	mov	r5, r0
 8025e70:	68d8      	ldr	r0, [r3, #12]
 8025e72:	b14c      	cbz	r4, 8025e88 <__assert_func+0x24>
 8025e74:	4b07      	ldr	r3, [pc, #28]	; (8025e94 <__assert_func+0x30>)
 8025e76:	9100      	str	r1, [sp, #0]
 8025e78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8025e7c:	4906      	ldr	r1, [pc, #24]	; (8025e98 <__assert_func+0x34>)
 8025e7e:	462b      	mov	r3, r5
 8025e80:	f000 f982 	bl	8026188 <fiprintf>
 8025e84:	f7ff ffe7 	bl	8025e56 <abort>
 8025e88:	4b04      	ldr	r3, [pc, #16]	; (8025e9c <__assert_func+0x38>)
 8025e8a:	461c      	mov	r4, r3
 8025e8c:	e7f3      	b.n	8025e76 <__assert_func+0x12>
 8025e8e:	bf00      	nop
 8025e90:	240000f4 	.word	0x240000f4
 8025e94:	080292c4 	.word	0x080292c4
 8025e98:	080292d1 	.word	0x080292d1
 8025e9c:	080292ff 	.word	0x080292ff

08025ea0 <atexit>:
 8025ea0:	2300      	movs	r3, #0
 8025ea2:	4601      	mov	r1, r0
 8025ea4:	461a      	mov	r2, r3
 8025ea6:	4618      	mov	r0, r3
 8025ea8:	f000 bac0 	b.w	802642c <__register_exitproc>

08025eac <malloc>:
 8025eac:	4b02      	ldr	r3, [pc, #8]	; (8025eb8 <malloc+0xc>)
 8025eae:	4601      	mov	r1, r0
 8025eb0:	6818      	ldr	r0, [r3, #0]
 8025eb2:	f000 b82b 	b.w	8025f0c <_malloc_r>
 8025eb6:	bf00      	nop
 8025eb8:	240000f4 	.word	0x240000f4

08025ebc <free>:
 8025ebc:	4b02      	ldr	r3, [pc, #8]	; (8025ec8 <free+0xc>)
 8025ebe:	4601      	mov	r1, r0
 8025ec0:	6818      	ldr	r0, [r3, #0]
 8025ec2:	f000 bb11 	b.w	80264e8 <_free_r>
 8025ec6:	bf00      	nop
 8025ec8:	240000f4 	.word	0x240000f4

08025ecc <sbrk_aligned>:
 8025ecc:	b570      	push	{r4, r5, r6, lr}
 8025ece:	4e0e      	ldr	r6, [pc, #56]	; (8025f08 <sbrk_aligned+0x3c>)
 8025ed0:	460c      	mov	r4, r1
 8025ed2:	6831      	ldr	r1, [r6, #0]
 8025ed4:	4605      	mov	r5, r0
 8025ed6:	b911      	cbnz	r1, 8025ede <sbrk_aligned+0x12>
 8025ed8:	f000 fa4a 	bl	8026370 <_sbrk_r>
 8025edc:	6030      	str	r0, [r6, #0]
 8025ede:	4621      	mov	r1, r4
 8025ee0:	4628      	mov	r0, r5
 8025ee2:	f000 fa45 	bl	8026370 <_sbrk_r>
 8025ee6:	1c43      	adds	r3, r0, #1
 8025ee8:	d00a      	beq.n	8025f00 <sbrk_aligned+0x34>
 8025eea:	1cc4      	adds	r4, r0, #3
 8025eec:	f024 0403 	bic.w	r4, r4, #3
 8025ef0:	42a0      	cmp	r0, r4
 8025ef2:	d007      	beq.n	8025f04 <sbrk_aligned+0x38>
 8025ef4:	1a21      	subs	r1, r4, r0
 8025ef6:	4628      	mov	r0, r5
 8025ef8:	f000 fa3a 	bl	8026370 <_sbrk_r>
 8025efc:	3001      	adds	r0, #1
 8025efe:	d101      	bne.n	8025f04 <sbrk_aligned+0x38>
 8025f00:	f04f 34ff 	mov.w	r4, #4294967295
 8025f04:	4620      	mov	r0, r4
 8025f06:	bd70      	pop	{r4, r5, r6, pc}
 8025f08:	240053a0 	.word	0x240053a0

08025f0c <_malloc_r>:
 8025f0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025f10:	1ccd      	adds	r5, r1, #3
 8025f12:	f025 0503 	bic.w	r5, r5, #3
 8025f16:	3508      	adds	r5, #8
 8025f18:	2d0c      	cmp	r5, #12
 8025f1a:	bf38      	it	cc
 8025f1c:	250c      	movcc	r5, #12
 8025f1e:	2d00      	cmp	r5, #0
 8025f20:	4607      	mov	r7, r0
 8025f22:	db01      	blt.n	8025f28 <_malloc_r+0x1c>
 8025f24:	42a9      	cmp	r1, r5
 8025f26:	d905      	bls.n	8025f34 <_malloc_r+0x28>
 8025f28:	230c      	movs	r3, #12
 8025f2a:	603b      	str	r3, [r7, #0]
 8025f2c:	2600      	movs	r6, #0
 8025f2e:	4630      	mov	r0, r6
 8025f30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025f34:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8026008 <_malloc_r+0xfc>
 8025f38:	f000 f868 	bl	802600c <__malloc_lock>
 8025f3c:	f8d8 3000 	ldr.w	r3, [r8]
 8025f40:	461c      	mov	r4, r3
 8025f42:	bb5c      	cbnz	r4, 8025f9c <_malloc_r+0x90>
 8025f44:	4629      	mov	r1, r5
 8025f46:	4638      	mov	r0, r7
 8025f48:	f7ff ffc0 	bl	8025ecc <sbrk_aligned>
 8025f4c:	1c43      	adds	r3, r0, #1
 8025f4e:	4604      	mov	r4, r0
 8025f50:	d155      	bne.n	8025ffe <_malloc_r+0xf2>
 8025f52:	f8d8 4000 	ldr.w	r4, [r8]
 8025f56:	4626      	mov	r6, r4
 8025f58:	2e00      	cmp	r6, #0
 8025f5a:	d145      	bne.n	8025fe8 <_malloc_r+0xdc>
 8025f5c:	2c00      	cmp	r4, #0
 8025f5e:	d048      	beq.n	8025ff2 <_malloc_r+0xe6>
 8025f60:	6823      	ldr	r3, [r4, #0]
 8025f62:	4631      	mov	r1, r6
 8025f64:	4638      	mov	r0, r7
 8025f66:	eb04 0903 	add.w	r9, r4, r3
 8025f6a:	f000 fa01 	bl	8026370 <_sbrk_r>
 8025f6e:	4581      	cmp	r9, r0
 8025f70:	d13f      	bne.n	8025ff2 <_malloc_r+0xe6>
 8025f72:	6821      	ldr	r1, [r4, #0]
 8025f74:	1a6d      	subs	r5, r5, r1
 8025f76:	4629      	mov	r1, r5
 8025f78:	4638      	mov	r0, r7
 8025f7a:	f7ff ffa7 	bl	8025ecc <sbrk_aligned>
 8025f7e:	3001      	adds	r0, #1
 8025f80:	d037      	beq.n	8025ff2 <_malloc_r+0xe6>
 8025f82:	6823      	ldr	r3, [r4, #0]
 8025f84:	442b      	add	r3, r5
 8025f86:	6023      	str	r3, [r4, #0]
 8025f88:	f8d8 3000 	ldr.w	r3, [r8]
 8025f8c:	2b00      	cmp	r3, #0
 8025f8e:	d038      	beq.n	8026002 <_malloc_r+0xf6>
 8025f90:	685a      	ldr	r2, [r3, #4]
 8025f92:	42a2      	cmp	r2, r4
 8025f94:	d12b      	bne.n	8025fee <_malloc_r+0xe2>
 8025f96:	2200      	movs	r2, #0
 8025f98:	605a      	str	r2, [r3, #4]
 8025f9a:	e00f      	b.n	8025fbc <_malloc_r+0xb0>
 8025f9c:	6822      	ldr	r2, [r4, #0]
 8025f9e:	1b52      	subs	r2, r2, r5
 8025fa0:	d41f      	bmi.n	8025fe2 <_malloc_r+0xd6>
 8025fa2:	2a0b      	cmp	r2, #11
 8025fa4:	d917      	bls.n	8025fd6 <_malloc_r+0xca>
 8025fa6:	1961      	adds	r1, r4, r5
 8025fa8:	42a3      	cmp	r3, r4
 8025faa:	6025      	str	r5, [r4, #0]
 8025fac:	bf18      	it	ne
 8025fae:	6059      	strne	r1, [r3, #4]
 8025fb0:	6863      	ldr	r3, [r4, #4]
 8025fb2:	bf08      	it	eq
 8025fb4:	f8c8 1000 	streq.w	r1, [r8]
 8025fb8:	5162      	str	r2, [r4, r5]
 8025fba:	604b      	str	r3, [r1, #4]
 8025fbc:	4638      	mov	r0, r7
 8025fbe:	f104 060b 	add.w	r6, r4, #11
 8025fc2:	f000 f829 	bl	8026018 <__malloc_unlock>
 8025fc6:	f026 0607 	bic.w	r6, r6, #7
 8025fca:	1d23      	adds	r3, r4, #4
 8025fcc:	1af2      	subs	r2, r6, r3
 8025fce:	d0ae      	beq.n	8025f2e <_malloc_r+0x22>
 8025fd0:	1b9b      	subs	r3, r3, r6
 8025fd2:	50a3      	str	r3, [r4, r2]
 8025fd4:	e7ab      	b.n	8025f2e <_malloc_r+0x22>
 8025fd6:	42a3      	cmp	r3, r4
 8025fd8:	6862      	ldr	r2, [r4, #4]
 8025fda:	d1dd      	bne.n	8025f98 <_malloc_r+0x8c>
 8025fdc:	f8c8 2000 	str.w	r2, [r8]
 8025fe0:	e7ec      	b.n	8025fbc <_malloc_r+0xb0>
 8025fe2:	4623      	mov	r3, r4
 8025fe4:	6864      	ldr	r4, [r4, #4]
 8025fe6:	e7ac      	b.n	8025f42 <_malloc_r+0x36>
 8025fe8:	4634      	mov	r4, r6
 8025fea:	6876      	ldr	r6, [r6, #4]
 8025fec:	e7b4      	b.n	8025f58 <_malloc_r+0x4c>
 8025fee:	4613      	mov	r3, r2
 8025ff0:	e7cc      	b.n	8025f8c <_malloc_r+0x80>
 8025ff2:	230c      	movs	r3, #12
 8025ff4:	603b      	str	r3, [r7, #0]
 8025ff6:	4638      	mov	r0, r7
 8025ff8:	f000 f80e 	bl	8026018 <__malloc_unlock>
 8025ffc:	e797      	b.n	8025f2e <_malloc_r+0x22>
 8025ffe:	6025      	str	r5, [r4, #0]
 8026000:	e7dc      	b.n	8025fbc <_malloc_r+0xb0>
 8026002:	605b      	str	r3, [r3, #4]
 8026004:	deff      	udf	#255	; 0xff
 8026006:	bf00      	nop
 8026008:	2400539c 	.word	0x2400539c

0802600c <__malloc_lock>:
 802600c:	4801      	ldr	r0, [pc, #4]	; (8026014 <__malloc_lock+0x8>)
 802600e:	f000 b9fc 	b.w	802640a <__retarget_lock_acquire_recursive>
 8026012:	bf00      	nop
 8026014:	240054e5 	.word	0x240054e5

08026018 <__malloc_unlock>:
 8026018:	4801      	ldr	r0, [pc, #4]	; (8026020 <__malloc_unlock+0x8>)
 802601a:	f000 b9f7 	b.w	802640c <__retarget_lock_release_recursive>
 802601e:	bf00      	nop
 8026020:	240054e5 	.word	0x240054e5

08026024 <__cxa_atexit>:
 8026024:	b510      	push	{r4, lr}
 8026026:	4c05      	ldr	r4, [pc, #20]	; (802603c <__cxa_atexit+0x18>)
 8026028:	4613      	mov	r3, r2
 802602a:	b12c      	cbz	r4, 8026038 <__cxa_atexit+0x14>
 802602c:	460a      	mov	r2, r1
 802602e:	4601      	mov	r1, r0
 8026030:	2002      	movs	r0, #2
 8026032:	f000 f9fb 	bl	802642c <__register_exitproc>
 8026036:	bd10      	pop	{r4, pc}
 8026038:	4620      	mov	r0, r4
 802603a:	e7fc      	b.n	8026036 <__cxa_atexit+0x12>
 802603c:	0802642d 	.word	0x0802642d

08026040 <std>:
 8026040:	2300      	movs	r3, #0
 8026042:	b510      	push	{r4, lr}
 8026044:	4604      	mov	r4, r0
 8026046:	e9c0 3300 	strd	r3, r3, [r0]
 802604a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802604e:	6083      	str	r3, [r0, #8]
 8026050:	8181      	strh	r1, [r0, #12]
 8026052:	6643      	str	r3, [r0, #100]	; 0x64
 8026054:	81c2      	strh	r2, [r0, #14]
 8026056:	6183      	str	r3, [r0, #24]
 8026058:	4619      	mov	r1, r3
 802605a:	2208      	movs	r2, #8
 802605c:	305c      	adds	r0, #92	; 0x5c
 802605e:	f000 f906 	bl	802626e <memset>
 8026062:	4b0d      	ldr	r3, [pc, #52]	; (8026098 <std+0x58>)
 8026064:	6263      	str	r3, [r4, #36]	; 0x24
 8026066:	4b0d      	ldr	r3, [pc, #52]	; (802609c <std+0x5c>)
 8026068:	62a3      	str	r3, [r4, #40]	; 0x28
 802606a:	4b0d      	ldr	r3, [pc, #52]	; (80260a0 <std+0x60>)
 802606c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802606e:	4b0d      	ldr	r3, [pc, #52]	; (80260a4 <std+0x64>)
 8026070:	6323      	str	r3, [r4, #48]	; 0x30
 8026072:	4b0d      	ldr	r3, [pc, #52]	; (80260a8 <std+0x68>)
 8026074:	6224      	str	r4, [r4, #32]
 8026076:	429c      	cmp	r4, r3
 8026078:	d006      	beq.n	8026088 <std+0x48>
 802607a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802607e:	4294      	cmp	r4, r2
 8026080:	d002      	beq.n	8026088 <std+0x48>
 8026082:	33d0      	adds	r3, #208	; 0xd0
 8026084:	429c      	cmp	r4, r3
 8026086:	d105      	bne.n	8026094 <std+0x54>
 8026088:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802608c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026090:	f000 b9ba 	b.w	8026408 <__retarget_lock_init_recursive>
 8026094:	bd10      	pop	{r4, pc}
 8026096:	bf00      	nop
 8026098:	080261e9 	.word	0x080261e9
 802609c:	0802620b 	.word	0x0802620b
 80260a0:	08026243 	.word	0x08026243
 80260a4:	08026267 	.word	0x08026267
 80260a8:	240053a4 	.word	0x240053a4

080260ac <stdio_exit_handler>:
 80260ac:	4a02      	ldr	r2, [pc, #8]	; (80260b8 <stdio_exit_handler+0xc>)
 80260ae:	4903      	ldr	r1, [pc, #12]	; (80260bc <stdio_exit_handler+0x10>)
 80260b0:	4803      	ldr	r0, [pc, #12]	; (80260c0 <stdio_exit_handler+0x14>)
 80260b2:	f000 b87b 	b.w	80261ac <_fwalk_sglue>
 80260b6:	bf00      	nop
 80260b8:	2400009c 	.word	0x2400009c
 80260bc:	08026c35 	.word	0x08026c35
 80260c0:	240000a8 	.word	0x240000a8

080260c4 <cleanup_stdio>:
 80260c4:	6841      	ldr	r1, [r0, #4]
 80260c6:	4b0c      	ldr	r3, [pc, #48]	; (80260f8 <cleanup_stdio+0x34>)
 80260c8:	4299      	cmp	r1, r3
 80260ca:	b510      	push	{r4, lr}
 80260cc:	4604      	mov	r4, r0
 80260ce:	d001      	beq.n	80260d4 <cleanup_stdio+0x10>
 80260d0:	f000 fdb0 	bl	8026c34 <_fflush_r>
 80260d4:	68a1      	ldr	r1, [r4, #8]
 80260d6:	4b09      	ldr	r3, [pc, #36]	; (80260fc <cleanup_stdio+0x38>)
 80260d8:	4299      	cmp	r1, r3
 80260da:	d002      	beq.n	80260e2 <cleanup_stdio+0x1e>
 80260dc:	4620      	mov	r0, r4
 80260de:	f000 fda9 	bl	8026c34 <_fflush_r>
 80260e2:	68e1      	ldr	r1, [r4, #12]
 80260e4:	4b06      	ldr	r3, [pc, #24]	; (8026100 <cleanup_stdio+0x3c>)
 80260e6:	4299      	cmp	r1, r3
 80260e8:	d004      	beq.n	80260f4 <cleanup_stdio+0x30>
 80260ea:	4620      	mov	r0, r4
 80260ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80260f0:	f000 bda0 	b.w	8026c34 <_fflush_r>
 80260f4:	bd10      	pop	{r4, pc}
 80260f6:	bf00      	nop
 80260f8:	240053a4 	.word	0x240053a4
 80260fc:	2400540c 	.word	0x2400540c
 8026100:	24005474 	.word	0x24005474

08026104 <global_stdio_init.part.0>:
 8026104:	b510      	push	{r4, lr}
 8026106:	4b0b      	ldr	r3, [pc, #44]	; (8026134 <global_stdio_init.part.0+0x30>)
 8026108:	4c0b      	ldr	r4, [pc, #44]	; (8026138 <global_stdio_init.part.0+0x34>)
 802610a:	4a0c      	ldr	r2, [pc, #48]	; (802613c <global_stdio_init.part.0+0x38>)
 802610c:	601a      	str	r2, [r3, #0]
 802610e:	4620      	mov	r0, r4
 8026110:	2200      	movs	r2, #0
 8026112:	2104      	movs	r1, #4
 8026114:	f7ff ff94 	bl	8026040 <std>
 8026118:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802611c:	2201      	movs	r2, #1
 802611e:	2109      	movs	r1, #9
 8026120:	f7ff ff8e 	bl	8026040 <std>
 8026124:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8026128:	2202      	movs	r2, #2
 802612a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802612e:	2112      	movs	r1, #18
 8026130:	f7ff bf86 	b.w	8026040 <std>
 8026134:	240054dc 	.word	0x240054dc
 8026138:	240053a4 	.word	0x240053a4
 802613c:	080260ad 	.word	0x080260ad

08026140 <__sfp_lock_acquire>:
 8026140:	4801      	ldr	r0, [pc, #4]	; (8026148 <__sfp_lock_acquire+0x8>)
 8026142:	f000 b962 	b.w	802640a <__retarget_lock_acquire_recursive>
 8026146:	bf00      	nop
 8026148:	240054e6 	.word	0x240054e6

0802614c <__sfp_lock_release>:
 802614c:	4801      	ldr	r0, [pc, #4]	; (8026154 <__sfp_lock_release+0x8>)
 802614e:	f000 b95d 	b.w	802640c <__retarget_lock_release_recursive>
 8026152:	bf00      	nop
 8026154:	240054e6 	.word	0x240054e6

08026158 <__sinit>:
 8026158:	b510      	push	{r4, lr}
 802615a:	4604      	mov	r4, r0
 802615c:	f7ff fff0 	bl	8026140 <__sfp_lock_acquire>
 8026160:	6a23      	ldr	r3, [r4, #32]
 8026162:	b11b      	cbz	r3, 802616c <__sinit+0x14>
 8026164:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026168:	f7ff bff0 	b.w	802614c <__sfp_lock_release>
 802616c:	4b04      	ldr	r3, [pc, #16]	; (8026180 <__sinit+0x28>)
 802616e:	6223      	str	r3, [r4, #32]
 8026170:	4b04      	ldr	r3, [pc, #16]	; (8026184 <__sinit+0x2c>)
 8026172:	681b      	ldr	r3, [r3, #0]
 8026174:	2b00      	cmp	r3, #0
 8026176:	d1f5      	bne.n	8026164 <__sinit+0xc>
 8026178:	f7ff ffc4 	bl	8026104 <global_stdio_init.part.0>
 802617c:	e7f2      	b.n	8026164 <__sinit+0xc>
 802617e:	bf00      	nop
 8026180:	080260c5 	.word	0x080260c5
 8026184:	240054dc 	.word	0x240054dc

08026188 <fiprintf>:
 8026188:	b40e      	push	{r1, r2, r3}
 802618a:	b503      	push	{r0, r1, lr}
 802618c:	4601      	mov	r1, r0
 802618e:	ab03      	add	r3, sp, #12
 8026190:	4805      	ldr	r0, [pc, #20]	; (80261a8 <fiprintf+0x20>)
 8026192:	f853 2b04 	ldr.w	r2, [r3], #4
 8026196:	6800      	ldr	r0, [r0, #0]
 8026198:	9301      	str	r3, [sp, #4]
 802619a:	f000 fa1b 	bl	80265d4 <_vfiprintf_r>
 802619e:	b002      	add	sp, #8
 80261a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80261a4:	b003      	add	sp, #12
 80261a6:	4770      	bx	lr
 80261a8:	240000f4 	.word	0x240000f4

080261ac <_fwalk_sglue>:
 80261ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80261b0:	4607      	mov	r7, r0
 80261b2:	4688      	mov	r8, r1
 80261b4:	4614      	mov	r4, r2
 80261b6:	2600      	movs	r6, #0
 80261b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80261bc:	f1b9 0901 	subs.w	r9, r9, #1
 80261c0:	d505      	bpl.n	80261ce <_fwalk_sglue+0x22>
 80261c2:	6824      	ldr	r4, [r4, #0]
 80261c4:	2c00      	cmp	r4, #0
 80261c6:	d1f7      	bne.n	80261b8 <_fwalk_sglue+0xc>
 80261c8:	4630      	mov	r0, r6
 80261ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80261ce:	89ab      	ldrh	r3, [r5, #12]
 80261d0:	2b01      	cmp	r3, #1
 80261d2:	d907      	bls.n	80261e4 <_fwalk_sglue+0x38>
 80261d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80261d8:	3301      	adds	r3, #1
 80261da:	d003      	beq.n	80261e4 <_fwalk_sglue+0x38>
 80261dc:	4629      	mov	r1, r5
 80261de:	4638      	mov	r0, r7
 80261e0:	47c0      	blx	r8
 80261e2:	4306      	orrs	r6, r0
 80261e4:	3568      	adds	r5, #104	; 0x68
 80261e6:	e7e9      	b.n	80261bc <_fwalk_sglue+0x10>

080261e8 <__sread>:
 80261e8:	b510      	push	{r4, lr}
 80261ea:	460c      	mov	r4, r1
 80261ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80261f0:	f000 f898 	bl	8026324 <_read_r>
 80261f4:	2800      	cmp	r0, #0
 80261f6:	bfab      	itete	ge
 80261f8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80261fa:	89a3      	ldrhlt	r3, [r4, #12]
 80261fc:	181b      	addge	r3, r3, r0
 80261fe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8026202:	bfac      	ite	ge
 8026204:	6563      	strge	r3, [r4, #84]	; 0x54
 8026206:	81a3      	strhlt	r3, [r4, #12]
 8026208:	bd10      	pop	{r4, pc}

0802620a <__swrite>:
 802620a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802620e:	461f      	mov	r7, r3
 8026210:	898b      	ldrh	r3, [r1, #12]
 8026212:	05db      	lsls	r3, r3, #23
 8026214:	4605      	mov	r5, r0
 8026216:	460c      	mov	r4, r1
 8026218:	4616      	mov	r6, r2
 802621a:	d505      	bpl.n	8026228 <__swrite+0x1e>
 802621c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026220:	2302      	movs	r3, #2
 8026222:	2200      	movs	r2, #0
 8026224:	f000 f86c 	bl	8026300 <_lseek_r>
 8026228:	89a3      	ldrh	r3, [r4, #12]
 802622a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802622e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8026232:	81a3      	strh	r3, [r4, #12]
 8026234:	4632      	mov	r2, r6
 8026236:	463b      	mov	r3, r7
 8026238:	4628      	mov	r0, r5
 802623a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802623e:	f000 b8a7 	b.w	8026390 <_write_r>

08026242 <__sseek>:
 8026242:	b510      	push	{r4, lr}
 8026244:	460c      	mov	r4, r1
 8026246:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802624a:	f000 f859 	bl	8026300 <_lseek_r>
 802624e:	1c43      	adds	r3, r0, #1
 8026250:	89a3      	ldrh	r3, [r4, #12]
 8026252:	bf15      	itete	ne
 8026254:	6560      	strne	r0, [r4, #84]	; 0x54
 8026256:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802625a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802625e:	81a3      	strheq	r3, [r4, #12]
 8026260:	bf18      	it	ne
 8026262:	81a3      	strhne	r3, [r4, #12]
 8026264:	bd10      	pop	{r4, pc}

08026266 <__sclose>:
 8026266:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802626a:	f000 b839 	b.w	80262e0 <_close_r>

0802626e <memset>:
 802626e:	4402      	add	r2, r0
 8026270:	4603      	mov	r3, r0
 8026272:	4293      	cmp	r3, r2
 8026274:	d100      	bne.n	8026278 <memset+0xa>
 8026276:	4770      	bx	lr
 8026278:	f803 1b01 	strb.w	r1, [r3], #1
 802627c:	e7f9      	b.n	8026272 <memset+0x4>

0802627e <_raise_r>:
 802627e:	291f      	cmp	r1, #31
 8026280:	b538      	push	{r3, r4, r5, lr}
 8026282:	4604      	mov	r4, r0
 8026284:	460d      	mov	r5, r1
 8026286:	d904      	bls.n	8026292 <_raise_r+0x14>
 8026288:	2316      	movs	r3, #22
 802628a:	6003      	str	r3, [r0, #0]
 802628c:	f04f 30ff 	mov.w	r0, #4294967295
 8026290:	bd38      	pop	{r3, r4, r5, pc}
 8026292:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8026294:	b112      	cbz	r2, 802629c <_raise_r+0x1e>
 8026296:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802629a:	b94b      	cbnz	r3, 80262b0 <_raise_r+0x32>
 802629c:	4620      	mov	r0, r4
 802629e:	f000 f865 	bl	802636c <_getpid_r>
 80262a2:	462a      	mov	r2, r5
 80262a4:	4601      	mov	r1, r0
 80262a6:	4620      	mov	r0, r4
 80262a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80262ac:	f000 b84c 	b.w	8026348 <_kill_r>
 80262b0:	2b01      	cmp	r3, #1
 80262b2:	d00a      	beq.n	80262ca <_raise_r+0x4c>
 80262b4:	1c59      	adds	r1, r3, #1
 80262b6:	d103      	bne.n	80262c0 <_raise_r+0x42>
 80262b8:	2316      	movs	r3, #22
 80262ba:	6003      	str	r3, [r0, #0]
 80262bc:	2001      	movs	r0, #1
 80262be:	e7e7      	b.n	8026290 <_raise_r+0x12>
 80262c0:	2400      	movs	r4, #0
 80262c2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80262c6:	4628      	mov	r0, r5
 80262c8:	4798      	blx	r3
 80262ca:	2000      	movs	r0, #0
 80262cc:	e7e0      	b.n	8026290 <_raise_r+0x12>
	...

080262d0 <raise>:
 80262d0:	4b02      	ldr	r3, [pc, #8]	; (80262dc <raise+0xc>)
 80262d2:	4601      	mov	r1, r0
 80262d4:	6818      	ldr	r0, [r3, #0]
 80262d6:	f7ff bfd2 	b.w	802627e <_raise_r>
 80262da:	bf00      	nop
 80262dc:	240000f4 	.word	0x240000f4

080262e0 <_close_r>:
 80262e0:	b538      	push	{r3, r4, r5, lr}
 80262e2:	4d06      	ldr	r5, [pc, #24]	; (80262fc <_close_r+0x1c>)
 80262e4:	2300      	movs	r3, #0
 80262e6:	4604      	mov	r4, r0
 80262e8:	4608      	mov	r0, r1
 80262ea:	602b      	str	r3, [r5, #0]
 80262ec:	f7da ff29 	bl	8001142 <_close>
 80262f0:	1c43      	adds	r3, r0, #1
 80262f2:	d102      	bne.n	80262fa <_close_r+0x1a>
 80262f4:	682b      	ldr	r3, [r5, #0]
 80262f6:	b103      	cbz	r3, 80262fa <_close_r+0x1a>
 80262f8:	6023      	str	r3, [r4, #0]
 80262fa:	bd38      	pop	{r3, r4, r5, pc}
 80262fc:	240054e0 	.word	0x240054e0

08026300 <_lseek_r>:
 8026300:	b538      	push	{r3, r4, r5, lr}
 8026302:	4d07      	ldr	r5, [pc, #28]	; (8026320 <_lseek_r+0x20>)
 8026304:	4604      	mov	r4, r0
 8026306:	4608      	mov	r0, r1
 8026308:	4611      	mov	r1, r2
 802630a:	2200      	movs	r2, #0
 802630c:	602a      	str	r2, [r5, #0]
 802630e:	461a      	mov	r2, r3
 8026310:	f7da ff3e 	bl	8001190 <_lseek>
 8026314:	1c43      	adds	r3, r0, #1
 8026316:	d102      	bne.n	802631e <_lseek_r+0x1e>
 8026318:	682b      	ldr	r3, [r5, #0]
 802631a:	b103      	cbz	r3, 802631e <_lseek_r+0x1e>
 802631c:	6023      	str	r3, [r4, #0]
 802631e:	bd38      	pop	{r3, r4, r5, pc}
 8026320:	240054e0 	.word	0x240054e0

08026324 <_read_r>:
 8026324:	b538      	push	{r3, r4, r5, lr}
 8026326:	4d07      	ldr	r5, [pc, #28]	; (8026344 <_read_r+0x20>)
 8026328:	4604      	mov	r4, r0
 802632a:	4608      	mov	r0, r1
 802632c:	4611      	mov	r1, r2
 802632e:	2200      	movs	r2, #0
 8026330:	602a      	str	r2, [r5, #0]
 8026332:	461a      	mov	r2, r3
 8026334:	f7da fecc 	bl	80010d0 <_read>
 8026338:	1c43      	adds	r3, r0, #1
 802633a:	d102      	bne.n	8026342 <_read_r+0x1e>
 802633c:	682b      	ldr	r3, [r5, #0]
 802633e:	b103      	cbz	r3, 8026342 <_read_r+0x1e>
 8026340:	6023      	str	r3, [r4, #0]
 8026342:	bd38      	pop	{r3, r4, r5, pc}
 8026344:	240054e0 	.word	0x240054e0

08026348 <_kill_r>:
 8026348:	b538      	push	{r3, r4, r5, lr}
 802634a:	4d07      	ldr	r5, [pc, #28]	; (8026368 <_kill_r+0x20>)
 802634c:	2300      	movs	r3, #0
 802634e:	4604      	mov	r4, r0
 8026350:	4608      	mov	r0, r1
 8026352:	4611      	mov	r1, r2
 8026354:	602b      	str	r3, [r5, #0]
 8026356:	f7da fea1 	bl	800109c <_kill>
 802635a:	1c43      	adds	r3, r0, #1
 802635c:	d102      	bne.n	8026364 <_kill_r+0x1c>
 802635e:	682b      	ldr	r3, [r5, #0]
 8026360:	b103      	cbz	r3, 8026364 <_kill_r+0x1c>
 8026362:	6023      	str	r3, [r4, #0]
 8026364:	bd38      	pop	{r3, r4, r5, pc}
 8026366:	bf00      	nop
 8026368:	240054e0 	.word	0x240054e0

0802636c <_getpid_r>:
 802636c:	f7da be8e 	b.w	800108c <_getpid>

08026370 <_sbrk_r>:
 8026370:	b538      	push	{r3, r4, r5, lr}
 8026372:	4d06      	ldr	r5, [pc, #24]	; (802638c <_sbrk_r+0x1c>)
 8026374:	2300      	movs	r3, #0
 8026376:	4604      	mov	r4, r0
 8026378:	4608      	mov	r0, r1
 802637a:	602b      	str	r3, [r5, #0]
 802637c:	f7da ff16 	bl	80011ac <_sbrk>
 8026380:	1c43      	adds	r3, r0, #1
 8026382:	d102      	bne.n	802638a <_sbrk_r+0x1a>
 8026384:	682b      	ldr	r3, [r5, #0]
 8026386:	b103      	cbz	r3, 802638a <_sbrk_r+0x1a>
 8026388:	6023      	str	r3, [r4, #0]
 802638a:	bd38      	pop	{r3, r4, r5, pc}
 802638c:	240054e0 	.word	0x240054e0

08026390 <_write_r>:
 8026390:	b538      	push	{r3, r4, r5, lr}
 8026392:	4d07      	ldr	r5, [pc, #28]	; (80263b0 <_write_r+0x20>)
 8026394:	4604      	mov	r4, r0
 8026396:	4608      	mov	r0, r1
 8026398:	4611      	mov	r1, r2
 802639a:	2200      	movs	r2, #0
 802639c:	602a      	str	r2, [r5, #0]
 802639e:	461a      	mov	r2, r3
 80263a0:	f7da feb3 	bl	800110a <_write>
 80263a4:	1c43      	adds	r3, r0, #1
 80263a6:	d102      	bne.n	80263ae <_write_r+0x1e>
 80263a8:	682b      	ldr	r3, [r5, #0]
 80263aa:	b103      	cbz	r3, 80263ae <_write_r+0x1e>
 80263ac:	6023      	str	r3, [r4, #0]
 80263ae:	bd38      	pop	{r3, r4, r5, pc}
 80263b0:	240054e0 	.word	0x240054e0

080263b4 <__errno>:
 80263b4:	4b01      	ldr	r3, [pc, #4]	; (80263bc <__errno+0x8>)
 80263b6:	6818      	ldr	r0, [r3, #0]
 80263b8:	4770      	bx	lr
 80263ba:	bf00      	nop
 80263bc:	240000f4 	.word	0x240000f4

080263c0 <__libc_init_array>:
 80263c0:	b570      	push	{r4, r5, r6, lr}
 80263c2:	4d0d      	ldr	r5, [pc, #52]	; (80263f8 <__libc_init_array+0x38>)
 80263c4:	4c0d      	ldr	r4, [pc, #52]	; (80263fc <__libc_init_array+0x3c>)
 80263c6:	1b64      	subs	r4, r4, r5
 80263c8:	10a4      	asrs	r4, r4, #2
 80263ca:	2600      	movs	r6, #0
 80263cc:	42a6      	cmp	r6, r4
 80263ce:	d109      	bne.n	80263e4 <__libc_init_array+0x24>
 80263d0:	4d0b      	ldr	r5, [pc, #44]	; (8026400 <__libc_init_array+0x40>)
 80263d2:	4c0c      	ldr	r4, [pc, #48]	; (8026404 <__libc_init_array+0x44>)
 80263d4:	f000 fd70 	bl	8026eb8 <_init>
 80263d8:	1b64      	subs	r4, r4, r5
 80263da:	10a4      	asrs	r4, r4, #2
 80263dc:	2600      	movs	r6, #0
 80263de:	42a6      	cmp	r6, r4
 80263e0:	d105      	bne.n	80263ee <__libc_init_array+0x2e>
 80263e2:	bd70      	pop	{r4, r5, r6, pc}
 80263e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80263e8:	4798      	blx	r3
 80263ea:	3601      	adds	r6, #1
 80263ec:	e7ee      	b.n	80263cc <__libc_init_array+0xc>
 80263ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80263f2:	4798      	blx	r3
 80263f4:	3601      	adds	r6, #1
 80263f6:	e7f2      	b.n	80263de <__libc_init_array+0x1e>
 80263f8:	0802bc24 	.word	0x0802bc24
 80263fc:	0802bc24 	.word	0x0802bc24
 8026400:	0802bc24 	.word	0x0802bc24
 8026404:	0802bc3c 	.word	0x0802bc3c

08026408 <__retarget_lock_init_recursive>:
 8026408:	4770      	bx	lr

0802640a <__retarget_lock_acquire_recursive>:
 802640a:	4770      	bx	lr

0802640c <__retarget_lock_release_recursive>:
 802640c:	4770      	bx	lr

0802640e <memcpy>:
 802640e:	440a      	add	r2, r1
 8026410:	4291      	cmp	r1, r2
 8026412:	f100 33ff 	add.w	r3, r0, #4294967295
 8026416:	d100      	bne.n	802641a <memcpy+0xc>
 8026418:	4770      	bx	lr
 802641a:	b510      	push	{r4, lr}
 802641c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8026420:	f803 4f01 	strb.w	r4, [r3, #1]!
 8026424:	4291      	cmp	r1, r2
 8026426:	d1f9      	bne.n	802641c <memcpy+0xe>
 8026428:	bd10      	pop	{r4, pc}
	...

0802642c <__register_exitproc>:
 802642c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026430:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80264e4 <__register_exitproc+0xb8>
 8026434:	4606      	mov	r6, r0
 8026436:	f8d8 0000 	ldr.w	r0, [r8]
 802643a:	461f      	mov	r7, r3
 802643c:	460d      	mov	r5, r1
 802643e:	4691      	mov	r9, r2
 8026440:	f7ff ffe3 	bl	802640a <__retarget_lock_acquire_recursive>
 8026444:	4b23      	ldr	r3, [pc, #140]	; (80264d4 <__register_exitproc+0xa8>)
 8026446:	681c      	ldr	r4, [r3, #0]
 8026448:	b934      	cbnz	r4, 8026458 <__register_exitproc+0x2c>
 802644a:	4c23      	ldr	r4, [pc, #140]	; (80264d8 <__register_exitproc+0xac>)
 802644c:	601c      	str	r4, [r3, #0]
 802644e:	4b23      	ldr	r3, [pc, #140]	; (80264dc <__register_exitproc+0xb0>)
 8026450:	b113      	cbz	r3, 8026458 <__register_exitproc+0x2c>
 8026452:	681b      	ldr	r3, [r3, #0]
 8026454:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8026458:	6863      	ldr	r3, [r4, #4]
 802645a:	2b1f      	cmp	r3, #31
 802645c:	dd07      	ble.n	802646e <__register_exitproc+0x42>
 802645e:	f8d8 0000 	ldr.w	r0, [r8]
 8026462:	f7ff ffd3 	bl	802640c <__retarget_lock_release_recursive>
 8026466:	f04f 30ff 	mov.w	r0, #4294967295
 802646a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802646e:	b32e      	cbz	r6, 80264bc <__register_exitproc+0x90>
 8026470:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8026474:	b968      	cbnz	r0, 8026492 <__register_exitproc+0x66>
 8026476:	4b1a      	ldr	r3, [pc, #104]	; (80264e0 <__register_exitproc+0xb4>)
 8026478:	2b00      	cmp	r3, #0
 802647a:	d0f0      	beq.n	802645e <__register_exitproc+0x32>
 802647c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8026480:	f7ff fd14 	bl	8025eac <malloc>
 8026484:	2800      	cmp	r0, #0
 8026486:	d0ea      	beq.n	802645e <__register_exitproc+0x32>
 8026488:	2300      	movs	r3, #0
 802648a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802648e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8026492:	6863      	ldr	r3, [r4, #4]
 8026494:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026498:	2201      	movs	r2, #1
 802649a:	409a      	lsls	r2, r3
 802649c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80264a0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80264a4:	4313      	orrs	r3, r2
 80264a6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80264aa:	2e02      	cmp	r6, #2
 80264ac:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80264b0:	bf02      	ittt	eq
 80264b2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80264b6:	4313      	orreq	r3, r2
 80264b8:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80264bc:	6863      	ldr	r3, [r4, #4]
 80264be:	f8d8 0000 	ldr.w	r0, [r8]
 80264c2:	1c5a      	adds	r2, r3, #1
 80264c4:	3302      	adds	r3, #2
 80264c6:	6062      	str	r2, [r4, #4]
 80264c8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80264cc:	f7ff ff9e 	bl	802640c <__retarget_lock_release_recursive>
 80264d0:	2000      	movs	r0, #0
 80264d2:	e7ca      	b.n	802646a <__register_exitproc+0x3e>
 80264d4:	24005574 	.word	0x24005574
 80264d8:	240054e8 	.word	0x240054e8
 80264dc:	08029300 	.word	0x08029300
 80264e0:	08025ead 	.word	0x08025ead
 80264e4:	240000f8 	.word	0x240000f8

080264e8 <_free_r>:
 80264e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80264ea:	2900      	cmp	r1, #0
 80264ec:	d044      	beq.n	8026578 <_free_r+0x90>
 80264ee:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80264f2:	9001      	str	r0, [sp, #4]
 80264f4:	2b00      	cmp	r3, #0
 80264f6:	f1a1 0404 	sub.w	r4, r1, #4
 80264fa:	bfb8      	it	lt
 80264fc:	18e4      	addlt	r4, r4, r3
 80264fe:	f7ff fd85 	bl	802600c <__malloc_lock>
 8026502:	4a1e      	ldr	r2, [pc, #120]	; (802657c <_free_r+0x94>)
 8026504:	9801      	ldr	r0, [sp, #4]
 8026506:	6813      	ldr	r3, [r2, #0]
 8026508:	b933      	cbnz	r3, 8026518 <_free_r+0x30>
 802650a:	6063      	str	r3, [r4, #4]
 802650c:	6014      	str	r4, [r2, #0]
 802650e:	b003      	add	sp, #12
 8026510:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8026514:	f7ff bd80 	b.w	8026018 <__malloc_unlock>
 8026518:	42a3      	cmp	r3, r4
 802651a:	d908      	bls.n	802652e <_free_r+0x46>
 802651c:	6825      	ldr	r5, [r4, #0]
 802651e:	1961      	adds	r1, r4, r5
 8026520:	428b      	cmp	r3, r1
 8026522:	bf01      	itttt	eq
 8026524:	6819      	ldreq	r1, [r3, #0]
 8026526:	685b      	ldreq	r3, [r3, #4]
 8026528:	1949      	addeq	r1, r1, r5
 802652a:	6021      	streq	r1, [r4, #0]
 802652c:	e7ed      	b.n	802650a <_free_r+0x22>
 802652e:	461a      	mov	r2, r3
 8026530:	685b      	ldr	r3, [r3, #4]
 8026532:	b10b      	cbz	r3, 8026538 <_free_r+0x50>
 8026534:	42a3      	cmp	r3, r4
 8026536:	d9fa      	bls.n	802652e <_free_r+0x46>
 8026538:	6811      	ldr	r1, [r2, #0]
 802653a:	1855      	adds	r5, r2, r1
 802653c:	42a5      	cmp	r5, r4
 802653e:	d10b      	bne.n	8026558 <_free_r+0x70>
 8026540:	6824      	ldr	r4, [r4, #0]
 8026542:	4421      	add	r1, r4
 8026544:	1854      	adds	r4, r2, r1
 8026546:	42a3      	cmp	r3, r4
 8026548:	6011      	str	r1, [r2, #0]
 802654a:	d1e0      	bne.n	802650e <_free_r+0x26>
 802654c:	681c      	ldr	r4, [r3, #0]
 802654e:	685b      	ldr	r3, [r3, #4]
 8026550:	6053      	str	r3, [r2, #4]
 8026552:	440c      	add	r4, r1
 8026554:	6014      	str	r4, [r2, #0]
 8026556:	e7da      	b.n	802650e <_free_r+0x26>
 8026558:	d902      	bls.n	8026560 <_free_r+0x78>
 802655a:	230c      	movs	r3, #12
 802655c:	6003      	str	r3, [r0, #0]
 802655e:	e7d6      	b.n	802650e <_free_r+0x26>
 8026560:	6825      	ldr	r5, [r4, #0]
 8026562:	1961      	adds	r1, r4, r5
 8026564:	428b      	cmp	r3, r1
 8026566:	bf04      	itt	eq
 8026568:	6819      	ldreq	r1, [r3, #0]
 802656a:	685b      	ldreq	r3, [r3, #4]
 802656c:	6063      	str	r3, [r4, #4]
 802656e:	bf04      	itt	eq
 8026570:	1949      	addeq	r1, r1, r5
 8026572:	6021      	streq	r1, [r4, #0]
 8026574:	6054      	str	r4, [r2, #4]
 8026576:	e7ca      	b.n	802650e <_free_r+0x26>
 8026578:	b003      	add	sp, #12
 802657a:	bd30      	pop	{r4, r5, pc}
 802657c:	2400539c 	.word	0x2400539c

08026580 <__sfputc_r>:
 8026580:	6893      	ldr	r3, [r2, #8]
 8026582:	3b01      	subs	r3, #1
 8026584:	2b00      	cmp	r3, #0
 8026586:	b410      	push	{r4}
 8026588:	6093      	str	r3, [r2, #8]
 802658a:	da08      	bge.n	802659e <__sfputc_r+0x1e>
 802658c:	6994      	ldr	r4, [r2, #24]
 802658e:	42a3      	cmp	r3, r4
 8026590:	db01      	blt.n	8026596 <__sfputc_r+0x16>
 8026592:	290a      	cmp	r1, #10
 8026594:	d103      	bne.n	802659e <__sfputc_r+0x1e>
 8026596:	f85d 4b04 	ldr.w	r4, [sp], #4
 802659a:	f000 bb73 	b.w	8026c84 <__swbuf_r>
 802659e:	6813      	ldr	r3, [r2, #0]
 80265a0:	1c58      	adds	r0, r3, #1
 80265a2:	6010      	str	r0, [r2, #0]
 80265a4:	7019      	strb	r1, [r3, #0]
 80265a6:	4608      	mov	r0, r1
 80265a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80265ac:	4770      	bx	lr

080265ae <__sfputs_r>:
 80265ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80265b0:	4606      	mov	r6, r0
 80265b2:	460f      	mov	r7, r1
 80265b4:	4614      	mov	r4, r2
 80265b6:	18d5      	adds	r5, r2, r3
 80265b8:	42ac      	cmp	r4, r5
 80265ba:	d101      	bne.n	80265c0 <__sfputs_r+0x12>
 80265bc:	2000      	movs	r0, #0
 80265be:	e007      	b.n	80265d0 <__sfputs_r+0x22>
 80265c0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80265c4:	463a      	mov	r2, r7
 80265c6:	4630      	mov	r0, r6
 80265c8:	f7ff ffda 	bl	8026580 <__sfputc_r>
 80265cc:	1c43      	adds	r3, r0, #1
 80265ce:	d1f3      	bne.n	80265b8 <__sfputs_r+0xa>
 80265d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080265d4 <_vfiprintf_r>:
 80265d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265d8:	460d      	mov	r5, r1
 80265da:	b09d      	sub	sp, #116	; 0x74
 80265dc:	4614      	mov	r4, r2
 80265de:	4698      	mov	r8, r3
 80265e0:	4606      	mov	r6, r0
 80265e2:	b118      	cbz	r0, 80265ec <_vfiprintf_r+0x18>
 80265e4:	6a03      	ldr	r3, [r0, #32]
 80265e6:	b90b      	cbnz	r3, 80265ec <_vfiprintf_r+0x18>
 80265e8:	f7ff fdb6 	bl	8026158 <__sinit>
 80265ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80265ee:	07d9      	lsls	r1, r3, #31
 80265f0:	d405      	bmi.n	80265fe <_vfiprintf_r+0x2a>
 80265f2:	89ab      	ldrh	r3, [r5, #12]
 80265f4:	059a      	lsls	r2, r3, #22
 80265f6:	d402      	bmi.n	80265fe <_vfiprintf_r+0x2a>
 80265f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80265fa:	f7ff ff06 	bl	802640a <__retarget_lock_acquire_recursive>
 80265fe:	89ab      	ldrh	r3, [r5, #12]
 8026600:	071b      	lsls	r3, r3, #28
 8026602:	d501      	bpl.n	8026608 <_vfiprintf_r+0x34>
 8026604:	692b      	ldr	r3, [r5, #16]
 8026606:	b99b      	cbnz	r3, 8026630 <_vfiprintf_r+0x5c>
 8026608:	4629      	mov	r1, r5
 802660a:	4630      	mov	r0, r6
 802660c:	f000 fb78 	bl	8026d00 <__swsetup_r>
 8026610:	b170      	cbz	r0, 8026630 <_vfiprintf_r+0x5c>
 8026612:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026614:	07dc      	lsls	r4, r3, #31
 8026616:	d504      	bpl.n	8026622 <_vfiprintf_r+0x4e>
 8026618:	f04f 30ff 	mov.w	r0, #4294967295
 802661c:	b01d      	add	sp, #116	; 0x74
 802661e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026622:	89ab      	ldrh	r3, [r5, #12]
 8026624:	0598      	lsls	r0, r3, #22
 8026626:	d4f7      	bmi.n	8026618 <_vfiprintf_r+0x44>
 8026628:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802662a:	f7ff feef 	bl	802640c <__retarget_lock_release_recursive>
 802662e:	e7f3      	b.n	8026618 <_vfiprintf_r+0x44>
 8026630:	2300      	movs	r3, #0
 8026632:	9309      	str	r3, [sp, #36]	; 0x24
 8026634:	2320      	movs	r3, #32
 8026636:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802663a:	f8cd 800c 	str.w	r8, [sp, #12]
 802663e:	2330      	movs	r3, #48	; 0x30
 8026640:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80267f4 <_vfiprintf_r+0x220>
 8026644:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8026648:	f04f 0901 	mov.w	r9, #1
 802664c:	4623      	mov	r3, r4
 802664e:	469a      	mov	sl, r3
 8026650:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026654:	b10a      	cbz	r2, 802665a <_vfiprintf_r+0x86>
 8026656:	2a25      	cmp	r2, #37	; 0x25
 8026658:	d1f9      	bne.n	802664e <_vfiprintf_r+0x7a>
 802665a:	ebba 0b04 	subs.w	fp, sl, r4
 802665e:	d00b      	beq.n	8026678 <_vfiprintf_r+0xa4>
 8026660:	465b      	mov	r3, fp
 8026662:	4622      	mov	r2, r4
 8026664:	4629      	mov	r1, r5
 8026666:	4630      	mov	r0, r6
 8026668:	f7ff ffa1 	bl	80265ae <__sfputs_r>
 802666c:	3001      	adds	r0, #1
 802666e:	f000 80a9 	beq.w	80267c4 <_vfiprintf_r+0x1f0>
 8026672:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026674:	445a      	add	r2, fp
 8026676:	9209      	str	r2, [sp, #36]	; 0x24
 8026678:	f89a 3000 	ldrb.w	r3, [sl]
 802667c:	2b00      	cmp	r3, #0
 802667e:	f000 80a1 	beq.w	80267c4 <_vfiprintf_r+0x1f0>
 8026682:	2300      	movs	r3, #0
 8026684:	f04f 32ff 	mov.w	r2, #4294967295
 8026688:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802668c:	f10a 0a01 	add.w	sl, sl, #1
 8026690:	9304      	str	r3, [sp, #16]
 8026692:	9307      	str	r3, [sp, #28]
 8026694:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026698:	931a      	str	r3, [sp, #104]	; 0x68
 802669a:	4654      	mov	r4, sl
 802669c:	2205      	movs	r2, #5
 802669e:	f814 1b01 	ldrb.w	r1, [r4], #1
 80266a2:	4854      	ldr	r0, [pc, #336]	; (80267f4 <_vfiprintf_r+0x220>)
 80266a4:	f7d9 fe1c 	bl	80002e0 <memchr>
 80266a8:	9a04      	ldr	r2, [sp, #16]
 80266aa:	b9d8      	cbnz	r0, 80266e4 <_vfiprintf_r+0x110>
 80266ac:	06d1      	lsls	r1, r2, #27
 80266ae:	bf44      	itt	mi
 80266b0:	2320      	movmi	r3, #32
 80266b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80266b6:	0713      	lsls	r3, r2, #28
 80266b8:	bf44      	itt	mi
 80266ba:	232b      	movmi	r3, #43	; 0x2b
 80266bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80266c0:	f89a 3000 	ldrb.w	r3, [sl]
 80266c4:	2b2a      	cmp	r3, #42	; 0x2a
 80266c6:	d015      	beq.n	80266f4 <_vfiprintf_r+0x120>
 80266c8:	9a07      	ldr	r2, [sp, #28]
 80266ca:	4654      	mov	r4, sl
 80266cc:	2000      	movs	r0, #0
 80266ce:	f04f 0c0a 	mov.w	ip, #10
 80266d2:	4621      	mov	r1, r4
 80266d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80266d8:	3b30      	subs	r3, #48	; 0x30
 80266da:	2b09      	cmp	r3, #9
 80266dc:	d94d      	bls.n	802677a <_vfiprintf_r+0x1a6>
 80266de:	b1b0      	cbz	r0, 802670e <_vfiprintf_r+0x13a>
 80266e0:	9207      	str	r2, [sp, #28]
 80266e2:	e014      	b.n	802670e <_vfiprintf_r+0x13a>
 80266e4:	eba0 0308 	sub.w	r3, r0, r8
 80266e8:	fa09 f303 	lsl.w	r3, r9, r3
 80266ec:	4313      	orrs	r3, r2
 80266ee:	9304      	str	r3, [sp, #16]
 80266f0:	46a2      	mov	sl, r4
 80266f2:	e7d2      	b.n	802669a <_vfiprintf_r+0xc6>
 80266f4:	9b03      	ldr	r3, [sp, #12]
 80266f6:	1d19      	adds	r1, r3, #4
 80266f8:	681b      	ldr	r3, [r3, #0]
 80266fa:	9103      	str	r1, [sp, #12]
 80266fc:	2b00      	cmp	r3, #0
 80266fe:	bfbb      	ittet	lt
 8026700:	425b      	neglt	r3, r3
 8026702:	f042 0202 	orrlt.w	r2, r2, #2
 8026706:	9307      	strge	r3, [sp, #28]
 8026708:	9307      	strlt	r3, [sp, #28]
 802670a:	bfb8      	it	lt
 802670c:	9204      	strlt	r2, [sp, #16]
 802670e:	7823      	ldrb	r3, [r4, #0]
 8026710:	2b2e      	cmp	r3, #46	; 0x2e
 8026712:	d10c      	bne.n	802672e <_vfiprintf_r+0x15a>
 8026714:	7863      	ldrb	r3, [r4, #1]
 8026716:	2b2a      	cmp	r3, #42	; 0x2a
 8026718:	d134      	bne.n	8026784 <_vfiprintf_r+0x1b0>
 802671a:	9b03      	ldr	r3, [sp, #12]
 802671c:	1d1a      	adds	r2, r3, #4
 802671e:	681b      	ldr	r3, [r3, #0]
 8026720:	9203      	str	r2, [sp, #12]
 8026722:	2b00      	cmp	r3, #0
 8026724:	bfb8      	it	lt
 8026726:	f04f 33ff 	movlt.w	r3, #4294967295
 802672a:	3402      	adds	r4, #2
 802672c:	9305      	str	r3, [sp, #20]
 802672e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8026804 <_vfiprintf_r+0x230>
 8026732:	7821      	ldrb	r1, [r4, #0]
 8026734:	2203      	movs	r2, #3
 8026736:	4650      	mov	r0, sl
 8026738:	f7d9 fdd2 	bl	80002e0 <memchr>
 802673c:	b138      	cbz	r0, 802674e <_vfiprintf_r+0x17a>
 802673e:	9b04      	ldr	r3, [sp, #16]
 8026740:	eba0 000a 	sub.w	r0, r0, sl
 8026744:	2240      	movs	r2, #64	; 0x40
 8026746:	4082      	lsls	r2, r0
 8026748:	4313      	orrs	r3, r2
 802674a:	3401      	adds	r4, #1
 802674c:	9304      	str	r3, [sp, #16]
 802674e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026752:	4829      	ldr	r0, [pc, #164]	; (80267f8 <_vfiprintf_r+0x224>)
 8026754:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026758:	2206      	movs	r2, #6
 802675a:	f7d9 fdc1 	bl	80002e0 <memchr>
 802675e:	2800      	cmp	r0, #0
 8026760:	d03f      	beq.n	80267e2 <_vfiprintf_r+0x20e>
 8026762:	4b26      	ldr	r3, [pc, #152]	; (80267fc <_vfiprintf_r+0x228>)
 8026764:	bb1b      	cbnz	r3, 80267ae <_vfiprintf_r+0x1da>
 8026766:	9b03      	ldr	r3, [sp, #12]
 8026768:	3307      	adds	r3, #7
 802676a:	f023 0307 	bic.w	r3, r3, #7
 802676e:	3308      	adds	r3, #8
 8026770:	9303      	str	r3, [sp, #12]
 8026772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026774:	443b      	add	r3, r7
 8026776:	9309      	str	r3, [sp, #36]	; 0x24
 8026778:	e768      	b.n	802664c <_vfiprintf_r+0x78>
 802677a:	fb0c 3202 	mla	r2, ip, r2, r3
 802677e:	460c      	mov	r4, r1
 8026780:	2001      	movs	r0, #1
 8026782:	e7a6      	b.n	80266d2 <_vfiprintf_r+0xfe>
 8026784:	2300      	movs	r3, #0
 8026786:	3401      	adds	r4, #1
 8026788:	9305      	str	r3, [sp, #20]
 802678a:	4619      	mov	r1, r3
 802678c:	f04f 0c0a 	mov.w	ip, #10
 8026790:	4620      	mov	r0, r4
 8026792:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026796:	3a30      	subs	r2, #48	; 0x30
 8026798:	2a09      	cmp	r2, #9
 802679a:	d903      	bls.n	80267a4 <_vfiprintf_r+0x1d0>
 802679c:	2b00      	cmp	r3, #0
 802679e:	d0c6      	beq.n	802672e <_vfiprintf_r+0x15a>
 80267a0:	9105      	str	r1, [sp, #20]
 80267a2:	e7c4      	b.n	802672e <_vfiprintf_r+0x15a>
 80267a4:	fb0c 2101 	mla	r1, ip, r1, r2
 80267a8:	4604      	mov	r4, r0
 80267aa:	2301      	movs	r3, #1
 80267ac:	e7f0      	b.n	8026790 <_vfiprintf_r+0x1bc>
 80267ae:	ab03      	add	r3, sp, #12
 80267b0:	9300      	str	r3, [sp, #0]
 80267b2:	462a      	mov	r2, r5
 80267b4:	4b12      	ldr	r3, [pc, #72]	; (8026800 <_vfiprintf_r+0x22c>)
 80267b6:	a904      	add	r1, sp, #16
 80267b8:	4630      	mov	r0, r6
 80267ba:	f3af 8000 	nop.w
 80267be:	4607      	mov	r7, r0
 80267c0:	1c78      	adds	r0, r7, #1
 80267c2:	d1d6      	bne.n	8026772 <_vfiprintf_r+0x19e>
 80267c4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80267c6:	07d9      	lsls	r1, r3, #31
 80267c8:	d405      	bmi.n	80267d6 <_vfiprintf_r+0x202>
 80267ca:	89ab      	ldrh	r3, [r5, #12]
 80267cc:	059a      	lsls	r2, r3, #22
 80267ce:	d402      	bmi.n	80267d6 <_vfiprintf_r+0x202>
 80267d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80267d2:	f7ff fe1b 	bl	802640c <__retarget_lock_release_recursive>
 80267d6:	89ab      	ldrh	r3, [r5, #12]
 80267d8:	065b      	lsls	r3, r3, #25
 80267da:	f53f af1d 	bmi.w	8026618 <_vfiprintf_r+0x44>
 80267de:	9809      	ldr	r0, [sp, #36]	; 0x24
 80267e0:	e71c      	b.n	802661c <_vfiprintf_r+0x48>
 80267e2:	ab03      	add	r3, sp, #12
 80267e4:	9300      	str	r3, [sp, #0]
 80267e6:	462a      	mov	r2, r5
 80267e8:	4b05      	ldr	r3, [pc, #20]	; (8026800 <_vfiprintf_r+0x22c>)
 80267ea:	a904      	add	r1, sp, #16
 80267ec:	4630      	mov	r0, r6
 80267ee:	f000 f879 	bl	80268e4 <_printf_i>
 80267f2:	e7e4      	b.n	80267be <_vfiprintf_r+0x1ea>
 80267f4:	08029304 	.word	0x08029304
 80267f8:	0802930e 	.word	0x0802930e
 80267fc:	00000000 	.word	0x00000000
 8026800:	080265af 	.word	0x080265af
 8026804:	0802930a 	.word	0x0802930a

08026808 <_printf_common>:
 8026808:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802680c:	4616      	mov	r6, r2
 802680e:	4699      	mov	r9, r3
 8026810:	688a      	ldr	r2, [r1, #8]
 8026812:	690b      	ldr	r3, [r1, #16]
 8026814:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8026818:	4293      	cmp	r3, r2
 802681a:	bfb8      	it	lt
 802681c:	4613      	movlt	r3, r2
 802681e:	6033      	str	r3, [r6, #0]
 8026820:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8026824:	4607      	mov	r7, r0
 8026826:	460c      	mov	r4, r1
 8026828:	b10a      	cbz	r2, 802682e <_printf_common+0x26>
 802682a:	3301      	adds	r3, #1
 802682c:	6033      	str	r3, [r6, #0]
 802682e:	6823      	ldr	r3, [r4, #0]
 8026830:	0699      	lsls	r1, r3, #26
 8026832:	bf42      	ittt	mi
 8026834:	6833      	ldrmi	r3, [r6, #0]
 8026836:	3302      	addmi	r3, #2
 8026838:	6033      	strmi	r3, [r6, #0]
 802683a:	6825      	ldr	r5, [r4, #0]
 802683c:	f015 0506 	ands.w	r5, r5, #6
 8026840:	d106      	bne.n	8026850 <_printf_common+0x48>
 8026842:	f104 0a19 	add.w	sl, r4, #25
 8026846:	68e3      	ldr	r3, [r4, #12]
 8026848:	6832      	ldr	r2, [r6, #0]
 802684a:	1a9b      	subs	r3, r3, r2
 802684c:	42ab      	cmp	r3, r5
 802684e:	dc26      	bgt.n	802689e <_printf_common+0x96>
 8026850:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026854:	1e13      	subs	r3, r2, #0
 8026856:	6822      	ldr	r2, [r4, #0]
 8026858:	bf18      	it	ne
 802685a:	2301      	movne	r3, #1
 802685c:	0692      	lsls	r2, r2, #26
 802685e:	d42b      	bmi.n	80268b8 <_printf_common+0xb0>
 8026860:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026864:	4649      	mov	r1, r9
 8026866:	4638      	mov	r0, r7
 8026868:	47c0      	blx	r8
 802686a:	3001      	adds	r0, #1
 802686c:	d01e      	beq.n	80268ac <_printf_common+0xa4>
 802686e:	6823      	ldr	r3, [r4, #0]
 8026870:	6922      	ldr	r2, [r4, #16]
 8026872:	f003 0306 	and.w	r3, r3, #6
 8026876:	2b04      	cmp	r3, #4
 8026878:	bf02      	ittt	eq
 802687a:	68e5      	ldreq	r5, [r4, #12]
 802687c:	6833      	ldreq	r3, [r6, #0]
 802687e:	1aed      	subeq	r5, r5, r3
 8026880:	68a3      	ldr	r3, [r4, #8]
 8026882:	bf0c      	ite	eq
 8026884:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026888:	2500      	movne	r5, #0
 802688a:	4293      	cmp	r3, r2
 802688c:	bfc4      	itt	gt
 802688e:	1a9b      	subgt	r3, r3, r2
 8026890:	18ed      	addgt	r5, r5, r3
 8026892:	2600      	movs	r6, #0
 8026894:	341a      	adds	r4, #26
 8026896:	42b5      	cmp	r5, r6
 8026898:	d11a      	bne.n	80268d0 <_printf_common+0xc8>
 802689a:	2000      	movs	r0, #0
 802689c:	e008      	b.n	80268b0 <_printf_common+0xa8>
 802689e:	2301      	movs	r3, #1
 80268a0:	4652      	mov	r2, sl
 80268a2:	4649      	mov	r1, r9
 80268a4:	4638      	mov	r0, r7
 80268a6:	47c0      	blx	r8
 80268a8:	3001      	adds	r0, #1
 80268aa:	d103      	bne.n	80268b4 <_printf_common+0xac>
 80268ac:	f04f 30ff 	mov.w	r0, #4294967295
 80268b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80268b4:	3501      	adds	r5, #1
 80268b6:	e7c6      	b.n	8026846 <_printf_common+0x3e>
 80268b8:	18e1      	adds	r1, r4, r3
 80268ba:	1c5a      	adds	r2, r3, #1
 80268bc:	2030      	movs	r0, #48	; 0x30
 80268be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80268c2:	4422      	add	r2, r4
 80268c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80268c8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80268cc:	3302      	adds	r3, #2
 80268ce:	e7c7      	b.n	8026860 <_printf_common+0x58>
 80268d0:	2301      	movs	r3, #1
 80268d2:	4622      	mov	r2, r4
 80268d4:	4649      	mov	r1, r9
 80268d6:	4638      	mov	r0, r7
 80268d8:	47c0      	blx	r8
 80268da:	3001      	adds	r0, #1
 80268dc:	d0e6      	beq.n	80268ac <_printf_common+0xa4>
 80268de:	3601      	adds	r6, #1
 80268e0:	e7d9      	b.n	8026896 <_printf_common+0x8e>
	...

080268e4 <_printf_i>:
 80268e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80268e8:	7e0f      	ldrb	r7, [r1, #24]
 80268ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80268ec:	2f78      	cmp	r7, #120	; 0x78
 80268ee:	4691      	mov	r9, r2
 80268f0:	4680      	mov	r8, r0
 80268f2:	460c      	mov	r4, r1
 80268f4:	469a      	mov	sl, r3
 80268f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80268fa:	d807      	bhi.n	802690c <_printf_i+0x28>
 80268fc:	2f62      	cmp	r7, #98	; 0x62
 80268fe:	d80a      	bhi.n	8026916 <_printf_i+0x32>
 8026900:	2f00      	cmp	r7, #0
 8026902:	f000 80d4 	beq.w	8026aae <_printf_i+0x1ca>
 8026906:	2f58      	cmp	r7, #88	; 0x58
 8026908:	f000 80c0 	beq.w	8026a8c <_printf_i+0x1a8>
 802690c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026910:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026914:	e03a      	b.n	802698c <_printf_i+0xa8>
 8026916:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802691a:	2b15      	cmp	r3, #21
 802691c:	d8f6      	bhi.n	802690c <_printf_i+0x28>
 802691e:	a101      	add	r1, pc, #4	; (adr r1, 8026924 <_printf_i+0x40>)
 8026920:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026924:	0802697d 	.word	0x0802697d
 8026928:	08026991 	.word	0x08026991
 802692c:	0802690d 	.word	0x0802690d
 8026930:	0802690d 	.word	0x0802690d
 8026934:	0802690d 	.word	0x0802690d
 8026938:	0802690d 	.word	0x0802690d
 802693c:	08026991 	.word	0x08026991
 8026940:	0802690d 	.word	0x0802690d
 8026944:	0802690d 	.word	0x0802690d
 8026948:	0802690d 	.word	0x0802690d
 802694c:	0802690d 	.word	0x0802690d
 8026950:	08026a95 	.word	0x08026a95
 8026954:	080269bd 	.word	0x080269bd
 8026958:	08026a4f 	.word	0x08026a4f
 802695c:	0802690d 	.word	0x0802690d
 8026960:	0802690d 	.word	0x0802690d
 8026964:	08026ab7 	.word	0x08026ab7
 8026968:	0802690d 	.word	0x0802690d
 802696c:	080269bd 	.word	0x080269bd
 8026970:	0802690d 	.word	0x0802690d
 8026974:	0802690d 	.word	0x0802690d
 8026978:	08026a57 	.word	0x08026a57
 802697c:	682b      	ldr	r3, [r5, #0]
 802697e:	1d1a      	adds	r2, r3, #4
 8026980:	681b      	ldr	r3, [r3, #0]
 8026982:	602a      	str	r2, [r5, #0]
 8026984:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026988:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802698c:	2301      	movs	r3, #1
 802698e:	e09f      	b.n	8026ad0 <_printf_i+0x1ec>
 8026990:	6820      	ldr	r0, [r4, #0]
 8026992:	682b      	ldr	r3, [r5, #0]
 8026994:	0607      	lsls	r7, r0, #24
 8026996:	f103 0104 	add.w	r1, r3, #4
 802699a:	6029      	str	r1, [r5, #0]
 802699c:	d501      	bpl.n	80269a2 <_printf_i+0xbe>
 802699e:	681e      	ldr	r6, [r3, #0]
 80269a0:	e003      	b.n	80269aa <_printf_i+0xc6>
 80269a2:	0646      	lsls	r6, r0, #25
 80269a4:	d5fb      	bpl.n	802699e <_printf_i+0xba>
 80269a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80269aa:	2e00      	cmp	r6, #0
 80269ac:	da03      	bge.n	80269b6 <_printf_i+0xd2>
 80269ae:	232d      	movs	r3, #45	; 0x2d
 80269b0:	4276      	negs	r6, r6
 80269b2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80269b6:	485a      	ldr	r0, [pc, #360]	; (8026b20 <_printf_i+0x23c>)
 80269b8:	230a      	movs	r3, #10
 80269ba:	e012      	b.n	80269e2 <_printf_i+0xfe>
 80269bc:	682b      	ldr	r3, [r5, #0]
 80269be:	6820      	ldr	r0, [r4, #0]
 80269c0:	1d19      	adds	r1, r3, #4
 80269c2:	6029      	str	r1, [r5, #0]
 80269c4:	0605      	lsls	r5, r0, #24
 80269c6:	d501      	bpl.n	80269cc <_printf_i+0xe8>
 80269c8:	681e      	ldr	r6, [r3, #0]
 80269ca:	e002      	b.n	80269d2 <_printf_i+0xee>
 80269cc:	0641      	lsls	r1, r0, #25
 80269ce:	d5fb      	bpl.n	80269c8 <_printf_i+0xe4>
 80269d0:	881e      	ldrh	r6, [r3, #0]
 80269d2:	4853      	ldr	r0, [pc, #332]	; (8026b20 <_printf_i+0x23c>)
 80269d4:	2f6f      	cmp	r7, #111	; 0x6f
 80269d6:	bf0c      	ite	eq
 80269d8:	2308      	moveq	r3, #8
 80269da:	230a      	movne	r3, #10
 80269dc:	2100      	movs	r1, #0
 80269de:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80269e2:	6865      	ldr	r5, [r4, #4]
 80269e4:	60a5      	str	r5, [r4, #8]
 80269e6:	2d00      	cmp	r5, #0
 80269e8:	bfa2      	ittt	ge
 80269ea:	6821      	ldrge	r1, [r4, #0]
 80269ec:	f021 0104 	bicge.w	r1, r1, #4
 80269f0:	6021      	strge	r1, [r4, #0]
 80269f2:	b90e      	cbnz	r6, 80269f8 <_printf_i+0x114>
 80269f4:	2d00      	cmp	r5, #0
 80269f6:	d04b      	beq.n	8026a90 <_printf_i+0x1ac>
 80269f8:	4615      	mov	r5, r2
 80269fa:	fbb6 f1f3 	udiv	r1, r6, r3
 80269fe:	fb03 6711 	mls	r7, r3, r1, r6
 8026a02:	5dc7      	ldrb	r7, [r0, r7]
 8026a04:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8026a08:	4637      	mov	r7, r6
 8026a0a:	42bb      	cmp	r3, r7
 8026a0c:	460e      	mov	r6, r1
 8026a0e:	d9f4      	bls.n	80269fa <_printf_i+0x116>
 8026a10:	2b08      	cmp	r3, #8
 8026a12:	d10b      	bne.n	8026a2c <_printf_i+0x148>
 8026a14:	6823      	ldr	r3, [r4, #0]
 8026a16:	07de      	lsls	r6, r3, #31
 8026a18:	d508      	bpl.n	8026a2c <_printf_i+0x148>
 8026a1a:	6923      	ldr	r3, [r4, #16]
 8026a1c:	6861      	ldr	r1, [r4, #4]
 8026a1e:	4299      	cmp	r1, r3
 8026a20:	bfde      	ittt	le
 8026a22:	2330      	movle	r3, #48	; 0x30
 8026a24:	f805 3c01 	strble.w	r3, [r5, #-1]
 8026a28:	f105 35ff 	addle.w	r5, r5, #4294967295
 8026a2c:	1b52      	subs	r2, r2, r5
 8026a2e:	6122      	str	r2, [r4, #16]
 8026a30:	f8cd a000 	str.w	sl, [sp]
 8026a34:	464b      	mov	r3, r9
 8026a36:	aa03      	add	r2, sp, #12
 8026a38:	4621      	mov	r1, r4
 8026a3a:	4640      	mov	r0, r8
 8026a3c:	f7ff fee4 	bl	8026808 <_printf_common>
 8026a40:	3001      	adds	r0, #1
 8026a42:	d14a      	bne.n	8026ada <_printf_i+0x1f6>
 8026a44:	f04f 30ff 	mov.w	r0, #4294967295
 8026a48:	b004      	add	sp, #16
 8026a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026a4e:	6823      	ldr	r3, [r4, #0]
 8026a50:	f043 0320 	orr.w	r3, r3, #32
 8026a54:	6023      	str	r3, [r4, #0]
 8026a56:	4833      	ldr	r0, [pc, #204]	; (8026b24 <_printf_i+0x240>)
 8026a58:	2778      	movs	r7, #120	; 0x78
 8026a5a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8026a5e:	6823      	ldr	r3, [r4, #0]
 8026a60:	6829      	ldr	r1, [r5, #0]
 8026a62:	061f      	lsls	r7, r3, #24
 8026a64:	f851 6b04 	ldr.w	r6, [r1], #4
 8026a68:	d402      	bmi.n	8026a70 <_printf_i+0x18c>
 8026a6a:	065f      	lsls	r7, r3, #25
 8026a6c:	bf48      	it	mi
 8026a6e:	b2b6      	uxthmi	r6, r6
 8026a70:	07df      	lsls	r7, r3, #31
 8026a72:	bf48      	it	mi
 8026a74:	f043 0320 	orrmi.w	r3, r3, #32
 8026a78:	6029      	str	r1, [r5, #0]
 8026a7a:	bf48      	it	mi
 8026a7c:	6023      	strmi	r3, [r4, #0]
 8026a7e:	b91e      	cbnz	r6, 8026a88 <_printf_i+0x1a4>
 8026a80:	6823      	ldr	r3, [r4, #0]
 8026a82:	f023 0320 	bic.w	r3, r3, #32
 8026a86:	6023      	str	r3, [r4, #0]
 8026a88:	2310      	movs	r3, #16
 8026a8a:	e7a7      	b.n	80269dc <_printf_i+0xf8>
 8026a8c:	4824      	ldr	r0, [pc, #144]	; (8026b20 <_printf_i+0x23c>)
 8026a8e:	e7e4      	b.n	8026a5a <_printf_i+0x176>
 8026a90:	4615      	mov	r5, r2
 8026a92:	e7bd      	b.n	8026a10 <_printf_i+0x12c>
 8026a94:	682b      	ldr	r3, [r5, #0]
 8026a96:	6826      	ldr	r6, [r4, #0]
 8026a98:	6961      	ldr	r1, [r4, #20]
 8026a9a:	1d18      	adds	r0, r3, #4
 8026a9c:	6028      	str	r0, [r5, #0]
 8026a9e:	0635      	lsls	r5, r6, #24
 8026aa0:	681b      	ldr	r3, [r3, #0]
 8026aa2:	d501      	bpl.n	8026aa8 <_printf_i+0x1c4>
 8026aa4:	6019      	str	r1, [r3, #0]
 8026aa6:	e002      	b.n	8026aae <_printf_i+0x1ca>
 8026aa8:	0670      	lsls	r0, r6, #25
 8026aaa:	d5fb      	bpl.n	8026aa4 <_printf_i+0x1c0>
 8026aac:	8019      	strh	r1, [r3, #0]
 8026aae:	2300      	movs	r3, #0
 8026ab0:	6123      	str	r3, [r4, #16]
 8026ab2:	4615      	mov	r5, r2
 8026ab4:	e7bc      	b.n	8026a30 <_printf_i+0x14c>
 8026ab6:	682b      	ldr	r3, [r5, #0]
 8026ab8:	1d1a      	adds	r2, r3, #4
 8026aba:	602a      	str	r2, [r5, #0]
 8026abc:	681d      	ldr	r5, [r3, #0]
 8026abe:	6862      	ldr	r2, [r4, #4]
 8026ac0:	2100      	movs	r1, #0
 8026ac2:	4628      	mov	r0, r5
 8026ac4:	f7d9 fc0c 	bl	80002e0 <memchr>
 8026ac8:	b108      	cbz	r0, 8026ace <_printf_i+0x1ea>
 8026aca:	1b40      	subs	r0, r0, r5
 8026acc:	6060      	str	r0, [r4, #4]
 8026ace:	6863      	ldr	r3, [r4, #4]
 8026ad0:	6123      	str	r3, [r4, #16]
 8026ad2:	2300      	movs	r3, #0
 8026ad4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026ad8:	e7aa      	b.n	8026a30 <_printf_i+0x14c>
 8026ada:	6923      	ldr	r3, [r4, #16]
 8026adc:	462a      	mov	r2, r5
 8026ade:	4649      	mov	r1, r9
 8026ae0:	4640      	mov	r0, r8
 8026ae2:	47d0      	blx	sl
 8026ae4:	3001      	adds	r0, #1
 8026ae6:	d0ad      	beq.n	8026a44 <_printf_i+0x160>
 8026ae8:	6823      	ldr	r3, [r4, #0]
 8026aea:	079b      	lsls	r3, r3, #30
 8026aec:	d413      	bmi.n	8026b16 <_printf_i+0x232>
 8026aee:	68e0      	ldr	r0, [r4, #12]
 8026af0:	9b03      	ldr	r3, [sp, #12]
 8026af2:	4298      	cmp	r0, r3
 8026af4:	bfb8      	it	lt
 8026af6:	4618      	movlt	r0, r3
 8026af8:	e7a6      	b.n	8026a48 <_printf_i+0x164>
 8026afa:	2301      	movs	r3, #1
 8026afc:	4632      	mov	r2, r6
 8026afe:	4649      	mov	r1, r9
 8026b00:	4640      	mov	r0, r8
 8026b02:	47d0      	blx	sl
 8026b04:	3001      	adds	r0, #1
 8026b06:	d09d      	beq.n	8026a44 <_printf_i+0x160>
 8026b08:	3501      	adds	r5, #1
 8026b0a:	68e3      	ldr	r3, [r4, #12]
 8026b0c:	9903      	ldr	r1, [sp, #12]
 8026b0e:	1a5b      	subs	r3, r3, r1
 8026b10:	42ab      	cmp	r3, r5
 8026b12:	dcf2      	bgt.n	8026afa <_printf_i+0x216>
 8026b14:	e7eb      	b.n	8026aee <_printf_i+0x20a>
 8026b16:	2500      	movs	r5, #0
 8026b18:	f104 0619 	add.w	r6, r4, #25
 8026b1c:	e7f5      	b.n	8026b0a <_printf_i+0x226>
 8026b1e:	bf00      	nop
 8026b20:	08029315 	.word	0x08029315
 8026b24:	08029326 	.word	0x08029326

08026b28 <__sflush_r>:
 8026b28:	898a      	ldrh	r2, [r1, #12]
 8026b2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026b2e:	4605      	mov	r5, r0
 8026b30:	0710      	lsls	r0, r2, #28
 8026b32:	460c      	mov	r4, r1
 8026b34:	d458      	bmi.n	8026be8 <__sflush_r+0xc0>
 8026b36:	684b      	ldr	r3, [r1, #4]
 8026b38:	2b00      	cmp	r3, #0
 8026b3a:	dc05      	bgt.n	8026b48 <__sflush_r+0x20>
 8026b3c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8026b3e:	2b00      	cmp	r3, #0
 8026b40:	dc02      	bgt.n	8026b48 <__sflush_r+0x20>
 8026b42:	2000      	movs	r0, #0
 8026b44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026b48:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026b4a:	2e00      	cmp	r6, #0
 8026b4c:	d0f9      	beq.n	8026b42 <__sflush_r+0x1a>
 8026b4e:	2300      	movs	r3, #0
 8026b50:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026b54:	682f      	ldr	r7, [r5, #0]
 8026b56:	6a21      	ldr	r1, [r4, #32]
 8026b58:	602b      	str	r3, [r5, #0]
 8026b5a:	d032      	beq.n	8026bc2 <__sflush_r+0x9a>
 8026b5c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8026b5e:	89a3      	ldrh	r3, [r4, #12]
 8026b60:	075a      	lsls	r2, r3, #29
 8026b62:	d505      	bpl.n	8026b70 <__sflush_r+0x48>
 8026b64:	6863      	ldr	r3, [r4, #4]
 8026b66:	1ac0      	subs	r0, r0, r3
 8026b68:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8026b6a:	b10b      	cbz	r3, 8026b70 <__sflush_r+0x48>
 8026b6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026b6e:	1ac0      	subs	r0, r0, r3
 8026b70:	2300      	movs	r3, #0
 8026b72:	4602      	mov	r2, r0
 8026b74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026b76:	6a21      	ldr	r1, [r4, #32]
 8026b78:	4628      	mov	r0, r5
 8026b7a:	47b0      	blx	r6
 8026b7c:	1c43      	adds	r3, r0, #1
 8026b7e:	89a3      	ldrh	r3, [r4, #12]
 8026b80:	d106      	bne.n	8026b90 <__sflush_r+0x68>
 8026b82:	6829      	ldr	r1, [r5, #0]
 8026b84:	291d      	cmp	r1, #29
 8026b86:	d82b      	bhi.n	8026be0 <__sflush_r+0xb8>
 8026b88:	4a29      	ldr	r2, [pc, #164]	; (8026c30 <__sflush_r+0x108>)
 8026b8a:	410a      	asrs	r2, r1
 8026b8c:	07d6      	lsls	r6, r2, #31
 8026b8e:	d427      	bmi.n	8026be0 <__sflush_r+0xb8>
 8026b90:	2200      	movs	r2, #0
 8026b92:	6062      	str	r2, [r4, #4]
 8026b94:	04d9      	lsls	r1, r3, #19
 8026b96:	6922      	ldr	r2, [r4, #16]
 8026b98:	6022      	str	r2, [r4, #0]
 8026b9a:	d504      	bpl.n	8026ba6 <__sflush_r+0x7e>
 8026b9c:	1c42      	adds	r2, r0, #1
 8026b9e:	d101      	bne.n	8026ba4 <__sflush_r+0x7c>
 8026ba0:	682b      	ldr	r3, [r5, #0]
 8026ba2:	b903      	cbnz	r3, 8026ba6 <__sflush_r+0x7e>
 8026ba4:	6560      	str	r0, [r4, #84]	; 0x54
 8026ba6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026ba8:	602f      	str	r7, [r5, #0]
 8026baa:	2900      	cmp	r1, #0
 8026bac:	d0c9      	beq.n	8026b42 <__sflush_r+0x1a>
 8026bae:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026bb2:	4299      	cmp	r1, r3
 8026bb4:	d002      	beq.n	8026bbc <__sflush_r+0x94>
 8026bb6:	4628      	mov	r0, r5
 8026bb8:	f7ff fc96 	bl	80264e8 <_free_r>
 8026bbc:	2000      	movs	r0, #0
 8026bbe:	6360      	str	r0, [r4, #52]	; 0x34
 8026bc0:	e7c0      	b.n	8026b44 <__sflush_r+0x1c>
 8026bc2:	2301      	movs	r3, #1
 8026bc4:	4628      	mov	r0, r5
 8026bc6:	47b0      	blx	r6
 8026bc8:	1c41      	adds	r1, r0, #1
 8026bca:	d1c8      	bne.n	8026b5e <__sflush_r+0x36>
 8026bcc:	682b      	ldr	r3, [r5, #0]
 8026bce:	2b00      	cmp	r3, #0
 8026bd0:	d0c5      	beq.n	8026b5e <__sflush_r+0x36>
 8026bd2:	2b1d      	cmp	r3, #29
 8026bd4:	d001      	beq.n	8026bda <__sflush_r+0xb2>
 8026bd6:	2b16      	cmp	r3, #22
 8026bd8:	d101      	bne.n	8026bde <__sflush_r+0xb6>
 8026bda:	602f      	str	r7, [r5, #0]
 8026bdc:	e7b1      	b.n	8026b42 <__sflush_r+0x1a>
 8026bde:	89a3      	ldrh	r3, [r4, #12]
 8026be0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026be4:	81a3      	strh	r3, [r4, #12]
 8026be6:	e7ad      	b.n	8026b44 <__sflush_r+0x1c>
 8026be8:	690f      	ldr	r7, [r1, #16]
 8026bea:	2f00      	cmp	r7, #0
 8026bec:	d0a9      	beq.n	8026b42 <__sflush_r+0x1a>
 8026bee:	0793      	lsls	r3, r2, #30
 8026bf0:	680e      	ldr	r6, [r1, #0]
 8026bf2:	bf08      	it	eq
 8026bf4:	694b      	ldreq	r3, [r1, #20]
 8026bf6:	600f      	str	r7, [r1, #0]
 8026bf8:	bf18      	it	ne
 8026bfa:	2300      	movne	r3, #0
 8026bfc:	eba6 0807 	sub.w	r8, r6, r7
 8026c00:	608b      	str	r3, [r1, #8]
 8026c02:	f1b8 0f00 	cmp.w	r8, #0
 8026c06:	dd9c      	ble.n	8026b42 <__sflush_r+0x1a>
 8026c08:	6a21      	ldr	r1, [r4, #32]
 8026c0a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8026c0c:	4643      	mov	r3, r8
 8026c0e:	463a      	mov	r2, r7
 8026c10:	4628      	mov	r0, r5
 8026c12:	47b0      	blx	r6
 8026c14:	2800      	cmp	r0, #0
 8026c16:	dc06      	bgt.n	8026c26 <__sflush_r+0xfe>
 8026c18:	89a3      	ldrh	r3, [r4, #12]
 8026c1a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026c1e:	81a3      	strh	r3, [r4, #12]
 8026c20:	f04f 30ff 	mov.w	r0, #4294967295
 8026c24:	e78e      	b.n	8026b44 <__sflush_r+0x1c>
 8026c26:	4407      	add	r7, r0
 8026c28:	eba8 0800 	sub.w	r8, r8, r0
 8026c2c:	e7e9      	b.n	8026c02 <__sflush_r+0xda>
 8026c2e:	bf00      	nop
 8026c30:	dfbffffe 	.word	0xdfbffffe

08026c34 <_fflush_r>:
 8026c34:	b538      	push	{r3, r4, r5, lr}
 8026c36:	690b      	ldr	r3, [r1, #16]
 8026c38:	4605      	mov	r5, r0
 8026c3a:	460c      	mov	r4, r1
 8026c3c:	b913      	cbnz	r3, 8026c44 <_fflush_r+0x10>
 8026c3e:	2500      	movs	r5, #0
 8026c40:	4628      	mov	r0, r5
 8026c42:	bd38      	pop	{r3, r4, r5, pc}
 8026c44:	b118      	cbz	r0, 8026c4e <_fflush_r+0x1a>
 8026c46:	6a03      	ldr	r3, [r0, #32]
 8026c48:	b90b      	cbnz	r3, 8026c4e <_fflush_r+0x1a>
 8026c4a:	f7ff fa85 	bl	8026158 <__sinit>
 8026c4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026c52:	2b00      	cmp	r3, #0
 8026c54:	d0f3      	beq.n	8026c3e <_fflush_r+0xa>
 8026c56:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8026c58:	07d0      	lsls	r0, r2, #31
 8026c5a:	d404      	bmi.n	8026c66 <_fflush_r+0x32>
 8026c5c:	0599      	lsls	r1, r3, #22
 8026c5e:	d402      	bmi.n	8026c66 <_fflush_r+0x32>
 8026c60:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026c62:	f7ff fbd2 	bl	802640a <__retarget_lock_acquire_recursive>
 8026c66:	4628      	mov	r0, r5
 8026c68:	4621      	mov	r1, r4
 8026c6a:	f7ff ff5d 	bl	8026b28 <__sflush_r>
 8026c6e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8026c70:	07da      	lsls	r2, r3, #31
 8026c72:	4605      	mov	r5, r0
 8026c74:	d4e4      	bmi.n	8026c40 <_fflush_r+0xc>
 8026c76:	89a3      	ldrh	r3, [r4, #12]
 8026c78:	059b      	lsls	r3, r3, #22
 8026c7a:	d4e1      	bmi.n	8026c40 <_fflush_r+0xc>
 8026c7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8026c7e:	f7ff fbc5 	bl	802640c <__retarget_lock_release_recursive>
 8026c82:	e7dd      	b.n	8026c40 <_fflush_r+0xc>

08026c84 <__swbuf_r>:
 8026c84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026c86:	460e      	mov	r6, r1
 8026c88:	4614      	mov	r4, r2
 8026c8a:	4605      	mov	r5, r0
 8026c8c:	b118      	cbz	r0, 8026c96 <__swbuf_r+0x12>
 8026c8e:	6a03      	ldr	r3, [r0, #32]
 8026c90:	b90b      	cbnz	r3, 8026c96 <__swbuf_r+0x12>
 8026c92:	f7ff fa61 	bl	8026158 <__sinit>
 8026c96:	69a3      	ldr	r3, [r4, #24]
 8026c98:	60a3      	str	r3, [r4, #8]
 8026c9a:	89a3      	ldrh	r3, [r4, #12]
 8026c9c:	071a      	lsls	r2, r3, #28
 8026c9e:	d525      	bpl.n	8026cec <__swbuf_r+0x68>
 8026ca0:	6923      	ldr	r3, [r4, #16]
 8026ca2:	b31b      	cbz	r3, 8026cec <__swbuf_r+0x68>
 8026ca4:	6823      	ldr	r3, [r4, #0]
 8026ca6:	6922      	ldr	r2, [r4, #16]
 8026ca8:	1a98      	subs	r0, r3, r2
 8026caa:	6963      	ldr	r3, [r4, #20]
 8026cac:	b2f6      	uxtb	r6, r6
 8026cae:	4283      	cmp	r3, r0
 8026cb0:	4637      	mov	r7, r6
 8026cb2:	dc04      	bgt.n	8026cbe <__swbuf_r+0x3a>
 8026cb4:	4621      	mov	r1, r4
 8026cb6:	4628      	mov	r0, r5
 8026cb8:	f7ff ffbc 	bl	8026c34 <_fflush_r>
 8026cbc:	b9e0      	cbnz	r0, 8026cf8 <__swbuf_r+0x74>
 8026cbe:	68a3      	ldr	r3, [r4, #8]
 8026cc0:	3b01      	subs	r3, #1
 8026cc2:	60a3      	str	r3, [r4, #8]
 8026cc4:	6823      	ldr	r3, [r4, #0]
 8026cc6:	1c5a      	adds	r2, r3, #1
 8026cc8:	6022      	str	r2, [r4, #0]
 8026cca:	701e      	strb	r6, [r3, #0]
 8026ccc:	6962      	ldr	r2, [r4, #20]
 8026cce:	1c43      	adds	r3, r0, #1
 8026cd0:	429a      	cmp	r2, r3
 8026cd2:	d004      	beq.n	8026cde <__swbuf_r+0x5a>
 8026cd4:	89a3      	ldrh	r3, [r4, #12]
 8026cd6:	07db      	lsls	r3, r3, #31
 8026cd8:	d506      	bpl.n	8026ce8 <__swbuf_r+0x64>
 8026cda:	2e0a      	cmp	r6, #10
 8026cdc:	d104      	bne.n	8026ce8 <__swbuf_r+0x64>
 8026cde:	4621      	mov	r1, r4
 8026ce0:	4628      	mov	r0, r5
 8026ce2:	f7ff ffa7 	bl	8026c34 <_fflush_r>
 8026ce6:	b938      	cbnz	r0, 8026cf8 <__swbuf_r+0x74>
 8026ce8:	4638      	mov	r0, r7
 8026cea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026cec:	4621      	mov	r1, r4
 8026cee:	4628      	mov	r0, r5
 8026cf0:	f000 f806 	bl	8026d00 <__swsetup_r>
 8026cf4:	2800      	cmp	r0, #0
 8026cf6:	d0d5      	beq.n	8026ca4 <__swbuf_r+0x20>
 8026cf8:	f04f 37ff 	mov.w	r7, #4294967295
 8026cfc:	e7f4      	b.n	8026ce8 <__swbuf_r+0x64>
	...

08026d00 <__swsetup_r>:
 8026d00:	b538      	push	{r3, r4, r5, lr}
 8026d02:	4b2a      	ldr	r3, [pc, #168]	; (8026dac <__swsetup_r+0xac>)
 8026d04:	4605      	mov	r5, r0
 8026d06:	6818      	ldr	r0, [r3, #0]
 8026d08:	460c      	mov	r4, r1
 8026d0a:	b118      	cbz	r0, 8026d14 <__swsetup_r+0x14>
 8026d0c:	6a03      	ldr	r3, [r0, #32]
 8026d0e:	b90b      	cbnz	r3, 8026d14 <__swsetup_r+0x14>
 8026d10:	f7ff fa22 	bl	8026158 <__sinit>
 8026d14:	89a3      	ldrh	r3, [r4, #12]
 8026d16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026d1a:	0718      	lsls	r0, r3, #28
 8026d1c:	d422      	bmi.n	8026d64 <__swsetup_r+0x64>
 8026d1e:	06d9      	lsls	r1, r3, #27
 8026d20:	d407      	bmi.n	8026d32 <__swsetup_r+0x32>
 8026d22:	2309      	movs	r3, #9
 8026d24:	602b      	str	r3, [r5, #0]
 8026d26:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8026d2a:	81a3      	strh	r3, [r4, #12]
 8026d2c:	f04f 30ff 	mov.w	r0, #4294967295
 8026d30:	e034      	b.n	8026d9c <__swsetup_r+0x9c>
 8026d32:	0758      	lsls	r0, r3, #29
 8026d34:	d512      	bpl.n	8026d5c <__swsetup_r+0x5c>
 8026d36:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026d38:	b141      	cbz	r1, 8026d4c <__swsetup_r+0x4c>
 8026d3a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026d3e:	4299      	cmp	r1, r3
 8026d40:	d002      	beq.n	8026d48 <__swsetup_r+0x48>
 8026d42:	4628      	mov	r0, r5
 8026d44:	f7ff fbd0 	bl	80264e8 <_free_r>
 8026d48:	2300      	movs	r3, #0
 8026d4a:	6363      	str	r3, [r4, #52]	; 0x34
 8026d4c:	89a3      	ldrh	r3, [r4, #12]
 8026d4e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026d52:	81a3      	strh	r3, [r4, #12]
 8026d54:	2300      	movs	r3, #0
 8026d56:	6063      	str	r3, [r4, #4]
 8026d58:	6923      	ldr	r3, [r4, #16]
 8026d5a:	6023      	str	r3, [r4, #0]
 8026d5c:	89a3      	ldrh	r3, [r4, #12]
 8026d5e:	f043 0308 	orr.w	r3, r3, #8
 8026d62:	81a3      	strh	r3, [r4, #12]
 8026d64:	6923      	ldr	r3, [r4, #16]
 8026d66:	b94b      	cbnz	r3, 8026d7c <__swsetup_r+0x7c>
 8026d68:	89a3      	ldrh	r3, [r4, #12]
 8026d6a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8026d6e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8026d72:	d003      	beq.n	8026d7c <__swsetup_r+0x7c>
 8026d74:	4621      	mov	r1, r4
 8026d76:	4628      	mov	r0, r5
 8026d78:	f000 f840 	bl	8026dfc <__smakebuf_r>
 8026d7c:	89a0      	ldrh	r0, [r4, #12]
 8026d7e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026d82:	f010 0301 	ands.w	r3, r0, #1
 8026d86:	d00a      	beq.n	8026d9e <__swsetup_r+0x9e>
 8026d88:	2300      	movs	r3, #0
 8026d8a:	60a3      	str	r3, [r4, #8]
 8026d8c:	6963      	ldr	r3, [r4, #20]
 8026d8e:	425b      	negs	r3, r3
 8026d90:	61a3      	str	r3, [r4, #24]
 8026d92:	6923      	ldr	r3, [r4, #16]
 8026d94:	b943      	cbnz	r3, 8026da8 <__swsetup_r+0xa8>
 8026d96:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8026d9a:	d1c4      	bne.n	8026d26 <__swsetup_r+0x26>
 8026d9c:	bd38      	pop	{r3, r4, r5, pc}
 8026d9e:	0781      	lsls	r1, r0, #30
 8026da0:	bf58      	it	pl
 8026da2:	6963      	ldrpl	r3, [r4, #20]
 8026da4:	60a3      	str	r3, [r4, #8]
 8026da6:	e7f4      	b.n	8026d92 <__swsetup_r+0x92>
 8026da8:	2000      	movs	r0, #0
 8026daa:	e7f7      	b.n	8026d9c <__swsetup_r+0x9c>
 8026dac:	240000f4 	.word	0x240000f4

08026db0 <__swhatbuf_r>:
 8026db0:	b570      	push	{r4, r5, r6, lr}
 8026db2:	460c      	mov	r4, r1
 8026db4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026db8:	2900      	cmp	r1, #0
 8026dba:	b096      	sub	sp, #88	; 0x58
 8026dbc:	4615      	mov	r5, r2
 8026dbe:	461e      	mov	r6, r3
 8026dc0:	da0d      	bge.n	8026dde <__swhatbuf_r+0x2e>
 8026dc2:	89a3      	ldrh	r3, [r4, #12]
 8026dc4:	f013 0f80 	tst.w	r3, #128	; 0x80
 8026dc8:	f04f 0100 	mov.w	r1, #0
 8026dcc:	bf0c      	ite	eq
 8026dce:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8026dd2:	2340      	movne	r3, #64	; 0x40
 8026dd4:	2000      	movs	r0, #0
 8026dd6:	6031      	str	r1, [r6, #0]
 8026dd8:	602b      	str	r3, [r5, #0]
 8026dda:	b016      	add	sp, #88	; 0x58
 8026ddc:	bd70      	pop	{r4, r5, r6, pc}
 8026dde:	466a      	mov	r2, sp
 8026de0:	f000 f848 	bl	8026e74 <_fstat_r>
 8026de4:	2800      	cmp	r0, #0
 8026de6:	dbec      	blt.n	8026dc2 <__swhatbuf_r+0x12>
 8026de8:	9901      	ldr	r1, [sp, #4]
 8026dea:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8026dee:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8026df2:	4259      	negs	r1, r3
 8026df4:	4159      	adcs	r1, r3
 8026df6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8026dfa:	e7eb      	b.n	8026dd4 <__swhatbuf_r+0x24>

08026dfc <__smakebuf_r>:
 8026dfc:	898b      	ldrh	r3, [r1, #12]
 8026dfe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026e00:	079d      	lsls	r5, r3, #30
 8026e02:	4606      	mov	r6, r0
 8026e04:	460c      	mov	r4, r1
 8026e06:	d507      	bpl.n	8026e18 <__smakebuf_r+0x1c>
 8026e08:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8026e0c:	6023      	str	r3, [r4, #0]
 8026e0e:	6123      	str	r3, [r4, #16]
 8026e10:	2301      	movs	r3, #1
 8026e12:	6163      	str	r3, [r4, #20]
 8026e14:	b002      	add	sp, #8
 8026e16:	bd70      	pop	{r4, r5, r6, pc}
 8026e18:	ab01      	add	r3, sp, #4
 8026e1a:	466a      	mov	r2, sp
 8026e1c:	f7ff ffc8 	bl	8026db0 <__swhatbuf_r>
 8026e20:	9900      	ldr	r1, [sp, #0]
 8026e22:	4605      	mov	r5, r0
 8026e24:	4630      	mov	r0, r6
 8026e26:	f7ff f871 	bl	8025f0c <_malloc_r>
 8026e2a:	b948      	cbnz	r0, 8026e40 <__smakebuf_r+0x44>
 8026e2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026e30:	059a      	lsls	r2, r3, #22
 8026e32:	d4ef      	bmi.n	8026e14 <__smakebuf_r+0x18>
 8026e34:	f023 0303 	bic.w	r3, r3, #3
 8026e38:	f043 0302 	orr.w	r3, r3, #2
 8026e3c:	81a3      	strh	r3, [r4, #12]
 8026e3e:	e7e3      	b.n	8026e08 <__smakebuf_r+0xc>
 8026e40:	89a3      	ldrh	r3, [r4, #12]
 8026e42:	6020      	str	r0, [r4, #0]
 8026e44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8026e48:	81a3      	strh	r3, [r4, #12]
 8026e4a:	9b00      	ldr	r3, [sp, #0]
 8026e4c:	6163      	str	r3, [r4, #20]
 8026e4e:	9b01      	ldr	r3, [sp, #4]
 8026e50:	6120      	str	r0, [r4, #16]
 8026e52:	b15b      	cbz	r3, 8026e6c <__smakebuf_r+0x70>
 8026e54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026e58:	4630      	mov	r0, r6
 8026e5a:	f000 f81d 	bl	8026e98 <_isatty_r>
 8026e5e:	b128      	cbz	r0, 8026e6c <__smakebuf_r+0x70>
 8026e60:	89a3      	ldrh	r3, [r4, #12]
 8026e62:	f023 0303 	bic.w	r3, r3, #3
 8026e66:	f043 0301 	orr.w	r3, r3, #1
 8026e6a:	81a3      	strh	r3, [r4, #12]
 8026e6c:	89a3      	ldrh	r3, [r4, #12]
 8026e6e:	431d      	orrs	r5, r3
 8026e70:	81a5      	strh	r5, [r4, #12]
 8026e72:	e7cf      	b.n	8026e14 <__smakebuf_r+0x18>

08026e74 <_fstat_r>:
 8026e74:	b538      	push	{r3, r4, r5, lr}
 8026e76:	4d07      	ldr	r5, [pc, #28]	; (8026e94 <_fstat_r+0x20>)
 8026e78:	2300      	movs	r3, #0
 8026e7a:	4604      	mov	r4, r0
 8026e7c:	4608      	mov	r0, r1
 8026e7e:	4611      	mov	r1, r2
 8026e80:	602b      	str	r3, [r5, #0]
 8026e82:	f7da f96a 	bl	800115a <_fstat>
 8026e86:	1c43      	adds	r3, r0, #1
 8026e88:	d102      	bne.n	8026e90 <_fstat_r+0x1c>
 8026e8a:	682b      	ldr	r3, [r5, #0]
 8026e8c:	b103      	cbz	r3, 8026e90 <_fstat_r+0x1c>
 8026e8e:	6023      	str	r3, [r4, #0]
 8026e90:	bd38      	pop	{r3, r4, r5, pc}
 8026e92:	bf00      	nop
 8026e94:	240054e0 	.word	0x240054e0

08026e98 <_isatty_r>:
 8026e98:	b538      	push	{r3, r4, r5, lr}
 8026e9a:	4d06      	ldr	r5, [pc, #24]	; (8026eb4 <_isatty_r+0x1c>)
 8026e9c:	2300      	movs	r3, #0
 8026e9e:	4604      	mov	r4, r0
 8026ea0:	4608      	mov	r0, r1
 8026ea2:	602b      	str	r3, [r5, #0]
 8026ea4:	f7da f969 	bl	800117a <_isatty>
 8026ea8:	1c43      	adds	r3, r0, #1
 8026eaa:	d102      	bne.n	8026eb2 <_isatty_r+0x1a>
 8026eac:	682b      	ldr	r3, [r5, #0]
 8026eae:	b103      	cbz	r3, 8026eb2 <_isatty_r+0x1a>
 8026eb0:	6023      	str	r3, [r4, #0]
 8026eb2:	bd38      	pop	{r3, r4, r5, pc}
 8026eb4:	240054e0 	.word	0x240054e0

08026eb8 <_init>:
 8026eb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026eba:	bf00      	nop
 8026ebc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026ebe:	bc08      	pop	{r3}
 8026ec0:	469e      	mov	lr, r3
 8026ec2:	4770      	bx	lr

08026ec4 <_fini>:
 8026ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026ec6:	bf00      	nop
 8026ec8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026eca:	bc08      	pop	{r3}
 8026ecc:	469e      	mov	lr, r3
 8026ece:	4770      	bx	lr
